

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec  1 18:57:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=4,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	text147,global,reloc=4,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   176                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   177                           	psect	text150,global,reloc=4,class=CODE,delta=1
   178                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   179                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   180  0000                     
   181                           ; Version 2.10
   182                           ; Generated 31/07/2019 GMT
   183                           ; 
   184                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   185                           ; All rights reserved.
   186                           ; 
   187                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   188                           ; 
   189                           ; Redistribution and use in source and binary forms, with or without modification, are
   190                           ; permitted provided that the following conditions are met:
   191                           ; 
   192                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   193                           ;        conditions and the following disclaimer.
   194                           ; 
   195                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   196                           ;        of conditions and the following disclaimer in the documentation and/or other
   197                           ;        materials provided with the distribution.
   198                           ; 
   199                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   200                           ;        software without specific prior written permission.
   201                           ; 
   202                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   203                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   204                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   205                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   206                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   207                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   208                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   209                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   210                           ; 
   211                           ; 
   212                           ; Code-generator required, PIC18F57K42 Definitions
   213                           ; 
   214                           ; SFR Addresses
   215  0000                     
   216 ;;_k	offset	0
   217 ;;_j	offset	1
   218 ;;_i	offset	2
   219 ;;_inp_index	offset	3
   220 ;;_mode	offset	4
   221 ;;_channel	offset=-1 (param)
   222 ;;_s	offset=-2 (param)
   223 ;;_cmd	offset=-1 (param)
   224 ;;_cmd	offset=-1 (param)
   225 ;;_data	offset=-1 (param)
   226 ;;__this	offset=-2 (param)
   227 ;;_h	offset=-1 (param)
   228 ;;_h	offset=-1 (param)
   229 ;;_i	offset=-1 (param)
   230 ;;_cmd	offset=-1 (param)
   231 ;;_i	offset	0
   232 ;;_chan	offset=-1 (param)
   233 ;;_to_what	offset=-2 (param)
   234 ;;_u	offset	0
   235 ;;_s	offset=-2 (param)
   236 ;;_index	offset=-1 (param)
   237 ;;_arg	offset	0
   238 ;;_exp	offset	4
   239 ;;_sign	offset=-1 (param)
   240 ;;_val	offset=-5 (param)
   241 ;;_h	offset=-1 (param)
   242 ;;_estatus	offset	0
   243 ;;_flipper	offset=-1 (param)
   244 ;;_f	offset	0
   245 ;;_ap	offset	6
   246 ;;_s	offset=-3 (param)
   247 ;;_fmt	offset=-5 (param)
   248 ;;_line	offset=-1 (param)
   249 ;;_vterm	offset=-2 (param)
   250 ;;_numMilliseconds	offset=-2 (param)
   251 ;;_vterm	offset=-1 (param)
   252 ;;_r	offset=-1 (param)
   253 ;;_c	offset=-2 (param)
   254 ;;_strPtr	offset=-4 (param)
   255 ;;_strPtr	offset=-1 (param)
   256 ;;_delay	offset=-4 (param)
   257 ;;_strPtr	offset=-2 (param)
   258 ;;__this	offset=-2 (param)
   259 ;;_clearBuffer	offset=-3 (param)
   260 ;;_s	offset	0
   261 ;;_k	offset	2
   262 ;;_dest	offset=-2 (param)
   263 ;;_c	offset=-4 (param)
   264 ;;_n	offset=-6 (param)
   265 ;;_ap	offset	0
   266 ;;_fmt	offset=-3 (param)
   267 ;;_cfmt	offset	0
   268 ;;_fp	offset=-2 (param)
   269 ;;_fmt	offset=-4 (param)
   270 ;;_ap	offset=-6 (param)
   271 ;;_vfpfcnvrt$4649	offset	0
   272 ;;_vfpfcnvrt$4655	offset	2
   273 ;;_vfpfcnvrt$4648	offset	4
   274 ;;_llu	offset	6
   275 ;;_ll	offset	14
   276 ;;_f	offset	22
   277 ;;_ct	offset	26
   278 ;;_cp	offset	29
   279 ;;_c	offset	31
   280 ;;_fp	offset=-2 (param)
   281 ;;_fmt	offset=-4 (param)
   282 ;;_ap	offset=-6 (param)
   283 ;;_xtoa$4634	offset	0
   284 ;;_xtoa$4633	offset	2
   285 ;;_n	offset	4
   286 ;;_c	offset	12
   287 ;;_i	offset	14
   288 ;;_w	offset	16
   289 ;;_p	offset	18
   290 ;;_fp	offset=-2 (param)
   291 ;;_d	offset=-10 (param)
   292 ;;_x	offset=-11 (param)
   293 ;;_toupper$5294	offset	0
   294 ;;_c	offset=-2 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_c	offset=-2 (param)
   297 ;;_r	offset	0
   298 ;;_l	offset	2
   299 ;;__l	offset=-2 (param)
   300 ;;__r	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_nuls	offset	0
   303 ;;_l	offset	7
   304 ;;_p	offset	9
   305 ;;_cp	offset	11
   306 ;;_w	offset	13
   307 ;;_i	offset	15
   308 ;;_fp	offset=-2 (param)
   309 ;;_s	offset=-4 (param)
   310 ;;_efgtoa$4613	offset	0
   311 ;;_efgtoa$4612	offset	2
   312 ;;_efgtoa$4611	offset	4
   313 ;;_efgtoa$4607	offset	6
   314 ;;_efgtoa$4603	offset	8
   315 ;;_efgtoa$4602	offset	10
   316 ;;_u	offset	12
   317 ;;_g	offset	16
   318 ;;_l	offset	20
   319 ;;_h	offset	24
   320 ;;_ou	offset	28
   321 ;;_n	offset	32
   322 ;;_e	offset	34
   323 ;;_i	offset	36
   324 ;;_w	offset	38
   325 ;;_p	offset	40
   326 ;;_sign	offset	42
   327 ;;_d	offset	44
   328 ;;_ne	offset	46
   329 ;;_m	offset	48
   330 ;;_pp	offset	50
   331 ;;_t	offset	52
   332 ;;_mode	offset	54
   333 ;;_nmode	offset	55
   334 ;;_fp	offset=-2 (param)
   335 ;;_f	offset=-6 (param)
   336 ;;_c	offset=-7 (param)
   337 ;;_tolower$5279	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_d	offset	0
   341 ;;_s	offset	2
   342 ;;_dest	offset=-2 (param)
   343 ;;_src	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_m	offset	4
   346 ;;_e	offset	8
   347 ;;_x	offset=-4 (param)
   348 ;;_u	offset	0
   349 ;;_e	offset	4
   350 ;;_x	offset=-4 (param)
   351 ;;_exp1	offset	0
   352 ;;_sign1	offset	1
   353 ;;_f1	offset=-4 (param)
   354 ;;_f1	offset=-4 (param)
   355 ;;_ff1	offset=-4 (param)
   356 ;;_ff2	offset=-8 (param)
   357 ;;_ff1	offset=-4 (param)
   358 ;;_ff2	offset=-8 (param)
   359 ;;_grs	offset	0
   360 ;;_rem	offset	4
   361 ;;_new_exp	offset	8
   362 ;;_aexp	offset	10
   363 ;;_bexp	offset	11
   364 ;;_sign	offset	12
   365 ;;_b	offset=-4 (param)
   366 ;;_a	offset=-8 (param)
   367 ;;_sign	offset	0
   368 ;;_counter	offset	1
   369 ;;_dividend	offset=-2 (param)
   370 ;;_divisor	offset=-4 (param)
   371 ;;_quotient	offset	0
   372 ;;_sign	offset	2
   373 ;;_counter	offset	3
   374 ;;_dividend	offset=-2 (param)
   375 ;;_divisor	offset=-4 (param)
   376 ;;_dtoa$4579	offset	0
   377 ;;_n	offset	2
   378 ;;_i	offset	10
   379 ;;_s	offset	12
   380 ;;_w	offset	14
   381 ;;_p	offset	16
   382 ;;_fp	offset=-2 (param)
   383 ;;_d	offset=-10 (param)
   384 ;;_a	offset=-2 (param)
   385 ;;_sign	offset	0
   386 ;;_counter	offset	1
   387 ;;_dividend	offset=-8 (param)
   388 ;;_divisor	offset=-16 (param)
   389 ;;_quotient	offset	0
   390 ;;_sign	offset	8
   391 ;;_counter	offset	9
   392 ;;_dividend	offset=-8 (param)
   393 ;;_divisor	offset=-16 (param)
   394 ;;_w	offset	0
   395 ;;_fp	offset=-2 (param)
   396 ;;_c	offset=-3 (param)
   397 ;;_w	offset	0
   398 ;;_i	offset	2
   399 ;;_fp	offset=-2 (param)
   400 ;;_buf	offset=-4 (param)
   401 ;;_p	offset=-6 (param)
   402 ;;_a	offset	0
   403 ;;_s	offset=-2 (param)
   404 ;;_i	offset	0
   405 ;;_c	offset	2
   406 ;;_s	offset=-2 (param)
   407 ;;_fp	offset=-4 (param)
   408 ;;_c	offset=-2 (param)
   409 ;;_fp	offset=-4 (param)
   410 ;;_c	offset=-1 (param)
   411 ;;__this	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_atoi$5132	offset	0
   414 ;;_atoi$5130	offset	2
   415 ;;_atoi$5131	offset	4
   416 ;;_n	offset	5
   417 ;;_neg	offset	7
   418 ;;_s	offset=-2 (param)
   419 ;;_isspace$5170	offset	0
   420 ;;_c	offset=-2 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_vterm	offset=-1 (param)
   423 ;;_new_response_info	offset=-1 (param)
   424 ;;_new_response_info	offset=-1 (param)
   425 ;;_level	offset=-2 (param)
   426 ;;_dutyValue	offset=-2 (param)
   427 ;;_timer	offset=-1 (param)
   428 ;;_timer	offset=-1 (param)
   429 ;;_count	offset=-3 (param)
   430 ;;_lp_speed	offset	0
   431 ;;_new	offset=-4 (param)
   432 ;;_bn	offset=-5 (param)
   433 ;;_slow	offset=-6 (param)
   434 ;;_b	offset=-4 (param)
   435 ;;_a	offset=-8 (param)
   436 ;;_grs	offset	0
   437 ;;_bexp	offset	1
   438 ;;_aexp	offset	2
   439 ;;_signs	offset	3
   440 ;;_b	offset=-4 (param)
   441 ;;_a	offset=-8 (param)
   442 ;;_prod	offset	0
   443 ;;_grs	offset	4
   444 ;;_temp	offset	8
   445 ;;_bexp	offset	10
   446 ;;_aexp	offset	11
   447 ;;_sign	offset	12
   448 ;;_b	offset=-4 (param)
   449 ;;_a	offset=-8 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_state	offset	0
   457 ;;_InterruptHandler	offset=-3 (param)
   458 ;;_InterruptHandler	offset=-3 (param)
   459 ;;_InterruptHandler	offset=-3 (param)
   460 ;;_InterruptHandler	offset=-3 (param)
   461 ;;_i	offset	0
   462 ;;_sw_value	offset	1
   463 ;;_timerVal	offset=-2 (param)
   464 ;;_channel	offset=-1 (param)
   465 ;;_i	offset	0
   466                           
   467                           	psect	idataBANK0
   468  0186FE                     __pidataBANK0:
   469                           	opt callstack 0
   470                           
   471                           ;initializer for _R
   472  0186FE  0000               	dw	0
   473  018700  0000               	dw	0
   474  018702  0000               	dw	0
   475  018704  0000               	dw	0
   476  018706  0000               	dw	0
   477  018708  0000               	dw	0
   478  01870A  0000               	dw	0
   479  01870C  0000               	dw	0
   480  01870E  0000               	dw	0
   481  018710  0000               	dw	0
   482  018712  0000               	dw	0
   483  018714  0000               	dw	0
   484  018716  0000               	dw	0
   485  018718  0000               	dw	0
   486  01871A  0000               	dw	0
   487  01871C  0000               	dw	0
   488  01871E  0F67               	dw	3943
   489  018720  0F8F               	dw	3983
   490  018722  00                 	db	0
   491  018723  0000               	dw	0
   492  018725  00                 	db	0
   493                           
   494                           ;initializer for _H
   495  018726  00                 	db	0
   496  018727  00                 	db	0
   497  018728  01                 	db	1
   498  018729  00                 	db	0
   499  01872A  01                 	db	1
   500  01872B  00                 	db	0
   501  01872C  00                 	db	0
   502                           
   503                           	psect	idataBANK1
   504  018D2A                     __pidataBANK1:
   505                           	opt callstack 0
   506                           
   507                           ;initializer for stoa@F1166
   508  018D2A  28                 	db	40
   509  018D2B  6E                 	db	110
   510  018D2C  75                 	db	117
   511  018D2D  6C                 	db	108
   512  018D2E  6C                 	db	108
   513  018D2F  29                 	db	41
   514  018D30  00                 	db	0
   515                           
   516                           ;initializer for _port_data
   517  018D31  FF                 	db	255
   518  018D32  00                 	db	0
   519  018D33  FF                 	db	255
   520  018D34  00                 	db	0
   521  018D35  FF                 	db	255
   522  018D36  00                 	db	0
   523  018D37  FF                 	db	255
   524  018D38  00                 	db	0
   525  018D39  FF                 	db	255
   526  018D3A  00                 	db	0
   527  018D3B  FF                 	db	255
   528  018D3C  00                 	db	0
   529  018D3D  FF                 	db	255
   530  018D3E  00                 	db	0
   531  018D3F  FF                 	db	255
   532  018D40  00                 	db	0
   533                           
   534                           	psect	idataBANK2
   535  0174D4                     __pidataBANK2:
   536                           	opt callstack 0
   537                           
   538                           ;initializer for _V
   539  0174D4  00                 	db	0
   540  0174D5  00                 	db	0
   541  0174D6  00                 	db	0
   542  0174D7  00                 	db	0
   543  0174D8  00                 	db	0
   544  0174D9  00                 	db	0
   545  0174DA  00                 	db	0
   546  0174DB  00                 	db	0
   547  0174DC  00                 	db	0
   548  0174DD  00                 	db	0
   549  0174DE  00                 	db	0
   550  0174DF  00                 	db	0
   551  0174E0  00                 	db	0
   552  0174E1  00                 	db	0
   553  0174E2  00                 	db	0
   554  0174E3  00                 	db	0
   555  0174E4  00                 	db	0
   556  0174E5  00                 	db	0
   557  0174E6  00                 	db	0
   558  0174E7  00                 	db	0
   559  0174E8  00                 	db	0
   560  0174E9  00                 	db	0
   561  0174EA  00                 	db	0
   562  0174EB  00                 	db	0
   563  0174EC  00                 	db	0
   564  0174ED  00                 	db	0
   565  0174EE  00                 	db	0
   566  0174EF  00                 	db	0
   567  0174F0  00                 	db	0
   568  0174F1  00                 	db	0
   569  0174F2  00                 	db	0
   570  0174F3  00                 	db	0
   571  0174F4  00                 	db	0
   572  0174F5  00                 	db	0
   573  0174F6  00                 	db	0
   574  0174F7  00                 	db	0
   575  0174F8  00                 	db	0
   576  0174F9  00                 	db	0
   577  0174FA  00                 	db	0
   578  0174FB  00                 	db	0
   579  0174FC  00                 	db	0
   580  0174FD  00                 	db	0
   581  0174FE  00                 	db	0
   582  0174FF  00                 	db	0
   583  017500  00                 	db	0
   584  017501  00                 	db	0
   585  017502  00                 	db	0
   586  017503  00                 	db	0
   587  017504  00                 	db	0
   588  017505  00                 	db	0
   589  017506  00                 	db	0
   590  017507  00                 	db	0
   591  017508  00                 	db	0
   592  017509  00                 	db	0
   593  01750A  00                 	db	0
   594  01750B  00                 	db	0
   595  01750C  00                 	db	0
   596  01750D  00                 	db	0
   597  01750E  00                 	db	0
   598  01750F  00                 	db	0
   599  017510  00                 	db	0
   600  017511  00                 	db	0
   601  017512  00                 	db	0
   602  017513  00                 	db	0
   603  017514  00                 	db	0
   604  017515  00                 	db	0
   605  017516  00                 	db	0
   606  017517  00                 	db	0
   607  017518  00                 	db	0
   608  017519  00                 	db	0
   609  01751A  00                 	db	0
   610  01751B  00                 	db	0
   611  01751C  00                 	db	0
   612  01751D  00                 	db	0
   613  01751E  00                 	db	0
   614  01751F  00                 	db	0
   615  017520  00                 	db	0
   616  017521  00                 	db	0
   617  017522  00                 	db	0
   618  017523  00                 	db	0
   619  017524  00                 	db	0
   620  017525  00                 	db	0
   621  017526  00                 	db	0
   622  017527  00                 	db	0
   623  017528  00                 	db	0
   624  017529  00                 	db	0
   625  01752A  00                 	db	0
   626  01752B  00                 	db	0
   627  01752C  00                 	db	0
   628  01752D  00                 	db	0
   629  01752E  00                 	db	0
   630  01752F  00                 	db	0
   631  017530  00                 	db	0
   632  017531  00                 	db	0
   633  017532  00                 	db	0
   634  017533  00                 	db	0
   635  017534  00                 	db	0
   636  017535  00                 	db	0
   637  017536  00                 	db	0
   638  017537  00                 	db	0
   639  017538  00                 	db	0
   640  017539  00                 	db	0
   641  01753A  00                 	db	0
   642  01753B  00                 	db	0
   643  01753C  00                 	db	0
   644  01753D  00                 	db	0
   645  01753E  00                 	db	0
   646  01753F  00                 	db	0
   647  017540  00                 	db	0
   648  017541  00                 	db	0
   649  017542  00                 	db	0
   650  017543  00                 	db	0
   651  017544  00                 	db	0
   652  017545  00                 	db	0
   653  017546  00                 	db	0
   654  017547  00                 	db	0
   655  017548  00                 	db	0
   656  017549  00                 	db	0
   657  01754A  00                 	db	0
   658  01754B  00                 	db	0
   659  01754C  00                 	db	0
   660  01754D  00                 	db	0
   661  01754E  00                 	db	0
   662  01754F  00                 	db	0
   663  017550  00                 	db	0
   664  017551  00                 	db	0
   665  017552  00                 	db	0
   666  017553  00                 	db	0
   667  017554  00                 	db	0
   668  017555  0000               	dw	0
   669  017557  0000               	dw	0
   670  017559  0000               	dw	0
   671  01755B  0000               	dw	0
   672  01755D  00                 	db	0
   673  01755E  00                 	db	0
   674  01755F  00                 	db	0
   675  017560  00                 	db	0
   676  017561  00                 	db	0
   677  017562  00                 	db	0
   678  017563  0000               	dw	0
   679  017565  0000               	dw	0
   680  017567  0000               	dw	0
   681  017569  0000               	dw	0
   682  01756B  0000               	dw	0
   683  01756D  0000               	dw	0
   684  01756F  00                 	db	0
   685  017570  00                 	db	0
   686  017571  00                 	db	0
   687  017572  00                 	db	0
   688  017573  00                 	db	0
   689  017574  00                 	db	0
   690  017575  00                 	db	0
   691  017576  00                 	db	0
   692  017577  00                 	db	0
   693  017578  00                 	db	0
   694  017579  0000               	dw	0
   695  01757B  0000               	dw	0
   696  01757D  2D                 	db	45
   697  01757E  00                 	db	0
   698  01757F  00                 	db	0
   699  017580  0000               	dw	0
   700  017582  0000               	dw	0
   701  017584  0000               	dw	0
   702  017586  0000               	dw	0
   703  017588  0000               	dw	0
   704  01758A  0000               	dw	0
   705  01758C  0000               	dw	0
   706  01758E  0000               	dw	0
   707                           
   708                           	psect	mediumconst
   709  00FDC4                     __pmediumconst:
   710                           	opt callstack 0
   711  00FDC4  00                 	db	0
   712  00FDC5                     _T:
   713                           	opt callstack 0
   714  00FDC5  63                 	db	99
   715  00FDC6  6F                 	db	111
   716  00FDC7  6D                 	db	109
   717  00FDC8  6D                 	db	109
   718  00FDC9  61                 	db	97
   719  00FDCA  6E                 	db	110
   720  00FDCB  64                 	db	100
   721  00FDCC  73                 	db	115
   722  00FDCD  20                 	db	32
   723  00FDCE  31                 	db	49
   724  00FDCF  00                 	db	0
   725  00FDD0  00                 	db	0
   726  00FDD1  00                 	db	0
   727  00FDD2  00                 	db	0
   728  00FDD3  00                 	db	0
   729  00FDD4  00                 	db	0
   730  00FDD5  00                 	db	0
   731  00FDD6  00                 	db	0
   732  00FDD7  64                 	db	100
   733  00FDD8  69                 	db	105
   734  00FDD9  73                 	db	115
   735  00FDDA  70                 	db	112
   736  00FDDB  6C                 	db	108
   737  00FDDC  61                 	db	97
   738  00FDDD  79                 	db	121
   739  00FDDE  73                 	db	115
   740  00FDDF  20                 	db	32
   741  00FDE0  31                 	db	49
   742  00FDE1  00                 	db	0
   743  00FDE2  00                 	db	0
   744  00FDE3  00                 	db	0
   745  00FDE4  00                 	db	0
   746  00FDE5  00                 	db	0
   747  00FDE6  00                 	db	0
   748  00FDE7  00                 	db	0
   749  00FDE8  00                 	db	0
   750  00FDE9  63                 	db	99
   751  00FDEA  6F                 	db	111
   752  00FDEB  6D                 	db	109
   753  00FDEC  6D                 	db	109
   754  00FDED  61                 	db	97
   755  00FDEE  6E                 	db	110
   756  00FDEF  64                 	db	100
   757  00FDF0  73                 	db	115
   758  00FDF1  20                 	db	32
   759  00FDF2  32                 	db	50
   760  00FDF3  00                 	db	0
   761  00FDF4  00                 	db	0
   762  00FDF5  00                 	db	0
   763  00FDF6  00                 	db	0
   764  00FDF7  00                 	db	0
   765  00FDF8  00                 	db	0
   766  00FDF9  00                 	db	0
   767  00FDFA  00                 	db	0
   768  00FDFB  64                 	db	100
   769  00FDFC  69                 	db	105
   770  00FDFD  73                 	db	115
   771  00FDFE  70                 	db	112
   772  00FDFF  6C                 	db	108
   773  00FE00  61                 	db	97
   774  00FE01  79                 	db	121
   775  00FE02  73                 	db	115
   776  00FE03  20                 	db	32
   777  00FE04  32                 	db	50
   778  00FE05  00                 	db	0
   779  00FE06  00                 	db	0
   780  00FE07  00                 	db	0
   781  00FE08  00                 	db	0
   782  00FE09  00                 	db	0
   783  00FE0A  00                 	db	0
   784  00FE0B  00                 	db	0
   785  00FE0C  00                 	db	0
   786  00FE0D  63                 	db	99
   787  00FE0E  6F                 	db	111
   788  00FE0F  6D                 	db	109
   789  00FE10  6D                 	db	109
   790  00FE11  61                 	db	97
   791  00FE12  6E                 	db	110
   792  00FE13  64                 	db	100
   793  00FE14  73                 	db	115
   794  00FE15  20                 	db	32
   795  00FE16  33                 	db	51
   796  00FE17  00                 	db	0
   797  00FE18  00                 	db	0
   798  00FE19  00                 	db	0
   799  00FE1A  00                 	db	0
   800  00FE1B  00                 	db	0
   801  00FE1C  00                 	db	0
   802  00FE1D  00                 	db	0
   803  00FE1E  00                 	db	0
   804  00FE1F  64                 	db	100
   805  00FE20  69                 	db	105
   806  00FE21  73                 	db	115
   807  00FE22  70                 	db	112
   808  00FE23  6C                 	db	108
   809  00FE24  61                 	db	97
   810  00FE25  79                 	db	121
   811  00FE26  73                 	db	115
   812  00FE27  20                 	db	32
   813  00FE28  33                 	db	51
   814  00FE29  00                 	db	0
   815  00FE2A  00                 	db	0
   816  00FE2B  00                 	db	0
   817  00FE2C  00                 	db	0
   818  00FE2D  00                 	db	0
   819  00FE2E  00                 	db	0
   820  00FE2F  00                 	db	0
   821  00FE30  00                 	db	0
   822  00FE31  63                 	db	99
   823  00FE32  6F                 	db	111
   824  00FE33  6D                 	db	109
   825  00FE34  6D                 	db	109
   826  00FE35  61                 	db	97
   827  00FE36  6E                 	db	110
   828  00FE37  64                 	db	100
   829  00FE38  73                 	db	115
   830  00FE39  20                 	db	32
   831  00FE3A  34                 	db	52
   832  00FE3B  00                 	db	0
   833  00FE3C  00                 	db	0
   834  00FE3D  00                 	db	0
   835  00FE3E  00                 	db	0
   836  00FE3F  00                 	db	0
   837  00FE40  00                 	db	0
   838  00FE41  00                 	db	0
   839  00FE42  00                 	db	0
   840  00FE43  64                 	db	100
   841  00FE44  69                 	db	105
   842  00FE45  73                 	db	115
   843  00FE46  70                 	db	112
   844  00FE47  6C                 	db	108
   845  00FE48  61                 	db	97
   846  00FE49  79                 	db	121
   847  00FE4A  73                 	db	115
   848  00FE4B  20                 	db	32
   849  00FE4C  34                 	db	52
   850  00FE4D  00                 	db	0
   851  00FE4E  00                 	db	0
   852  00FE4F  00                 	db	0
   853  00FE50  00                 	db	0
   854  00FE51  00                 	db	0
   855  00FE52  00                 	db	0
   856  00FE53  00                 	db	0
   857  00FE54  00                 	db	0
   858  00FE55                     __end_of_T:
   859                           	opt callstack 0
   860  0000                     _IVTADL	set	14493
   861  0000                     _IVTADH	set	14494
   862  0000                     _IVTADU	set	14495
   863  0000                     _PIR4bits	set	14756
   864  0000                     _PIE8bits	set	14744
   865  0000                     _PIR8bits	set	14760
   866  0000                     _SCANPR	set	14839
   867  0000                     _DMA2PR	set	14836
   868  0000                     _DMA1PR	set	14835
   869  0000                     _MAINPR	set	14834
   870  0000                     _ISRPR	set	14833
   871  0000                     _PIE2bits	set	14738
   872  0000                     _PIR2bits	set	14754
   873  0000                     _PIE9bits	set	14745
   874  0000                     _PIR9bits	set	14761
   875  0000                     _PIE6bits	set	14742
   876  0000                     _PIE3bits	set	14739
   877  0000                     _PMD7	set	14791
   878  0000                     _PMD6	set	14790
   879  0000                     _PMD5	set	14789
   880  0000                     _PMD4	set	14788
   881  0000                     _PMD3	set	14787
   882  0000                     _PMD2	set	14786
   883  0000                     _PMD1	set	14785
   884  0000                     _PMD0	set	14784
   885  0000                     _OSCTUNE	set	14814
   886  0000                     _OSCFRQ	set	14815
   887  0000                     _OSCEN	set	14813
   888  0000                     _OSCCON3	set	14811
   889  0000                     _OSCCON1	set	14809
   890  0000                     _IPR8bits	set	14728
   891  0000                     _IPR9bits	set	14729
   892  0000                     _IPR5bits	set	14725
   893  0000                     _IPR1bits	set	14721
   894  0000                     _IPR3bits	set	14723
   895  0000                     _IPR6bits	set	14726
   896  0000                     _IPR2bits	set	14722
   897  0000                     _PIE5bits	set	14741
   898  0000                     _PIE1bits	set	14737
   899  0000                     _PIR5bits	set	14757
   900  0000                     _PIR1bits	set	14753
   901  0000                     _PLLR	set	118496
   902  0000                     _SPI1SDIPPS	set	15071
   903  0000                     _U1RXPPS	set	15077
   904  0000                     _RC6PPS	set	14870
   905  0000                     _RC5PPS	set	14869
   906  0000                     _INT1PPS	set	15041
   907  0000                     _RD1PPS	set	14873
   908  0000                     _INT0PPS	set	15040
   909  0000                     _RC3PPS	set	14867
   910  0000                     _RB6PPS	set	14862
   911  0000                     _SPI1SCKPPS	set	15070
   912  0000                     _U2RXPPS	set	15080
   913  0000                     _SLRCONF	set	14995
   914  0000                     _SLRCONE	set	14979
   915  0000                     _SLRCOND	set	14963
   916  0000                     _SLRCONC	set	14947
   917  0000                     _SLRCONB	set	14931
   918  0000                     _SLRCONA	set	14915
   919  0000                     _ODCOND	set	14962
   920  0000                     _ODCONC	set	14946
   921  0000                     _ODCONB	set	14930
   922  0000                     _ODCONA	set	14914
   923  0000                     _ODCONF	set	14994
   924  0000                     _ODCONE	set	14978
   925  0000                     _WPUC	set	14945
   926  0000                     _WPUA	set	14913
   927  0000                     _WPUB	set	14929
   928  0000                     _WPUE	set	14977
   929  0000                     _WPUF	set	14993
   930  0000                     _WPUD	set	14961
   931  0000                     _ANSELA	set	14912
   932  0000                     _ANSELF	set	14992
   933  0000                     _ANSELE	set	14976
   934  0000                     _ANSELB	set	14928
   935  0000                     _ANSELC	set	14944
   936  0000                     _ANSELD	set	14960
   937  0000                     _DMA2SSA	set	15321
   938  0000                     _DMA1SSA	set	15353
   939  0000                     _DMA2DSZ	set	15310
   940  0000                     _DMA2SSZ	set	15319
   941  0000                     _DMA2DSA	set	15312
   942  0000                     _DMA1DSZ	set	15342
   943  0000                     _DMA1SSZ	set	15351
   944  0000                     _DMA1DSA	set	15344
   945  0000                     _DMA1CON0bits	set	15356
   946  0000                     _DMA1CON1bits	set	15357
   947  0000                     _DMA2CON0	set	15324
   948  0000                     _DMA2AIRQ	set	15326
   949  0000                     _DMA2SIRQ	set	15327
   950  0000                     _DMA2CON1	set	15325
   951  0000                     _DMA1CON0	set	15356
   952  0000                     _DMA1AIRQ	set	15358
   953  0000                     _DMA1SIRQ	set	15359
   954  0000                     _DMA1CON1	set	15357
   955  0000                     _CLKRCON	set	15589
   956  0000                     _CLKRCLK	set	15590
   957  0000                     _SPI1INTFbits	set	15642
   958  0000                     _SPI1RXB	set	15632
   959  0000                     _SPI1TXB	set	15633
   960  0000                     _SPI1TCNTL	set	15634
   961  0000                     _SPI1CON0	set	15636
   962  0000                     _SPI1CLK	set	15644
   963  0000                     _SPI1BAUD	set	15641
   964  0000                     _SPI1CON2	set	15638
   965  0000                     _SPI1CON1	set	15637
   966  0000                     _U2RXB	set	15824
   967  0000                     _U2TXB	set	15826
   968  0000                     _U2ERRIE	set	15842
   969  0000                     _U2ERRIR	set	15841
   970  0000                     _U2UIR	set	15840
   971  0000                     _U2FIFO	set	15839
   972  0000                     _U2BRGH	set	15838
   973  0000                     _U2BRGL	set	15837
   974  0000                     _U2CON2	set	15836
   975  0000                     _U2CON1	set	15835
   976  0000                     _U2CON0	set	15834
   977  0000                     _U2P3L	set	15832
   978  0000                     _U2P2L	set	15830
   979  0000                     _U2P1L	set	15828
   980  0000                     _U1RXB	set	15848
   981  0000                     _U1TXB	set	15850
   982  0000                     _U1ERRIE	set	15866
   983  0000                     _U1ERRIR	set	15865
   984  0000                     _U1UIR	set	15864
   985  0000                     _U1FIFO	set	15863
   986  0000                     _U1BRGH	set	15862
   987  0000                     _U1BRGL	set	15861
   988  0000                     _U1CON2	set	15860
   989  0000                     _U1CON1	set	15859
   990  0000                     _U1CON0	set	15858
   991  0000                     _U1P3H	set	15857
   992  0000                     _U1P3L	set	15856
   993  0000                     _U1P2H	set	15855
   994  0000                     _U1P2L	set	15854
   995  0000                     _U1P1H	set	15853
   996  0000                     _U1P1L	set	15852
   997  0000                     _FVRCON	set	16065
   998  0000                     _ADFLTRL	set	16102
   999  0000                     _ADFLTRH	set	16103
  1000  0000                     _ADCON0bits	set	16120
  1001  0000                     _ADCON0	set	16120
  1002  0000                     _ADCLK	set	16127
  1003  0000                     _ADACT	set	16126
  1004  0000                     _ADREF	set	16125
  1005  0000                     _ADSTAT	set	16124
  1006  0000                     _ADCON3	set	16123
  1007  0000                     _ADCON2	set	16122
  1008  0000                     _ADCON1	set	16121
  1009  0000                     _ADPREH	set	16119
  1010  0000                     _ADPREL	set	16118
  1011  0000                     _ADCAP	set	16117
  1012  0000                     _ADACQH	set	16116
  1013  0000                     _ADACQL	set	16115
  1014  0000                     _ADPCH	set	16113
  1015  0000                     _ADRPT	set	16108
  1016  0000                     _ADACCU	set	16106
  1017  0000                     _ADSTPTH	set	16101
  1018  0000                     _ADSTPTL	set	16100
  1019  0000                     _ADUTHH	set	16097
  1020  0000                     _ADUTHL	set	16096
  1021  0000                     _ADLTHH	set	16095
  1022  0000                     _ADLTHL	set	16094
  1023  0000                     _CCPTMRS1bits	set	16223
  1024  0000                     _PORTFbits	set	16335
  1025  0000                     _LATCbits	set	16316
  1026  0000                     _LATDbits	set	16317
  1027  0000                     _PORTBbits	set	16331
  1028  0000                     _T2CON	set	16300
  1029  0000                     _T2TMR	set	16298
  1030  0000                     _T2PR	set	16299
  1031  0000                     _T2RST	set	16303
  1032  0000                     _T2HLT	set	16301
  1033  0000                     _T2CLKCON	set	16302
  1034  0000                     _PWM8DCL	set	16224
  1035  0000                     _PWM8DCH	set	16225
  1036  0000                     _PWM8CON	set	16226
  1037  0000                     _LATEbits	set	16318
  1038  0000                     _T5CONbits	set	16282
  1039  0000                     _T5CON	set	16282
  1040  0000                     _TMR5L	set	16280
  1041  0000                     _TMR5H	set	16281
  1042  0000                     _T5CLK	set	16285
  1043  0000                     _T5GATE	set	16284
  1044  0000                     _T5GCON	set	16283
  1045  0000                     _T6CON	set	16276
  1046  0000                     _T6TMR	set	16274
  1047  0000                     _T6PR	set	16275
  1048  0000                     _T6RST	set	16279
  1049  0000                     _T6HLT	set	16277
  1050  0000                     _T6CLKCON	set	16278
  1051  0000                     _TRISD	set	16325
  1052  0000                     _TRISC	set	16324
  1053  0000                     _TRISB	set	16323
  1054  0000                     _TRISA	set	16322
  1055  0000                     _TRISF	set	16327
  1056  0000                     _TRISE	set	16326
  1057  0000                     _LATC	set	16316
  1058  0000                     _LATB	set	16315
  1059  0000                     _LATF	set	16319
  1060  0000                     _LATA	set	16314
  1061  0000                     _LATD	set	16317
  1062  0000                     _LATE	set	16318
  1063  0000                     _IVTLOCKbits	set	16340
  1064  0000                     _IVTLOCK	set	16340
  1065  0000                     _INTCON0bits	set	16338
  1066  0000                     _GIE	set	130711
  1067  00FE55                     
  1068                           ; BSR set to: 57
  1069  00FE55  20                 	db	32
  1070  00FE56  4D                 	db	77	;'M'
  1071  00FE57  65                 	db	101	;'e'
  1072  00FE58  73                 	db	115	;'s'
  1073  00FE59  67                 	db	103	;'g'
  1074  00FE5A  20                 	db	32
  1075  00FE5B  25                 	db	37
  1076  00FE5C  64                 	db	100	;'d'
  1077  00FE5D  20                 	db	32
  1078  00FE5E  53                 	db	83	;'S'
  1079  00FE5F  74                 	db	116	;'t'
  1080  00FE60  61                 	db	97	;'a'
  1081  00FE61  63                 	db	99	;'c'
  1082  00FE62  6B                 	db	107	;'k'
  1083  00FE63  20                 	db	32
  1084  00FE64  25                 	db	37
  1085  00FE65  64                 	db	100	;'d'
  1086  00FE66  20                 	db	32
  1087  00FE67  20                 	db	32
  1088  00FE68  20                 	db	32
  1089  00FE69  20                 	db	32
  1090  00FE6A  20                 	db	32
  1091  00FE6B  20                 	db	32
  1092  00FE6C  00                 	db	0
  1093  00FE6D                     STR_39:
  1094                           
  1095                           ; BSR set to: 57
  1096  00FE6D  20                 	db	32
  1097  00FE6E  20                 	db	32
  1098  00FE6F  20                 	db	32
  1099  00FE70  20                 	db	32
  1100  00FE71  20                 	db	32
  1101  00FE72  20                 	db	32
  1102  00FE73  20                 	db	32
  1103  00FE74  20                 	db	32
  1104  00FE75  20                 	db	32
  1105  00FE76  20                 	db	32
  1106  00FE77  20                 	db	32
  1107  00FE78  20                 	db	32
  1108  00FE79  20                 	db	32
  1109  00FE7A  20                 	db	32
  1110  00FE7B  20                 	db	32
  1111  00FE7C  20                 	db	32
  1112  00FE7D  20                 	db	32
  1113  00FE7E  20                 	db	32
  1114  00FE7F  00                 	db	0
  1115  00FE80                     STR_29:
  1116                           
  1117                           ; BSR set to: 57
  1118  00FE80  48                 	db	72	;'H'
  1119  00FE81  45                 	db	69	;'E'
  1120  00FE82  4C                 	db	76	;'L'
  1121  00FE83  50                 	db	80	;'P'
  1122  00FE84  20                 	db	32
  1123  00FE85  25                 	db	37
  1124  00FE86  73                 	db	115	;'s'
  1125  00FE87  20                 	db	32
  1126  00FE88  20                 	db	32
  1127  00FE89  20                 	db	32
  1128  00FE8A  20                 	db	32
  1129  00FE8B  20                 	db	32
  1130  00FE8C  20                 	db	32
  1131  00FE8D  20                 	db	32
  1132  00FE8E  20                 	db	32
  1133  00FE8F  20                 	db	32
  1134  00FE90  20                 	db	32
  1135  00FE91  20                 	db	32
  1136  00FE92  00                 	db	0
  1137  00FE93                     
  1138                           ; BSR set to: 57
  1139  00FE93  44                 	db	68	;'D'
  1140  00FE94  49                 	db	73	;'I'
  1141  00FE95  53                 	db	83	;'S'
  1142  00FE96  50                 	db	80	;'P'
  1143  00FE97  4C                 	db	76	;'L'
  1144  00FE98  41                 	db	65	;'A'
  1145  00FE99  59                 	db	89	;'Y'
  1146  00FE9A  20                 	db	32
  1147  00FE9B  25                 	db	37
  1148  00FE9C  73                 	db	115	;'s'
  1149  00FE9D  20                 	db	32
  1150  00FE9E  20                 	db	32
  1151  00FE9F  20                 	db	32
  1152  00FEA0  20                 	db	32
  1153  00FEA1  20                 	db	32
  1154  00FEA2  20                 	db	32
  1155  00FEA3  20                 	db	32
  1156  00FEA4  20                 	db	32
  1157  00FEA5  00                 	db	0
  1158  00FEA6                     STR_19:
  1159                           
  1160                           ; BSR set to: 57
  1161  00FEA6  52                 	db	82	;'R'
  1162  00FEA7  55                 	db	85	;'U'
  1163  00FEA8  4E                 	db	78	;'N'
  1164  00FEA9  20                 	db	32
  1165  00FEAA  20                 	db	32
  1166  00FEAB  20                 	db	32
  1167  00FEAC  20                 	db	32
  1168  00FEAD  20                 	db	32
  1169  00FEAE  20                 	db	32
  1170  00FEAF  20                 	db	32
  1171  00FEB0  20                 	db	32
  1172  00FEB1  20                 	db	32
  1173  00FEB2  20                 	db	32
  1174  00FEB3  20                 	db	32
  1175  00FEB4  20                 	db	32
  1176  00FEB5  20                 	db	32
  1177  00FEB6  20                 	db	32
  1178  00FEB7  20                 	db	32
  1179  00FEB8  00                 	db	0
  1180  00FEB9                     STR_12:
  1181                           
  1182                           ; BSR set to: 57
  1183  00FEB9  50                 	db	80	;'P'
  1184  00FEBA  56                 	db	86	;'V'
  1185  00FEBB  20                 	db	32
  1186  00FEBC  20                 	db	32
  1187  00FEBD  20                 	db	32
  1188  00FEBE  50                 	db	80	;'P'
  1189  00FEBF  57                 	db	87	;'W'
  1190  00FEC0  52                 	db	82	;'R'
  1191  00FEC1  20                 	db	32
  1192  00FEC2  25                 	db	37
  1193  00FEC3  33                 	db	51	;'3'
  1194  00FEC4  2E                 	db	46
  1195  00FEC5  32                 	db	50	;'2'
  1196  00FEC6  66                 	db	102	;'f'
  1197  00FEC7  20                 	db	32
  1198  00FEC8  20                 	db	32
  1199  00FEC9  20                 	db	32
  1200  00FECA  20                 	db	32
  1201  00FECB  00                 	db	0
  1202  00FECC                     STR_18:
  1203                           
  1204                           ; BSR set to: 57
  1205  00FECC  42                 	db	66	;'B'
  1206  00FECD  41                 	db	65	;'A'
  1207  00FECE  54                 	db	84	;'T'
  1208  00FECF  20                 	db	32
  1209  00FED0  20                 	db	32
  1210  00FED1  50                 	db	80	;'P'
  1211  00FED2  57                 	db	87	;'W'
  1212  00FED3  52                 	db	82	;'R'
  1213  00FED4  20                 	db	32
  1214  00FED5  25                 	db	37
  1215  00FED6  33                 	db	51	;'3'
  1216  00FED7  2E                 	db	46
  1217  00FED8  32                 	db	50	;'2'
  1218  00FED9  66                 	db	102	;'f'
  1219  00FEDA  20                 	db	32
  1220  00FEDB  20                 	db	32
  1221  00FEDC  20                 	db	32
  1222  00FEDD  20                 	db	32
  1223  00FEDE  00                 	db	0
  1224  00FEDF                     STR_14:
  1225                           
  1226                           ; BSR set to: 57
  1227  00FEDF  49                 	db	73	;'I'
  1228  00FEE0  4E                 	db	78	;'N'
  1229  00FEE1  56                 	db	86	;'V'
  1230  00FEE2  20                 	db	32
  1231  00FEE3  20                 	db	32
  1232  00FEE4  50                 	db	80	;'P'
  1233  00FEE5  57                 	db	87	;'W'
  1234  00FEE6  52                 	db	82	;'R'
  1235  00FEE7  20                 	db	32
  1236  00FEE8  25                 	db	37
  1237  00FEE9  33                 	db	51	;'3'
  1238  00FEEA  2E                 	db	46
  1239  00FEEB  32                 	db	50	;'2'
  1240  00FEEC  66                 	db	102	;'f'
  1241  00FEED  20                 	db	32
  1242  00FEEE  20                 	db	32
  1243  00FEEF  20                 	db	32
  1244  00FEF0  20                 	db	32
  1245  00FEF1  00                 	db	0
  1246  00FEF2                     STR_13:
  1247                           
  1248                           ; BSR set to: 57
  1249  00FEF2  4C                 	db	76	;'L'
  1250  00FEF3  4F                 	db	79	;'O'
  1251  00FEF4  41                 	db	65	;'A'
  1252  00FEF5  44                 	db	68	;'D'
  1253  00FEF6  20                 	db	32
  1254  00FEF7  50                 	db	80	;'P'
  1255  00FEF8  57                 	db	87	;'W'
  1256  00FEF9  52                 	db	82	;'R'
  1257  00FEFA  20                 	db	32
  1258  00FEFB  25                 	db	37
  1259  00FEFC  33                 	db	51	;'3'
  1260  00FEFD  2E                 	db	46
  1261  00FEFE  32                 	db	50	;'2'
  1262  00FEFF  66                 	db	102	;'f'
  1263  00FF00  20                 	db	32
  1264  00FF01  20                 	db	32
  1265  00FF02  20                 	db	32
  1266  00FF03  20                 	db	32
  1267  00FF04  00                 	db	0
  1268  00FF05                     STR_16:
  1269                           
  1270                           ; BSR set to: 57
  1271  00FF05  42                 	db	66	;'B'
  1272  00FF06  56                 	db	86	;'V'
  1273  00FF07  20                 	db	32
  1274  00FF08  25                 	db	37
  1275  00FF09  32                 	db	50	;'2'
  1276  00FF0A  2E                 	db	46
  1277  00FF0B  32                 	db	50	;'2'
  1278  00FF0C  66                 	db	102	;'f'
  1279  00FF0D  20                 	db	32
  1280  00FF0E  42                 	db	66	;'B'
  1281  00FF0F  41                 	db	65	;'A'
  1282  00FF10  20                 	db	32
  1283  00FF11  25                 	db	37
  1284  00FF12  32                 	db	50	;'2'
  1285  00FF13  2E                 	db	46
  1286  00FF14  32                 	db	50	;'2'
  1287  00FF15  66                 	db	102	;'f'
  1288  00FF16  20                 	db	32
  1289  00FF17  00                 	db	0
  1290  00FF18                     STR_17:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FF18  43                 	db	67	;'C'
  1294  00FF19  56                 	db	86	;'V'
  1295  00FF1A  20                 	db	32
  1296  00FF1B  25                 	db	37
  1297  00FF1C  32                 	db	50	;'2'
  1298  00FF1D  2E                 	db	46
  1299  00FF1E  32                 	db	50	;'2'
  1300  00FF1F  66                 	db	102	;'f'
  1301  00FF20  20                 	db	32
  1302  00FF21  4C                 	db	76	;'L'
  1303  00FF22  41                 	db	65	;'A'
  1304  00FF23  20                 	db	32
  1305  00FF24  25                 	db	37
  1306  00FF25  32                 	db	50	;'2'
  1307  00FF26  2E                 	db	46
  1308  00FF27  32                 	db	50	;'2'
  1309  00FF28  66                 	db	102	;'f'
  1310  00FF29  20                 	db	32
  1311  00FF2A  00                 	db	0
  1312  00FF2B                     STR_15:
  1313                           
  1314                           ; BSR set to: 57
  1315  00FF2B  50                 	db	80	;'P'
  1316  00FF2C  56                 	db	86	;'V'
  1317  00FF2D  20                 	db	32
  1318  00FF2E  25                 	db	37
  1319  00FF2F  32                 	db	50	;'2'
  1320  00FF30  2E                 	db	46
  1321  00FF31  32                 	db	50	;'2'
  1322  00FF32  66                 	db	102	;'f'
  1323  00FF33  20                 	db	32
  1324  00FF34  50                 	db	80	;'P'
  1325  00FF35  41                 	db	65	;'A'
  1326  00FF36  20                 	db	32
  1327  00FF37  25                 	db	37
  1328  00FF38  32                 	db	50	;'2'
  1329  00FF39  2E                 	db	46
  1330  00FF3A  32                 	db	50	;'2'
  1331  00FF3B  66                 	db	102	;'f'
  1332  00FF3C  20                 	db	32
  1333  00FF3D  00                 	db	0
  1334  00FF3E                     STR_8:
  1335                           
  1336                           ; BSR set to: 57
  1337  00FF3E  20                 	db	32
  1338  00FF3F  56                 	db	86	;'V'
  1339  00FF40  54                 	db	84	;'T'
  1340  00FF41  45                 	db	69	;'E'
  1341  00FF42  52                 	db	82	;'R'
  1342  00FF43  4D                 	db	77	;'M'
  1343  00FF44  20                 	db	32
  1344  00FF45  23                 	db	35
  1345  00FF46  32                 	db	50	;'2'
  1346  00FF47  20                 	db	32
  1347  00FF48  20                 	db	32
  1348  00FF49  20                 	db	32
  1349  00FF4A  20                 	db	32
  1350  00FF4B  20                 	db	32
  1351  00FF4C  20                 	db	32
  1352  00FF4D  20                 	db	32
  1353  00FF4E  00                 	db	0
  1354  00FF4F                     STR_4:
  1355                           
  1356                           ; BSR set to: 57
  1357  00FF4F  20                 	db	32
  1358  00FF50  4E                 	db	78	;'N'
  1359  00FF51  53                 	db	83	;'S'
  1360  00FF52  41                 	db	65	;'A'
  1361  00FF53  53                 	db	83	;'S'
  1362  00FF54  50                 	db	80	;'P'
  1363  00FF55  4F                 	db	79	;'O'
  1364  00FF56  4F                 	db	79	;'O'
  1365  00FF57  4B                 	db	75	;'K'
  1366  00FF58  20                 	db	32
  1367  00FF59  20                 	db	32
  1368  00FF5A  20                 	db	32
  1369  00FF5B  20                 	db	32
  1370  00FF5C  20                 	db	32
  1371  00FF5D  20                 	db	32
  1372  00FF5E  20                 	db	32
  1373  00FF5F  00                 	db	0
  1374  00FF60                     STR_1:
  1375                           
  1376                           ; BSR set to: 57
  1377  00FF60  20                 	db	32
  1378  00FF61  4D                 	db	77	;'M'
  1379  00FF62  42                 	db	66	;'B'
  1380  00FF63  4D                 	db	77	;'M'
  1381  00FF64  43                 	db	67	;'C'
  1382  00FF65  20                 	db	32
  1383  00FF66  53                 	db	83	;'S'
  1384  00FF67  4F                 	db	79	;'O'
  1385  00FF68  4C                 	db	76	;'L'
  1386  00FF69  41                 	db	65	;'A'
  1387  00FF6A  52                 	db	82	;'R'
  1388  00FF6B  4D                 	db	77	;'M'
  1389  00FF6C  4F                 	db	79	;'O'
  1390  00FF6D  4E                 	db	78	;'N'
  1391  00FF6E  20                 	db	32
  1392  00FF6F  20                 	db	32
  1393  00FF70  00                 	db	0
  1394  00FF71                     STR_5:
  1395                           
  1396                           ; BSR set to: 57
  1397  00FF71  20                 	db	32
  1398  00FF72  53                 	db	83	;'S'
  1399  00FF73  45                 	db	69	;'E'
  1400  00FF74  51                 	db	81	;'Q'
  1401  00FF75  55                 	db	85	;'U'
  1402  00FF76  45                 	db	69	;'E'
  1403  00FF77  4E                 	db	78	;'N'
  1404  00FF78  43                 	db	67	;'C'
  1405  00FF79  45                 	db	69	;'E'
  1406  00FF7A  20                 	db	32
  1407  00FF7B  54                 	db	84	;'T'
  1408  00FF7C  45                 	db	69	;'E'
  1409  00FF7D  53                 	db	83	;'S'
  1410  00FF7E  54                 	db	84	;'T'
  1411  00FF7F  20                 	db	32
  1412  00FF80  20                 	db	32
  1413  00FF81  00                 	db	0
  1414  00FF82                     STR_11:
  1415                           
  1416                           ; BSR set to: 57
  1417  00FF82  25                 	db	37
  1418  00FF83  64                 	db	100	;'d'
  1419  00FF84  20                 	db	32
  1420  00FF85  25                 	db	37
  1421  00FF86  32                 	db	50	;'2'
  1422  00FF87  2E                 	db	46
  1423  00FF88  34                 	db	52	;'4'
  1424  00FF89  66                 	db	102	;'f'
  1425  00FF8A  2C                 	db	44
  1426  00FF8B  20                 	db	32
  1427  00FF8C  25                 	db	37
  1428  00FF8D  64                 	db	100	;'d'
  1429  00FF8E  20                 	db	32
  1430  00FF8F  20                 	db	32
  1431  00FF90  20                 	db	32
  1432  00FF91  23                 	db	35
  1433  00FF92  00                 	db	0
  1434  00FF93                     STR_9:
  1435                           
  1436                           ; BSR set to: 57
  1437  00FF93  25                 	db	37
  1438  00FF94  64                 	db	100	;'d'
  1439  00FF95  20                 	db	32
  1440  00FF96  25                 	db	37
  1441  00FF97  32                 	db	50	;'2'
  1442  00FF98  2E                 	db	46
  1443  00FF99  34                 	db	52	;'4'
  1444  00FF9A  66                 	db	102	;'f'
  1445  00FF9B  20                 	db	32
  1446  00FF9C  20                 	db	32
  1447  00FF9D  20                 	db	32
  1448  00FF9E  25                 	db	37
  1449  00FF9F  64                 	db	100	;'d'
  1450  00FFA0  20                 	db	32
  1451  00FFA1  20                 	db	32
  1452  00FFA2  00                 	db	0
  1453  00FFA3                     STR_33:
  1454                           
  1455                           ; BSR set to: 57
  1456  00FFA3  76                 	db	118	;'v'
  1457  00FFA4  74                 	db	116	;'t'
  1458  00FFA5  65                 	db	101	;'e'
  1459  00FFA6  72                 	db	114	;'r'
  1460  00FFA7  6D                 	db	109	;'m'
  1461  00FFA8  20                 	db	32
  1462  00FFA9  25                 	db	37
  1463  00FFAA  78                 	db	120	;'x'
  1464  00FFAB  3A                 	db	58	;':'
  1465  00FFAC  25                 	db	37
  1466  00FFAD  78                 	db	120	;'x'
  1467  00FFAE  20                 	db	32
  1468  00FFAF  20                 	db	32
  1469  00FFB0  20                 	db	32
  1470  00FFB1  00                 	db	0
  1471  00FFB2                     STR_2:
  1472                           
  1473                           ; BSR set to: 57
  1474  00FFB2  20                 	db	32
  1475  00FFB3  56                 	db	86	;'V'
  1476  00FFB4  65                 	db	101	;'e'
  1477  00FFB5  72                 	db	114	;'r'
  1478  00FFB6  73                 	db	115	;'s'
  1479  00FFB7  69                 	db	105	;'i'
  1480  00FFB8  6F                 	db	111	;'o'
  1481  00FFB9  6E                 	db	110	;'n'
  1482  00FFBA  20                 	db	32
  1483  00FFBB  25                 	db	37
  1484  00FFBC  73                 	db	115	;'s'
  1485  00FFBD  20                 	db	32
  1486  00FFBE  20                 	db	32
  1487  00FFBF  20                 	db	32
  1488  00FFC0  00                 	db	0
  1489  00FFC1                     STR_27:
  1490                           
  1491                           ; BSR set to: 57
  1492  00FFC1  44                 	db	68	;'D'
  1493  00FFC2  65                 	db	101	;'e'
  1494  00FFC3  63                 	db	99	;'c'
  1495  00FFC4  20                 	db	32
  1496  00FFC5  20                 	db	32
  1497  00FFC6  31                 	db	49	;'1'
  1498  00FFC7  20                 	db	32
  1499  00FFC8  32                 	db	50	;'2'
  1500  00FFC9  30                 	db	48	;'0'
  1501  00FFCA  31                 	db	49	;'1'
  1502  00FFCB  39                 	db	57	;'9'
  1503  00FFCC  00                 	db	0
  1504  00FFCD                     STR_31:
  1505                           
  1506                           ; BSR set to: 57
  1507  00FFCD  25                 	db	37
  1508  00FFCE  73                 	db	115	;'s'
  1509  00FFCF  20                 	db	32
  1510  00FFD0  20                 	db	32
  1511  00FFD1  20                 	db	32
  1512  00FFD2  20                 	db	32
  1513  00FFD3  20                 	db	32
  1514  00FFD4  20                 	db	32
  1515  00FFD5  20                 	db	32
  1516  00FFD6  00                 	db	0
  1517  00FFD7                     STR_28:
  1518                           
  1519                           ; BSR set to: 57
  1520  00FFD7  31                 	db	49	;'1'
  1521  00FFD8  30                 	db	48	;'0'
  1522  00FFD9  3A                 	db	58	;':'
  1523  00FFDA  33                 	db	51	;'3'
  1524  00FFDB  38                 	db	56	;'8'
  1525  00FFDC  3A                 	db	58	;':'
  1526  00FFDD  30                 	db	48	;'0'
  1527  00FFDE  39                 	db	57	;'9'
  1528  00FFDF  00                 	db	0
  1529  00FFE0                     STR_3:
  1530                           
  1531                           ; BSR set to: 57
  1532  00FFE0  30                 	db	48	;'0'
  1533  00FFE1  2E                 	db	46
  1534  00FFE2  39                 	db	57	;'9'
  1535  00FFE3  39                 	db	57	;'9'
  1536  00FFE4  33                 	db	51	;'3'
  1537  00FFE5  00                 	db	0
  1538  00FFE6                     STR_46:
  1539                           
  1540                           ; BSR set to: 57
  1541  00FFE6  49                 	db	73	;'I'
  1542  00FFE7  4E                 	db	78	;'N'
  1543  00FFE8  46                 	db	70	;'F'
  1544  00FFE9  00                 	db	0
  1545  00FFEA                     STR_50:
  1546                           
  1547                           ; BSR set to: 57
  1548  00FFEA  4E                 	db	78	;'N'
  1549  00FFEB  41                 	db	65	;'A'
  1550  00FFEC  4E                 	db	78	;'N'
  1551  00FFED  00                 	db	0
  1552  00FFEE                     STR_47:
  1553                           
  1554                           ; BSR set to: 57
  1555  00FFEE  69                 	db	105	;'i'
  1556  00FFEF  6E                 	db	110	;'n'
  1557  00FFF0  66                 	db	102	;'f'
  1558  00FFF1  00                 	db	0
  1559  00FFF2                     STR_51:
  1560                           
  1561                           ; BSR set to: 57
  1562  00FFF2  6E                 	db	110	;'n'
  1563  00FFF3  61                 	db	97	;'a'
  1564  00FFF4  6E                 	db	110	;'n'
  1565  00FFF5  00                 	db	0
  1566  00FFF6                     STR_54:
  1567                           
  1568                           ; BSR set to: 57
  1569  00FFF6  6C                 	db	108	;'l'
  1570  00FFF7  66                 	db	102	;'f'
  1571  00FFF8  00                 	db	0
  1572  00FFF9                     STR_25:
  1573                           
  1574                           ; BSR set to: 57
  1575  00FFF9  25                 	db	37
  1576  00FFFA  63                 	db	99	;'c'
  1577  00FFFB  00                 	db	0
  1578  00FFFC                     STR_24:
  1579                           
  1580                           ; BSR set to: 57
  1581  00FFFC  25                 	db	37
  1582  00FFFD  73                 	db	115	;'s'
  1583  00FFFE  00                 	db	0
  1584  0000                     
  1585                           ; #config settings
  1586  00FFFF  00                 	db	0	; dummy byte at the end
  1587  0000                     
  1588                           	psect	cinit
  1589  01715E                     __pcinit:
  1590                           	opt callstack 0
  1591  01715E                     start_initialization:
  1592                           	opt callstack 0
  1593  01715E                     __initialization:
  1594                           	opt callstack 0
  1595                           
  1596                           ; Initialize objects allocated to BANK2 (188 bytes)
  1597                           ; load TBLPTR registers with __pidataBANK2
  1598  01715E  0ED4               	movlw	low __pidataBANK2
  1599  017160  6EF6               	movwf	tblptrl,c
  1600  017162  0E74               	movlw	high __pidataBANK2
  1601  017164  6EF7               	movwf	tblptrh,c
  1602  017166  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1603  017168  6EF8               	movwf	tblptru,c
  1604  01716A  EE00  F200         	lfsr	0,__pdataBANK2
  1605  01716E  EE20 F0BC          	lfsr	2,188
  1606  017172                     copy_data0:
  1607  017172  0009               	tblrd		*+
  1608  017174  006F FFD7 FFEE     	movff	tablat,postinc0
  1609  01717A  50DD               	movf	postdec2,w,c
  1610  01717C  50D9               	movf	fsr2l,w,c
  1611  01717E  E1F9               	bnz	copy_data0
  1612                           
  1613                           ; Initialize objects allocated to BANK1 (23 bytes)
  1614                           ; load TBLPTR registers with __pidataBANK1
  1615  017180  0E2A               	movlw	low __pidataBANK1
  1616  017182  6EF6               	movwf	tblptrl,c
  1617  017184  0E8D               	movlw	high __pidataBANK1
  1618  017186  6EF7               	movwf	tblptrh,c
  1619  017188  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1620  01718A  6EF8               	movwf	tblptru,c
  1621  01718C  EE00  F1D4         	lfsr	0,__pdataBANK1
  1622  017190  EE20 F017          	lfsr	2,23
  1623  017194                     copy_data1:
  1624  017194  0009               	tblrd		*+
  1625  017196  006F FFD7 FFEE     	movff	tablat,postinc0
  1626  01719C  50DD               	movf	postdec2,w,c
  1627  01719E  50D9               	movf	fsr2l,w,c
  1628  0171A0  E1F9               	bnz	copy_data1
  1629                           
  1630                           ; Initialize objects allocated to BANK0 (47 bytes)
  1631                           ; load TBLPTR registers with __pidataBANK0
  1632  0171A2  0EFE               	movlw	low __pidataBANK0
  1633  0171A4  6EF6               	movwf	tblptrl,c
  1634  0171A6  0E86               	movlw	high __pidataBANK0
  1635  0171A8  6EF7               	movwf	tblptrh,c
  1636  0171AA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1637  0171AC  6EF8               	movwf	tblptru,c
  1638  0171AE  EE00  F0C7         	lfsr	0,__pdataBANK0
  1639  0171B2  EE20 F02F          	lfsr	2,47
  1640  0171B6                     copy_data2:
  1641  0171B6  0009               	tblrd		*+
  1642  0171B8  006F FFD7 FFEE     	movff	tablat,postinc0
  1643  0171BE  50DD               	movf	postdec2,w,c
  1644  0171C0  50D9               	movf	fsr2l,w,c
  1645  0171C2  E1F9               	bnz	copy_data2
  1646                           
  1647                           ; Clear objects allocated to BANK7 (255 bytes)
  1648  0171C4  EE01  F300         	lfsr	0,__pbssBANK7
  1649  0171C8  EE20 F0FF          	lfsr	2,255
  1650  0171CC                     clear_0:
  1651  0171CC  6AEE               	clrf	postinc0,c
  1652  0171CE  50DD               	movf	postdec2,w,c
  1653  0171D0  50D9               	movf	fsr2l,w,c
  1654  0171D2  E1FC               	bnz	clear_0
  1655  0171D4  50DA               	movf	fsr2h,w,c
  1656  0171D6  E1FA               	bnz	clear_0
  1657                           
  1658                           ; Clear objects allocated to BANK6 (255 bytes)
  1659  0171D8  EE01  F200         	lfsr	0,__pbssBANK6
  1660  0171DC  EE20 F0FF          	lfsr	2,255
  1661  0171E0                     clear_1:
  1662  0171E0  6AEE               	clrf	postinc0,c
  1663  0171E2  50DD               	movf	postdec2,w,c
  1664  0171E4  50D9               	movf	fsr2l,w,c
  1665  0171E6  E1FC               	bnz	clear_1
  1666  0171E8  50DA               	movf	fsr2h,w,c
  1667  0171EA  E1FA               	bnz	clear_1
  1668                           
  1669                           ; Clear objects allocated to BANK5 (218 bytes)
  1670  0171EC  EE01  F100         	lfsr	0,__pbssBANK5
  1671  0171F0  0EDA               	movlw	218
  1672  0171F2                     clear_2:
  1673  0171F2  6AEE               	clrf	postinc0,c
  1674  0171F4  06E8               	decf	wreg,f,c
  1675  0171F6  E1FD               	bnz	clear_2
  1676                           
  1677                           ; Clear objects allocated to BANK4 (67 bytes)
  1678  0171F8  EE01  F000         	lfsr	0,__pbssBANK4
  1679  0171FC  0E43               	movlw	67
  1680  0171FE                     clear_3:
  1681  0171FE  6AEE               	clrf	postinc0,c
  1682  017200  06E8               	decf	wreg,f,c
  1683  017202  E1FD               	bnz	clear_3
  1684                           
  1685                           ; Clear objects allocated to BANK3 (215 bytes)
  1686  017204  EE00  F300         	lfsr	0,__pbssBANK3
  1687  017208  0ED7               	movlw	215
  1688  01720A                     clear_4:
  1689  01720A  6AEE               	clrf	postinc0,c
  1690  01720C  06E8               	decf	wreg,f,c
  1691  01720E  E1FD               	bnz	clear_4
  1692                           
  1693                           ; Clear objects allocated to BANK2 (64 bytes)
  1694  017210  EE00  F2BC         	lfsr	0,__pbssBANK2
  1695  017214  0E40               	movlw	64
  1696  017216                     clear_5:
  1697  017216  6AEE               	clrf	postinc0,c
  1698  017218  06E8               	decf	wreg,f,c
  1699  01721A  E1FD               	bnz	clear_5
  1700                           
  1701                           ; Clear objects allocated to BANK1 (212 bytes)
  1702  01721C  EE00  F100         	lfsr	0,__pbssBANK1
  1703  017220  0ED4               	movlw	212
  1704  017222                     clear_6:
  1705  017222  6AEE               	clrf	postinc0,c
  1706  017224  06E8               	decf	wreg,f,c
  1707  017226  E1FD               	bnz	clear_6
  1708                           
  1709                           ; Clear objects allocated to BANK0 (103 bytes)
  1710  017228  EE00  F060         	lfsr	0,__pbssBANK0
  1711  01722C  0E67               	movlw	103
  1712  01722E                     clear_7:
  1713  01722E  6AEE               	clrf	postinc0,c
  1714  017230  06E8               	decf	wreg,f,c
  1715  017232  E1FD               	bnz	clear_7
  1716                           
  1717                           ; Clear objects allocated to COMRAM (49 bytes)
  1718  017234  EE00  F001         	lfsr	0,__pbssCOMRAM
  1719  017238  0E31               	movlw	49
  1720  01723A                     clear_8:
  1721  01723A  6AEE               	clrf	postinc0,c
  1722  01723C  06E8               	decf	wreg,f,c
  1723  01723E  E1FD               	bnz	clear_8
  1724                           
  1725                           ;
  1726                           ; Setup IVTBASE
  1727                           ;
  1728  017240  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1729  017242  6ED5               	movwf	213,c
  1730  017244  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1731  017246  6ED6               	movwf	214,c
  1732  017248  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1733  01724A  6ED7               	movwf	215,c
  1734  01724C                     end_of_initialization:
  1735                           	opt callstack 0
  1736  01724C                     __end_of__initialization:
  1737                           	opt callstack 0
  1738  01724C  0100               	movlb	0
  1739  01724E  EFC1  F08E         	goto	_main	;jump to C main() function
  1740                           
  1741                           	psect	bssCOMRAM
  1742  000001                     __pbssCOMRAM:
  1743                           	opt callstack 0
  1744  000001                     _ADCC_ADTI_InterruptHandler:
  1745                           	opt callstack 0
  1746  000001                     	ds	3
  1747  000004                     _ADCC_ADI_InterruptHandler:
  1748                           	opt callstack 0
  1749  000004                     	ds	3
  1750  000007                     _UART1_TxInterruptHandler:
  1751                           	opt callstack 0
  1752  000007                     	ds	3
  1753  00000A                     _UART1_RxInterruptHandler:
  1754                           	opt callstack 0
  1755  00000A                     	ds	3
  1756  00000D                     _UART2_TxInterruptHandler:
  1757                           	opt callstack 0
  1758  00000D                     	ds	3
  1759  000010                     _UART2_RxInterruptHandler:
  1760                           	opt callstack 0
  1761  000010                     	ds	3
  1762  000013                     _INT1_InterruptHandler:
  1763                           	opt callstack 0
  1764  000013                     	ds	3
  1765  000016                     _INT0_InterruptHandler:
  1766                           	opt callstack 0
  1767  000016                     	ds	3
  1768  000019                     _nout:
  1769                           	opt callstack 0
  1770  000019                     	ds	2
  1771  00001B                     _width:
  1772                           	opt callstack 0
  1773  00001B                     	ds	2
  1774  00001D                     _prec:
  1775                           	opt callstack 0
  1776  00001D                     	ds	2
  1777  00001F                     _flags:
  1778                           	opt callstack 0
  1779  00001F                     	ds	2
  1780  000021                     TMR5_ISR@CountCallBack:
  1781                           	opt callstack 0
  1782  000021                     	ds	2
  1783  000023                     _timer5ReloadVal:
  1784                           	opt callstack 0
  1785  000023                     	ds	2
  1786  000025                     _mode_sw:
  1787                           	opt callstack 0
  1788  000025                     	ds	1
  1789  000026                     _uart2RxCount:
  1790                           	opt callstack 0
  1791  000026                     	ds	1
  1792  000027                     _uart2RxTail:
  1793                           	opt callstack 0
  1794  000027                     	ds	1
  1795  000028                     _uart2RxHead:
  1796                           	opt callstack 0
  1797  000028                     	ds	1
  1798  000029                     _uart2TxBufferRemaining:
  1799                           	opt callstack 0
  1800  000029                     	ds	1
  1801  00002A                     _uart2TxTail:
  1802                           	opt callstack 0
  1803  00002A                     	ds	1
  1804  00002B                     _uart2TxHead:
  1805                           	opt callstack 0
  1806  00002B                     	ds	1
  1807  00002C                     _uart1RxCount:
  1808                           	opt callstack 0
  1809  00002C                     	ds	1
  1810  00002D                     _uart1RxTail:
  1811                           	opt callstack 0
  1812  00002D                     	ds	1
  1813  00002E                     _uart1RxHead:
  1814                           	opt callstack 0
  1815  00002E                     	ds	1
  1816  00002F                     _uart1TxBufferRemaining:
  1817                           	opt callstack 0
  1818  00002F                     	ds	1
  1819  000030                     _uart1TxTail:
  1820                           	opt callstack 0
  1821  000030                     	ds	1
  1822  000031                     _uart1TxHead:
  1823                           	opt callstack 0
  1824  000031                     	ds	1
  1825                           
  1826                           	psect	bssBANK0
  1827  000060                     __pbssBANK0:
  1828                           	opt callstack 0
  1829  000060                     _S:
  1830                           	opt callstack 0
  1831  000060                     	ds	41
  1832  000089                     _tickCount:
  1833                           	opt callstack 0
  1834  000089                     	ds	24
  1835  0000A1                     _spi_link:
  1836                           	opt callstack 0
  1837  0000A1                     	ds	12
  1838  0000AD                     floorf@F524:
  1839                           	opt callstack 0
  1840  0000AD                     	ds	4
  1841  0000B1                     ___fpclassifyf@F463:
  1842                           	opt callstack 0
  1843  0000B1                     	ds	4
  1844  0000B5                     _utctime:
  1845                           	opt callstack 0
  1846  0000B5                     	ds	4
  1847  0000B9                     wdtdelay@dcount:
  1848                           	opt callstack 0
  1849  0000B9                     	ds	4
  1850  0000BD                     _P:
  1851                           	opt callstack 0
  1852  0000BD                     	ds	4
  1853  0000C1                     _TMR5_InterruptHandler:
  1854                           	opt callstack 0
  1855  0000C1                     	ds	3
  1856  0000C4                     _TMR6_InterruptHandler:
  1857                           	opt callstack 0
  1858  0000C4                     	ds	3
  1859                           
  1860                           	psect	dataBANK0
  1861  0000C7                     __pdataBANK0:
  1862                           	opt callstack 0
  1863  0000C7                     _R:
  1864                           	opt callstack 0
  1865  0000C7                     	ds	40
  1866  0000EF                     _H:
  1867                           	opt callstack 0
  1868  0000EF                     	ds	7
  1869                           
  1870                           	psect	bssBANK1
  1871  000100                     __pbssBANK1:
  1872                           	opt callstack 0
  1873  000100                     _C:
  1874                           	opt callstack 0
  1875  000100                     	ds	124
  1876  00017C                     _dbuf:
  1877                           	opt callstack 0
  1878  00017C                     	ds	80
  1879  0001CC                     _seed:
  1880                           	opt callstack 0
  1881  0001CC                     	ds	8
  1882                           
  1883                           	psect	dataBANK1
  1884  0001D4                     __pdataBANK1:
  1885                           	opt callstack 0
  1886  0001D4                     stoa@F1166:
  1887                           	opt callstack 0
  1888  0001D4                     	ds	7
  1889  0001DB                     _port_data:
  1890                           	opt callstack 0
  1891  0001DB                     	ds	16
  1892                           
  1893                           	psect	bssBANK2
  1894  0002BC                     __pbssBANK2:
  1895                           	opt callstack 0
  1896  0002BC                     _uart1TxBuffer:
  1897                           	opt callstack 0
  1898  0002BC                     	ds	64
  1899                           
  1900                           	psect	dataBANK2
  1901  000200                     __pdataBANK2:
  1902                           	opt callstack 0
  1903  000200                     _V:
  1904                           	opt callstack 0
  1905  000200                     	ds	188
  1906                           
  1907                           	psect	bssBANK3
  1908  000300                     __pbssBANK3:
  1909                           	opt callstack 0
  1910  000300                     lp_filter@smooth:
  1911                           	opt callstack 0
  1912  000300                     	ds	84
  1913  000354                     _uart2TxBuffer:
  1914                           	opt callstack 0
  1915  000354                     	ds	64
  1916  000394                     _ring_buf1:
  1917                           	opt callstack 0
  1918  000394                     	ds	67
  1919                           
  1920                           	psect	bssBANK4
  1921  000400                     __pbssBANK4:
  1922                           	opt callstack 0
  1923  000400                     _ring_buf2:
  1924                           	opt callstack 0
  1925  000400                     	ds	67
  1926                           
  1927                           	psect	bssBANK5
  1928  000500                     __pbssBANK5:
  1929                           	opt callstack 0
  1930  000500                     _D:
  1931                           	opt callstack 0
  1932  000500                     	ds	218
  1933                           
  1934                           	psect	bssBANK6
  1935  000600                     __pbssBANK6:
  1936                           	opt callstack 0
  1937  000600                     _uart1RxBuffer:
  1938                           	opt callstack 0
  1939  000600                     	ds	255
  1940                           
  1941                           	psect	bssBANK7
  1942  000700                     __pbssBANK7:
  1943                           	opt callstack 0
  1944  000700                     _uart2RxBuffer:
  1945                           	opt callstack 0
  1946  000700                     	ds	255
  1947                           
  1948                           	psect	cstackBANK1
  1949  0001EB                     __pcstackBANK1:
  1950                           	opt callstack 0
  1951  0001EB                     ??_TMR5_ISR:
  1952                           
  1953                           ; 1 bytes @ 0x0
  1954  0001EB                     	ds	4
  1955                           
  1956                           	psect	cstackBANK0
  1957  0000F6                     __pcstackBANK0:
  1958                           	opt callstack 0
  1959  0000F6                     ??_INT1_ISR:
  1960                           
  1961                           ; 1 bytes @ 0x0
  1962  0000F6                     	ds	4
  1963                           
  1964                           	psect	cstackCOMRAM
  1965  000052                     __pcstackCOMRAM:
  1966                           	opt callstack 0
  1967  000052                     ??_ADCC_ThresholdISR:
  1968  000052                     
  1969                           ; 1 bytes @ 0x0
  1970  000052                     	ds	5
  1971  000057                     ??_TMR6_ISR:
  1972                           
  1973                           ; 1 bytes @ 0x5
  1974  000057                     	ds	1
  1975  000058                     
  1976                           ; 1 bytes @ 0x6
  1977 ;;
  1978 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  1979 ;;
  1980 ;; *************** function _main *****************
  1981 ;; Defined at:
  1982 ;;		line 167 in file "main.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  k               1  [STACK] unsigned char 
  1987 ;;  j               1  [STACK] unsigned char 
  1988 ;;  i               1  [STACK] unsigned char 
  1989 ;;  inp_index       1  [STACK] unsigned char 
  1990 ;;  mode            1  [STACK] enum E17005
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1  [STACK] void 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 1/1
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels required when called:   19
  2006 ;; This function calls:
  2007 ;;		_SYSTEM_Initialize
  2008 ;;		_StartTimer
  2009 ;;		_TimerDone
  2010 ;;		_WaitMs
  2011 ;;		_calc_model_data
  2012 ;;		_check_adc_scan
  2013 ;;		_check_help
  2014 ;;		_clear_adc_scan
  2015 ;;		_clear_hid_pflags
  2016 ;;		_convert_adc_data
  2017 ;;		_eaDogM_WriteCommand
  2018 ;;		_get_raw_result
  2019 ;;		_get_switch
  2020 ;;		_get_vterm_ptr
  2021 ;;		_hid_display
  2022 ;;		_init_display
  2023 ;;		_lp_filter
  2024 ;;		_mode_lamp_dim
  2025 ;;		_set_display_info
  2026 ;;		_set_vterm
  2027 ;;		_sprintf
  2028 ;;		_srand
  2029 ;;		_start_adc_scan
  2030 ;;		_start_switch_handler
  2031 ;;		_update_lcd
  2032 ;; This function is called by:
  2033 ;;		Startup code after reset
  2034 ;; This function uses a reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text0
  2038  011D82                     __ptext0:
  2039                           	opt callstack 0
  2040  011D82                     _main:
  2041                           	opt callstack 0
  2042                           
  2043                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2044  011D82  0E05               	movlw	5
  2045  011D84  26E1               	addwf	fsr1l,f,c
  2046  011D86  0E00               	movlw	0
  2047  011D88  22E2               	addwfc	fsr1h,f,c
  2048                           
  2049                           ;main.c: 169:  UI_STATES mode;;main.c: 170:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2050                           ;stkvar	_inp_index @ sp[(-5)+3]
  2051                           
  2052                           ;incstack = 0
  2053  011D8A  0EFE               	movlw	-2
  2054  011D8C  6AE3               	clrf	plusw1,c
  2055                           
  2056                           ;stkvar	_i @ sp[(-5)+2]
  2057  011D8E  0EFD               	movlw	-3
  2058  011D90  6AE3               	clrf	plusw1,c
  2059                           
  2060                           ;stkvar	_j @ sp[(-5)+1]
  2061  011D92  0EFC               	movlw	-4
  2062  011D94  6AE3               	clrf	plusw1,c
  2063  011D96  2AE3               	incf	plusw1,f,c
  2064                           
  2065                           ;stkvar	_k @ sp[(-5)+0]
  2066  011D98  0EFB               	movlw	-5
  2067  011D9A  6AE3               	clrf	plusw1,c
  2068  011D9C  82E3               	bsf	plusw1,1,c
  2069                           
  2070                           ;main.c: 173:  SYSTEM_Initialize();
  2071  011D9E  ECA8  F0C1         	call	_SYSTEM_Initialize	;wreg free
  2072                           
  2073                           ; BSR set to: 60
  2074                           ;main.c: 176:  (INTCON0bits.GIEH = 1);
  2075  011DA2  8ED2               	bsf	210,7,c	;volatile
  2076                           
  2077                           ; BSR set to: 60
  2078                           ;main.c: 179:  (INTCON0bits.GIEL = 1);
  2079  011DA4  8CD2               	bsf	210,6,c	;volatile
  2080                           
  2081                           ; BSR set to: 60
  2082                           ;main.c: 181:  V.ui_state = UI_STATE_INIT;
  2083  011DA6  0102               	movlb	2	; () banked
  2084  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2085                           
  2086                           ; BSR set to: 2
  2087                           ;main.c: 186:  WaitMs(300);
  2088  011DAA  0E2C               	movlw	44
  2089  011DAC  6EE6               	movwf	postinc1,c
  2090  011DAE  0E01               	movlw	1
  2091  011DB0  6EE6               	movwf	postinc1,c
  2092  011DB2  ECCD  F0C2         	call	_WaitMs	;wreg free
  2093                           
  2094                           ;main.c: 187:  if (PORTBbits.RB0) {
  2095  011DB6  A0CB               	btfss	203,0,c	;volatile
  2096  011DB8  D004               	goto	l10756
  2097                           
  2098                           ;main.c: 188:   mode = UI_STATE_HOST;
  2099                           ;stkvar	_mode @ sp[(-5)+4]
  2100  011DBA  0EFF               	movlw	-1
  2101  011DBC  6AE3               	clrf	plusw1,c
  2102  011DBE  2AE3               	incf	plusw1,f,c
  2103                           
  2104                           ;main.c: 189:  } else {
  2105  011DC0  D004               	goto	l10758
  2106  011DC2                     l10756:
  2107                           
  2108                           ;main.c: 190:   mode = UI_STATE_LOG;
  2109                           ;stkvar	_mode @ sp[(-5)+4]
  2110  011DC2  0EFF               	movlw	-1
  2111  011DC4  6AE3               	clrf	plusw1,c
  2112  011DC6  80E3               	bsf	plusw1,0,c
  2113  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2114  011DCA                     l10758:
  2115                           
  2116                           ;main.c: 193:  if (mode == UI_STATE_HOST) {
  2117                           ;stkvar	_mode @ sp[(-5)+4]
  2118  011DCA  0EFF               	movlw	-1
  2119  011DCC  04E3               	decf	plusw1,w,c
  2120  011DCE  A4D8               	btfss	status,2,c
  2121  011DD0  D007               	goto	l1256
  2122                           
  2123                           ;main.c: 194:   do { LATDbits.LATD0 = 1; } while(0);
  2124  011DD2  80BD               	bsf	189,0,c	;volatile
  2125                           
  2126                           ;main.c: 195:   V.mode_pwm = 70;
  2127  011DD4  0E00               	movlw	0
  2128  011DD6  0102               	movlb	2	; () banked
  2129  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2130  011DDA  0E46               	movlw	70
  2131  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2132                           
  2133                           ;main.c: 196:  } else {
  2134  011DDE  D004               	goto	l10762
  2135  011DE0                     l1256:
  2136  011DE0  90BD               	bcf	189,0,c	;volatile
  2137                           
  2138                           ;main.c: 198:   V.mode_pwm = 0;
  2139  011DE2  0102               	movlb	2	; () banked
  2140  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2141  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2142  011DE8                     l10762:
  2143                           
  2144                           ; BSR set to: 2
  2145                           ;main.c: 200:  mode_lamp_dim(V.mode_pwm);
  2146  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2147  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2148  011DF4  EC7D  F0C6         	call	_mode_lamp_dim	;wreg free
  2149  011DF8  D0D0               	goto	l10806
  2150  011DFA                     l10764:
  2151                           
  2152                           ; BSR set to: 2
  2153                           ;main.c: 211:    init_display();
  2154  011DFA  EC29  F0B9         	call	_init_display	;wreg free
  2155                           
  2156                           ; BSR set to: 61
  2157                           ;main.c: 212:    eaDogM_WriteCommand(0b00001100);
  2158  011DFE  0E0C               	movlw	12
  2159  011E00  6EE6               	movwf	postinc1,c
  2160  011E02  ECDD  F0C6         	call	_eaDogM_WriteCommand	;wreg free
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;main.c: 214:    V.ui_state = mode;
  2164                           ;stkvar	_mode @ sp[(-5)+4]
  2165  011E06  0EFF               	movlw	-1
  2166  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 215:    srand(1957);
  2170  011E0E  0EA5               	movlw	165
  2171  011E10  6EE6               	movwf	postinc1,c
  2172  011E12  0E07               	movlw	7
  2173  011E14  6EE6               	movwf	postinc1,c
  2174  011E16  EC03  F0C3         	call	_srand	;wreg free
  2175                           
  2176                           ; BSR set to: 1
  2177                           ;main.c: 216:    set_vterm(0);
  2178  011E1A  0E00               	movlw	0
  2179  011E1C  6EE6               	movwf	postinc1,c
  2180  011E1E  EC54  F0C6         	call	_set_vterm	;wreg free
  2181                           
  2182                           ; BSR set to: 5
  2183                           ;main.c: 217:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2184  011E22  0E60               	movlw	low STR_1
  2185  011E24  6EE6               	movwf	postinc1,c
  2186  011E26  0EFF               	movlw	high STR_1
  2187  011E28  6EE6               	movwf	postinc1,c
  2188  011E2A  0E00               	movlw	0
  2189  011E2C  6EE6               	movwf	postinc1,c
  2190  011E2E  0E00               	movlw	0
  2191  011E30  6EE6               	movwf	postinc1,c
  2192  011E32  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2193  011E36  0060  F0CB  FFE6   	movff	btemp,postinc1
  2194  011E3C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2195  011E42  0E04               	movlw	4
  2196  011E44  6EE6               	movwf	postinc1,c
  2197  011E46  ECA9  F0B7         	call	_sprintf	;wreg free
  2198                           
  2199                           ;main.c: 218:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.993");
  2200  011E4A  0EE0               	movlw	low STR_3
  2201  011E4C  6EE6               	movwf	postinc1,c
  2202  011E4E  0EFF               	movlw	high STR_3
  2203  011E50  6EE6               	movwf	postinc1,c
  2204  011E52  0EB2               	movlw	low STR_2
  2205  011E54  6EE6               	movwf	postinc1,c
  2206  011E56  0EFF               	movlw	high STR_2
  2207  011E58  6EE6               	movwf	postinc1,c
  2208  011E5A  0E00               	movlw	0
  2209  011E5C  6EE6               	movwf	postinc1,c
  2210  011E5E  0E01               	movlw	1
  2211  011E60  6EE6               	movwf	postinc1,c
  2212  011E62  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2213  011E66  0060  F0CB  FFE6   	movff	btemp,postinc1
  2214  011E6C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2215  011E72  0E06               	movlw	6
  2216  011E74  6EE6               	movwf	postinc1,c
  2217  011E76  ECA9  F0B7         	call	_sprintf	;wreg free
  2218                           
  2219                           ;main.c: 219:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2220  011E7A  0E4F               	movlw	low STR_4
  2221  011E7C  6EE6               	movwf	postinc1,c
  2222  011E7E  0EFF               	movlw	high STR_4
  2223  011E80  6EE6               	movwf	postinc1,c
  2224  011E82  0E00               	movlw	0
  2225  011E84  6EE6               	movwf	postinc1,c
  2226  011E86  0E02               	movlw	2
  2227  011E88  6EE6               	movwf	postinc1,c
  2228  011E8A  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2229  011E8E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2230  011E94  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2231  011E9A  0E04               	movlw	4
  2232  011E9C  6EE6               	movwf	postinc1,c
  2233  011E9E  ECA9  F0B7         	call	_sprintf	;wreg free
  2234                           
  2235                           ;main.c: 220:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2236  011EA2  0E71               	movlw	low STR_5
  2237  011EA4  6EE6               	movwf	postinc1,c
  2238  011EA6  0EFF               	movlw	high STR_5
  2239  011EA8  6EE6               	movwf	postinc1,c
  2240  011EAA  0E02               	movlw	2
  2241  011EAC  6EE6               	movwf	postinc1,c
  2242  011EAE  0E00               	movlw	0
  2243  011EB0  6EE6               	movwf	postinc1,c
  2244  011EB2  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2245  011EB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2246  011EBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2247  011EC2  0E04               	movlw	4
  2248  011EC4  6EE6               	movwf	postinc1,c
  2249  011EC6  ECA9  F0B7         	call	_sprintf	;wreg free
  2250                           
  2251                           ;main.c: 221:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.993");
  2252  011ECA  0EE0               	movlw	low STR_3
  2253  011ECC  6EE6               	movwf	postinc1,c
  2254  011ECE  0EFF               	movlw	high STR_3
  2255  011ED0  6EE6               	movwf	postinc1,c
  2256  011ED2  0EB2               	movlw	low STR_2
  2257  011ED4  6EE6               	movwf	postinc1,c
  2258  011ED6  0EFF               	movlw	high STR_2
  2259  011ED8  6EE6               	movwf	postinc1,c
  2260  011EDA  0E02               	movlw	2
  2261  011EDC  6EE6               	movwf	postinc1,c
  2262  011EDE  0E01               	movlw	1
  2263  011EE0  6EE6               	movwf	postinc1,c
  2264  011EE2  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2265  011EE6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2266  011EEC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2267  011EF2  0E06               	movlw	6
  2268  011EF4  6EE6               	movwf	postinc1,c
  2269  011EF6  ECA9  F0B7         	call	_sprintf	;wreg free
  2270                           
  2271                           ;main.c: 222:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2272  011EFA  0E3E               	movlw	low STR_8
  2273  011EFC  6EE6               	movwf	postinc1,c
  2274  011EFE  0EFF               	movlw	high STR_8
  2275  011F00  6EE6               	movwf	postinc1,c
  2276  011F02  0E02               	movlw	2
  2277  011F04  6EE6               	movwf	postinc1,c
  2278  011F06  0E02               	movlw	2
  2279  011F08  6EE6               	movwf	postinc1,c
  2280  011F0A  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2281  011F0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2282  011F14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2283  011F1A  0E04               	movlw	4
  2284  011F1C  6EE6               	movwf	postinc1,c
  2285  011F1E  ECA9  F0B7         	call	_sprintf	;wreg free
  2286                           
  2287                           ;main.c: 223:    update_lcd(0);
  2288  011F22  0E00               	movlw	0
  2289  011F24  6EE6               	movwf	postinc1,c
  2290  011F26  EC22  F0B7         	call	_update_lcd	;wreg free
  2291                           
  2292                           ;main.c: 224:    WaitMs(3000);
  2293  011F2A  0EB8               	movlw	184
  2294  011F2C  6EE6               	movwf	postinc1,c
  2295  011F2E  0E0B               	movlw	11
  2296  011F30  6EE6               	movwf	postinc1,c
  2297  011F32  ECCD  F0C2         	call	_WaitMs	;wreg free
  2298                           
  2299                           ;main.c: 225:    StartTimer(TMR_DISPLAY, 250);
  2300  011F36  0EFA               	movlw	250
  2301  011F38  6EE6               	movwf	postinc1,c
  2302  011F3A  0E00               	movlw	0
  2303  011F3C  6EE6               	movwf	postinc1,c
  2304  011F3E  0E0A               	movlw	10
  2305  011F40  6EE6               	movwf	postinc1,c
  2306  011F42  EC93  F0C2         	call	_StartTimer	;wreg free
  2307                           
  2308                           ;main.c: 226:    StartTimer(TMR_ADC, 200);
  2309  011F46  0EC8               	movlw	200
  2310  011F48  6EE6               	movwf	postinc1,c
  2311  011F4A  0E00               	movlw	0
  2312  011F4C  6EE6               	movwf	postinc1,c
  2313  011F4E  0E01               	movlw	1
  2314  011F50  6EE6               	movwf	postinc1,c
  2315  011F52  EC93  F0C2         	call	_StartTimer	;wreg free
  2316                           
  2317                           ;main.c: 227:    StartTimer(TMR_INFO, 3000);
  2318  011F56  0EB8               	movlw	184
  2319  011F58  6EE6               	movwf	postinc1,c
  2320  011F5A  0E0B               	movlw	11
  2321  011F5C  6EE6               	movwf	postinc1,c
  2322  011F5E  0E07               	movlw	7
  2323  011F60  6EE6               	movwf	postinc1,c
  2324  011F62  EC93  F0C2         	call	_StartTimer	;wreg free
  2325                           
  2326                           ;main.c: 228:    StartTimer(TMR_FLIPPER, 1500);
  2327  011F66  0EDC               	movlw	220
  2328  011F68  6EE6               	movwf	postinc1,c
  2329  011F6A  0E05               	movlw	5
  2330  011F6C  6EE6               	movwf	postinc1,c
  2331  011F6E  0E0B               	movlw	11
  2332  011F70  6EE6               	movwf	postinc1,c
  2333  011F72  EC93  F0C2         	call	_StartTimer	;wreg free
  2334                           
  2335                           ;main.c: 229:    StartTimer(TMR_HELPDIS, 3000);
  2336  011F76  0EB8               	movlw	184
  2337  011F78  6EE6               	movwf	postinc1,c
  2338  011F7A  0E0B               	movlw	11
  2339  011F7C  6EE6               	movwf	postinc1,c
  2340  011F7E  0E09               	movlw	9
  2341  011F80  6EE6               	movwf	postinc1,c
  2342  011F82  EC93  F0C2         	call	_StartTimer	;wreg free
  2343                           
  2344                           ;main.c: 231:    start_adc_scan();
  2345  011F86  EC6F  F0BF         	call	_start_adc_scan	;wreg free
  2346                           
  2347                           ;main.c: 232:    start_switch_handler();
  2348  011F8A  ECEB  F0C5         	call	_start_switch_handler	;wreg free
  2349                           
  2350                           ;main.c: 234:    break;
  2351  011F8E  D01C               	goto	l10808
  2352  011F90                     l1264:
  2353                           
  2354                           ; BSR set to: 2
  2355                           ;main.c: 240:    P.SYSTEM_STABLE = 1;
  2356  011F90  0100               	movlb	0	; () banked
  2357  011F92  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2358                           
  2359                           ;main.c: 241:    break;
  2360  011F94  D019               	goto	l10808
  2361  011F96                     l1266:
  2362                           
  2363                           ; BSR set to: 2
  2364                           ;main.c: 244:    V.ui_state = UI_STATE_INIT;
  2365  011F96  6B00               	clrf	_V& (0+255),b	;volatile
  2366                           
  2367                           ;main.c: 245:    break;
  2368  011F98  D017               	goto	l10808
  2369  011F9A                     l10806:
  2370  011F9A  0102               	movlb	2	; () banked
  2371  011F9C  5100               	movf	_V& (0+255),w,b	;volatile
  2372  011F9E  6E3C               	movwf	(btemp+10)^0,c
  2373  011FA0  6A3D               	clrf	(btemp+11)^0,c
  2374                           
  2375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2376                           ; Switch size 1, requested type "simple"
  2377                           ; Number of cases is 1, Range of values is 0 to 0
  2378                           ; switch strategies available:
  2379                           ; Name         Instructions Cycles
  2380                           ; simple_byte            4     3 (average)
  2381                           ;	Chosen strategy is simple_byte
  2382  011FA2  503D               	movf	(btemp+11)^0,w,c
  2383  011FA4  0A00               	xorlw	0	; case 0
  2384  011FA6  A4D8               	btfss	status,2,c
  2385  011FA8  D7F6               	goto	l1266
  2386                           
  2387                           ; BSR set to: 2
  2388                           ; Switch size 1, requested type "simple"
  2389                           ; Number of cases is 5, Range of values is 0 to 5
  2390                           ; switch strategies available:
  2391                           ; Name         Instructions Cycles
  2392                           ; simple_byte           16     9 (average)
  2393                           ;	Chosen strategy is simple_byte
  2394  011FAA  503C               	movf	(btemp+10)^0,w,c
  2395  011FAC  0A00               	xorlw	0	; case 0
  2396  011FAE  B4D8               	btfsc	status,2,c
  2397  011FB0  D724               	goto	l10764
  2398  011FB2  0A01               	xorlw	1	; case 1
  2399  011FB4  B4D8               	btfsc	status,2,c
  2400  011FB6  D008               	goto	l10808
  2401  011FB8  0A02               	xorlw	2	; case 3
  2402  011FBA  B4D8               	btfsc	status,2,c
  2403  011FBC  D005               	goto	l10808
  2404  011FBE  0A07               	xorlw	7	; case 4
  2405  011FC0  B4D8               	btfsc	status,2,c
  2406  011FC2  D7E6               	goto	l1264
  2407  011FC4  0A01               	xorlw	1	; case 5
  2408  011FC6  D7E7               	goto	l1266
  2409  011FC8                     l10808:
  2410                           
  2411                           ;main.c: 248:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2412  011FC8  0E01               	movlw	1
  2413  011FCA  6EE6               	movwf	postinc1,c
  2414  011FCC  EC93  F0C5         	call	_TimerDone	;wreg free
  2415  011FD0  5032               	movf	btemp^0,w,c
  2416  011FD2  B4D8               	btfsc	status,2,c
  2417  011FD4  D013               	goto	l10820
  2418  011FD6  EC1D  F0C7         	call	_check_adc_scan	;wreg free
  2419  011FDA  5032               	movf	btemp^0,w,c
  2420  011FDC  B4D8               	btfsc	status,2,c
  2421  011FDE  D00E               	goto	l10820
  2422                           
  2423                           ;main.c: 252:    convert_adc_data();
  2424  011FE0  ECC8  F0BA         	call	_convert_adc_data	;wreg free
  2425                           
  2426                           ;main.c: 256:    clear_adc_scan();
  2427  011FE4  EC25  F0C7         	call	_clear_adc_scan	;wreg free
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 257:    start_adc_scan();
  2431  011FE8  EC6F  F0BF         	call	_start_adc_scan	;wreg free
  2432                           
  2433                           ;main.c: 258:    StartTimer(TMR_ADC, 200);
  2434  011FEC  0EC8               	movlw	200
  2435  011FEE  6EE6               	movwf	postinc1,c
  2436  011FF0  0E00               	movlw	0
  2437  011FF2  6EE6               	movwf	postinc1,c
  2438  011FF4  0E01               	movlw	1
  2439  011FF6  6EE6               	movwf	postinc1,c
  2440  011FF8  EC93  F0C2         	call	_StartTimer	;wreg free
  2441  011FFC                     l10820:
  2442                           
  2443                           ;main.c: 265:   if (TimerDone(TMR_DISPLAY)) {
  2444                           
  2445                           ;main.c: 261:   if (V.ticks) {
  2446  011FFC  0E0A               	movlw	10
  2447  011FFE  6EE6               	movwf	postinc1,c
  2448  012000  EC93  F0C5         	call	_TimerDone	;wreg free
  2449  012004  5032               	movf	btemp^0,w,c
  2450  012006  B4D8               	btfsc	status,2,c
  2451  012008  D252               	goto	l10862
  2452                           
  2453                           ;main.c: 266:    if (TimerDone(TMR_HELPDIS)) {
  2454  01200A  0E09               	movlw	9
  2455  01200C  6EE6               	movwf	postinc1,c
  2456  01200E  EC93  F0C5         	call	_TimerDone	;wreg free
  2457  012012  5032               	movf	btemp^0,w,c
  2458  012014  B4D8               	btfsc	status,2,c
  2459  012016  D004               	goto	l10828
  2460                           
  2461                           ;main.c: 267:     set_display_info(DIS_STR);
  2462  012018  0E00               	movlw	0
  2463  01201A  6EE6               	movwf	postinc1,c
  2464  01201C  EC19  F0C6         	call	_set_display_info	;wreg free
  2465  012020                     l10828:
  2466                           
  2467                           ;main.c: 269:    calc_model_data();
  2468  012020  EC2E  F0A7         	call	_calc_model_data	;wreg free
  2469                           
  2470                           ; BSR set to: 1
  2471                           ;main.c: 276:     hid_display(&H);
  2472                           
  2473                           ;main.c: 271:    if (0) {
  2474  012024  0EEF               	movlw	_H& (0+255)
  2475  012026  6EE6               	movwf	postinc1,c
  2476  012028  EC2E  F0B8         	call	_hid_display	;wreg free
  2477                           
  2478                           ;main.c: 277:     switch (H.hid_display) {
  2479  01202C  D21B               	goto	l10854
  2480  01202E                     l1274:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;main.c: 279:      V.calib = 0;
  2484  01202E  0102               	movlb	2	; () banked
  2485  012030  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2486                           
  2487                           ; BSR set to: 2
  2488                           ;main.c: 280:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2489  012032  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2490  012038  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2491  01203E  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2492  012044  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2493  01204A  0EB9               	movlw	low STR_12
  2494  01204C  6EE6               	movwf	postinc1,c
  2495  01204E  0EFE               	movlw	high STR_12
  2496  012050  6EE6               	movwf	postinc1,c
  2497  012052  0E00               	movlw	0
  2498  012054  6EE6               	movwf	postinc1,c
  2499  012056  0E00               	movlw	0
  2500  012058  6EE6               	movwf	postinc1,c
  2501  01205A  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2502  01205E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2503  012064  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2504  01206A  0E08               	movlw	8
  2505  01206C  6EE6               	movwf	postinc1,c
  2506  01206E  ECA9  F0B7         	call	_sprintf	;wreg free
  2507                           
  2508                           ;main.c: 281:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2509  012072  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2510  012078  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2511  01207E  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2512  012084  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2513  01208A  0EF2               	movlw	low STR_13
  2514  01208C  6EE6               	movwf	postinc1,c
  2515  01208E  0EFE               	movlw	high STR_13
  2516  012090  6EE6               	movwf	postinc1,c
  2517  012092  0E00               	movlw	0
  2518  012094  6EE6               	movwf	postinc1,c
  2519  012096  0E01               	movlw	1
  2520  012098  6EE6               	movwf	postinc1,c
  2521  01209A  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2522  01209E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2523  0120A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2524  0120AA  0E08               	movlw	8
  2525  0120AC  6EE6               	movwf	postinc1,c
  2526  0120AE  ECA9  F0B7         	call	_sprintf	;wreg free
  2527                           
  2528                           ;main.c: 282:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2529  0120B2  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2530  0120B8  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2531  0120BE  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2532  0120C4  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2533  0120CA  0EDF               	movlw	low STR_14
  2534  0120CC  6EE6               	movwf	postinc1,c
  2535  0120CE  0EFE               	movlw	high STR_14
  2536  0120D0  6EE6               	movwf	postinc1,c
  2537  0120D2  0E00               	movlw	0
  2538  0120D4  6EE6               	movwf	postinc1,c
  2539  0120D6  0E02               	movlw	2
  2540  0120D8  6EE6               	movwf	postinc1,c
  2541  0120DA  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2542  0120DE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2543  0120E4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2544  0120EA  0E08               	movlw	8
  2545  0120EC  6EE6               	movwf	postinc1,c
  2546  0120EE  ECA9  F0B7         	call	_sprintf	;wreg free
  2547                           
  2548                           ;main.c: 283:      break;
  2549  0120F2  D1CD               	goto	l10856
  2550  0120F4                     l1276:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;main.c: 285:      V.calib = 0;
  2554  0120F4  0102               	movlb	2	; () banked
  2555  0120F6  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2556                           
  2557                           ; BSR set to: 2
  2558                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2559  0120F8  0060  F413  FFE6   	movff	_C+4,postinc1
  2560  0120FE  0060  F417  FFE6   	movff	_C+5,postinc1
  2561  012104  0060  F41B  FFE6   	movff	_C+6,postinc1
  2562  01210A  0060  F41F  FFE6   	movff	_C+7,postinc1
  2563  012110  0060  F453  FFE6   	movff	_C+20,postinc1
  2564  012116  0060  F457  FFE6   	movff	_C+21,postinc1
  2565  01211C  0060  F45B  FFE6   	movff	_C+22,postinc1
  2566  012122  0060  F45F  FFE6   	movff	_C+23,postinc1
  2567  012128  0E2B               	movlw	low STR_15
  2568  01212A  6EE6               	movwf	postinc1,c
  2569  01212C  0EFF               	movlw	high STR_15
  2570  01212E  6EE6               	movwf	postinc1,c
  2571  012130  0E00               	movlw	0
  2572  012132  6EE6               	movwf	postinc1,c
  2573  012134  0E00               	movlw	0
  2574  012136  6EE6               	movwf	postinc1,c
  2575  012138  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2576  01213C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2577  012142  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2578  012148  0E0C               	movlw	12
  2579  01214A  6EE6               	movwf	postinc1,c
  2580  01214C  ECA9  F0B7         	call	_sprintf	;wreg free
  2581                           
  2582                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2583  012150  0060  F403  FFE6   	movff	_C,postinc1
  2584  012156  0060  F407  FFE6   	movff	_C+1,postinc1
  2585  01215C  0060  F40B  FFE6   	movff	_C+2,postinc1
  2586  012162  0060  F40F  FFE6   	movff	_C+3,postinc1
  2587  012168  0060  F443  FFE6   	movff	_C+16,postinc1
  2588  01216E  0060  F447  FFE6   	movff	_C+17,postinc1
  2589  012174  0060  F44B  FFE6   	movff	_C+18,postinc1
  2590  01217A  0060  F44F  FFE6   	movff	_C+19,postinc1
  2591  012180  0E05               	movlw	low STR_16
  2592  012182  6EE6               	movwf	postinc1,c
  2593  012184  0EFF               	movlw	high STR_16
  2594  012186  6EE6               	movwf	postinc1,c
  2595  012188  0E00               	movlw	0
  2596  01218A  6EE6               	movwf	postinc1,c
  2597  01218C  0E01               	movlw	1
  2598  01218E  6EE6               	movwf	postinc1,c
  2599  012190  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2600  012194  0060  F0CB  FFE6   	movff	btemp,postinc1
  2601  01219A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2602  0121A0  0E0C               	movlw	12
  2603  0121A2  6EE6               	movwf	postinc1,c
  2604  0121A4  ECA9  F0B7         	call	_sprintf	;wreg free
  2605                           
  2606                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2607  0121A8  0060  F503  FFE6   	movff	_C+64,postinc1
  2608  0121AE  0060  F507  FFE6   	movff	_C+65,postinc1
  2609  0121B4  0060  F50B  FFE6   	movff	_C+66,postinc1
  2610  0121BA  0060  F50F  FFE6   	movff	_C+67,postinc1
  2611  0121C0  0060  F423  FFE6   	movff	_C+8,postinc1
  2612  0121C6  0060  F427  FFE6   	movff	_C+9,postinc1
  2613  0121CC  0060  F42B  FFE6   	movff	_C+10,postinc1
  2614  0121D2  0060  F42F  FFE6   	movff	_C+11,postinc1
  2615  0121D8  0E18               	movlw	low STR_17
  2616  0121DA  6EE6               	movwf	postinc1,c
  2617  0121DC  0EFF               	movlw	high STR_17
  2618  0121DE  6EE6               	movwf	postinc1,c
  2619  0121E0  0E00               	movlw	0
  2620  0121E2  6EE6               	movwf	postinc1,c
  2621  0121E4  0E02               	movlw	2
  2622  0121E6  6EE6               	movwf	postinc1,c
  2623  0121E8  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2624  0121EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2625  0121F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2626  0121F8  0E0C               	movlw	12
  2627  0121FA  6EE6               	movwf	postinc1,c
  2628  0121FC  ECA9  F0B7         	call	_sprintf	;wreg free
  2629                           
  2630                           ;main.c: 289:      break;
  2631  012200  D146               	goto	l10856
  2632  012202                     l1277:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;main.c: 291:      V.calib = 0;
  2636  012202  0102               	movlb	2	; () banked
  2637  012204  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2638                           
  2639                           ; BSR set to: 2
  2640                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2641  012206  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2642  01220C  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2643  012212  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2644  012218  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2645  01221E  0ECC               	movlw	low STR_18
  2646  012220  6EE6               	movwf	postinc1,c
  2647  012222  0EFE               	movlw	high STR_18
  2648  012224  6EE6               	movwf	postinc1,c
  2649  012226  0E00               	movlw	0
  2650  012228  6EE6               	movwf	postinc1,c
  2651  01222A  0E00               	movlw	0
  2652  01222C  6EE6               	movwf	postinc1,c
  2653  01222E  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2654  012232  0060  F0CB  FFE6   	movff	btemp,postinc1
  2655  012238  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2656  01223E  0E08               	movlw	8
  2657  012240  6EE6               	movwf	postinc1,c
  2658  012242  ECA9  F0B7         	call	_sprintf	;wreg free
  2659                           
  2660                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "RUN               ");
  2661  012246  0EA6               	movlw	low STR_19
  2662  012248  6EE6               	movwf	postinc1,c
  2663  01224A  0EFE               	movlw	high STR_19
  2664  01224C  6EE6               	movwf	postinc1,c
  2665  01224E  0E00               	movlw	0
  2666  012250  6EE6               	movwf	postinc1,c
  2667  012252  0E01               	movlw	1
  2668  012254  6EE6               	movwf	postinc1,c
  2669  012256  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2670  01225A  0060  F0CB  FFE6   	movff	btemp,postinc1
  2671  012260  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2672  012266  0E04               	movlw	4
  2673  012268  6EE6               	movwf	postinc1,c
  2674  01226A  ECA9  F0B7         	call	_sprintf	;wreg free
  2675                           
  2676                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "RUN               ");
  2677  01226E  0EA6               	movlw	low STR_19
  2678  012270  6EE6               	movwf	postinc1,c
  2679  012272  0EFE               	movlw	high STR_19
  2680  012274  6EE6               	movwf	postinc1,c
  2681  012276  0E00               	movlw	0
  2682  012278  6EE6               	movwf	postinc1,c
  2683  01227A  0E02               	movlw	2
  2684  01227C  6EE6               	movwf	postinc1,c
  2685  01227E  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2686  012282  0060  F0CB  FFE6   	movff	btemp,postinc1
  2687  012288  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2688  01228E  0E04               	movlw	4
  2689  012290  6EE6               	movwf	postinc1,c
  2690  012292  ECA9  F0B7         	call	_sprintf	;wreg free
  2691                           
  2692                           ;main.c: 295:      break;
  2693  012296  D0FB               	goto	l10856
  2694  012298                     l10840:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;main.c: 297:      if (!V.calib) {
  2698  012298  0102               	movlb	2	; () banked
  2699  01229A  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2700  01229C  A4D8               	btfss	status,2,c
  2701  01229E  D02D               	goto	l10844
  2702                           
  2703                           ; BSR set to: 2
  2704                           ;main.c: 298:       lp_filter(0.0, i, -1);
  2705  0122A0  0EFF               	movlw	255
  2706  0122A2  6EE6               	movwf	postinc1,c
  2707                           
  2708                           ;stkvar	_i @ sp[(-6)+2]
  2709  0122A4  0EFC               	movlw	-4
  2710  0122A6  50E3               	movf	plusw1,w,c
  2711  0122A8  6EE6               	movwf	postinc1,c
  2712  0122AA  0E00               	movlw	0
  2713  0122AC  6EE6               	movwf	postinc1,c
  2714  0122AE  0E00               	movlw	0
  2715  0122B0  6EE6               	movwf	postinc1,c
  2716  0122B2  0E00               	movlw	0
  2717  0122B4  6EE6               	movwf	postinc1,c
  2718  0122B6  0E00               	movlw	0
  2719  0122B8  6EE6               	movwf	postinc1,c
  2720  0122BA  EC83  F0B0         	call	_lp_filter	;wreg free
  2721                           
  2722                           ;main.c: 299:       lp_filter(0.0, j, -1);
  2723  0122BE  0EFF               	movlw	255
  2724  0122C0  6EE6               	movwf	postinc1,c
  2725                           
  2726                           ;stkvar	_j @ sp[(-6)+1]
  2727  0122C2  0EFB               	movlw	-5
  2728  0122C4  50E3               	movf	plusw1,w,c
  2729  0122C6  6EE6               	movwf	postinc1,c
  2730  0122C8  0E00               	movlw	0
  2731  0122CA  6EE6               	movwf	postinc1,c
  2732  0122CC  0E00               	movlw	0
  2733  0122CE  6EE6               	movwf	postinc1,c
  2734  0122D0  0E00               	movlw	0
  2735  0122D2  6EE6               	movwf	postinc1,c
  2736  0122D4  0E00               	movlw	0
  2737  0122D6  6EE6               	movwf	postinc1,c
  2738  0122D8  EC83  F0B0         	call	_lp_filter	;wreg free
  2739                           
  2740                           ;main.c: 300:       lp_filter(0.0, k, -1);
  2741  0122DC  0EFF               	movlw	255
  2742  0122DE  6EE6               	movwf	postinc1,c
  2743                           
  2744                           ;stkvar	_k @ sp[(-6)+0]
  2745  0122E0  0EFA               	movlw	-6
  2746  0122E2  50E3               	movf	plusw1,w,c
  2747  0122E4  6EE6               	movwf	postinc1,c
  2748  0122E6  0E00               	movlw	0
  2749  0122E8  6EE6               	movwf	postinc1,c
  2750  0122EA  0E00               	movlw	0
  2751  0122EC  6EE6               	movwf	postinc1,c
  2752  0122EE  0E00               	movlw	0
  2753  0122F0  6EE6               	movwf	postinc1,c
  2754  0122F2  0E00               	movlw	0
  2755  0122F4  6EE6               	movwf	postinc1,c
  2756  0122F6  EC83  F0B0         	call	_lp_filter	;wreg free
  2757  0122FA                     l10844:
  2758                           
  2759                           ;main.c: 302:      V.calib = 1;
  2760  0122FA  0E01               	movlw	1
  2761  0122FC  0102               	movlb	2	; () banked
  2762  0122FE  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2763                           
  2764                           ; BSR set to: 2
  2765                           ;main.c: 303:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2766  012300  0E02               	movlw	2
  2767  012302  6EE6               	movwf	postinc1,c
  2768  012304  EC41  F0C4         	call	_get_switch	;wreg free
  2769  012308  5032               	movf	btemp^0,w,c
  2770  01230A  6EE6               	movwf	postinc1,c
  2771  01230C  0E00               	movlw	0
  2772  01230E  6EE6               	movwf	postinc1,c
  2773                           
  2774                           ;stkvar	_i @ sp[(-7)+2]
  2775  012310  0EFB               	movlw	-5
  2776  012312  50E3               	movf	plusw1,w,c
  2777  012314  0D04               	mullw	4
  2778  012316  0E00               	movlw	low _C
  2779  012318  24F3               	addwf	243,w,c
  2780  01231A  6ED9               	movwf	fsr2l,c
  2781  01231C  0E01               	movlw	high _C
  2782  01231E  20F4               	addwfc	prodh,w,c
  2783  012320  6EDA               	movwf	fsr2h,c
  2784  012322  006F FF7B FFE6     	movff	postinc2,postinc1
  2785  012328  006F FF7B FFE6     	movff	postinc2,postinc1
  2786  01232E  006F FF7B FFE6     	movff	postinc2,postinc1
  2787  012334  006F FF7B FFE6     	movff	postinc2,postinc1
  2788                           
  2789                           ;stkvar	_i @ sp[(-11)+2]
  2790  01233A  0EF7               	movlw	-9
  2791  01233C  50E3               	movf	plusw1,w,c
  2792  01233E  6EE6               	movwf	postinc1,c
  2793  012340  EC0A  F0C6         	call	_get_raw_result	;wreg free
  2794  012344  0060  F0CB  FFE6   	movff	btemp,postinc1
  2795  01234A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2796  012350  0E93               	movlw	low STR_9
  2797  012352  6EE6               	movwf	postinc1,c
  2798  012354  0EFF               	movlw	high STR_9
  2799  012356  6EE6               	movwf	postinc1,c
  2800  012358  0E00               	movlw	0
  2801  01235A  6EE6               	movwf	postinc1,c
  2802  01235C  0E00               	movlw	0
  2803  01235E  6EE6               	movwf	postinc1,c
  2804  012360  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2805  012364  0060  F0CB  FFE6   	movff	btemp,postinc1
  2806  01236A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2807  012370  0E0C               	movlw	12
  2808  012372  6EE6               	movwf	postinc1,c
  2809  012374  ECA9  F0B7         	call	_sprintf	;wreg free
  2810                           
  2811                           ;main.c: 304:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  2812  012378  0E03               	movlw	3
  2813  01237A  6EE6               	movwf	postinc1,c
  2814  01237C  EC41  F0C4         	call	_get_switch	;wreg free
  2815  012380  5032               	movf	btemp^0,w,c
  2816  012382  6EE6               	movwf	postinc1,c
  2817  012384  0E00               	movlw	0
  2818  012386  6EE6               	movwf	postinc1,c
  2819                           
  2820                           ;stkvar	_j @ sp[(-7)+1]
  2821  012388  0EFA               	movlw	-6
  2822  01238A  50E3               	movf	plusw1,w,c
  2823  01238C  0D04               	mullw	4
  2824  01238E  0E00               	movlw	low _C
  2825  012390  24F3               	addwf	243,w,c
  2826  012392  6ED9               	movwf	fsr2l,c
  2827  012394  0E01               	movlw	high _C
  2828  012396  20F4               	addwfc	prodh,w,c
  2829  012398  6EDA               	movwf	fsr2h,c
  2830  01239A  006F FF7B FFE6     	movff	postinc2,postinc1
  2831  0123A0  006F FF7B FFE6     	movff	postinc2,postinc1
  2832  0123A6  006F FF7B FFE6     	movff	postinc2,postinc1
  2833  0123AC  006F FF7B FFE6     	movff	postinc2,postinc1
  2834                           
  2835                           ;stkvar	_j @ sp[(-11)+1]
  2836  0123B2  0EF6               	movlw	-10
  2837  0123B4  50E3               	movf	plusw1,w,c
  2838  0123B6  6EE6               	movwf	postinc1,c
  2839  0123B8  EC0A  F0C6         	call	_get_raw_result	;wreg free
  2840  0123BC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2841  0123C2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2842  0123C8  0E93               	movlw	low STR_9
  2843  0123CA  6EE6               	movwf	postinc1,c
  2844  0123CC  0EFF               	movlw	high STR_9
  2845  0123CE  6EE6               	movwf	postinc1,c
  2846  0123D0  0E00               	movlw	0
  2847  0123D2  6EE6               	movwf	postinc1,c
  2848  0123D4  0E01               	movlw	1
  2849  0123D6  6EE6               	movwf	postinc1,c
  2850  0123D8  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2851  0123DC  0060  F0CB  FFE6   	movff	btemp,postinc1
  2852  0123E2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2853  0123E8  0E0C               	movlw	12
  2854  0123EA  6EE6               	movwf	postinc1,c
  2855  0123EC  ECA9  F0B7         	call	_sprintf	;wreg free
  2856                           
  2857                           ;main.c: 305:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index);
  2858                           ;stkvar	_inp_index @ sp[(-5)+3]
  2859  0123F0  0EFE               	movlw	-2
  2860  0123F2  50E3               	movf	plusw1,w,c
  2861  0123F4  6EE6               	movwf	postinc1,c
  2862  0123F6  0E00               	movlw	0
  2863  0123F8  6EE6               	movwf	postinc1,c
  2864                           
  2865                           ;stkvar	_k @ sp[(-7)+0]
  2866  0123FA  0EF9               	movlw	-7
  2867  0123FC  50E3               	movf	plusw1,w,c
  2868  0123FE  0D04               	mullw	4
  2869  012400  0E00               	movlw	low _C
  2870  012402  24F3               	addwf	243,w,c
  2871  012404  6ED9               	movwf	fsr2l,c
  2872  012406  0E01               	movlw	high _C
  2873  012408  20F4               	addwfc	prodh,w,c
  2874  01240A  6EDA               	movwf	fsr2h,c
  2875  01240C  006F FF7B FFE6     	movff	postinc2,postinc1
  2876  012412  006F FF7B FFE6     	movff	postinc2,postinc1
  2877  012418  006F FF7B FFE6     	movff	postinc2,postinc1
  2878  01241E  006F FF7B FFE6     	movff	postinc2,postinc1
  2879                           
  2880                           ;stkvar	_k @ sp[(-11)+0]
  2881  012424  0EF5               	movlw	-11
  2882  012426  50E3               	movf	plusw1,w,c
  2883  012428  6EE6               	movwf	postinc1,c
  2884  01242A  EC0A  F0C6         	call	_get_raw_result	;wreg free
  2885  01242E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2886  012434  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2887  01243A  0E82               	movlw	low STR_11
  2888  01243C  6EE6               	movwf	postinc1,c
  2889  01243E  0EFF               	movlw	high STR_11
  2890  012440  6EE6               	movwf	postinc1,c
  2891  012442  0E00               	movlw	0
  2892  012444  6EE6               	movwf	postinc1,c
  2893  012446  0E02               	movlw	2
  2894  012448  6EE6               	movwf	postinc1,c
  2895  01244A  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  2896  01244E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2897  012454  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2898  01245A  0E0C               	movlw	12
  2899  01245C  6EE6               	movwf	postinc1,c
  2900  01245E  ECA9  F0B7         	call	_sprintf	;wreg free
  2901                           
  2902                           ;main.c: 306:      break;
  2903  012462  D015               	goto	l10856
  2904  012464                     l10854:
  2905  012464  0100               	movlb	0	; () banked
  2906  012466  51EF               	movf	_H& (0+255),w,b
  2907  012468  6E3C               	movwf	(btemp+10)^0,c
  2908  01246A  6A3D               	clrf	(btemp+11)^0,c
  2909                           
  2910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 1, Range of values is 0 to 0
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte            4     3 (average)
  2916                           ;	Chosen strategy is simple_byte
  2917  01246C  503D               	movf	(btemp+11)^0,w,c
  2918  01246E  0A00               	xorlw	0	; case 0
  2919  012470  A4D8               	btfss	status,2,c
  2920  012472  D00D               	goto	l10856
  2921                           
  2922                           ; BSR set to: 0
  2923                           ; Switch size 1, requested type "simple"
  2924                           ; Number of cases is 4, Range of values is 0 to 3
  2925                           ; switch strategies available:
  2926                           ; Name         Instructions Cycles
  2927                           ; simple_byte           13     7 (average)
  2928                           ;	Chosen strategy is simple_byte
  2929  012474  503C               	movf	(btemp+10)^0,w,c
  2930  012476  0A00               	xorlw	0	; case 0
  2931  012478  B4D8               	btfsc	status,2,c
  2932  01247A  D63C               	goto	l1276
  2933  01247C  0A01               	xorlw	1	; case 1
  2934  01247E  B4D8               	btfsc	status,2,c
  2935  012480  D5D6               	goto	l1274
  2936  012482  0A03               	xorlw	3	; case 2
  2937  012484  B4D8               	btfsc	status,2,c
  2938  012486  D6BD               	goto	l1277
  2939  012488  0A01               	xorlw	1	; case 3
  2940  01248A  B4D8               	btfsc	status,2,c
  2941  01248C  D705               	goto	l10840
  2942  01248E                     l10856:
  2943                           
  2944                           ;main.c: 310:     clear_hid_pflags(&H);
  2945  01248E  0EEF               	movlw	_H& (0+255)
  2946  012490  6EE6               	movwf	postinc1,c
  2947  012492  EC81  F0C5         	call	_clear_hid_pflags	;wreg free
  2948                           
  2949                           ;main.c: 312:    StartTimer(TMR_DISPLAY, 250);
  2950  012496  0EFA               	movlw	250
  2951  012498  6EE6               	movwf	postinc1,c
  2952  01249A  0E00               	movlw	0
  2953  01249C  6EE6               	movwf	postinc1,c
  2954  01249E  0E0A               	movlw	10
  2955  0124A0  6EE6               	movwf	postinc1,c
  2956  0124A2  EC93  F0C2         	call	_StartTimer	;wreg free
  2957                           
  2958                           ;main.c: 313:    update_lcd(0);
  2959  0124A6  0E00               	movlw	0
  2960  0124A8  6EE6               	movwf	postinc1,c
  2961  0124AA  EC22  F0B7         	call	_update_lcd	;wreg free
  2962  0124AE                     l10862:
  2963                           
  2964                           ;main.c: 319:   if (check_help(V.flipper)) {
  2965  0124AE  0102               	movlb	2	; () banked
  2966  0124B0  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2967  0124B2  6EE6               	movwf	postinc1,c
  2968  0124B4  EC89  F0AD         	call	_check_help	;wreg free
  2969  0124B8  5032               	movf	btemp^0,w,c
  2970  0124BA  B4D8               	btfsc	status,2,c
  2971  0124BC  D062               	goto	l1281
  2972                           
  2973                           ;main.c: 320:    V.calib = 0;
  2974  0124BE  0102               	movlb	2	; () banked
  2975  0124C0  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2976                           
  2977                           ; BSR set to: 2
  2978                           ;main.c: 321:    inp_index += 3;
  2979                           ;stkvar	_inp_index @ sp[(-5)+3]
  2980  0124C2  0EFE               	movlw	-2
  2981  0124C4  006F FF8C  F032    	movff	plusw1,btemp
  2982  0124CA  0E03               	movlw	3
  2983  0124CC  2632               	addwf	btemp^0,f,c
  2984  0124CE  0EFE               	movlw	-2
  2985  0124D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  2986                           
  2987                           ;main.c: 322:    if (inp_index > 9)
  2988                           ;stkvar	_inp_index @ sp[(-5)+3]
  2989  0124D6  0EFE               	movlw	-2
  2990  0124D8  006F FF8C  F032    	movff	plusw1,btemp
  2991  0124DE  0E09               	movlw	9
  2992  0124E0  6432               	cpfsgt	btemp^0,c
  2993  0124E2  D03A               	goto	l10888
  2994                           
  2995                           ; BSR set to: 2
  2996                           ;main.c: 323:     inp_index = 0;
  2997                           ;stkvar	_inp_index @ sp[(-5)+3]
  2998  0124E4  0EFE               	movlw	-2
  2999  0124E6  6AE3               	clrf	plusw1,c
  3000  0124E8  D037               	goto	l10888
  3001  0124EA                     l10870:
  3002                           
  3003                           ; BSR set to: 2
  3004                           ;main.c: 326:     i = C_BATT;
  3005                           ;stkvar	_i @ sp[(-5)+2]
  3006  0124EA  0EFD               	movlw	-3
  3007  0124EC  6AE3               	clrf	plusw1,c
  3008                           
  3009                           ; BSR set to: 2
  3010                           ;main.c: 327:     j = C_PV;
  3011                           ;stkvar	_j @ sp[(-5)+1]
  3012  0124EE  0EFC               	movlw	-4
  3013  0124F0  6AE3               	clrf	plusw1,c
  3014  0124F2  2AE3               	incf	plusw1,f,c
  3015                           
  3016                           ; BSR set to: 2
  3017                           ;main.c: 328:     k = V_CC;
  3018                           ;stkvar	_k @ sp[(-5)+0]
  3019  0124F4  0EFB               	movlw	-5
  3020  0124F6  6AE3               	clrf	plusw1,c
  3021  0124F8  82E3               	bsf	plusw1,1,c
  3022                           
  3023                           ;main.c: 329:     break;
  3024  0124FA  D043               	goto	l1281
  3025  0124FC                     l10876:
  3026                           
  3027                           ; BSR set to: 2
  3028                           ;main.c: 331:     i = V_BAT;
  3029                           ;stkvar	_i @ sp[(-5)+2]
  3030  0124FC  0EFD               	movlw	-3
  3031  0124FE  6AE3               	clrf	plusw1,c
  3032  012500  84E3               	bsf	plusw1,2,c
  3033                           
  3034                           ;main.c: 332:     j = V_PV;
  3035                           ;stkvar	_j @ sp[(-5)+1]
  3036  012502  0EFC               	movlw	-4
  3037  012504  6AE3               	clrf	plusw1,c
  3038  012506  80E3               	bsf	plusw1,0,c
  3039  012508  84E3               	bsf	plusw1,2,c	;indir
  3040                           
  3041                           ;main.c: 333:     k = V_CBUS;
  3042                           ;stkvar	_k @ sp[(-5)+0]
  3043  01250A  0EFB               	movlw	-5
  3044  01250C  6AE3               	clrf	plusw1,c
  3045  01250E  82E3               	bsf	plusw1,1,c
  3046  012510  84E3               	bsf	plusw1,2,c	;indir
  3047                           
  3048                           ;main.c: 334:     break;
  3049  012512  D037               	goto	l1281
  3050  012514                     l10878:
  3051                           
  3052                           ; BSR set to: 2
  3053                           ;main.c: 336:     i = V_BBAT;
  3054                           ;stkvar	_i @ sp[(-5)+2]
  3055  012514  0EFD               	movlw	-3
  3056  012516  6AE3               	clrf	plusw1,c
  3057  012518  82E3               	bsf	plusw1,1,c
  3058  01251A  86E3               	bsf	plusw1,3,c	;indir
  3059                           
  3060                           ; BSR set to: 2
  3061                           ;main.c: 337:     j = V_TEMP;
  3062  01251C  0E0B               	movlw	11
  3063  01251E  6E3D               	movwf	(btemp+11)^0,c
  3064                           
  3065                           ;stkvar	_j @ sp[(-5)+1]
  3066  012520  0EFC               	movlw	-4
  3067  012522  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3068                           
  3069                           ; BSR set to: 2
  3070                           ;main.c: 338:     k = V_INVERTER;
  3071                           ;stkvar	_k @ sp[(-5)+0]
  3072  012528  0EFB               	movlw	-5
  3073  01252A  6AE3               	clrf	plusw1,c
  3074  01252C  84E3               	bsf	plusw1,2,c
  3075  01252E  86E3               	bsf	plusw1,3,c	;indir
  3076                           
  3077                           ;main.c: 339:     break;
  3078  012530  D028               	goto	l1281
  3079  012532                     l10884:
  3080                           
  3081                           ; BSR set to: 2
  3082                           ;main.c: 341:     i = channel_ANB5;
  3083  012532  0E0D               	movlw	13
  3084  012534  6E3D               	movwf	(btemp+11)^0,c
  3085                           
  3086                           ;stkvar	_i @ sp[(-5)+2]
  3087  012536  0EFD               	movlw	-3
  3088  012538  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3089                           
  3090                           ;main.c: 342:     j = channel_ANB5;
  3091  01253E  0E0D               	movlw	13
  3092  012540  6E3D               	movwf	(btemp+11)^0,c
  3093                           
  3094                           ;stkvar	_j @ sp[(-5)+1]
  3095  012542  0EFC               	movlw	-4
  3096  012544  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3097                           
  3098                           ;main.c: 343:     k = channel_ANB5;
  3099  01254A  0E0D               	movlw	13
  3100  01254C  6E3D               	movwf	(btemp+11)^0,c
  3101                           
  3102                           ;stkvar	_k @ sp[(-5)+0]
  3103  01254E  0EFB               	movlw	-5
  3104  012550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3105                           
  3106                           ;main.c: 344:     break;
  3107  012556  D015               	goto	l1281
  3108  012558                     l10888:
  3109                           
  3110                           ; BSR set to: 2
  3111                           ;stkvar	_inp_index @ sp[(-5)+3]
  3112  012558  0EFE               	movlw	-2
  3113  01255A  50E3               	movf	plusw1,w,c
  3114  01255C  6E3C               	movwf	(btemp+10)^0,c
  3115  01255E  6A3D               	clrf	(btemp+11)^0,c
  3116                           
  3117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3118                           ; Switch size 1, requested type "simple"
  3119                           ; Number of cases is 1, Range of values is 0 to 0
  3120                           ; switch strategies available:
  3121                           ; Name         Instructions Cycles
  3122                           ; simple_byte            4     3 (average)
  3123                           ;	Chosen strategy is simple_byte
  3124  012560  503D               	movf	(btemp+11)^0,w,c
  3125  012562  0A00               	xorlw	0	; case 0
  3126  012564  A4D8               	btfss	status,2,c
  3127  012566  D00D               	goto	l1281
  3128                           
  3129                           ; BSR set to: 2
  3130                           ; Switch size 1, requested type "simple"
  3131                           ; Number of cases is 4, Range of values is 0 to 9
  3132                           ; switch strategies available:
  3133                           ; Name         Instructions Cycles
  3134                           ; simple_byte           13     7 (average)
  3135                           ;	Chosen strategy is simple_byte
  3136  012568  503C               	movf	(btemp+10)^0,w,c
  3137  01256A  0A00               	xorlw	0	; case 0
  3138  01256C  B4D8               	btfsc	status,2,c
  3139  01256E  D7BD               	goto	l10870
  3140  012570  0A03               	xorlw	3	; case 3
  3141  012572  B4D8               	btfsc	status,2,c
  3142  012574  D7C3               	goto	l10876
  3143  012576  0A05               	xorlw	5	; case 6
  3144  012578  B4D8               	btfsc	status,2,c
  3145  01257A  D7CC               	goto	l10878
  3146  01257C  0A0F               	xorlw	15	; case 9
  3147  01257E  B4D8               	btfsc	status,2,c
  3148  012580  D7D8               	goto	l10884
  3149  012582                     l1281:
  3150                           
  3151                           ;main.c: 353:   if (V.set_sequ) {
  3152  012582  0102               	movlb	2	; () banked
  3153  012584  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3154  012586  D509               	goto	l10806
  3155                           
  3156                           ; BSR set to: 2
  3157                           ;main.c: 354:    if (TimerDone(TMR_INFO)) {
  3158  012588  0E07               	movlw	7
  3159  01258A  6EE6               	movwf	postinc1,c
  3160  01258C  EC93  F0C5         	call	_TimerDone	;wreg free
  3161  012590  5032               	movf	btemp^0,w,c
  3162  012592  B4D8               	btfsc	status,2,c
  3163  012594  D00B               	goto	l10898
  3164                           
  3165                           ;main.c: 355:     V.set_sequ = 0;
  3166  012596  0102               	movlb	2	; () banked
  3167  012598  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3168                           
  3169                           ; BSR set to: 2
  3170                           ;main.c: 356:     set_vterm(0);
  3171  01259A  0E00               	movlw	0
  3172  01259C  6EE6               	movwf	postinc1,c
  3173  01259E  EC54  F0C6         	call	_set_vterm	;wreg free
  3174                           
  3175                           ; BSR set to: 5
  3176                           ;main.c: 357:     update_lcd(0);
  3177  0125A2  0E00               	movlw	0
  3178  0125A4  6EE6               	movwf	postinc1,c
  3179  0125A6  EC22  F0B7         	call	_update_lcd	;wreg free
  3180                           
  3181                           ;main.c: 358:    } else {
  3182  0125AA  D4F7               	goto	l10806
  3183  0125AC                     l10898:
  3184                           
  3185                           ;main.c: 359:     set_vterm(2);
  3186  0125AC  0E02               	movlw	2
  3187  0125AE  6EE6               	movwf	postinc1,c
  3188  0125B0  EC54  F0C6         	call	_set_vterm	;wreg free
  3189                           
  3190                           ; BSR set to: 5
  3191                           ;main.c: 360:     update_lcd(2);
  3192  0125B4  0E02               	movlw	2
  3193  0125B6  6EE6               	movwf	postinc1,c
  3194  0125B8  EC22  F0B7         	call	_update_lcd	;wreg free
  3195  0125BC  D4EE               	goto	l10806
  3196  0125BE                     __end_of_main:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _start_switch_handler *****************
  3200 ;; Defined at:
  3201 ;;		line 119 in file "dio.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1  [STACK] void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3210 ;; Tracked objects:
  3211 ;;		On entry : 1/4
  3212 ;;		On exit  : 3F/39
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    7
  3222 ;; This function calls:
  3223 ;;		_INT1_SetInterruptHandler
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text1
  3230  018BD6                     __ptext1:
  3231                           	opt callstack 0
  3232  018BD6                     _start_switch_handler:
  3233                           	opt callstack 23
  3234                           
  3235                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3236                           
  3237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3238                           ;incstack = 0
  3239  018BD6  0139               	movlb	57	; () banked
  3240  018BD8  9195               	bcf	149,0,b	;volatile
  3241                           
  3242                           ; BSR set to: 57
  3243                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3244  018BDA  0E7E               	movlw	low _switch_handler
  3245  018BDC  6EE6               	movwf	postinc1,c
  3246  018BDE  0E68               	movlw	high _switch_handler
  3247  018BE0  6EE6               	movwf	postinc1,c
  3248  018BE2  0E01               	movlw	low (_switch_handler shr (0+16))
  3249  018BE4  6EE6               	movwf	postinc1,c
  3250  018BE6  ECCD  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
  3251                           
  3252                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3253  018BEA  0E02               	movlw	2
  3254  018BEC  0100               	movlb	0	; () banked
  3255  018BEE  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3259  018BF0  0139               	movlb	57	; () banked
  3260  018BF2  8195               	bsf	149,0,b	;volatile
  3261                           
  3262                           ; BSR set to: 57
  3263                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3264  018BF4  0012               	return		;funcret
  3265  018BF6                     __end_of_start_switch_handler:
  3266                           	opt callstack 0
  3267                           
  3268 ;; *************** function _start_adc_scan *****************
  3269 ;; Defined at:
  3270 ;;		line 33 in file "daq.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1  [STACK] _Bool 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/5
  3281 ;;		On exit  : 1/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    7
  3291 ;; This function calls:
  3292 ;;		_ADCC_DischargeSampleCapacitor
  3293 ;;		_ADCC_SetADIInterruptHandler
  3294 ;;		_ADCC_SetADTIInterruptHandler
  3295 ;;		_ADCC_StartConversion
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text2
  3302  017EDE                     __ptext2:
  3303                           	opt callstack 0
  3304  017EDE                     _start_adc_scan:
  3305                           	opt callstack 23
  3306                           
  3307                           ;daq.c: 35:  if (R.done)
  3308                           
  3309                           ; BSR set to: 57
  3310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3311                           ;incstack = 0
  3312  017EDE  0100               	movlb	0	; () banked
  3313  017EE0  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  3314  017EE2  A4D8               	btfss	status,2,c
  3315  017EE4  0012               	return	
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;daq.c: 38:  R.scan_index = 0;
  3319  017EE6  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3323  017EE8  013A               	movlb	58	; () banked
  3324  017EEA  5140               	movf	64,w,b	;volatile
  3325  017EEC  006E F940  F032    	movff	14928,btemp	;volatile
  3326  017EF2  6A33               	clrf	(btemp+1)^0,c
  3327  017EF4  0060  F0C8  F033   	movff	btemp,btemp+1
  3328  017EFA  6A32               	clrf	btemp^0,c
  3329  017EFC  2632               	addwf	btemp^0,f,c
  3330  017EFE  0E00               	movlw	0
  3331  017F00  2233               	addwfc	(btemp+1)^0,f,c
  3332  017F02  0E77               	movlw	119
  3333  017F04  1432               	andwf	btemp^0,w,c
  3334  017F06  0100               	movlb	0	; () banked
  3335  017F08  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  3336  017F0A  0E3C               	movlw	60
  3337  017F0C  1433               	andwf	(btemp+1)^0,w,c
  3338  017F0E  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3342  017F10  0E68               	movlw	low _adc_int_handler
  3343  017F12  6EE6               	movwf	postinc1,c
  3344  017F14  0E8E               	movlw	high _adc_int_handler
  3345  017F16  6EE6               	movwf	postinc1,c
  3346  017F18  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3347  017F1A  6EE6               	movwf	postinc1,c
  3348  017F1C  EC09  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3349                           
  3350                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3351  017F20  0EBE               	movlw	low _adc_int_t_handler
  3352  017F22  6EE6               	movwf	postinc1,c
  3353  017F24  0E7C               	movlw	high _adc_int_t_handler
  3354  017F26  6EE6               	movwf	postinc1,c
  3355  017F28  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3356  017F2A  6EE6               	movwf	postinc1,c
  3357  017F2C  ECF5  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3358                           
  3359                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3360  017F30  EC11  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3361                           
  3362                           ; BSR set to: 62
  3363                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3364  017F34  0100               	movlb	0	; () banked
  3365  017F36  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  3366  017F38  0B0F               	andlw	15
  3367  017F3A  6EE6               	movwf	postinc1,c
  3368  017F3C  ECCC  F0C6         	call	_ADCC_StartConversion	;wreg free
  3369                           
  3370                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3371  017F40  0012               	return		;funcret
  3372  017F42                     __end_of_start_adc_scan:
  3373                           	opt callstack 0
  3374                           
  3375 ;; *************** function _ADCC_StartConversion *****************
  3376 ;; Defined at:
  3377 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  channel         1  [STACK] enum E16136
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1  [STACK] void 
  3384 ;; Registers used:
  3385 ;;		fsr1l, fsr1h
  3386 ;; Tracked objects:
  3387 ;;		On entry : 3F/0
  3388 ;;		On exit  : 3F/3E
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3395 ;;Total ram usage:        0 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    6
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_start_adc_scan
  3402 ;;		_adc_int_t_handler
  3403 ;; This function uses a reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text3
  3407  018D98                     __ptext3:
  3408                           	opt callstack 0
  3409  018D98                     _ADCC_StartConversion:
  3410                           	opt callstack 6
  3411                           
  3412                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3413                           ;stkvar	_channel @ sp[(0)+-1]
  3414                           
  3415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3416                           ;incstack = 0
  3417  018D98  0EFF               	movlw	-1
  3418  018D9A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3419                           
  3420                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3421  018DA0  013E               	movlb	62	; () banked
  3422  018DA2  8FF8               	bsf	248,7,b	;volatile
  3423                           
  3424                           ; BSR set to: 62
  3425                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3426  018DA4  81F8               	bsf	248,0,b	;volatile
  3427                           
  3428                           ; BSR set to: 62
  3429                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3430  018DA6  52E5               	movf	postdec1,f,c
  3431  018DA8  0012               	return		;funcret
  3432  018DAA                     __end_of_ADCC_StartConversion:
  3433                           	opt callstack 0
  3434                           
  3435 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3436 ;; Defined at:
  3437 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1  [STACK] void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 3F/3E
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    6
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_start_adc_scan
  3462 ;;		_adc_int_t_handler
  3463 ;; This function uses a reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text4
  3467  018E22                     __ptext4:
  3468                           	opt callstack 0
  3469  018E22                     _ADCC_DischargeSampleCapacitor:
  3470                           	opt callstack 6
  3471                           
  3472                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3473                           
  3474                           ; BSR set to: 62
  3475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3476                           ;incstack = 0
  3477  018E22  0E3B               	movlw	59
  3478  018E24  013E               	movlb	62	; () banked
  3479  018E26  6FF1               	movwf	241,b	;volatile
  3480                           
  3481                           ; BSR set to: 62
  3482                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3483  018E28  0012               	return		;funcret
  3484  018E2A                     __end_of_ADCC_DischargeSampleCapacitor:
  3485                           	opt callstack 0
  3486                           
  3487 ;; *************** function _srand *****************
  3488 ;; Defined at:
  3489 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  s               2  [STACK] unsigned int 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1  [STACK] void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3498 ;; Tracked objects:
  3499 ;;		On entry : 3F/0
  3500 ;;		On exit  : 3F/1
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    6
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text5
  3518  018606                     __ptext5:
  3519                           	opt callstack 0
  3520  018606                     _srand:
  3521                           	opt callstack 24
  3522                           
  3523                           ;stkvar	_s @ sp[(0)+-2]
  3524                           
  3525                           ; BSR set to: 62
  3526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3527                           ;incstack = 0
  3528  018606  0EFE               	movlw	-2
  3529  018608  50E3               	movf	plusw1,w,c
  3530  01860A  0FFF               	addlw	255
  3531  01860C  6E3C               	movwf	(btemp+10)^0,c
  3532  01860E  0EFF               	movlw	-1
  3533  018610  006F FF8C  F03D    	movff	plusw1,btemp+11
  3534  018616  0EFF               	movlw	255
  3535  018618  223D               	addwfc	(btemp+11)^0,f,c
  3536  01861A  0060  F0F0  F1CC   	movff	btemp+10,_seed
  3537  018620  0060  F0F4  F1CD   	movff	btemp+11,_seed+1
  3538  018626  0101               	movlb	1	; () banked
  3539  018628  6BCE               	clrf	(_seed+2)& (0+255),b
  3540  01862A  6BCF               	clrf	(_seed+3)& (0+255),b
  3541  01862C  6BD0               	clrf	(_seed+4)& (0+255),b
  3542  01862E  6BD1               	clrf	(_seed+5)& (0+255),b
  3543  018630  6BD2               	clrf	(_seed+6)& (0+255),b
  3544  018632  6BD3               	clrf	(_seed+7)& (0+255),b
  3545                           
  3546                           ; BSR set to: 1
  3547                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3548  018634  52E5               	movf	postdec1,f,c
  3549  018636  52E5               	movf	postdec1,f,c
  3550  018638  0012               	return		;funcret
  3551  01863A                     __end_of_srand:
  3552                           	opt callstack 0
  3553                           
  3554 ;; *************** function _init_display *****************
  3555 ;; Defined at:
  3556 ;;		line 37 in file "eadog.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1  [STACK] void 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/2
  3567 ;;		On exit  : 3F/3D
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3574 ;;Total ram usage:        0 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    8
  3577 ;; This function calls:
  3578 ;;		_ringBufS_init
  3579 ;;		_send_lcd_cmd
  3580 ;;		_send_lcd_cmd_long
  3581 ;;		_wdtdelay
  3582 ;; This function is called by:
  3583 ;;		_main
  3584 ;; This function uses a reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text6
  3588  017252                     __ptext6:
  3589                           	opt callstack 0
  3590  017252                     _init_display:
  3591                           	opt callstack 22
  3592                           
  3593                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3594                           
  3595                           ; BSR set to: 1
  3596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3597                           ;incstack = 0
  3598  017252  0E94               	movlw	low _ring_buf1
  3599  017254  0100               	movlb	0	; () banked
  3600  017256  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3601  017258  0E03               	movlw	high _ring_buf1
  3602  01725A  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3603                           
  3604                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3605  01725C  0E00               	movlw	low _ring_buf2
  3606  01725E  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3607  017260  0E04               	movlw	high _ring_buf2
  3608  017262  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3612  017264  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3613  01726A  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3614  017270  EC2D  F0C4         	call	_ringBufS_init	;wreg free
  3615                           
  3616                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3617  017274  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3618  01727A  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3619  017280  EC2D  F0C4         	call	_ringBufS_init	;wreg free
  3620                           
  3621                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3622  017284  84BE               	bsf	190,2,c	;volatile
  3623  017286  84BC               	bsf	188,2,c	;volatile
  3624                           
  3625                           ;eadog.c: 46:  wdtdelay(350000);
  3626  017288  0E30               	movlw	48
  3627  01728A  6EE6               	movwf	postinc1,c
  3628  01728C  0E57               	movlw	87
  3629  01728E  6EE6               	movwf	postinc1,c
  3630  017290  0E05               	movlw	5
  3631  017292  6EE6               	movwf	postinc1,c
  3632  017294  0E00               	movlw	0
  3633  017296  6EE6               	movwf	postinc1,c
  3634  017298  EC92  F0C0         	call	_wdtdelay	;wreg free
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3638  01729C  0E39               	movlw	57
  3639  01729E  6EE6               	movwf	postinc1,c
  3640  0172A0  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3644  0172A4  0E1D               	movlw	29
  3645  0172A6  6EE6               	movwf	postinc1,c
  3646  0172A8  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3650  0172AC  0E50               	movlw	80
  3651  0172AE  6EE6               	movwf	postinc1,c
  3652  0172B0  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3656  0172B4  0E6C               	movlw	108
  3657  0172B6  6EE6               	movwf	postinc1,c
  3658  0172B8  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3662  0172BC  0E76               	movlw	118
  3663  0172BE  6EE6               	movwf	postinc1,c
  3664  0172C0  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3668  0172C4  0E38               	movlw	56
  3669  0172C6  6EE6               	movwf	postinc1,c
  3670  0172C8  EC05  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3674  0172CC  0E0F               	movlw	15
  3675  0172CE  6EE6               	movwf	postinc1,c
  3676  0172D0  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3680  0172D4  0E01               	movlw	1
  3681  0172D6  6EE6               	movwf	postinc1,c
  3682  0172D8  EC05  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3686  0172DC  0E02               	movlw	2
  3687  0172DE  6EE6               	movwf	postinc1,c
  3688  0172E0  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3692  0172E4  0E06               	movlw	6
  3693  0172E6  6EE6               	movwf	postinc1,c
  3694  0172E8  EC19  F0C4         	call	_send_lcd_cmd	;wreg free
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;eadog.c: 57:  wdtdelay(30);
  3698  0172EC  0E1E               	movlw	30
  3699  0172EE  6EE6               	movwf	postinc1,c
  3700  0172F0  0E00               	movlw	0
  3701  0172F2  6EE6               	movwf	postinc1,c
  3702  0172F4  0E00               	movlw	0
  3703  0172F6  6EE6               	movwf	postinc1,c
  3704  0172F8  0E00               	movlw	0
  3705  0172FA  6EE6               	movwf	postinc1,c
  3706  0172FC  EC92  F0C0         	call	_wdtdelay	;wreg free
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3710  017300  0E02               	movlw	2
  3711  017302  013D               	movlb	61	; () banked
  3712  017304  6F16               	movwf	22,b	;volatile
  3713                           
  3714                           ; BSR set to: 61
  3715                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3716  017306  0E40               	movlw	64
  3717  017308  6F15               	movwf	21,b	;volatile
  3718                           
  3719                           ; BSR set to: 61
  3720                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3721  01730A  0E83               	movlw	131
  3722  01730C  6F14               	movwf	20,b	;volatile
  3723                           
  3724                           ; BSR set to: 61
  3725                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3726  01730E  931A               	bcf	26,1,b	;volatile
  3727                           
  3728                           ; BSR set to: 61
  3729                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3730  017310  0E3F               	movlw	-193
  3731  017312  013B               	movlb	59	; () banked
  3732  017314  17FD               	andwf	253,f,b	;volatile
  3733                           
  3734                           ; BSR set to: 59
  3735                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3736  017316  9BFD               	bcf	253,5,b	;volatile
  3737                           
  3738                           ; BSR set to: 59
  3739                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3740  017318  51FD               	movf	253,w,b	;volatile
  3741  01731A  0BF9               	andlw	-7
  3742  01731C  0902               	iorlw	2
  3743  01731E  6FFD               	movwf	253,b	;volatile
  3744                           
  3745                           ; BSR set to: 59
  3746                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3747  017320  0EE7               	movlw	-25
  3748  017322  17FD               	andwf	253,f,b	;volatile
  3749                           
  3750                           ; BSR set to: 59
  3751                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3752  017324  81FD               	bsf	253,0,b	;volatile
  3753                           
  3754                           ; BSR set to: 59
  3755                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3756  017326  0E94               	movlw	low _ring_buf1
  3757  017328  6FF9               	movwf	249,b	;volatile
  3758  01732A  0E03               	movlw	high _ring_buf1
  3759  01732C  6FFA               	movwf	250,b	;volatile
  3760  01732E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3761  017330  6FFB               	movwf	251,b	;volatile
  3762                           
  3763                           ; BSR set to: 59
  3764                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3765  017332  9BFC               	bcf	252,5,b	;volatile
  3766                           
  3767                           ; BSR set to: 59
  3768                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3769  017334  013D               	movlb	61	; () banked
  3770  017336  831A               	bsf	26,1,b	;volatile
  3771                           
  3772                           ; BSR set to: 61
  3773                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3774  017338  94BE               	bcf	190,2,c	;volatile
  3775                           
  3776                           ; BSR set to: 61
  3777                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3778  01733A  0012               	return		;funcret
  3779  01733C                     __end_of_init_display:
  3780                           	opt callstack 0
  3781                           
  3782 ;; *************** function _send_lcd_cmd_long *****************
  3783 ;; Defined at:
  3784 ;;		line 114 in file "eadog.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  cmd             1  [STACK] const unsigned char 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1  [STACK] void 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3793 ;; Tracked objects:
  3794 ;;		On entry : 3F/0
  3795 ;;		On exit  : 3F/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    7
  3805 ;; This function calls:
  3806 ;;		_SPI1_Exchange8bit
  3807 ;;		_wdtdelay
  3808 ;; This function is called by:
  3809 ;;		_init_display
  3810 ;; This function uses a reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text7
  3814  01880A                     __ptext7:
  3815                           	opt callstack 0
  3816  01880A                     _send_lcd_cmd_long:
  3817                           	opt callstack 22
  3818                           
  3819                           ; BSR set to: 61
  3820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3821                           ;incstack = 0
  3822                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3823  01880A  92BC               	bcf	188,1,c	;volatile
  3824                           
  3825                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3826  01880C  94BC               	bcf	188,2,c	;volatile
  3827                           
  3828                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3829                           ;stkvar	_cmd @ sp[(0)+-1]
  3830  01880E  0EFF               	movlw	-1
  3831  018810  50E3               	movf	plusw1,w,c
  3832  018812  6EE6               	movwf	postinc1,c
  3833  018814  ECFB  F0C5         	call	_SPI1_Exchange8bit	;wreg free
  3834                           
  3835                           ; BSR set to: 57
  3836                           ;eadog.c: 119:  wdtdelay(800);
  3837  018818  0E20               	movlw	32
  3838  01881A  6EE6               	movwf	postinc1,c
  3839  01881C  0E03               	movlw	3
  3840  01881E  6EE6               	movwf	postinc1,c
  3841  018820  0E00               	movlw	0
  3842  018822  6EE6               	movwf	postinc1,c
  3843  018824  0E00               	movlw	0
  3844  018826  6EE6               	movwf	postinc1,c
  3845  018828  EC92  F0C0         	call	_wdtdelay	;wreg free
  3846                           
  3847                           ; BSR set to: 0
  3848  01882C  82BC               	bsf	188,1,c	;volatile
  3849                           
  3850                           ; BSR set to: 0
  3851                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3852  01882E  52E5               	movf	postdec1,f,c
  3853  018830  0012               	return		;funcret
  3854  018832                     __end_of_send_lcd_cmd_long:
  3855                           	opt callstack 0
  3856                           
  3857 ;; *************** function _send_lcd_cmd *****************
  3858 ;; Defined at:
  3859 ;;		line 102 in file "eadog.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  cmd             1  [STACK] const unsigned char 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1  [STACK] void 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3868 ;; Tracked objects:
  3869 ;;		On entry : 3F/0
  3870 ;;		On exit  : 3F/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    7
  3880 ;; This function calls:
  3881 ;;		_SPI1_Exchange8bit
  3882 ;;		_wdtdelay
  3883 ;; This function is called by:
  3884 ;;		_init_display
  3885 ;; This function uses a reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text8
  3889  018832                     __ptext8:
  3890                           	opt callstack 0
  3891  018832                     _send_lcd_cmd:
  3892                           	opt callstack 22
  3893                           
  3894                           ; BSR set to: 0
  3895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3896                           ;incstack = 0
  3897                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3898  018832  92BC               	bcf	188,1,c	;volatile
  3899                           
  3900                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3901  018834  94BC               	bcf	188,2,c	;volatile
  3902                           
  3903                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3904                           ;stkvar	_cmd @ sp[(0)+-1]
  3905  018836  0EFF               	movlw	-1
  3906  018838  50E3               	movf	plusw1,w,c
  3907  01883A  6EE6               	movwf	postinc1,c
  3908  01883C  ECFB  F0C5         	call	_SPI1_Exchange8bit	;wreg free
  3909                           
  3910                           ; BSR set to: 57
  3911                           ;eadog.c: 107:  wdtdelay(30);
  3912  018840  0E1E               	movlw	30
  3913  018842  6EE6               	movwf	postinc1,c
  3914  018844  0E00               	movlw	0
  3915  018846  6EE6               	movwf	postinc1,c
  3916  018848  0E00               	movlw	0
  3917  01884A  6EE6               	movwf	postinc1,c
  3918  01884C  0E00               	movlw	0
  3919  01884E  6EE6               	movwf	postinc1,c
  3920  018850  EC92  F0C0         	call	_wdtdelay	;wreg free
  3921                           
  3922                           ; BSR set to: 0
  3923  018854  82BC               	bsf	188,1,c	;volatile
  3924                           
  3925                           ; BSR set to: 0
  3926                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3927  018856  52E5               	movf	postdec1,f,c
  3928  018858  0012               	return		;funcret
  3929  01885A                     __end_of_send_lcd_cmd:
  3930                           	opt callstack 0
  3931                           
  3932 ;; *************** function _SPI1_Exchange8bit *****************
  3933 ;; Defined at:
  3934 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  data            1  [STACK] unsigned char 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1  [STACK] unsigned char 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 3F/39
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    6
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_send_lcd_cmd
  3959 ;;		_send_lcd_cmd_long
  3960 ;; This function uses a reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text9
  3964  018BF6                     __ptext9:
  3965                           	opt callstack 0
  3966  018BF6                     _SPI1_Exchange8bit:
  3967                           	opt callstack 22
  3968                           
  3969                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3970                           
  3971                           ; BSR set to: 0
  3972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3973                           ;incstack = 0
  3974  018BF6  0E01               	movlw	1
  3975  018BF8  013D               	movlb	61	; () banked
  3976  018BFA  6F12               	movwf	18,b	;volatile
  3977                           
  3978                           ; BSR set to: 61
  3979                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3980                           ;stkvar	_data @ sp[(0)+-1]
  3981  018BFC  0EFF               	movlw	-1
  3982  018BFE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3983  018C04                     l835:
  3984                           
  3985                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3986  018C04  0139               	movlb	57	; () banked
  3987  018C06  A9A2               	btfss	162,4,b	;volatile
  3988  018C08  D7FD               	goto	l835
  3989                           
  3990                           ; BSR set to: 57
  3991                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3992  018C0A  006F F440  F032    	movff	15632,btemp	;volatile
  3993                           
  3994                           ; BSR set to: 57
  3995                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3996  018C10  52E5               	movf	postdec1,f,c
  3997  018C12  0012               	return		;funcret
  3998  018C14                     __end_of_SPI1_Exchange8bit:
  3999                           	opt callstack 0
  4000                           
  4001 ;; *************** function _ringBufS_init *****************
  4002 ;; Defined at:
  4003 ;;		line 22 in file "ringbufs.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  _this           2  [STACK] PTR volatile struct ring
  4006 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1  [STACK] void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4022 ;;Total ram usage:        0 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    7
  4025 ;; This function calls:
  4026 ;;		_memset
  4027 ;; This function is called by:
  4028 ;;		_init_display
  4029 ;; This function uses a reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text10
  4033  01885A                     __ptext10:
  4034                           	opt callstack 0
  4035  01885A                     _ringBufS_init:
  4036                           	opt callstack 22
  4037                           
  4038                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4039                           
  4040                           ; BSR set to: 57
  4041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4042                           ;incstack = 0
  4043  01885A  0E43               	movlw	67
  4044  01885C  6EE6               	movwf	postinc1,c
  4045  01885E  0E00               	movlw	0
  4046  018860  6EE6               	movwf	postinc1,c
  4047  018862  0E00               	movlw	0
  4048  018864  6EE6               	movwf	postinc1,c
  4049  018866  0E00               	movlw	0
  4050  018868  6EE6               	movwf	postinc1,c
  4051                           
  4052                           ;stkvar	__this @ sp[(-4)+-2]
  4053  01886A  0EFA               	movlw	-6
  4054  01886C  006F FF8F FFE6     	movff	plusw1,postinc1
  4055  018872  006F FF8F FFE6     	movff	plusw1,postinc1
  4056  018878  ECB8  F0A5         	call	_memset	;wreg free
  4057                           
  4058                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4059  01887C  52E5               	movf	postdec1,f,c
  4060  01887E  52E5               	movf	postdec1,f,c
  4061  018880  0012               	return		;funcret
  4062  018882                     __end_of_ringBufS_init:
  4063                           	opt callstack 0
  4064                           
  4065 ;; *************** function _hid_display *****************
  4066 ;; Defined at:
  4067 ;;		line 17 in file "hid.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  h               1  [STACK] PTR struct H_data
  4070 ;;		 -> H(7), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1  [STACK] PTR struct H_data
  4075 ;; Registers used:
  4076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4077 ;; Tracked objects:
  4078 ;;		On entry : 3F/1
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4086 ;;Total ram usage:        0 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    8
  4089 ;; This function calls:
  4090 ;;		_hid_input
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text11
  4097  01705C                     __ptext11:
  4098                           	opt callstack 0
  4099  01705C                     _hid_display:
  4100                           	opt callstack 22
  4101                           
  4102                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4103                           ;stkvar	_h @ sp[(0)+-1]
  4104                           
  4105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4106                           ;incstack = 0
  4107  01705C  0EFF               	movlw	-1
  4108  01705E  50E3               	movf	plusw1,w,c
  4109  017060  6EE6               	movwf	postinc1,c
  4110  017062  EC4F  F0BD         	call	_hid_input	;wreg free
  4111                           
  4112                           ;hid.c: 21:  switch (h->h_state) {
  4113  017066  D066               	goto	l9204
  4114  017068                     l9182:
  4115                           
  4116                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4117                           ;stkvar	_h @ sp[(0)+-1]
  4118  017068  0EFF               	movlw	-1
  4119  01706A  50E3               	movf	plusw1,w,c
  4120  01706C  6ED9               	movwf	fsr2l,c
  4121  01706E  6ADA               	clrf	fsr2h,c
  4122  017070  0E01               	movlw	1
  4123  017072  26D9               	addwf	fsr2l,f,c
  4124  017074  0E01               	movlw	1
  4125  017076  6EDF               	movwf	indf2,c
  4126                           
  4127                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4128                           ;stkvar	_h @ sp[(0)+-1]
  4129  017078  0EFF               	movlw	-1
  4130  01707A  50E3               	movf	plusw1,w,c
  4131  01707C  6ED9               	movwf	fsr2l,c
  4132  01707E  6ADA               	clrf	fsr2h,c
  4133  017080  0E00               	movlw	0
  4134  017082  6EDF               	movwf	indf2,c
  4135                           
  4136                           ;hid.c: 25:   h->wait_enter = 1;
  4137                           ;stkvar	_h @ sp[(0)+-1]
  4138  017084  0EFF               	movlw	-1
  4139  017086  50E3               	movf	plusw1,w,c
  4140  017088  6ED9               	movwf	fsr2l,c
  4141  01708A  6ADA               	clrf	fsr2h,c
  4142  01708C  0E04               	movlw	4
  4143  01708E  26D9               	addwf	fsr2l,f,c
  4144  017090  0E01               	movlw	1
  4145  017092  6EDF               	movwf	indf2,c
  4146                           
  4147                           ;hid.c: 26:   h->wait_select = 1;
  4148                           ;stkvar	_h @ sp[(0)+-1]
  4149  017094  0EFF               	movlw	-1
  4150  017096  50E3               	movf	plusw1,w,c
  4151  017098  6ED9               	movwf	fsr2l,c
  4152  01709A  6ADA               	clrf	fsr2h,c
  4153  01709C  0E02               	movlw	2
  4154  01709E  26D9               	addwf	fsr2l,f,c
  4155  0170A0  0E01               	movlw	1
  4156  0170A2  6EDF               	movwf	indf2,c
  4157                           
  4158                           ;hid.c: 27:   h->select_p=SW_OFF;
  4159                           ;stkvar	_h @ sp[(0)+-1]
  4160  0170A4  0EFF               	movlw	-1
  4161  0170A6  50E3               	movf	plusw1,w,c
  4162  0170A8  6ED9               	movwf	fsr2l,c
  4163  0170AA  6ADA               	clrf	fsr2h,c
  4164  0170AC  0E03               	movlw	3
  4165  0170AE  26D9               	addwf	fsr2l,f,c
  4166  0170B0  0E00               	movlw	0
  4167  0170B2  6EDF               	movwf	indf2,c
  4168                           
  4169                           ;hid.c: 28:   h->enter_p=SW_OFF;
  4170                           ;stkvar	_h @ sp[(0)+-1]
  4171  0170B4  0EFF               	movlw	-1
  4172  0170B6  50E3               	movf	plusw1,w,c
  4173  0170B8  6ED9               	movwf	fsr2l,c
  4174  0170BA  6ADA               	clrf	fsr2h,c
  4175  0170BC  0E05               	movlw	5
  4176  0170BE  26D9               	addwf	fsr2l,f,c
  4177  0170C0  0E00               	movlw	0
  4178  0170C2  D036               	goto	L1
  4179  0170C4                     l9194:
  4180                           
  4181                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4182                           ;stkvar	_h @ sp[(0)+-1]
  4183  0170C4  0EFF               	movlw	-1
  4184  0170C6  50E3               	movf	plusw1,w,c
  4185  0170C8  6ED9               	movwf	fsr2l,c
  4186  0170CA  6ADA               	clrf	fsr2h,c
  4187  0170CC  0E02               	movlw	2
  4188  0170CE  26D9               	addwf	fsr2l,f,c
  4189  0170D0  50DF               	movf	indf2,w,c
  4190  0170D2  A4D8               	btfss	status,2,c
  4191  0170D4  D042               	goto	l1812
  4192                           
  4193                           ;stkvar	_h @ sp[(0)+-1]
  4194  0170D6  0EFF               	movlw	-1
  4195  0170D8  50E3               	movf	plusw1,w,c
  4196  0170DA  6ED9               	movwf	fsr2l,c
  4197  0170DC  6ADA               	clrf	fsr2h,c
  4198  0170DE  0E03               	movlw	3
  4199  0170E0  26D9               	addwf	fsr2l,f,c
  4200  0170E2  50DF               	movf	indf2,w,c
  4201  0170E4  A4D8               	btfss	status,2,c
  4202  0170E6  D039               	goto	l1812
  4203                           
  4204                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4205                           ;stkvar	_h @ sp[(0)+-1]
  4206  0170E8  0EFF               	movlw	-1
  4207  0170EA  50E3               	movf	plusw1,w,c
  4208  0170EC  6ED9               	movwf	fsr2l,c
  4209  0170EE  6ADA               	clrf	fsr2h,c
  4210  0170F0  0E06               	movlw	6
  4211  0170F2  26D9               	addwf	fsr2l,f,c
  4212                           
  4213                           ;stkvar	_h @ sp[(0)+-1]
  4214  0170F4  0EFF               	movlw	-1
  4215  0170F6  50E3               	movf	plusw1,w,c
  4216  0170F8  6EE9               	movwf	fsr0l,c
  4217  0170FA  6AEA               	clrf	fsr0h,c
  4218  0170FC  0E06               	movlw	6
  4219  0170FE  26E9               	addwf	fsr0l,f,c
  4220  017100  2AEF               	incf	indf0,f,c
  4221  017102  50EF               	movf	indf0,w,c
  4222  017104  0B03               	andlw	3
  4223  017106  6EDF               	movwf	indf2,c
  4224                           
  4225                           ;hid.c: 34:    h->hid_display = h->sequence;
  4226                           ;stkvar	_h @ sp[(0)+-1]
  4227  017108  0EFF               	movlw	-1
  4228  01710A  50E3               	movf	plusw1,w,c
  4229  01710C  6ED9               	movwf	fsr2l,c
  4230  01710E  6ADA               	clrf	fsr2h,c
  4231  017110  0E06               	movlw	6
  4232  017112  26D9               	addwf	fsr2l,f,c
  4233                           
  4234                           ;stkvar	_h @ sp[(0)+-1]
  4235  017114  0EFF               	movlw	-1
  4236  017116  50E3               	movf	plusw1,w,c
  4237  017118  6EE9               	movwf	fsr0l,c
  4238  01711A  6AEA               	clrf	fsr0h,c
  4239  01711C  006F FF7F FFEF     	movff	indf2,indf0
  4240                           
  4241                           ;hid.c: 35:    h->wait_select = 1;
  4242                           ;stkvar	_h @ sp[(0)+-1]
  4243  017122  0EFF               	movlw	-1
  4244  017124  50E3               	movf	plusw1,w,c
  4245  017126  6ED9               	movwf	fsr2l,c
  4246  017128  6ADA               	clrf	fsr2h,c
  4247  01712A  0E02               	movlw	2
  4248  01712C  26D9               	addwf	fsr2l,f,c
  4249  01712E  0E01               	movlw	1
  4250  017130                     L1:
  4251  017130  6EDF               	movwf	indf2,c
  4252  017132  D013               	goto	l1812
  4253  017134                     l9204:
  4254                           
  4255                           ;stkvar	_h @ sp[(0)+-1]
  4256  017134  0EFF               	movlw	-1
  4257  017136  50E3               	movf	plusw1,w,c
  4258  017138  6ED9               	movwf	fsr2l,c
  4259  01713A  6ADA               	clrf	fsr2h,c
  4260  01713C  0E01               	movlw	1
  4261  01713E  26D9               	addwf	fsr2l,f,c
  4262  017140  50DF               	movf	indf2,w,c
  4263  017142  6E3C               	movwf	(btemp+10)^0,c
  4264  017144  6A3D               	clrf	(btemp+11)^0,c
  4265                           
  4266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4267                           ; Switch size 1, requested type "simple"
  4268                           ; Number of cases is 1, Range of values is 0 to 0
  4269                           ; switch strategies available:
  4270                           ; Name         Instructions Cycles
  4271                           ; simple_byte            4     3 (average)
  4272                           ;	Chosen strategy is simple_byte
  4273  017146  503D               	movf	(btemp+11)^0,w,c
  4274  017148  0A00               	xorlw	0	; case 0
  4275  01714A  A4D8               	btfss	status,2,c
  4276  01714C  D7BB               	goto	l9194
  4277                           
  4278                           ; Switch size 1, requested type "simple"
  4279                           ; Number of cases is 2, Range of values is 0 to 1
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            7     4 (average)
  4283                           ;	Chosen strategy is simple_byte
  4284  01714E  503C               	movf	(btemp+10)^0,w,c
  4285  017150  0A00               	xorlw	0	; case 0
  4286  017152  B4D8               	btfsc	status,2,c
  4287  017154  D789               	goto	l9182
  4288  017156  0A01               	xorlw	1	; case 1
  4289  017158  D7B5               	goto	l9194
  4290  01715A                     l1812:
  4291                           
  4292                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4293  01715A  52E5               	movf	postdec1,f,c
  4294  01715C  0012               	return		;funcret
  4295  01715E                     __end_of_hid_display:
  4296                           	opt callstack 0
  4297                           
  4298 ;; *************** function _hid_input *****************
  4299 ;; Defined at:
  4300 ;;		line 3 in file "hid.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  h               1  [STACK] PTR struct H_data
  4303 ;;		 -> H(7), 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1  [STACK] PTR struct H_data
  4308 ;; Registers used:
  4309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/1
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    7
  4322 ;; This function calls:
  4323 ;;		_get_switch
  4324 ;; This function is called by:
  4325 ;;		_hid_display
  4326 ;; This function uses a reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text12
  4330  017A9E                     __ptext12:
  4331                           	opt callstack 0
  4332  017A9E                     _hid_input:
  4333                           	opt callstack 22
  4334                           
  4335                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4336                           
  4337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4338                           ;incstack = 0
  4339  017A9E  0E02               	movlw	2
  4340  017AA0  6EE6               	movwf	postinc1,c
  4341  017AA2  EC41  F0C4         	call	_get_switch	;wreg free
  4342  017AA6  5032               	movf	btemp^0,w,c
  4343  017AA8  B4D8               	btfsc	status,2,c
  4344  017AAA  D01C               	goto	l8956
  4345                           
  4346                           ;hid.c: 6:   h->wait_select = 0;
  4347                           ;stkvar	_h @ sp[(0)+-1]
  4348  017AAC  0EFF               	movlw	-1
  4349  017AAE  50E3               	movf	plusw1,w,c
  4350  017AB0  6ED9               	movwf	fsr2l,c
  4351  017AB2  6ADA               	clrf	fsr2h,c
  4352  017AB4  0E02               	movlw	2
  4353  017AB6  26D9               	addwf	fsr2l,f,c
  4354  017AB8  0E00               	movlw	0
  4355  017ABA  6EDF               	movwf	indf2,c
  4356                           
  4357                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4358  017ABC  0E02               	movlw	2
  4359  017ABE  6EE6               	movwf	postinc1,c
  4360  017AC0  EC41  F0C4         	call	_get_switch	;wreg free
  4361  017AC4  5032               	movf	btemp^0,w,c
  4362  017AC6  B4D8               	btfsc	status,2,c
  4363  017AC8  D003               	goto	u8440
  4364  017ACA  6A3D               	clrf	(btemp+11)^0,c
  4365  017ACC  2A3D               	incf	(btemp+11)^0,f,c
  4366  017ACE  D001               	goto	u8458
  4367  017AD0                     u8440:
  4368  017AD0  6A3D               	clrf	(btemp+11)^0,c
  4369  017AD2                     u8458:
  4370                           
  4371                           ;stkvar	_h @ sp[(0)+-1]
  4372  017AD2  0EFF               	movlw	-1
  4373  017AD4  50E3               	movf	plusw1,w,c
  4374  017AD6  6ED9               	movwf	fsr2l,c
  4375  017AD8  6ADA               	clrf	fsr2h,c
  4376  017ADA  0E03               	movlw	3
  4377  017ADC  26D9               	addwf	fsr2l,f,c
  4378  017ADE  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4379  017AE4                     l8956:
  4380                           
  4381                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4382  017AE4  0E03               	movlw	3
  4383  017AE6  6EE6               	movwf	postinc1,c
  4384  017AE8  EC41  F0C4         	call	_get_switch	;wreg free
  4385  017AEC  5032               	movf	btemp^0,w,c
  4386  017AEE  B4D8               	btfsc	status,2,c
  4387  017AF0  D01C               	goto	l1803
  4388                           
  4389                           ;hid.c: 11:   h->wait_enter = 0;
  4390                           ;stkvar	_h @ sp[(0)+-1]
  4391  017AF2  0EFF               	movlw	-1
  4392  017AF4  50E3               	movf	plusw1,w,c
  4393  017AF6  6ED9               	movwf	fsr2l,c
  4394  017AF8  6ADA               	clrf	fsr2h,c
  4395  017AFA  0E04               	movlw	4
  4396  017AFC  26D9               	addwf	fsr2l,f,c
  4397  017AFE  0E00               	movlw	0
  4398  017B00  6EDF               	movwf	indf2,c
  4399                           
  4400                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4401  017B02  0E03               	movlw	3
  4402  017B04  6EE6               	movwf	postinc1,c
  4403  017B06  EC41  F0C4         	call	_get_switch	;wreg free
  4404  017B0A  5032               	movf	btemp^0,w,c
  4405  017B0C  B4D8               	btfsc	status,2,c
  4406  017B0E  D003               	goto	u8470
  4407  017B10  6A3D               	clrf	(btemp+11)^0,c
  4408  017B12  2A3D               	incf	(btemp+11)^0,f,c
  4409  017B14  D001               	goto	u8488
  4410  017B16                     u8470:
  4411  017B16  6A3D               	clrf	(btemp+11)^0,c
  4412  017B18                     u8488:
  4413                           
  4414                           ;stkvar	_h @ sp[(0)+-1]
  4415  017B18  0EFF               	movlw	-1
  4416  017B1A  50E3               	movf	plusw1,w,c
  4417  017B1C  6ED9               	movwf	fsr2l,c
  4418  017B1E  6ADA               	clrf	fsr2h,c
  4419  017B20  0E05               	movlw	5
  4420  017B22  26D9               	addwf	fsr2l,f,c
  4421  017B24  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4422  017B2A                     l1803:
  4423                           
  4424                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4425  017B2A  52E5               	movf	postdec1,f,c
  4426  017B2C  0012               	return		;funcret
  4427  017B2E                     __end_of_hid_input:
  4428                           	opt callstack 0
  4429                           
  4430 ;; *************** function _get_switch *****************
  4431 ;; Defined at:
  4432 ;;		line 18 in file "dio.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  i               1  [STACK] unsigned char 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1  [STACK] enum E17013
  4439 ;; Registers used:
  4440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/2
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4450 ;;Total ram usage:        0 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    6
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_main
  4457 ;;		_hid_input
  4458 ;; This function uses a reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text13
  4462  018882                     __ptext13:
  4463                           	opt callstack 0
  4464  018882                     _get_switch:
  4465                           	opt callstack 22
  4466                           
  4467                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4468                           ;stkvar	_i @ sp[(0)+-1]
  4469                           
  4470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4471                           ;incstack = 0
  4472  018882  0EFF               	movlw	-1
  4473  018884  006F FF8C  F032    	movff	plusw1,btemp
  4474  01888A  0E03               	movlw	3
  4475  01888C  6432               	cpfsgt	btemp^0,c
  4476  01888E  D002               	goto	l8272
  4477                           
  4478                           ;dio.c: 21:   return SW_OFF;
  4479  018890  0E00               	movlw	0
  4480  018892  D008               	goto	L2
  4481  018894                     l8272:
  4482                           
  4483                           ;dio.c: 23:  return S.button[i].sw;
  4484                           ;stkvar	_i @ sp[(0)+-1]
  4485  018894  0EFF               	movlw	-1
  4486  018896  50E3               	movf	plusw1,w,c
  4487  018898  0D05               	mullw	5
  4488  01889A  50F3               	movf	243,w,c
  4489  01889C  0F60               	addlw	low _S
  4490  01889E  6ED9               	movwf	fsr2l,c
  4491  0188A0  6ADA               	clrf	fsr2h,c
  4492  0188A2  50DF               	movf	indf2,w,c
  4493  0188A4                     L2:
  4494  0188A4  6E32               	movwf	btemp^0,c
  4495                           
  4496                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4497  0188A6  52E5               	movf	postdec1,f,c
  4498  0188A8  0012               	return		;funcret
  4499  0188AA                     __end_of_get_switch:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _eaDogM_WriteCommand *****************
  4503 ;; Defined at:
  4504 ;;		line 160 in file "eadog.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  cmd             1  [STACK] const unsigned char 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1  [STACK] void 
  4511 ;; Registers used:
  4512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4513 ;; Tracked objects:
  4514 ;;		On entry : 3F/3D
  4515 ;;		On exit  : 3F/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:   16
  4525 ;; This function calls:
  4526 ;;		_send_lcd_cmd_dma
  4527 ;; This function is called by:
  4528 ;;		_main
  4529 ;; This function uses a reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text14
  4533  018DBA                     __ptext14:
  4534                           	opt callstack 0
  4535  018DBA                     _eaDogM_WriteCommand:
  4536                           	opt callstack 14
  4537                           
  4538                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  4539                           ;stkvar	_cmd @ sp[(0)+-1]
  4540                           
  4541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4542                           ;incstack = 0
  4543  018DBA  0EFF               	movlw	-1
  4544  018DBC  50E3               	movf	plusw1,w,c
  4545  018DBE  6EE6               	movwf	postinc1,c
  4546  018DC0  ECEC  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  4547                           
  4548                           ; BSR set to: 0
  4549                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4550  018DC4  52E5               	movf	postdec1,f,c
  4551  018DC6  0012               	return		;funcret
  4552  018DC8                     __end_of_eaDogM_WriteCommand:
  4553                           	opt callstack 0
  4554                           
  4555 ;; *************** function _convert_adc_data *****************
  4556 ;; Defined at:
  4557 ;;		line 39 in file "mbmc.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  i               1  [STACK] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1  [STACK] void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/39
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    9
  4578 ;; This function calls:
  4579 ;;		_conv_raw_result
  4580 ;;		_lp_filter
  4581 ;; This function is called by:
  4582 ;;		_main
  4583 ;; This function uses a reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text15
  4587  017590                     __ptext15:
  4588                           	opt callstack 0
  4589  017590                     _convert_adc_data:
  4590                           	opt callstack 0
  4591                           
  4592                           ; BSR set to: 0
  4593                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4594  017590  52E6               	movf	postinc1,f,c
  4595                           
  4596                           ;mbmc.c: 41:  uint8_t i = 0;
  4597                           ;stkvar	_i @ sp[(-1)+0]
  4598                           
  4599                           ;incstack = 0
  4600  017592  0EFF               	movlw	-1
  4601  017594  6AE3               	clrf	plusw1,c
  4602  017596                     l9162:
  4603                           
  4604                           ;mbmc.c: 44:   if (V.calib) {
  4605  017596  0102               	movlb	2	; () banked
  4606  017598  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4607  01759A  B4D8               	btfsc	status,2,c
  4608  01759C  D01B               	goto	l9166
  4609                           
  4610                           ; BSR set to: 2
  4611                           ;mbmc.c: 45:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4612  01759E  0E01               	movlw	1
  4613  0175A0  6EE6               	movwf	postinc1,c
  4614                           
  4615                           ;stkvar	_i @ sp[(-2)+0]
  4616  0175A2  0EFE               	movlw	-2
  4617  0175A4  50E3               	movf	plusw1,w,c
  4618  0175A6  6EE6               	movwf	postinc1,c
  4619  0175A8  0E01               	movlw	1
  4620  0175AA  6EE6               	movwf	postinc1,c
  4621                           
  4622                           ;stkvar	_i @ sp[(-4)+0]
  4623  0175AC  0EFC               	movlw	-4
  4624  0175AE  50E3               	movf	plusw1,w,c
  4625  0175B0  6EE6               	movwf	postinc1,c
  4626  0175B2  EC8F  F09D         	call	_conv_raw_result	;wreg free
  4627  0175B6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4628  0175BC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4629  0175C2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4630  0175C8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4631  0175CE  EC83  F0B0         	call	_lp_filter	;wreg free
  4632  0175D2  D01A               	goto	L3
  4633  0175D4                     l9166:
  4634                           
  4635                           ; BSR set to: 2
  4636                           ;mbmc.c: 47:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4637  0175D4  0E00               	movlw	0
  4638  0175D6  6EE6               	movwf	postinc1,c
  4639                           
  4640                           ;stkvar	_i @ sp[(-2)+0]
  4641  0175D8  0EFE               	movlw	-2
  4642  0175DA  50E3               	movf	plusw1,w,c
  4643  0175DC  6EE6               	movwf	postinc1,c
  4644  0175DE  0E00               	movlw	0
  4645  0175E0  6EE6               	movwf	postinc1,c
  4646                           
  4647                           ;stkvar	_i @ sp[(-4)+0]
  4648  0175E2  0EFC               	movlw	-4
  4649  0175E4  50E3               	movf	plusw1,w,c
  4650  0175E6  6EE6               	movwf	postinc1,c
  4651  0175E8  EC8F  F09D         	call	_conv_raw_result	;wreg free
  4652  0175EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  4653  0175F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4654  0175F8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4655  0175FE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4656  017604  EC83  F0B0         	call	_lp_filter	;wreg free
  4657  017608                     L3:
  4658                           
  4659                           ;stkvar	_i @ sp[(-1)+0]
  4660  017608  0EFF               	movlw	-1
  4661  01760A  50E3               	movf	plusw1,w,c
  4662  01760C  0D04               	mullw	4
  4663  01760E  0E00               	movlw	low _C
  4664  017610  24F3               	addwf	243,w,c
  4665  017612  6ED9               	movwf	fsr2l,c
  4666  017614  0E01               	movlw	high _C
  4667  017616  20F4               	addwfc	prodh,w,c
  4668  017618  6EDA               	movwf	fsr2h,c
  4669  01761A  0060  F0CB  FFDE   	movff	btemp,postinc2
  4670  017620  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  4671  017626  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  4672  01762C  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  4673                           
  4674                           ;mbmc.c: 49:  } while (++i < 16);
  4675                           ;stkvar	_i @ sp[(-1)+0]
  4676  017632  0EFF               	movlw	-1
  4677  017634  2AE3               	incf	plusw1,f,c
  4678  017636  0EFF               	movlw	-1
  4679  017638  006F FF8C  F032    	movff	plusw1,btemp
  4680  01763E  0E0F               	movlw	15
  4681  017640  6432               	cpfsgt	btemp^0,c
  4682  017642  D7A9               	goto	l9162
  4683                           
  4684                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4685  017644  52E5               	movf	postdec1,f,c
  4686  017646  0012               	return		;funcret
  4687  017648                     __end_of_convert_adc_data:
  4688                           	opt callstack 0
  4689                           
  4690 ;; *************** function _conv_raw_result *****************
  4691 ;; Defined at:
  4692 ;;		line 80 in file "daq.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  chan            1  [STACK] const enum E16136
  4695 ;;  to_what         1  [STACK] const enum E16198
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  4  [STACK] float 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4702 ;; Tracked objects:
  4703 ;;		On entry : 3F/2
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4711 ;;Total ram usage:        0 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    8
  4714 ;; This function calls:
  4715 ;;		___fldiv
  4716 ;;		___flmul
  4717 ;;		___flsub
  4718 ;;		___xxtofl
  4719 ;;		_get_raw_result
  4720 ;;		_nanf
  4721 ;; This function is called by:
  4722 ;;		_convert_adc_data
  4723 ;; This function uses a reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text16
  4727  013B1E                     __ptext16:
  4728                           	opt callstack 0
  4729  013B1E                     _conv_raw_result:
  4730                           	opt callstack 21
  4731                           
  4732                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4733                           
  4734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4735                           ;incstack = 0
  4736  013B1E  D242               	goto	l8890
  4737  013B20                     l8836:
  4738                           
  4739                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4740                           ;stkvar	_chan @ sp[(0)+-1]
  4741  013B20  0EFF               	movlw	-1
  4742  013B22  006F FF8C  F03D    	movff	plusw1,btemp+11
  4743  013B28  0E77               	movlw	119
  4744  013B2A  6E3A               	movwf	(btemp+8)^0,c
  4745  013B2C  0E3C               	movlw	60
  4746  013B2E  6E3B               	movwf	(btemp+9)^0,c
  4747  013B30  2A3D               	incf	(btemp+11)^0,f,c
  4748  013B32  D003               	goto	u8214
  4749  013B34                     u8215:
  4750  013B34  343B               	rlcf	(btemp+9)^0,w,c
  4751  013B36  323B               	rrcf	(btemp+9)^0,f,c
  4752  013B38  323A               	rrcf	(btemp+8)^0,f,c
  4753  013B3A                     u8214:
  4754  013B3A  2E3D               	decfsz	(btemp+11)^0,f,c
  4755  013B3C  D7FB               	goto	u8215
  4756  013B3E  B03A               	btfsc	(btemp+8)^0,0,c
  4757  013B40  D007               	goto	l8842
  4758                           
  4759                           ;daq.c: 86:    return nanf("");
  4760  013B42  0E7F               	movlw	low (STR_39+18)
  4761  013B44  6EE6               	movwf	postinc1,c
  4762  013B46  0EFE               	movlw	high (STR_39+18)
  4763  013B48  6EE6               	movwf	postinc1,c
  4764  013B4A  ECD3  F0BF         	call	_nanf	;wreg free
  4765  013B4E  D23A               	goto	l1683
  4766  013B50                     l8842:
  4767                           
  4768                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4769                           ;stkvar	_chan @ sp[(0)+-1]
  4770  013B50  0EFF               	movlw	-1
  4771  013B52  006F FF8C  F03D    	movff	plusw1,btemp+11
  4772  013B58  0E03               	movlw	3
  4773  013B5A  6E3A               	movwf	(btemp+8)^0,c
  4774  013B5C  0E00               	movlw	0
  4775  013B5E  6E3B               	movwf	(btemp+9)^0,c
  4776  013B60  2A3D               	incf	(btemp+11)^0,f,c
  4777  013B62  D003               	goto	u8234
  4778  013B64                     u8235:
  4779  013B64  343B               	rlcf	(btemp+9)^0,w,c
  4780  013B66  323B               	rrcf	(btemp+9)^0,f,c
  4781  013B68  323A               	rrcf	(btemp+8)^0,f,c
  4782  013B6A                     u8234:
  4783  013B6A  2E3D               	decfsz	(btemp+11)^0,f,c
  4784  013B6C  D7FB               	goto	u8235
  4785  013B6E  A03A               	btfss	(btemp+8)^0,0,c
  4786  013B70  D0EB               	goto	l8856
  4787                           
  4788                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4789                           ;stkvar	_chan @ sp[(0)+-1]
  4790  013B72  0EFF               	movlw	-1
  4791  013B74  006F FF8C  F03D    	movff	plusw1,btemp+11
  4792  013B7A  0E01               	movlw	1
  4793  013B7C  6E3A               	movwf	(btemp+8)^0,c
  4794  013B7E  0E00               	movlw	0
  4795  013B80  6E3B               	movwf	(btemp+9)^0,c
  4796  013B82  2A3D               	incf	(btemp+11)^0,f,c
  4797  013B84  D003               	goto	u8254
  4798  013B86                     u8255:
  4799  013B86  343B               	rlcf	(btemp+9)^0,w,c
  4800  013B88  323B               	rrcf	(btemp+9)^0,f,c
  4801  013B8A  323A               	rrcf	(btemp+8)^0,f,c
  4802  013B8C                     u8254:
  4803  013B8C  2E3D               	decfsz	(btemp+11)^0,f,c
  4804  013B8E  D7FB               	goto	u8255
  4805  013B90  A03A               	btfss	(btemp+8)^0,0,c
  4806  013B92  D06D               	goto	l8852
  4807                           
  4808                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4809  013B94  0E7B               	movlw	123
  4810  013B96  6EE6               	movwf	postinc1,c
  4811  013B98  0E14               	movlw	20
  4812  013B9A  6EE6               	movwf	postinc1,c
  4813  013B9C  0EAE               	movlw	174
  4814  013B9E  6EE6               	movwf	postinc1,c
  4815  013BA0  0E3D               	movlw	61
  4816  013BA2  6EE6               	movwf	postinc1,c
  4817  013BA4  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4818  013BAA  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4819  013BB0  0E00               	movlw	0
  4820  013BB2  BE3B               	btfsc	(btemp+9)^0,7,c
  4821  013BB4  0EFF               	movlw	255
  4822  013BB6  6E3C               	movwf	(btemp+10)^0,c
  4823  013BB8  6E3D               	movwf	(btemp+11)^0,c
  4824  013BBA  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4825  013BC0  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4826  013BC6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4827  013BCC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4828  013BD2  0E01               	movlw	1
  4829  013BD4  6EE6               	movwf	postinc1,c
  4830  013BD6  EC9D  F0AE         	call	___xxtofl	;wreg free
  4831  013BDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4832  013BE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4833  013BE6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4834  013BEC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4835                           
  4836                           ;stkvar	_chan @ sp[(-8)+-1]
  4837  013BF2  0EF7               	movlw	-9
  4838  013BF4  50E3               	movf	plusw1,w,c
  4839  013BF6  6EE6               	movwf	postinc1,c
  4840  013BF8  EC0A  F0C6         	call	_get_raw_result	;wreg free
  4841  013BFC  0060  F0C8  F03C   	movff	btemp,btemp+10
  4842  013C02  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4843  013C08  503C               	movf	(btemp+10)^0,w,c
  4844  013C0A  6E36               	movwf	(btemp+4)^0,c
  4845  013C0C  503D               	movf	(btemp+11)^0,w,c
  4846  013C0E  6E37               	movwf	(btemp+5)^0,c
  4847  013C10  6A38               	clrf	(btemp+6)^0,c
  4848  013C12  6A39               	clrf	(btemp+7)^0,c
  4849  013C14  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4850  013C1A  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4851  013C20  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4852  013C26  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4853  013C2C  0E00               	movlw	0
  4854  013C2E  6EE6               	movwf	postinc1,c
  4855  013C30  EC9D  F0AE         	call	___xxtofl	;wreg free
  4856  013C34  0060  F0CB  FFE6   	movff	btemp,postinc1
  4857  013C3A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4858  013C40  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4859  013C46  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4860  013C4C  EC85  F0C1         	call	___flsub	;wreg free
  4861  013C50  0060  F0CB  FFE6   	movff	btemp,postinc1
  4862  013C56  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4863  013C5C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4864  013C62  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4865  013C68  ECDF  F092         	call	___flmul	;wreg free
  4866  013C6C  D1AB               	goto	l1683
  4867  013C6E                     l8852:
  4868                           
  4869                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  4870  013C6E  0E29               	movlw	41
  4871  013C70  6EE6               	movwf	postinc1,c
  4872  013C72  0E5C               	movlw	92
  4873  013C74  6EE6               	movwf	postinc1,c
  4874  013C76  0E0F               	movlw	15
  4875  013C78  6EE6               	movwf	postinc1,c
  4876  013C7A  0E3D               	movlw	61
  4877  013C7C  6EE6               	movwf	postinc1,c
  4878  013C7E  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4879  013C84  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4880  013C8A  0E00               	movlw	0
  4881  013C8C  BE3B               	btfsc	(btemp+9)^0,7,c
  4882  013C8E  0EFF               	movlw	255
  4883  013C90  6E3C               	movwf	(btemp+10)^0,c
  4884  013C92  6E3D               	movwf	(btemp+11)^0,c
  4885  013C94  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4886  013C9A  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4887  013CA0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4888  013CA6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4889  013CAC  0E01               	movlw	1
  4890  013CAE  6EE6               	movwf	postinc1,c
  4891  013CB0  EC9D  F0AE         	call	___xxtofl	;wreg free
  4892  013CB4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4893  013CBA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4894  013CC0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4895  013CC6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4896                           
  4897                           ;stkvar	_chan @ sp[(-8)+-1]
  4898  013CCC  0EF7               	movlw	-9
  4899  013CCE  50E3               	movf	plusw1,w,c
  4900  013CD0  6EE6               	movwf	postinc1,c
  4901  013CD2  EC0A  F0C6         	call	_get_raw_result	;wreg free
  4902  013CD6  0060  F0C8  F03C   	movff	btemp,btemp+10
  4903  013CDC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4904  013CE2  503C               	movf	(btemp+10)^0,w,c
  4905  013CE4  6E36               	movwf	(btemp+4)^0,c
  4906  013CE6  503D               	movf	(btemp+11)^0,w,c
  4907  013CE8  6E37               	movwf	(btemp+5)^0,c
  4908  013CEA  6A38               	clrf	(btemp+6)^0,c
  4909  013CEC  6A39               	clrf	(btemp+7)^0,c
  4910  013CEE  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4911  013CF4  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4912  013CFA  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4913  013D00  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4914  013D06  0E00               	movlw	0
  4915  013D08  6EE6               	movwf	postinc1,c
  4916  013D0A  EC9D  F0AE         	call	___xxtofl	;wreg free
  4917  013D0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4918  013D14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4919  013D1A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4920  013D20  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4921  013D26  EC85  F0C1         	call	___flsub	;wreg free
  4922  013D2A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4923  013D30  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4924  013D36  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4925  013D3C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4926  013D42  ECDF  F092         	call	___flmul	;wreg free
  4927  013D46  D13E               	goto	l1683
  4928  013D48                     l8856:
  4929                           
  4930                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4931                           ;stkvar	_chan @ sp[(0)+-1]
  4932  013D48  0EFF               	movlw	-1
  4933  013D4A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4934  013D50  0E00               	movlw	0
  4935  013D52  6E3A               	movwf	(btemp+8)^0,c
  4936  013D54  0E08               	movlw	8
  4937  013D56  6E3B               	movwf	(btemp+9)^0,c
  4938  013D58  2A3D               	incf	(btemp+11)^0,f,c
  4939  013D5A  D003               	goto	u8274
  4940  013D5C                     u8275:
  4941  013D5C  343B               	rlcf	(btemp+9)^0,w,c
  4942  013D5E  323B               	rrcf	(btemp+9)^0,f,c
  4943  013D60  323A               	rrcf	(btemp+8)^0,f,c
  4944  013D62                     u8274:
  4945  013D62  2E3D               	decfsz	(btemp+11)^0,f,c
  4946  013D64  D7FB               	goto	u8275
  4947  013D66  A03A               	btfss	(btemp+8)^0,0,c
  4948  013D68  D008               	goto	l8864
  4949                           
  4950                           ;daq.c: 96:     return 25.0;
  4951  013D6A  0E00               	movlw	0
  4952  013D6C  6E32               	movwf	btemp^0,c
  4953  013D6E  0E00               	movlw	0
  4954  013D70  6E33               	movwf	(btemp+1)^0,c
  4955  013D72  0EC8               	movlw	200
  4956  013D74  6E34               	movwf	(btemp+2)^0,c
  4957  013D76  0E41               	movlw	65
  4958  013D78  D113               	goto	L4
  4959  013D7A                     l8864:
  4960                           
  4961                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4962  013D7A  0E00               	movlw	0
  4963  013D7C  6EE6               	movwf	postinc1,c
  4964  013D7E  0E00               	movlw	0
  4965  013D80  6EE6               	movwf	postinc1,c
  4966  013D82  0E7A               	movlw	122
  4967  013D84  6EE6               	movwf	postinc1,c
  4968  013D86  0E44               	movlw	68
  4969  013D88  6EE6               	movwf	postinc1,c
  4970  013D8A  0E61               	movlw	97
  4971  013D8C  6EE6               	movwf	postinc1,c
  4972  013D8E  0E03               	movlw	3
  4973  013D90  6EE6               	movwf	postinc1,c
  4974  013D92  0E84               	movlw	132
  4975  013D94  6EE6               	movwf	postinc1,c
  4976  013D96  0E40               	movlw	64
  4977  013D98  6EE6               	movwf	postinc1,c
  4978                           
  4979                           ;stkvar	_chan @ sp[(-8)+-1]
  4980  013D9A  0EF7               	movlw	-9
  4981  013D9C  50E3               	movf	plusw1,w,c
  4982  013D9E  6EE6               	movwf	postinc1,c
  4983  013DA0  EC0A  F0C6         	call	_get_raw_result	;wreg free
  4984  013DA4  0060  F0C8  F03C   	movff	btemp,btemp+10
  4985  013DAA  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4986  013DB0  503C               	movf	(btemp+10)^0,w,c
  4987  013DB2  6E36               	movwf	(btemp+4)^0,c
  4988  013DB4  503D               	movf	(btemp+11)^0,w,c
  4989  013DB6  6E37               	movwf	(btemp+5)^0,c
  4990  013DB8  6A38               	clrf	(btemp+6)^0,c
  4991  013DBA  6A39               	clrf	(btemp+7)^0,c
  4992  013DBC  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4993  013DC2  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4994  013DC8  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4995  013DCE  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4996  013DD4  0E00               	movlw	0
  4997  013DD6  6EE6               	movwf	postinc1,c
  4998  013DD8  EC9D  F0AE         	call	___xxtofl	;wreg free
  4999  013DDC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5000  013DE2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5001  013DE8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5002  013DEE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5003  013DF4  ECDF  F092         	call	___flmul	;wreg free
  5004  013DF8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5005  013DFE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5006  013E04  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5007  013E0A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5008  013E10  ECD2  F09A         	call	___fldiv	;wreg free
  5009  013E14  D0D7               	goto	l1683
  5010  013E16                     l8868:
  5011                           
  5012                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5013                           ;stkvar	_chan @ sp[(0)+-1]
  5014  013E16  0EFF               	movlw	-1
  5015  013E18  006F FF8C  F03D    	movff	plusw1,btemp+11
  5016  013E1E  0E03               	movlw	3
  5017  013E20  6E3A               	movwf	(btemp+8)^0,c
  5018  013E22  0E00               	movlw	0
  5019  013E24  6E3B               	movwf	(btemp+9)^0,c
  5020  013E26  2A3D               	incf	(btemp+11)^0,f,c
  5021  013E28  D003               	goto	u8294
  5022  013E2A                     u8295:
  5023  013E2A  343B               	rlcf	(btemp+9)^0,w,c
  5024  013E2C  323B               	rrcf	(btemp+9)^0,f,c
  5025  013E2E  323A               	rrcf	(btemp+8)^0,f,c
  5026  013E30                     u8294:
  5027  013E30  2E3D               	decfsz	(btemp+11)^0,f,c
  5028  013E32  D7FB               	goto	u8295
  5029  013E34  B03A               	btfsc	(btemp+8)^0,0,c
  5030  013E36  D011               	goto	u8320
  5031                           
  5032                           ;stkvar	_chan @ sp[(0)+-1]
  5033  013E38  0EFF               	movlw	-1
  5034  013E3A  006F FF8C  F03D    	movff	plusw1,btemp+11
  5035  013E40  0E00               	movlw	0
  5036  013E42  6E3A               	movwf	(btemp+8)^0,c
  5037  013E44  0E08               	movlw	8
  5038  013E46  6E3B               	movwf	(btemp+9)^0,c
  5039  013E48  2A3D               	incf	(btemp+11)^0,f,c
  5040  013E4A  D003               	goto	u8314
  5041  013E4C                     u8315:
  5042  013E4C  343B               	rlcf	(btemp+9)^0,w,c
  5043  013E4E  323B               	rrcf	(btemp+9)^0,f,c
  5044  013E50  323A               	rrcf	(btemp+8)^0,f,c
  5045  013E52                     u8314:
  5046  013E52  2E3D               	decfsz	(btemp+11)^0,f,c
  5047  013E54  D7FB               	goto	u8315
  5048  013E56  A03A               	btfss	(btemp+8)^0,0,c
  5049  013E58  D04E               	goto	l8876
  5050  013E5A                     u8320:
  5051                           
  5052                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5053  013E5A  0E00               	movlw	0
  5054  013E5C  6EE6               	movwf	postinc1,c
  5055  013E5E  0E00               	movlw	0
  5056  013E60  6EE6               	movwf	postinc1,c
  5057  013E62  0E7A               	movlw	122
  5058  013E64  6EE6               	movwf	postinc1,c
  5059  013E66  0E44               	movlw	68
  5060  013E68  6EE6               	movwf	postinc1,c
  5061  013E6A  0E00               	movlw	0
  5062  013E6C  6EE6               	movwf	postinc1,c
  5063  013E6E  0E00               	movlw	0
  5064  013E70  6EE6               	movwf	postinc1,c
  5065  013E72  0E20               	movlw	32
  5066  013E74  6EE6               	movwf	postinc1,c
  5067  013E76  0E3F               	movlw	63
  5068  013E78  6EE6               	movwf	postinc1,c
  5069                           
  5070                           ;stkvar	_chan @ sp[(-8)+-1]
  5071  013E7A  0EF7               	movlw	-9
  5072  013E7C  50E3               	movf	plusw1,w,c
  5073  013E7E  6EE6               	movwf	postinc1,c
  5074  013E80  EC0A  F0C6         	call	_get_raw_result	;wreg free
  5075  013E84  0060  F0C8  F03C   	movff	btemp,btemp+10
  5076  013E8A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5077  013E90  503C               	movf	(btemp+10)^0,w,c
  5078  013E92  6E36               	movwf	(btemp+4)^0,c
  5079  013E94  503D               	movf	(btemp+11)^0,w,c
  5080  013E96  6E37               	movwf	(btemp+5)^0,c
  5081  013E98  6A38               	clrf	(btemp+6)^0,c
  5082  013E9A  6A39               	clrf	(btemp+7)^0,c
  5083  013E9C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5084  013EA2  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5085  013EA8  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5086  013EAE  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5087  013EB4  0E00               	movlw	0
  5088  013EB6  6EE6               	movwf	postinc1,c
  5089  013EB8  EC9D  F0AE         	call	___xxtofl	;wreg free
  5090  013EBC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5091  013EC2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5092  013EC8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5093  013ECE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5094  013ED4  ECDF  F092         	call	___flmul	;wreg free
  5095  013ED8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5096  013EDE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5097  013EE4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5098  013EEA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5099  013EF0  ECD2  F09A         	call	___fldiv	;wreg free
  5100  013EF4  D067               	goto	l1683
  5101  013EF6                     l8876:
  5102                           
  5103                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5104  013EF6  0E00               	movlw	0
  5105  013EF8  6EE6               	movwf	postinc1,c
  5106  013EFA  0E00               	movlw	0
  5107  013EFC  6EE6               	movwf	postinc1,c
  5108  013EFE  0E7A               	movlw	122
  5109  013F00  6EE6               	movwf	postinc1,c
  5110  013F02  0E44               	movlw	68
  5111  013F04  6EE6               	movwf	postinc1,c
  5112  013F06  0E61               	movlw	97
  5113  013F08  6EE6               	movwf	postinc1,c
  5114  013F0A  0E03               	movlw	3
  5115  013F0C  6EE6               	movwf	postinc1,c
  5116  013F0E  0E84               	movlw	132
  5117  013F10  6EE6               	movwf	postinc1,c
  5118  013F12  0E40               	movlw	64
  5119  013F14  6EE6               	movwf	postinc1,c
  5120                           
  5121                           ;stkvar	_chan @ sp[(-8)+-1]
  5122  013F16  0EF7               	movlw	-9
  5123  013F18  50E3               	movf	plusw1,w,c
  5124  013F1A  6EE6               	movwf	postinc1,c
  5125  013F1C  EC0A  F0C6         	call	_get_raw_result	;wreg free
  5126  013F20  0060  F0C8  F03C   	movff	btemp,btemp+10
  5127  013F26  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5128  013F2C  503C               	movf	(btemp+10)^0,w,c
  5129  013F2E  6E36               	movwf	(btemp+4)^0,c
  5130  013F30  503D               	movf	(btemp+11)^0,w,c
  5131  013F32  6E37               	movwf	(btemp+5)^0,c
  5132  013F34  6A38               	clrf	(btemp+6)^0,c
  5133  013F36  6A39               	clrf	(btemp+7)^0,c
  5134  013F38  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5135  013F3E  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5136  013F44  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5137  013F4A  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5138  013F50  0E00               	movlw	0
  5139  013F52  6EE6               	movwf	postinc1,c
  5140  013F54  EC9D  F0AE         	call	___xxtofl	;wreg free
  5141  013F58  0060  F0CB  FFE6   	movff	btemp,postinc1
  5142  013F5E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5143  013F64  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5144  013F6A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5145  013F70  ECDF  F092         	call	___flmul	;wreg free
  5146  013F74  0060  F0CB  FFE6   	movff	btemp,postinc1
  5147  013F7A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5148  013F80  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5149  013F86  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5150  013F8C  ECD2  F09A         	call	___fldiv	;wreg free
  5151  013F90  D019               	goto	l1683
  5152  013F92                     l8882:
  5153                           
  5154                           ;daq.c: 109:   return 0.0;
  5155  013F92  0E00               	movlw	0
  5156  013F94  6E32               	movwf	btemp^0,c
  5157  013F96  0E00               	movlw	0
  5158  013F98  6E33               	movwf	(btemp+1)^0,c
  5159  013F9A  0E00               	movlw	0
  5160  013F9C  6E34               	movwf	(btemp+2)^0,c
  5161  013F9E  0E00               	movlw	0
  5162  013FA0                     L4:
  5163  013FA0  6E35               	movwf	(btemp+3)^0,c
  5164  013FA2  D010               	goto	l1683
  5165  013FA4                     l8890:
  5166                           
  5167                           ;stkvar	_to_what @ sp[(0)+-2]
  5168  013FA4  0EFE               	movlw	-2
  5169  013FA6  50E3               	movf	plusw1,w,c
  5170  013FA8  6E3C               	movwf	(btemp+10)^0,c
  5171  013FAA  6A3D               	clrf	(btemp+11)^0,c
  5172                           
  5173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5174                           ; Switch size 1, requested type "simple"
  5175                           ; Number of cases is 1, Range of values is 0 to 0
  5176                           ; switch strategies available:
  5177                           ; Name         Instructions Cycles
  5178                           ; simple_byte            4     3 (average)
  5179                           ;	Chosen strategy is simple_byte
  5180  013FAC  503D               	movf	(btemp+11)^0,w,c
  5181  013FAE  0A00               	xorlw	0	; case 0
  5182  013FB0  A4D8               	btfss	status,2,c
  5183  013FB2  D7EF               	goto	l8882
  5184                           
  5185                           ; Switch size 1, requested type "simple"
  5186                           ; Number of cases is 2, Range of values is 0 to 1
  5187                           ; switch strategies available:
  5188                           ; Name         Instructions Cycles
  5189                           ; simple_byte            7     4 (average)
  5190                           ;	Chosen strategy is simple_byte
  5191  013FB4  503C               	movf	(btemp+10)^0,w,c
  5192  013FB6  0A00               	xorlw	0	; case 0
  5193  013FB8  B4D8               	btfsc	status,2,c
  5194  013FBA  D5B2               	goto	l8836
  5195  013FBC  0A01               	xorlw	1	; case 1
  5196  013FBE  B4D8               	btfsc	status,2,c
  5197  013FC0  D72A               	goto	l8868
  5198  013FC2  D7E7               	goto	l8882
  5199  013FC4                     l1683:
  5200                           
  5201                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5202  013FC4  52E5               	movf	postdec1,f,c
  5203  013FC6  52E5               	movf	postdec1,f,c
  5204  013FC8  0012               	return		;funcret
  5205  013FCA                     __end_of_conv_raw_result:
  5206                           	opt callstack 0
  5207                           
  5208 ;; *************** function _nanf *****************
  5209 ;; Defined at:
  5210 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  s               2  [STACK] PTR const unsigned char 
  5213 ;;		 -> STR_45(1), 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  u               4  [STACK] struct .
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  4  [STACK] float 
  5218 ;; Registers used:
  5219 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/2
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5229 ;;Total ram usage:        0 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    6
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_conv_raw_result
  5236 ;; This function uses a reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text17
  5240  017FA6                     __ptext17:
  5241                           	opt callstack 0
  5242  017FA6                     _nanf:
  5243                           	opt callstack 0
  5244                           
  5245                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5246  017FA6  52E6               	movf	postinc1,f,c
  5247  017FA8  52E6               	movf	postinc1,f,c
  5248  017FAA  52E6               	movf	postinc1,f,c
  5249  017FAC  52E6               	movf	postinc1,f,c
  5250                           
  5251                           ;incstack = 0
  5252  017FAE  0EFF               	movlw	255
  5253  017FB0  6E3A               	movwf	(btemp+8)^0,c
  5254  017FB2  0EFF               	movlw	255
  5255  017FB4  6E3B               	movwf	(btemp+9)^0,c
  5256  017FB6  0EFF               	movlw	255
  5257  017FB8  6E3C               	movwf	(btemp+10)^0,c
  5258  017FBA  0E7F               	movlw	127
  5259  017FBC  6E3D               	movwf	(btemp+11)^0,c
  5260                           
  5261                           ;stkvar	_u @ sp[(-4)+0]
  5262  017FBE  0EFC               	movlw	-4
  5263  017FC0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5264  017FC6  0EFD               	movlw	-3
  5265  017FC8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5266  017FCE  0EFE               	movlw	-2
  5267  017FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5268  017FD6  0EFF               	movlw	-1
  5269  017FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5270                           
  5271                           ;stkvar	_u @ sp[(-4)+0]
  5272  017FDE  0EFC               	movlw	-4
  5273  017FE0  006F FF8C  F032    	movff	plusw1,btemp
  5274  017FE6  0EFD               	movlw	-3
  5275  017FE8  006F FF8C  F033    	movff	plusw1,btemp+1
  5276  017FEE  0EFE               	movlw	-2
  5277  017FF0  006F FF8C  F034    	movff	plusw1,btemp+2
  5278  017FF6  0EFF               	movlw	-1
  5279  017FF8  006F FF8C  F035    	movff	plusw1,btemp+3
  5280                           
  5281                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5282  017FFE  0EFA               	movlw	250
  5283  018000  26E1               	addwf	fsr1l,f,c
  5284  018002  0EFF               	movlw	255
  5285  018004  22E2               	addwfc	fsr1h,f,c
  5286  018006  0012               	return		;funcret
  5287  018008                     __end_of_nanf:
  5288                           	opt callstack 0
  5289                           
  5290 ;; *************** function _get_raw_result *****************
  5291 ;; Defined at:
  5292 ;;		line 72 in file "daq.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  index           1  [STACK] const enum E16136
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  2  [STACK] unsigned short 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/2
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    6
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_main
  5317 ;;		_conv_raw_result
  5318 ;; This function uses a reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text18
  5322  018C14                     __ptext18:
  5323                           	opt callstack 0
  5324  018C14                     _get_raw_result:
  5325                           	opt callstack 24
  5326                           
  5327                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5328                           ;stkvar	_index @ sp[(0)+-1]
  5329                           
  5330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5331                           ;incstack = 0
  5332  018C14  0EFF               	movlw	-1
  5333  018C16  50E3               	movf	plusw1,w,c
  5334  018C18  0D02               	mullw	2
  5335  018C1A  50F3               	movf	243,w,c
  5336  018C1C  0FC7               	addlw	low _R
  5337  018C1E  6ED9               	movwf	fsr2l,c
  5338  018C20  6ADA               	clrf	fsr2h,c
  5339  018C22  006F FF78  F032    	movff	postinc2,btemp
  5340  018C28  006F FF74  F033    	movff	postdec2,btemp+1
  5341                           
  5342                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5343  018C2E  52E5               	movf	postdec1,f,c
  5344  018C30  0012               	return		;funcret
  5345  018C32                     __end_of_get_raw_result:
  5346                           	opt callstack 0
  5347                           
  5348 ;; *************** function ___xxtofl *****************
  5349 ;; Defined at:
  5350 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  sign            1  [STACK] unsigned char 
  5353 ;;  val             4  [STACK] long 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  arg             4  [STACK] unsigned long 
  5356 ;;  exp             1  [STACK] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  4  [STACK] unsigned char 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/2
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    6
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_conv_raw_result
  5377 ;; This function uses a reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text19
  5381  015D3A                     __ptext19:
  5382                           	opt callstack 0
  5383  015D3A                     ___xxtofl:
  5384                           	opt callstack 0
  5385                           
  5386                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5387  015D3A  0E05               	movlw	5
  5388  015D3C  26E1               	addwf	fsr1l,f,c
  5389  015D3E  0E00               	movlw	0
  5390  015D40  22E2               	addwfc	fsr1h,f,c
  5391                           
  5392                           ;stkvar	_sign @ sp[(-5)+-1]
  5393                           
  5394                           ;incstack = 0
  5395  015D42  0EFA               	movlw	-6
  5396  015D44  50E3               	movf	plusw1,w,c
  5397  015D46  B4D8               	btfsc	status,2,c
  5398  015D48  D01D               	goto	l8290
  5399                           
  5400                           ;stkvar	_val @ sp[(-5)+-5]
  5401  015D4A  0EF9               	movlw	-7
  5402  015D4C  AEE3               	btfss	plusw1,7,c
  5403  015D4E  D01A               	goto	l8290
  5404                           
  5405                           ;stkvar	_val @ sp[(-5)+-5]
  5406  015D50  0EF6               	movlw	-10
  5407  015D52  006F FF8C  F03A    	movff	plusw1,btemp+8
  5408  015D58  0EF7               	movlw	-9
  5409  015D5A  006F FF8C  F03B    	movff	plusw1,btemp+9
  5410  015D60  0EF8               	movlw	-8
  5411  015D62  006F FF8C  F03C    	movff	plusw1,btemp+10
  5412  015D68  0EF9               	movlw	-7
  5413  015D6A  006F FF8C  F03D    	movff	plusw1,btemp+11
  5414  015D70  1E3A               	comf	(btemp+8)^0,f,c
  5415  015D72  1E3B               	comf	(btemp+9)^0,f,c
  5416  015D74  1E3C               	comf	(btemp+10)^0,f,c
  5417  015D76  1E3D               	comf	(btemp+11)^0,f,c
  5418  015D78  2A3A               	incf	(btemp+8)^0,f,c
  5419  015D7A  0E00               	movlw	0
  5420  015D7C  223B               	addwfc	(btemp+9)^0,f,c
  5421  015D7E  223C               	addwfc	(btemp+10)^0,f,c
  5422  015D80  223D               	addwfc	(btemp+11)^0,f,c
  5423  015D82  D010               	goto	L5
  5424  015D84                     l8290:
  5425                           
  5426                           ;stkvar	_val @ sp[(-5)+-5]
  5427  015D84  0EF6               	movlw	-10
  5428  015D86  006F FF8C  F03A    	movff	plusw1,btemp+8
  5429  015D8C  0EF7               	movlw	-9
  5430  015D8E  006F FF8C  F03B    	movff	plusw1,btemp+9
  5431  015D94  0EF8               	movlw	-8
  5432  015D96  006F FF8C  F03C    	movff	plusw1,btemp+10
  5433  015D9C  0EF9               	movlw	-7
  5434  015D9E  006F FF8C  F03D    	movff	plusw1,btemp+11
  5435  015DA4                     L5:
  5436                           
  5437                           ;stkvar	_arg @ sp[(-5)+0]
  5438  015DA4  0EFB               	movlw	-5
  5439  015DA6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5440  015DAC  0EFC               	movlw	-4
  5441  015DAE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5442  015DB4  0EFD               	movlw	-3
  5443  015DB6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5444  015DBC  0EFE               	movlw	-2
  5445  015DBE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5446                           
  5447                           ;stkvar	_val @ sp[(-5)+-5]
  5448  015DC4  0EF6               	movlw	-10
  5449  015DC6  50E3               	movf	plusw1,w,c
  5450  015DC8  E113               	bnz	l8298
  5451  015DCA  0EF7               	movlw	-9
  5452  015DCC  50E3               	movf	plusw1,w,c
  5453  015DCE  E110               	bnz	l8298
  5454  015DD0  0EF8               	movlw	-8
  5455  015DD2  50E3               	movf	plusw1,w,c
  5456  015DD4  E10D               	bnz	l8298
  5457  015DD6  0EF9               	movlw	-7
  5458  015DD8  50E3               	movf	plusw1,w,c
  5459  015DDA  A4D8               	btfss	status,2,c
  5460  015DDC  D009               	goto	l8298
  5461  015DDE  0E00               	movlw	0
  5462  015DE0  6E32               	movwf	btemp^0,c
  5463  015DE2  0E00               	movlw	0
  5464  015DE4  6E33               	movwf	(btemp+1)^0,c
  5465  015DE6  0E00               	movlw	0
  5466  015DE8  6E34               	movwf	(btemp+2)^0,c
  5467  015DEA  0E00               	movlw	0
  5468  015DEC  6E35               	movwf	(btemp+3)^0,c
  5469  015DEE  D0A2               	goto	l2757
  5470  015DF0                     l8298:
  5471  015DF0  0E96               	movlw	150
  5472  015DF2  6E3D               	movwf	(btemp+11)^0,c
  5473                           
  5474                           ;stkvar	_exp @ sp[(-5)+4]
  5475  015DF4  0EFF               	movlw	-1
  5476  015DF6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5477  015DFC  D00B               	goto	l8302
  5478  015DFE                     l8300:
  5479                           
  5480                           ;stkvar	_exp @ sp[(-5)+4]
  5481  015DFE  0EFF               	movlw	-1
  5482  015E00  2AE3               	incf	plusw1,f,c
  5483                           
  5484                           ;stkvar	_arg @ sp[(-5)+0]
  5485  015E02  90D8               	bcf	status,0,c
  5486  015E04  0EFE               	movlw	-2
  5487  015E06  32E3               	rrcf	plusw1,f,c
  5488  015E08  0EFD               	movlw	-3
  5489  015E0A  32E3               	rrcf	plusw1,f,c
  5490  015E0C  0EFC               	movlw	-4
  5491  015E0E  32E3               	rrcf	plusw1,f,c
  5492  015E10  0EFB               	movlw	-5
  5493  015E12  32E3               	rrcf	plusw1,f,c
  5494  015E14                     l8302:
  5495                           
  5496                           ;stkvar	_arg @ sp[(-5)+0]
  5497  015E14  50E1               	movf	fsr1l,w,c
  5498  015E16  0FFB               	addlw	-5
  5499  015E18  6ED9               	movwf	fsr2l,c
  5500  015E1A  50E2               	movf	fsr1h,w,c
  5501  015E1C  6EDA               	movwf	fsr2h,c
  5502  015E1E  0EFF               	movlw	255
  5503  015E20  22DA               	addwfc	fsr2h,f,c
  5504  015E22  52DE               	movf	postinc2,f,c
  5505  015E24  52DE               	movf	postinc2,f,c
  5506  015E26  52DE               	movf	postinc2,f,c
  5507  015E28  0EFE               	movlw	254
  5508  015E2A  14DD               	andwf	postdec2,w,c
  5509  015E2C  B4D8               	btfsc	status,2,c
  5510  015E2E  D018               	goto	l8310
  5511  015E30  D7E6               	goto	l8300
  5512  015E32                     l8304:
  5513                           
  5514                           ;stkvar	_exp @ sp[(-5)+4]
  5515  015E32  0EFF               	movlw	-1
  5516  015E34  2AE3               	incf	plusw1,f,c
  5517                           
  5518                           ;stkvar	_arg @ sp[(-5)+0]
  5519  015E36  50E1               	movf	fsr1l,w,c
  5520  015E38  0FFB               	addlw	-5
  5521  015E3A  6ED9               	movwf	fsr2l,c
  5522  015E3C  50E2               	movf	fsr1h,w,c
  5523  015E3E  6EDA               	movwf	fsr2h,c
  5524  015E40  0EFF               	movlw	255
  5525  015E42  22DA               	addwfc	fsr2h,f,c
  5526  015E44  2ADE               	incf	postinc2,f,c
  5527  015E46  0E00               	movlw	0
  5528  015E48  22DE               	addwfc	postinc2,f,c
  5529  015E4A  22DE               	addwfc	postinc2,f,c
  5530  015E4C  22DE               	addwfc	postinc2,f,c
  5531                           
  5532                           ;stkvar	_arg @ sp[(-5)+0]
  5533  015E4E  90D8               	bcf	status,0,c
  5534  015E50  0EFE               	movlw	-2
  5535  015E52  32E3               	rrcf	plusw1,f,c
  5536  015E54  0EFD               	movlw	-3
  5537  015E56  32E3               	rrcf	plusw1,f,c
  5538  015E58  0EFC               	movlw	-4
  5539  015E5A  32E3               	rrcf	plusw1,f,c
  5540  015E5C  0EFB               	movlw	-5
  5541  015E5E  32E3               	rrcf	plusw1,f,c
  5542  015E60                     l8310:
  5543                           
  5544                           ;stkvar	_arg @ sp[(-5)+0]
  5545  015E60  50E1               	movf	fsr1l,w,c
  5546  015E62  0FFB               	addlw	-5
  5547  015E64  6ED9               	movwf	fsr2l,c
  5548  015E66  50E2               	movf	fsr1h,w,c
  5549  015E68  6EDA               	movwf	fsr2h,c
  5550  015E6A  0EFF               	movlw	255
  5551  015E6C  22DA               	addwfc	fsr2h,f,c
  5552  015E6E  52DE               	movf	postinc2,f,c
  5553  015E70  52DE               	movf	postinc2,f,c
  5554  015E72  52DE               	movf	postinc2,f,c
  5555  015E74  0EFF               	movlw	255
  5556  015E76  14DD               	andwf	postdec2,w,c
  5557  015E78  B4D8               	btfsc	status,2,c
  5558  015E7A  D00C               	goto	l8314
  5559  015E7C  D7DA               	goto	l8304
  5560  015E7E                     l8312:
  5561                           
  5562                           ;stkvar	_exp @ sp[(-5)+4]
  5563  015E7E  0EFF               	movlw	-1
  5564  015E80  06E3               	decf	plusw1,f,c
  5565                           
  5566                           ;stkvar	_arg @ sp[(-5)+0]
  5567  015E82  90D8               	bcf	status,0,c
  5568  015E84  0EFB               	movlw	-5
  5569  015E86  36E3               	rlcf	plusw1,f,c
  5570  015E88  0EFC               	movlw	-4
  5571  015E8A  36E3               	rlcf	plusw1,f,c
  5572  015E8C  0EFD               	movlw	-3
  5573  015E8E  36E3               	rlcf	plusw1,f,c
  5574  015E90  0EFE               	movlw	-2
  5575  015E92  36E3               	rlcf	plusw1,f,c
  5576  015E94                     l8314:
  5577                           
  5578                           ;stkvar	_arg @ sp[(-5)+0]
  5579  015E94  0EFD               	movlw	-3
  5580  015E96  BEE3               	btfsc	plusw1,7,c
  5581  015E98  D007               	goto	u8010
  5582                           
  5583                           ;stkvar	_exp @ sp[(-5)+4]
  5584  015E9A  0EFF               	movlw	-1
  5585  015E9C  006F FF8C  F032    	movff	plusw1,btemp
  5586  015EA2  0E02               	movlw	2
  5587  015EA4  6032               	cpfslt	btemp^0,c
  5588  015EA6  D7EB               	goto	l8312
  5589  015EA8                     u8010:
  5590                           
  5591                           ;stkvar	_exp @ sp[(-5)+4]
  5592  015EA8  0EFF               	movlw	-1
  5593  015EAA  B0E3               	btfsc	plusw1,0,c
  5594  015EAC  D002               	goto	l8322
  5595                           
  5596                           ;stkvar	_arg @ sp[(-5)+0]
  5597  015EAE  0EFD               	movlw	-3
  5598  015EB0  9EE3               	bcf	plusw1,7,c
  5599  015EB2                     l8322:
  5600                           
  5601                           ;stkvar	_exp @ sp[(-5)+4]
  5602  015EB2  50E1               	movf	fsr1l,w,c
  5603  015EB4  0FFF               	addlw	-1
  5604  015EB6  6ED9               	movwf	fsr2l,c
  5605  015EB8  50E2               	movf	fsr1h,w,c
  5606  015EBA  6EDA               	movwf	fsr2h,c
  5607  015EBC  0EFF               	movlw	255
  5608  015EBE  22DA               	addwfc	fsr2h,f,c
  5609  015EC0  90D8               	bcf	status,0,c
  5610  015EC2  32DF               	rrcf	indf2,f,c
  5611                           
  5612                           ;stkvar	_exp @ sp[(-5)+4]
  5613  015EC4  0EFF               	movlw	-1
  5614  015EC6  006F FF8C  F03D    	movff	plusw1,btemp+11
  5615  015ECC  0060  F0F4  F036   	movff	btemp+11,btemp+4
  5616  015ED2  6A37               	clrf	(btemp+5)^0,c
  5617  015ED4  6A38               	clrf	(btemp+6)^0,c
  5618  015ED6  6A39               	clrf	(btemp+7)^0,c
  5619  015ED8  0060  F0D8  F039   	movff	btemp+4,btemp+7
  5620  015EDE  6A38               	clrf	(btemp+6)^0,c
  5621  015EE0  6A37               	clrf	(btemp+5)^0,c
  5622  015EE2  6A36               	clrf	(btemp+4)^0,c
  5623                           
  5624                           ;stkvar	_arg @ sp[(-5)+0]
  5625  015EE4  50E1               	movf	fsr1l,w,c
  5626  015EE6  0FFB               	addlw	-5
  5627  015EE8  6ED9               	movwf	fsr2l,c
  5628  015EEA  50E2               	movf	fsr1h,w,c
  5629  015EEC  6EDA               	movwf	fsr2h,c
  5630  015EEE  0EFF               	movlw	255
  5631  015EF0  22DA               	addwfc	fsr2h,f,c
  5632  015EF2  5036               	movf	(btemp+4)^0,w,c
  5633  015EF4  12DE               	iorwf	postinc2,f,c
  5634  015EF6  5037               	movf	(btemp+5)^0,w,c
  5635  015EF8  12DE               	iorwf	postinc2,f,c
  5636  015EFA  5038               	movf	(btemp+6)^0,w,c
  5637  015EFC  12DE               	iorwf	postinc2,f,c
  5638  015EFE  5039               	movf	(btemp+7)^0,w,c
  5639  015F00  12DE               	iorwf	postinc2,f,c
  5640                           
  5641                           ;stkvar	_sign @ sp[(-5)+-1]
  5642  015F02  0EFA               	movlw	-6
  5643  015F04  50E3               	movf	plusw1,w,c
  5644  015F06  B4D8               	btfsc	status,2,c
  5645  015F08  D005               	goto	l8332
  5646                           
  5647                           ;stkvar	_val @ sp[(-5)+-5]
  5648  015F0A  0EF9               	movlw	-7
  5649  015F0C  AEE3               	btfss	plusw1,7,c
  5650  015F0E  D002               	goto	l8332
  5651                           
  5652                           ;stkvar	_arg @ sp[(-5)+0]
  5653  015F10  0EFE               	movlw	-2
  5654  015F12  8EE3               	bsf	plusw1,7,c
  5655  015F14                     l8332:
  5656                           
  5657                           ;stkvar	_arg @ sp[(-5)+0]
  5658  015F14  0EFB               	movlw	-5
  5659  015F16  006F FF8C  F032    	movff	plusw1,btemp
  5660  015F1C  0EFC               	movlw	-4
  5661  015F1E  006F FF8C  F033    	movff	plusw1,btemp+1
  5662  015F24  0EFD               	movlw	-3
  5663  015F26  006F FF8C  F034    	movff	plusw1,btemp+2
  5664  015F2C  0EFE               	movlw	-2
  5665  015F2E  006F FF8C  F035    	movff	plusw1,btemp+3
  5666  015F34                     l2757:
  5667                           
  5668                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5669  015F34  0EF6               	movlw	246
  5670  015F36  26E1               	addwf	fsr1l,f,c
  5671  015F38  0EFF               	movlw	255
  5672  015F3A  22E2               	addwfc	fsr1h,f,c
  5673  015F3C  0012               	return		;funcret
  5674  015F3E                     __end_of___xxtofl:
  5675                           	opt callstack 0
  5676                           
  5677 ;; *************** function _clear_hid_pflags *****************
  5678 ;; Defined at:
  5679 ;;		line 42 in file "hid.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  h               1  [STACK] PTR struct H_data
  5682 ;;		 -> H(7), 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1  [STACK] void 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/2
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    6
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_main
  5705 ;; This function uses a reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text20
  5709  018B02                     __ptext20:
  5710                           	opt callstack 0
  5711  018B02                     _clear_hid_pflags:
  5712                           	opt callstack 24
  5713                           
  5714                           ;hid.c: 42: void clear_hid_pflags(H_data* h);hid.c: 43: {;hid.c: 44:  h->select_p = SW_O
      +                          FF;
  5715                           ;stkvar	_h @ sp[(0)+-1]
  5716                           
  5717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5718                           ;incstack = 0
  5719  018B02  0EFF               	movlw	-1
  5720  018B04  50E3               	movf	plusw1,w,c
  5721  018B06  6ED9               	movwf	fsr2l,c
  5722  018B08  6ADA               	clrf	fsr2h,c
  5723  018B0A  0E03               	movlw	3
  5724  018B0C  26D9               	addwf	fsr2l,f,c
  5725  018B0E  0E00               	movlw	0
  5726  018B10  6EDF               	movwf	indf2,c
  5727                           
  5728                           ;hid.c: 45:  h->enter_p = SW_OFF;
  5729                           ;stkvar	_h @ sp[(0)+-1]
  5730  018B12  0EFF               	movlw	-1
  5731  018B14  50E3               	movf	plusw1,w,c
  5732  018B16  6ED9               	movwf	fsr2l,c
  5733  018B18  6ADA               	clrf	fsr2h,c
  5734  018B1A  0E05               	movlw	5
  5735  018B1C  26D9               	addwf	fsr2l,f,c
  5736  018B1E  0E00               	movlw	0
  5737  018B20  6EDF               	movwf	indf2,c
  5738                           
  5739                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5740  018B22  52E5               	movf	postdec1,f,c
  5741  018B24  0012               	return		;funcret
  5742  018B26                     __end_of_clear_hid_pflags:
  5743                           	opt callstack 0
  5744                           
  5745 ;; *************** function _clear_adc_scan *****************
  5746 ;; Defined at:
  5747 ;;		line 64 in file "daq.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1  [STACK] void 
  5754 ;; Registers used:
  5755 ;;		None
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/39
  5758 ;;		On exit  : 3F/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5765 ;;Total ram usage:        0 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    6
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_main
  5772 ;; This function uses a reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text21
  5776  018E4A                     __ptext21:
  5777                           	opt callstack 0
  5778  018E4A                     _clear_adc_scan:
  5779                           	opt callstack 24
  5780                           
  5781                           ;daq.c: 66:  R.done = 0;
  5782                           
  5783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5784                           ;incstack = 0
  5785  018E4A  0100               	movlb	0	; () banked
  5786  018E4C  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5787                           
  5788                           ; BSR set to: 0
  5789                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5790  018E4E  0012               	return		;funcret
  5791  018E50                     __end_of_clear_adc_scan:
  5792                           	opt callstack 0
  5793                           
  5794 ;; *************** function _check_help *****************
  5795 ;; Defined at:
  5796 ;;		line 40 in file "mconfig.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  flipper         1  [STACK] const _Bool 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  estatus         1  [STACK] _Bool 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1  [STACK] _Bool 
  5803 ;; Registers used:
  5804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5805 ;; Tracked objects:
  5806 ;;		On entry : 3F/2
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:   18
  5817 ;; This function calls:
  5818 ;;		_StartTimer
  5819 ;;		_TimerDone
  5820 ;;		_display_help
  5821 ;;		_display_info
  5822 ;;		_get_vterm_ptr
  5823 ;;		_help_button
  5824 ;;		_mode_lamp_bright
  5825 ;;		_mode_lamp_dim
  5826 ;;		_set_display_info
  5827 ;;		_set_temp_display_help
  5828 ;;		_set_vterm
  5829 ;;		_sprintf
  5830 ;;		_update_lcd
  5831 ;;		_vterm_dump
  5832 ;; This function is called by:
  5833 ;;		_main
  5834 ;; This function uses a reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text22
  5838  015B12                     __ptext22:
  5839                           	opt callstack 0
  5840  015B12                     _check_help:
  5841                           	opt callstack 0
  5842                           
  5843                           ; BSR set to: 0
  5844                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5845  015B12  52E6               	movf	postinc1,f,c
  5846                           
  5847                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5848                           ;stkvar	_estatus @ sp[(-1)+0]
  5849                           
  5850                           ;incstack = 0
  5851  015B14  0EFF               	movlw	-1
  5852  015B16  6AE3               	clrf	plusw1,c
  5853                           
  5854                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5855  015B18  ECB1  F0C2         	call	_help_button	;wreg free
  5856  015B1C  5032               	movf	btemp^0,w,c
  5857  015B1E  B4D8               	btfsc	status,2,c
  5858  015B20  D0D3               	goto	l10702
  5859  015B22  EC15  F0C7         	call	_display_info	;wreg free
  5860  015B26  0432               	decf	btemp^0,w,c
  5861  015B28  B4D8               	btfsc	status,2,c
  5862  015B2A  D0CE               	goto	l10702
  5863                           
  5864                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5865  015B2C  0EDC               	movlw	220
  5866  015B2E  6EE6               	movwf	postinc1,c
  5867  015B30  0E05               	movlw	5
  5868  015B32  6EE6               	movwf	postinc1,c
  5869  015B34  0E0B               	movlw	11
  5870  015B36  6EE6               	movwf	postinc1,c
  5871  015B38  EC93  F0C2         	call	_StartTimer	;wreg free
  5872                           
  5873                           ;mconfig.c: 48:   if (V.debug)
  5874  015B3C  0102               	movlb	2	; () banked
  5875  015B3E  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5876                           
  5877                           ; BSR set to: 2
  5878                           ;mconfig.c: 49:    vterm_dump();
  5879  015B40  ECE3  F0B4         	call	_vterm_dump	;wreg free
  5880                           
  5881                           ;mconfig.c: 51:   set_vterm(1);
  5882  015B44  0E01               	movlw	1
  5883  015B46  6EE6               	movwf	postinc1,c
  5884  015B48  EC54  F0C6         	call	_set_vterm	;wreg free
  5885                           
  5886                           ; BSR set to: 5
  5887                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5888  015B4C  EC15  F0C7         	call	_display_info	;wreg free
  5889  015B50  5032               	movf	btemp^0,w,c
  5890  015B52  6EE6               	movwf	postinc1,c
  5891  015B54  ECD5  F0C6         	call	_set_temp_display_help	;wreg free
  5892                           
  5893                           ; BSR set to: 2
  5894                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5895  015B58  0E01               	movlw	1
  5896  015B5A  6EE6               	movwf	postinc1,c
  5897  015B5C  EC19  F0C6         	call	_set_display_info	;wreg free
  5898                           
  5899                           ;mconfig.c: 54:   if (flipper) {
  5900                           ;stkvar	_flipper @ sp[(-1)+-1]
  5901  015B60  0EFE               	movlw	-2
  5902  015B62  50E3               	movf	plusw1,w,c
  5903  015B64  B4D8               	btfsc	status,2,c
  5904  015B66  D019               	goto	l10688
  5905                           
  5906                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5907  015B68  0EC1               	movlw	low STR_27
  5908  015B6A  6EE6               	movwf	postinc1,c
  5909  015B6C  0EFF               	movlw	high STR_27
  5910  015B6E  6EE6               	movwf	postinc1,c
  5911  015B70  0E80               	movlw	low STR_29
  5912  015B72  6EE6               	movwf	postinc1,c
  5913  015B74  0EFE               	movlw	high STR_29
  5914  015B76  6EE6               	movwf	postinc1,c
  5915  015B78  0E01               	movlw	1
  5916  015B7A  6EE6               	movwf	postinc1,c
  5917  015B7C  0E00               	movlw	0
  5918  015B7E  6EE6               	movwf	postinc1,c
  5919  015B80  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  5920  015B84  0060  F0CB  FFE6   	movff	btemp,postinc1
  5921  015B8A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5922  015B90  0E06               	movlw	6
  5923  015B92  6EE6               	movwf	postinc1,c
  5924  015B94  ECA9  F0B7         	call	_sprintf	;wreg free
  5925                           
  5926                           ;mconfig.c: 56:   } else {
  5927  015B98  D018               	goto	l1587
  5928  015B9A                     l10688:
  5929                           
  5930                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5931  015B9A  0ED7               	movlw	low STR_28
  5932  015B9C  6EE6               	movwf	postinc1,c
  5933  015B9E  0EFF               	movlw	high STR_28
  5934  015BA0  6EE6               	movwf	postinc1,c
  5935  015BA2  0E80               	movlw	low STR_29
  5936  015BA4  6EE6               	movwf	postinc1,c
  5937  015BA6  0EFE               	movlw	high STR_29
  5938  015BA8  6EE6               	movwf	postinc1,c
  5939  015BAA  0E01               	movlw	1
  5940  015BAC  6EE6               	movwf	postinc1,c
  5941  015BAE  0E00               	movlw	0
  5942  015BB0  6EE6               	movwf	postinc1,c
  5943  015BB2  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  5944  015BB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5945  015BBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5946  015BC2  0E06               	movlw	6
  5947  015BC4  6EE6               	movwf	postinc1,c
  5948  015BC6  ECA9  F0B7         	call	_sprintf	;wreg free
  5949  015BCA                     l1587:
  5950                           
  5951                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5952  015BCA  0102               	movlb	2	; () banked
  5953  015BCC  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5954  015BCE  32E8               	rrcf	wreg,f,c
  5955  015BD0  32E8               	rrcf	wreg,f,c
  5956  015BD2  0B03               	andlw	3
  5957  015BD4  0D24               	mullw	36
  5958  015BD6  0E12               	movlw	18
  5959  015BD8  26F3               	addwf	243,f,c
  5960  015BDA  0E00               	movlw	0
  5961  015BDC  22F4               	addwfc	244,f,c
  5962  015BDE  0EC5               	movlw	low _T
  5963  015BE0  6E3C               	movwf	(btemp+10)^0,c
  5964  015BE2  0EFD               	movlw	high _T
  5965  015BE4  6E3D               	movwf	(btemp+11)^0,c
  5966  015BE6  50F3               	movf	243,w,c
  5967  015BE8  263C               	addwf	(btemp+10)^0,f,c
  5968  015BEA  50F4               	movf	244,w,c
  5969  015BEC  223D               	addwfc	(btemp+11)^0,f,c
  5970  015BEE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5971  015BF4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5972  015BFA  0ECD               	movlw	low STR_31
  5973  015BFC  6EE6               	movwf	postinc1,c
  5974  015BFE  0EFF               	movlw	high STR_31
  5975  015C00  6EE6               	movwf	postinc1,c
  5976  015C02  0E01               	movlw	1
  5977  015C04  6EE6               	movwf	postinc1,c
  5978  015C06  0E01               	movlw	1
  5979  015C08  6EE6               	movwf	postinc1,c
  5980  015C0A  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  5981  015C0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5982  015C14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5983  015C1A  0E06               	movlw	6
  5984  015C1C  6EE6               	movwf	postinc1,c
  5985  015C1E  ECA9  F0B7         	call	_sprintf	;wreg free
  5986                           
  5987                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5988  015C22  0102               	movlb	2	; () banked
  5989  015C24  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5990  015C26  32E8               	rrcf	wreg,f,c
  5991  015C28  32E8               	rrcf	wreg,f,c
  5992  015C2A  0B03               	andlw	3
  5993  015C2C  0D24               	mullw	36
  5994  015C2E  0EC5               	movlw	low _T
  5995  015C30  6E3C               	movwf	(btemp+10)^0,c
  5996  015C32  0EFD               	movlw	high _T
  5997  015C34  6E3D               	movwf	(btemp+11)^0,c
  5998  015C36  50F3               	movf	243,w,c
  5999  015C38  263C               	addwf	(btemp+10)^0,f,c
  6000  015C3A  50F4               	movf	244,w,c
  6001  015C3C  223D               	addwfc	(btemp+11)^0,f,c
  6002  015C3E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6003  015C44  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6004  015C4A  0ECD               	movlw	low STR_31
  6005  015C4C  6EE6               	movwf	postinc1,c
  6006  015C4E  0EFF               	movlw	high STR_31
  6007  015C50  6EE6               	movwf	postinc1,c
  6008  015C52  0E01               	movlw	1
  6009  015C54  6EE6               	movwf	postinc1,c
  6010  015C56  0E02               	movlw	2
  6011  015C58  6EE6               	movwf	postinc1,c
  6012  015C5A  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  6013  015C5E  0060  F0CB  FFE6   	movff	btemp,postinc1
  6014  015C64  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6015  015C6A  0E06               	movlw	6
  6016  015C6C  6EE6               	movwf	postinc1,c
  6017  015C6E  ECA9  F0B7         	call	_sprintf	;wreg free
  6018                           
  6019                           ;mconfig.c: 61:   V.help_id++;
  6020  015C72  EE20  F29B         	lfsr	2,_V+155	;volatile
  6021  015C76  38DF               	swapf	223,w,c
  6022  015C78  6E3D               	movwf	(btemp+11)^0,c
  6023  015C7A  323D               	rrcf	(btemp+11)^0,f,c
  6024  015C7C  303D               	rrcf	(btemp+11)^0,w,c
  6025  015C7E  0B03               	andlw	3
  6026  015C80  6E3D               	movwf	(btemp+11)^0,c
  6027  015C82  2A3D               	incf	(btemp+11)^0,f,c
  6028  015C84  3A3D               	swapf	(btemp+11)^0,f,c
  6029  015C86  363D               	rlcf	(btemp+11)^0,f,c
  6030  015C88  363D               	rlcf	(btemp+11)^0,f,c
  6031  015C8A  50DF               	movf	223,w,c
  6032  015C8C  183D               	xorwf	(btemp+11)^0,w,c
  6033  015C8E  0B3F               	andlw	-193
  6034  015C90  183D               	xorwf	(btemp+11)^0,w,c
  6035  015C92  6EDF               	movwf	223,c
  6036                           
  6037                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6038  015C94  0EB8               	movlw	184
  6039  015C96  6EE6               	movwf	postinc1,c
  6040  015C98  0E0B               	movlw	11
  6041  015C9A  6EE6               	movwf	postinc1,c
  6042  015C9C  0E09               	movlw	9
  6043  015C9E  6EE6               	movwf	postinc1,c
  6044  015CA0  EC93  F0C2         	call	_StartTimer	;wreg free
  6045                           
  6046                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6047  015CA4  0EB8               	movlw	184
  6048  015CA6  6EE6               	movwf	postinc1,c
  6049  015CA8  0E0B               	movlw	11
  6050  015CAA  6EE6               	movwf	postinc1,c
  6051  015CAC  0E07               	movlw	7
  6052  015CAE  6EE6               	movwf	postinc1,c
  6053  015CB0  EC93  F0C2         	call	_StartTimer	;wreg free
  6054                           
  6055                           ;mconfig.c: 64:   mode_lamp_bright();
  6056  015CB4  ECE4  F0C6         	call	_mode_lamp_bright	;wreg free
  6057                           
  6058                           ;mconfig.c: 65:   update_lcd(1);
  6059  015CB8  0E01               	movlw	1
  6060  015CBA  6EE6               	movwf	postinc1,c
  6061  015CBC  EC22  F0B7         	call	_update_lcd	;wreg free
  6062                           
  6063                           ;mconfig.c: 66:   estatus=1;
  6064                           ;stkvar	_estatus @ sp[(-1)+0]
  6065  015CC0  0EFF               	movlw	-1
  6066  015CC2  6AE3               	clrf	plusw1,c
  6067  015CC4  2AE3               	incf	plusw1,f,c
  6068                           
  6069                           ;mconfig.c: 67:  } else {
  6070  015CC6  D032               	goto	l10718
  6071  015CC8                     l10702:
  6072                           
  6073                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6074  015CC8  0E09               	movlw	9
  6075  015CCA  6EE6               	movwf	postinc1,c
  6076  015CCC  EC93  F0C5         	call	_TimerDone	;wreg free
  6077  015CD0  5032               	movf	btemp^0,w,c
  6078  015CD2  B4D8               	btfsc	status,2,c
  6079  015CD4  D02B               	goto	l10718
  6080                           
  6081                           ;mconfig.c: 69:    set_vterm(0);
  6082  015CD6  0E00               	movlw	0
  6083  015CD8  6EE6               	movwf	postinc1,c
  6084  015CDA  EC54  F0C6         	call	_set_vterm	;wreg free
  6085                           
  6086                           ; BSR set to: 5
  6087                           ;mconfig.c: 70:    V.help = 0;
  6088  015CDE  0102               	movlb	2	; () banked
  6089  015CE0  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6090                           
  6091                           ; BSR set to: 2
  6092                           ;mconfig.c: 71:    set_display_info(display_help());
  6093  015CE2  EC19  F0C7         	call	_display_help	;wreg free
  6094  015CE6  5032               	movf	btemp^0,w,c
  6095  015CE8  6EE6               	movwf	postinc1,c
  6096  015CEA  EC19  F0C6         	call	_set_display_info	;wreg free
  6097                           
  6098                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6099  015CEE  0060  FA57  FFE6   	movff	_V+149,postinc1
  6100  015CF4  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6101  015CFA  EC7D  F0C6         	call	_mode_lamp_dim	;wreg free
  6102                           
  6103                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6104  015CFE  0E0B               	movlw	11
  6105  015D00  6EE6               	movwf	postinc1,c
  6106  015D02  EC93  F0C5         	call	_TimerDone	;wreg free
  6107  015D06  5032               	movf	btemp^0,w,c
  6108  015D08  B4D8               	btfsc	status,2,c
  6109  015D0A  D010               	goto	l10718
  6110                           
  6111                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6112  015D0C  0102               	movlb	2	; () banked
  6113  015D0E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6114  015D10  A4D8               	btfss	status,2,c
  6115  015D12  D002               	goto	u10540
  6116  015D14  0E01               	movlw	1
  6117  015D16  D001               	goto	u10550
  6118  015D18                     u10540:
  6119  015D18  0E00               	movlw	0
  6120  015D1A                     u10550:
  6121  015D1A  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6122                           
  6123                           ; BSR set to: 2
  6124                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6125  015D1C  0EDC               	movlw	220
  6126  015D1E  6EE6               	movwf	postinc1,c
  6127  015D20  0E05               	movlw	5
  6128  015D22  6EE6               	movwf	postinc1,c
  6129  015D24  0E0B               	movlw	11
  6130  015D26  6EE6               	movwf	postinc1,c
  6131  015D28  EC93  F0C2         	call	_StartTimer	;wreg free
  6132  015D2C                     l10718:
  6133                           
  6134                           ;mconfig.c: 79:  return estatus;
  6135                           ;stkvar	_estatus @ sp[(-1)+0]
  6136  015D2C  0EFF               	movlw	-1
  6137  015D2E  006F FF8C  F032    	movff	plusw1,btemp
  6138                           
  6139                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6140  015D34  52E5               	movf	postdec1,f,c
  6141  015D36  52E5               	movf	postdec1,f,c
  6142  015D38  0012               	return		;funcret
  6143  015D3A                     __end_of_check_help:
  6144                           	opt callstack 0
  6145                           
  6146 ;; *************** function _vterm_dump *****************
  6147 ;; Defined at:
  6148 ;;		line 121 in file "mconfig.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;		None
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1  [STACK] void 
  6155 ;; Registers used:
  6156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6157 ;; Tracked objects:
  6158 ;;		On entry : 3F/2
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6166 ;;Total ram usage:        0 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:   17
  6169 ;; This function calls:
  6170 ;;		_WaitMs
  6171 ;;		_eaDogM_WriteStringAtPos
  6172 ;;		_get_vterm_ptr
  6173 ;;		_sprintf
  6174 ;;		_wait_lcd_done
  6175 ;; This function is called by:
  6176 ;;		_check_help
  6177 ;; This function uses a reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text23
  6181  0169C6                     __ptext23:
  6182                           	opt callstack 0
  6183  0169C6                     _vterm_dump:
  6184                           	opt callstack 12
  6185                           
  6186                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6187                           
  6188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6189                           ;incstack = 0
  6190  0169C6  0E01               	movlw	1
  6191  0169C8  6EE6               	movwf	postinc1,c
  6192  0169CA  0E00               	movlw	0
  6193  0169CC  6EE6               	movwf	postinc1,c
  6194  0169CE  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  6195  0169D2  0060  F0CB  FFE6   	movff	btemp,postinc1
  6196  0169D8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6197  0169DE  0E00               	movlw	0
  6198  0169E0  6EE6               	movwf	postinc1,c
  6199  0169E2  0E00               	movlw	0
  6200  0169E4  6EE6               	movwf	postinc1,c
  6201  0169E6  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  6202  0169EA  0060  F0CB  FFE6   	movff	btemp,postinc1
  6203  0169F0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6204  0169F6  0EA3               	movlw	low STR_33
  6205  0169F8  6EE6               	movwf	postinc1,c
  6206  0169FA  0EFF               	movlw	high STR_33
  6207  0169FC  6EE6               	movwf	postinc1,c
  6208  0169FE  0E01               	movlw	low (_V+1)
  6209  016A00  6EE6               	movwf	postinc1,c
  6210  016A02  0E02               	movlw	high (_V+1)
  6211  016A04  6EE6               	movwf	postinc1,c
  6212  016A06  0E08               	movlw	8
  6213  016A08  6EE6               	movwf	postinc1,c
  6214  016A0A  ECA9  F0B7         	call	_sprintf	;wreg free
  6215                           
  6216                           ;mconfig.c: 124:  wait_lcd_done();
  6217  016A0E  EC46  F0C6         	call	_wait_lcd_done	;wreg free
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6221  016A12  0E01               	movlw	low (_V+1)
  6222  016A14  6EE6               	movwf	postinc1,c
  6223  016A16  0E02               	movlw	high (_V+1)
  6224  016A18  6EE6               	movwf	postinc1,c
  6225  016A1A  0E00               	movlw	0
  6226  016A1C  6EE6               	movwf	postinc1,c
  6227  016A1E  0E00               	movlw	0
  6228  016A20  6EE6               	movwf	postinc1,c
  6229  016A22  ECE8  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6230                           
  6231                           ; BSR set to: 59
  6232                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6233  016A26  0E01               	movlw	1
  6234  016A28  6EE6               	movwf	postinc1,c
  6235  016A2A  0E01               	movlw	1
  6236  016A2C  6EE6               	movwf	postinc1,c
  6237  016A2E  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  6238  016A32  0060  F0CB  FFE6   	movff	btemp,postinc1
  6239  016A38  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6240  016A3E  0E00               	movlw	0
  6241  016A40  6EE6               	movwf	postinc1,c
  6242  016A42  0E01               	movlw	1
  6243  016A44  6EE6               	movwf	postinc1,c
  6244  016A46  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  6245  016A4A  0060  F0CB  FFE6   	movff	btemp,postinc1
  6246  016A50  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6247  016A56  0EA3               	movlw	low STR_33
  6248  016A58  6EE6               	movwf	postinc1,c
  6249  016A5A  0EFF               	movlw	high STR_33
  6250  016A5C  6EE6               	movwf	postinc1,c
  6251  016A5E  0E01               	movlw	low (_V+1)
  6252  016A60  6EE6               	movwf	postinc1,c
  6253  016A62  0E02               	movlw	high (_V+1)
  6254  016A64  6EE6               	movwf	postinc1,c
  6255  016A66  0E08               	movlw	8
  6256  016A68  6EE6               	movwf	postinc1,c
  6257  016A6A  ECA9  F0B7         	call	_sprintf	;wreg free
  6258                           
  6259                           ;mconfig.c: 127:  wait_lcd_done();
  6260  016A6E  EC46  F0C6         	call	_wait_lcd_done	;wreg free
  6261                           
  6262                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6263  016A72  0E01               	movlw	low (_V+1)
  6264  016A74  6EE6               	movwf	postinc1,c
  6265  016A76  0E02               	movlw	high (_V+1)
  6266  016A78  6EE6               	movwf	postinc1,c
  6267  016A7A  0E00               	movlw	0
  6268  016A7C  6EE6               	movwf	postinc1,c
  6269  016A7E  0E01               	movlw	1
  6270  016A80  6EE6               	movwf	postinc1,c
  6271  016A82  ECE8  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6272                           
  6273                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6274  016A86  0E01               	movlw	1
  6275  016A88  6EE6               	movwf	postinc1,c
  6276  016A8A  0E02               	movlw	2
  6277  016A8C  6EE6               	movwf	postinc1,c
  6278  016A8E  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  6279  016A92  0060  F0CB  FFE6   	movff	btemp,postinc1
  6280  016A98  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6281  016A9E  0E00               	movlw	0
  6282  016AA0  6EE6               	movwf	postinc1,c
  6283  016AA2  0E02               	movlw	2
  6284  016AA4  6EE6               	movwf	postinc1,c
  6285  016AA6  EC97  F0C3         	call	_get_vterm_ptr	;wreg free
  6286  016AAA  0060  F0CB  FFE6   	movff	btemp,postinc1
  6287  016AB0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6288  016AB6  0EA3               	movlw	low STR_33
  6289  016AB8  6EE6               	movwf	postinc1,c
  6290  016ABA  0EFF               	movlw	high STR_33
  6291  016ABC  6EE6               	movwf	postinc1,c
  6292  016ABE  0E01               	movlw	low (_V+1)
  6293  016AC0  6EE6               	movwf	postinc1,c
  6294  016AC2  0E02               	movlw	high (_V+1)
  6295  016AC4  6EE6               	movwf	postinc1,c
  6296  016AC6  0E08               	movlw	8
  6297  016AC8  6EE6               	movwf	postinc1,c
  6298  016ACA  ECA9  F0B7         	call	_sprintf	;wreg free
  6299                           
  6300                           ;mconfig.c: 130:  wait_lcd_done();
  6301  016ACE  EC46  F0C6         	call	_wait_lcd_done	;wreg free
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6305  016AD2  0E01               	movlw	low (_V+1)
  6306  016AD4  6EE6               	movwf	postinc1,c
  6307  016AD6  0E02               	movlw	high (_V+1)
  6308  016AD8  6EE6               	movwf	postinc1,c
  6309  016ADA  0E00               	movlw	0
  6310  016ADC  6EE6               	movwf	postinc1,c
  6311  016ADE  0E02               	movlw	2
  6312  016AE0  6EE6               	movwf	postinc1,c
  6313  016AE2  ECE8  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6314                           
  6315                           ; BSR set to: 59
  6316                           ;mconfig.c: 132:  WaitMs(3000);
  6317  016AE6  0EB8               	movlw	184
  6318  016AE8  6EE6               	movwf	postinc1,c
  6319  016AEA  0E0B               	movlw	11
  6320  016AEC  6EE6               	movwf	postinc1,c
  6321  016AEE  ECCD  F0C2         	call	_WaitMs	;wreg free
  6322                           
  6323                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6324  016AF2  0012               	return		;funcret
  6325  016AF4                     __end_of_vterm_dump:
  6326                           	opt callstack 0
  6327                           
  6328 ;; *************** function _sprintf *****************
  6329 ;; Defined at:
  6330 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  s               2  [STACK] PTR unsigned char 
  6333 ;;		 -> D.lcd(216), D(218), V(188), 
  6334 ;;  fmt             2  [STACK] PTR const unsigned char 
  6335 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6336 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6337 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6338 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6339 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6340 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6341 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6342 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6343 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6344 ;;		 -> STR_1(17), 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  f               6  [STACK] struct _IO_FILE
  6347 ;;  ap              2  [STACK] PTR void [1]
  6348 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6349 ;;  ret             2    0        int 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  2  [STACK] int 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/5
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:   14
  6366 ;; This function calls:
  6367 ;;		_vfprintf
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;;		_check_help
  6371 ;;		_vterm_dump
  6372 ;; This function uses a reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text24
  6376  016F52                     __ptext24:
  6377                           	opt callstack 0
  6378  016F52                     _sprintf:
  6379                           	opt callstack 0
  6380                           
  6381                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6382  016F52  0E08               	movlw	8
  6383  016F54  26E1               	addwf	fsr1l,f,c
  6384  016F56  0E00               	movlw	0
  6385  016F58  22E2               	addwfc	fsr1h,f,c
  6386                           
  6387                           ;incstack = 0
  6388  016F5A  0EFE               	movlw	254
  6389  016F5C  6E3C               	movwf	(btemp+10)^0,c
  6390  016F5E  0EFF               	movlw	255
  6391  016F60  6E3D               	movwf	(btemp+11)^0,c
  6392                           
  6393                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6394  016F62  0EF5               	movlw	245
  6395  016F64  24E1               	addwf	fsr1l,w,c
  6396  016F66  6E3A               	movwf	(btemp+8)^0,c
  6397  016F68  0EFF               	movlw	255
  6398  016F6A  20E2               	addwfc	fsr1h,w,c
  6399  016F6C  6E3B               	movwf	(btemp+9)^0,c
  6400  016F6E  503C               	movf	(btemp+10)^0,w,c
  6401  016F70  263A               	addwf	(btemp+8)^0,f,c
  6402  016F72  503D               	movf	(btemp+11)^0,w,c
  6403  016F74  223B               	addwfc	(btemp+9)^0,f,c
  6404                           
  6405                           ;stkvar	_ap @ sp[(-8)+6]
  6406  016F76  0EFF               	movlw	-1
  6407  016F78  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  6408  016F7E  0EFE               	movlw	-2
  6409  016F80  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  6410                           
  6411                           ;stkvar	_s @ sp[(-8)+-3]
  6412  016F86  0EF5               	movlw	-11
  6413  016F88  006F FF8C  F03C    	movff	plusw1,btemp+10
  6414  016F8E  0EF6               	movlw	-10
  6415  016F90  006F FF8C  F03D    	movff	plusw1,btemp+11
  6416                           
  6417                           ;stkvar	_f @ sp[(-8)+0]
  6418  016F96  0EF9               	movlw	-7
  6419  016F98  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6420  016F9E  0EF8               	movlw	-8
  6421  016FA0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6422                           
  6423                           ;stkvar	_f @ sp[(-8)+0]
  6424  016FA6  0EFA               	movlw	250
  6425  016FA8  24E1               	addwf	fsr1l,w,c
  6426  016FAA  6ED9               	movwf	fsr2l,c
  6427  016FAC  0EFF               	movlw	255
  6428  016FAE  20E2               	addwfc	fsr1h,w,c
  6429  016FB0  6EDA               	movwf	fsr2h,c
  6430  016FB2  0E00               	movlw	0
  6431  016FB4  6EDE               	movwf	postinc2,c
  6432  016FB6  0E00               	movlw	0
  6433  016FB8  6EDD               	movwf	postdec2,c
  6434                           
  6435                           ;stkvar	_f @ sp[(-8)+0]
  6436  016FBA  0EFC               	movlw	252
  6437  016FBC  24E1               	addwf	fsr1l,w,c
  6438  016FBE  6ED9               	movwf	fsr2l,c
  6439  016FC0  0EFF               	movlw	255
  6440  016FC2  20E2               	addwfc	fsr1h,w,c
  6441  016FC4  6EDA               	movwf	fsr2h,c
  6442  016FC6  0E00               	movlw	0
  6443  016FC8  6EDE               	movwf	postinc2,c
  6444  016FCA  0E00               	movlw	0
  6445  016FCC  6EDD               	movwf	postdec2,c
  6446                           
  6447                           ;stkvar	_ap @ sp[(-8)+6]
  6448  016FCE  0EFE               	movlw	254
  6449  016FD0  24E1               	addwf	fsr1l,w,c
  6450  016FD2  6E32               	movwf	btemp^0,c
  6451  016FD4  0EFF               	movlw	255
  6452  016FD6  20E2               	addwfc	fsr1h,w,c
  6453  016FD8  6E33               	movwf	(btemp+1)^0,c
  6454  016FDA  0060  F0CB  FFE6   	movff	btemp,postinc1
  6455  016FE0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6456                           
  6457                           ;stkvar	_fmt @ sp[(-10)+-5]
  6458  016FE6  0EF1               	movlw	-15
  6459  016FE8  006F FF8F FFE6     	movff	plusw1,postinc1
  6460  016FEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6461                           
  6462                           ;stkvar	_f @ sp[(-12)+0]
  6463  016FF4  0EF4               	movlw	244
  6464  016FF6  24E1               	addwf	fsr1l,w,c
  6465  016FF8  6E32               	movwf	btemp^0,c
  6466  016FFA  0EFF               	movlw	255
  6467  016FFC  20E2               	addwfc	fsr1h,w,c
  6468  016FFE  6E33               	movwf	(btemp+1)^0,c
  6469  017000  0060  F0CB  FFE6   	movff	btemp,postinc1
  6470  017006  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6471  01700C  EC79  F0BB         	call	_vfprintf	;wreg free
  6472                           
  6473                           ;stkvar	_f @ sp[(-8)+0]
  6474  017010  0EFA               	movlw	250
  6475  017012  24E1               	addwf	fsr1l,w,c
  6476  017014  6ED9               	movwf	fsr2l,c
  6477  017016  0EFF               	movlw	255
  6478  017018  20E2               	addwfc	fsr1h,w,c
  6479  01701A  6EDA               	movwf	fsr2h,c
  6480  01701C  006F FF78  F03C    	movff	postinc2,btemp+10
  6481  017022  006F FF74  F03D    	movff	postdec2,btemp+11
  6482                           
  6483                           ;stkvar	_s @ sp[(-8)+-3]
  6484  017028  0EF5               	movlw	-11
  6485  01702A  006F FF8C  F03A    	movff	plusw1,btemp+8
  6486  017030  0EF6               	movlw	-10
  6487  017032  006F FF8C  F03B    	movff	plusw1,btemp+9
  6488  017038  503C               	movf	(btemp+10)^0,w,c
  6489  01703A  243A               	addwf	(btemp+8)^0,w,c
  6490  01703C  6ED9               	movwf	fsr2l,c
  6491  01703E  503D               	movf	(btemp+11)^0,w,c
  6492  017040  203B               	addwfc	(btemp+9)^0,w,c
  6493  017042  6EDA               	movwf	fsr2h,c
  6494  017044  0E00               	movlw	0
  6495  017046  6EDF               	movwf	indf2,c
  6496                           
  6497                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6498  017048  0EF8               	movlw	248
  6499  01704A  26E1               	addwf	fsr1l,f,c
  6500  01704C  0EFF               	movlw	255
  6501  01704E  22E2               	addwfc	fsr1h,f,c
  6502  017050  52E5               	movf	postdec1,f,c
  6503  017052  50E7               	movf	indf1,w,c
  6504  017054  5EE1               	subwf	fsr1l,f,c
  6505  017056  0E00               	movlw	0
  6506  017058  5AE2               	subwfb	fsr1h,f,c
  6507  01705A  0012               	return		;funcret
  6508  01705C                     __end_of_sprintf:
  6509                           	opt callstack 0
  6510                           
  6511 ;; *************** function _get_vterm_ptr *****************
  6512 ;; Defined at:
  6513 ;;		line 116 in file "mconfig.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  line            1  [STACK] const unsigned char 
  6516 ;;  vterm           1  [STACK] const unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  2  [STACK] PTR unsigned char 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/5
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    6
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_main
  6539 ;;		_check_help
  6540 ;;		_vterm_dump
  6541 ;; This function uses a reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text25
  6545  01872E                     __ptext25:
  6546                           	opt callstack 0
  6547  01872E                     _get_vterm_ptr:
  6548                           	opt callstack 24
  6549                           
  6550                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6551                           ;stkvar	_vterm @ sp[(0)+-2]
  6552                           
  6553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6554                           ;incstack = 0
  6555  01872E  0EFE               	movlw	-2
  6556  018730  50E3               	movf	plusw1,w,c
  6557  018732  0B03               	andlw	3
  6558  018734  0D36               	mullw	54
  6559  018736  0E00               	movlw	low _D
  6560  018738  6E32               	movwf	btemp^0,c
  6561  01873A  0E05               	movlw	high _D
  6562  01873C  6E33               	movwf	(btemp+1)^0,c
  6563  01873E  50F3               	movf	243,w,c
  6564  018740  2632               	addwf	btemp^0,f,c
  6565  018742  50F4               	movf	244,w,c
  6566  018744  2233               	addwfc	(btemp+1)^0,f,c
  6567                           
  6568                           ;stkvar	_line @ sp[(0)+-1]
  6569  018746  0EFF               	movlw	-1
  6570  018748  50E3               	movf	plusw1,w,c
  6571  01874A  0B03               	andlw	3
  6572  01874C  0D12               	mullw	18
  6573  01874E  50F3               	movf	243,w,c
  6574  018750  2632               	addwf	btemp^0,f,c
  6575  018752  50F4               	movf	244,w,c
  6576  018754  2233               	addwfc	(btemp+1)^0,f,c
  6577                           
  6578                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6579  018756  52E5               	movf	postdec1,f,c
  6580  018758  52E5               	movf	postdec1,f,c
  6581  01875A  0012               	return		;funcret
  6582  01875C                     __end_of_get_vterm_ptr:
  6583                           	opt callstack 0
  6584                           
  6585 ;; *************** function _WaitMs *****************
  6586 ;; Defined at:
  6587 ;;		line 32 in file "timers.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  numMilliseco    2  [STACK] const unsigned short 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  1  [STACK] void 
  6594 ;; Registers used:
  6595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/2
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6605 ;;Total ram usage:        0 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    7
  6608 ;; This function calls:
  6609 ;;		_StartTimer
  6610 ;;		_TimerDone
  6611 ;; This function is called by:
  6612 ;;		_main
  6613 ;;		_vterm_dump
  6614 ;; This function uses a reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text26
  6618  01859A                     __ptext26:
  6619                           	opt callstack 0
  6620  01859A                     _WaitMs:
  6621                           	opt callstack 21
  6622                           
  6623                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6624                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6625                           
  6626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6627                           ;incstack = 0
  6628  01859A  0EFE               	movlw	-2
  6629  01859C  006F FF8F FFE6     	movff	plusw1,postinc1
  6630  0185A2  006F FF8F FFE6     	movff	plusw1,postinc1
  6631  0185A8  0E00               	movlw	0
  6632  0185AA  6EE6               	movwf	postinc1,c
  6633  0185AC  EC93  F0C2         	call	_StartTimer	;wreg free
  6634                           
  6635                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6636  0185B0  D005               	goto	l8242
  6637  0185B2                     l1517:
  6638                           
  6639                           ;timers.c: 36:   __nop();
  6640  0185B2  F000               	nop	
  6641                           
  6642                           ;timers.c: 37:   __nop();
  6643  0185B4  F000               	nop	
  6644                           
  6645                           ;timers.c: 38:   __nop();
  6646  0185B6  F000               	nop	
  6647                           
  6648                           ;timers.c: 39:   __nop();
  6649  0185B8  F000               	nop	
  6650  0185BA  0004               	clrwdt		;# 
  6651  0185BC                     l8242:
  6652                           
  6653                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6654  0185BC  0E00               	movlw	0
  6655  0185BE  6EE6               	movwf	postinc1,c
  6656  0185C0  EC93  F0C5         	call	_TimerDone	;wreg free
  6657  0185C4  5032               	movf	btemp^0,w,c
  6658  0185C6  B4D8               	btfsc	status,2,c
  6659  0185C8  D7F4               	goto	l1517
  6660                           
  6661                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6662  0185CA  52E5               	movf	postdec1,f,c
  6663  0185CC  52E5               	movf	postdec1,f,c
  6664  0185CE  0012               	return		;funcret
  6665  0185D0                     __end_of_WaitMs:
  6666                           	opt callstack 0
  6667                           
  6668 ;; *************** function _update_lcd *****************
  6669 ;; Defined at:
  6670 ;;		line 85 in file "mconfig.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  vterm           1  [STACK] unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1  [STACK] unsigned char 
  6677 ;; Registers used:
  6678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/5
  6681 ;;		On exit  : 1/1
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6688 ;;Total ram usage:        0 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:   17
  6691 ;; This function calls:
  6692 ;;		_eaDogM_WriteStringAtPos
  6693 ;;		_wait_lcd_done
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;;		_check_help
  6697 ;; This function uses a reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text27
  6701  016E44                     __ptext27:
  6702                           	opt callstack 0
  6703  016E44                     _update_lcd:
  6704                           	opt callstack 13
  6705                           
  6706                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6707                           ;stkvar	_vterm @ sp[(0)+-1]
  6708                           
  6709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6710                           ;incstack = 0
  6711  016E44  0EFF               	movlw	-1
  6712  016E46  006F FF8C  F032    	movff	plusw1,btemp
  6713  016E4C  0E03               	movlw	3
  6714  016E4E  1632               	andwf	btemp^0,f,c
  6715  016E50  0EFF               	movlw	-1
  6716  016E52  0060  F0CB  FFE3   	movff	btemp,plusw1
  6717                           
  6718                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6719  016E58  0105               	movlb	5	; () banked
  6720  016E5A  A1D8               	btfss	(_D+216)& (0+255),0,b
  6721  016E5C  D004               	goto	l10570
  6722                           
  6723                           ; BSR set to: 5
  6724                           ;stkvar	_vterm @ sp[(0)+-1]
  6725  016E5E  0EFF               	movlw	-1
  6726  016E60  50E3               	movf	plusw1,w,c
  6727  016E62  B4D8               	btfsc	status,2,c
  6728  016E64  D074               	goto	l1595
  6729  016E66                     l10570:
  6730                           
  6731                           ; BSR set to: 5
  6732                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6733                           ;stkvar	_vterm @ sp[(0)+-1]
  6734  016E66  0EFF               	movlw	-1
  6735  016E68  50E3               	movf	plusw1,w,c
  6736  016E6A  0D36               	mullw	54
  6737  016E6C  0E10               	movlw	low (_D+16)
  6738  016E6E  24F3               	addwf	243,w,c
  6739  016E70  6ED9               	movwf	fsr2l,c
  6740  016E72  0E05               	movlw	high (_D+16)
  6741  016E74  20F4               	addwfc	prodh,w,c
  6742  016E76  6EDA               	movwf	fsr2h,c
  6743  016E78  0E00               	movlw	0
  6744  016E7A  6EDF               	movwf	indf2,c
  6745                           
  6746                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6747                           ;stkvar	_vterm @ sp[(0)+-1]
  6748  016E7C  0EFF               	movlw	-1
  6749  016E7E  50E3               	movf	plusw1,w,c
  6750  016E80  0D36               	mullw	54
  6751  016E82  0E22               	movlw	low (_D+34)
  6752  016E84  24F3               	addwf	243,w,c
  6753  016E86  6ED9               	movwf	fsr2l,c
  6754  016E88  0E05               	movlw	high (_D+34)
  6755  016E8A  20F4               	addwfc	prodh,w,c
  6756  016E8C  6EDA               	movwf	fsr2h,c
  6757  016E8E  0E00               	movlw	0
  6758  016E90  6EDF               	movwf	indf2,c
  6759                           
  6760                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6761                           ;stkvar	_vterm @ sp[(0)+-1]
  6762  016E92  0EFF               	movlw	-1
  6763  016E94  50E3               	movf	plusw1,w,c
  6764  016E96  0D36               	mullw	54
  6765  016E98  0E34               	movlw	low (_D+52)
  6766  016E9A  24F3               	addwf	243,w,c
  6767  016E9C  6ED9               	movwf	fsr2l,c
  6768  016E9E  0E05               	movlw	high (_D+52)
  6769  016EA0  20F4               	addwfc	prodh,w,c
  6770  016EA2  6EDA               	movwf	fsr2h,c
  6771  016EA4  0E00               	movlw	0
  6772  016EA6  6EDF               	movwf	indf2,c
  6773                           
  6774                           ; BSR set to: 5
  6775                           ;mconfig.c: 95:  wait_lcd_done();
  6776  016EA8  EC46  F0C6         	call	_wait_lcd_done	;wreg free
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6780                           ;stkvar	_vterm @ sp[(0)+-1]
  6781  016EAC  0EFF               	movlw	-1
  6782  016EAE  50E3               	movf	plusw1,w,c
  6783  016EB0  0D36               	mullw	54
  6784  016EB2  0E00               	movlw	low _D
  6785  016EB4  6E3C               	movwf	(btemp+10)^0,c
  6786  016EB6  0E05               	movlw	high _D
  6787  016EB8  6E3D               	movwf	(btemp+11)^0,c
  6788  016EBA  50F3               	movf	243,w,c
  6789  016EBC  263C               	addwf	(btemp+10)^0,f,c
  6790  016EBE  50F4               	movf	244,w,c
  6791  016EC0  223D               	addwfc	(btemp+11)^0,f,c
  6792  016EC2  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6793  016EC8  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6794  016ECE  0E00               	movlw	0
  6795  016ED0  6EE6               	movwf	postinc1,c
  6796  016ED2  0E00               	movlw	0
  6797  016ED4  6EE6               	movwf	postinc1,c
  6798  016ED6  ECE8  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6799                           
  6800                           ; BSR set to: 59
  6801                           ;mconfig.c: 97:  wait_lcd_done();
  6802  016EDA  EC46  F0C6         	call	_wait_lcd_done	;wreg free
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6806                           ;stkvar	_vterm @ sp[(0)+-1]
  6807  016EDE  0EFF               	movlw	-1
  6808  016EE0  50E3               	movf	plusw1,w,c
  6809  016EE2  0D36               	mullw	54
  6810  016EE4  0E00               	movlw	low _D
  6811  016EE6  6E3C               	movwf	(btemp+10)^0,c
  6812  016EE8  0E05               	movlw	high _D
  6813  016EEA  6E3D               	movwf	(btemp+11)^0,c
  6814  016EEC  0E12               	movlw	18
  6815  016EEE  263C               	addwf	(btemp+10)^0,f,c
  6816  016EF0  0E00               	movlw	0
  6817  016EF2  223D               	addwfc	(btemp+11)^0,f,c
  6818  016EF4  50F3               	movf	243,w,c
  6819  016EF6  263C               	addwf	(btemp+10)^0,f,c
  6820  016EF8  50F4               	movf	244,w,c
  6821  016EFA  223D               	addwfc	(btemp+11)^0,f,c
  6822  016EFC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6823  016F02  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6824  016F08  0E00               	movlw	0
  6825  016F0A  6EE6               	movwf	postinc1,c
  6826  016F0C  0E01               	movlw	1
  6827  016F0E  6EE6               	movwf	postinc1,c
  6828  016F10  ECE8  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6829                           
  6830                           ; BSR set to: 59
  6831                           ;mconfig.c: 99:  wait_lcd_done();
  6832  016F14  EC46  F0C6         	call	_wait_lcd_done	;wreg free
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6836                           ;stkvar	_vterm @ sp[(0)+-1]
  6837  016F18  0EFF               	movlw	-1
  6838  016F1A  50E3               	movf	plusw1,w,c
  6839  016F1C  0D36               	mullw	54
  6840  016F1E  0E00               	movlw	low _D
  6841  016F20  6E3C               	movwf	(btemp+10)^0,c
  6842  016F22  0E05               	movlw	high _D
  6843  016F24  6E3D               	movwf	(btemp+11)^0,c
  6844  016F26  0E24               	movlw	36
  6845  016F28  263C               	addwf	(btemp+10)^0,f,c
  6846  016F2A  0E00               	movlw	0
  6847  016F2C  223D               	addwfc	(btemp+11)^0,f,c
  6848  016F2E  50F3               	movf	243,w,c
  6849  016F30  263C               	addwf	(btemp+10)^0,f,c
  6850  016F32  50F4               	movf	244,w,c
  6851  016F34  223D               	addwfc	(btemp+11)^0,f,c
  6852  016F36  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6853  016F3C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6854  016F42  0E00               	movlw	0
  6855  016F44  6EE6               	movwf	postinc1,c
  6856  016F46  0E02               	movlw	2
  6857  016F48  6EE6               	movwf	postinc1,c
  6858  016F4A  ECE8  F0C2         	call	_eaDogM_WriteStringAtPos	;wreg free
  6859  016F4E                     l1595:
  6860                           
  6861                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6862  016F4E  52E5               	movf	postdec1,f,c
  6863  016F50  0012               	return		;funcret
  6864  016F52                     __end_of_update_lcd:
  6865                           	opt callstack 0
  6866                           
  6867 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6868 ;; Defined at:
  6869 ;;		line 252 in file "eadog.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  r               1  [STACK] const unsigned char 
  6872 ;;  c               1  [STACK] const unsigned char 
  6873 ;;  strPtr          2  [STACK] PTR unsigned char 
  6874 ;;		 -> D.lcd(216), D(218), V(188), 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;		None
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1  [STACK] void 
  6879 ;; Registers used:
  6880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6881 ;; Tracked objects:
  6882 ;;		On entry : 3F/0
  6883 ;;		On exit  : 3F/3B
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;Total ram usage:        0 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:   16
  6893 ;; This function calls:
  6894 ;;		_eaDogM_WriteString
  6895 ;;		_send_lcd_cmd_dma
  6896 ;; This function is called by:
  6897 ;;		_update_lcd
  6898 ;;		_vterm_dump
  6899 ;; This function uses a reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text28
  6903  0185D0                     __ptext28:
  6904                           	opt callstack 0
  6905  0185D0                     _eaDogM_WriteStringAtPos:
  6906                           	opt callstack 13
  6907                           
  6908                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6909                           ;stkvar	_c @ sp[(0)+-2]
  6910                           
  6911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6912                           ;incstack = 0
  6913  0185D0  0EFE               	movlw	-2
  6914  0185D2  006F FF8C  F03D    	movff	plusw1,btemp+11
  6915                           
  6916                           ;stkvar	_r @ sp[(0)+-1]
  6917  0185D8  0EFF               	movlw	-1
  6918  0185DA  50E3               	movf	plusw1,w,c
  6919  0185DC  0D10               	mullw	16
  6920  0185DE  50F3               	movf	243,w,c
  6921  0185E0  243D               	addwf	(btemp+11)^0,w,c
  6922  0185E2  0F80               	addlw	128
  6923  0185E4  6EE6               	movwf	postinc1,c
  6924  0185E6  ECEC  F0C0         	call	_send_lcd_cmd_dma	;wreg free
  6925                           
  6926                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6927                           ;stkvar	_strPtr @ sp[(0)+-4]
  6928  0185EA  0EFC               	movlw	-4
  6929  0185EC  006F FF8F FFE6     	movff	plusw1,postinc1
  6930  0185F2  006F FF8F FFE6     	movff	plusw1,postinc1
  6931  0185F8  ECCD  F0BB         	call	_eaDogM_WriteString	;wreg free
  6932                           
  6933                           ; BSR set to: 59
  6934                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6935  0185FC  52E5               	movf	postdec1,f,c
  6936  0185FE  52E5               	movf	postdec1,f,c
  6937  018600  52E5               	movf	postdec1,f,c
  6938  018602  52E5               	movf	postdec1,f,c
  6939  018604  0012               	return		;funcret
  6940  018606                     __end_of_eaDogM_WriteStringAtPos:
  6941                           	opt callstack 0
  6942                           
  6943 ;; *************** function _send_lcd_cmd_dma *****************
  6944 ;; Defined at:
  6945 ;;		line 205 in file "eadog.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  strPtr          1  [STACK] unsigned char 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  1  [STACK] void 
  6952 ;; Registers used:
  6953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/3D
  6956 ;;		On exit  : 3F/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6963 ;;Total ram usage:        0 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:   15
  6966 ;; This function calls:
  6967 ;;		_printf
  6968 ;;		_ringBufS_flush
  6969 ;;		_start_lcd
  6970 ;;		_wait_lcd_done
  6971 ;;		_wait_lcd_set
  6972 ;; This function is called by:
  6973 ;;		_eaDogM_WriteCommand
  6974 ;;		_eaDogM_WriteStringAtPos
  6975 ;; This function uses a reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text29
  6979  0181D8                     __ptext29:
  6980                           	opt callstack 0
  6981  0181D8                     _send_lcd_cmd_dma:
  6982                           	opt callstack 13
  6983                           
  6984                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6985                           
  6986                           ; BSR set to: 59
  6987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6988                           ;incstack = 0
  6989  0181D8  EC28  F0C7         	call	_wait_lcd_set	;wreg free
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6993  0181DC  0E00               	movlw	0
  6994  0181DE  6EE6               	movwf	postinc1,c
  6995  0181E0  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6996  0181E6  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6997  0181EC  ECBD  F0BC         	call	_ringBufS_flush	;wreg free
  6998  0181F0  92BC               	bcf	188,1,c	;volatile
  6999  0181F2  94BC               	bcf	188,2,c	;volatile
  7000                           
  7001                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  7002  0181F4  013B               	movlb	59	; () banked
  7003  0181F6  9FFC               	bcf	252,7,b	;volatile
  7004                           
  7005                           ; BSR set to: 59
  7006                           ;eadog.c: 214:  DMA1SSZ = 1;
  7007  0181F8  0E00               	movlw	0
  7008  0181FA  6FF8               	movwf	248,b	;volatile
  7009  0181FC  0E01               	movlw	1
  7010  0181FE  6FF7               	movwf	247,b	;volatile
  7011                           
  7012                           ; BSR set to: 59
  7013                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  7014  018200  8FFC               	bsf	252,7,b	;volatile
  7015                           
  7016                           ; BSR set to: 59
  7017                           ;eadog.c: 216:  printf("%c", strPtr);
  7018                           ;stkvar	_strPtr @ sp[(0)+-1]
  7019  018202  0EFF               	movlw	-1
  7020  018204  50E3               	movf	plusw1,w,c
  7021  018206  6EE6               	movwf	postinc1,c
  7022  018208  0E00               	movlw	0
  7023  01820A  6EE6               	movwf	postinc1,c
  7024  01820C  0EF9               	movlw	low STR_25
  7025  01820E  6EE6               	movwf	postinc1,c
  7026  018210  0EFF               	movlw	high STR_25
  7027  018212  6EE6               	movwf	postinc1,c
  7028  018214  0E04               	movlw	4
  7029  018216  6EE6               	movwf	postinc1,c
  7030  018218  EC04  F0C0         	call	_printf	;wreg free
  7031                           
  7032                           ;eadog.c: 217:  start_lcd();
  7033  01821C  EC2B  F0C7         	call	_start_lcd	;wreg free
  7034                           
  7035                           ; BSR set to: 59
  7036                           ;eadog.c: 218:  wait_lcd_done();
  7037  018220  EC46  F0C6         	call	_wait_lcd_done	;wreg free
  7038                           
  7039                           ; BSR set to: 0
  7040  018224  82BC               	bsf	188,1,c	;volatile
  7041                           
  7042                           ; BSR set to: 0
  7043                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7044  018226  52E5               	movf	postdec1,f,c
  7045  018228  0012               	return		;funcret
  7046  01822A                     __end_of_send_lcd_cmd_dma:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _wait_lcd_done *****************
  7050 ;; Defined at:
  7051 ;;		line 141 in file "eadog.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;		None
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1  [STACK] void 
  7058 ;; Registers used:
  7059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/2
  7062 ;;		On exit  : 3F/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7069 ;;Total ram usage:        0 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    7
  7072 ;; This function calls:
  7073 ;;		_wdtdelay
  7074 ;; This function is called by:
  7075 ;;		_send_lcd_cmd_dma
  7076 ;;		_update_lcd
  7077 ;;		_vterm_dump
  7078 ;; This function uses a reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text30
  7082  018C8C                     __ptext30:
  7083                           	opt callstack 0
  7084  018C8C                     _wait_lcd_done:
  7085                           	opt callstack 22
  7086                           
  7087                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  7088                           
  7089                           ; BSR set to: 0
  7090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7091                           ;incstack = 0
  7092  018C8C  0100               	movlb	0	; () banked
  7093  018C8E  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  7094  018C90  D7FD               	goto	_wait_lcd_done
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;eadog.c: 144:  wdtdelay(50);
  7098  018C92  0E32               	movlw	50
  7099  018C94  6EE6               	movwf	postinc1,c
  7100  018C96  0E00               	movlw	0
  7101  018C98  6EE6               	movwf	postinc1,c
  7102  018C9A  0E00               	movlw	0
  7103  018C9C  6EE6               	movwf	postinc1,c
  7104  018C9E  0E00               	movlw	0
  7105  018CA0  6EE6               	movwf	postinc1,c
  7106  018CA2  EC92  F0C0         	call	_wdtdelay	;wreg free
  7107                           
  7108                           ; BSR set to: 0
  7109                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7110  018CA6  0012               	return		;funcret
  7111  018CA8                     __end_of_wait_lcd_done:
  7112                           	opt callstack 0
  7113                           
  7114 ;; *************** function _wdtdelay *****************
  7115 ;; Defined at:
  7116 ;;		line 22 in file "eadog.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  delay           4  [STACK] const unsigned long 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1  [STACK] void 
  7123 ;; Registers used:
  7124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 3F/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;Total ram usage:        0 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    6
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_init_display
  7141 ;;		_send_lcd_cmd
  7142 ;;		_send_lcd_cmd_long
  7143 ;;		_wait_lcd_done
  7144 ;; This function uses a reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text31
  7148  018124                     __ptext31:
  7149                           	opt callstack 0
  7150  018124                     _wdtdelay:
  7151                           	opt callstack 22
  7152                           
  7153                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7154                           
  7155                           ; BSR set to: 0
  7156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7157                           ;incstack = 0
  7158  018124  0100               	movlb	0	; () banked
  7159  018126  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  7160  018128  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7161  01812A  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7162  01812C  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7163  01812E                     l1362:
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;eadog.c: 27:   __nop();
  7167  01812E  F000               	nop	
  7168  018130  0004               	clrwdt		;# 
  7169                           
  7170                           ;eadog.c: 29:  };
  7171  018132  0E01               	movlw	1
  7172  018134  0100               	movlb	0	; () banked
  7173  018136  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  7174  018138  0E00               	movlw	0
  7175  01813A  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7176  01813C  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7177  01813E  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;stkvar	_delay @ sp[(0)+-4]
  7181  018140  0EFC               	movlw	-4
  7182  018142  006F FF8C  F032    	movff	plusw1,btemp
  7183  018148  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  7184  01814A  5C32               	subwf	btemp^0,w,c
  7185  01814C  0EFD               	movlw	-3
  7186  01814E  006F FF8C  F032    	movff	plusw1,btemp
  7187  018154  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7188  018156  5832               	subwfb	btemp^0,w,c
  7189  018158  0EFE               	movlw	-2
  7190  01815A  006F FF8C  F032    	movff	plusw1,btemp
  7191  018160  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7192  018162  5832               	subwfb	btemp^0,w,c
  7193  018164  0EFF               	movlw	-1
  7194  018166  006F FF8C  F032    	movff	plusw1,btemp
  7195  01816C  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7196  01816E  5832               	subwfb	btemp^0,w,c
  7197  018170  B0D8               	btfsc	status,0,c
  7198  018172  D7DD               	goto	l1362
  7199                           
  7200                           ; BSR set to: 0
  7201                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7202  018174  52E5               	movf	postdec1,f,c
  7203  018176  52E5               	movf	postdec1,f,c
  7204  018178  52E5               	movf	postdec1,f,c
  7205  01817A  52E5               	movf	postdec1,f,c
  7206  01817C  0012               	return		;funcret
  7207  01817E                     __end_of_wdtdelay:
  7208                           	opt callstack 0
  7209                           
  7210 ;; *************** function _eaDogM_WriteString *****************
  7211 ;; Defined at:
  7212 ;;		line 184 in file "eadog.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  strPtr          2  [STACK] PTR unsigned char 
  7215 ;;		 -> D.lcd(216), D(218), V(188), 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;		None
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  1  [STACK] void 
  7220 ;; Registers used:
  7221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7222 ;; Tracked objects:
  7223 ;;		On entry : 3F/0
  7224 ;;		On exit  : 3F/3B
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7231 ;;Total ram usage:        0 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:   15
  7234 ;; This function calls:
  7235 ;;		_printf
  7236 ;;		_ringBufS_flush
  7237 ;;		_start_lcd
  7238 ;;		_strlen
  7239 ;;		_wait_lcd_set
  7240 ;; This function is called by:
  7241 ;;		_eaDogM_WriteStringAtPos
  7242 ;; This function uses a reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text32
  7246  01779A                     __ptext32:
  7247                           	opt callstack 0
  7248  01779A                     _eaDogM_WriteString:
  7249                           	opt callstack 13
  7250                           
  7251                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  7252                           
  7253                           ; BSR set to: 0
  7254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7255                           ;incstack = 0
  7256  01779A  EC28  F0C7         	call	_wait_lcd_set	;wreg free
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  7260  01779E  0E00               	movlw	0
  7261  0177A0  6EE6               	movwf	postinc1,c
  7262  0177A2  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7263  0177A8  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7264  0177AE  ECBD  F0BC         	call	_ringBufS_flush	;wreg free
  7265  0177B2  94BC               	bcf	188,2,c	;volatile
  7266                           
  7267                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7268                           ;stkvar	_strPtr @ sp[(0)+-2]
  7269  0177B4  0EFE               	movlw	-2
  7270  0177B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7271  0177BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7272  0177C2  EC20  F0BC         	call	_strlen	;wreg free
  7273  0177C6  5033               	movf	(btemp+1)^0,w,c
  7274  0177C8  E104               	bnz	u10450
  7275  0177CA  0E41               	movlw	65
  7276  0177CC  5C32               	subwf	btemp^0,w,c
  7277  0177CE  A0D8               	btfss	status,0,c
  7278  0177D0  D010               	goto	l10536
  7279  0177D2                     u10450:
  7280                           
  7281                           ;stkvar	_strPtr @ sp[(0)+-2]
  7282  0177D2  0EFE               	movlw	-2
  7283  0177D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  7284  0177DA  0EFF               	movlw	-1
  7285  0177DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  7286  0177E2  0E40               	movlw	64
  7287  0177E4  243C               	addwf	(btemp+10)^0,w,c
  7288  0177E6  6ED9               	movwf	fsr2l,c
  7289  0177E8  0E00               	movlw	0
  7290  0177EA  203D               	addwfc	(btemp+11)^0,w,c
  7291  0177EC  6EDA               	movwf	fsr2h,c
  7292  0177EE  0E00               	movlw	0
  7293  0177F0  6EDF               	movwf	indf2,c
  7294  0177F2                     l10536:
  7295                           
  7296                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  7297  0177F2  013B               	movlb	59	; () banked
  7298  0177F4  9FFC               	bcf	252,7,b	;volatile
  7299                           
  7300                           ; BSR set to: 59
  7301                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  7302                           ;stkvar	_strPtr @ sp[(0)+-2]
  7303  0177F6  0EFE               	movlw	-2
  7304  0177F8  006F FF8F FFE6     	movff	plusw1,postinc1
  7305  0177FE  006F FF8F FFE6     	movff	plusw1,postinc1
  7306  017804  EC20  F0BC         	call	_strlen	;wreg free
  7307  017808  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  7308  01780E  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  7309                           
  7310                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  7311  017814  013B               	movlb	59	; () banked
  7312  017816  8FFC               	bsf	252,7,b	;volatile
  7313                           
  7314                           ; BSR set to: 59
  7315                           ;eadog.c: 195:  printf("%s", strPtr);
  7316                           ;stkvar	_strPtr @ sp[(0)+-2]
  7317  017818  0EFE               	movlw	-2
  7318  01781A  006F FF8F FFE6     	movff	plusw1,postinc1
  7319  017820  006F FF8F FFE6     	movff	plusw1,postinc1
  7320  017826  0EFC               	movlw	low STR_24
  7321  017828  6EE6               	movwf	postinc1,c
  7322  01782A  0EFF               	movlw	high STR_24
  7323  01782C  6EE6               	movwf	postinc1,c
  7324  01782E  0E04               	movlw	4
  7325  017830  6EE6               	movwf	postinc1,c
  7326  017832  EC04  F0C0         	call	_printf	;wreg free
  7327                           
  7328                           ;eadog.c: 196:  start_lcd();
  7329  017836  EC2B  F0C7         	call	_start_lcd	;wreg free
  7330                           
  7331                           ; BSR set to: 59
  7332                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7333  01783A  52E5               	movf	postdec1,f,c
  7334  01783C  52E5               	movf	postdec1,f,c
  7335  01783E  0012               	return		;funcret
  7336  017840                     __end_of_eaDogM_WriteString:
  7337                           	opt callstack 0
  7338                           
  7339 ;; *************** function _wait_lcd_set *****************
  7340 ;; Defined at:
  7341 ;;		line 131 in file "eadog.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1  [STACK] void 
  7348 ;; Registers used:
  7349 ;;		None
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/3D
  7352 ;;		On exit  : 3F/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7359 ;;Total ram usage:        0 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    6
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_eaDogM_WriteString
  7366 ;;		_send_lcd_cmd_dma
  7367 ;; This function uses a reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text33
  7371  018E50                     __ptext33:
  7372                           	opt callstack 0
  7373  018E50                     _wait_lcd_set:
  7374                           	opt callstack 21
  7375                           
  7376                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  7377                           
  7378                           ; BSR set to: 59
  7379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7380                           ;incstack = 0
  7381  018E50  0100               	movlb	0	; () banked
  7382  018E52  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  7383                           
  7384                           ; BSR set to: 0
  7385                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7386  018E54  0012               	return		;funcret
  7387  018E56                     __end_of_wait_lcd_set:
  7388                           	opt callstack 0
  7389                           
  7390 ;; *************** function _start_lcd *****************
  7391 ;; Defined at:
  7392 ;;		line 126 in file "eadog.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;		None
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1  [STACK] void 
  7399 ;; Registers used:
  7400 ;;		None
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/3B
  7403 ;;		On exit  : 3F/3B
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7410 ;;Total ram usage:        0 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    6
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_eaDogM_WriteString
  7417 ;;		_send_lcd_cmd_dma
  7418 ;; This function uses a reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text34
  7422  018E56                     __ptext34:
  7423                           	opt callstack 0
  7424  018E56                     _start_lcd:
  7425                           	opt callstack 21
  7426                           
  7427                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  7428                           
  7429                           ; BSR set to: 0
  7430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7431                           ;incstack = 0
  7432  018E56  013B               	movlb	59	; () banked
  7433  018E58  8DFC               	bsf	252,6,b	;volatile
  7434                           
  7435                           ; BSR set to: 59
  7436                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7437  018E5A  0012               	return		;funcret
  7438  018E5C                     __end_of_start_lcd:
  7439                           	opt callstack 0
  7440                           
  7441 ;; *************** function _ringBufS_flush *****************
  7442 ;; Defined at:
  7443 ;;		line 76 in file "ringbufs.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7446 ;;		 -> ring_buf1(67), 
  7447 ;;  clearBuffer     1  [STACK] const char 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1  [STACK] void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7454 ;; Tracked objects:
  7455 ;;		On entry : 3F/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7463 ;;Total ram usage:        0 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:    7
  7466 ;; This function calls:
  7467 ;;		_memset
  7468 ;; This function is called by:
  7469 ;;		_eaDogM_WriteString
  7470 ;;		_send_lcd_cmd_dma
  7471 ;; This function uses a reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text35
  7475  01797A                     __ptext35:
  7476                           	opt callstack 0
  7477  01797A                     _ringBufS_flush:
  7478                           	opt callstack 20
  7479                           
  7480                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7481                           ;stkvar	__this @ sp[(0)+-2]
  7482                           
  7483                           ; BSR set to: 59
  7484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7485                           ;incstack = 0
  7486  01797A  0EFE               	movlw	-2
  7487  01797C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7488  017982  0EFF               	movlw	-1
  7489  017984  006F FF8C  F03D    	movff	plusw1,btemp+11
  7490  01798A  0E42               	movlw	66
  7491  01798C  243C               	addwf	(btemp+10)^0,w,c
  7492  01798E  6ED9               	movwf	fsr2l,c
  7493  017990  0E00               	movlw	0
  7494  017992  203D               	addwfc	(btemp+11)^0,w,c
  7495  017994  6EDA               	movwf	fsr2h,c
  7496  017996  0E00               	movlw	0
  7497  017998  6EDF               	movwf	indf2,c
  7498                           
  7499                           ;ringbufs.c: 79:  _this->head = 0;
  7500                           ;stkvar	__this @ sp[(0)+-2]
  7501  01799A  0EFE               	movlw	-2
  7502  01799C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7503  0179A2  0EFF               	movlw	-1
  7504  0179A4  006F FF8C  F03D    	movff	plusw1,btemp+11
  7505  0179AA  0E40               	movlw	64
  7506  0179AC  243C               	addwf	(btemp+10)^0,w,c
  7507  0179AE  6ED9               	movwf	fsr2l,c
  7508  0179B0  0E00               	movlw	0
  7509  0179B2  203D               	addwfc	(btemp+11)^0,w,c
  7510  0179B4  6EDA               	movwf	fsr2h,c
  7511  0179B6  0E00               	movlw	0
  7512  0179B8  6EDF               	movwf	indf2,c
  7513                           
  7514                           ;ringbufs.c: 80:  _this->tail = 0;
  7515                           ;stkvar	__this @ sp[(0)+-2]
  7516  0179BA  0EFE               	movlw	-2
  7517  0179BC  006F FF8C  F03C    	movff	plusw1,btemp+10
  7518  0179C2  0EFF               	movlw	-1
  7519  0179C4  006F FF8C  F03D    	movff	plusw1,btemp+11
  7520  0179CA  0E41               	movlw	65
  7521  0179CC  243C               	addwf	(btemp+10)^0,w,c
  7522  0179CE  6ED9               	movwf	fsr2l,c
  7523  0179D0  0E00               	movlw	0
  7524  0179D2  203D               	addwfc	(btemp+11)^0,w,c
  7525  0179D4  6EDA               	movwf	fsr2h,c
  7526  0179D6  0E00               	movlw	0
  7527  0179D8  6EDF               	movwf	indf2,c
  7528                           
  7529                           ;ringbufs.c: 81:  if (clearBuffer) {
  7530                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7531  0179DA  0EFD               	movlw	-3
  7532  0179DC  50E3               	movf	plusw1,w,c
  7533  0179DE  B4D8               	btfsc	status,2,c
  7534  0179E0  D011               	goto	l1502
  7535                           
  7536                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7537  0179E2  0E40               	movlw	64
  7538  0179E4  6EE6               	movwf	postinc1,c
  7539  0179E6  0E00               	movlw	0
  7540  0179E8  6EE6               	movwf	postinc1,c
  7541  0179EA  0E00               	movlw	0
  7542  0179EC  6EE6               	movwf	postinc1,c
  7543  0179EE  0E00               	movlw	0
  7544  0179F0  6EE6               	movwf	postinc1,c
  7545                           
  7546                           ;stkvar	__this @ sp[(-4)+-2]
  7547  0179F2  0EFA               	movlw	-6
  7548  0179F4  006F FF8F FFE6     	movff	plusw1,postinc1
  7549  0179FA  006F FF8F FFE6     	movff	plusw1,postinc1
  7550  017A00  ECB8  F0A5         	call	_memset	;wreg free
  7551  017A04                     l1502:
  7552                           
  7553                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7554  017A04  52E5               	movf	postdec1,f,c
  7555  017A06  52E5               	movf	postdec1,f,c
  7556  017A08  52E5               	movf	postdec1,f,c
  7557  017A0A  0012               	return		;funcret
  7558  017A0C                     __end_of_ringBufS_flush:
  7559                           	opt callstack 0
  7560                           
  7561 ;; *************** function _memset *****************
  7562 ;; Defined at:
  7563 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  dest            2  [STACK] PTR void 
  7566 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7567 ;;  c               2  [STACK] int 
  7568 ;;  n               2  [STACK] unsigned int 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  s               2  [STACK] PTR unsigned char 
  7571 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7572 ;;  k               2  [STACK] unsigned int 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  2  [STACK] PTR void 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7586 ;;Total ram usage:        0 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    6
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_ringBufS_init
  7593 ;;		_ringBufS_flush
  7594 ;; This function uses a reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text36
  7598  014B70                     __ptext36:
  7599                           	opt callstack 0
  7600  014B70                     _memset:
  7601                           	opt callstack 0
  7602                           
  7603                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7604  014B70  52E6               	movf	postinc1,f,c
  7605  014B72  52E6               	movf	postinc1,f,c
  7606  014B74  52E6               	movf	postinc1,f,c
  7607  014B76  52E6               	movf	postinc1,f,c
  7608                           
  7609                           ;stkvar	_dest @ sp[(-4)+-2]
  7610                           
  7611                           ;incstack = 0
  7612  014B78  0EFA               	movlw	-6
  7613  014B7A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7614  014B80  0EFB               	movlw	-5
  7615  014B82  006F FF8C  F03D    	movff	plusw1,btemp+11
  7616                           
  7617                           ;stkvar	_s @ sp[(-4)+0]
  7618  014B88  0EFD               	movlw	-3
  7619  014B8A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7620  014B90  0EFC               	movlw	-4
  7621  014B92  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7622                           
  7623                           ;stkvar	_n @ sp[(-4)+-6]
  7624  014B98  0EF6               	movlw	-10
  7625  014B9A  006F FF8C  F032    	movff	plusw1,btemp
  7626  014BA0  0EF7               	movlw	-9
  7627  014BA2  50E3               	movf	plusw1,w,c
  7628  014BA4  1032               	iorwf	btemp^0,w,c
  7629  014BA6  B4D8               	btfsc	status,2,c
  7630  014BA8  D154               	goto	u10420
  7631                           
  7632                           ;stkvar	_c @ sp[(-4)+-4]
  7633                           ;stkvar	_s @ sp[(-4)+0]
  7634  014BAA  0EFC               	movlw	-4
  7635  014BAC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7636  014BB2  0EFD               	movlw	-3
  7637  014BB4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7638  014BBA  0EF8               	movlw	-8
  7639  014BBC  006F FF8F FFDF     	movff	plusw1,indf2
  7640                           
  7641                           ;stkvar	_c @ sp[(-4)+-4]
  7642                           ;stkvar	_n @ sp[(-4)+-6]
  7643                           ;stkvar	_s @ sp[(-4)+0]
  7644  014BC2  0EFC               	movlw	-4
  7645  014BC4  006F FF8C  F03C    	movff	plusw1,btemp+10
  7646  014BCA  0EFD               	movlw	-3
  7647  014BCC  006F FF8C  F03D    	movff	plusw1,btemp+11
  7648  014BD2  0EF6               	movlw	-10
  7649  014BD4  50E3               	movf	plusw1,w,c
  7650  014BD6  263C               	addwf	(btemp+10)^0,f,c
  7651  014BD8  0EF7               	movlw	-9
  7652  014BDA  50E3               	movf	plusw1,w,c
  7653  014BDC  223D               	addwfc	(btemp+11)^0,f,c
  7654  014BDE  0EFF               	movlw	255
  7655  014BE0  243C               	addwf	(btemp+10)^0,w,c
  7656  014BE2  6ED9               	movwf	fsr2l,c
  7657  014BE4  0EFF               	movlw	255
  7658  014BE6  203D               	addwfc	(btemp+11)^0,w,c
  7659  014BE8  6EDA               	movwf	fsr2h,c
  7660  014BEA  0EF8               	movlw	-8
  7661  014BEC  006F FF8F FFDF     	movff	plusw1,indf2
  7662                           
  7663                           ;stkvar	_n @ sp[(-4)+-6]
  7664  014BF2  0EF7               	movlw	-9
  7665  014BF4  50E3               	movf	plusw1,w,c
  7666  014BF6  E108               	bnz	l10452
  7667  014BF8  0EF6               	movlw	-10
  7668  014BFA  006F FF8C  F032    	movff	plusw1,btemp
  7669  014C00  0E03               	movlw	3
  7670  014C02  5E32               	subwf	btemp^0,f,c
  7671  014C04  A0D8               	btfss	status,0,c
  7672  014C06  D125               	goto	u10420
  7673  014C08                     l10452:
  7674                           
  7675                           ;stkvar	_c @ sp[(-4)+-4]
  7676                           ;stkvar	_s @ sp[(-4)+0]
  7677  014C08  0EFC               	movlw	-4
  7678  014C0A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7679  014C10  0EFD               	movlw	-3
  7680  014C12  006F FF8C  F03D    	movff	plusw1,btemp+11
  7681  014C18  0E01               	movlw	1
  7682  014C1A  243C               	addwf	(btemp+10)^0,w,c
  7683  014C1C  6ED9               	movwf	fsr2l,c
  7684  014C1E  0E00               	movlw	0
  7685  014C20  203D               	addwfc	(btemp+11)^0,w,c
  7686  014C22  6EDA               	movwf	fsr2h,c
  7687  014C24  0EF8               	movlw	-8
  7688  014C26  006F FF8F FFDF     	movff	plusw1,indf2
  7689                           
  7690                           ;stkvar	_c @ sp[(-4)+-4]
  7691                           ;stkvar	_s @ sp[(-4)+0]
  7692  014C2C  0EFC               	movlw	-4
  7693  014C2E  006F FF8C  F03C    	movff	plusw1,btemp+10
  7694  014C34  0EFD               	movlw	-3
  7695  014C36  006F FF8C  F03D    	movff	plusw1,btemp+11
  7696  014C3C  0E02               	movlw	2
  7697  014C3E  243C               	addwf	(btemp+10)^0,w,c
  7698  014C40  6ED9               	movwf	fsr2l,c
  7699  014C42  0E00               	movlw	0
  7700  014C44  203D               	addwfc	(btemp+11)^0,w,c
  7701  014C46  6EDA               	movwf	fsr2h,c
  7702  014C48  0EF8               	movlw	-8
  7703  014C4A  006F FF8F FFDF     	movff	plusw1,indf2
  7704                           
  7705                           ;stkvar	_c @ sp[(-4)+-4]
  7706                           ;stkvar	_n @ sp[(-4)+-6]
  7707                           ;stkvar	_s @ sp[(-4)+0]
  7708  014C50  0EFC               	movlw	-4
  7709  014C52  006F FF8C  F03C    	movff	plusw1,btemp+10
  7710  014C58  0EFD               	movlw	-3
  7711  014C5A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7712  014C60  0EF6               	movlw	-10
  7713  014C62  50E3               	movf	plusw1,w,c
  7714  014C64  263C               	addwf	(btemp+10)^0,f,c
  7715  014C66  0EF7               	movlw	-9
  7716  014C68  50E3               	movf	plusw1,w,c
  7717  014C6A  223D               	addwfc	(btemp+11)^0,f,c
  7718  014C6C  0EFE               	movlw	254
  7719  014C6E  243C               	addwf	(btemp+10)^0,w,c
  7720  014C70  6ED9               	movwf	fsr2l,c
  7721  014C72  0EFF               	movlw	255
  7722  014C74  203D               	addwfc	(btemp+11)^0,w,c
  7723  014C76  6EDA               	movwf	fsr2h,c
  7724  014C78  0EF8               	movlw	-8
  7725  014C7A  006F FF8F FFDF     	movff	plusw1,indf2
  7726                           
  7727                           ;stkvar	_c @ sp[(-4)+-4]
  7728                           ;stkvar	_n @ sp[(-4)+-6]
  7729                           ;stkvar	_s @ sp[(-4)+0]
  7730  014C80  0EFC               	movlw	-4
  7731  014C82  006F FF8C  F03C    	movff	plusw1,btemp+10
  7732  014C88  0EFD               	movlw	-3
  7733  014C8A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7734  014C90  0EF6               	movlw	-10
  7735  014C92  50E3               	movf	plusw1,w,c
  7736  014C94  263C               	addwf	(btemp+10)^0,f,c
  7737  014C96  0EF7               	movlw	-9
  7738  014C98  50E3               	movf	plusw1,w,c
  7739  014C9A  223D               	addwfc	(btemp+11)^0,f,c
  7740  014C9C  0EFD               	movlw	253
  7741  014C9E  243C               	addwf	(btemp+10)^0,w,c
  7742  014CA0  6ED9               	movwf	fsr2l,c
  7743  014CA2  0EFF               	movlw	255
  7744  014CA4  203D               	addwfc	(btemp+11)^0,w,c
  7745  014CA6  6EDA               	movwf	fsr2h,c
  7746  014CA8  0EF8               	movlw	-8
  7747  014CAA  006F FF8F FFDF     	movff	plusw1,indf2
  7748                           
  7749                           ;stkvar	_n @ sp[(-4)+-6]
  7750  014CB0  0EF7               	movlw	-9
  7751  014CB2  50E3               	movf	plusw1,w,c
  7752  014CB4  E108               	bnz	l10458
  7753  014CB6  0EF6               	movlw	-10
  7754  014CB8  006F FF8C  F032    	movff	plusw1,btemp
  7755  014CBE  0E07               	movlw	7
  7756  014CC0  5E32               	subwf	btemp^0,f,c
  7757  014CC2  A0D8               	btfss	status,0,c
  7758  014CC4  D0C6               	goto	u10420
  7759  014CC6                     l10458:
  7760                           
  7761                           ;stkvar	_c @ sp[(-4)+-4]
  7762                           ;stkvar	_s @ sp[(-4)+0]
  7763  014CC6  0EFC               	movlw	-4
  7764  014CC8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7765  014CCE  0EFD               	movlw	-3
  7766  014CD0  006F FF8C  F03D    	movff	plusw1,btemp+11
  7767  014CD6  0E03               	movlw	3
  7768  014CD8  243C               	addwf	(btemp+10)^0,w,c
  7769  014CDA  6ED9               	movwf	fsr2l,c
  7770  014CDC  0E00               	movlw	0
  7771  014CDE  203D               	addwfc	(btemp+11)^0,w,c
  7772  014CE0  6EDA               	movwf	fsr2h,c
  7773  014CE2  0EF8               	movlw	-8
  7774  014CE4  006F FF8F FFDF     	movff	plusw1,indf2
  7775                           
  7776                           ;stkvar	_c @ sp[(-4)+-4]
  7777                           ;stkvar	_n @ sp[(-4)+-6]
  7778                           ;stkvar	_s @ sp[(-4)+0]
  7779  014CEA  0EFC               	movlw	-4
  7780  014CEC  006F FF8C  F03C    	movff	plusw1,btemp+10
  7781  014CF2  0EFD               	movlw	-3
  7782  014CF4  006F FF8C  F03D    	movff	plusw1,btemp+11
  7783  014CFA  0EF6               	movlw	-10
  7784  014CFC  50E3               	movf	plusw1,w,c
  7785  014CFE  263C               	addwf	(btemp+10)^0,f,c
  7786  014D00  0EF7               	movlw	-9
  7787  014D02  50E3               	movf	plusw1,w,c
  7788  014D04  223D               	addwfc	(btemp+11)^0,f,c
  7789  014D06  0EFC               	movlw	252
  7790  014D08  243C               	addwf	(btemp+10)^0,w,c
  7791  014D0A  6ED9               	movwf	fsr2l,c
  7792  014D0C  0EFF               	movlw	255
  7793  014D0E  203D               	addwfc	(btemp+11)^0,w,c
  7794  014D10  6EDA               	movwf	fsr2h,c
  7795  014D12  0EF8               	movlw	-8
  7796  014D14  006F FF8F FFDF     	movff	plusw1,indf2
  7797                           
  7798                           ;stkvar	_n @ sp[(-4)+-6]
  7799  014D1A  0EF7               	movlw	-9
  7800  014D1C  50E3               	movf	plusw1,w,c
  7801  014D1E  E108               	bnz	l10464
  7802  014D20  0EF6               	movlw	-10
  7803  014D22  006F FF8C  F032    	movff	plusw1,btemp
  7804  014D28  0E09               	movlw	9
  7805  014D2A  5E32               	subwf	btemp^0,f,c
  7806  014D2C  A0D8               	btfss	status,0,c
  7807  014D2E  D091               	goto	u10420
  7808  014D30                     l10464:
  7809                           
  7810                           ;stkvar	_s @ sp[(-4)+0]
  7811  014D30  0EFC               	movlw	-4
  7812  014D32  006F FF8C  F03C    	movff	plusw1,btemp+10
  7813  014D38  1E3C               	comf	(btemp+10)^0,f,c
  7814  014D3A  0EFD               	movlw	-3
  7815  014D3C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7816  014D42  1E3D               	comf	(btemp+11)^0,f,c
  7817  014D44  2A3C               	incf	(btemp+10)^0,f,c
  7818  014D46  B4D8               	btfsc	status,2,c
  7819  014D48  2A3D               	incf	(btemp+11)^0,f,c
  7820  014D4A  0E03               	movlw	3
  7821  014D4C  163C               	andwf	(btemp+10)^0,f,c
  7822  014D4E  0E00               	movlw	0
  7823  014D50  163D               	andwf	(btemp+11)^0,f,c
  7824                           
  7825                           ;stkvar	_k @ sp[(-4)+2]
  7826  014D52  0EFE               	movlw	-2
  7827  014D54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7828  014D5A  0EFF               	movlw	-1
  7829  014D5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7830                           
  7831                           ;stkvar	_k @ sp[(-4)+2]
  7832                           ;stkvar	_s @ sp[(-4)+0]
  7833  014D62  0EFC               	movlw	-4
  7834  014D64  50E3               	movf	plusw1,w,c
  7835  014D66  6E32               	movwf	btemp^0,c
  7836  014D68  0EFE               	movlw	-2
  7837  014D6A  50E3               	movf	plusw1,w,c
  7838  014D6C  2632               	addwf	btemp^0,f,c
  7839  014D6E  0EFC               	movlw	-4
  7840  014D70  0060  F0CB  FFE3   	movff	btemp,plusw1
  7841  014D76  0EFD               	movlw	-3
  7842  014D78  50E3               	movf	plusw1,w,c
  7843  014D7A  6E32               	movwf	btemp^0,c
  7844  014D7C  0EFF               	movlw	-1
  7845  014D7E  50E3               	movf	plusw1,w,c
  7846  014D80  2232               	addwfc	btemp^0,f,c
  7847  014D82  0EFD               	movlw	-3
  7848  014D84  0060  F0CB  FFE3   	movff	btemp,plusw1
  7849                           
  7850                           ;stkvar	_k @ sp[(-4)+2]
  7851                           ;stkvar	_n @ sp[(-4)+-6]
  7852  014D8A  0EF6               	movlw	-10
  7853  014D8C  50E3               	movf	plusw1,w,c
  7854  014D8E  6E32               	movwf	btemp^0,c
  7855  014D90  0EFE               	movlw	-2
  7856  014D92  50E3               	movf	plusw1,w,c
  7857  014D94  5E32               	subwf	btemp^0,f,c
  7858  014D96  0EF6               	movlw	-10
  7859  014D98  0060  F0CB  FFE3   	movff	btemp,plusw1
  7860  014D9E  0EF7               	movlw	-9
  7861  014DA0  50E3               	movf	plusw1,w,c
  7862  014DA2  6E32               	movwf	btemp^0,c
  7863  014DA4  0EFF               	movlw	-1
  7864  014DA6  50E3               	movf	plusw1,w,c
  7865  014DA8  5A32               	subwfb	btemp^0,f,c
  7866  014DAA  0EF7               	movlw	-9
  7867  014DAC  0060  F0CB  FFE3   	movff	btemp,plusw1
  7868  014DB2  0EFC               	movlw	252
  7869  014DB4  6E3C               	movwf	(btemp+10)^0,c
  7870  014DB6  0EFF               	movlw	255
  7871  014DB8  6E3D               	movwf	(btemp+11)^0,c
  7872                           
  7873                           ;stkvar	_n @ sp[(-4)+-6]
  7874  014DBA  0EF6               	movlw	-10
  7875  014DBC  006F FF8C  F032    	movff	plusw1,btemp
  7876  014DC2  503C               	movf	(btemp+10)^0,w,c
  7877  014DC4  1632               	andwf	btemp^0,f,c
  7878  014DC6  0EF6               	movlw	-10
  7879  014DC8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7880  014DCE  0EF7               	movlw	-9
  7881  014DD0  006F FF8C  F032    	movff	plusw1,btemp
  7882  014DD6  503D               	movf	(btemp+11)^0,w,c
  7883  014DD8  1632               	andwf	btemp^0,f,c
  7884  014DDA  0EF7               	movlw	-9
  7885  014DDC  D02E               	goto	L6
  7886  014DDE                     l10472:
  7887                           
  7888                           ;stkvar	_c @ sp[(-4)+-4]
  7889                           ;stkvar	_s @ sp[(-4)+0]
  7890  014DDE  0EFC               	movlw	-4
  7891  014DE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7892  014DE6  0EFD               	movlw	-3
  7893  014DE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7894  014DEE  0EF8               	movlw	-8
  7895  014DF0  006F FF8F FFDF     	movff	plusw1,indf2
  7896                           
  7897                           ;stkvar	_n @ sp[(-4)+-6]
  7898  014DF6  0EF6               	movlw	-10
  7899  014DF8  006F FF8C  F032    	movff	plusw1,btemp
  7900  014DFE  0E01               	movlw	1
  7901  014E00  5E32               	subwf	btemp^0,f,c
  7902  014E02  0EF6               	movlw	-10
  7903  014E04  0060  F0CB  FFE3   	movff	btemp,plusw1
  7904  014E0A  0EF7               	movlw	-9
  7905  014E0C  006F FF8C  F032    	movff	plusw1,btemp
  7906  014E12  0E00               	movlw	0
  7907  014E14  5A32               	subwfb	btemp^0,f,c
  7908  014E16  0EF7               	movlw	-9
  7909  014E18  0060  F0CB  FFE3   	movff	btemp,plusw1
  7910                           
  7911                           ;stkvar	_s @ sp[(-4)+0]
  7912  014E1E  0EFC               	movlw	-4
  7913  014E20  50E3               	movf	plusw1,w,c
  7914  014E22  0F01               	addlw	1
  7915  014E24  6E32               	movwf	btemp^0,c
  7916  014E26  0EFC               	movlw	-4
  7917  014E28  0060  F0CB  FFE3   	movff	btemp,plusw1
  7918  014E2E  6A32               	clrf	btemp^0,c
  7919  014E30  0EFD               	movlw	-3
  7920  014E32  50E3               	movf	plusw1,w,c
  7921  014E34  2032               	addwfc	btemp^0,w,c
  7922  014E36  6E32               	movwf	btemp^0,c
  7923  014E38  0EFD               	movlw	-3
  7924  014E3A                     L6:
  7925  014E3A  0060  F0CB  FFE3   	movff	btemp,plusw1
  7926                           
  7927                           ;stkvar	_n @ sp[(-4)+-6]
  7928  014E40  0EF6               	movlw	-10
  7929  014E42  006F FF8C  F032    	movff	plusw1,btemp
  7930  014E48  0EF7               	movlw	-9
  7931  014E4A  50E3               	movf	plusw1,w,c
  7932  014E4C  1032               	iorwf	btemp^0,w,c
  7933  014E4E  A4D8               	btfss	status,2,c
  7934  014E50  D7C6               	goto	l10472
  7935  014E52                     u10420:
  7936                           
  7937                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7938  014E52  0EF6               	movlw	246
  7939  014E54  26E1               	addwf	fsr1l,f,c
  7940  014E56  0EFF               	movlw	255
  7941  014E58  22E2               	addwfc	fsr1h,f,c
  7942  014E5A  0012               	return		;funcret
  7943  014E5C                     __end_of_memset:
  7944                           	opt callstack 0
  7945                           
  7946 ;; *************** function _printf *****************
  7947 ;; Defined at:
  7948 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  fmt             2  [STACK] PTR const unsigned char 
  7951 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  ap              2  [STACK] PTR void [1]
  7954 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7955 ;;  ret             2    0        int 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2  [STACK] int 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7960 ;; Tracked objects:
  7961 ;;		On entry : 3F/3B
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7969 ;;Total ram usage:        0 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:   14
  7972 ;; This function calls:
  7973 ;;		_vfprintf
  7974 ;; This function is called by:
  7975 ;;		_eaDogM_WriteString
  7976 ;;		_send_lcd_cmd_dma
  7977 ;; This function uses a reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text37
  7981  018008                     __ptext37:
  7982                           	opt callstack 0
  7983  018008                     _printf:
  7984                           	opt callstack 0
  7985                           
  7986                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7987  018008  52E6               	movf	postinc1,f,c
  7988  01800A  52E6               	movf	postinc1,f,c
  7989                           
  7990                           ;stkvar	?_printf @ sp[(-2)+-3]
  7991                           
  7992                           ;incstack = 0
  7993  01800C  0EFB               	movlw	251
  7994  01800E  24E1               	addwf	fsr1l,w,c
  7995  018010  6E3C               	movwf	(btemp+10)^0,c
  7996  018012  0EFF               	movlw	255
  7997  018014  20E2               	addwfc	fsr1h,w,c
  7998  018016  6E3D               	movwf	(btemp+11)^0,c
  7999                           
  8000                           ;stkvar	_ap @ sp[(-2)+0]
  8001  018018  0EFF               	movlw	-1
  8002  01801A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8003  018020  0EFE               	movlw	-2
  8004  018022  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8005                           
  8006                           ;stkvar	_ap @ sp[(-2)+0]
  8007  018028  0EFE               	movlw	254
  8008  01802A  24E1               	addwf	fsr1l,w,c
  8009  01802C  6E32               	movwf	btemp^0,c
  8010  01802E  0EFF               	movlw	255
  8011  018030  20E2               	addwfc	fsr1h,w,c
  8012  018032  6E33               	movwf	(btemp+1)^0,c
  8013  018034  0060  F0CB  FFE6   	movff	btemp,postinc1
  8014  01803A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8015                           
  8016                           ;stkvar	_fmt @ sp[(-4)+-3]
  8017  018040  0EF9               	movlw	-7
  8018  018042  006F FF8F FFE6     	movff	plusw1,postinc1
  8019  018048  006F FF8F FFE6     	movff	plusw1,postinc1
  8020  01804E  0E00               	movlw	0
  8021  018050  6EE6               	movwf	postinc1,c
  8022  018052  0E00               	movlw	0
  8023  018054  6EE6               	movwf	postinc1,c
  8024  018056  EC79  F0BB         	call	_vfprintf	;wreg free
  8025                           
  8026                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8027  01805A  52E5               	movf	postdec1,f,c
  8028  01805C  52E5               	movf	postdec1,f,c
  8029  01805E  52E5               	movf	postdec1,f,c
  8030  018060  50E7               	movf	indf1,w,c
  8031  018062  5EE1               	subwf	fsr1l,f,c
  8032  018064  0E00               	movlw	0
  8033  018066  5AE2               	subwfb	fsr1h,f,c
  8034  018068  0012               	return		;funcret
  8035  01806A                     __end_of_printf:
  8036                           	opt callstack 0
  8037                           
  8038 ;; *************** function _vfprintf *****************
  8039 ;; Defined at:
  8040 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8043 ;;		 -> f(6), NULL(0), 
  8044 ;;  fmt             2  [STACK] PTR const unsigned char 
  8045 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8046 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8047 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8048 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8049 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8050 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8051 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8052 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8053 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8054 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8055 ;;  ap              2  [STACK] PTR PTR void 
  8056 ;;		 -> ap(2), ap(2), 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  cfmt            2  [STACK] PTR unsigned char 
  8059 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8060 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8061 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8062 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8063 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8064 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8065 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8066 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8067 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8068 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  2  [STACK] int 
  8071 ;; Registers used:
  8072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/5
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8082 ;;Total ram usage:        0 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; Hardware stack levels required when called:   13
  8085 ;; This function calls:
  8086 ;;		_vfpfcnvrt
  8087 ;; This function is called by:
  8088 ;;		_sprintf
  8089 ;;		_printf
  8090 ;; This function uses a reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text38
  8094  0176F2                     __ptext38:
  8095                           	opt callstack 0
  8096  0176F2                     _vfprintf:
  8097                           	opt callstack 0
  8098                           
  8099                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8100  0176F2  52E6               	movf	postinc1,f,c
  8101  0176F4  52E6               	movf	postinc1,f,c
  8102                           
  8103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8104                           ;stkvar	_fmt @ sp[(-2)+-4]
  8105                           
  8106                           ;incstack = 0
  8107  0176F6  0EFA               	movlw	-6
  8108  0176F8  006F FF8C  F03C    	movff	plusw1,btemp+10
  8109  0176FE  0EFB               	movlw	-5
  8110  017700  006F FF8C  F03D    	movff	plusw1,btemp+11
  8111                           
  8112                           ;stkvar	_cfmt @ sp[(-2)+0]
  8113  017706  0EFF               	movlw	-1
  8114  017708  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8115  01770E  0EFE               	movlw	-2
  8116  017710  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8117                           
  8118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8119  017716  6A19               	clrf	_nout^0,c
  8120  017718  6A1A               	clrf	(_nout+1)^0,c
  8121                           
  8122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8123  01771A  D020               	goto	l10486
  8124  01771C                     l10484:
  8125                           
  8126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8127                           ;stkvar	_ap @ sp[(-2)+-6]
  8128  01771C  0EF8               	movlw	-8
  8129  01771E  006F FF8F FFE6     	movff	plusw1,postinc1
  8130  017724  006F FF8F FFE6     	movff	plusw1,postinc1
  8131                           
  8132                           ;stkvar	_cfmt @ sp[(-4)+0]
  8133  01772A  0EFC               	movlw	252
  8134  01772C  24E1               	addwf	fsr1l,w,c
  8135  01772E  6E32               	movwf	btemp^0,c
  8136  017730  0EFF               	movlw	255
  8137  017732  20E2               	addwfc	fsr1h,w,c
  8138  017734  6E33               	movwf	(btemp+1)^0,c
  8139  017736  0060  F0CB  FFE6   	movff	btemp,postinc1
  8140  01773C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8141                           
  8142                           ;stkvar	_fp @ sp[(-6)+-2]
  8143  017742  0EF8               	movlw	-8
  8144  017744  006F FF8F FFE6     	movff	plusw1,postinc1
  8145  01774A  006F FF8F FFE6     	movff	plusw1,postinc1
  8146  017750  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8147  017754  5032               	movf	btemp^0,w,c
  8148  017756  2619               	addwf	_nout^0,f,c
  8149  017758  5033               	movf	(btemp+1)^0,w,c
  8150  01775A  221A               	addwfc	(_nout+1)^0,f,c
  8151  01775C                     l10486:
  8152                           
  8153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8154                           ;stkvar	_cfmt @ sp[(-2)+0]
  8155  01775C  50E1               	movf	fsr1l,w,c
  8156  01775E  0FFE               	addlw	-2
  8157  017760  6ED9               	movwf	fsr2l,c
  8158  017762  50E2               	movf	fsr1h,w,c
  8159  017764  6EDA               	movwf	fsr2h,c
  8160  017766  0EFF               	movlw	255
  8161  017768  22DA               	addwfc	fsr2h,f,c
  8162  01776A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8163  017770  006F FF77 FFF7     	movff	postdec2,tblptrh
  8164  017776                     	if	0	;tblptru may be non-zero
  8165  017776                     	endif
  8166  017776                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8167  017776  0E00               	movlw	low (__mediumconst shr (0+16))
  8168  017778  6EF8               	movwf	tblptru,c
  8169  01777A                     	endif
  8170  01777A  0008               	tblrd		*
  8171  01777C  50F5               	movf	tablat,w,c
  8172  01777E  0900               	iorlw	0
  8173  017780  A4D8               	btfss	status,2,c
  8174  017782  D7CC               	goto	l10484
  8175                           
  8176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8177  017784  0060  F064  F032   	movff	_nout,btemp
  8178  01778A  0060  F068  F033   	movff	_nout+1,btemp+1
  8179                           
  8180                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8181  017790  0EF8               	movlw	248
  8182  017792  26E1               	addwf	fsr1l,f,c
  8183  017794  0EFF               	movlw	255
  8184  017796  22E2               	addwfc	fsr1h,f,c
  8185  017798  0012               	return		;funcret
  8186  01779A                     __end_of_vfprintf:
  8187                           	opt callstack 0
  8188                           
  8189 ;; *************** function _vfpfcnvrt *****************
  8190 ;; Defined at:
  8191 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8194 ;;		 -> f(6), NULL(0), 
  8195 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8196 ;;		 -> cfmt(2), 
  8197 ;;  ap              2  [STACK] PTR PTR void 
  8198 ;;		 -> ap(2), ap(2), 
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;  llu             8  [STACK] unsigned long long 
  8201 ;;  ll              8  [STACK] long long 
  8202 ;;  f               4  [STACK] long long 
  8203 ;;  ct              3  [STACK] unsigned char [3]
  8204 ;;  vp              3    0        PTR void 
  8205 ;;  cp              2  [STACK] PTR unsigned char 
  8206 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8207 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  8208 ;;		 -> STR_3(6), V(188), 
  8209 ;;  i               2    0        int 
  8210 ;;  done            2    0        int 
  8211 ;;  c               1  [STACK] unsigned char 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  2  [STACK] int 
  8214 ;; Registers used:
  8215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/5
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8225 ;;Total ram usage:        0 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:   12
  8228 ;; This function calls:
  8229 ;;		_atoi
  8230 ;;		_ctoa
  8231 ;;		_dtoa
  8232 ;;		_efgtoa
  8233 ;;		_fputc
  8234 ;;		_isdigit
  8235 ;;		_isupper
  8236 ;;		_stoa
  8237 ;;		_strncmp
  8238 ;;		_tolower
  8239 ;;		_xtoa
  8240 ;; This function is called by:
  8241 ;;		_vfprintf
  8242 ;; This function uses a reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text39
  8246  011244                     __ptext39:
  8247                           	opt callstack 0
  8248  011244                     _vfpfcnvrt:
  8249                           	opt callstack 0
  8250                           
  8251                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8252  011244  0E20               	movlw	32
  8253  011246  26E1               	addwf	fsr1l,f,c
  8254  011248  0E00               	movlw	0
  8255  01124A  22E2               	addwfc	fsr1h,f,c
  8256                           
  8257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8258                           ;stkvar	_fmt @ sp[(-32)+-4]
  8259                           
  8260                           ;incstack = 0
  8261  01124C  0EDC               	movlw	-36
  8262  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8263  011254  0EDD               	movlw	-35
  8264  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8265  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8266  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8267  011268                     	if	0	;tblptru may be non-zero
  8268  011268                     	endif
  8269  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8270  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8271  01126A  6EF8               	movwf	tblptru,c
  8272  01126C                     	endif
  8273  01126C  0008               	tblrd		*
  8274  01126E  50F5               	movf	tablat,w,c
  8275  011270  0A25               	xorlw	37
  8276  011272  A4D8               	btfss	status,2,c
  8277  011274  EF92  F08E         	goto	l10430
  8278                           
  8279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8280                           ;stkvar	_fmt @ sp[(-32)+-4]
  8281  011278  0EDC               	movlw	-36
  8282  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8283  011280  0EDD               	movlw	-35
  8284  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8285  011288  2ADE               	incf	postinc2,f,c
  8286  01128A  0E00               	movlw	0
  8287  01128C  22DD               	addwfc	postdec2,f,c
  8288                           
  8289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8290  01128E  6A1B               	clrf	_width^0,c
  8291  011290  6A1C               	clrf	(_width+1)^0,c
  8292  011292  6A1F               	clrf	_flags^0,c
  8293  011294  6A20               	clrf	(_flags+1)^0,c
  8294                           
  8295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8296  011296  681D               	setf	_prec^0,c
  8297  011298  681E               	setf	(_prec+1)^0,c
  8298                           
  8299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8300                           ;stkvar	_fmt @ sp[(-32)+-4]
  8301  01129A  0EDC               	movlw	-36
  8302  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8303  0112A2  0EDD               	movlw	-35
  8304  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8305  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8306  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8307  0112B6                     	if	0	;tblptru may be non-zero
  8308  0112B6                     	endif
  8309  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8310  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8311  0112B8  6EF8               	movwf	tblptru,c
  8312  0112BA                     	endif
  8313  0112BA  0008               	tblrd		*
  8314  0112BC  50F5               	movf	tablat,w,c
  8315  0112BE  0A2A               	xorlw	42
  8316  0112C0  A4D8               	btfss	status,2,c
  8317  0112C2  D031               	goto	l10294
  8318                           
  8319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8320                           ;stkvar	_fmt @ sp[(-32)+-4]
  8321  0112C4  0EDC               	movlw	-36
  8322  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8323  0112CC  0EDD               	movlw	-35
  8324  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8325  0112D4  2ADE               	incf	postinc2,f,c
  8326  0112D6  0E00               	movlw	0
  8327  0112D8  22DD               	addwfc	postdec2,f,c
  8328                           
  8329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8330                           ;stkvar	_ap @ sp[(-32)+-6]
  8331  0112DA  0EDA               	movlw	-38
  8332  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8333  0112E2  0EDB               	movlw	-37
  8334  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8335  0112EA  0E02               	movlw	2
  8336  0112EC  5EDE               	subwf	postinc2,f,c
  8337  0112EE  0E00               	movlw	0
  8338  0112F0  5ADD               	subwfb	postdec2,f,c
  8339  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  8340  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  8341  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8342  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8343  01130A  006F FF78  F01B    	movff	postinc2,_width
  8344  011310  006F FF74  F01C    	movff	postdec2,_width+1
  8345                           
  8346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8347  011316  AE1C               	btfss	(_width+1)^0,7,c
  8348  011318  D066               	goto	u10180
  8349                           
  8350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8351  01131A  801F               	bsf	_flags^0,0,c
  8352                           
  8353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8354  01131C  6C1B               	negf	_width^0,c
  8355  01131E  1E1C               	comf	(_width+1)^0,f,c
  8356  011320  B0D8               	btfsc	status,0,c
  8357  011322  2A1C               	incf	(_width+1)^0,f,c
  8358  011324  D060               	goto	u10180
  8359  011326                     l10294:
  8360                           
  8361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8362                           ;stkvar	_fmt @ sp[(-32)+-4]
  8363  011326  0EDC               	movlw	-36
  8364  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8365  01132E  0EDD               	movlw	-35
  8366  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8367  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  8368  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  8369  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8370  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8371  01134E  EC2F  F0AB         	call	_atoi	;wreg free
  8372  011352  0060  F0C8  F01B   	movff	btemp,_width
  8373  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  8374                           
  8375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8376  01135E  D00B               	goto	l10298
  8377  011360                     l10296:
  8378                           
  8379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8380                           ;stkvar	_fmt @ sp[(-32)+-4]
  8381  011360  0EDC               	movlw	-36
  8382  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8383  011368  0EDD               	movlw	-35
  8384  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8385  011370  2ADE               	incf	postinc2,f,c
  8386  011372  0E00               	movlw	0
  8387  011374  22DD               	addwfc	postdec2,f,c
  8388  011376                     l10298:
  8389  011376  0ED0               	movlw	208
  8390  011378  6E3C               	movwf	(btemp+10)^0,c
  8391  01137A  0EFF               	movlw	255
  8392  01137C  6E3D               	movwf	(btemp+11)^0,c
  8393                           
  8394                           ;stkvar	_fmt @ sp[(-32)+-4]
  8395  01137E  0EDC               	movlw	-36
  8396  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8397  011386  0EDD               	movlw	-35
  8398  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8399  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8400  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8401  01139A                     	if	0	;tblptru may be non-zero
  8402  01139A                     	endif
  8403  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8404  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8405  01139C  6EF8               	movwf	tblptru,c
  8406  01139E                     	endif
  8407  01139E  0008               	tblrd		*
  8408  0113A0  50F5               	movf	tablat,w,c
  8409  0113A2  6E3A               	movwf	(btemp+8)^0,c
  8410  0113A4  6A3B               	clrf	(btemp+9)^0,c
  8411  0113A6  503C               	movf	(btemp+10)^0,w,c
  8412  0113A8  263A               	addwf	(btemp+8)^0,f,c
  8413  0113AA  503D               	movf	(btemp+11)^0,w,c
  8414  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  8415  0113AE  503B               	movf	(btemp+9)^0,w,c
  8416  0113B0  E106               	bnz	u10160
  8417  0113B2  0E0A               	movlw	10
  8418  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  8419  0113B6  B0D8               	btfsc	status,0,c
  8420  0113B8  D002               	goto	u10160
  8421  0113BA  0E01               	movlw	1
  8422  0113BC  D001               	goto	u10170
  8423  0113BE                     u10160:
  8424  0113BE  0E00               	movlw	0
  8425  0113C0                     u10170:
  8426  0113C0  6E3C               	movwf	(btemp+10)^0,c
  8427  0113C2  6A3D               	clrf	(btemp+11)^0,c
  8428                           
  8429                           ;stkvar	_vfpfcnvrt$4648 @ sp[(-32)+4]
  8430  0113C4  0EE4               	movlw	-28
  8431  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8432  0113CC  0EE5               	movlw	-27
  8433  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8434                           
  8435                           ;stkvar	_vfpfcnvrt$4648 @ sp[(-32)+4]
  8436  0113D4  0EE4               	movlw	-28
  8437  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  8438  0113DC  0EE5               	movlw	-27
  8439  0113DE  50E3               	movf	plusw1,w,c
  8440  0113E0  1032               	iorwf	btemp^0,w,c
  8441  0113E2  A4D8               	btfss	status,2,c
  8442  0113E4  D7BD               	goto	l10296
  8443  0113E6                     u10180:
  8444                           
  8445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8446                           ;stkvar	_fmt @ sp[(-32)+-4]
  8447  0113E6  0EDC               	movlw	-36
  8448  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8449  0113EE  0EDD               	movlw	-35
  8450  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8451  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8452  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8453  011402                     	if	0	;tblptru may be non-zero
  8454  011402                     	endif
  8455  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8456  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8457  011404  6EF8               	movwf	tblptru,c
  8458  011406                     	endif
  8459  011406  0008               	tblrd		*
  8460  011408  50F5               	movf	tablat,w,c
  8461  01140A  0A2E               	xorlw	46
  8462  01140C  A4D8               	btfss	status,2,c
  8463  01140E  D0AC               	goto	u10230
  8464                           
  8465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8466  011410  6A1D               	clrf	_prec^0,c
  8467  011412  6A1E               	clrf	(_prec+1)^0,c
  8468                           
  8469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8470                           ;stkvar	_fmt @ sp[(-32)+-4]
  8471  011414  0EDC               	movlw	-36
  8472  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8473  01141C  0EDD               	movlw	-35
  8474  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8475  011424  2ADE               	incf	postinc2,f,c
  8476  011426  0E00               	movlw	0
  8477  011428  22DD               	addwfc	postdec2,f,c
  8478                           
  8479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8480                           ;stkvar	_fmt @ sp[(-32)+-4]
  8481  01142A  0EDC               	movlw	-36
  8482  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8483  011432  0EDD               	movlw	-35
  8484  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8485  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8486  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8487  011446                     	if	0	;tblptru may be non-zero
  8488  011446                     	endif
  8489  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8490  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8491  011448  6EF8               	movwf	tblptru,c
  8492  01144A                     	endif
  8493  01144A  0008               	tblrd		*
  8494  01144C  50F5               	movf	tablat,w,c
  8495  01144E  0A2A               	xorlw	42
  8496  011450  A4D8               	btfss	status,2,c
  8497  011452  D02A               	goto	l10316
  8498                           
  8499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8500                           ;stkvar	_fmt @ sp[(-32)+-4]
  8501  011454  0EDC               	movlw	-36
  8502  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8503  01145C  0EDD               	movlw	-35
  8504  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8505  011464  2ADE               	incf	postinc2,f,c
  8506  011466  0E00               	movlw	0
  8507  011468  22DD               	addwfc	postdec2,f,c
  8508                           
  8509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8510                           ;stkvar	_ap @ sp[(-32)+-6]
  8511  01146A  0EDA               	movlw	-38
  8512  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8513  011472  0EDB               	movlw	-37
  8514  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8515  01147A  0E02               	movlw	2
  8516  01147C  5EDE               	subwf	postinc2,f,c
  8517  01147E  0E00               	movlw	0
  8518  011480  5ADD               	subwfb	postdec2,f,c
  8519  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  8520  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  8521  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8522  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8523  01149A  006F FF78  F01D    	movff	postinc2,_prec
  8524  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  8525                           
  8526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8527  0114A6  D060               	goto	u10230
  8528  0114A8                     l10316:
  8529                           
  8530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8531                           ;stkvar	_fmt @ sp[(-32)+-4]
  8532  0114A8  0EDC               	movlw	-36
  8533  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8534  0114B0  0EDD               	movlw	-35
  8535  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8536  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  8537  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  8538  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8539  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8540  0114D0  EC2F  F0AB         	call	_atoi	;wreg free
  8541  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  8542  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  8543                           
  8544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8545  0114E0  D00B               	goto	l10320
  8546  0114E2                     l10318:
  8547                           
  8548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8549                           ;stkvar	_fmt @ sp[(-32)+-4]
  8550  0114E2  0EDC               	movlw	-36
  8551  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8552  0114EA  0EDD               	movlw	-35
  8553  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8554  0114F2  2ADE               	incf	postinc2,f,c
  8555  0114F4  0E00               	movlw	0
  8556  0114F6  22DD               	addwfc	postdec2,f,c
  8557  0114F8                     l10320:
  8558  0114F8  0ED0               	movlw	208
  8559  0114FA  6E3C               	movwf	(btemp+10)^0,c
  8560  0114FC  0EFF               	movlw	255
  8561  0114FE  6E3D               	movwf	(btemp+11)^0,c
  8562                           
  8563                           ;stkvar	_fmt @ sp[(-32)+-4]
  8564  011500  0EDC               	movlw	-36
  8565  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8566  011508  0EDD               	movlw	-35
  8567  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8568  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8569  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8570  01151C                     	if	0	;tblptru may be non-zero
  8571  01151C                     	endif
  8572  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8573  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8574  01151E  6EF8               	movwf	tblptru,c
  8575  011520                     	endif
  8576  011520  0008               	tblrd		*
  8577  011522  50F5               	movf	tablat,w,c
  8578  011524  6E3A               	movwf	(btemp+8)^0,c
  8579  011526  6A3B               	clrf	(btemp+9)^0,c
  8580  011528  503C               	movf	(btemp+10)^0,w,c
  8581  01152A  263A               	addwf	(btemp+8)^0,f,c
  8582  01152C  503D               	movf	(btemp+11)^0,w,c
  8583  01152E  223B               	addwfc	(btemp+9)^0,f,c
  8584  011530  503B               	movf	(btemp+9)^0,w,c
  8585  011532  E106               	bnz	u10210
  8586  011534  0E0A               	movlw	10
  8587  011536  5C3A               	subwf	(btemp+8)^0,w,c
  8588  011538  B0D8               	btfsc	status,0,c
  8589  01153A  D002               	goto	u10210
  8590  01153C  0E01               	movlw	1
  8591  01153E  D001               	goto	u10220
  8592  011540                     u10210:
  8593  011540  0E00               	movlw	0
  8594  011542                     u10220:
  8595  011542  6E3C               	movwf	(btemp+10)^0,c
  8596  011544  6A3D               	clrf	(btemp+11)^0,c
  8597                           
  8598                           ;stkvar	_vfpfcnvrt$4649 @ sp[(-32)+0]
  8599  011546  0EE0               	movlw	-32
  8600  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8601  01154E  0EE1               	movlw	-31
  8602  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8603                           
  8604                           ;stkvar	_vfpfcnvrt$4649 @ sp[(-32)+0]
  8605  011556  0EE0               	movlw	-32
  8606  011558  006F FF8C  F032    	movff	plusw1,btemp
  8607  01155E  0EE1               	movlw	-31
  8608  011560  50E3               	movf	plusw1,w,c
  8609  011562  1032               	iorwf	btemp^0,w,c
  8610  011564  A4D8               	btfss	status,2,c
  8611  011566  D7BD               	goto	l10318
  8612  011568                     u10230:
  8613                           
  8614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8615                           ;stkvar	_fmt @ sp[(-32)+-4]
  8616  011568  0EDC               	movlw	-36
  8617  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8618  011570  0EDD               	movlw	-35
  8619  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8620  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8621  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8622  011584                     	if	0	;tblptru may be non-zero
  8623  011584                     	endif
  8624  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8625  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8626  011586  6EF8               	movwf	tblptru,c
  8627  011588                     	endif
  8628  011588  0008               	tblrd		*
  8629  01158A  50F5               	movf	tablat,w,c
  8630  01158C  6EE6               	movwf	postinc1,c
  8631  01158E  0E00               	movlw	0
  8632  011590  6EE6               	movwf	postinc1,c
  8633  011592  EC1D  F0BE         	call	_tolower	;wreg free
  8634                           
  8635                           ;stkvar	_ct @ sp[(-32)+26]
  8636  011596  0EFA               	movlw	-6
  8637  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  8638                           
  8639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8640                           ;stkvar	_ct @ sp[(-32)+26]
  8641  01159E  0EFA               	movlw	-6
  8642  0115A0  50E3               	movf	plusw1,w,c
  8643  0115A2  B4D8               	btfsc	status,2,c
  8644  0115A4  D05B               	goto	l10336
  8645                           
  8646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8647                           ;stkvar	_ct @ sp[(-32)+26]
  8648  0115A6  0EFB               	movlw	251
  8649  0115A8  24E1               	addwf	fsr1l,w,c
  8650  0115AA  6ED9               	movwf	fsr2l,c
  8651  0115AC  0EFF               	movlw	255
  8652  0115AE  20E2               	addwfc	fsr1h,w,c
  8653  0115B0  6EDA               	movwf	fsr2h,c
  8654                           
  8655                           ;stkvar	_fmt @ sp[(-32)+-4]
  8656  0115B2  0EDC               	movlw	-36
  8657  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8658  0115BA  0EDD               	movlw	-35
  8659  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8660  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  8661  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  8662  0115CE  0E01               	movlw	1
  8663  0115D0  263C               	addwf	(btemp+10)^0,f,c
  8664  0115D2  0E00               	movlw	0
  8665  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  8666  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8667  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8668  0115E2                     	if	0	;tblptru may be non-zero
  8669  0115E2                     	endif
  8670  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8671  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8672  0115E4  6EF8               	movwf	tblptru,c
  8673  0115E6                     	endif
  8674  0115E6  0008               	tblrd		*
  8675  0115E8  50F5               	movf	tablat,w,c
  8676  0115EA  6EE6               	movwf	postinc1,c
  8677  0115EC  0E00               	movlw	0
  8678  0115EE  6EE6               	movwf	postinc1,c
  8679  0115F0  EC1D  F0BE         	call	_tolower	;wreg free
  8680  0115F4  5032               	movf	btemp^0,w,c
  8681  0115F6  6EDF               	movwf	indf2,c
  8682                           
  8683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8684                           ;stkvar	_ct @ sp[(-32)+26]
  8685  0115F8  0EFB               	movlw	251
  8686  0115FA  24E1               	addwf	fsr1l,w,c
  8687  0115FC  6ED9               	movwf	fsr2l,c
  8688  0115FE  0EFF               	movlw	255
  8689  011600  20E2               	addwfc	fsr1h,w,c
  8690  011602  6EDA               	movwf	fsr2h,c
  8691  011604  50DF               	movf	indf2,w,c
  8692  011606  B4D8               	btfsc	status,2,c
  8693  011608  D029               	goto	l10336
  8694                           
  8695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8696                           ;stkvar	_ct @ sp[(-32)+26]
  8697  01160A  0EFC               	movlw	252
  8698  01160C  24E1               	addwf	fsr1l,w,c
  8699  01160E  6ED9               	movwf	fsr2l,c
  8700  011610  0EFF               	movlw	255
  8701  011612  20E2               	addwfc	fsr1h,w,c
  8702  011614  6EDA               	movwf	fsr2h,c
  8703                           
  8704                           ;stkvar	_fmt @ sp[(-32)+-4]
  8705  011616  0EDC               	movlw	-36
  8706  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8707  01161E  0EDD               	movlw	-35
  8708  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8709  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8710  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8711  011632  0E02               	movlw	2
  8712  011634  263C               	addwf	(btemp+10)^0,f,c
  8713  011636  0E00               	movlw	0
  8714  011638  223D               	addwfc	(btemp+11)^0,f,c
  8715  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8716  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8717  011646                     	if	0	;tblptru may be non-zero
  8718  011646                     	endif
  8719  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8720  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8721  011648  6EF8               	movwf	tblptru,c
  8722  01164A                     	endif
  8723  01164A  0008               	tblrd		*
  8724  01164C  50F5               	movf	tablat,w,c
  8725  01164E  6EE6               	movwf	postinc1,c
  8726  011650  0E00               	movlw	0
  8727  011652  6EE6               	movwf	postinc1,c
  8728  011654  EC1D  F0BE         	call	_tolower	;wreg free
  8729  011658  5032               	movf	btemp^0,w,c
  8730  01165A  6EDF               	movwf	indf2,c
  8731  01165C                     l10336:
  8732                           
  8733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8734                           ;stkvar	_fmt @ sp[(-32)+-4]
  8735  01165C  0EDC               	movlw	-36
  8736  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8737  011664  0EDD               	movlw	-35
  8738  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8739  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8740  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8741  011678                     	if	0	;tblptru may be non-zero
  8742  011678                     	endif
  8743  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8744  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8745  01167A  6EF8               	movwf	tblptru,c
  8746  01167C                     	endif
  8747  01167C  0008               	tblrd		*
  8748  01167E  50F5               	movf	tablat,w,c
  8749  011680  0A63               	xorlw	99
  8750  011682  A4D8               	btfss	status,2,c
  8751  011684  D036               	goto	l10346
  8752                           
  8753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8754                           ;stkvar	_fmt @ sp[(-32)+-4]
  8755  011686  0EDC               	movlw	-36
  8756  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8757  01168E  0EDD               	movlw	-35
  8758  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8759  011696  2ADE               	incf	postinc2,f,c
  8760  011698  0E00               	movlw	0
  8761  01169A  22DD               	addwfc	postdec2,f,c
  8762                           
  8763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8764                           ;stkvar	_ap @ sp[(-32)+-6]
  8765  01169C  0EDA               	movlw	-38
  8766  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8767  0116A4  0EDB               	movlw	-37
  8768  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8769  0116AC  0E02               	movlw	2
  8770  0116AE  5EDE               	subwf	postinc2,f,c
  8771  0116B0  0E00               	movlw	0
  8772  0116B2  5ADD               	subwfb	postdec2,f,c
  8773  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8774  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8775  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8776  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8777  0116CC  50DF               	movf	indf2,w,c
  8778  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8779                           
  8780                           ;stkvar	_c @ sp[(-32)+31]
  8781  0116D0  0EFF               	movlw	-1
  8782  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8783                           
  8784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8785                           ;stkvar	_c @ sp[(-32)+31]
  8786  0116D8  0EFF               	movlw	-1
  8787  0116DA  50E3               	movf	plusw1,w,c
  8788  0116DC  6EE6               	movwf	postinc1,c
  8789                           
  8790                           ;stkvar	_fp @ sp[(-33)+-2]
  8791  0116DE  0EDD               	movlw	-35
  8792  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8793  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8794  0116EC  EC97  F0BD         	call	_ctoa	;wreg free
  8795  0116F0  D343               	goto	l2074
  8796  0116F2                     l10346:
  8797                           
  8798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8799                           ;stkvar	_fmt @ sp[(-32)+-4]
  8800  0116F2  0EDC               	movlw	-36
  8801  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8802  0116FA  0EDD               	movlw	-35
  8803  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8804  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8805  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8806  01170E                     	if	0	;tblptru may be non-zero
  8807  01170E                     	endif
  8808  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8809  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8810  011710  6EF8               	movwf	tblptru,c
  8811  011712                     	endif
  8812  011712  0008               	tblrd		*
  8813  011714  50F5               	movf	tablat,w,c
  8814  011716  0A64               	xorlw	100
  8815  011718  B4D8               	btfsc	status,2,c
  8816  01171A  D015               	goto	u10280
  8817                           
  8818                           ;stkvar	_fmt @ sp[(-32)+-4]
  8819  01171C  0EDC               	movlw	-36
  8820  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8821  011724  0EDD               	movlw	-35
  8822  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8823  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8824  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8825  011738                     	if	0	;tblptru may be non-zero
  8826  011738                     	endif
  8827  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8828  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8829  01173A  6EF8               	movwf	tblptru,c
  8830  01173C                     	endif
  8831  01173C  0008               	tblrd		*
  8832  01173E  50F5               	movf	tablat,w,c
  8833  011740  0A69               	xorlw	105
  8834  011742  A4D8               	btfss	status,2,c
  8835  011744  D075               	goto	l10358
  8836  011746                     u10280:
  8837                           
  8838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8839                           ;stkvar	_fmt @ sp[(-32)+-4]
  8840  011746  0EDC               	movlw	-36
  8841  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8842  01174E  0EDD               	movlw	-35
  8843  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8844  011756  2ADE               	incf	postinc2,f,c
  8845  011758  0E00               	movlw	0
  8846  01175A  22DD               	addwfc	postdec2,f,c
  8847                           
  8848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8849                           ;stkvar	_ap @ sp[(-32)+-6]
  8850  01175C  0EDA               	movlw	-38
  8851  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8852  011764  0EDB               	movlw	-37
  8853  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8854  01176C  0E02               	movlw	2
  8855  01176E  5EDE               	subwf	postinc2,f,c
  8856  011770  0E00               	movlw	0
  8857  011772  5ADD               	subwfb	postdec2,f,c
  8858  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8859  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8860  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8861  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8862  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8863  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8864                           
  8865                           ;stkvar	_ll @ sp[(-32)+14]
  8866  011798  0EEE               	movlw	-18
  8867  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8868  0117A0  0EEF               	movlw	-17
  8869  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8870  0117A8  6A32               	clrf	btemp^0,c
  8871  0117AA  BEE3               	btfsc	plusw1,7,c
  8872  0117AC  6832               	setf	btemp^0,c
  8873  0117AE  0EF0               	movlw	-16
  8874  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8875  0117B6  0EF1               	movlw	-15
  8876  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8877  0117BE  0EF2               	movlw	-14
  8878  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8879  0117C6  0EF3               	movlw	-13
  8880  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8881  0117CE  0EF4               	movlw	-12
  8882  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8883  0117D6  0EF5               	movlw	-11
  8884  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8885                           
  8886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8887                           ;stkvar	_ll @ sp[(-32)+14]
  8888  0117DE  50E1               	movf	fsr1l,w,c
  8889  0117E0  0FEE               	addlw	-18
  8890  0117E2  6ED9               	movwf	fsr2l,c
  8891  0117E4  50E2               	movf	fsr1h,w,c
  8892  0117E6  6EDA               	movwf	fsr2h,c
  8893  0117E8  0EFF               	movlw	255
  8894  0117EA  22DA               	addwfc	fsr2h,f,c
  8895  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8896  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8897  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8898  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8899  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8900  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8901  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8902  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8903                           
  8904                           ;stkvar	_fp @ sp[(-40)+-2]
  8905  01181C  0ED6               	movlw	-42
  8906  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8907  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8908  01182A  ECE5  F09F         	call	_dtoa	;wreg free
  8909  01182E  D2A4               	goto	l2074
  8910  011830                     l10358:
  8911                           
  8912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8913                           ;stkvar	_ct @ sp[(-32)+26]
  8914  011830  0EFA               	movlw	-6
  8915  011832  006F FF8C  F032    	movff	plusw1,btemp
  8916  011838  0E66               	movlw	102
  8917  01183A  1832               	xorwf	btemp^0,w,c
  8918  01183C  A4D8               	btfss	status,2,c
  8919  01183E  D06E               	goto	l10370
  8920                           
  8921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8922                           ;stkvar	_fmt @ sp[(-32)+-4]
  8923  011840  0EDC               	movlw	-36
  8924  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8925  011848  0EDD               	movlw	-35
  8926  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8927  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8928  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8929  01185C                     	if	0	;tblptru may be non-zero
  8930  01185C                     	endif
  8931  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8932  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8933  01185E  6EF8               	movwf	tblptru,c
  8934  011860                     	endif
  8935                           
  8936                           ;stkvar	_c @ sp[(-32)+31]
  8937  011860  0008               	tblrd		*
  8938  011862  0EFF               	movlw	-1
  8939  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8940                           
  8941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8942                           ;stkvar	_fmt @ sp[(-32)+-4]
  8943  01186A  0EDC               	movlw	-36
  8944  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8945  011872  0EDD               	movlw	-35
  8946  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8947  01187A  2ADE               	incf	postinc2,f,c
  8948  01187C  0E00               	movlw	0
  8949  01187E  22DD               	addwfc	postdec2,f,c
  8950                           
  8951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8952                           ;stkvar	_ap @ sp[(-32)+-6]
  8953  011880  0EDA               	movlw	-38
  8954  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8955  011888  0EDB               	movlw	-37
  8956  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8957  011890  0E04               	movlw	4
  8958  011892  5EDE               	subwf	postinc2,f,c
  8959  011894  0E00               	movlw	0
  8960  011896  5ADD               	subwfb	postdec2,f,c
  8961  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8962  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8963  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8964  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8965  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8966  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8967  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8968  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8969                           
  8970                           ;stkvar	_f @ sp[(-32)+22]
  8971  0118C8  0EF6               	movlw	-10
  8972  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8973  0118D0  0EF7               	movlw	-9
  8974  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8975  0118D8  0EF8               	movlw	-8
  8976  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8977  0118E0  0EF9               	movlw	-7
  8978  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8979  0118E8                     l10366:
  8980                           
  8981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8982                           ;stkvar	_c @ sp[(-32)+31]
  8983  0118E8  0EFF               	movlw	-1
  8984  0118EA  50E3               	movf	plusw1,w,c
  8985  0118EC  6EE6               	movwf	postinc1,c
  8986                           
  8987                           ;stkvar	_f @ sp[(-33)+22]
  8988  0118EE  0EF5               	movlw	-11
  8989  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8990  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8991  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8992  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8993                           
  8994                           ;stkvar	_fp @ sp[(-37)+-2]
  8995  011908  0ED9               	movlw	-39
  8996  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8997  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8998  011916  EC00  F080         	call	_efgtoa	;wreg free
  8999  01191A  D22E               	goto	l2074
  9000  01191C                     l10370:
  9001                           
  9002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9003  01191C  0E02               	movlw	2
  9004  01191E  6EE6               	movwf	postinc1,c
  9005  011920  0E00               	movlw	0
  9006  011922  6EE6               	movwf	postinc1,c
  9007  011924  0EF6               	movlw	low STR_54
  9008  011926  6EE6               	movwf	postinc1,c
  9009  011928  0EFF               	movlw	high STR_54
  9010  01192A  6EE6               	movwf	postinc1,c
  9011                           
  9012                           ;stkvar	_ct @ sp[(-36)+26]
  9013  01192C  0EF6               	movlw	246
  9014  01192E  24E1               	addwf	fsr1l,w,c
  9015  011930  6E32               	movwf	btemp^0,c
  9016  011932  0EFF               	movlw	255
  9017  011934  20E2               	addwfc	fsr1h,w,c
  9018  011936  6E33               	movwf	(btemp+1)^0,c
  9019  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  9020  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  9021  011944  EC9F  F0AF         	call	_strncmp	;wreg free
  9022  011948  5032               	movf	btemp^0,w,c
  9023  01194A  1033               	iorwf	(btemp+1)^0,w,c
  9024  01194C  A4D8               	btfss	status,2,c
  9025  01194E  D096               	goto	l10390
  9026                           
  9027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9028                           ;stkvar	_fmt @ sp[(-32)+-4]
  9029  011950  0EDC               	movlw	-36
  9030  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9031  011958  0EDD               	movlw	-35
  9032  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9033  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  9034  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  9035  01196C  0E01               	movlw	1
  9036  01196E  263C               	addwf	(btemp+10)^0,f,c
  9037  011970  0E00               	movlw	0
  9038  011972  223D               	addwfc	(btemp+11)^0,f,c
  9039  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  9040  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  9041  011980                     	if	0	;tblptru may be non-zero
  9042  011980                     	endif
  9043  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9044  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9045  011982  6EF8               	movwf	tblptru,c
  9046  011984                     	endif
  9047                           
  9048                           ;stkvar	_c @ sp[(-32)+31]
  9049  011984  0008               	tblrd		*
  9050  011986  0EFF               	movlw	-1
  9051  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9052  01198E  0EBF               	movlw	191
  9053  011990  6E3C               	movwf	(btemp+10)^0,c
  9054  011992  0EFF               	movlw	255
  9055  011994  6E3D               	movwf	(btemp+11)^0,c
  9056                           
  9057                           ;stkvar	_fmt @ sp[(-32)+-4]
  9058  011996  0EDC               	movlw	-36
  9059  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9060  01199E  0EDD               	movlw	-35
  9061  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9062  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9063  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9064  0119B2                     	if	0	;tblptru may be non-zero
  9065  0119B2                     	endif
  9066  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9067  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9068  0119B4  6EF8               	movwf	tblptru,c
  9069  0119B6                     	endif
  9070  0119B6  0008               	tblrd		*
  9071  0119B8  50F5               	movf	tablat,w,c
  9072  0119BA  6E3A               	movwf	(btemp+8)^0,c
  9073  0119BC  6A3B               	clrf	(btemp+9)^0,c
  9074  0119BE  503C               	movf	(btemp+10)^0,w,c
  9075  0119C0  263A               	addwf	(btemp+8)^0,f,c
  9076  0119C2  503D               	movf	(btemp+11)^0,w,c
  9077  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  9078  0119C6  503B               	movf	(btemp+9)^0,w,c
  9079  0119C8  E106               	bnz	u10310
  9080  0119CA  0E1A               	movlw	26
  9081  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  9082  0119CE  B0D8               	btfsc	status,0,c
  9083  0119D0  D002               	goto	u10310
  9084  0119D2  0E01               	movlw	1
  9085  0119D4  D001               	goto	u10320
  9086  0119D6                     u10310:
  9087  0119D6  0E00               	movlw	0
  9088  0119D8                     u10320:
  9089  0119D8  6E3C               	movwf	(btemp+10)^0,c
  9090  0119DA  6A3D               	clrf	(btemp+11)^0,c
  9091                           
  9092                           ;stkvar	_vfpfcnvrt$4655 @ sp[(-32)+2]
  9093  0119DC  0EE2               	movlw	-30
  9094  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9095  0119E4  0EE3               	movlw	-29
  9096  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9097                           
  9098                           ;stkvar	_vfpfcnvrt$4655 @ sp[(-32)+2]
  9099  0119EC  0EE2               	movlw	-30
  9100  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  9101  0119F4  0EE3               	movlw	-29
  9102  0119F6  50E3               	movf	plusw1,w,c
  9103  0119F8  1032               	iorwf	btemp^0,w,c
  9104                           
  9105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9106                           ;stkvar	_ap @ sp[(-32)+-6]
  9107                           
  9108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9109                           
  9110                           ;stkvar	_f @ sp[(-32)+22]
  9111                           
  9112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9113                           ;stkvar	_ap @ sp[(-32)+-6]
  9114  0119FA  0EDA               	movlw	-38
  9115  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9116  011A02  0EDB               	movlw	-37
  9117  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9118  011A0A  0E04               	movlw	4
  9119  011A0C  5EDE               	subwf	postinc2,f,c
  9120  011A0E  0E00               	movlw	0
  9121  011A10  5ADD               	subwfb	postdec2,f,c
  9122  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  9123  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  9124  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9125  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9126  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  9127  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  9128  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  9129  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  9130                           
  9131                           ;stkvar	_f @ sp[(-32)+22]
  9132  011A42  0EF6               	movlw	-10
  9133  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9134  011A4A  0EF7               	movlw	-9
  9135  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9136  011A52  0EF8               	movlw	-8
  9137  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9138  011A5A  0EF9               	movlw	-7
  9139  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9140                           
  9141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9142                           ;stkvar	_fmt @ sp[(-32)+-4]
  9143  011A62  0EDC               	movlw	-36
  9144  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9145  011A6A  0EDD               	movlw	-35
  9146  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9147  011A72  0E02               	movlw	2
  9148  011A74  26DE               	addwf	postinc2,f,c
  9149  011A76  0E00               	movlw	0
  9150  011A78  22DD               	addwfc	postdec2,f,c
  9151  011A7A  D736               	goto	l10366
  9152  011A7C                     l10390:
  9153                           
  9154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9155                           ;stkvar	_fmt @ sp[(-32)+-4]
  9156  011A7C  0EDC               	movlw	-36
  9157  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9158  011A84  0EDD               	movlw	-35
  9159  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9160  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9161  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9162  011A98                     	if	0	;tblptru may be non-zero
  9163  011A98                     	endif
  9164  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9165  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9166  011A9A  6EF8               	movwf	tblptru,c
  9167  011A9C                     	endif
  9168  011A9C  0008               	tblrd		*
  9169  011A9E  50F5               	movf	tablat,w,c
  9170  011AA0  0A73               	xorlw	115
  9171  011AA2  A4D8               	btfss	status,2,c
  9172  011AA4  D042               	goto	l10400
  9173                           
  9174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9175                           ;stkvar	_fmt @ sp[(-32)+-4]
  9176  011AA6  0EDC               	movlw	-36
  9177  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9178  011AAE  0EDD               	movlw	-35
  9179  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9180  011AB6  2ADE               	incf	postinc2,f,c
  9181  011AB8  0E00               	movlw	0
  9182  011ABA  22DD               	addwfc	postdec2,f,c
  9183                           
  9184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9185                           ;stkvar	_ap @ sp[(-32)+-6]
  9186  011ABC  0EDA               	movlw	-38
  9187  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9188  011AC4  0EDB               	movlw	-37
  9189  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9190  011ACC  0E02               	movlw	2
  9191  011ACE  5EDE               	subwf	postinc2,f,c
  9192  011AD0  0E00               	movlw	0
  9193  011AD2  5ADD               	subwfb	postdec2,f,c
  9194  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  9195  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  9196  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9197  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9198  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  9199  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  9200                           
  9201                           ;stkvar	_cp @ sp[(-32)+29]
  9202  011AF8  0EFE               	movlw	-2
  9203  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9204  011B00  0EFD               	movlw	-3
  9205  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9206                           
  9207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9208                           ;stkvar	_cp @ sp[(-32)+29]
  9209  011B08  0EFD               	movlw	-3
  9210  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9211  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9212                           
  9213                           ;stkvar	_fp @ sp[(-34)+-2]
  9214  011B16  0EDC               	movlw	-36
  9215  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9216  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9217  011B24  EC90  F0A8         	call	_stoa	;wreg free
  9218  011B28  D127               	goto	l2074
  9219  011B2A                     l10400:
  9220                           
  9221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9222                           ;stkvar	_fmt @ sp[(-32)+-4]
  9223  011B2A  0EDC               	movlw	-36
  9224  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9225  011B32  0EDD               	movlw	-35
  9226  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9227  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9228  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9229  011B46                     	if	0	;tblptru may be non-zero
  9230  011B46                     	endif
  9231  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9232  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9233  011B48  6EF8               	movwf	tblptru,c
  9234  011B4A                     	endif
  9235  011B4A  0008               	tblrd		*
  9236  011B4C  50F5               	movf	tablat,w,c
  9237  011B4E  0A78               	xorlw	120
  9238  011B50  B4D8               	btfsc	status,2,c
  9239  011B52  D015               	goto	u10360
  9240                           
  9241                           ;stkvar	_fmt @ sp[(-32)+-4]
  9242  011B54  0EDC               	movlw	-36
  9243  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9244  011B5C  0EDD               	movlw	-35
  9245  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9246  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9247  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9248  011B70                     	if	0	;tblptru may be non-zero
  9249  011B70                     	endif
  9250  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9251  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9252  011B72  6EF8               	movwf	tblptru,c
  9253  011B74                     	endif
  9254  011B74  0008               	tblrd		*
  9255  011B76  50F5               	movf	tablat,w,c
  9256  011B78  0A58               	xorlw	88
  9257  011B7A  A4D8               	btfss	status,2,c
  9258  011B7C  D094               	goto	l10414
  9259  011B7E                     u10360:
  9260                           
  9261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9262                           ;stkvar	_fmt @ sp[(-32)+-4]
  9263  011B7E  0EDC               	movlw	-36
  9264  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9265  011B86  0EDD               	movlw	-35
  9266  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9267  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9268  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9269  011B9A                     	if	0	;tblptru may be non-zero
  9270  011B9A                     	endif
  9271  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9272  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9273  011B9C  6EF8               	movwf	tblptru,c
  9274  011B9E                     	endif
  9275                           
  9276                           ;stkvar	_c @ sp[(-32)+31]
  9277  011B9E  0008               	tblrd		*
  9278  011BA0  0EFF               	movlw	-1
  9279  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9280                           
  9281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9282                           ;stkvar	_fmt @ sp[(-32)+-4]
  9283  011BA8  0EDC               	movlw	-36
  9284  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9285  011BB0  0EDD               	movlw	-35
  9286  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9287  011BB8  2ADE               	incf	postinc2,f,c
  9288  011BBA  0E00               	movlw	0
  9289  011BBC  22DD               	addwfc	postdec2,f,c
  9290                           
  9291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9292                           ;stkvar	_ap @ sp[(-32)+-6]
  9293  011BBE  0EDA               	movlw	-38
  9294  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9295  011BC6  0EDB               	movlw	-37
  9296  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9297  011BCE  0E02               	movlw	2
  9298  011BD0  5EDE               	subwf	postinc2,f,c
  9299  011BD2  0E00               	movlw	0
  9300  011BD4  5ADD               	subwfb	postdec2,f,c
  9301  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  9302  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  9303  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9304  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9305  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  9306  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  9307  011BFA  503C               	movf	(btemp+10)^0,w,c
  9308  011BFC  6E42               	movwf	(btemp+16)^0,c
  9309  011BFE  503D               	movf	(btemp+11)^0,w,c
  9310  011C00  6E43               	movwf	(btemp+17)^0,c
  9311  011C02  6A44               	clrf	(btemp+18)^0,c
  9312  011C04  6A45               	clrf	(btemp+19)^0,c
  9313  011C06  6A46               	clrf	(btemp+20)^0,c
  9314  011C08  6A47               	clrf	(btemp+21)^0,c
  9315  011C0A  6A48               	clrf	(btemp+22)^0,c
  9316  011C0C  6A49               	clrf	(btemp+23)^0,c
  9317                           
  9318                           ;stkvar	_llu @ sp[(-32)+6]
  9319  011C0E  0EE6               	movlw	-26
  9320  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  9321  011C16  0EE7               	movlw	-25
  9322  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  9323  011C1E  0EE8               	movlw	-24
  9324  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  9325  011C26  0EE9               	movlw	-23
  9326  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  9327  011C2E  0EEA               	movlw	-22
  9328  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  9329  011C36  0EEB               	movlw	-21
  9330  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  9331  011C3E  0EEC               	movlw	-20
  9332  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  9333  011C46  0EED               	movlw	-19
  9334  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  9335                           
  9336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9337                           ;stkvar	_c @ sp[(-32)+31]
  9338  011C4E  0EFF               	movlw	-1
  9339  011C50  50E3               	movf	plusw1,w,c
  9340  011C52  6EE6               	movwf	postinc1,c
  9341                           
  9342                           ;stkvar	_llu @ sp[(-33)+6]
  9343  011C54  50E1               	movf	fsr1l,w,c
  9344  011C56  0FE5               	addlw	-27
  9345  011C58  6ED9               	movwf	fsr2l,c
  9346  011C5A  50E2               	movf	fsr1h,w,c
  9347  011C5C  6EDA               	movwf	fsr2h,c
  9348  011C5E  0EFF               	movlw	255
  9349  011C60  22DA               	addwfc	fsr2h,f,c
  9350  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9351  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9352  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9353  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9354  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9355  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9356  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9357  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9358                           
  9359                           ;stkvar	_fp @ sp[(-41)+-2]
  9360  011C92  0ED5               	movlw	-43
  9361  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9362  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9363  011CA0  EC25  F0A2         	call	_xtoa	;wreg free
  9364  011CA4  D069               	goto	l2074
  9365  011CA6                     l10414:
  9366                           
  9367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9368                           ;stkvar	_fmt @ sp[(-32)+-4]
  9369  011CA6  0EDC               	movlw	-36
  9370  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9371  011CAE  0EDD               	movlw	-35
  9372  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9373  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9374  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9375  011CC2                     	if	0	;tblptru may be non-zero
  9376  011CC2                     	endif
  9377  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9378  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9379  011CC4  6EF8               	movwf	tblptru,c
  9380  011CC6                     	endif
  9381  011CC6  0008               	tblrd		*
  9382  011CC8  50F5               	movf	tablat,w,c
  9383  011CCA  0A25               	xorlw	37
  9384  011CCC  A4D8               	btfss	status,2,c
  9385  011CCE  D01A               	goto	l10424
  9386                           
  9387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9388                           ;stkvar	_fmt @ sp[(-32)+-4]
  9389  011CD0  0EDC               	movlw	-36
  9390  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9391  011CD8  0EDD               	movlw	-35
  9392  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9393  011CE0  2ADE               	incf	postinc2,f,c
  9394  011CE2  0E00               	movlw	0
  9395  011CE4  22DD               	addwfc	postdec2,f,c
  9396                           
  9397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9398                           ;stkvar	_fp @ sp[(-32)+-2]
  9399  011CE6  0EDE               	movlw	-34
  9400  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9401  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9402  011CF4  0E25               	movlw	37
  9403  011CF6  6EE6               	movwf	postinc1,c
  9404  011CF8  0E00               	movlw	0
  9405  011CFA  6EE6               	movwf	postinc1,c
  9406  011CFC  EC7A  F0B5         	call	_fputc	;wreg free
  9407  011D00                     l10420:
  9408                           
  9409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9410  011D00  0E01               	movlw	1
  9411  011D02  D00C               	goto	L7
  9412  011D04                     l10424:
  9413                           
  9414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9415                           ;stkvar	_fmt @ sp[(-32)+-4]
  9416  011D04  0EDC               	movlw	-36
  9417  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9418  011D0C  0EDD               	movlw	-35
  9419  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9420  011D14  2ADE               	incf	postinc2,f,c
  9421  011D16  0E00               	movlw	0
  9422  011D18  22DD               	addwfc	postdec2,f,c
  9423                           
  9424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9425  011D1A  0E00               	movlw	0
  9426  011D1C                     L7:
  9427  011D1C  6E32               	movwf	btemp^0,c
  9428  011D1E  0E00               	movlw	0
  9429  011D20  6E33               	movwf	(btemp+1)^0,c
  9430  011D22  D02A               	goto	l2074
  9431  011D24                     l10430:
  9432                           
  9433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9434                           ;stkvar	_fp @ sp[(-32)+-2]
  9435  011D24  0EDE               	movlw	-34
  9436  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9437  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9438                           
  9439                           ;stkvar	_fmt @ sp[(-34)+-4]
  9440  011D32  0EDA               	movlw	-38
  9441  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9442  011D3A  0EDB               	movlw	-37
  9443  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9444  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9445  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9446  011D4E                     	if	0	;tblptru may be non-zero
  9447  011D4E                     	endif
  9448  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9449  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9450  011D50  6EF8               	movwf	tblptru,c
  9451  011D52                     	endif
  9452  011D52  0008               	tblrd		*
  9453  011D54  50F5               	movf	tablat,w,c
  9454  011D56  6EE6               	movwf	postinc1,c
  9455  011D58  0E00               	movlw	0
  9456  011D5A  6EE6               	movwf	postinc1,c
  9457  011D5C  EC7A  F0B5         	call	_fputc	;wreg free
  9458                           
  9459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9460                           ;stkvar	_fmt @ sp[(-32)+-4]
  9461  011D60  0EDC               	movlw	-36
  9462  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9463  011D68  0EDD               	movlw	-35
  9464  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9465  011D70  2ADE               	incf	postinc2,f,c
  9466  011D72  0E00               	movlw	0
  9467  011D74  22DD               	addwfc	postdec2,f,c
  9468  011D76  D7C4               	goto	l10420
  9469  011D78                     l2074:
  9470                           
  9471                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9472  011D78  0EDA               	movlw	218
  9473  011D7A  26E1               	addwf	fsr1l,f,c
  9474  011D7C  0EFF               	movlw	255
  9475  011D7E  22E2               	addwfc	fsr1h,f,c
  9476  011D80  0012               	return		;funcret
  9477  011D82                     __end_of_vfpfcnvrt:
  9478                           	opt callstack 0
  9479                           
  9480 ;; *************** function _xtoa *****************
  9481 ;; Defined at:
  9482 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9485 ;;		 -> f(6), NULL(0), 
  9486 ;;  d               8  [STACK] unsigned long long 
  9487 ;;  x               1  [STACK] unsigned char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  n               8  [STACK] unsigned long long 
  9490 ;;  c               2  [STACK] int 
  9491 ;;  i               2  [STACK] int 
  9492 ;;  w               2  [STACK] int 
  9493 ;;  p               2  [STACK] int 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  2  [STACK] int 
  9496 ;; Registers used:
  9497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/5
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9507 ;;Total ram usage:        0 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:   11
  9510 ;; This function calls:
  9511 ;;		_isalpha
  9512 ;;		_isupper
  9513 ;;		_pad
  9514 ;;		_toupper
  9515 ;; This function is called by:
  9516 ;;		_vfpfcnvrt
  9517 ;; This function uses a reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text40
  9521  01444A                     __ptext40:
  9522                           	opt callstack 0
  9523  01444A                     _xtoa:
  9524                           	opt callstack 0
  9525                           
  9526                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9527  01444A  0E14               	movlw	20
  9528  01444C  26E1               	addwf	fsr1l,f,c
  9529  01444E  0E00               	movlw	0
  9530  014450  22E2               	addwfc	fsr1h,f,c
  9531                           
  9532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9533                           
  9534                           ;incstack = 0
  9535  014452  AE1E               	btfss	(_prec+1)^0,7,c
  9536                           
  9537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9538  014454  921F               	bcf	_flags^0,1,c
  9539                           
  9540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9541  014456  BE1E               	btfsc	(_prec+1)^0,7,c
  9542  014458  D005               	goto	u9960
  9543  01445A  501E               	movf	(_prec+1)^0,w,c
  9544  01445C  E110               	bnz	l10212
  9545  01445E  041D               	decf	_prec^0,w,c
  9546  014460  B0D8               	btfsc	status,0,c
  9547  014462  D00D               	goto	l10212
  9548  014464                     u9960:
  9549  014464  0E01               	movlw	1
  9550  014466  6E3C               	movwf	(btemp+10)^0,c
  9551  014468  0E00               	movlw	0
  9552  01446A  6E3D               	movwf	(btemp+11)^0,c
  9553                           
  9554                           ;stkvar	_p @ sp[(-20)+18]
  9555  01446C  0EFE               	movlw	-2
  9556  01446E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9557  014474  0EFF               	movlw	-1
  9558  014476  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9559  01447C  D008               	goto	l2024
  9560  01447E                     l10212:
  9561                           
  9562                           ;stkvar	_p @ sp[(-20)+18]
  9563  01447E  0EFE               	movlw	-2
  9564  014480  0060  F077  FFE3   	movff	_prec,plusw1
  9565  014486  0EFF               	movlw	-1
  9566  014488  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9567  01448E                     l2024:
  9568                           
  9569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9570                           ;stkvar	_w @ sp[(-20)+16]
  9571  01448E  0EFC               	movlw	-4
  9572  014490  0060  F06F  FFE3   	movff	_width,plusw1
  9573  014496  0EFD               	movlw	-3
  9574  014498  0060  F073  FFE3   	movff	_width+1,plusw1
  9575                           
  9576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9577  01449E  A81F               	btfss	_flags^0,4,c
  9578  0144A0  D00B               	goto	l10218
  9579                           
  9580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9581                           ;stkvar	_w @ sp[(-20)+16]
  9582  0144A2  50E1               	movf	fsr1l,w,c
  9583  0144A4  0FFC               	addlw	-4
  9584  0144A6  6ED9               	movwf	fsr2l,c
  9585  0144A8  50E2               	movf	fsr1h,w,c
  9586  0144AA  6EDA               	movwf	fsr2h,c
  9587  0144AC  0EFF               	movlw	255
  9588  0144AE  22DA               	addwfc	fsr2h,f,c
  9589  0144B0  0EFE               	movlw	254
  9590  0144B2  26DE               	addwf	postinc2,f,c
  9591  0144B4  0EFF               	movlw	255
  9592  0144B6  22DD               	addwfc	postdec2,f,c
  9593  0144B8                     l10218:
  9594                           
  9595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9596                           ;stkvar	_d @ sp[(-20)+-10]
  9597  0144B8  0EE2               	movlw	226
  9598  0144BA  24E1               	addwf	fsr1l,w,c
  9599  0144BC  6ED9               	movwf	fsr2l,c
  9600  0144BE  0EFF               	movlw	255
  9601  0144C0  20E2               	addwfc	fsr1h,w,c
  9602  0144C2  6EDA               	movwf	fsr2h,c
  9603                           
  9604                           ;stkvar	_n @ sp[(-20)+4]
  9605  0144C4  0E08               	movlw	8
  9606  0144C6  6E32               	movwf	btemp^0,c
  9607  0144C8  0EF0               	movlw	-16
  9608  0144CA                     us998999:
  9609  0144CA  006F FF7B FFE3     	movff	postinc2,plusw1
  9610  0144D0  28E8               	incf	wreg,w,c
  9611  0144D2  2E32               	decfsz	btemp^0,f,c
  9612  0144D4  D7FA               	bra	us998999
  9613                           
  9614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9615  0144D6  0E4F               	movlw	79
  9616  0144D8  6E3C               	movwf	(btemp+10)^0,c
  9617  0144DA  0E00               	movlw	0
  9618  0144DC  6E3D               	movwf	(btemp+11)^0,c
  9619                           
  9620                           ;stkvar	_i @ sp[(-20)+14]
  9621  0144DE  0EFA               	movlw	-6
  9622  0144E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9623  0144E6  0EFB               	movlw	-5
  9624  0144E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9625                           
  9626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9627  0144EE  0101               	movlb	1	; () banked
  9628  0144F0  6BCB               	clrf	(_dbuf+79)& (0+255),b
  9629                           
  9630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9631  0144F2  D0EE               	goto	l10256
  9632  0144F4                     l10224:
  9633                           
  9634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9635                           ;stkvar	_i @ sp[(-20)+14]
  9636  0144F4  50E1               	movf	fsr1l,w,c
  9637  0144F6  0FFA               	addlw	-6
  9638  0144F8  6ED9               	movwf	fsr2l,c
  9639  0144FA  50E2               	movf	fsr1h,w,c
  9640  0144FC  6EDA               	movwf	fsr2h,c
  9641  0144FE  0EFF               	movlw	255
  9642  014500  22DA               	addwfc	fsr2h,f,c
  9643  014502  06DE               	decf	postinc2,f,c
  9644  014504  0E00               	movlw	0
  9645  014506  5ADD               	subwfb	postdec2,f,c
  9646                           
  9647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9648                           ;stkvar	_n @ sp[(-20)+4]
  9649  014508  0EF0               	movlw	-16
  9650  01450A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9651  014510  0EF1               	movlw	-15
  9652  014512  006F FF8C  F03D    	movff	plusw1,btemp+11
  9653  014518  0E0F               	movlw	15
  9654  01451A  163C               	andwf	(btemp+10)^0,f,c
  9655  01451C  0E00               	movlw	0
  9656  01451E  163D               	andwf	(btemp+11)^0,f,c
  9657                           
  9658                           ;stkvar	_c @ sp[(-20)+12]
  9659  014520  0EF8               	movlw	-8
  9660  014522  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9661  014528  0EF9               	movlw	-7
  9662  01452A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9663                           
  9664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9665                           ;stkvar	_c @ sp[(-20)+12]
  9666  014530  0EF9               	movlw	-7
  9667  014532  BEE3               	btfsc	plusw1,7,c
  9668  014534  D00F               	goto	l10232
  9669  014536  0EF9               	movlw	-7
  9670  014538  50E3               	movf	plusw1,w,c
  9671  01453A  E108               	bnz	u9990
  9672  01453C  0EF8               	movlw	-8
  9673  01453E  006F FF8C  F032    	movff	plusw1,btemp
  9674  014544  0E0A               	movlw	10
  9675  014546  5E32               	subwf	btemp^0,f,c
  9676  014548  A0D8               	btfss	status,0,c
  9677  01454A  D004               	goto	l10232
  9678  01454C                     u9990:
  9679                           
  9680                           ;stkvar	_c @ sp[(-20)+12]
  9681  01454C  0EF8               	movlw	-8
  9682  01454E  50E3               	movf	plusw1,w,c
  9683  014550  0F57               	addlw	87
  9684  014552  D003               	goto	L8
  9685  014554                     l10232:
  9686                           
  9687                           ;stkvar	_c @ sp[(-20)+12]
  9688  014554  0EF8               	movlw	-8
  9689  014556  50E3               	movf	plusw1,w,c
  9690  014558  0F30               	addlw	48
  9691  01455A                     L8:
  9692  01455A  6E3C               	movwf	(btemp+10)^0,c
  9693  01455C  0EF9               	movlw	-7
  9694  01455E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9695  014564  0E00               	movlw	0
  9696  014566  223D               	addwfc	(btemp+11)^0,f,c
  9697                           
  9698                           ;stkvar	_c @ sp[(-20)+12]
  9699  014568  0EF8               	movlw	-8
  9700  01456A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9701  014570  0EF9               	movlw	-7
  9702  014572  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9703  014578  0EBF               	movlw	191
  9704  01457A  6E3C               	movwf	(btemp+10)^0,c
  9705  01457C  0EFF               	movlw	255
  9706  01457E  6E3D               	movwf	(btemp+11)^0,c
  9707                           
  9708                           ;stkvar	_x @ sp[(-20)+-11]
  9709  014580  0EE1               	movlw	-31
  9710  014582  50E3               	movf	plusw1,w,c
  9711  014584  6E3A               	movwf	(btemp+8)^0,c
  9712  014586  6A3B               	clrf	(btemp+9)^0,c
  9713  014588  503C               	movf	(btemp+10)^0,w,c
  9714  01458A  263A               	addwf	(btemp+8)^0,f,c
  9715  01458C  503D               	movf	(btemp+11)^0,w,c
  9716  01458E  223B               	addwfc	(btemp+9)^0,f,c
  9717  014590  503B               	movf	(btemp+9)^0,w,c
  9718  014592  E106               	bnz	u10000
  9719  014594  0E1A               	movlw	26
  9720  014596  5C3A               	subwf	(btemp+8)^0,w,c
  9721  014598  B0D8               	btfsc	status,0,c
  9722  01459A  D002               	goto	u10000
  9723  01459C  0E01               	movlw	1
  9724  01459E  D001               	goto	u10010
  9725  0145A0                     u10000:
  9726  0145A0  0E00               	movlw	0
  9727  0145A2                     u10010:
  9728  0145A2  6E3C               	movwf	(btemp+10)^0,c
  9729  0145A4  6A3D               	clrf	(btemp+11)^0,c
  9730                           
  9731                           ;stkvar	_xtoa$4633 @ sp[(-20)+2]
  9732  0145A6  0EEE               	movlw	-18
  9733  0145A8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9734  0145AE  0EEF               	movlw	-17
  9735  0145B0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9736                           
  9737                           ;stkvar	_xtoa$4633 @ sp[(-20)+2]
  9738  0145B6  0EEE               	movlw	-18
  9739  0145B8  006F FF8C  F032    	movff	plusw1,btemp
  9740  0145BE  0EEF               	movlw	-17
  9741  0145C0  50E3               	movf	plusw1,w,c
  9742  0145C2  1032               	iorwf	btemp^0,w,c
  9743  0145C4  B4D8               	btfsc	status,2,c
  9744  0145C6  D041               	goto	l10248
  9745  0145C8  0E9F               	movlw	159
  9746  0145CA  6E3C               	movwf	(btemp+10)^0,c
  9747  0145CC  0EFF               	movlw	255
  9748  0145CE  6E3D               	movwf	(btemp+11)^0,c
  9749                           
  9750                           ;stkvar	_c @ sp[(-20)+12]
  9751  0145D0  0EF8               	movlw	-8
  9752  0145D2  006F FF8C  F03A    	movff	plusw1,btemp+8
  9753  0145D8  0EF9               	movlw	-7
  9754  0145DA  006F FF8C  F03B    	movff	plusw1,btemp+9
  9755  0145E0  0E20               	movlw	32
  9756  0145E2  123A               	iorwf	(btemp+8)^0,f,c
  9757  0145E4  0E00               	movlw	0
  9758  0145E6  123B               	iorwf	(btemp+9)^0,f,c
  9759  0145E8  503C               	movf	(btemp+10)^0,w,c
  9760  0145EA  263A               	addwf	(btemp+8)^0,f,c
  9761  0145EC  503D               	movf	(btemp+11)^0,w,c
  9762  0145EE  223B               	addwfc	(btemp+9)^0,f,c
  9763  0145F0  503B               	movf	(btemp+9)^0,w,c
  9764  0145F2  E106               	bnz	u10030
  9765  0145F4  0E1A               	movlw	26
  9766  0145F6  5C3A               	subwf	(btemp+8)^0,w,c
  9767  0145F8  B0D8               	btfsc	status,0,c
  9768  0145FA  D002               	goto	u10030
  9769  0145FC  0E01               	movlw	1
  9770  0145FE  D001               	goto	u10040
  9771  014600                     u10030:
  9772  014600  0E00               	movlw	0
  9773  014602                     u10040:
  9774  014602  6E3C               	movwf	(btemp+10)^0,c
  9775  014604  6A3D               	clrf	(btemp+11)^0,c
  9776                           
  9777                           ;stkvar	_xtoa$4634 @ sp[(-20)+0]
  9778  014606  0EEC               	movlw	-20
  9779  014608  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9780  01460E  0EED               	movlw	-19
  9781  014610  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9782                           
  9783                           ;stkvar	_xtoa$4634 @ sp[(-20)+0]
  9784  014616  0EEC               	movlw	-20
  9785  014618  006F FF8C  F032    	movff	plusw1,btemp
  9786  01461E  0EED               	movlw	-19
  9787  014620  50E3               	movf	plusw1,w,c
  9788  014622  1032               	iorwf	btemp^0,w,c
  9789  014624  B4D8               	btfsc	status,2,c
  9790  014626  D011               	goto	l10248
  9791                           
  9792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9793                           ;stkvar	_c @ sp[(-20)+12]
  9794  014628  0EF8               	movlw	-8
  9795  01462A  006F FF8F FFE6     	movff	plusw1,postinc1
  9796  014630  006F FF8F FFE6     	movff	plusw1,postinc1
  9797  014636  ECDB  F0BD         	call	_toupper	;wreg free
  9798                           
  9799                           ;stkvar	_c @ sp[(-20)+12]
  9800  01463A  0EF8               	movlw	-8
  9801  01463C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9802  014642  0EF9               	movlw	-7
  9803  014644  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9804  01464A                     l10248:
  9805                           
  9806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9807                           ;stkvar	_c @ sp[(-20)+12]
  9808                           ;stkvar	_i @ sp[(-20)+14]
  9809  01464A  0EFA               	movlw	-6
  9810  01464C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9811  014652  0EFB               	movlw	-5
  9812  014654  006F FF8C  F03D    	movff	plusw1,btemp+11
  9813  01465A  0E7C               	movlw	low _dbuf
  9814  01465C  243C               	addwf	(btemp+10)^0,w,c
  9815  01465E  6ED9               	movwf	fsr2l,c
  9816  014660  0E01               	movlw	high _dbuf
  9817  014662  203D               	addwfc	(btemp+11)^0,w,c
  9818  014664  6EDA               	movwf	fsr2h,c
  9819  014666  0EF8               	movlw	-8
  9820  014668  006F FF8F FFDF     	movff	plusw1,indf2
  9821                           
  9822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9823                           ;stkvar	_p @ sp[(-20)+18]
  9824  01466E  50E1               	movf	fsr1l,w,c
  9825  014670  0FFE               	addlw	-2
  9826  014672  6ED9               	movwf	fsr2l,c
  9827  014674  50E2               	movf	fsr1h,w,c
  9828  014676  6EDA               	movwf	fsr2h,c
  9829  014678  0EFF               	movlw	255
  9830  01467A  22DA               	addwfc	fsr2h,f,c
  9831  01467C  06DE               	decf	postinc2,f,c
  9832  01467E  0E00               	movlw	0
  9833  014680  5ADD               	subwfb	postdec2,f,c
  9834                           
  9835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9836                           ;stkvar	_w @ sp[(-20)+16]
  9837  014682  50E1               	movf	fsr1l,w,c
  9838  014684  0FFC               	addlw	-4
  9839  014686  6ED9               	movwf	fsr2l,c
  9840  014688  50E2               	movf	fsr1h,w,c
  9841  01468A  6EDA               	movwf	fsr2h,c
  9842  01468C  0EFF               	movlw	255
  9843  01468E  22DA               	addwfc	fsr2h,f,c
  9844  014690  06DE               	decf	postinc2,f,c
  9845  014692  0E00               	movlw	0
  9846  014694  5ADD               	subwfb	postdec2,f,c
  9847                           
  9848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9849  014696  0E04               	movlw	4
  9850  014698  6E3D               	movwf	(btemp+11)^0,c
  9851                           
  9852                           ;stkvar	_n @ sp[(-20)+4]
  9853  01469A  50E1               	movf	fsr1l,w,c
  9854  01469C  0FF0               	addlw	-16
  9855  01469E  6ED9               	movwf	fsr2l,c
  9856  0146A0  50E2               	movf	fsr1h,w,c
  9857  0146A2  6EDA               	movwf	fsr2h,c
  9858  0146A4  0EFF               	movlw	255
  9859  0146A6  22DA               	addwfc	fsr2h,f,c
  9860  0146A8  283D               	incf	(btemp+11)^0,w,c
  9861  0146AA  52DE               	movf	postinc2,f,c
  9862  0146AC  D00F               	goto	u10060
  9863  0146AE                     u10065:
  9864  0146AE  52DE               	movf	postinc2,f,c
  9865  0146B0  52DE               	movf	postinc2,f,c
  9866  0146B2  52DE               	movf	postinc2,f,c
  9867  0146B4  52DE               	movf	postinc2,f,c
  9868  0146B6  52DE               	movf	postinc2,f,c
  9869  0146B8  52DE               	movf	postinc2,f,c
  9870  0146BA  90D8               	bcf	status,0,c
  9871  0146BC  32DD               	rrcf	postdec2,f,c
  9872  0146BE  32DD               	rrcf	postdec2,f,c
  9873  0146C0  32DD               	rrcf	postdec2,f,c
  9874  0146C2  32DD               	rrcf	postdec2,f,c
  9875  0146C4  32DD               	rrcf	postdec2,f,c
  9876  0146C6  32DD               	rrcf	postdec2,f,c
  9877  0146C8  32DD               	rrcf	postdec2,f,c
  9878  0146CA  32DE               	rrcf	postinc2,f,c
  9879  0146CC                     u10060:
  9880  0146CC  2EE8               	decfsz	wreg,f,c
  9881  0146CE  D7EF               	goto	u10065
  9882  0146D0                     l10256:
  9883                           
  9884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9885                           ;stkvar	_i @ sp[(-20)+14]
  9886  0146D0  0EFB               	movlw	-5
  9887  0146D2  BEE3               	btfsc	plusw1,7,c
  9888  0146D4  D03A               	goto	u10110
  9889  0146D6  0EFB               	movlw	-5
  9890  0146D8  50E3               	movf	plusw1,w,c
  9891  0146DA  E108               	bnz	u10070
  9892  0146DC  0EFA               	movlw	-6
  9893  0146DE  006F FF8C  F032    	movff	plusw1,btemp
  9894  0146E4  0E02               	movlw	2
  9895  0146E6  5E32               	subwf	btemp^0,f,c
  9896  0146E8  A0D8               	btfss	status,0,c
  9897  0146EA  D02F               	goto	u10110
  9898  0146EC                     u10070:
  9899                           
  9900                           ;stkvar	_n @ sp[(-20)+4]
  9901  0146EC  0EF0               	movlw	-16
  9902  0146EE  50E3               	movf	plusw1,w,c
  9903  0146F0  E115               	bnz	u10081
  9904  0146F2  0EF1               	movlw	-15
  9905  0146F4  50E3               	movf	plusw1,w,c
  9906  0146F6  E112               	bnz	u10081
  9907  0146F8  0EF2               	movlw	-14
  9908  0146FA  50E3               	movf	plusw1,w,c
  9909  0146FC  E10F               	bnz	u10081
  9910  0146FE  0EF3               	movlw	-13
  9911  014700  50E3               	movf	plusw1,w,c
  9912  014702  E10C               	bnz	u10081
  9913  014704  0EF4               	movlw	-12
  9914  014706  50E3               	movf	plusw1,w,c
  9915  014708  E109               	bnz	u10081
  9916  01470A  0EF5               	movlw	-11
  9917  01470C  50E3               	movf	plusw1,w,c
  9918  01470E  E106               	bnz	u10081
  9919  014710  0EF6               	movlw	-10
  9920  014712  50E3               	movf	plusw1,w,c
  9921  014714  E103               	bnz	u10081
  9922  014716  0EF7               	movlw	-9
  9923  014718  50E3               	movf	plusw1,w,c
  9924  01471A  A4D8               	btfss	status,2,c
  9925  01471C                     u10081:
  9926  01471C  D6EB               	goto	l10224
  9927                           
  9928                           ;stkvar	_p @ sp[(-20)+18]
  9929  01471E  0EFF               	movlw	-1
  9930  014720  BEE3               	btfsc	plusw1,7,c
  9931  014722  D007               	goto	u10090
  9932  014724  0EFF               	movlw	-1
  9933  014726  50E3               	movf	plusw1,w,c
  9934  014728  E103               	bnz	u10091
  9935  01472A  0EFE               	movlw	-2
  9936  01472C  04E3               	decf	plusw1,w,c
  9937  01472E  B0D8               	btfsc	status,0,c
  9938  014730                     u10091:
  9939  014730  D6E1               	goto	l10224
  9940  014732                     u10090:
  9941                           
  9942                           ;stkvar	_w @ sp[(-20)+16]
  9943  014732  0EFD               	movlw	-3
  9944  014734  BEE3               	btfsc	plusw1,7,c
  9945  014736  D009               	goto	u10110
  9946  014738  0EFD               	movlw	-3
  9947  01473A  50E3               	movf	plusw1,w,c
  9948  01473C  E104               	bnz	u10100
  9949  01473E  0EFC               	movlw	-4
  9950  014740  04E3               	decf	plusw1,w,c
  9951  014742  A0D8               	btfss	status,0,c
  9952  014744  D002               	goto	u10110
  9953  014746                     u10100:
  9954  014746  B21F               	btfsc	_flags^0,1,c
  9955  014748  D6D5               	goto	l10224
  9956  01474A                     u10110:
  9957                           
  9958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9959  01474A  A81F               	btfss	_flags^0,4,c
  9960  01474C  D036               	goto	l10272
  9961                           
  9962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9963                           ;stkvar	_i @ sp[(-20)+14]
  9964  01474E  50E1               	movf	fsr1l,w,c
  9965  014750  0FFA               	addlw	-6
  9966  014752  6ED9               	movwf	fsr2l,c
  9967  014754  50E2               	movf	fsr1h,w,c
  9968  014756  6EDA               	movwf	fsr2h,c
  9969  014758  0EFF               	movlw	255
  9970  01475A  22DA               	addwfc	fsr2h,f,c
  9971  01475C  06DE               	decf	postinc2,f,c
  9972  01475E  0E00               	movlw	0
  9973  014760  5ADD               	subwfb	postdec2,f,c
  9974                           
  9975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9976                           ;stkvar	_x @ sp[(-20)+-11]
  9977                           ;stkvar	_i @ sp[(-20)+14]
  9978  014762  0EFA               	movlw	-6
  9979  014764  006F FF8C  F03C    	movff	plusw1,btemp+10
  9980  01476A  0EFB               	movlw	-5
  9981  01476C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9982  014772  0E7C               	movlw	low _dbuf
  9983  014774  243C               	addwf	(btemp+10)^0,w,c
  9984  014776  6ED9               	movwf	fsr2l,c
  9985  014778  0E01               	movlw	high _dbuf
  9986  01477A  203D               	addwfc	(btemp+11)^0,w,c
  9987  01477C  6EDA               	movwf	fsr2h,c
  9988  01477E  0EE1               	movlw	-31
  9989  014780  006F FF8F FFDF     	movff	plusw1,indf2
  9990                           
  9991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9992                           ;stkvar	_i @ sp[(-20)+14]
  9993  014786  50E1               	movf	fsr1l,w,c
  9994  014788  0FFA               	addlw	-6
  9995  01478A  6ED9               	movwf	fsr2l,c
  9996  01478C  50E2               	movf	fsr1h,w,c
  9997  01478E  6EDA               	movwf	fsr2h,c
  9998  014790  0EFF               	movlw	255
  9999  014792  22DA               	addwfc	fsr2h,f,c
 10000  014794  06DE               	decf	postinc2,f,c
 10001  014796  0E00               	movlw	0
 10002  014798  5ADD               	subwfb	postdec2,f,c
 10003                           
 10004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10005                           ;stkvar	_i @ sp[(-20)+14]
 10006  01479A  0EFA               	movlw	-6
 10007  01479C  006F FF8C  F03C    	movff	plusw1,btemp+10
 10008  0147A2  0EFB               	movlw	-5
 10009  0147A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 10010  0147AA  0E7C               	movlw	low _dbuf
 10011  0147AC  243C               	addwf	(btemp+10)^0,w,c
 10012  0147AE  6ED9               	movwf	fsr2l,c
 10013  0147B0  0E01               	movlw	high _dbuf
 10014  0147B2  203D               	addwfc	(btemp+11)^0,w,c
 10015  0147B4  6EDA               	movwf	fsr2h,c
 10016  0147B6  0E30               	movlw	48
 10017  0147B8  6EDF               	movwf	indf2,c
 10018  0147BA                     l10272:
 10019                           
 10020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10021                           ;stkvar	_w @ sp[(-20)+16]
 10022  0147BA  0EFC               	movlw	-4
 10023  0147BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10024  0147C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10025                           
 10026                           ;stkvar	_i @ sp[(-22)+14]
 10027  0147C8  0E7C               	movlw	low _dbuf
 10028  0147CA  6E3C               	movwf	(btemp+10)^0,c
 10029  0147CC  0E01               	movlw	high _dbuf
 10030  0147CE  6E3D               	movwf	(btemp+11)^0,c
 10031  0147D0  0EF8               	movlw	-8
 10032  0147D2  50E3               	movf	plusw1,w,c
 10033  0147D4  263C               	addwf	(btemp+10)^0,f,c
 10034  0147D6  0EF9               	movlw	-7
 10035  0147D8  50E3               	movf	plusw1,w,c
 10036  0147DA  223D               	addwfc	(btemp+11)^0,f,c
 10037  0147DC  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10038  0147E2  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10039                           
 10040                           ;stkvar	_fp @ sp[(-24)+-2]
 10041  0147E8  0EE6               	movlw	-26
 10042  0147EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10043  0147F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10044  0147F6  EC98  F0B6         	call	_pad	;wreg free
 10045                           
 10046                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10047  0147FA  0EE1               	movlw	225
 10048  0147FC  26E1               	addwf	fsr1l,f,c
 10049  0147FE  0EFF               	movlw	255
 10050  014800  22E2               	addwfc	fsr1h,f,c
 10051  014802  0012               	return		;funcret
 10052  014804                     __end_of_xtoa:
 10053                           	opt callstack 0
 10054                           
 10055 ;; *************** function _toupper *****************
 10056 ;; Defined at:
 10057 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  c               2  [STACK] int 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;		None
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  2  [STACK] int 
 10064 ;; Registers used:
 10065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/1
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10075 ;;Total ram usage:        0 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    7
 10078 ;; This function calls:
 10079 ;;		_islower
 10080 ;; This function is called by:
 10081 ;;		_xtoa
 10082 ;; This function uses a reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text41
 10086  017BB6                     __ptext41:
 10087                           	opt callstack 0
 10088  017BB6                     _toupper:
 10089                           	opt callstack 0
 10090                           
 10091                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10092  017BB6  52E6               	movf	postinc1,f,c
 10093  017BB8  52E6               	movf	postinc1,f,c
 10094                           
 10095                           ;stkvar	_c @ sp[(-2)+-2]
 10096                           
 10097                           ;incstack = 0
 10098  017BBA  0EFC               	movlw	-4
 10099  017BBC  50E3               	movf	plusw1,w,c
 10100  017BBE  0F9F               	addlw	159
 10101  017BC0  6E3C               	movwf	(btemp+10)^0,c
 10102  017BC2  0EFD               	movlw	-3
 10103  017BC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 10104  017BCA  0EFF               	movlw	255
 10105  017BCC  223D               	addwfc	(btemp+11)^0,f,c
 10106  017BCE  503D               	movf	(btemp+11)^0,w,c
 10107  017BD0  E106               	bnz	u5360
 10108  017BD2  0E1A               	movlw	26
 10109  017BD4  5C3C               	subwf	(btemp+10)^0,w,c
 10110  017BD6  B0D8               	btfsc	status,0,c
 10111  017BD8  D002               	goto	u5360
 10112  017BDA  0E01               	movlw	1
 10113  017BDC  D001               	goto	u5370
 10114  017BDE                     u5360:
 10115  017BDE  0E00               	movlw	0
 10116  017BE0                     u5370:
 10117  017BE0  6E3C               	movwf	(btemp+10)^0,c
 10118  017BE2  6A3D               	clrf	(btemp+11)^0,c
 10119                           
 10120                           ;stkvar	_toupper$5294 @ sp[(-2)+0]
 10121  017BE4  0EFE               	movlw	-2
 10122  017BE6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10123  017BEC  0EFF               	movlw	-1
 10124  017BEE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10125                           
 10126                           ;stkvar	_toupper$5294 @ sp[(-2)+0]
 10127  017BF4  0EFE               	movlw	-2
 10128  017BF6  006F FF8C  F032    	movff	plusw1,btemp
 10129  017BFC  0EFF               	movlw	-1
 10130  017BFE  50E3               	movf	plusw1,w,c
 10131  017C00  1032               	iorwf	btemp^0,w,c
 10132  017C02  B4D8               	btfsc	status,2,c
 10133  017C04  D00D               	goto	l6736
 10134                           
 10135                           ;stkvar	_c @ sp[(-2)+-2]
 10136  017C06  0EFC               	movlw	-4
 10137  017C08  006F FF8C  F032    	movff	plusw1,btemp
 10138  017C0E  0EFD               	movlw	-3
 10139  017C10  006F FF8C  F033    	movff	plusw1,btemp+1
 10140  017C16  0E5F               	movlw	95
 10141  017C18  1632               	andwf	btemp^0,f,c
 10142  017C1A  0E00               	movlw	0
 10143  017C1C  1633               	andwf	(btemp+1)^0,f,c
 10144  017C1E  D008               	goto	l2957
 10145  017C20                     l6736:
 10146                           
 10147                           ;stkvar	_c @ sp[(-2)+-2]
 10148  017C20  0EFC               	movlw	-4
 10149  017C22  006F FF8C  F032    	movff	plusw1,btemp
 10150  017C28  0EFD               	movlw	-3
 10151  017C2A  006F FF8C  F033    	movff	plusw1,btemp+1
 10152  017C30                     l2957:
 10153                           
 10154                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10155  017C30  52E5               	movf	postdec1,f,c
 10156  017C32  52E5               	movf	postdec1,f,c
 10157  017C34  52E5               	movf	postdec1,f,c
 10158  017C36  52E5               	movf	postdec1,f,c
 10159  017C38  0012               	return		;funcret
 10160  017C3A                     __end_of_toupper:
 10161                           	opt callstack 0
 10162                           
 10163 ;; *************** function _islower *****************
 10164 ;; Defined at:
 10165 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;  c               2  [STACK] int 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  2  [STACK] int 
 10172 ;; Registers used:
 10173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10183 ;;Total ram usage:        0 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; Hardware stack levels required when called:    6
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_toupper
 10190 ;; This function uses a reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text42
 10194  01866E                     __ptext42:
 10195                           	opt callstack 0
 10196  01866E                     _islower:
 10197                           	opt callstack 16
 10198                           
 10199                           ;stkvar	_c @ sp[(0)+-2]
 10200                           
 10201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10202                           ;incstack = 0
 10203  01866E  0EFE               	movlw	-2
 10204  018670  50E3               	movf	plusw1,w,c
 10205  018672  0F9F               	addlw	159
 10206  018674  6E3C               	movwf	(btemp+10)^0,c
 10207  018676  0EFF               	movlw	-1
 10208  018678  006F FF8C  F03D    	movff	plusw1,btemp+11
 10209  01867E  0EFF               	movlw	255
 10210  018680  223D               	addwfc	(btemp+11)^0,f,c
 10211  018682  503D               	movf	(btemp+11)^0,w,c
 10212  018684  E106               	bnz	u5050
 10213  018686  0E1A               	movlw	26
 10214  018688  5C3C               	subwf	(btemp+10)^0,w,c
 10215  01868A  B0D8               	btfsc	status,0,c
 10216  01868C  D002               	goto	u5050
 10217  01868E  0E01               	movlw	1
 10218  018690  D001               	goto	u5060
 10219  018692                     u5050:
 10220  018692  0E00               	movlw	0
 10221  018694                     u5060:
 10222  018694  6E32               	movwf	btemp^0,c
 10223  018696  6A33               	clrf	(btemp+1)^0,c
 10224                           
 10225                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10226  018698  52E5               	movf	postdec1,f,c
 10227  01869A  52E5               	movf	postdec1,f,c
 10228  01869C  0012               	return		;funcret
 10229  01869E                     __end_of_islower:
 10230                           	opt callstack 0
 10231                           
 10232 ;; *************** function _isalpha *****************
 10233 ;; Defined at:
 10234 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10235 ;; Parameters:    Size  Location     Type
 10236 ;;  c               2  [STACK] int 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;		None
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  2  [STACK] int 
 10241 ;; Registers used:
 10242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10252 ;;Total ram usage:        0 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:    6
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		_xtoa
 10259 ;; This function uses a reentrant model
 10260 ;;
 10261                           
 10262                           	psect	text43
 10263  018422                     __ptext43:
 10264                           	opt callstack 0
 10265  018422                     _isalpha:
 10266                           	opt callstack 17
 10267                           
 10268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10269                           ;incstack = 0
 10270  018422  0E9F               	movlw	159
 10271  018424  6E3C               	movwf	(btemp+10)^0,c
 10272  018426  0EFF               	movlw	255
 10273  018428  6E3D               	movwf	(btemp+11)^0,c
 10274                           
 10275                           ;stkvar	_c @ sp[(0)+-2]
 10276  01842A  0EFE               	movlw	-2
 10277  01842C  006F FF8C  F03A    	movff	plusw1,btemp+8
 10278  018432  0EFF               	movlw	-1
 10279  018434  006F FF8C  F03B    	movff	plusw1,btemp+9
 10280  01843A  0E20               	movlw	32
 10281  01843C  123A               	iorwf	(btemp+8)^0,f,c
 10282  01843E  0E00               	movlw	0
 10283  018440  123B               	iorwf	(btemp+9)^0,f,c
 10284  018442  503C               	movf	(btemp+10)^0,w,c
 10285  018444  263A               	addwf	(btemp+8)^0,f,c
 10286  018446  503D               	movf	(btemp+11)^0,w,c
 10287  018448  223B               	addwfc	(btemp+9)^0,f,c
 10288  01844A  503B               	movf	(btemp+9)^0,w,c
 10289  01844C  E106               	bnz	u5340
 10290  01844E  0E1A               	movlw	26
 10291  018450  5C3A               	subwf	(btemp+8)^0,w,c
 10292  018452  B0D8               	btfsc	status,0,c
 10293  018454  D002               	goto	u5340
 10294  018456  0E01               	movlw	1
 10295  018458  D001               	goto	u5350
 10296  01845A                     u5340:
 10297  01845A  0E00               	movlw	0
 10298  01845C                     u5350:
 10299  01845C  6E32               	movwf	btemp^0,c
 10300  01845E  6A33               	clrf	(btemp+1)^0,c
 10301                           
 10302                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10303  018460  52E5               	movf	postdec1,f,c
 10304  018462  52E5               	movf	postdec1,f,c
 10305  018464  0012               	return		;funcret
 10306  018466                     __end_of_isalpha:
 10307                           	opt callstack 0
 10308                           
 10309 ;; *************** function _strncmp *****************
 10310 ;; Defined at:
 10311 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;  _l              2  [STACK] PTR const unsigned char 
 10314 ;;		 -> ct(3), 
 10315 ;;  _r              2  [STACK] PTR const unsigned char 
 10316 ;;		 -> STR_56(3), 
 10317 ;;  n               2  [STACK] unsigned int 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  r               2  [STACK] PTR const unsigned char 
 10320 ;;		 -> STR_56(3), 
 10321 ;;  l               2  [STACK] PTR const unsigned char 
 10322 ;;		 -> ct(3), 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  2  [STACK] int 
 10325 ;; Registers used:
 10326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/5
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10336 ;;Total ram usage:        0 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    6
 10339 ;; This function calls:
 10340 ;;		Nothing
 10341 ;; This function is called by:
 10342 ;;		_vfpfcnvrt
 10343 ;; This function uses a reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text44
 10347  015F3E                     __ptext44:
 10348                           	opt callstack 0
 10349  015F3E                     _strncmp:
 10350                           	opt callstack 0
 10351                           
 10352                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10353  015F3E  52E6               	movf	postinc1,f,c
 10354  015F40  52E6               	movf	postinc1,f,c
 10355  015F42  52E6               	movf	postinc1,f,c
 10356  015F44  52E6               	movf	postinc1,f,c
 10357                           
 10358                           ;stkvar	__l @ sp[(-4)+-2]
 10359                           
 10360                           ;incstack = 0
 10361  015F46  0EFA               	movlw	-6
 10362  015F48  006F FF8C  F03C    	movff	plusw1,btemp+10
 10363  015F4E  0EFB               	movlw	-5
 10364  015F50  006F FF8C  F03D    	movff	plusw1,btemp+11
 10365                           
 10366                           ;stkvar	_l @ sp[(-4)+2]
 10367  015F56  0EFF               	movlw	-1
 10368  015F58  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10369  015F5E  0EFE               	movlw	-2
 10370  015F60  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10371                           
 10372                           ;stkvar	__r @ sp[(-4)+-4]
 10373  015F66  0EF8               	movlw	-8
 10374  015F68  006F FF8C  F03C    	movff	plusw1,btemp+10
 10375  015F6E  0EF9               	movlw	-7
 10376  015F70  006F FF8C  F03D    	movff	plusw1,btemp+11
 10377                           
 10378                           ;stkvar	_r @ sp[(-4)+0]
 10379  015F76  0EFD               	movlw	-3
 10380  015F78  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10381  015F7E  0EFC               	movlw	-4
 10382  015F80  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10383                           
 10384                           ;stkvar	_n @ sp[(-4)+-6]
 10385  015F86  0EF6               	movlw	-10
 10386  015F88  006F FF8C  F032    	movff	plusw1,btemp
 10387  015F8E  0E01               	movlw	1
 10388  015F90  5E32               	subwf	btemp^0,f,c
 10389  015F92  0EF6               	movlw	-10
 10390  015F94  0060  F0CB  FFE3   	movff	btemp,plusw1
 10391  015F9A  0EF7               	movlw	-9
 10392  015F9C  006F FF8C  F032    	movff	plusw1,btemp
 10393  015FA2  0E00               	movlw	0
 10394  015FA4  5A32               	subwfb	btemp^0,f,c
 10395  015FA6  0EF7               	movlw	-9
 10396  015FA8  0060  F0CB  FFE3   	movff	btemp,plusw1
 10397  015FAE  0EF6               	movlw	-10
 10398  015FB0  28E3               	incf	plusw1,w,c
 10399  015FB2  E13F               	bnz	l7894
 10400  015FB4  0EF7               	movlw	-9
 10401  015FB6  28E3               	incf	plusw1,w,c
 10402  015FB8  A4D8               	btfss	status,2,c
 10403  015FBA  D03B               	goto	l7894
 10404  015FBC  0E00               	movlw	0
 10405  015FBE  6E32               	movwf	btemp^0,c
 10406  015FC0  0E00               	movlw	0
 10407  015FC2  6E33               	movwf	(btemp+1)^0,c
 10408  015FC4  D09B               	goto	l2929
 10409  015FC6                     l7892:
 10410                           
 10411                           ;stkvar	_l @ sp[(-4)+2]
 10412  015FC6  0EFE               	movlw	-2
 10413  015FC8  50E3               	movf	plusw1,w,c
 10414  015FCA  0F01               	addlw	1
 10415  015FCC  6E32               	movwf	btemp^0,c
 10416  015FCE  0EFE               	movlw	-2
 10417  015FD0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10418  015FD6  6A32               	clrf	btemp^0,c
 10419  015FD8  0EFF               	movlw	-1
 10420  015FDA  50E3               	movf	plusw1,w,c
 10421  015FDC  2032               	addwfc	btemp^0,w,c
 10422  015FDE  6E32               	movwf	btemp^0,c
 10423  015FE0  0EFF               	movlw	-1
 10424  015FE2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10425                           
 10426                           ;stkvar	_r @ sp[(-4)+0]
 10427  015FE8  0EFC               	movlw	-4
 10428  015FEA  50E3               	movf	plusw1,w,c
 10429  015FEC  0F01               	addlw	1
 10430  015FEE  6E32               	movwf	btemp^0,c
 10431  015FF0  0EFC               	movlw	-4
 10432  015FF2  0060  F0CB  FFE3   	movff	btemp,plusw1
 10433  015FF8  6A32               	clrf	btemp^0,c
 10434  015FFA  0EFD               	movlw	-3
 10435  015FFC  50E3               	movf	plusw1,w,c
 10436  015FFE  2032               	addwfc	btemp^0,w,c
 10437  016000  6E32               	movwf	btemp^0,c
 10438  016002  0EFD               	movlw	-3
 10439  016004  0060  F0CB  FFE3   	movff	btemp,plusw1
 10440                           
 10441                           ;stkvar	_n @ sp[(-4)+-6]
 10442  01600A  0EF6               	movlw	-10
 10443  01600C  006F FF8C  F032    	movff	plusw1,btemp
 10444  016012  0E01               	movlw	1
 10445  016014  5E32               	subwf	btemp^0,f,c
 10446  016016  0EF6               	movlw	-10
 10447  016018  0060  F0CB  FFE3   	movff	btemp,plusw1
 10448  01601E  0EF7               	movlw	-9
 10449  016020  006F FF8C  F032    	movff	plusw1,btemp
 10450  016026  0E00               	movlw	0
 10451  016028  5A32               	subwfb	btemp^0,f,c
 10452  01602A  0EF7               	movlw	-9
 10453  01602C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10454  016032                     l7894:
 10455                           
 10456                           ;stkvar	_l @ sp[(-4)+2]
 10457  016032  0EFE               	movlw	-2
 10458  016034  006F FF8F FFD9     	movff	plusw1,fsr2l
 10459  01603A  0EFF               	movlw	-1
 10460  01603C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10461  016042  50DF               	movf	indf2,w,c
 10462  016044  B4D8               	btfsc	status,2,c
 10463  016046  D03B               	goto	u7540
 10464                           
 10465                           ;stkvar	_r @ sp[(-4)+0]
 10466  016048  50E1               	movf	fsr1l,w,c
 10467  01604A  0FFC               	addlw	-4
 10468  01604C  6ED9               	movwf	fsr2l,c
 10469  01604E  50E2               	movf	fsr1h,w,c
 10470  016050  6EDA               	movwf	fsr2h,c
 10471  016052  0EFF               	movlw	255
 10472  016054  22DA               	addwfc	fsr2h,f,c
 10473  016056  006F FF7B FFF6     	movff	postinc2,tblptrl
 10474  01605C  006F FF77 FFF7     	movff	postdec2,tblptrh
 10475  016062                     	if	0	;tblptru may be non-zero
 10476  016062                     	endif
 10477  016062                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10478  016062  0E00               	movlw	low (__mediumconst shr (0+16))
 10479  016064  6EF8               	movwf	tblptru,c
 10480  016066                     	endif
 10481  016066  0008               	tblrd		*
 10482  016068  50F5               	movf	tablat,w,c
 10483  01606A  0900               	iorlw	0
 10484  01606C  B4D8               	btfsc	status,2,c
 10485  01606E  D027               	goto	u7540
 10486                           
 10487                           ;stkvar	_n @ sp[(-4)+-6]
 10488  016070  0EF6               	movlw	-10
 10489  016072  006F FF8C  F032    	movff	plusw1,btemp
 10490  016078  0EF7               	movlw	-9
 10491  01607A  50E3               	movf	plusw1,w,c
 10492  01607C  1032               	iorwf	btemp^0,w,c
 10493  01607E  B4D8               	btfsc	status,2,c
 10494  016080  D01E               	goto	u7540
 10495                           
 10496                           ;stkvar	_l @ sp[(-4)+2]
 10497  016082  0EFE               	movlw	-2
 10498  016084  006F FF8F FFD9     	movff	plusw1,fsr2l
 10499  01608A  0EFF               	movlw	-1
 10500  01608C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10501  016092  50DF               	movf	indf2,w,c
 10502  016094  6E3D               	movwf	(btemp+11)^0,c
 10503                           
 10504                           ;stkvar	_r @ sp[(-4)+0]
 10505  016096  50E1               	movf	fsr1l,w,c
 10506  016098  0FFC               	addlw	-4
 10507  01609A  6ED9               	movwf	fsr2l,c
 10508  01609C  50E2               	movf	fsr1h,w,c
 10509  01609E  6EDA               	movwf	fsr2h,c
 10510  0160A0  0EFF               	movlw	255
 10511  0160A2  22DA               	addwfc	fsr2h,f,c
 10512  0160A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10513  0160AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10514  0160B0                     	if	0	;tblptru may be non-zero
 10515  0160B0                     	endif
 10516  0160B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10517  0160B0  0E00               	movlw	low (__mediumconst shr (0+16))
 10518  0160B2  6EF8               	movwf	tblptru,c
 10519  0160B4                     	endif
 10520  0160B4  0008               	tblrd		*
 10521  0160B6  50F5               	movf	tablat,w,c
 10522  0160B8  183D               	xorwf	(btemp+11)^0,w,c
 10523  0160BA  B4D8               	btfsc	status,2,c
 10524  0160BC  D784               	goto	l7892
 10525  0160BE                     u7540:
 10526                           
 10527                           ;stkvar	_l @ sp[(-4)+2]
 10528  0160BE  0EFE               	movlw	-2
 10529  0160C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10530  0160C6  0EFF               	movlw	-1
 10531  0160C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10532  0160CE  50DF               	movf	indf2,w,c
 10533  0160D0  6E32               	movwf	btemp^0,c
 10534  0160D2  6A33               	clrf	(btemp+1)^0,c
 10535                           
 10536                           ;stkvar	_r @ sp[(-4)+0]
 10537  0160D4  50E1               	movf	fsr1l,w,c
 10538  0160D6  0FFC               	addlw	-4
 10539  0160D8  6ED9               	movwf	fsr2l,c
 10540  0160DA  50E2               	movf	fsr1h,w,c
 10541  0160DC  6EDA               	movwf	fsr2h,c
 10542  0160DE  0EFF               	movlw	255
 10543  0160E0  22DA               	addwfc	fsr2h,f,c
 10544  0160E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 10545  0160E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 10546  0160EE                     	if	0	;tblptru may be non-zero
 10547  0160EE                     	endif
 10548  0160EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10549  0160EE  0E00               	movlw	low (__mediumconst shr (0+16))
 10550  0160F0  6EF8               	movwf	tblptru,c
 10551  0160F2                     	endif
 10552  0160F2  0008               	tblrd		*
 10553  0160F4  50F5               	movf	tablat,w,c
 10554  0160F6  5E32               	subwf	btemp^0,f,c
 10555  0160F8  0E00               	movlw	0
 10556  0160FA  5A33               	subwfb	(btemp+1)^0,f,c
 10557  0160FC                     l2929:
 10558                           
 10559                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10560  0160FC  0EF6               	movlw	246
 10561  0160FE  26E1               	addwf	fsr1l,f,c
 10562  016100  0EFF               	movlw	255
 10563  016102  22E2               	addwfc	fsr1h,f,c
 10564  016104  0012               	return		;funcret
 10565  016106                     __end_of_strncmp:
 10566                           	opt callstack 0
 10567                           
 10568 ;; *************** function _stoa *****************
 10569 ;; Defined at:
 10570 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10573 ;;		 -> f(6), NULL(0), 
 10574 ;;  s               2  [STACK] PTR unsigned char 
 10575 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10576 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
 10577 ;;		 -> STR_3(6), V(188), 
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;  nuls            7  [STACK] unsigned char [7]
 10580 ;;  l               2  [STACK] int 
 10581 ;;  p               2  [STACK] int 
 10582 ;;  cp              2  [STACK] PTR unsigned char 
 10583 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10584 ;;		 -> STR_27(12), D.lcd(216), D(218), T(144), 
 10585 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10586 ;;  w               2  [STACK] int 
 10587 ;;  i               2  [STACK] int 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  2  [STACK] int 
 10590 ;; Registers used:
 10591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/5
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;Total ram usage:        0 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:    9
 10604 ;; This function calls:
 10605 ;;		_fputc
 10606 ;;		_strlen
 10607 ;; This function is called by:
 10608 ;;		_vfpfcnvrt
 10609 ;; This function uses a reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text45
 10613  015120                     __ptext45:
 10614                           	opt callstack 0
 10615  015120                     _stoa:
 10616                           	opt callstack 0
 10617                           
 10618                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10619  015120  0E11               	movlw	17
 10620  015122  26E1               	addwf	fsr1l,f,c
 10621  015124  0E00               	movlw	0
 10622  015126  22E2               	addwfc	fsr1h,f,c
 10623                           
 10624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10625                           
 10626                           ;incstack = 0
 10627  015128  EE20  F1D4         	lfsr	2,stoa@F1166
 10628                           
 10629                           ;stkvar	_nuls @ sp[(-17)+0]
 10630  01512C  0E07               	movlw	7
 10631  01512E  6E32               	movwf	btemp^0,c
 10632  015130  0EEF               	movlw	-17
 10633  015132                     us985999:
 10634  015132  006F FF7B FFE3     	movff	postinc2,plusw1
 10635  015138  28E8               	incf	wreg,w,c
 10636  01513A  2E32               	decfsz	btemp^0,f,c
 10637  01513C  D7FA               	bra	us985999
 10638                           
 10639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10640                           ;stkvar	_s @ sp[(-17)+-4]
 10641  01513E  0EEB               	movlw	-21
 10642  015140  006F FF8C  F03C    	movff	plusw1,btemp+10
 10643  015146  0EEC               	movlw	-20
 10644  015148  006F FF8C  F03D    	movff	plusw1,btemp+11
 10645                           
 10646                           ;stkvar	_cp @ sp[(-17)+11]
 10647  01514E  0EFB               	movlw	-5
 10648  015150  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10649  015156  0EFA               	movlw	-6
 10650  015158  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10651                           
 10652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10653                           ;stkvar	_cp @ sp[(-17)+11]
 10654  01515E  0EFA               	movlw	-6
 10655  015160  006F FF8C  F032    	movff	plusw1,btemp
 10656  015166  0EFB               	movlw	-5
 10657  015168  50E3               	movf	plusw1,w,c
 10658  01516A  1032               	iorwf	btemp^0,w,c
 10659  01516C  A4D8               	btfss	status,2,c
 10660  01516E  D00E               	goto	l10160
 10661                           
 10662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10663                           ;stkvar	_nuls @ sp[(-17)+0]
 10664  015170  0EEF               	movlw	239
 10665  015172  24E1               	addwf	fsr1l,w,c
 10666  015174  6E3C               	movwf	(btemp+10)^0,c
 10667  015176  0EFF               	movlw	255
 10668  015178  20E2               	addwfc	fsr1h,w,c
 10669  01517A  6E3D               	movwf	(btemp+11)^0,c
 10670                           
 10671                           ;stkvar	_cp @ sp[(-17)+11]
 10672  01517C  0EFB               	movlw	-5
 10673  01517E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10674  015184  0EFA               	movlw	-6
 10675  015186  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10676  01518C                     l10160:
 10677                           
 10678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10679                           ;stkvar	_cp @ sp[(-17)+11]
 10680  01518C  0EFA               	movlw	-6
 10681  01518E  006F FF8F FFE6     	movff	plusw1,postinc1
 10682  015194  006F FF8F FFE6     	movff	plusw1,postinc1
 10683  01519A  EC20  F0BC         	call	_strlen	;wreg free
 10684                           
 10685                           ;stkvar	_l @ sp[(-17)+7]
 10686  01519E  0EF6               	movlw	-10
 10687  0151A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10688  0151A6  0EF7               	movlw	-9
 10689  0151A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10690                           
 10691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10692                           ;stkvar	_p @ sp[(-17)+9]
 10693  0151AE  0EF8               	movlw	-8
 10694  0151B0  0060  F077  FFE3   	movff	_prec,plusw1
 10695  0151B6  0EF9               	movlw	-7
 10696  0151B8  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10697                           
 10698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10699                           ;stkvar	_p @ sp[(-17)+9]
 10700  0151BE  0EF9               	movlw	-7
 10701  0151C0  BEE3               	btfsc	plusw1,7,c
 10702  0151C2  D023               	goto	l2003
 10703                           
 10704                           ;stkvar	_l @ sp[(-17)+7]
 10705                           ;stkvar	_p @ sp[(-17)+9]
 10706  0151C4  50E1               	movf	fsr1l,w,c
 10707  0151C6  0FF8               	addlw	-8
 10708  0151C8  6ED9               	movwf	fsr2l,c
 10709  0151CA  50E2               	movf	fsr1h,w,c
 10710  0151CC  6EDA               	movwf	fsr2h,c
 10711  0151CE  0EFF               	movlw	255
 10712  0151D0  22DA               	addwfc	fsr2h,f,c
 10713  0151D2  0EF6               	movlw	-10
 10714  0151D4  50E3               	movf	plusw1,w,c
 10715  0151D6  5CDE               	subwf	postinc2,w,c
 10716  0151D8  50DE               	movf	postinc2,w,c
 10717  0151DA  0A80               	xorlw	128
 10718  0151DC  6E32               	movwf	btemp^0,c
 10719  0151DE  0EF7               	movlw	-9
 10720  0151E0  50E3               	movf	plusw1,w,c
 10721  0151E2  0A80               	xorlw	128
 10722  0151E4  5832               	subwfb	btemp^0,w,c
 10723  0151E6  B0D8               	btfsc	status,0,c
 10724  0151E8  D010               	goto	l2003
 10725                           
 10726                           ;stkvar	_p @ sp[(-17)+9]
 10727                           ;stkvar	_l @ sp[(-17)+7]
 10728  0151EA  0EF8               	movlw	-8
 10729  0151EC  006F FF8C  F032    	movff	plusw1,btemp
 10730  0151F2  0EF6               	movlw	-10
 10731  0151F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 10732  0151FA  0EF9               	movlw	-7
 10733  0151FC  006F FF8C  F032    	movff	plusw1,btemp
 10734  015202  0EF7               	movlw	-9
 10735  015204  0060  F0CB  FFE3   	movff	btemp,plusw1
 10736  01520A                     l2003:
 10737                           
 10738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10739                           ;stkvar	_l @ sp[(-17)+7]
 10740                           ;stkvar	_p @ sp[(-17)+9]
 10741  01520A  0EF6               	movlw	-10
 10742  01520C  006F FF8C  F032    	movff	plusw1,btemp
 10743  015212  0EF8               	movlw	-8
 10744  015214  0060  F0CB  FFE3   	movff	btemp,plusw1
 10745  01521A  0EF7               	movlw	-9
 10746  01521C  006F FF8C  F032    	movff	plusw1,btemp
 10747  015222  0EF9               	movlw	-7
 10748  015224  0060  F0CB  FFE3   	movff	btemp,plusw1
 10749                           
 10750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10751                           ;stkvar	_w @ sp[(-17)+13]
 10752  01522A  0EFC               	movlw	-4
 10753  01522C  0060  F06F  FFE3   	movff	_width,plusw1
 10754  015232  0EFD               	movlw	-3
 10755  015234  0060  F073  FFE3   	movff	_width+1,plusw1
 10756                           
 10757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10758  01523A  A01F               	btfss	_flags^0,0,c
 10759  01523C  D01F               	goto	l10180
 10760  01523E  D031               	goto	u9900
 10761  015240                     l10176:
 10762                           
 10763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10764                           ;stkvar	_fp @ sp[(-17)+-2]
 10765  015240  0EED               	movlw	-19
 10766  015242  006F FF8F FFE6     	movff	plusw1,postinc1
 10767  015248  006F FF8F FFE6     	movff	plusw1,postinc1
 10768  01524E  0E20               	movlw	32
 10769  015250  6EE6               	movwf	postinc1,c
 10770  015252  0E00               	movlw	0
 10771  015254  6EE6               	movwf	postinc1,c
 10772  015256  EC7A  F0B5         	call	_fputc	;wreg free
 10773                           
 10774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10775                           ;stkvar	_l @ sp[(-17)+7]
 10776  01525A  0EF6               	movlw	-10
 10777  01525C  50E3               	movf	plusw1,w,c
 10778  01525E  0F01               	addlw	1
 10779  015260  6E32               	movwf	btemp^0,c
 10780  015262  0EF6               	movlw	-10
 10781  015264  0060  F0CB  FFE3   	movff	btemp,plusw1
 10782  01526A  6A32               	clrf	btemp^0,c
 10783  01526C  0EF7               	movlw	-9
 10784  01526E  50E3               	movf	plusw1,w,c
 10785  015270  2032               	addwfc	btemp^0,w,c
 10786  015272  6E32               	movwf	btemp^0,c
 10787  015274  0EF7               	movlw	-9
 10788  015276  0060  F0CB  FFE3   	movff	btemp,plusw1
 10789  01527C                     l10180:
 10790                           
 10791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10792                           ;stkvar	_w @ sp[(-17)+13]
 10793                           ;stkvar	_l @ sp[(-17)+7]
 10794  01527C  50E1               	movf	fsr1l,w,c
 10795  01527E  0FF6               	addlw	-10
 10796  015280  6ED9               	movwf	fsr2l,c
 10797  015282  50E2               	movf	fsr1h,w,c
 10798  015284  6EDA               	movwf	fsr2h,c
 10799  015286  0EFF               	movlw	255
 10800  015288  22DA               	addwfc	fsr2h,f,c
 10801  01528A  0EFC               	movlw	-4
 10802  01528C  50E3               	movf	plusw1,w,c
 10803  01528E  5CDE               	subwf	postinc2,w,c
 10804  015290  50DE               	movf	postinc2,w,c
 10805  015292  0A80               	xorlw	128
 10806  015294  6E32               	movwf	btemp^0,c
 10807  015296  0EFD               	movlw	-3
 10808  015298  50E3               	movf	plusw1,w,c
 10809  01529A  0A80               	xorlw	128
 10810  01529C  5832               	subwfb	btemp^0,w,c
 10811  01529E  A0D8               	btfss	status,0,c
 10812  0152A0  D7CF               	goto	l10176
 10813  0152A2                     u9900:
 10814                           
 10815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10816                           ;stkvar	_i @ sp[(-17)+15]
 10817  0152A2  0EFE               	movlw	-2
 10818  0152A4  6AE3               	clrf	plusw1,c
 10819  0152A6  0EFF               	movlw	-1
 10820  0152A8  6AE3               	clrf	plusw1,c
 10821                           
 10822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10823  0152AA  D045               	goto	l10190
 10824  0152AC                     l10184:
 10825                           
 10826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10827                           ;stkvar	_fp @ sp[(-17)+-2]
 10828  0152AC  0EED               	movlw	-19
 10829  0152AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10830  0152B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10831                           
 10832                           ;stkvar	_cp @ sp[(-19)+11]
 10833  0152BA  0EF8               	movlw	-8
 10834  0152BC  006F FF8F FFF6     	movff	plusw1,tblptrl
 10835  0152C2  0EF9               	movlw	-7
 10836  0152C4  006F FF8F FFF7     	movff	plusw1,tblptrh
 10837  0152CA  0E00               	movlw	low (__mediumconst shr (0+16))
 10838  0152CC  6EF8               	movwf	tblptru,c
 10839  0152CE  0E1F               	movlw	(high __ramtop+-1)
 10840  0152D0  64F7               	cpfsgt	tblptrh,c
 10841  0152D2  D003               	bra	u9917
 10842  0152D4  0008               	tblrd		*
 10843  0152D6  50F5               	movf	tablat,w,c
 10844  0152D8  D007               	bra	u9910
 10845  0152DA                     u9917:
 10846  0152DA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10847  0152E0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10848  0152E6  50EF               	movf	indf0,w,c
 10849  0152E8                     u9910:
 10850  0152E8  6EE6               	movwf	postinc1,c
 10851  0152EA  0E00               	movlw	0
 10852  0152EC  6EE6               	movwf	postinc1,c
 10853  0152EE  EC7A  F0B5         	call	_fputc	;wreg free
 10854                           
 10855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10856                           ;stkvar	_cp @ sp[(-17)+11]
 10857  0152F2  0EFA               	movlw	-6
 10858  0152F4  50E3               	movf	plusw1,w,c
 10859  0152F6  0F01               	addlw	1
 10860  0152F8  6E32               	movwf	btemp^0,c
 10861  0152FA  0EFA               	movlw	-6
 10862  0152FC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10863  015302  6A32               	clrf	btemp^0,c
 10864  015304  0EFB               	movlw	-5
 10865  015306  50E3               	movf	plusw1,w,c
 10866  015308  2032               	addwfc	btemp^0,w,c
 10867  01530A  6E32               	movwf	btemp^0,c
 10868  01530C  0EFB               	movlw	-5
 10869  01530E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10870                           
 10871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10872                           ;stkvar	_i @ sp[(-17)+15]
 10873  015314  0EFE               	movlw	-2
 10874  015316  50E3               	movf	plusw1,w,c
 10875  015318  0F01               	addlw	1
 10876  01531A  6E32               	movwf	btemp^0,c
 10877  01531C  0EFE               	movlw	-2
 10878  01531E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10879  015324  6A32               	clrf	btemp^0,c
 10880  015326  0EFF               	movlw	-1
 10881  015328  50E3               	movf	plusw1,w,c
 10882  01532A  2032               	addwfc	btemp^0,w,c
 10883  01532C  6E32               	movwf	btemp^0,c
 10884  01532E  0EFF               	movlw	-1
 10885  015330  0060  F0CB  FFE3   	movff	btemp,plusw1
 10886  015336                     l10190:
 10887                           
 10888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10889                           ;stkvar	_p @ sp[(-17)+9]
 10890                           ;stkvar	_i @ sp[(-17)+15]
 10891  015336  50E1               	movf	fsr1l,w,c
 10892  015338  0FFE               	addlw	-2
 10893  01533A  6ED9               	movwf	fsr2l,c
 10894  01533C  50E2               	movf	fsr1h,w,c
 10895  01533E  6EDA               	movwf	fsr2h,c
 10896  015340  0EFF               	movlw	255
 10897  015342  22DA               	addwfc	fsr2h,f,c
 10898  015344  0EF8               	movlw	-8
 10899  015346  50E3               	movf	plusw1,w,c
 10900  015348  5CDE               	subwf	postinc2,w,c
 10901  01534A  50DE               	movf	postinc2,w,c
 10902  01534C  0A80               	xorlw	128
 10903  01534E  6E32               	movwf	btemp^0,c
 10904  015350  0EF9               	movlw	-7
 10905  015352  50E3               	movf	plusw1,w,c
 10906  015354  0A80               	xorlw	128
 10907  015356  5832               	subwfb	btemp^0,w,c
 10908  015358  A0D8               	btfss	status,0,c
 10909  01535A  D7A8               	goto	l10184
 10910                           
 10911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10912  01535C  B01F               	btfsc	_flags^0,0,c
 10913  01535E  D01F               	goto	l10198
 10914  015360  D031               	goto	u9940
 10915  015362                     l10194:
 10916                           
 10917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10918                           ;stkvar	_fp @ sp[(-17)+-2]
 10919  015362  0EED               	movlw	-19
 10920  015364  006F FF8F FFE6     	movff	plusw1,postinc1
 10921  01536A  006F FF8F FFE6     	movff	plusw1,postinc1
 10922  015370  0E20               	movlw	32
 10923  015372  6EE6               	movwf	postinc1,c
 10924  015374  0E00               	movlw	0
 10925  015376  6EE6               	movwf	postinc1,c
 10926  015378  EC7A  F0B5         	call	_fputc	;wreg free
 10927                           
 10928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10929                           ;stkvar	_l @ sp[(-17)+7]
 10930  01537C  0EF6               	movlw	-10
 10931  01537E  50E3               	movf	plusw1,w,c
 10932  015380  0F01               	addlw	1
 10933  015382  6E32               	movwf	btemp^0,c
 10934  015384  0EF6               	movlw	-10
 10935  015386  0060  F0CB  FFE3   	movff	btemp,plusw1
 10936  01538C  6A32               	clrf	btemp^0,c
 10937  01538E  0EF7               	movlw	-9
 10938  015390  50E3               	movf	plusw1,w,c
 10939  015392  2032               	addwfc	btemp^0,w,c
 10940  015394  6E32               	movwf	btemp^0,c
 10941  015396  0EF7               	movlw	-9
 10942  015398  0060  F0CB  FFE3   	movff	btemp,plusw1
 10943  01539E                     l10198:
 10944                           
 10945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10946                           ;stkvar	_w @ sp[(-17)+13]
 10947                           ;stkvar	_l @ sp[(-17)+7]
 10948  01539E  50E1               	movf	fsr1l,w,c
 10949  0153A0  0FF6               	addlw	-10
 10950  0153A2  6ED9               	movwf	fsr2l,c
 10951  0153A4  50E2               	movf	fsr1h,w,c
 10952  0153A6  6EDA               	movwf	fsr2h,c
 10953  0153A8  0EFF               	movlw	255
 10954  0153AA  22DA               	addwfc	fsr2h,f,c
 10955  0153AC  0EFC               	movlw	-4
 10956  0153AE  50E3               	movf	plusw1,w,c
 10957  0153B0  5CDE               	subwf	postinc2,w,c
 10958  0153B2  50DE               	movf	postinc2,w,c
 10959  0153B4  0A80               	xorlw	128
 10960  0153B6  6E32               	movwf	btemp^0,c
 10961  0153B8  0EFD               	movlw	-3
 10962  0153BA  50E3               	movf	plusw1,w,c
 10963  0153BC  0A80               	xorlw	128
 10964  0153BE  5832               	subwfb	btemp^0,w,c
 10965  0153C0  A0D8               	btfss	status,0,c
 10966  0153C2  D7CF               	goto	l10194
 10967  0153C4                     u9940:
 10968                           
 10969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10970                           ;stkvar	_l @ sp[(-17)+7]
 10971  0153C4  0EF6               	movlw	-10
 10972  0153C6  006F FF8C  F032    	movff	plusw1,btemp
 10973  0153CC  0EF7               	movlw	-9
 10974  0153CE  006F FF8C  F033    	movff	plusw1,btemp+1
 10975                           
 10976                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10977  0153D4  0EEB               	movlw	235
 10978  0153D6  26E1               	addwf	fsr1l,f,c
 10979  0153D8  0EFF               	movlw	255
 10980  0153DA  22E2               	addwfc	fsr1h,f,c
 10981  0153DC  0012               	return		;funcret
 10982  0153DE                     __end_of_stoa:
 10983                           	opt callstack 0
 10984                           
 10985 ;; *************** function _efgtoa *****************
 10986 ;; Defined at:
 10987 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10990 ;;		 -> f(6), NULL(0), 
 10991 ;;  f               4  [STACK] PTR struct _IO_FILE
 10992 ;;  c               1  [STACK] unsigned char 
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;  u               4  [STACK] unsigned char 
 10995 ;;  g               4  [STACK] unsigned char 
 10996 ;;  l               4  [STACK] unsigned char 
 10997 ;;  h               4  [STACK] unsigned char 
 10998 ;;  ou              4  [STACK] unsigned char 
 10999 ;;  n               2  [STACK] int 
 11000 ;;  e               2  [STACK] int 
 11001 ;;  i               2  [STACK] int 
 11002 ;;  w               2  [STACK] int 
 11003 ;;  p               2  [STACK] int 
 11004 ;;  sign            2  [STACK] int 
 11005 ;;  d               2  [STACK] int 
 11006 ;;  ne              2  [STACK] int 
 11007 ;;  m               2  [STACK] int 
 11008 ;;  pp              2  [STACK] int 
 11009 ;;  t               2  [STACK] int 
 11010 ;;  mode            1  [STACK] unsigned char 
 11011 ;;  nmode           1  [STACK] unsigned char 
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  2  [STACK] int 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11016 ;; Tracked objects:
 11017 ;;		On entry : 0/5
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11025 ;;Total ram usage:        0 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:   11
 11028 ;; This function calls:
 11029 ;;		___awdiv
 11030 ;;		___awmod
 11031 ;;		___fladd
 11032 ;;		___fldiv
 11033 ;;		___fleq
 11034 ;;		___flge
 11035 ;;		___flmul
 11036 ;;		___flneg
 11037 ;;		___flsub
 11038 ;;		___fltol
 11039 ;;		___fpclassifyf
 11040 ;;		_floorf
 11041 ;;		_isupper
 11042 ;;		_pad
 11043 ;;		_strcpy
 11044 ;;		_tolower
 11045 ;; This function is called by:
 11046 ;;		_vfpfcnvrt
 11047 ;; This function uses a reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text46
 11051  010000                     __ptext46:
 11052                           	opt callstack 0
 11053  010000                     _efgtoa:
 11054                           	opt callstack 0
 11055                           
 11056                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11057  010000  0E38               	movlw	56
 11058  010002  26E1               	addwf	fsr1l,f,c
 11059  010004  0E00               	movlw	0
 11060  010006  22E2               	addwfc	fsr1h,f,c
 11061                           
 11062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11063                           ;stkvar	_sign @ sp[(-56)+42]
 11064                           
 11065                           ;incstack = 0
 11066  010008  0EF2               	movlw	-14
 11067  01000A  6AE3               	clrf	plusw1,c
 11068  01000C  0EF3               	movlw	-13
 11069  01000E  6AE3               	clrf	plusw1,c
 11070                           
 11071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11072                           ;stkvar	_f @ sp[(-56)+-6]
 11073  010010  0EC2               	movlw	-62
 11074  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 11075  010018  0EC3               	movlw	-61
 11076  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 11077  010020  0EC4               	movlw	-60
 11078  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 11079  010028  0EC5               	movlw	-59
 11080  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 11081                           
 11082                           ;stkvar	_g @ sp[(-56)+16]
 11083  010030  0ED8               	movlw	-40
 11084  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11085  010038  0ED9               	movlw	-39
 11086  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11087  010040  0EDA               	movlw	-38
 11088  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11089  010048  0EDB               	movlw	-37
 11090  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11091                           
 11092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11093                           ;stkvar	_g @ sp[(-56)+16]
 11094  010050  0EDB               	movlw	-37
 11095  010052  AEE3               	btfss	plusw1,7,c
 11096  010054  D02B               	goto	l9858
 11097                           
 11098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11099  010056  0E01               	movlw	1
 11100  010058  6E3C               	movwf	(btemp+10)^0,c
 11101  01005A  0E00               	movlw	0
 11102  01005C  6E3D               	movwf	(btemp+11)^0,c
 11103                           
 11104                           ;stkvar	_sign @ sp[(-56)+42]
 11105  01005E  0EF2               	movlw	-14
 11106  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11107  010066  0EF3               	movlw	-13
 11108  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11109                           
 11110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11111                           ;stkvar	_g @ sp[(-56)+16]
 11112  01006E  0ED8               	movlw	-40
 11113  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11114  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11115  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11116  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11117  010088  EC3E  F0C1         	call	___flneg	;wreg free
 11118                           
 11119                           ;stkvar	_g @ sp[(-56)+16]
 11120  01008C  0ED8               	movlw	-40
 11121  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11122  010094  0ED9               	movlw	-39
 11123  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11124  01009C  0EDA               	movlw	-38
 11125  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11126  0100A4  0EDB               	movlw	-37
 11127  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11128  0100AC                     l9858:
 11129                           
 11130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11131                           ;stkvar	_n @ sp[(-56)+32]
 11132  0100AC  0EE8               	movlw	-24
 11133  0100AE  6AE3               	clrf	plusw1,c
 11134  0100B0  0EE9               	movlw	-23
 11135  0100B2  6AE3               	clrf	plusw1,c
 11136                           
 11137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11138                           ;stkvar	_w @ sp[(-56)+38]
 11139  0100B4  0EEE               	movlw	-18
 11140  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 11141  0100BC  0EEF               	movlw	-17
 11142  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 11143                           
 11144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11145                           ;stkvar	_sign @ sp[(-56)+42]
 11146  0100C4  0EF2               	movlw	-14
 11147  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 11148  0100CC  0EF3               	movlw	-13
 11149  0100CE  50E3               	movf	plusw1,w,c
 11150  0100D0  1032               	iorwf	btemp^0,w,c
 11151  0100D2  A4D8               	btfss	status,2,c
 11152  0100D4  D002               	goto	u9350
 11153  0100D6  A41F               	btfss	_flags^0,2,c
 11154  0100D8  D036               	goto	l9878
 11155  0100DA                     u9350:
 11156                           
 11157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11158                           ;stkvar	_sign @ sp[(-56)+42]
 11159  0100DA  0EF2               	movlw	-14
 11160  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 11161  0100E2  0EF3               	movlw	-13
 11162  0100E4  50E3               	movf	plusw1,w,c
 11163  0100E6  1032               	iorwf	btemp^0,w,c
 11164  0100E8  A4D8               	btfss	status,2,c
 11165  0100EA  D002               	goto	l9870
 11166  0100EC  0E2B               	movlw	43
 11167  0100EE  D001               	goto	L9
 11168  0100F0                     l9870:
 11169  0100F0  0E2D               	movlw	45
 11170  0100F2                     L9:
 11171  0100F2  6E3C               	movwf	(btemp+10)^0,c
 11172  0100F4  0E00               	movlw	0
 11173  0100F6  6E3D               	movwf	(btemp+11)^0,c
 11174                           
 11175                           ;stkvar	_efgtoa$4602 @ sp[(-56)+10]
 11176  0100F8  0ED2               	movlw	-46
 11177  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11178  010100  0ED3               	movlw	-45
 11179  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11180                           
 11181                           ;stkvar	_efgtoa$4602 @ sp[(-56)+10]
 11182  010108  0ED2               	movlw	-46
 11183  01010A  006F FF8C  F17C    	movff	plusw1,_dbuf
 11184                           
 11185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11186                           ;stkvar	_n @ sp[(-56)+32]
 11187  010110  0EE8               	movlw	-24
 11188  010112  50E3               	movf	plusw1,w,c
 11189  010114  0F01               	addlw	1
 11190  010116  6E32               	movwf	btemp^0,c
 11191  010118  0EE8               	movlw	-24
 11192  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11193  010120  6A32               	clrf	btemp^0,c
 11194  010122  0EE9               	movlw	-23
 11195  010124  50E3               	movf	plusw1,w,c
 11196  010126  2032               	addwfc	btemp^0,w,c
 11197  010128  6E32               	movwf	btemp^0,c
 11198  01012A  0EE9               	movlw	-23
 11199  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11200                           
 11201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11202                           ;stkvar	_w @ sp[(-56)+38]
 11203  010132  50E1               	movf	fsr1l,w,c
 11204  010134  0FEE               	addlw	-18
 11205  010136  6ED9               	movwf	fsr2l,c
 11206  010138  50E2               	movf	fsr1h,w,c
 11207  01013A  6EDA               	movwf	fsr2h,c
 11208  01013C  0EFF               	movlw	255
 11209  01013E  22DA               	addwfc	fsr2h,f,c
 11210  010140  06DE               	decf	postinc2,f,c
 11211  010142  0E00               	movlw	0
 11212  010144  5ADD               	subwfb	postdec2,f,c
 11213  010146                     l9878:
 11214                           
 11215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11216                           ;stkvar	_g @ sp[(-56)+16]
 11217  010146  0ED8               	movlw	-40
 11218  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11219  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11220  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11221  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11222  010160  EC63  F0B1         	call	___fpclassifyf	;wreg free
 11223  010164  0432               	decf	btemp^0,w,c
 11224  010166  1033               	iorwf	(btemp+1)^0,w,c
 11225  010168  A4D8               	btfss	status,2,c
 11226  01016A  D076               	goto	l9896
 11227  01016C  0EBF               	movlw	191
 11228  01016E  6E3C               	movwf	(btemp+10)^0,c
 11229  010170  0EFF               	movlw	255
 11230  010172  6E3D               	movwf	(btemp+11)^0,c
 11231                           
 11232                           ;stkvar	_c @ sp[(-56)+-7]
 11233  010174  0EC1               	movlw	-63
 11234  010176  50E3               	movf	plusw1,w,c
 11235  010178  6E3A               	movwf	(btemp+8)^0,c
 11236  01017A  6A3B               	clrf	(btemp+9)^0,c
 11237  01017C  503C               	movf	(btemp+10)^0,w,c
 11238  01017E  263A               	addwf	(btemp+8)^0,f,c
 11239  010180  503D               	movf	(btemp+11)^0,w,c
 11240  010182  223B               	addwfc	(btemp+9)^0,f,c
 11241  010184  503B               	movf	(btemp+9)^0,w,c
 11242  010186  E106               	bnz	u9380
 11243  010188  0E1A               	movlw	26
 11244  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 11245  01018C  B0D8               	btfsc	status,0,c
 11246  01018E  D002               	goto	u9380
 11247  010190  0E01               	movlw	1
 11248  010192  D001               	goto	u9390
 11249  010194                     u9380:
 11250  010194  0E00               	movlw	0
 11251  010196                     u9390:
 11252  010196  6E3C               	movwf	(btemp+10)^0,c
 11253  010198  6A3D               	clrf	(btemp+11)^0,c
 11254                           
 11255                           ;stkvar	_efgtoa$4603 @ sp[(-56)+8]
 11256  01019A  0ED0               	movlw	-48
 11257  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11258  0101A2  0ED1               	movlw	-47
 11259  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11260                           
 11261                           ;stkvar	_efgtoa$4603 @ sp[(-56)+8]
 11262  0101AA  0ED0               	movlw	-48
 11263  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 11264  0101B2  0ED1               	movlw	-47
 11265  0101B4  50E3               	movf	plusw1,w,c
 11266  0101B6  1032               	iorwf	btemp^0,w,c
 11267  0101B8  B4D8               	btfsc	status,2,c
 11268  0101BA  D017               	goto	l9888
 11269                           
 11270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11271  0101BC  0EE6               	movlw	low STR_46
 11272  0101BE  6EE6               	movwf	postinc1,c
 11273  0101C0  0EFF               	movlw	high STR_46
 11274  0101C2  6EE6               	movwf	postinc1,c
 11275                           
 11276                           ;stkvar	_n @ sp[(-58)+32]
 11277  0101C4  0E7C               	movlw	low _dbuf
 11278  0101C6  6E3C               	movwf	(btemp+10)^0,c
 11279  0101C8  0E01               	movlw	high _dbuf
 11280  0101CA  6E3D               	movwf	(btemp+11)^0,c
 11281  0101CC  0EE6               	movlw	-26
 11282  0101CE  50E3               	movf	plusw1,w,c
 11283  0101D0  263C               	addwf	(btemp+10)^0,f,c
 11284  0101D2  0EE7               	movlw	-25
 11285  0101D4  50E3               	movf	plusw1,w,c
 11286  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 11287  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11288  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11289  0101E4  EC9E  F0B9         	call	_strcpy	;wreg free
 11290                           
 11291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11292  0101E8  D016               	goto	l9890
 11293  0101EA                     l9888:
 11294                           
 11295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11296  0101EA  0EEE               	movlw	low STR_47
 11297  0101EC  6EE6               	movwf	postinc1,c
 11298  0101EE  0EFF               	movlw	high STR_47
 11299  0101F0  6EE6               	movwf	postinc1,c
 11300                           
 11301                           ;stkvar	_n @ sp[(-58)+32]
 11302  0101F2  0E7C               	movlw	low _dbuf
 11303  0101F4  6E3C               	movwf	(btemp+10)^0,c
 11304  0101F6  0E01               	movlw	high _dbuf
 11305  0101F8  6E3D               	movwf	(btemp+11)^0,c
 11306  0101FA  0EE6               	movlw	-26
 11307  0101FC  50E3               	movf	plusw1,w,c
 11308  0101FE  263C               	addwf	(btemp+10)^0,f,c
 11309  010200  0EE7               	movlw	-25
 11310  010202  50E3               	movf	plusw1,w,c
 11311  010204  223D               	addwfc	(btemp+11)^0,f,c
 11312  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11313  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11314  010212  EC9E  F0B9         	call	_strcpy	;wreg free
 11315  010216                     l9890:
 11316                           
 11317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11318                           ;stkvar	_w @ sp[(-56)+38]
 11319  010216  50E1               	movf	fsr1l,w,c
 11320  010218  0FEE               	addlw	-18
 11321  01021A  6ED9               	movwf	fsr2l,c
 11322  01021C  50E2               	movf	fsr1h,w,c
 11323  01021E  6EDA               	movwf	fsr2h,c
 11324  010220  0EFF               	movlw	255
 11325  010222  22DA               	addwfc	fsr2h,f,c
 11326  010224  0EFD               	movlw	253
 11327  010226  26DE               	addwf	postinc2,f,c
 11328  010228  0EFF               	movlw	255
 11329  01022A  22DD               	addwfc	postdec2,f,c
 11330  01022C                     l9892:
 11331                           
 11332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11333                           ;stkvar	_w @ sp[(-56)+38]
 11334  01022C  0EEE               	movlw	-18
 11335  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11336  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11337  01023A  0E7C               	movlw	low _dbuf
 11338  01023C  6EE6               	movwf	postinc1,c
 11339  01023E  0E01               	movlw	high _dbuf
 11340  010240  6EE6               	movwf	postinc1,c
 11341                           
 11342                           ;stkvar	_fp @ sp[(-60)+-2]
 11343  010242  0EC2               	movlw	-62
 11344  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11345  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11346  010250  EC98  F0B6         	call	_pad	;wreg free
 11347  010254  EF1D  F089         	goto	l1921
 11348  010258                     l9896:
 11349                           
 11350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11351                           ;stkvar	_g @ sp[(-56)+16]
 11352  010258  0ED8               	movlw	-40
 11353  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11354  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11355  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11356  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11357  010272  EC63  F0B1         	call	___fpclassifyf	;wreg free
 11358  010276  5032               	movf	btemp^0,w,c
 11359  010278  1033               	iorwf	(btemp+1)^0,w,c
 11360  01027A  A4D8               	btfss	status,2,c
 11361  01027C  D056               	goto	l9914
 11362  01027E  0EBF               	movlw	191
 11363  010280  6E3C               	movwf	(btemp+10)^0,c
 11364  010282  0EFF               	movlw	255
 11365  010284  6E3D               	movwf	(btemp+11)^0,c
 11366                           
 11367                           ;stkvar	_c @ sp[(-56)+-7]
 11368  010286  0EC1               	movlw	-63
 11369  010288  50E3               	movf	plusw1,w,c
 11370  01028A  6E3A               	movwf	(btemp+8)^0,c
 11371  01028C  6A3B               	clrf	(btemp+9)^0,c
 11372  01028E  503C               	movf	(btemp+10)^0,w,c
 11373  010290  263A               	addwf	(btemp+8)^0,f,c
 11374  010292  503D               	movf	(btemp+11)^0,w,c
 11375  010294  223B               	addwfc	(btemp+9)^0,f,c
 11376  010296  503B               	movf	(btemp+9)^0,w,c
 11377  010298  E106               	bnz	u9420
 11378  01029A  0E1A               	movlw	26
 11379  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 11380  01029E  B0D8               	btfsc	status,0,c
 11381  0102A0  D002               	goto	u9420
 11382  0102A2  0E01               	movlw	1
 11383  0102A4  D001               	goto	u9430
 11384  0102A6                     u9420:
 11385  0102A6  0E00               	movlw	0
 11386  0102A8                     u9430:
 11387  0102A8  6E3C               	movwf	(btemp+10)^0,c
 11388  0102AA  6A3D               	clrf	(btemp+11)^0,c
 11389                           
 11390                           ;stkvar	_efgtoa$4607 @ sp[(-56)+6]
 11391  0102AC  0ECE               	movlw	-50
 11392  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11393  0102B4  0ECF               	movlw	-49
 11394  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11395                           
 11396                           ;stkvar	_efgtoa$4607 @ sp[(-56)+6]
 11397  0102BC  0ECE               	movlw	-50
 11398  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 11399  0102C4  0ECF               	movlw	-49
 11400  0102C6  50E3               	movf	plusw1,w,c
 11401  0102C8  1032               	iorwf	btemp^0,w,c
 11402  0102CA  B4D8               	btfsc	status,2,c
 11403  0102CC  D017               	goto	l9906
 11404                           
 11405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11406  0102CE  0EEA               	movlw	low STR_50
 11407  0102D0  6EE6               	movwf	postinc1,c
 11408  0102D2  0EFF               	movlw	high STR_50
 11409  0102D4  6EE6               	movwf	postinc1,c
 11410                           
 11411                           ;stkvar	_n @ sp[(-58)+32]
 11412  0102D6  0E7C               	movlw	low _dbuf
 11413  0102D8  6E3C               	movwf	(btemp+10)^0,c
 11414  0102DA  0E01               	movlw	high _dbuf
 11415  0102DC  6E3D               	movwf	(btemp+11)^0,c
 11416  0102DE  0EE6               	movlw	-26
 11417  0102E0  50E3               	movf	plusw1,w,c
 11418  0102E2  263C               	addwf	(btemp+10)^0,f,c
 11419  0102E4  0EE7               	movlw	-25
 11420  0102E6  50E3               	movf	plusw1,w,c
 11421  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 11422  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11423  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11424  0102F6  EC9E  F0B9         	call	_strcpy	;wreg free
 11425                           
 11426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11427  0102FA  D78D               	goto	l9890
 11428  0102FC                     l9906:
 11429                           
 11430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11431  0102FC  0EF2               	movlw	low STR_51
 11432  0102FE  6EE6               	movwf	postinc1,c
 11433  010300  0EFF               	movlw	high STR_51
 11434  010302  6EE6               	movwf	postinc1,c
 11435                           
 11436                           ;stkvar	_n @ sp[(-58)+32]
 11437  010304  0E7C               	movlw	low _dbuf
 11438  010306  6E3C               	movwf	(btemp+10)^0,c
 11439  010308  0E01               	movlw	high _dbuf
 11440  01030A  6E3D               	movwf	(btemp+11)^0,c
 11441  01030C  0EE6               	movlw	-26
 11442  01030E  50E3               	movf	plusw1,w,c
 11443  010310  263C               	addwf	(btemp+10)^0,f,c
 11444  010312  0EE7               	movlw	-25
 11445  010314  50E3               	movf	plusw1,w,c
 11446  010316  223D               	addwfc	(btemp+11)^0,f,c
 11447  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11448  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11449  010324  EC9E  F0B9         	call	_strcpy	;wreg free
 11450  010328  D776               	goto	l9890
 11451  01032A                     l9914:
 11452                           
 11453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11454  01032A  0E00               	movlw	0
 11455  01032C  6E3A               	movwf	(btemp+8)^0,c
 11456  01032E  0E00               	movlw	0
 11457  010330  6E3B               	movwf	(btemp+9)^0,c
 11458  010332  0E80               	movlw	128
 11459  010334  6E3C               	movwf	(btemp+10)^0,c
 11460  010336  0E3F               	movlw	63
 11461  010338  6E3D               	movwf	(btemp+11)^0,c
 11462                           
 11463                           ;stkvar	_u @ sp[(-56)+12]
 11464  01033A  0ED4               	movlw	-44
 11465  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11466  010342  0ED5               	movlw	-43
 11467  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11468  01034A  0ED6               	movlw	-42
 11469  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11470  010352  0ED7               	movlw	-41
 11471  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11472                           
 11473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11474                           ;stkvar	_e @ sp[(-56)+34]
 11475  01035A  0EEA               	movlw	-22
 11476  01035C  6AE3               	clrf	plusw1,c
 11477  01035E  0EEB               	movlw	-21
 11478  010360  6AE3               	clrf	plusw1,c
 11479                           
 11480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11481  010362  0E00               	movlw	0
 11482  010364  6EE6               	movwf	postinc1,c
 11483  010366  0E00               	movlw	0
 11484  010368  6EE6               	movwf	postinc1,c
 11485  01036A  0E00               	movlw	0
 11486  01036C  6EE6               	movwf	postinc1,c
 11487  01036E  0E00               	movlw	0
 11488  010370  6EE6               	movwf	postinc1,c
 11489                           
 11490                           ;stkvar	_g @ sp[(-60)+16]
 11491  010372  0ED4               	movlw	-44
 11492  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11493  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11494  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11495  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11496  01038C  EC08  F0BA         	call	___fleq	;wreg free
 11497  010390  A032               	btfss	btemp& (0+255),0,c
 11498  010392  D039               	goto	l9926
 11499  010394  D0BC               	goto	u9470
 11500  010396                     l9922:
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11503  010396  0E00               	movlw	0
 11504  010398  6EE6               	movwf	postinc1,c
 11505  01039A  0E00               	movlw	0
 11506  01039C  6EE6               	movwf	postinc1,c
 11507  01039E  0E20               	movlw	32
 11508  0103A0  6EE6               	movwf	postinc1,c
 11509  0103A2  0E41               	movlw	65
 11510  0103A4  6EE6               	movwf	postinc1,c
 11511                           
 11512                           ;stkvar	_u @ sp[(-60)+12]
 11513  0103A6  0ED0               	movlw	-48
 11514  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11515  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11516  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11517  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11518  0103C0  ECDF  F092         	call	___flmul	;wreg free
 11519                           
 11520                           ;stkvar	_u @ sp[(-56)+12]
 11521  0103C4  0ED4               	movlw	-44
 11522  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11523  0103CC  0ED5               	movlw	-43
 11524  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11525  0103D4  0ED6               	movlw	-42
 11526  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11527  0103DC  0ED7               	movlw	-41
 11528  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11529                           
 11530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11531                           ;stkvar	_e @ sp[(-56)+34]
 11532  0103E4  0EEA               	movlw	-22
 11533  0103E6  50E3               	movf	plusw1,w,c
 11534  0103E8  0F01               	addlw	1
 11535  0103EA  6E32               	movwf	btemp^0,c
 11536  0103EC  0EEA               	movlw	-22
 11537  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11538  0103F4  6A32               	clrf	btemp^0,c
 11539  0103F6  0EEB               	movlw	-21
 11540  0103F8  50E3               	movf	plusw1,w,c
 11541  0103FA  2032               	addwfc	btemp^0,w,c
 11542  0103FC  6E32               	movwf	btemp^0,c
 11543  0103FE  0EEB               	movlw	-21
 11544  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11545  010406                     l9926:
 11546                           
 11547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11548  010406  0E00               	movlw	0
 11549  010408  6EE6               	movwf	postinc1,c
 11550  01040A  0E00               	movlw	0
 11551  01040C  6EE6               	movwf	postinc1,c
 11552  01040E  0E20               	movlw	32
 11553  010410  6EE6               	movwf	postinc1,c
 11554  010412  0E41               	movlw	65
 11555  010414  6EE6               	movwf	postinc1,c
 11556                           
 11557                           ;stkvar	_u @ sp[(-60)+12]
 11558  010416  0ED0               	movlw	-48
 11559  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11560  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11561  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11562  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11563  010430  ECDF  F092         	call	___flmul	;wreg free
 11564  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11565  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11566  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11567  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11568                           
 11569                           ;stkvar	_g @ sp[(-60)+16]
 11570  01044C  0ED4               	movlw	-44
 11571  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11572  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11573  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11574  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11575  010466  ECE7  F0B2         	call	___flge	;wreg free
 11576  01046A  A032               	btfss	btemp& (0+255),0,c
 11577  01046C  D032               	goto	l9932
 11578  01046E  D793               	goto	l9922
 11579  010470                     l9928:
 11580                           
 11581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11582  010470  0E00               	movlw	0
 11583  010472  6EE6               	movwf	postinc1,c
 11584  010474  0E00               	movlw	0
 11585  010476  6EE6               	movwf	postinc1,c
 11586  010478  0E20               	movlw	32
 11587  01047A  6EE6               	movwf	postinc1,c
 11588  01047C  0E41               	movlw	65
 11589  01047E  6EE6               	movwf	postinc1,c
 11590                           
 11591                           ;stkvar	_u @ sp[(-60)+12]
 11592  010480  0ED0               	movlw	-48
 11593  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11594  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11595  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11596  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11597  01049A  ECD2  F09A         	call	___fldiv	;wreg free
 11598                           
 11599                           ;stkvar	_u @ sp[(-56)+12]
 11600  01049E  0ED4               	movlw	-44
 11601  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11602  0104A6  0ED5               	movlw	-43
 11603  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11604  0104AE  0ED6               	movlw	-42
 11605  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11606  0104B6  0ED7               	movlw	-41
 11607  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11610                           ;stkvar	_e @ sp[(-56)+34]
 11611  0104BE  50E1               	movf	fsr1l,w,c
 11612  0104C0  0FEA               	addlw	-22
 11613  0104C2  6ED9               	movwf	fsr2l,c
 11614  0104C4  50E2               	movf	fsr1h,w,c
 11615  0104C6  6EDA               	movwf	fsr2h,c
 11616  0104C8  0EFF               	movlw	255
 11617  0104CA  22DA               	addwfc	fsr2h,f,c
 11618  0104CC  06DE               	decf	postinc2,f,c
 11619  0104CE  0E00               	movlw	0
 11620  0104D0  5ADD               	subwfb	postdec2,f,c
 11621  0104D2                     l9932:
 11622                           
 11623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11624                           ;stkvar	_u @ sp[(-56)+12]
 11625  0104D2  0ED4               	movlw	-44
 11626  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11627  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11628  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11629  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11630                           
 11631                           ;stkvar	_g @ sp[(-60)+16]
 11632  0104EC  0ED4               	movlw	-44
 11633  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11634  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11635  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11636  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11637  010506  ECE7  F0B2         	call	___flge	;wreg free
 11638  01050A  A032               	btfss	btemp& (0+255),0,c
 11639  01050C  D7B1               	goto	l9928
 11640  01050E                     u9470:
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11643                           ;stkvar	_c @ sp[(-56)+-7]
 11644  01050E  0EC1               	movlw	-63
 11645  010510  50E3               	movf	plusw1,w,c
 11646  010512  6EE6               	movwf	postinc1,c
 11647  010514  0E00               	movlw	0
 11648  010516  6EE6               	movwf	postinc1,c
 11649  010518  EC1D  F0BE         	call	_tolower	;wreg free
 11650                           
 11651                           ;stkvar	_mode @ sp[(-56)+54]
 11652  01051C  0EFE               	movlw	-2
 11653  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11654                           
 11655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11656                           ;stkvar	_mode @ sp[(-56)+54]
 11657                           ;stkvar	_nmode @ sp[(-56)+55]
 11658  010524  0EFE               	movlw	-2
 11659  010526  006F FF8C  F032    	movff	plusw1,btemp
 11660  01052C  0EFF               	movlw	-1
 11661  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11662                           
 11663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11664                           ;stkvar	_mode @ sp[(-56)+54]
 11665  010534  0EFE               	movlw	-2
 11666  010536  006F FF8C  F032    	movff	plusw1,btemp
 11667  01053C  0E67               	movlw	103
 11668  01053E  1832               	xorwf	btemp^0,w,c
 11669  010540  A4D8               	btfss	status,2,c
 11670  010542  D025               	goto	l9950
 11671                           
 11672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11673  010544  501D               	movf	_prec^0,w,c
 11674  010546  101E               	iorwf	(_prec+1)^0,w,c
 11675  010548  A4D8               	btfss	status,2,c
 11676  01054A  D004               	goto	l9944
 11677                           
 11678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11679  01054C  0E00               	movlw	0
 11680  01054E  6E1E               	movwf	(_prec+1)^0,c
 11681  010550  0E01               	movlw	1
 11682  010552  6E1D               	movwf	_prec^0,c
 11683  010554                     l9944:
 11684                           
 11685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11686  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11687  010556  D005               	goto	u9500
 11688  010558  501E               	movf	(_prec+1)^0,w,c
 11689  01055A  E110               	bnz	l9948
 11690  01055C  041D               	decf	_prec^0,w,c
 11691  01055E  B0D8               	btfsc	status,0,c
 11692  010560  D00D               	goto	l9948
 11693  010562                     u9500:
 11694  010562  0E06               	movlw	6
 11695  010564  6E3C               	movwf	(btemp+10)^0,c
 11696  010566  0E00               	movlw	0
 11697  010568  6E3D               	movwf	(btemp+11)^0,c
 11698                           
 11699                           ;stkvar	_p @ sp[(-56)+40]
 11700  01056A  0EF0               	movlw	-16
 11701  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11702  010572  0EF1               	movlw	-15
 11703  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11704  01057A  D00C               	goto	l9956
 11705  01057C                     l9948:
 11706                           
 11707                           ;stkvar	_p @ sp[(-56)+40]
 11708  01057C  0EF0               	movlw	-16
 11709  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11710  010584  0EF1               	movlw	-15
 11711  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11712  01058C  D003               	goto	l9956
 11713  01058E                     l9950:
 11714                           
 11715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11716  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11717  010590  D7F5               	goto	l9948
 11718  010592  D7E7               	goto	u9500
 11719  010594                     l9956:
 11720                           
 11721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11722                           ;stkvar	_mode @ sp[(-56)+54]
 11723  010594  0EFE               	movlw	-2
 11724  010596  006F FF8C  F032    	movff	plusw1,btemp
 11725  01059C  0E67               	movlw	103
 11726  01059E  1832               	xorwf	btemp^0,w,c
 11727  0105A0  A4D8               	btfss	status,2,c
 11728  0105A2  D02F               	goto	l9966
 11729                           
 11730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11731                           ;stkvar	_e @ sp[(-56)+34]
 11732  0105A4  0EEB               	movlw	-21
 11733  0105A6  AEE3               	btfss	plusw1,7,c
 11734  0105A8  D00E               	goto	u9530
 11735  0105AA  0EEA               	movlw	-22
 11736  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11737  0105B2  0EFC               	movlw	252
 11738  0105B4  5E32               	subwf	btemp^0,f,c
 11739  0105B6  0EEB               	movlw	-21
 11740  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11741  0105BE  0EFF               	movlw	255
 11742  0105C0  5A32               	subwfb	btemp^0,f,c
 11743  0105C2  A0D8               	btfss	status,0,c
 11744  0105C4  D018               	goto	l9964
 11745  0105C6                     u9530:
 11746                           
 11747                           ;stkvar	_e @ sp[(-56)+34]
 11748                           ;stkvar	_p @ sp[(-56)+40]
 11749  0105C6  0EF0               	movlw	-16
 11750  0105C8  50E3               	movf	plusw1,w,c
 11751  0105CA  0FFF               	addlw	255
 11752  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11753  0105CE  0EF1               	movlw	-15
 11754  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11755  0105D6  0EFF               	movlw	255
 11756  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11757  0105DA  0EEA               	movlw	-22
 11758  0105DC  50E3               	movf	plusw1,w,c
 11759  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11760  0105E0  503D               	movf	(btemp+11)^0,w,c
 11761  0105E2  0A80               	xorlw	128
 11762  0105E4  6E32               	movwf	btemp^0,c
 11763  0105E6  0EEB               	movlw	-21
 11764  0105E8  50E3               	movf	plusw1,w,c
 11765  0105EA  0A80               	xorlw	128
 11766  0105EC  5832               	subwfb	btemp^0,w,c
 11767  0105EE  A0D8               	btfss	status,0,c
 11768  0105F0  D002               	goto	l9964
 11769                           
 11770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11771  0105F2  0E66               	movlw	102
 11772  0105F4  D001               	goto	L10
 11773  0105F6                     l9964:
 11774                           
 11775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11776  0105F6  0E65               	movlw	101
 11777  0105F8                     L10:
 11778  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11779                           
 11780                           ;stkvar	_nmode @ sp[(-56)+55]
 11781  0105FA  0EFF               	movlw	-1
 11782  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11783  010602                     l9966:
 11784                           
 11785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11786                           ;stkvar	_p @ sp[(-56)+40]
 11787                           ;stkvar	_m @ sp[(-56)+48]
 11788  010602  0EF0               	movlw	-16
 11789  010604  006F FF8C  F032    	movff	plusw1,btemp
 11790  01060A  0EF8               	movlw	-8
 11791  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11792  010612  0EF1               	movlw	-15
 11793  010614  006F FF8C  F032    	movff	plusw1,btemp
 11794  01061A  0EF9               	movlw	-7
 11795  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11796                           
 11797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11798                           ;stkvar	_mode @ sp[(-56)+54]
 11799  010622  0EFE               	movlw	-2
 11800  010624  006F FF8C  F032    	movff	plusw1,btemp
 11801  01062A  0E67               	movlw	103
 11802  01062C  1832               	xorwf	btemp^0,w,c
 11803  01062E  A4D8               	btfss	status,2,c
 11804  010630  D00B               	goto	u9570
 11805                           
 11806                           ;stkvar	_nmode @ sp[(-56)+55]
 11807  010632  0EFF               	movlw	-1
 11808  010634  006F FF8C  F032    	movff	plusw1,btemp
 11809  01063A  0E66               	movlw	102
 11810  01063C  1832               	xorwf	btemp^0,w,c
 11811  01063E  A4D8               	btfss	status,2,c
 11812  010640  D014               	goto	l1950
 11813                           
 11814                           ;stkvar	_e @ sp[(-56)+34]
 11815  010642  0EEB               	movlw	-21
 11816  010644  AEE3               	btfss	plusw1,7,c
 11817  010646  D011               	goto	l1950
 11818  010648                     u9570:
 11819                           
 11820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11821                           ;stkvar	_m @ sp[(-56)+48]
 11822  010648  0EF8               	movlw	-8
 11823  01064A  50E3               	movf	plusw1,w,c
 11824  01064C  0F01               	addlw	1
 11825  01064E  6E32               	movwf	btemp^0,c
 11826  010650  0EF8               	movlw	-8
 11827  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11828  010658  6A32               	clrf	btemp^0,c
 11829  01065A  0EF9               	movlw	-7
 11830  01065C  50E3               	movf	plusw1,w,c
 11831  01065E  2032               	addwfc	btemp^0,w,c
 11832  010660  6E32               	movwf	btemp^0,c
 11833  010662  0EF9               	movlw	-7
 11834  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11835  01066A                     l1950:
 11836                           
 11837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11838                           ;stkvar	_nmode @ sp[(-56)+55]
 11839  01066A  0EFF               	movlw	-1
 11840  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11841  010672  0E66               	movlw	102
 11842  010674  1832               	xorwf	btemp^0,w,c
 11843  010676  A4D8               	btfss	status,2,c
 11844  010678  D03B               	goto	l9986
 11845                           
 11846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11847                           ;stkvar	_e @ sp[(-56)+34]
 11848  01067A  0EEB               	movlw	-21
 11849  01067C  AEE3               	btfss	plusw1,7,c
 11850  01067E  D01C               	goto	l9982
 11851                           
 11852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11853  010680  0E00               	movlw	0
 11854  010682  6E3A               	movwf	(btemp+8)^0,c
 11855  010684  0E00               	movlw	0
 11856  010686  6E3B               	movwf	(btemp+9)^0,c
 11857  010688  0E80               	movlw	128
 11858  01068A  6E3C               	movwf	(btemp+10)^0,c
 11859  01068C  0E3F               	movlw	63
 11860  01068E  6E3D               	movwf	(btemp+11)^0,c
 11861                           
 11862                           ;stkvar	_u @ sp[(-56)+12]
 11863  010690  0ED4               	movlw	-44
 11864  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11865  010698  0ED5               	movlw	-43
 11866  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11867  0106A0  0ED6               	movlw	-42
 11868  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11869  0106A8  0ED7               	movlw	-41
 11870  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11871                           
 11872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11873                           ;stkvar	_e @ sp[(-56)+34]
 11874  0106B0  0EEA               	movlw	-22
 11875  0106B2  6AE3               	clrf	plusw1,c
 11876  0106B4  0EEB               	movlw	-21
 11877  0106B6  6AE3               	clrf	plusw1,c
 11878  0106B8                     l9982:
 11879                           
 11880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11881                           ;stkvar	_mode @ sp[(-56)+54]
 11882  0106B8  0EFE               	movlw	-2
 11883  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11884  0106C0  0E67               	movlw	103
 11885  0106C2  1832               	xorwf	btemp^0,w,c
 11886  0106C4  B4D8               	btfsc	status,2,c
 11887  0106C6  D014               	goto	l9986
 11888                           
 11889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11890                           ;stkvar	_e @ sp[(-56)+34]
 11891                           ;stkvar	_m @ sp[(-56)+48]
 11892  0106C8  0EF8               	movlw	-8
 11893  0106CA  50E3               	movf	plusw1,w,c
 11894  0106CC  6E32               	movwf	btemp^0,c
 11895  0106CE  0EEA               	movlw	-22
 11896  0106D0  50E3               	movf	plusw1,w,c
 11897  0106D2  2632               	addwf	btemp^0,f,c
 11898  0106D4  0EF8               	movlw	-8
 11899  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11900  0106DC  0EF9               	movlw	-7
 11901  0106DE  50E3               	movf	plusw1,w,c
 11902  0106E0  6E32               	movwf	btemp^0,c
 11903  0106E2  0EEB               	movlw	-21
 11904  0106E4  50E3               	movf	plusw1,w,c
 11905  0106E6  2232               	addwfc	btemp^0,f,c
 11906  0106E8  0EF9               	movlw	-7
 11907  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11908  0106F0                     l9986:
 11909                           
 11910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11911                           ;stkvar	_i @ sp[(-56)+36]
 11912  0106F0  0EEC               	movlw	-20
 11913  0106F2  6AE3               	clrf	plusw1,c
 11914  0106F4  0EED               	movlw	-19
 11915  0106F6  6AE3               	clrf	plusw1,c
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11918                           ;stkvar	_g @ sp[(-56)+16]
 11919  0106F8  0ED8               	movlw	-40
 11920  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11921  010700  0ED9               	movlw	-39
 11922  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11923  010708  0EDA               	movlw	-38
 11924  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11925  010710  0EDB               	movlw	-37
 11926  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11927                           
 11928                           ;stkvar	_h @ sp[(-56)+24]
 11929  010718  0EE0               	movlw	-32
 11930  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11931  010720  0EE1               	movlw	-31
 11932  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11933  010728  0EE2               	movlw	-30
 11934  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11935  010730  0EE3               	movlw	-29
 11936  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11937                           
 11938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11939                           ;stkvar	_u @ sp[(-56)+12]
 11940  010738  0ED4               	movlw	-44
 11941  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11942  010740  0ED5               	movlw	-43
 11943  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11944  010748  0ED6               	movlw	-42
 11945  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11946  010750  0ED7               	movlw	-41
 11947  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11948                           
 11949                           ;stkvar	_ou @ sp[(-56)+28]
 11950  010758  0EE4               	movlw	-28
 11951  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11952  010760  0EE5               	movlw	-27
 11953  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11954  010768  0EE6               	movlw	-26
 11955  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11956  010770  0EE7               	movlw	-25
 11957  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11958                           
 11959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11960  010778  D0D6               	goto	l10002
 11961  01077A                     l9992:
 11962                           
 11963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11964                           ;stkvar	_u @ sp[(-56)+12]
 11965  01077A  0ED4               	movlw	-44
 11966  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11967  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11968  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11969  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11970                           
 11971                           ;stkvar	_h @ sp[(-60)+24]
 11972  010794  0EDC               	movlw	-36
 11973  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11974  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11975  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11976  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11977  0107AE  ECD2  F09A         	call	___fldiv	;wreg free
 11978  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11979  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11980  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11981  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11982  0107CA  EC02  F0A4         	call	_floorf	;wreg free
 11983                           
 11984                           ;stkvar	_l @ sp[(-56)+20]
 11985  0107CE  0EDC               	movlw	-36
 11986  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11987  0107D6  0EDD               	movlw	-35
 11988  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11989  0107DE  0EDE               	movlw	-34
 11990  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11991  0107E6  0EDF               	movlw	-33
 11992  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11993                           
 11994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11995                           ;stkvar	_l @ sp[(-56)+20]
 11996  0107EE  0EDC               	movlw	-36
 11997  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11998  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11999  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12000  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12001  010808  EC2E  F0B2         	call	___fltol	;wreg free
 12002  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 12003  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12004                           
 12005                           ;stkvar	_d @ sp[(-56)+44]
 12006  010818  0EF4               	movlw	-12
 12007  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12008  010820  0EF5               	movlw	-11
 12009  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12010                           
 12011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12012                           ;stkvar	_u @ sp[(-56)+12]
 12013  010828  0ED4               	movlw	-44
 12014  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12015  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12016  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12017  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12018                           
 12019                           ;stkvar	_l @ sp[(-60)+20]
 12020  010842  0ED8               	movlw	-40
 12021  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12022  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12023  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12024  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12025  01085C  ECDF  F092         	call	___flmul	;wreg free
 12026  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 12027  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12028  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12029  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12030                           
 12031                           ;stkvar	_h @ sp[(-60)+24]
 12032  010878  0EDC               	movlw	-36
 12033  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12034  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12035  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12036  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12037  010892  EC85  F0C1         	call	___flsub	;wreg free
 12038                           
 12039                           ;stkvar	_h @ sp[(-56)+24]
 12040  010896  0EE0               	movlw	-32
 12041  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 12042  01089E  0EE1               	movlw	-31
 12043  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12044  0108A6  0EE2               	movlw	-30
 12045  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12046  0108AE  0EE3               	movlw	-29
 12047  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12048                           
 12049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12050  0108B6  0E00               	movlw	0
 12051  0108B8  6EE6               	movwf	postinc1,c
 12052  0108BA  0E00               	movlw	0
 12053  0108BC  6EE6               	movwf	postinc1,c
 12054  0108BE  0E20               	movlw	32
 12055  0108C0  6EE6               	movwf	postinc1,c
 12056  0108C2  0E41               	movlw	65
 12057  0108C4  6EE6               	movwf	postinc1,c
 12058                           
 12059                           ;stkvar	_u @ sp[(-60)+12]
 12060  0108C6  0ED0               	movlw	-48
 12061  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12062  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12063  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12064  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12065  0108E0  ECD2  F09A         	call	___fldiv	;wreg free
 12066                           
 12067                           ;stkvar	_u @ sp[(-56)+12]
 12068  0108E4  0ED4               	movlw	-44
 12069  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12070  0108EC  0ED5               	movlw	-43
 12071  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12072  0108F4  0ED6               	movlw	-42
 12073  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12074  0108FC  0ED7               	movlw	-41
 12075  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12076                           
 12077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12078                           ;stkvar	_i @ sp[(-56)+36]
 12079  010904  0EEC               	movlw	-20
 12080  010906  50E3               	movf	plusw1,w,c
 12081  010908  0F01               	addlw	1
 12082  01090A  6E32               	movwf	btemp^0,c
 12083  01090C  0EEC               	movlw	-20
 12084  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12085  010914  6A32               	clrf	btemp^0,c
 12086  010916  0EED               	movlw	-19
 12087  010918  50E3               	movf	plusw1,w,c
 12088  01091A  2032               	addwfc	btemp^0,w,c
 12089  01091C  6E32               	movwf	btemp^0,c
 12090  01091E  0EED               	movlw	-19
 12091  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 12092  010926                     l10002:
 12093                           
 12094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12095                           ;stkvar	_m @ sp[(-56)+48]
 12096                           ;stkvar	_i @ sp[(-56)+36]
 12097  010926  50E1               	movf	fsr1l,w,c
 12098  010928  0FEC               	addlw	-20
 12099  01092A  6ED9               	movwf	fsr2l,c
 12100  01092C  50E2               	movf	fsr1h,w,c
 12101  01092E  6EDA               	movwf	fsr2h,c
 12102  010930  0EFF               	movlw	255
 12103  010932  22DA               	addwfc	fsr2h,f,c
 12104  010934  0EF8               	movlw	-8
 12105  010936  50E3               	movf	plusw1,w,c
 12106  010938  5CDE               	subwf	postinc2,w,c
 12107  01093A  50DE               	movf	postinc2,w,c
 12108  01093C  0A80               	xorlw	128
 12109  01093E  6E32               	movwf	btemp^0,c
 12110  010940  0EF9               	movlw	-7
 12111  010942  50E3               	movf	plusw1,w,c
 12112  010944  0A80               	xorlw	128
 12113  010946  5832               	subwfb	btemp^0,w,c
 12114  010948  A0D8               	btfss	status,0,c
 12115  01094A  D717               	goto	l9992
 12116                           
 12117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12118  01094C  0E00               	movlw	0
 12119  01094E  6EE6               	movwf	postinc1,c
 12120  010950  0E00               	movlw	0
 12121  010952  6EE6               	movwf	postinc1,c
 12122  010954  0EA0               	movlw	160
 12123  010956  6EE6               	movwf	postinc1,c
 12124  010958  0E40               	movlw	64
 12125  01095A  6EE6               	movwf	postinc1,c
 12126                           
 12127                           ;stkvar	_u @ sp[(-60)+12]
 12128  01095C  0ED0               	movlw	-48
 12129  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12130  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12131  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12132  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12133  010976  ECDF  F092         	call	___flmul	;wreg free
 12134                           
 12135                           ;stkvar	_l @ sp[(-56)+20]
 12136  01097A  0EDC               	movlw	-36
 12137  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12138  010982  0EDD               	movlw	-35
 12139  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12140  01098A  0EDE               	movlw	-34
 12141  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12142  010992  0EDF               	movlw	-33
 12143  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12144                           
 12145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12146                           ;stkvar	_l @ sp[(-56)+20]
 12147  01099A  0EDC               	movlw	-36
 12148  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12149  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12150  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12151  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12152                           
 12153                           ;stkvar	_h @ sp[(-60)+24]
 12154  0109B4  0EDC               	movlw	-36
 12155  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12156  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12157  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12158  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12159  0109CE  ECE7  F0B2         	call	___flge	;wreg free
 12160  0109D2  A032               	btfss	btemp& (0+255),0,c
 12161  0109D4  D021               	goto	u9640
 12162                           
 12163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12164                           ;stkvar	_l @ sp[(-56)+20]
 12165                           
 12166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12167                           
 12168                           ;stkvar	_l @ sp[(-56)+20]
 12169                           
 12170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12171  0109D6  0EDC               	movlw	-36
 12172  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12173  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12174  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12175  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12176                           
 12177                           ;stkvar	_h @ sp[(-60)+24]
 12178  0109F0  0EDC               	movlw	-36
 12179  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12180  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12181  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12182  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12183  010A0A  EC08  F0BA         	call	___fleq	;wreg free
 12184  010A0E  A032               	btfss	btemp& (0+255),0,c
 12185  010A10  D01B               	goto	l10016
 12186                           
 12187                           ;stkvar	_d @ sp[(-56)+44]
 12188  010A12  0EF4               	movlw	-12
 12189  010A14  B0E3               	btfsc	plusw1,0,c
 12190  010A16  D018               	goto	l10016
 12191  010A18                     u9640:
 12192                           
 12193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12194  010A18  0E00               	movlw	0
 12195  010A1A  6E3A               	movwf	(btemp+8)^0,c
 12196  010A1C  0E00               	movlw	0
 12197  010A1E  6E3B               	movwf	(btemp+9)^0,c
 12198  010A20  0E00               	movlw	0
 12199  010A22  6E3C               	movwf	(btemp+10)^0,c
 12200  010A24  0E00               	movlw	0
 12201  010A26  6E3D               	movwf	(btemp+11)^0,c
 12202                           
 12203                           ;stkvar	_l @ sp[(-56)+20]
 12204  010A28  0EDC               	movlw	-36
 12205  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12206  010A30  0EDD               	movlw	-35
 12207  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12208  010A38  0EDE               	movlw	-34
 12209  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12210  010A40  0EDF               	movlw	-33
 12211  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12212  010A48                     l10016:
 12213                           
 12214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12215                           ;stkvar	_l @ sp[(-56)+20]
 12216  010A48  0EDC               	movlw	-36
 12217  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12218  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12219  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12220  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12221                           
 12222                           ;stkvar	_g @ sp[(-60)+16]
 12223  010A62  0ED4               	movlw	-44
 12224  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12225  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12226  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12227  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12228  010A7C  ECF4  F096         	call	___fladd	;wreg free
 12229                           
 12230                           ;stkvar	_h @ sp[(-56)+24]
 12231  010A80  0EE0               	movlw	-32
 12232  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 12233  010A88  0EE1               	movlw	-31
 12234  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12235  010A90  0EE2               	movlw	-30
 12236  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12237  010A98  0EE3               	movlw	-29
 12238  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12239                           
 12240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12241                           ;stkvar	_ou @ sp[(-56)+28]
 12242  010AA0  0EE4               	movlw	-28
 12243  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12244  010AA8  0EE5               	movlw	-27
 12245  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12246  010AB0  0EE6               	movlw	-26
 12247  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12248  010AB8  0EE7               	movlw	-25
 12249  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12250                           
 12251                           ;stkvar	_u @ sp[(-56)+12]
 12252  010AC0  0ED4               	movlw	-44
 12253  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12254  010AC8  0ED5               	movlw	-43
 12255  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12256  010AD0  0ED6               	movlw	-42
 12257  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12258  010AD8  0ED7               	movlw	-41
 12259  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12260                           
 12261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12262                           ;stkvar	_nmode @ sp[(-56)+55]
 12263  010AE0  0EFF               	movlw	-1
 12264  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 12265  010AE8  0E65               	movlw	101
 12266  010AEA  1832               	xorwf	btemp^0,w,c
 12267  010AEC  B4D8               	btfsc	status,2,c
 12268  010AEE  D011               	goto	l10024
 12269                           
 12270                           ;stkvar	_e @ sp[(-56)+34]
 12271                           ;stkvar	_ne @ sp[(-56)+46]
 12272  010AF0  0EEA               	movlw	-22
 12273  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 12274  010AF8  0EF6               	movlw	-10
 12275  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12276  010B00  0EEB               	movlw	-21
 12277  010B02  006F FF8C  F032    	movff	plusw1,btemp
 12278  010B08  0EF7               	movlw	-9
 12279  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12280  010B10  D004               	goto	l1965
 12281  010B12                     l10024:
 12282                           
 12283                           ;stkvar	_ne @ sp[(-56)+46]
 12284  010B12  0EF6               	movlw	-10
 12285  010B14  6AE3               	clrf	plusw1,c
 12286  010B16  0EF7               	movlw	-9
 12287  010B18  6AE3               	clrf	plusw1,c
 12288  010B1A                     l1965:
 12289                           
 12290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12291                           ;stkvar	_pp @ sp[(-56)+50]
 12292  010B1A  0EFA               	movlw	-6
 12293  010B1C  6AE3               	clrf	plusw1,c
 12294  010B1E  0EFB               	movlw	-5
 12295  010B20  6AE3               	clrf	plusw1,c
 12296                           
 12297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12298                           ;stkvar	_t @ sp[(-56)+52]
 12299  010B22  0EFC               	movlw	-4
 12300  010B24  6AE3               	clrf	plusw1,c
 12301  010B26  0EFD               	movlw	-3
 12302  010B28  6AE3               	clrf	plusw1,c
 12303                           
 12304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12305                           ;stkvar	_i @ sp[(-56)+36]
 12306  010B2A  0EEC               	movlw	-20
 12307  010B2C  6AE3               	clrf	plusw1,c
 12308  010B2E  0EED               	movlw	-19
 12309  010B30  6AE3               	clrf	plusw1,c
 12310                           
 12311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12312  010B32  D1B7               	goto	l10076
 12313  010B34                     l10026:
 12314                           
 12315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12316                           ;stkvar	_u @ sp[(-56)+12]
 12317  010B34  0ED4               	movlw	-44
 12318  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12319  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12320  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12322                           
 12323                           ;stkvar	_h @ sp[(-60)+24]
 12324  010B4E  0EDC               	movlw	-36
 12325  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12326  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12327  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12328  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12329  010B68  ECD2  F09A         	call	___fldiv	;wreg free
 12330  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 12331  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12332  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12333  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12334  010B84  EC02  F0A4         	call	_floorf	;wreg free
 12335                           
 12336                           ;stkvar	_l @ sp[(-56)+20]
 12337  010B88  0EDC               	movlw	-36
 12338  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12339  010B90  0EDD               	movlw	-35
 12340  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12341  010B98  0EDE               	movlw	-34
 12342  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12343  010BA0  0EDF               	movlw	-33
 12344  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12345                           
 12346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12347                           ;stkvar	_l @ sp[(-56)+20]
 12348  010BA8  0EDC               	movlw	-36
 12349  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12350  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12351  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12352  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12353  010BC2  EC2E  F0B2         	call	___fltol	;wreg free
 12354  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 12355  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12356                           
 12357                           ;stkvar	_d @ sp[(-56)+44]
 12358  010BD2  0EF4               	movlw	-12
 12359  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12360  010BDA  0EF5               	movlw	-11
 12361  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12362                           
 12363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12364  010BE2  B81F               	btfsc	_flags^0,4,c
 12365  010BE4  D026               	goto	l10040
 12366                           
 12367                           ;stkvar	_d @ sp[(-56)+44]
 12368  010BE6  0EF4               	movlw	-12
 12369  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 12370  010BEE  0EF5               	movlw	-11
 12371  010BF0  50E3               	movf	plusw1,w,c
 12372  010BF2  1032               	iorwf	btemp^0,w,c
 12373  010BF4  A4D8               	btfss	status,2,c
 12374  010BF6  D01D               	goto	l10040
 12375                           
 12376                           ;stkvar	_mode @ sp[(-56)+54]
 12377  010BF8  0EFE               	movlw	-2
 12378  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 12379  010C00  0E67               	movlw	103
 12380  010C02  1832               	xorwf	btemp^0,w,c
 12381  010C04  A4D8               	btfss	status,2,c
 12382  010C06  D015               	goto	l10040
 12383                           
 12384                           ;stkvar	_ne @ sp[(-56)+46]
 12385  010C08  0EF7               	movlw	-9
 12386  010C0A  AEE3               	btfss	plusw1,7,c
 12387  010C0C  D012               	goto	l10040
 12388                           
 12389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12390                           ;stkvar	_t @ sp[(-56)+52]
 12391  010C0E  0EFC               	movlw	-4
 12392  010C10  50E3               	movf	plusw1,w,c
 12393  010C12  0F01               	addlw	1
 12394  010C14  6E32               	movwf	btemp^0,c
 12395  010C16  0EFC               	movlw	-4
 12396  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 12397  010C1E  6A32               	clrf	btemp^0,c
 12398  010C20  0EFD               	movlw	-3
 12399  010C22  50E3               	movf	plusw1,w,c
 12400  010C24  2032               	addwfc	btemp^0,w,c
 12401  010C26  6E32               	movwf	btemp^0,c
 12402  010C28  0EFD               	movlw	-3
 12403  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12404                           
 12405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12406  010C30  D0AF               	goto	l10068
 12407  010C32                     l10040:
 12408                           
 12409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12410                           ;stkvar	_pp @ sp[(-56)+50]
 12411  010C32  0EFA               	movlw	-6
 12412  010C34  006F FF8C  F032    	movff	plusw1,btemp
 12413  010C3A  0EFB               	movlw	-5
 12414  010C3C  50E3               	movf	plusw1,w,c
 12415  010C3E  1032               	iorwf	btemp^0,w,c
 12416  010C40  A4D8               	btfss	status,2,c
 12417  010C42  D070               	goto	l10060
 12418                           
 12419                           ;stkvar	_ne @ sp[(-56)+46]
 12420  010C44  0EF7               	movlw	-9
 12421  010C46  AEE3               	btfss	plusw1,7,c
 12422  010C48  D06D               	goto	l10060
 12423                           
 12424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12425                           ;stkvar	_n @ sp[(-56)+32]
 12426  010C4A  0EE8               	movlw	-24
 12427  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12428  010C52  0EE9               	movlw	-23
 12429  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 12430  010C5A  0E7C               	movlw	low _dbuf
 12431  010C5C  243C               	addwf	(btemp+10)^0,w,c
 12432  010C5E  6ED9               	movwf	fsr2l,c
 12433  010C60  0E01               	movlw	high _dbuf
 12434  010C62  203D               	addwfc	(btemp+11)^0,w,c
 12435  010C64  6EDA               	movwf	fsr2h,c
 12436  010C66  0E2E               	movlw	46
 12437  010C68  6EDF               	movwf	indf2,c
 12438                           
 12439                           ;stkvar	_n @ sp[(-56)+32]
 12440  010C6A  0EE8               	movlw	-24
 12441  010C6C  50E3               	movf	plusw1,w,c
 12442  010C6E  0F01               	addlw	1
 12443  010C70  6E32               	movwf	btemp^0,c
 12444  010C72  0EE8               	movlw	-24
 12445  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 12446  010C7A  6A32               	clrf	btemp^0,c
 12447  010C7C  0EE9               	movlw	-23
 12448  010C7E  50E3               	movf	plusw1,w,c
 12449  010C80  2032               	addwfc	btemp^0,w,c
 12450  010C82  6E32               	movwf	btemp^0,c
 12451  010C84  0EE9               	movlw	-23
 12452  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 12453                           
 12454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12455                           ;stkvar	_w @ sp[(-56)+38]
 12456  010C8C  50E1               	movf	fsr1l,w,c
 12457  010C8E  0FEE               	addlw	-18
 12458  010C90  6ED9               	movwf	fsr2l,c
 12459  010C92  50E2               	movf	fsr1h,w,c
 12460  010C94  6EDA               	movwf	fsr2h,c
 12461  010C96  0EFF               	movlw	255
 12462  010C98  22DA               	addwfc	fsr2h,f,c
 12463  010C9A  06DE               	decf	postinc2,f,c
 12464  010C9C  0E00               	movlw	0
 12465  010C9E  5ADD               	subwfb	postdec2,f,c
 12466                           
 12467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12468  010CA0  0E01               	movlw	1
 12469  010CA2  6E3C               	movwf	(btemp+10)^0,c
 12470  010CA4  0E00               	movlw	0
 12471  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12472                           
 12473                           ;stkvar	_pp @ sp[(-56)+50]
 12474  010CA8  0EFA               	movlw	-6
 12475  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12476  010CB0  0EFB               	movlw	-5
 12477  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12478  010CB8  D035               	goto	l10060
 12479  010CBA                     l10052:
 12480                           
 12481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12482                           ;stkvar	_n @ sp[(-56)+32]
 12483  010CBA  0EE8               	movlw	-24
 12484  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12485  010CC2  0EE9               	movlw	-23
 12486  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12487  010CCA  0E7C               	movlw	low _dbuf
 12488  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12489  010CCE  6ED9               	movwf	fsr2l,c
 12490  010CD0  0E01               	movlw	high _dbuf
 12491  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12492  010CD4  6EDA               	movwf	fsr2h,c
 12493  010CD6  0E30               	movlw	48
 12494  010CD8  6EDF               	movwf	indf2,c
 12495                           
 12496                           ;stkvar	_n @ sp[(-56)+32]
 12497  010CDA  0EE8               	movlw	-24
 12498  010CDC  50E3               	movf	plusw1,w,c
 12499  010CDE  0F01               	addlw	1
 12500  010CE0  6E32               	movwf	btemp^0,c
 12501  010CE2  0EE8               	movlw	-24
 12502  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12503  010CEA  6A32               	clrf	btemp^0,c
 12504  010CEC  0EE9               	movlw	-23
 12505  010CEE  50E3               	movf	plusw1,w,c
 12506  010CF0  2032               	addwfc	btemp^0,w,c
 12507  010CF2  6E32               	movwf	btemp^0,c
 12508  010CF4  0EE9               	movlw	-23
 12509  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12510                           
 12511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12512                           ;stkvar	_w @ sp[(-56)+38]
 12513  010CFC  50E1               	movf	fsr1l,w,c
 12514  010CFE  0FEE               	addlw	-18
 12515  010D00  6ED9               	movwf	fsr2l,c
 12516  010D02  50E2               	movf	fsr1h,w,c
 12517  010D04  6EDA               	movwf	fsr2h,c
 12518  010D06  0EFF               	movlw	255
 12519  010D08  22DA               	addwfc	fsr2h,f,c
 12520  010D0A  06DE               	decf	postinc2,f,c
 12521  010D0C  0E00               	movlw	0
 12522  010D0E  5ADD               	subwfb	postdec2,f,c
 12523                           
 12524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12525                           ;stkvar	_t @ sp[(-56)+52]
 12526  010D10  50E1               	movf	fsr1l,w,c
 12527  010D12  0FFC               	addlw	-4
 12528  010D14  6ED9               	movwf	fsr2l,c
 12529  010D16  50E2               	movf	fsr1h,w,c
 12530  010D18  6EDA               	movwf	fsr2h,c
 12531  010D1A  0EFF               	movlw	255
 12532  010D1C  22DA               	addwfc	fsr2h,f,c
 12533  010D1E  06DE               	decf	postinc2,f,c
 12534  010D20  0E00               	movlw	0
 12535  010D22  5ADD               	subwfb	postdec2,f,c
 12536  010D24                     l10060:
 12537                           
 12538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12539                           ;stkvar	_t @ sp[(-56)+52]
 12540  010D24  0EFC               	movlw	-4
 12541  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12542  010D2C  0EFD               	movlw	-3
 12543  010D2E  50E3               	movf	plusw1,w,c
 12544  010D30  1032               	iorwf	btemp^0,w,c
 12545  010D32  A4D8               	btfss	status,2,c
 12546  010D34  D7C2               	goto	l10052
 12547                           
 12548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12549                           ;stkvar	_n @ sp[(-56)+32]
 12550  010D36  0EE8               	movlw	-24
 12551  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12552  010D3E  0EE9               	movlw	-23
 12553  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12554  010D46  0E7C               	movlw	low _dbuf
 12555  010D48  243C               	addwf	(btemp+10)^0,w,c
 12556  010D4A  6ED9               	movwf	fsr2l,c
 12557  010D4C  0E01               	movlw	high _dbuf
 12558  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12559  010D50  6EDA               	movwf	fsr2h,c
 12560                           
 12561                           ;stkvar	_d @ sp[(-56)+44]
 12562  010D52  0EF4               	movlw	-12
 12563  010D54  50E3               	movf	plusw1,w,c
 12564  010D56  0F30               	addlw	48
 12565  010D58  6EDF               	movwf	indf2,c
 12566                           
 12567                           ;stkvar	_n @ sp[(-56)+32]
 12568  010D5A  0EE8               	movlw	-24
 12569  010D5C  50E3               	movf	plusw1,w,c
 12570  010D5E  0F01               	addlw	1
 12571  010D60  6E32               	movwf	btemp^0,c
 12572  010D62  0EE8               	movlw	-24
 12573  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12574  010D6A  6A32               	clrf	btemp^0,c
 12575  010D6C  0EE9               	movlw	-23
 12576  010D6E  50E3               	movf	plusw1,w,c
 12577  010D70  2032               	addwfc	btemp^0,w,c
 12578  010D72  6E32               	movwf	btemp^0,c
 12579  010D74  0EE9               	movlw	-23
 12580  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12581                           
 12582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12583                           ;stkvar	_w @ sp[(-56)+38]
 12584  010D7C  50E1               	movf	fsr1l,w,c
 12585  010D7E  0FEE               	addlw	-18
 12586  010D80  6ED9               	movwf	fsr2l,c
 12587  010D82  50E2               	movf	fsr1h,w,c
 12588  010D84  6EDA               	movwf	fsr2h,c
 12589  010D86  0EFF               	movlw	255
 12590  010D88  22DA               	addwfc	fsr2h,f,c
 12591  010D8A  06DE               	decf	postinc2,f,c
 12592  010D8C  0E00               	movlw	0
 12593  010D8E  5ADD               	subwfb	postdec2,f,c
 12594  010D90                     l10068:
 12595                           
 12596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12597                           ;stkvar	_u @ sp[(-56)+12]
 12598  010D90  0ED4               	movlw	-44
 12599  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12600  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12601  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12602  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12603                           
 12604                           ;stkvar	_l @ sp[(-60)+20]
 12605  010DAA  0ED8               	movlw	-40
 12606  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12607  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12608  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12609  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12610  010DC4  ECDF  F092         	call	___flmul	;wreg free
 12611  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12612  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12613  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12614  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12615                           
 12616                           ;stkvar	_h @ sp[(-60)+24]
 12617  010DE0  0EDC               	movlw	-36
 12618  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12619  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12620  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12621  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12622  010DFA  EC85  F0C1         	call	___flsub	;wreg free
 12623                           
 12624                           ;stkvar	_h @ sp[(-56)+24]
 12625  010DFE  0EE0               	movlw	-32
 12626  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12627  010E06  0EE1               	movlw	-31
 12628  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12629  010E0E  0EE2               	movlw	-30
 12630  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12631  010E16  0EE3               	movlw	-29
 12632  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12635  010E1E  0E00               	movlw	0
 12636  010E20  6EE6               	movwf	postinc1,c
 12637  010E22  0E00               	movlw	0
 12638  010E24  6EE6               	movwf	postinc1,c
 12639  010E26  0E20               	movlw	32
 12640  010E28  6EE6               	movwf	postinc1,c
 12641  010E2A  0E41               	movlw	65
 12642  010E2C  6EE6               	movwf	postinc1,c
 12643                           
 12644                           ;stkvar	_u @ sp[(-60)+12]
 12645  010E2E  0ED0               	movlw	-48
 12646  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12647  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12648  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12649  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12650  010E48  ECD2  F09A         	call	___fldiv	;wreg free
 12651                           
 12652                           ;stkvar	_u @ sp[(-56)+12]
 12653  010E4C  0ED4               	movlw	-44
 12654  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12655  010E54  0ED5               	movlw	-43
 12656  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12657  010E5C  0ED6               	movlw	-42
 12658  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12659  010E64  0ED7               	movlw	-41
 12660  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12661                           
 12662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12663                           ;stkvar	_ne @ sp[(-56)+46]
 12664  010E6C  50E1               	movf	fsr1l,w,c
 12665  010E6E  0FF6               	addlw	-10
 12666  010E70  6ED9               	movwf	fsr2l,c
 12667  010E72  50E2               	movf	fsr1h,w,c
 12668  010E74  6EDA               	movwf	fsr2h,c
 12669  010E76  0EFF               	movlw	255
 12670  010E78  22DA               	addwfc	fsr2h,f,c
 12671  010E7A  06DE               	decf	postinc2,f,c
 12672  010E7C  0E00               	movlw	0
 12673  010E7E  5ADD               	subwfb	postdec2,f,c
 12674                           
 12675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12676                           ;stkvar	_i @ sp[(-56)+36]
 12677  010E80  0EEC               	movlw	-20
 12678  010E82  50E3               	movf	plusw1,w,c
 12679  010E84  0F01               	addlw	1
 12680  010E86  6E32               	movwf	btemp^0,c
 12681  010E88  0EEC               	movlw	-20
 12682  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12683  010E90  6A32               	clrf	btemp^0,c
 12684  010E92  0EED               	movlw	-19
 12685  010E94  50E3               	movf	plusw1,w,c
 12686  010E96  2032               	addwfc	btemp^0,w,c
 12687  010E98  6E32               	movwf	btemp^0,c
 12688  010E9A  0EED               	movlw	-19
 12689  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12690  010EA2                     l10076:
 12691                           
 12692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12693                           ;stkvar	_m @ sp[(-56)+48]
 12694                           ;stkvar	_i @ sp[(-56)+36]
 12695  010EA2  50E1               	movf	fsr1l,w,c
 12696  010EA4  0FEC               	addlw	-20
 12697  010EA6  6ED9               	movwf	fsr2l,c
 12698  010EA8  50E2               	movf	fsr1h,w,c
 12699  010EAA  6EDA               	movwf	fsr2h,c
 12700  010EAC  0EFF               	movlw	255
 12701  010EAE  22DA               	addwfc	fsr2h,f,c
 12702  010EB0  0EF8               	movlw	-8
 12703  010EB2  50E3               	movf	plusw1,w,c
 12704  010EB4  5CDE               	subwf	postinc2,w,c
 12705  010EB6  50DE               	movf	postinc2,w,c
 12706  010EB8  0A80               	xorlw	128
 12707  010EBA  6E32               	movwf	btemp^0,c
 12708  010EBC  0EF9               	movlw	-7
 12709  010EBE  50E3               	movf	plusw1,w,c
 12710  010EC0  0A80               	xorlw	128
 12711  010EC2  5832               	subwfb	btemp^0,w,c
 12712  010EC4  B0D8               	btfsc	status,0,c
 12713  010EC6  D00E               	goto	u9740
 12714                           
 12715                           ;stkvar	_n @ sp[(-56)+32]
 12716  010EC8  0EE9               	movlw	-23
 12717  010ECA  BEE3               	btfsc	plusw1,7,c
 12718  010ECC  D633               	goto	l10026
 12719  010ECE  0EE9               	movlw	-23
 12720  010ED0  50E3               	movf	plusw1,w,c
 12721  010ED2  E108               	bnz	u9740
 12722  010ED4  0EE8               	movlw	-24
 12723  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12724  010EDC  0E4B               	movlw	75
 12725  010EDE  5E32               	subwf	btemp^0,f,c
 12726  010EE0  A0D8               	btfss	status,0,c
 12727  010EE2  D628               	goto	l10026
 12728  010EE4                     u9740:
 12729                           
 12730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12731                           ;stkvar	_pp @ sp[(-56)+50]
 12732  010EE4  0EFA               	movlw	-6
 12733  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12734  010EEC  0EFB               	movlw	-5
 12735  010EEE  50E3               	movf	plusw1,w,c
 12736  010EF0  1032               	iorwf	btemp^0,w,c
 12737  010EF2  B4D8               	btfsc	status,2,c
 12738  010EF4  A81F               	btfss	_flags^0,4,c
 12739  010EF6  D021               	goto	l10088
 12740                           
 12741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12742                           ;stkvar	_n @ sp[(-56)+32]
 12743  010EF8  0EE8               	movlw	-24
 12744  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12745  010F00  0EE9               	movlw	-23
 12746  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12747  010F08  0E7C               	movlw	low _dbuf
 12748  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12749  010F0C  6ED9               	movwf	fsr2l,c
 12750  010F0E  0E01               	movlw	high _dbuf
 12751  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12752  010F12  6EDA               	movwf	fsr2h,c
 12753  010F14  0E2E               	movlw	46
 12754  010F16  6EDF               	movwf	indf2,c
 12755                           
 12756                           ;stkvar	_n @ sp[(-56)+32]
 12757  010F18  0EE8               	movlw	-24
 12758  010F1A  50E3               	movf	plusw1,w,c
 12759  010F1C  0F01               	addlw	1
 12760  010F1E  6E32               	movwf	btemp^0,c
 12761  010F20  0EE8               	movlw	-24
 12762  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12763  010F28  6A32               	clrf	btemp^0,c
 12764  010F2A  0EE9               	movlw	-23
 12765  010F2C  50E3               	movf	plusw1,w,c
 12766  010F2E  2032               	addwfc	btemp^0,w,c
 12767  010F30  6E32               	movwf	btemp^0,c
 12768  010F32  0EE9               	movlw	-23
 12769  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12770  010F3A                     l10088:
 12771                           
 12772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12773                           ;stkvar	_n @ sp[(-56)+32]
 12774  010F3A  0EE8               	movlw	-24
 12775  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12776  010F42  0EE9               	movlw	-23
 12777  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12778  010F4A  0E7C               	movlw	low _dbuf
 12779  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12780  010F4E  6ED9               	movwf	fsr2l,c
 12781  010F50  0E01               	movlw	high _dbuf
 12782  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12783  010F54  6EDA               	movwf	fsr2h,c
 12784  010F56  0E00               	movlw	0
 12785  010F58  6EDF               	movwf	indf2,c
 12786                           
 12787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12788                           ;stkvar	_nmode @ sp[(-56)+55]
 12789  010F5A  0EFF               	movlw	-1
 12790  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12791  010F62  0E65               	movlw	101
 12792  010F64  1832               	xorwf	btemp^0,w,c
 12793  010F66  A4D8               	btfss	status,2,c
 12794  010F68  EF16  F081         	goto	l9892
 12795                           
 12796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12797  010F6C  0E4F               	movlw	79
 12798  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12799  010F70  0E00               	movlw	0
 12800  010F72  6E3D               	movwf	(btemp+11)^0,c
 12801                           
 12802                           ;stkvar	_i @ sp[(-56)+36]
 12803  010F74  0EEC               	movlw	-20
 12804  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12805  010F7C  0EED               	movlw	-19
 12806  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12807                           
 12808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12809                           ;stkvar	_i @ sp[(-56)+36]
 12810  010F84  0EEC               	movlw	-20
 12811  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12812  010F8C  0EED               	movlw	-19
 12813  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12814  010F94  0E7C               	movlw	low _dbuf
 12815  010F96  243C               	addwf	(btemp+10)^0,w,c
 12816  010F98  6ED9               	movwf	fsr2l,c
 12817  010F9A  0E01               	movlw	high _dbuf
 12818  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12819  010F9E  6EDA               	movwf	fsr2h,c
 12820  010FA0  0E00               	movlw	0
 12821  010FA2  6EDF               	movwf	indf2,c
 12822                           
 12823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12824                           ;stkvar	_sign @ sp[(-56)+42]
 12825  010FA4  0EF2               	movlw	-14
 12826  010FA6  6AE3               	clrf	plusw1,c
 12827  010FA8  0EF3               	movlw	-13
 12828  010FAA  6AE3               	clrf	plusw1,c
 12829                           
 12830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12831                           ;stkvar	_e @ sp[(-56)+34]
 12832  010FAC  0EEB               	movlw	-21
 12833  010FAE  AEE3               	btfss	plusw1,7,c
 12834  010FB0  D012               	goto	l10102
 12835                           
 12836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12837  010FB2  0E01               	movlw	1
 12838  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12839  010FB6  0E00               	movlw	0
 12840  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12841                           
 12842                           ;stkvar	_sign @ sp[(-56)+42]
 12843  010FBA  0EF2               	movlw	-14
 12844  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12845  010FC2  0EF3               	movlw	-13
 12846  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12847                           
 12848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12849                           ;stkvar	_e @ sp[(-56)+34]
 12850                           ;stkvar	_e @ sp[(-56)+34]
 12851  010FCA  0EEA               	movlw	-22
 12852  010FCC  6CE3               	negf	plusw1,c
 12853  010FCE  0EEB               	movlw	-21
 12854  010FD0  1EE3               	comf	plusw1,f,c
 12855  010FD2  B0D8               	btfsc	status,0,c
 12856  010FD4  2AE3               	incf	plusw1,f,c
 12857  010FD6                     l10102:
 12858                           
 12859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12860  010FD6  0E02               	movlw	2
 12861  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12862  010FDA  0E00               	movlw	0
 12863  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12864                           
 12865                           ;stkvar	_p @ sp[(-56)+40]
 12866  010FDE  0EF0               	movlw	-16
 12867  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12868  010FE6  0EF1               	movlw	-15
 12869  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12870                           
 12871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12872  010FEE  D051               	goto	l10114
 12873  010FF0                     l10104:
 12874                           
 12875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12876                           ;stkvar	_i @ sp[(-56)+36]
 12877  010FF0  50E1               	movf	fsr1l,w,c
 12878  010FF2  0FEC               	addlw	-20
 12879  010FF4  6ED9               	movwf	fsr2l,c
 12880  010FF6  50E2               	movf	fsr1h,w,c
 12881  010FF8  6EDA               	movwf	fsr2h,c
 12882  010FFA  0EFF               	movlw	255
 12883  010FFC  22DA               	addwfc	fsr2h,f,c
 12884  010FFE  06DE               	decf	postinc2,f,c
 12885  011000  0E00               	movlw	0
 12886  011002  5ADD               	subwfb	postdec2,f,c
 12887                           
 12888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12889                           ;stkvar	_i @ sp[(-56)+36]
 12890  011004  0EEC               	movlw	-20
 12891  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12892  01100C  0EED               	movlw	-19
 12893  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12894  011014  0E7C               	movlw	low _dbuf
 12895  011016  243C               	addwf	(btemp+10)^0,w,c
 12896  011018  6ED9               	movwf	fsr2l,c
 12897  01101A  0E01               	movlw	high _dbuf
 12898  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12899  01101E  6EDA               	movwf	fsr2h,c
 12900  011020  0E0A               	movlw	10
 12901  011022  6EE6               	movwf	postinc1,c
 12902  011024  0E00               	movlw	0
 12903  011026  6EE6               	movwf	postinc1,c
 12904                           
 12905                           ;stkvar	_e @ sp[(-58)+34]
 12906  011028  0EE8               	movlw	-24
 12907  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12908  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12909  011036  EC0C  F0B6         	call	___awmod	;wreg free
 12910  01103A  5032               	movf	btemp^0,w,c
 12911  01103C  0F30               	addlw	48
 12912  01103E  6EDF               	movwf	indf2,c
 12913                           
 12914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12915  011040  0E0A               	movlw	10
 12916  011042  6EE6               	movwf	postinc1,c
 12917  011044  0E00               	movlw	0
 12918  011046  6EE6               	movwf	postinc1,c
 12919                           
 12920                           ;stkvar	_e @ sp[(-58)+34]
 12921  011048  0EE8               	movlw	-24
 12922  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12923  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12924  011056  EC98  F0B3         	call	___awdiv	;wreg free
 12925                           
 12926                           ;stkvar	_e @ sp[(-56)+34]
 12927  01105A  0EEA               	movlw	-22
 12928  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12929  011062  0EEB               	movlw	-21
 12930  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12931                           
 12932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12933                           ;stkvar	_p @ sp[(-56)+40]
 12934  01106A  50E1               	movf	fsr1l,w,c
 12935  01106C  0FF0               	addlw	-16
 12936  01106E  6ED9               	movwf	fsr2l,c
 12937  011070  50E2               	movf	fsr1h,w,c
 12938  011072  6EDA               	movwf	fsr2h,c
 12939  011074  0EFF               	movlw	255
 12940  011076  22DA               	addwfc	fsr2h,f,c
 12941  011078  06DE               	decf	postinc2,f,c
 12942  01107A  0E00               	movlw	0
 12943  01107C  5ADD               	subwfb	postdec2,f,c
 12944                           
 12945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12946                           ;stkvar	_w @ sp[(-56)+38]
 12947  01107E  50E1               	movf	fsr1l,w,c
 12948  011080  0FEE               	addlw	-18
 12949  011082  6ED9               	movwf	fsr2l,c
 12950  011084  50E2               	movf	fsr1h,w,c
 12951  011086  6EDA               	movwf	fsr2h,c
 12952  011088  0EFF               	movlw	255
 12953  01108A  22DA               	addwfc	fsr2h,f,c
 12954  01108C  06DE               	decf	postinc2,f,c
 12955  01108E  0E00               	movlw	0
 12956  011090  5ADD               	subwfb	postdec2,f,c
 12957  011092                     l10114:
 12958                           
 12959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12960                           ;stkvar	_e @ sp[(-56)+34]
 12961  011092  0EEA               	movlw	-22
 12962  011094  006F FF8C  F032    	movff	plusw1,btemp
 12963  01109A  0EEB               	movlw	-21
 12964  01109C  50E3               	movf	plusw1,w,c
 12965  01109E  1032               	iorwf	btemp^0,w,c
 12966  0110A0  A4D8               	btfss	status,2,c
 12967  0110A2  D7A6               	goto	l10104
 12968                           
 12969                           ;stkvar	_p @ sp[(-56)+40]
 12970  0110A4  0EF1               	movlw	-15
 12971  0110A6  BEE3               	btfsc	plusw1,7,c
 12972  0110A8  D007               	goto	u9800
 12973  0110AA  0EF1               	movlw	-15
 12974  0110AC  50E3               	movf	plusw1,w,c
 12975  0110AE  E1A0               	bnz	l10104
 12976  0110B0  0EF0               	movlw	-16
 12977  0110B2  04E3               	decf	plusw1,w,c
 12978  0110B4  B0D8               	btfsc	status,0,c
 12979  0110B6  D79C               	goto	l10104
 12980  0110B8                     u9800:
 12981                           
 12982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12983                           ;stkvar	_i @ sp[(-56)+36]
 12984  0110B8  50E1               	movf	fsr1l,w,c
 12985  0110BA  0FEC               	addlw	-20
 12986  0110BC  6ED9               	movwf	fsr2l,c
 12987  0110BE  50E2               	movf	fsr1h,w,c
 12988  0110C0  6EDA               	movwf	fsr2h,c
 12989  0110C2  0EFF               	movlw	255
 12990  0110C4  22DA               	addwfc	fsr2h,f,c
 12991  0110C6  06DE               	decf	postinc2,f,c
 12992  0110C8  0E00               	movlw	0
 12993  0110CA  5ADD               	subwfb	postdec2,f,c
 12994                           
 12995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12996                           ;stkvar	_sign @ sp[(-56)+42]
 12997  0110CC  0EF2               	movlw	-14
 12998  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12999  0110D4  0EF3               	movlw	-13
 13000  0110D6  50E3               	movf	plusw1,w,c
 13001  0110D8  1032               	iorwf	btemp^0,w,c
 13002  0110DA  A4D8               	btfss	status,2,c
 13003  0110DC  D002               	goto	l10124
 13004  0110DE  0E2B               	movlw	43
 13005  0110E0  D001               	goto	L11
 13006  0110E2                     l10124:
 13007  0110E2  0E2D               	movlw	45
 13008  0110E4                     L11:
 13009  0110E4  6E3C               	movwf	(btemp+10)^0,c
 13010  0110E6  0E00               	movlw	0
 13011  0110E8  6E3D               	movwf	(btemp+11)^0,c
 13012                           
 13013                           ;stkvar	_efgtoa$4611 @ sp[(-56)+4]
 13014  0110EA  0ECC               	movlw	-52
 13015  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13016  0110F2  0ECD               	movlw	-51
 13017  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13018                           
 13019                           ;stkvar	_efgtoa$4611 @ sp[(-56)+4]
 13020                           ;stkvar	_i @ sp[(-56)+36]
 13021  0110FA  0EEC               	movlw	-20
 13022  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13023  011102  0EED               	movlw	-19
 13024  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 13025  01110A  0E7C               	movlw	low _dbuf
 13026  01110C  243C               	addwf	(btemp+10)^0,w,c
 13027  01110E  6ED9               	movwf	fsr2l,c
 13028  011110  0E01               	movlw	high _dbuf
 13029  011112  203D               	addwfc	(btemp+11)^0,w,c
 13030  011114  6EDA               	movwf	fsr2h,c
 13031  011116  0ECC               	movlw	-52
 13032  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13033                           
 13034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13035                           ;stkvar	_w @ sp[(-56)+38]
 13036  01111E  50E1               	movf	fsr1l,w,c
 13037  011120  0FEE               	addlw	-18
 13038  011122  6ED9               	movwf	fsr2l,c
 13039  011124  50E2               	movf	fsr1h,w,c
 13040  011126  6EDA               	movwf	fsr2h,c
 13041  011128  0EFF               	movlw	255
 13042  01112A  22DA               	addwfc	fsr2h,f,c
 13043  01112C  06DE               	decf	postinc2,f,c
 13044  01112E  0E00               	movlw	0
 13045  011130  5ADD               	subwfb	postdec2,f,c
 13046                           
 13047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13048                           ;stkvar	_i @ sp[(-56)+36]
 13049  011132  50E1               	movf	fsr1l,w,c
 13050  011134  0FEC               	addlw	-20
 13051  011136  6ED9               	movwf	fsr2l,c
 13052  011138  50E2               	movf	fsr1h,w,c
 13053  01113A  6EDA               	movwf	fsr2h,c
 13054  01113C  0EFF               	movlw	255
 13055  01113E  22DA               	addwfc	fsr2h,f,c
 13056  011140  06DE               	decf	postinc2,f,c
 13057  011142  0E00               	movlw	0
 13058  011144  5ADD               	subwfb	postdec2,f,c
 13059  011146  0EBF               	movlw	191
 13060  011148  6E3C               	movwf	(btemp+10)^0,c
 13061  01114A  0EFF               	movlw	255
 13062  01114C  6E3D               	movwf	(btemp+11)^0,c
 13063                           
 13064                           ;stkvar	_c @ sp[(-56)+-7]
 13065  01114E  0EC1               	movlw	-63
 13066  011150  50E3               	movf	plusw1,w,c
 13067  011152  6E3A               	movwf	(btemp+8)^0,c
 13068  011154  6A3B               	clrf	(btemp+9)^0,c
 13069  011156  503C               	movf	(btemp+10)^0,w,c
 13070  011158  263A               	addwf	(btemp+8)^0,f,c
 13071  01115A  503D               	movf	(btemp+11)^0,w,c
 13072  01115C  223B               	addwfc	(btemp+9)^0,f,c
 13073  01115E  503B               	movf	(btemp+9)^0,w,c
 13074  011160  E106               	bnz	u9820
 13075  011162  0E1A               	movlw	26
 13076  011164  5C3A               	subwf	(btemp+8)^0,w,c
 13077  011166  B0D8               	btfsc	status,0,c
 13078  011168  D002               	goto	u9820
 13079  01116A  0E01               	movlw	1
 13080  01116C  D001               	goto	u9830
 13081  01116E                     u9820:
 13082  01116E  0E00               	movlw	0
 13083  011170                     u9830:
 13084  011170  6E3C               	movwf	(btemp+10)^0,c
 13085  011172  6A3D               	clrf	(btemp+11)^0,c
 13086                           
 13087                           ;stkvar	_efgtoa$4613 @ sp[(-56)+0]
 13088  011174  0EC8               	movlw	-56
 13089  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13090  01117C  0EC9               	movlw	-55
 13091  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13092                           
 13093                           ;stkvar	_efgtoa$4613 @ sp[(-56)+0]
 13094  011184  0EC8               	movlw	-56
 13095  011186  006F FF8C  F032    	movff	plusw1,btemp
 13096  01118C  0EC9               	movlw	-55
 13097  01118E  50E3               	movf	plusw1,w,c
 13098  011190  1032               	iorwf	btemp^0,w,c
 13099  011192  A4D8               	btfss	status,2,c
 13100  011194  D002               	goto	l10140
 13101  011196  0E65               	movlw	101
 13102  011198  D001               	goto	L12
 13103  01119A                     l10140:
 13104  01119A  0E45               	movlw	69
 13105  01119C                     L12:
 13106  01119C  6E3C               	movwf	(btemp+10)^0,c
 13107  01119E  0E00               	movlw	0
 13108  0111A0  6E3D               	movwf	(btemp+11)^0,c
 13109                           
 13110                           ;stkvar	_efgtoa$4612 @ sp[(-56)+2]
 13111  0111A2  0ECA               	movlw	-54
 13112  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13113  0111AA  0ECB               	movlw	-53
 13114  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13115                           
 13116                           ;stkvar	_efgtoa$4612 @ sp[(-56)+2]
 13117                           ;stkvar	_i @ sp[(-56)+36]
 13118  0111B2  0EEC               	movlw	-20
 13119  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13120  0111BA  0EED               	movlw	-19
 13121  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13122  0111C2  0E7C               	movlw	low _dbuf
 13123  0111C4  243C               	addwf	(btemp+10)^0,w,c
 13124  0111C6  6ED9               	movwf	fsr2l,c
 13125  0111C8  0E01               	movlw	high _dbuf
 13126  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 13127  0111CC  6EDA               	movwf	fsr2h,c
 13128  0111CE  0ECA               	movlw	-54
 13129  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13130                           
 13131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13132                           ;stkvar	_w @ sp[(-56)+38]
 13133  0111D6  50E1               	movf	fsr1l,w,c
 13134  0111D8  0FEE               	addlw	-18
 13135  0111DA  6ED9               	movwf	fsr2l,c
 13136  0111DC  50E2               	movf	fsr1h,w,c
 13137  0111DE  6EDA               	movwf	fsr2h,c
 13138  0111E0  0EFF               	movlw	255
 13139  0111E2  22DA               	addwfc	fsr2h,f,c
 13140  0111E4  06DE               	decf	postinc2,f,c
 13141  0111E6  0E00               	movlw	0
 13142  0111E8  5ADD               	subwfb	postdec2,f,c
 13143                           
 13144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13145                           ;stkvar	_i @ sp[(-56)+36]
 13146  0111EA  0EEC               	movlw	-20
 13147  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13148  0111F2  0EED               	movlw	-19
 13149  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13150  0111FA  0E7C               	movlw	low _dbuf
 13151  0111FC  243C               	addwf	(btemp+10)^0,w,c
 13152  0111FE  6E3A               	movwf	(btemp+8)^0,c
 13153  011200  0E01               	movlw	high _dbuf
 13154  011202  203D               	addwfc	(btemp+11)^0,w,c
 13155  011204  6E3B               	movwf	(btemp+9)^0,c
 13156  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 13157  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 13158                           
 13159                           ;stkvar	_n @ sp[(-58)+32]
 13160  011212  0E7C               	movlw	low _dbuf
 13161  011214  6E3C               	movwf	(btemp+10)^0,c
 13162  011216  0E01               	movlw	high _dbuf
 13163  011218  6E3D               	movwf	(btemp+11)^0,c
 13164  01121A  0EE6               	movlw	-26
 13165  01121C  50E3               	movf	plusw1,w,c
 13166  01121E  263C               	addwf	(btemp+10)^0,f,c
 13167  011220  0EE7               	movlw	-25
 13168  011222  50E3               	movf	plusw1,w,c
 13169  011224  223D               	addwfc	(btemp+11)^0,f,c
 13170  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 13171  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 13172  011232  EC9E  F0B9         	call	_strcpy	;wreg free
 13173  011236  EF16  F081         	goto	l9892
 13174  01123A                     l1921:
 13175                           
 13176                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13177  01123A  0EC1               	movlw	193
 13178  01123C  26E1               	addwf	fsr1l,f,c
 13179  01123E  0EFF               	movlw	255
 13180  011240  22E2               	addwfc	fsr1h,f,c
 13181  011242  0012               	return		;funcret
 13182  011244                     __end_of_efgtoa:
 13183                           	opt callstack 0
 13184                           
 13185 ;; *************** function _tolower *****************
 13186 ;; Defined at:
 13187 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13188 ;; Parameters:    Size  Location     Type
 13189 ;;  c               2  [STACK] int 
 13190 ;; Auto vars:     Size  Location     Type
 13191 ;;		None
 13192 ;; Return value:  Size  Location     Type
 13193 ;;                  2  [STACK] int 
 13194 ;; Registers used:
 13195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13196 ;; Tracked objects:
 13197 ;;		On entry : 0/5
 13198 ;;		On exit  : 0/0
 13199 ;;		Unchanged: 0/0
 13200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13205 ;;Total ram usage:        0 bytes
 13206 ;; Hardware stack levels used:    1
 13207 ;; Hardware stack levels required when called:    7
 13208 ;; This function calls:
 13209 ;;		_isupper
 13210 ;; This function is called by:
 13211 ;;		_efgtoa
 13212 ;;		_vfpfcnvrt
 13213 ;; This function uses a reentrant model
 13214 ;;
 13215                           
 13216                           	psect	text47
 13217  017C3A                     __ptext47:
 13218                           	opt callstack 0
 13219  017C3A                     _tolower:
 13220                           	opt callstack 0
 13221                           
 13222                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13223  017C3A  52E6               	movf	postinc1,f,c
 13224  017C3C  52E6               	movf	postinc1,f,c
 13225                           
 13226                           ;stkvar	_c @ sp[(-2)+-2]
 13227                           
 13228                           ;incstack = 0
 13229  017C3E  0EFC               	movlw	-4
 13230  017C40  50E3               	movf	plusw1,w,c
 13231  017C42  0FBF               	addlw	191
 13232  017C44  6E3C               	movwf	(btemp+10)^0,c
 13233  017C46  0EFD               	movlw	-3
 13234  017C48  006F FF8C  F03D    	movff	plusw1,btemp+11
 13235  017C4E  0EFF               	movlw	255
 13236  017C50  223D               	addwfc	(btemp+11)^0,f,c
 13237  017C52  503D               	movf	(btemp+11)^0,w,c
 13238  017C54  E106               	bnz	u5210
 13239  017C56  0E1A               	movlw	26
 13240  017C58  5C3C               	subwf	(btemp+10)^0,w,c
 13241  017C5A  B0D8               	btfsc	status,0,c
 13242  017C5C  D002               	goto	u5210
 13243  017C5E  0E01               	movlw	1
 13244  017C60  D001               	goto	u5220
 13245  017C62                     u5210:
 13246  017C62  0E00               	movlw	0
 13247  017C64                     u5220:
 13248  017C64  6E3C               	movwf	(btemp+10)^0,c
 13249  017C66  6A3D               	clrf	(btemp+11)^0,c
 13250                           
 13251                           ;stkvar	_tolower$5279 @ sp[(-2)+0]
 13252  017C68  0EFE               	movlw	-2
 13253  017C6A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13254  017C70  0EFF               	movlw	-1
 13255  017C72  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13256                           
 13257                           ;stkvar	_tolower$5279 @ sp[(-2)+0]
 13258  017C78  0EFE               	movlw	-2
 13259  017C7A  006F FF8C  F032    	movff	plusw1,btemp
 13260  017C80  0EFF               	movlw	-1
 13261  017C82  50E3               	movf	plusw1,w,c
 13262  017C84  1032               	iorwf	btemp^0,w,c
 13263  017C86  B4D8               	btfsc	status,2,c
 13264  017C88  D00D               	goto	l6680
 13265                           
 13266                           ;stkvar	_c @ sp[(-2)+-2]
 13267  017C8A  0EFC               	movlw	-4
 13268  017C8C  006F FF8C  F032    	movff	plusw1,btemp
 13269  017C92  0EFD               	movlw	-3
 13270  017C94  006F FF8C  F033    	movff	plusw1,btemp+1
 13271  017C9A  0E20               	movlw	32
 13272  017C9C  1232               	iorwf	btemp^0,f,c
 13273  017C9E  0E00               	movlw	0
 13274  017CA0  1233               	iorwf	(btemp+1)^0,f,c
 13275  017CA2  D008               	goto	l2944
 13276  017CA4                     l6680:
 13277                           
 13278                           ;stkvar	_c @ sp[(-2)+-2]
 13279  017CA4  0EFC               	movlw	-4
 13280  017CA6  006F FF8C  F032    	movff	plusw1,btemp
 13281  017CAC  0EFD               	movlw	-3
 13282  017CAE  006F FF8C  F033    	movff	plusw1,btemp+1
 13283  017CB4                     l2944:
 13284                           
 13285                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13286  017CB4  52E5               	movf	postdec1,f,c
 13287  017CB6  52E5               	movf	postdec1,f,c
 13288  017CB8  52E5               	movf	postdec1,f,c
 13289  017CBA  52E5               	movf	postdec1,f,c
 13290  017CBC  0012               	return		;funcret
 13291  017CBE                     __end_of_tolower:
 13292                           	opt callstack 0
 13293                           
 13294 ;; *************** function _isupper *****************
 13295 ;; Defined at:
 13296 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;  c               2  [STACK] int 
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;		None
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  2  [STACK] int 
 13303 ;; Registers used:
 13304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13314 ;;Total ram usage:        0 bytes
 13315 ;; Hardware stack levels used:    1
 13316 ;; Hardware stack levels required when called:    6
 13317 ;; This function calls:
 13318 ;;		Nothing
 13319 ;; This function is called by:
 13320 ;;		_efgtoa
 13321 ;;		_xtoa
 13322 ;;		_vfpfcnvrt
 13323 ;;		_tolower
 13324 ;; This function uses a reentrant model
 13325 ;;
 13326                           
 13327                           	psect	text48
 13328  01869E                     __ptext48:
 13329                           	opt callstack 0
 13330  01869E                     _isupper:
 13331                           	opt callstack 17
 13332                           
 13333                           ;stkvar	_c @ sp[(0)+-2]
 13334                           
 13335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13336                           ;incstack = 0
 13337  01869E  0EFE               	movlw	-2
 13338  0186A0  50E3               	movf	plusw1,w,c
 13339  0186A2  0FBF               	addlw	191
 13340  0186A4  6E3C               	movwf	(btemp+10)^0,c
 13341  0186A6  0EFF               	movlw	-1
 13342  0186A8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13343  0186AE  0EFF               	movlw	255
 13344  0186B0  223D               	addwfc	(btemp+11)^0,f,c
 13345  0186B2  503D               	movf	(btemp+11)^0,w,c
 13346  0186B4  E106               	bnz	u4610
 13347  0186B6  0E1A               	movlw	26
 13348  0186B8  5C3C               	subwf	(btemp+10)^0,w,c
 13349  0186BA  B0D8               	btfsc	status,0,c
 13350  0186BC  D002               	goto	u4610
 13351  0186BE  0E01               	movlw	1
 13352  0186C0  D001               	goto	u4620
 13353  0186C2                     u4610:
 13354  0186C2  0E00               	movlw	0
 13355  0186C4                     u4620:
 13356  0186C4  6E32               	movwf	btemp^0,c
 13357  0186C6  6A33               	clrf	(btemp+1)^0,c
 13358                           
 13359                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13360  0186C8  52E5               	movf	postdec1,f,c
 13361  0186CA  52E5               	movf	postdec1,f,c
 13362  0186CC  0012               	return		;funcret
 13363  0186CE                     __end_of_isupper:
 13364                           	opt callstack 0
 13365                           
 13366 ;; *************** function _strcpy *****************
 13367 ;; Defined at:
 13368 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;  dest            2  [STACK] PTR unsigned char 
 13371 ;;		 -> dbuf(80), 
 13372 ;;  src             2  [STACK] PTR const unsigned char 
 13373 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13374 ;;		 -> dbuf(80), 
 13375 ;; Auto vars:     Size  Location     Type
 13376 ;;  d               2  [STACK] PTR unsigned char 
 13377 ;;		 -> dbuf(80), 
 13378 ;;  s               2  [STACK] PTR const unsigned char 
 13379 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13380 ;;		 -> dbuf(80), 
 13381 ;; Return value:  Size  Location     Type
 13382 ;;                  2  [STACK] PTR unsigned char 
 13383 ;; Registers used:
 13384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13385 ;; Tracked objects:
 13386 ;;		On entry : 0/5
 13387 ;;		On exit  : 0/0
 13388 ;;		Unchanged: 0/0
 13389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13394 ;;Total ram usage:        0 bytes
 13395 ;; Hardware stack levels used:    1
 13396 ;; Hardware stack levels required when called:    6
 13397 ;; This function calls:
 13398 ;;		Nothing
 13399 ;; This function is called by:
 13400 ;;		_efgtoa
 13401 ;; This function uses a reentrant model
 13402 ;;
 13403                           
 13404                           	psect	text49
 13405  01733C                     __ptext49:
 13406                           	opt callstack 0
 13407  01733C                     _strcpy:
 13408                           	opt callstack 0
 13409                           
 13410                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13411  01733C  52E6               	movf	postinc1,f,c
 13412  01733E  52E6               	movf	postinc1,f,c
 13413  017340  52E6               	movf	postinc1,f,c
 13414  017342  52E6               	movf	postinc1,f,c
 13415                           
 13416                           ;stkvar	_src @ sp[(-4)+-4]
 13417                           
 13418                           ;incstack = 0
 13419  017344  0EF8               	movlw	-8
 13420  017346  006F FF8C  F03C    	movff	plusw1,btemp+10
 13421  01734C  0EF9               	movlw	-7
 13422  01734E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13423                           
 13424                           ;stkvar	_s @ sp[(-4)+2]
 13425  017354  0EFF               	movlw	-1
 13426  017356  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13427  01735C  0EFE               	movlw	-2
 13428  01735E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13429                           
 13430                           ;stkvar	_dest @ sp[(-4)+-2]
 13431  017364  0EFA               	movlw	-6
 13432  017366  006F FF8C  F03C    	movff	plusw1,btemp+10
 13433  01736C  0EFB               	movlw	-5
 13434  01736E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13435                           
 13436                           ;stkvar	_d @ sp[(-4)+0]
 13437  017374  0EFD               	movlw	-3
 13438  017376  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13439  01737C  0EFC               	movlw	-4
 13440  01737E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13441  017384                     l9766:
 13442                           
 13443                           ;stkvar	_s @ sp[(-4)+2]
 13444  017384  50E1               	movf	fsr1l,w,c
 13445  017386  0FFE               	addlw	-2
 13446  017388  6ED9               	movwf	fsr2l,c
 13447  01738A  50E2               	movf	fsr1h,w,c
 13448  01738C  6EDA               	movwf	fsr2h,c
 13449  01738E  0EFF               	movlw	255
 13450  017390  22DA               	addwfc	fsr2h,f,c
 13451  017392  006F FF7C  F03C    	movff	indf2,btemp+10
 13452  017398  0E01               	movlw	1
 13453  01739A  26DE               	addwf	postinc2,f,c
 13454  01739C  006F FF7C  F03D    	movff	indf2,btemp+11
 13455  0173A2  0E00               	movlw	0
 13456  0173A4  22DD               	addwfc	postdec2,f,c
 13457  0173A6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 13458  0173AC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 13459  0173B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13460  0173B4  6EF8               	movwf	tblptru,c
 13461                           
 13462                           ;stkvar	_d @ sp[(-4)+0]
 13463  0173B6  50E1               	movf	fsr1l,w,c
 13464  0173B8  0FFC               	addlw	-4
 13465  0173BA  6ED9               	movwf	fsr2l,c
 13466  0173BC  50E2               	movf	fsr1h,w,c
 13467  0173BE  6EDA               	movwf	fsr2h,c
 13468  0173C0  0EFF               	movlw	255
 13469  0173C2  22DA               	addwfc	fsr2h,f,c
 13470  0173C4  006F FF7C  F03C    	movff	indf2,btemp+10
 13471  0173CA  0E01               	movlw	1
 13472  0173CC  26DE               	addwf	postinc2,f,c
 13473  0173CE  006F FF7C  F03D    	movff	indf2,btemp+11
 13474  0173D4  0E00               	movlw	0
 13475  0173D6  22DD               	addwfc	postdec2,f,c
 13476  0173D8  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13477  0173DE  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13478  0173E4  0E1F               	movlw	(high __ramtop+-1)
 13479  0173E6  64F7               	cpfsgt	tblptrh,c
 13480  0173E8  D003               	bra	u9137
 13481  0173EA  0008               	tblrd		*
 13482  0173EC  50F5               	movf	tablat,w,c
 13483  0173EE  D007               	bra	u9130
 13484  0173F0                     u9137:
 13485  0173F0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13486  0173F6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13487  0173FC  50EF               	movf	indf0,w,c
 13488  0173FE                     u9130:
 13489  0173FE  6EDF               	movwf	indf2,c
 13490  017400  50DF               	movf	indf2,w,c
 13491  017402  A4D8               	btfss	status,2,c
 13492  017404  D7BF               	goto	l9766
 13493                           
 13494                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13495  017406  0EF8               	movlw	248
 13496  017408  26E1               	addwf	fsr1l,f,c
 13497  01740A  0EFF               	movlw	255
 13498  01740C  22E2               	addwfc	fsr1h,f,c
 13499  01740E  0012               	return		;funcret
 13500  017410                     __end_of_strcpy:
 13501                           	opt callstack 0
 13502                           
 13503 ;; *************** function _floorf *****************
 13504 ;; Defined at:
 13505 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  x               4  [STACK] float 
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;  u               4  [STACK] struct .
 13510 ;;  m               4  [STACK] unsigned long 
 13511 ;;  e               2  [STACK] int 
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  4  [STACK] float 
 13514 ;; Registers used:
 13515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/5
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13525 ;;Total ram usage:        0 bytes
 13526 ;; Hardware stack levels used:    1
 13527 ;; Hardware stack levels required when called:    6
 13528 ;; This function calls:
 13529 ;;		Nothing
 13530 ;; This function is called by:
 13531 ;;		_efgtoa
 13532 ;; This function uses a reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text50
 13536  014804                     __ptext50:
 13537                           	opt callstack 0
 13538  014804                     _floorf:
 13539                           	opt callstack 0
 13540                           
 13541                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13542  014804  0E0A               	movlw	10
 13543  014806  26E1               	addwf	fsr1l,f,c
 13544  014808  0E00               	movlw	0
 13545  01480A  22E2               	addwfc	fsr1h,f,c
 13546                           
 13547                           ;incstack = 0
 13548  01480C  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 13549  014812  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 13550  014818  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 13551  01481E  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 13552                           
 13553                           ;stkvar	_u @ sp[(-10)+0]
 13554  014824  0EF6               	movlw	-10
 13555  014826  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13556  01482C  0EF7               	movlw	-9
 13557  01482E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13558  014834  0EF8               	movlw	-8
 13559  014836  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13560  01483C  0EF9               	movlw	-7
 13561  01483E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13562                           
 13563                           ;stkvar	_x @ sp[(-10)+-4]
 13564  014844  0EF2               	movlw	-14
 13565  014846  006F FF8C  F03A    	movff	plusw1,btemp+8
 13566  01484C  0EF3               	movlw	-13
 13567  01484E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13568  014854  0EF4               	movlw	-12
 13569  014856  006F FF8C  F03C    	movff	plusw1,btemp+10
 13570  01485C  0EF5               	movlw	-11
 13571  01485E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13572                           
 13573                           ;stkvar	_u @ sp[(-10)+0]
 13574  014864  0EF6               	movlw	-10
 13575  014866  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13576  01486C  0EF7               	movlw	-9
 13577  01486E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13578  014874  0EF8               	movlw	-8
 13579  014876  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13580  01487C  0EF9               	movlw	-7
 13581  01487E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13582  014884  0E81               	movlw	129
 13583  014886  6E3C               	movwf	(btemp+10)^0,c
 13584  014888  0EFF               	movlw	255
 13585  01488A  6E3D               	movwf	(btemp+11)^0,c
 13586                           
 13587                           ;stkvar	_u @ sp[(-10)+0]
 13588  01488C  0EF6               	movlw	-10
 13589  01488E  006F FF8C  F036    	movff	plusw1,btemp+4
 13590  014894  0EF7               	movlw	-9
 13591  014896  006F FF8C  F037    	movff	plusw1,btemp+5
 13592  01489C  0EF8               	movlw	-8
 13593  01489E  006F FF8C  F038    	movff	plusw1,btemp+6
 13594  0148A4  0EF9               	movlw	-7
 13595  0148A6  006F FF8C  F039    	movff	plusw1,btemp+7
 13596  0148AC  0E18               	movlw	24
 13597  0148AE  D005               	goto	u5240
 13598  0148B0                     u5245:
 13599  0148B0  90D8               	bcf	status,0,c
 13600  0148B2  3239               	rrcf	(btemp+7)^0,f,c
 13601  0148B4  3238               	rrcf	(btemp+6)^0,f,c
 13602  0148B6  3237               	rrcf	(btemp+5)^0,f,c
 13603  0148B8  3236               	rrcf	(btemp+4)^0,f,c
 13604  0148BA                     u5240:
 13605  0148BA  2EE8               	decfsz	wreg,f,c
 13606  0148BC  D7F9               	goto	u5245
 13607  0148BE  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13608  0148C4  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13609  0148CA  0EFF               	movlw	255
 13610  0148CC  163A               	andwf	(btemp+8)^0,f,c
 13611  0148CE  0E00               	movlw	0
 13612  0148D0  163B               	andwf	(btemp+9)^0,f,c
 13613  0148D2  503C               	movf	(btemp+10)^0,w,c
 13614  0148D4  263A               	addwf	(btemp+8)^0,f,c
 13615  0148D6  503D               	movf	(btemp+11)^0,w,c
 13616  0148D8  223B               	addwfc	(btemp+9)^0,f,c
 13617                           
 13618                           ;stkvar	_e @ sp[(-10)+8]
 13619  0148DA  0EFE               	movlw	-2
 13620  0148DC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13621  0148E2  0EFF               	movlw	-1
 13622  0148E4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13623                           
 13624                           ;stkvar	_e @ sp[(-10)+8]
 13625  0148EA  0EFF               	movlw	-1
 13626  0148EC  BEE3               	btfsc	plusw1,7,c
 13627  0148EE  D019               	goto	l6694
 13628  0148F0  0EFF               	movlw	-1
 13629  0148F2  50E3               	movf	plusw1,w,c
 13630  0148F4  E108               	bnz	u5250
 13631  0148F6  0EFE               	movlw	-2
 13632  0148F8  006F FF8C  F032    	movff	plusw1,btemp
 13633  0148FE  0E17               	movlw	23
 13634  014900  5E32               	subwf	btemp^0,f,c
 13635  014902  A0D8               	btfss	status,0,c
 13636  014904  D00E               	goto	l6694
 13637  014906                     u5250:
 13638                           
 13639                           ;stkvar	_x @ sp[(-10)+-4]
 13640  014906  0EF2               	movlw	-14
 13641  014908  006F FF8C  F032    	movff	plusw1,btemp
 13642  01490E  0EF3               	movlw	-13
 13643  014910  006F FF8C  F033    	movff	plusw1,btemp+1
 13644  014916  0EF4               	movlw	-12
 13645  014918  006F FF8C  F034    	movff	plusw1,btemp+2
 13646  01491E  0EF5               	movlw	-11
 13647  014920  D11F               	goto	L13
 13648  014922                     l6694:
 13649                           
 13650                           ;stkvar	_e @ sp[(-10)+8]
 13651  014922  0EFF               	movlw	-1
 13652  014924  BEE3               	btfsc	plusw1,7,c
 13653  014926  D0B4               	goto	l6710
 13654                           
 13655                           ;stkvar	_e @ sp[(-10)+8]
 13656  014928  0EFE               	movlw	-2
 13657  01492A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13658  014930  0EFF               	movlw	255
 13659  014932  6E36               	movwf	(btemp+4)^0,c
 13660  014934  0EFF               	movlw	255
 13661  014936  6E37               	movwf	(btemp+5)^0,c
 13662  014938  0E7F               	movlw	127
 13663  01493A  6E38               	movwf	(btemp+6)^0,c
 13664  01493C  0E00               	movlw	0
 13665  01493E  6E39               	movwf	(btemp+7)^0,c
 13666  014940                     u5275:
 13667  014940  663D               	tstfsz	(btemp+11)^0,c
 13668  014942  D001               	goto	u5276
 13669  014944  D007               	goto	u5277
 13670  014946                     u5276:
 13671  014946  3439               	rlcf	(btemp+7)^0,w,c
 13672  014948  3239               	rrcf	(btemp+7)^0,f,c
 13673  01494A  3238               	rrcf	(btemp+6)^0,f,c
 13674  01494C  3237               	rrcf	(btemp+5)^0,f,c
 13675  01494E  3236               	rrcf	(btemp+4)^0,f,c
 13676  014950  2E3D               	decfsz	(btemp+11)^0,f,c
 13677  014952  D7F6               	goto	u5275
 13678  014954                     u5277:
 13679                           
 13680                           ;stkvar	_m @ sp[(-10)+4]
 13681  014954  0EFA               	movlw	-6
 13682  014956  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13683  01495C  0EFB               	movlw	-5
 13684  01495E  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13685  014964  0EFC               	movlw	-4
 13686  014966  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13687  01496C  0EFD               	movlw	-3
 13688  01496E  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13689                           
 13690                           ;stkvar	_m @ sp[(-10)+4]
 13691                           ;stkvar	_u @ sp[(-10)+0]
 13692  014974  0EF6               	movlw	-10
 13693  014976  006F FF8C  F03A    	movff	plusw1,btemp+8
 13694  01497C  0EF7               	movlw	-9
 13695  01497E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13696  014984  0EF8               	movlw	-8
 13697  014986  006F FF8C  F03C    	movff	plusw1,btemp+10
 13698  01498C  0EF9               	movlw	-7
 13699  01498E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13700  014994  0EFA               	movlw	-6
 13701  014996  50E3               	movf	plusw1,w,c
 13702  014998  163A               	andwf	(btemp+8)^0,f,c
 13703  01499A  0EFB               	movlw	-5
 13704  01499C  50E3               	movf	plusw1,w,c
 13705  01499E  163B               	andwf	(btemp+9)^0,f,c
 13706  0149A0  0EFC               	movlw	-4
 13707  0149A2  50E3               	movf	plusw1,w,c
 13708  0149A4  163C               	andwf	(btemp+10)^0,f,c
 13709  0149A6  0EFD               	movlw	-3
 13710  0149A8  50E3               	movf	plusw1,w,c
 13711  0149AA  163D               	andwf	(btemp+11)^0,f,c
 13712  0149AC  503A               	movf	(btemp+8)^0,w,c
 13713  0149AE  103B               	iorwf	(btemp+9)^0,w,c
 13714  0149B0  103C               	iorwf	(btemp+10)^0,w,c
 13715  0149B2  103D               	iorwf	(btemp+11)^0,w,c
 13716  0149B4  B4D8               	btfsc	status,2,c
 13717  0149B6  D7A7               	goto	u5250
 13718                           
 13719                           ;stkvar	_u @ sp[(-10)+0]
 13720  0149B8  0EF6               	movlw	-10
 13721  0149BA  006F FF8C  F03A    	movff	plusw1,btemp+8
 13722  0149C0  0EF7               	movlw	-9
 13723  0149C2  006F FF8C  F03B    	movff	plusw1,btemp+9
 13724  0149C8  0EF8               	movlw	-8
 13725  0149CA  006F FF8C  F03C    	movff	plusw1,btemp+10
 13726  0149D0  0EF9               	movlw	-7
 13727  0149D2  006F FF8C  F03D    	movff	plusw1,btemp+11
 13728  0149D8  0E20               	movlw	32
 13729  0149DA  D005               	goto	u5290
 13730  0149DC                     u5295:
 13731  0149DC  90D8               	bcf	status,0,c
 13732  0149DE  323D               	rrcf	(btemp+11)^0,f,c
 13733  0149E0  323C               	rrcf	(btemp+10)^0,f,c
 13734  0149E2  323B               	rrcf	(btemp+9)^0,f,c
 13735  0149E4  323A               	rrcf	(btemp+8)^0,f,c
 13736  0149E6                     u5290:
 13737  0149E6  2EE8               	decfsz	wreg,f,c
 13738  0149E8  D7F9               	goto	u5295
 13739  0149EA  503A               	movf	(btemp+8)^0,w,c
 13740  0149EC  B4D8               	btfsc	status,2,c
 13741  0149EE  D028               	goto	l6708
 13742                           
 13743                           ;stkvar	_m @ sp[(-10)+4]
 13744                           ;stkvar	_u @ sp[(-10)+0]
 13745  0149F0  0EF6               	movlw	-10
 13746  0149F2  50E3               	movf	plusw1,w,c
 13747  0149F4  6E32               	movwf	btemp^0,c
 13748  0149F6  0EFA               	movlw	-6
 13749  0149F8  50E3               	movf	plusw1,w,c
 13750  0149FA  2632               	addwf	btemp^0,f,c
 13751  0149FC  0EF6               	movlw	-10
 13752  0149FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 13753  014A04  0EF7               	movlw	-9
 13754  014A06  50E3               	movf	plusw1,w,c
 13755  014A08  6E32               	movwf	btemp^0,c
 13756  014A0A  0EFB               	movlw	-5
 13757  014A0C  50E3               	movf	plusw1,w,c
 13758  014A0E  2232               	addwfc	btemp^0,f,c
 13759  014A10  0EF7               	movlw	-9
 13760  014A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 13761  014A18  0EF8               	movlw	-8
 13762  014A1A  50E3               	movf	plusw1,w,c
 13763  014A1C  6E32               	movwf	btemp^0,c
 13764  014A1E  0EFC               	movlw	-4
 13765  014A20  50E3               	movf	plusw1,w,c
 13766  014A22  2232               	addwfc	btemp^0,f,c
 13767  014A24  0EF8               	movlw	-8
 13768  014A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 13769  014A2C  0EF9               	movlw	-7
 13770  014A2E  50E3               	movf	plusw1,w,c
 13771  014A30  6E32               	movwf	btemp^0,c
 13772  014A32  0EFD               	movlw	-3
 13773  014A34  50E3               	movf	plusw1,w,c
 13774  014A36  2232               	addwfc	btemp^0,f,c
 13775  014A38  0EF9               	movlw	-7
 13776  014A3A  0060  F0CB  FFE3   	movff	btemp,plusw1
 13777  014A40                     l6708:
 13778                           
 13779                           ;stkvar	_m @ sp[(-10)+4]
 13780  014A40  0EFA               	movlw	-6
 13781  014A42  006F FF8C  F03A    	movff	plusw1,btemp+8
 13782  014A48  0EFB               	movlw	-5
 13783  014A4A  006F FF8C  F03B    	movff	plusw1,btemp+9
 13784  014A50  0EFC               	movlw	-4
 13785  014A52  006F FF8C  F03C    	movff	plusw1,btemp+10
 13786  014A58  0EFD               	movlw	-3
 13787  014A5A  006F FF8C  F03D    	movff	plusw1,btemp+11
 13788  014A60  1C3A               	comf	(btemp+8)^0,w,c
 13789  014A62  6E36               	movwf	(btemp+4)^0,c
 13790  014A64  1C3B               	comf	(btemp+9)^0,w,c
 13791  014A66  6E37               	movwf	(btemp+5)^0,c
 13792  014A68  1C3C               	comf	(btemp+10)^0,w,c
 13793  014A6A  6E38               	movwf	(btemp+6)^0,c
 13794  014A6C  1C3D               	comf	(btemp+11)^0,w,c
 13795  014A6E  6E39               	movwf	(btemp+7)^0,c
 13796                           
 13797                           ;stkvar	_u @ sp[(-10)+0]
 13798  014A70  50E1               	movf	fsr1l,w,c
 13799  014A72  0FF6               	addlw	-10
 13800  014A74  6ED9               	movwf	fsr2l,c
 13801  014A76  50E2               	movf	fsr1h,w,c
 13802  014A78  6EDA               	movwf	fsr2h,c
 13803  014A7A  0EFF               	movlw	255
 13804  014A7C  22DA               	addwfc	fsr2h,f,c
 13805  014A7E  5036               	movf	(btemp+4)^0,w,c
 13806  014A80  16DE               	andwf	postinc2,f,c
 13807  014A82  5037               	movf	(btemp+5)^0,w,c
 13808  014A84  16DE               	andwf	postinc2,f,c
 13809  014A86  5038               	movf	(btemp+6)^0,w,c
 13810  014A88  16DE               	andwf	postinc2,f,c
 13811  014A8A  5039               	movf	(btemp+7)^0,w,c
 13812  014A8C  16DE               	andwf	postinc2,f,c
 13813  014A8E  D05B               	goto	l6718
 13814  014A90                     l6710:
 13815                           
 13816                           ;stkvar	_u @ sp[(-10)+0]
 13817  014A90  0EF6               	movlw	-10
 13818  014A92  006F FF8C  F03A    	movff	plusw1,btemp+8
 13819  014A98  0EF7               	movlw	-9
 13820  014A9A  006F FF8C  F03B    	movff	plusw1,btemp+9
 13821  014AA0  0EF8               	movlw	-8
 13822  014AA2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13823  014AA8  0EF9               	movlw	-7
 13824  014AAA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13825  014AB0  0E20               	movlw	32
 13826  014AB2  D005               	goto	u5310
 13827  014AB4                     u5315:
 13828  014AB4  90D8               	bcf	status,0,c
 13829  014AB6  323D               	rrcf	(btemp+11)^0,f,c
 13830  014AB8  323C               	rrcf	(btemp+10)^0,f,c
 13831  014ABA  323B               	rrcf	(btemp+9)^0,f,c
 13832  014ABC  323A               	rrcf	(btemp+8)^0,f,c
 13833  014ABE                     u5310:
 13834  014ABE  2EE8               	decfsz	wreg,f,c
 13835  014AC0  D7F9               	goto	u5315
 13836  014AC2  663A               	tstfsz	(btemp+8)^0,c
 13837  014AC4  D009               	goto	l6714
 13838                           
 13839                           ;stkvar	_u @ sp[(-10)+0]
 13840  014AC6  0EF6               	movlw	-10
 13841  014AC8  6AE3               	clrf	plusw1,c
 13842  014ACA  0EF7               	movlw	-9
 13843  014ACC  6AE3               	clrf	plusw1,c
 13844  014ACE  0EF8               	movlw	-8
 13845  014AD0  6AE3               	clrf	plusw1,c
 13846  014AD2  0EF9               	movlw	-7
 13847  014AD4  6AE3               	clrf	plusw1,c
 13848  014AD6  D037               	goto	l6718
 13849  014AD8                     l6714:
 13850                           
 13851                           ;stkvar	_u @ sp[(-10)+0]
 13852  014AD8  0EF6               	movlw	-10
 13853  014ADA  006F FF8C  F03A    	movff	plusw1,btemp+8
 13854  014AE0  0EF7               	movlw	-9
 13855  014AE2  006F FF8C  F03B    	movff	plusw1,btemp+9
 13856  014AE8  0EF8               	movlw	-8
 13857  014AEA  006F FF8C  F03C    	movff	plusw1,btemp+10
 13858  014AF0  0EF9               	movlw	-7
 13859  014AF2  006F FF8C  F03D    	movff	plusw1,btemp+11
 13860  014AF8  90D8               	bcf	status,0,c
 13861  014AFA  343A               	rlcf	(btemp+8)^0,w,c
 13862  014AFC  6E36               	movwf	(btemp+4)^0,c
 13863  014AFE  343B               	rlcf	(btemp+9)^0,w,c
 13864  014B00  6E37               	movwf	(btemp+5)^0,c
 13865  014B02  343C               	rlcf	(btemp+10)^0,w,c
 13866  014B04  6E38               	movwf	(btemp+6)^0,c
 13867  014B06  343D               	rlcf	(btemp+11)^0,w,c
 13868  014B08  6E39               	movwf	(btemp+7)^0,c
 13869  014B0A  5036               	movf	(btemp+4)^0,w,c
 13870  014B0C  1037               	iorwf	(btemp+5)^0,w,c
 13871  014B0E  1038               	iorwf	(btemp+6)^0,w,c
 13872  014B10  1039               	iorwf	(btemp+7)^0,w,c
 13873  014B12  B4D8               	btfsc	status,2,c
 13874  014B14  D018               	goto	l6718
 13875  014B16  0E00               	movlw	0
 13876  014B18  6E3A               	movwf	(btemp+8)^0,c
 13877  014B1A  0E00               	movlw	0
 13878  014B1C  6E3B               	movwf	(btemp+9)^0,c
 13879  014B1E  0E80               	movlw	128
 13880  014B20  6E3C               	movwf	(btemp+10)^0,c
 13881  014B22  0EBF               	movlw	191
 13882  014B24  6E3D               	movwf	(btemp+11)^0,c
 13883                           
 13884                           ;stkvar	_u @ sp[(-10)+0]
 13885  014B26  0EF6               	movlw	-10
 13886  014B28  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13887  014B2E  0EF7               	movlw	-9
 13888  014B30  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13889  014B36  0EF8               	movlw	-8
 13890  014B38  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13891  014B3E  0EF9               	movlw	-7
 13892  014B40  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13893  014B46                     l6718:
 13894                           
 13895                           ;stkvar	_u @ sp[(-10)+0]
 13896  014B46  0EF6               	movlw	-10
 13897  014B48  006F FF8C  F032    	movff	plusw1,btemp
 13898  014B4E  0EF7               	movlw	-9
 13899  014B50  006F FF8C  F033    	movff	plusw1,btemp+1
 13900  014B56  0EF8               	movlw	-8
 13901  014B58  006F FF8C  F034    	movff	plusw1,btemp+2
 13902  014B5E  0EF9               	movlw	-7
 13903  014B60                     L13:
 13904  014B60  006F FF8C  F035    	movff	plusw1,btemp+3
 13905                           
 13906                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13907  014B66  0EF2               	movlw	242
 13908  014B68  26E1               	addwf	fsr1l,f,c
 13909  014B6A  0EFF               	movlw	255
 13910  014B6C  22E2               	addwfc	fsr1h,f,c
 13911  014B6E  0012               	return		;funcret
 13912  014B70                     __end_of_floorf:
 13913                           	opt callstack 0
 13914                           
 13915 ;; *************** function ___fpclassifyf *****************
 13916 ;; Defined at:
 13917 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;  x               4  [STACK] float 
 13920 ;; Auto vars:     Size  Location     Type
 13921 ;;  u               4  [STACK] struct .
 13922 ;;  e               2  [STACK] int 
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  2  [STACK] int 
 13925 ;; Registers used:
 13926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13927 ;; Tracked objects:
 13928 ;;		On entry : 0/5
 13929 ;;		On exit  : 0/0
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13936 ;;Total ram usage:        0 bytes
 13937 ;; Hardware stack levels used:    1
 13938 ;; Hardware stack levels required when called:    6
 13939 ;; This function calls:
 13940 ;;		Nothing
 13941 ;; This function is called by:
 13942 ;;		_efgtoa
 13943 ;; This function uses a reentrant model
 13944 ;;
 13945                           
 13946                           	psect	text51
 13947  0162C6                     __ptext51:
 13948                           	opt callstack 0
 13949  0162C6                     ___fpclassifyf:
 13950                           	opt callstack 0
 13951                           
 13952                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13953  0162C6  0E06               	movlw	6
 13954  0162C8  26E1               	addwf	fsr1l,f,c
 13955  0162CA  0E00               	movlw	0
 13956  0162CC  22E2               	addwfc	fsr1h,f,c
 13957                           
 13958                           ;incstack = 0
 13959  0162CE  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13960  0162D4  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13961  0162DA  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13962  0162E0  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13963                           
 13964                           ;stkvar	_u @ sp[(-6)+0]
 13965  0162E6  0EFA               	movlw	-6
 13966  0162E8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13967  0162EE  0EFB               	movlw	-5
 13968  0162F0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13969  0162F6  0EFC               	movlw	-4
 13970  0162F8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13971  0162FE  0EFD               	movlw	-3
 13972  016300  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13973                           
 13974                           ;stkvar	_x @ sp[(-6)+-4]
 13975  016306  0EF6               	movlw	-10
 13976  016308  006F FF8C  F03A    	movff	plusw1,btemp+8
 13977  01630E  0EF7               	movlw	-9
 13978  016310  006F FF8C  F03B    	movff	plusw1,btemp+9
 13979  016316  0EF8               	movlw	-8
 13980  016318  006F FF8C  F03C    	movff	plusw1,btemp+10
 13981  01631E  0EF9               	movlw	-7
 13982  016320  006F FF8C  F03D    	movff	plusw1,btemp+11
 13983                           
 13984                           ;stkvar	_u @ sp[(-6)+0]
 13985  016326  0EFA               	movlw	-6
 13986  016328  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13987  01632E  0EFB               	movlw	-5
 13988  016330  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13989  016336  0EFC               	movlw	-4
 13990  016338  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13991  01633E  0EFD               	movlw	-3
 13992  016340  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13993                           
 13994                           ;stkvar	_u @ sp[(-6)+0]
 13995  016346  0EFA               	movlw	-6
 13996  016348  006F FF8C  F03A    	movff	plusw1,btemp+8
 13997  01634E  0EFB               	movlw	-5
 13998  016350  006F FF8C  F03B    	movff	plusw1,btemp+9
 13999  016356  0EFC               	movlw	-4
 14000  016358  006F FF8C  F03C    	movff	plusw1,btemp+10
 14001  01635E  0EFD               	movlw	-3
 14002  016360  006F FF8C  F03D    	movff	plusw1,btemp+11
 14003  016366  0E18               	movlw	24
 14004  016368  D005               	goto	u5120
 14005  01636A                     u5125:
 14006  01636A  90D8               	bcf	status,0,c
 14007  01636C  323D               	rrcf	(btemp+11)^0,f,c
 14008  01636E  323C               	rrcf	(btemp+10)^0,f,c
 14009  016370  323B               	rrcf	(btemp+9)^0,f,c
 14010  016372  323A               	rrcf	(btemp+8)^0,f,c
 14011  016374                     u5120:
 14012  016374  2EE8               	decfsz	wreg,f,c
 14013  016376  D7F9               	goto	u5125
 14014  016378  0060  F0E8  F038   	movff	btemp+8,btemp+6
 14015  01637E  0060  F0EC  F039   	movff	btemp+9,btemp+7
 14016  016384  0EFF               	movlw	255
 14017  016386  1638               	andwf	(btemp+6)^0,f,c
 14018  016388  0E00               	movlw	0
 14019  01638A  1639               	andwf	(btemp+7)^0,f,c
 14020                           
 14021                           ;stkvar	_e @ sp[(-6)+4]
 14022  01638C  0EFE               	movlw	-2
 14023  01638E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14024  016394  0EFF               	movlw	-1
 14025  016396  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14026                           
 14027                           ;stkvar	_e @ sp[(-6)+4]
 14028  01639C  0EFE               	movlw	-2
 14029  01639E  006F FF8C  F032    	movff	plusw1,btemp
 14030  0163A4  0EFF               	movlw	-1
 14031  0163A6  50E3               	movf	plusw1,w,c
 14032  0163A8  1032               	iorwf	btemp^0,w,c
 14033  0163AA  A4D8               	btfss	status,2,c
 14034  0163AC  D023               	goto	l6656
 14035                           
 14036                           ;stkvar	_u @ sp[(-6)+0]
 14037  0163AE  0EFA               	movlw	-6
 14038  0163B0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14039  0163B6  0EFB               	movlw	-5
 14040  0163B8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14041  0163BE  0EFC               	movlw	-4
 14042  0163C0  006F FF8C  F03C    	movff	plusw1,btemp+10
 14043  0163C6  0EFD               	movlw	-3
 14044  0163C8  006F FF8C  F03D    	movff	plusw1,btemp+11
 14045  0163CE  90D8               	bcf	status,0,c
 14046  0163D0  343A               	rlcf	(btemp+8)^0,w,c
 14047  0163D2  6E36               	movwf	(btemp+4)^0,c
 14048  0163D4  343B               	rlcf	(btemp+9)^0,w,c
 14049  0163D6  6E37               	movwf	(btemp+5)^0,c
 14050  0163D8  343C               	rlcf	(btemp+10)^0,w,c
 14051  0163DA  6E38               	movwf	(btemp+6)^0,c
 14052  0163DC  343D               	rlcf	(btemp+11)^0,w,c
 14053  0163DE  6E39               	movwf	(btemp+7)^0,c
 14054  0163E0  5036               	movf	(btemp+4)^0,w,c
 14055  0163E2  1037               	iorwf	(btemp+5)^0,w,c
 14056  0163E4  1038               	iorwf	(btemp+6)^0,w,c
 14057  0163E6  1039               	iorwf	(btemp+7)^0,w,c
 14058  0163E8  A4D8               	btfss	status,2,c
 14059  0163EA  D002               	goto	l6652
 14060  0163EC  0E02               	movlw	2
 14061  0163EE  D02E               	goto	L14
 14062  0163F0                     l6652:
 14063  0163F0  0E03               	movlw	3
 14064  0163F2  D02C               	goto	L14
 14065  0163F4                     l6656:
 14066                           
 14067                           ;stkvar	_e @ sp[(-6)+4]
 14068  0163F4  0EFE               	movlw	-2
 14069  0163F6  28E3               	incf	plusw1,w,c
 14070  0163F8  E128               	bnz	l6662
 14071  0163FA  0EFF               	movlw	-1
 14072  0163FC  50E3               	movf	plusw1,w,c
 14073  0163FE  A4D8               	btfss	status,2,c
 14074  016400  D024               	goto	l6662
 14075                           
 14076                           ;stkvar	_u @ sp[(-6)+0]
 14077  016402  0EFA               	movlw	-6
 14078  016404  006F FF8C  F03A    	movff	plusw1,btemp+8
 14079  01640A  0EFB               	movlw	-5
 14080  01640C  006F FF8C  F03B    	movff	plusw1,btemp+9
 14081  016412  0EFC               	movlw	-4
 14082  016414  006F FF8C  F03C    	movff	plusw1,btemp+10
 14083  01641A  0EFD               	movlw	-3
 14084  01641C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14085  016422  0E09               	movlw	9
 14086  016424                     u5165:
 14087  016424  90D8               	bcf	status,0,c
 14088  016426  363A               	rlcf	(btemp+8)^0,f,c
 14089  016428  363B               	rlcf	(btemp+9)^0,f,c
 14090  01642A  363C               	rlcf	(btemp+10)^0,f,c
 14091  01642C  363D               	rlcf	(btemp+11)^0,f,c
 14092  01642E  2EE8               	decfsz	wreg,f,c
 14093  016430  D7F9               	goto	u5165
 14094  016432  503A               	movf	(btemp+8)^0,w,c
 14095  016434  103B               	iorwf	(btemp+9)^0,w,c
 14096  016436  103C               	iorwf	(btemp+10)^0,w,c
 14097  016438  103D               	iorwf	(btemp+11)^0,w,c
 14098  01643A  A4D8               	btfss	status,2,c
 14099  01643C  D002               	goto	u5170
 14100  01643E  0E01               	movlw	1
 14101  016440  D001               	goto	u5180
 14102  016442                     u5170:
 14103  016442  0E00               	movlw	0
 14104  016444                     u5180:
 14105  016444  6E32               	movwf	btemp^0,c
 14106  016446  6A33               	clrf	(btemp+1)^0,c
 14107  016448  D004               	goto	l2780
 14108  01644A                     l6662:
 14109  01644A  0E04               	movlw	4
 14110  01644C                     L14:
 14111  01644C  6E32               	movwf	btemp^0,c
 14112  01644E  0E00               	movlw	0
 14113  016450  6E33               	movwf	(btemp+1)^0,c
 14114  016452                     l2780:
 14115                           
 14116                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14117  016452  0EF6               	movlw	246
 14118  016454  26E1               	addwf	fsr1l,f,c
 14119  016456  0EFF               	movlw	255
 14120  016458  22E2               	addwfc	fsr1h,f,c
 14121  01645A  0012               	return		;funcret
 14122  01645C                     __end_of___fpclassifyf:
 14123                           	opt callstack 0
 14124                           
 14125 ;; *************** function ___fltol *****************
 14126 ;; Defined at:
 14127 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;  f1              4  [STACK] int 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;  exp1            1  [STACK] unsigned char 
 14132 ;;  sign1           1  [STACK] unsigned char 
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  4  [STACK] long 
 14135 ;; Registers used:
 14136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/5
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14146 ;;Total ram usage:        0 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    6
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_efgtoa
 14153 ;; This function uses a reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text52
 14157  01645C                     __ptext52:
 14158                           	opt callstack 0
 14159  01645C                     ___fltol:
 14160                           	opt callstack 0
 14161                           
 14162                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14163  01645C  52E6               	movf	postinc1,f,c
 14164  01645E  52E6               	movf	postinc1,f,c
 14165                           
 14166                           ;stkvar	_f1 @ sp[(-2)+-4]
 14167                           
 14168                           ;incstack = 0
 14169  016460  0EFA               	movlw	-6
 14170  016462  006F FF8C  F03A    	movff	plusw1,btemp+8
 14171  016468  0EFB               	movlw	-5
 14172  01646A  006F FF8C  F03B    	movff	plusw1,btemp+9
 14173  016470  0EFC               	movlw	-4
 14174  016472  006F FF8C  F03C    	movff	plusw1,btemp+10
 14175  016478  0EFD               	movlw	-3
 14176  01647A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14177  016480  0E18               	movlw	24
 14178  016482  D005               	goto	u6330
 14179  016484                     u6335:
 14180  016484  90D8               	bcf	status,0,c
 14181  016486  323D               	rrcf	(btemp+11)^0,f,c
 14182  016488  323C               	rrcf	(btemp+10)^0,f,c
 14183  01648A  323B               	rrcf	(btemp+9)^0,f,c
 14184  01648C  323A               	rrcf	(btemp+8)^0,f,c
 14185  01648E                     u6330:
 14186  01648E  2EE8               	decfsz	wreg,f,c
 14187  016490  D7F9               	goto	u6335
 14188                           
 14189                           ;stkvar	_exp1 @ sp[(-2)+0]
 14190  016492  0EFE               	movlw	-2
 14191  016494  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14192  01649A  0EFE               	movlw	-2
 14193  01649C  50E3               	movf	plusw1,w,c
 14194  01649E  A4D8               	btfss	status,2,c
 14195  0164A0  D006               	goto	l7282
 14196  0164A2                     u6340:
 14197  0164A2  0E00               	movlw	0
 14198  0164A4  6E32               	movwf	btemp^0,c
 14199  0164A6  6A33               	clrf	(btemp+1)^0,c
 14200  0164A8  6A34               	clrf	(btemp+2)^0,c
 14201  0164AA  6A35               	clrf	(btemp+3)^0,c
 14202  0164AC  D08B               	goto	l2396
 14203  0164AE                     l7282:
 14204                           
 14205                           ;stkvar	_f1 @ sp[(-2)+-4]
 14206  0164AE  0EFA               	movlw	-6
 14207  0164B0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14208  0164B6  0EFB               	movlw	-5
 14209  0164B8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14210  0164BE  0EFC               	movlw	-4
 14211  0164C0  006F FF8C  F03C    	movff	plusw1,btemp+10
 14212  0164C6  0EFD               	movlw	-3
 14213  0164C8  006F FF8C  F03D    	movff	plusw1,btemp+11
 14214  0164CE  0E20               	movlw	32
 14215  0164D0  D005               	goto	u6350
 14216  0164D2                     u6355:
 14217  0164D2  90D8               	bcf	status,0,c
 14218  0164D4  323D               	rrcf	(btemp+11)^0,f,c
 14219  0164D6  323C               	rrcf	(btemp+10)^0,f,c
 14220  0164D8  323B               	rrcf	(btemp+9)^0,f,c
 14221  0164DA  323A               	rrcf	(btemp+8)^0,f,c
 14222  0164DC                     u6350:
 14223  0164DC  2EE8               	decfsz	wreg,f,c
 14224  0164DE  D7F9               	goto	u6355
 14225                           
 14226                           ;stkvar	_sign1 @ sp[(-2)+1]
 14227  0164E0  0EFF               	movlw	-1
 14228  0164E2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14229                           
 14230                           ;stkvar	_f1 @ sp[(-2)+-4]
 14231  0164E8  0EFC               	movlw	-4
 14232  0164EA  8EE3               	bsf	plusw1,7,c
 14233                           
 14234                           ;stkvar	_f1 @ sp[(-2)+-4]
 14235  0164EC  50E1               	movf	fsr1l,w,c
 14236  0164EE  0FFA               	addlw	-6
 14237  0164F0  6ED9               	movwf	fsr2l,c
 14238  0164F2  50E2               	movf	fsr1h,w,c
 14239  0164F4  6EDA               	movwf	fsr2h,c
 14240  0164F6  0EFF               	movlw	255
 14241  0164F8  22DA               	addwfc	fsr2h,f,c
 14242  0164FA  0EFF               	movlw	255
 14243  0164FC  16DE               	andwf	postinc2,f,c
 14244  0164FE  0EFF               	movlw	255
 14245  016500  16DE               	andwf	postinc2,f,c
 14246  016502  0EFF               	movlw	255
 14247  016504  16DE               	andwf	postinc2,f,c
 14248  016506  0E00               	movlw	0
 14249  016508  16DE               	andwf	postinc2,f,c
 14250                           
 14251                           ;stkvar	_exp1 @ sp[(-2)+0]
 14252  01650A  0EFE               	movlw	-2
 14253  01650C  006F FF8C  F032    	movff	plusw1,btemp
 14254  016512  0E96               	movlw	150
 14255  016514  5E32               	subwf	btemp^0,f,c
 14256  016516  0EFE               	movlw	-2
 14257  016518  0060  F0CB  FFE3   	movff	btemp,plusw1
 14258                           
 14259                           ;stkvar	_exp1 @ sp[(-2)+0]
 14260  01651E  0EFE               	movlw	-2
 14261  016520  AEE3               	btfss	plusw1,7,c
 14262  016522  D014               	goto	l7300
 14263                           
 14264                           ;stkvar	_exp1 @ sp[(-2)+0]
 14265  016524  0EFE               	movlw	-2
 14266  016526  50E3               	movf	plusw1,w,c
 14267  016528  0A80               	xorlw	128
 14268  01652A  0F97               	addlw	151
 14269  01652C  A0D8               	btfss	status,0,c
 14270  01652E  D7B9               	goto	u6340
 14271  016530                     l7298:
 14272                           
 14273                           ;stkvar	_f1 @ sp[(-2)+-4]
 14274  016530  90D8               	bcf	status,0,c
 14275  016532  0EFD               	movlw	-3
 14276  016534  32E3               	rrcf	plusw1,f,c
 14277  016536  0EFC               	movlw	-4
 14278  016538  32E3               	rrcf	plusw1,f,c
 14279  01653A  0EFB               	movlw	-5
 14280  01653C  32E3               	rrcf	plusw1,f,c
 14281  01653E  0EFA               	movlw	-6
 14282  016540  32E3               	rrcf	plusw1,f,c
 14283                           
 14284                           ;stkvar	_exp1 @ sp[(-2)+0]
 14285  016542  0EFE               	movlw	-2
 14286  016544  2AE3               	incf	plusw1,f,c
 14287  016546  B4D8               	btfsc	status,2,c
 14288  016548  D018               	goto	u6400
 14289  01654A  D7F2               	goto	l7298
 14290  01654C                     l7300:
 14291                           
 14292                           ;stkvar	_exp1 @ sp[(-2)+0]
 14293  01654C  0EFE               	movlw	-2
 14294  01654E  006F FF8C  F032    	movff	plusw1,btemp
 14295  016554  0E1F               	movlw	31
 14296  016556  6432               	cpfsgt	btemp^0,c
 14297  016558  D00C               	goto	l7308
 14298  01655A  D7A3               	goto	u6340
 14299  01655C                     l7306:
 14300                           
 14301                           ;stkvar	_f1 @ sp[(-2)+-4]
 14302  01655C  90D8               	bcf	status,0,c
 14303  01655E  0EFA               	movlw	-6
 14304  016560  36E3               	rlcf	plusw1,f,c
 14305  016562  0EFB               	movlw	-5
 14306  016564  36E3               	rlcf	plusw1,f,c
 14307  016566  0EFC               	movlw	-4
 14308  016568  36E3               	rlcf	plusw1,f,c
 14309  01656A  0EFD               	movlw	-3
 14310  01656C  36E3               	rlcf	plusw1,f,c
 14311                           
 14312                           ;stkvar	_exp1 @ sp[(-2)+0]
 14313  01656E  0EFE               	movlw	-2
 14314  016570  06E3               	decf	plusw1,f,c
 14315  016572                     l7308:
 14316                           
 14317                           ;stkvar	_exp1 @ sp[(-2)+0]
 14318  016572  0EFE               	movlw	-2
 14319  016574  50E3               	movf	plusw1,w,c
 14320  016576  A4D8               	btfss	status,2,c
 14321  016578  D7F1               	goto	l7306
 14322  01657A                     u6400:
 14323                           
 14324                           ;stkvar	_sign1 @ sp[(-2)+1]
 14325  01657A  0EFF               	movlw	-1
 14326  01657C  50E3               	movf	plusw1,w,c
 14327  01657E  B4D8               	btfsc	status,2,c
 14328  016580  D011               	goto	u6420
 14329                           
 14330                           ;stkvar	_f1 @ sp[(-2)+-4]
 14331                           ;stkvar	_f1 @ sp[(-2)+-4]
 14332  016582  0EFA               	movlw	-6
 14333  016584  6CE3               	negf	plusw1,c
 14334  016586  0EFB               	movlw	-5
 14335  016588  1EE3               	comf	plusw1,f,c
 14336  01658A  0EFC               	movlw	-4
 14337  01658C  1EE3               	comf	plusw1,f,c
 14338  01658E  0EFD               	movlw	-3
 14339  016590  1EE3               	comf	plusw1,f,c
 14340  016592  E308               	bnc	u6420
 14341  016594  0EFB               	movlw	-5
 14342  016596  2AE3               	incf	plusw1,f,c
 14343  016598  E305               	bnc	u6420
 14344  01659A  0EFC               	movlw	-4
 14345  01659C  2AE3               	incf	plusw1,f,c
 14346  01659E  E302               	bnc	u6420
 14347  0165A0  0EFD               	movlw	-3
 14348  0165A2  2AE3               	incf	plusw1,f,c
 14349  0165A4                     u6420:
 14350                           
 14351                           ;stkvar	_f1 @ sp[(-2)+-4]
 14352  0165A4  0EFA               	movlw	-6
 14353  0165A6  006F FF8C  F032    	movff	plusw1,btemp
 14354  0165AC  0EFB               	movlw	-5
 14355  0165AE  006F FF8C  F033    	movff	plusw1,btemp+1
 14356  0165B4  0EFC               	movlw	-4
 14357  0165B6  006F FF8C  F034    	movff	plusw1,btemp+2
 14358  0165BC  0EFD               	movlw	-3
 14359  0165BE  006F FF8C  F035    	movff	plusw1,btemp+3
 14360  0165C4                     l2396:
 14361                           
 14362                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14363  0165C4  0EFA               	movlw	250
 14364  0165C6  26E1               	addwf	fsr1l,f,c
 14365  0165C8  0EFF               	movlw	255
 14366  0165CA  22E2               	addwfc	fsr1h,f,c
 14367  0165CC  0012               	return		;funcret
 14368  0165CE                     __end_of___fltol:
 14369                           	opt callstack 0
 14370                           
 14371 ;; *************** function ___flneg *****************
 14372 ;; Defined at:
 14373 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  f1              4  [STACK] long 
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;		None
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  4  [STACK] long 
 14380 ;; Registers used:
 14381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/5
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14391 ;;Total ram usage:        0 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    6
 14394 ;; This function calls:
 14395 ;;		Nothing
 14396 ;; This function is called by:
 14397 ;;		_efgtoa
 14398 ;; This function uses a reentrant model
 14399 ;;
 14400                           
 14401                           	psect	text53
 14402  01827C                     __ptext53:
 14403                           	opt callstack 0
 14404  01827C                     ___flneg:
 14405                           	opt callstack 17
 14406                           
 14407                           ;stkvar	_f1 @ sp[(0)+-4]
 14408                           
 14409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14410                           ;incstack = 0
 14411  01827C  0EFC               	movlw	-4
 14412  01827E  50E3               	movf	plusw1,w,c
 14413  018280  E10A               	bnz	u6320
 14414  018282  0EFD               	movlw	-3
 14415  018284  50E3               	movf	plusw1,w,c
 14416  018286  E107               	bnz	u6320
 14417  018288  0EFE               	movlw	-2
 14418  01828A  50E3               	movf	plusw1,w,c
 14419  01828C  E104               	bnz	u6320
 14420  01828E  0EFF               	movlw	-1
 14421  018290  50E3               	movf	plusw1,w,c
 14422  018292  B4D8               	btfsc	status,2,c
 14423  018294  D002               	goto	l7272
 14424  018296                     u6320:
 14425                           
 14426                           ;stkvar	_f1 @ sp[(0)+-4]
 14427  018296  0EFF               	movlw	-1
 14428  018298  7EE3               	btg	plusw1,7,c
 14429  01829A                     l7272:
 14430                           
 14431                           ;stkvar	_f1 @ sp[(0)+-4]
 14432  01829A  0EFC               	movlw	-4
 14433  01829C  006F FF8C  F032    	movff	plusw1,btemp
 14434  0182A2  0EFD               	movlw	-3
 14435  0182A4  006F FF8C  F033    	movff	plusw1,btemp+1
 14436  0182AA  0EFE               	movlw	-2
 14437  0182AC  006F FF8C  F034    	movff	plusw1,btemp+2
 14438  0182B2  0EFF               	movlw	-1
 14439  0182B4  006F FF8C  F035    	movff	plusw1,btemp+3
 14440                           
 14441                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14442  0182BA  52E5               	movf	postdec1,f,c
 14443  0182BC  52E5               	movf	postdec1,f,c
 14444  0182BE  52E5               	movf	postdec1,f,c
 14445  0182C0  52E5               	movf	postdec1,f,c
 14446  0182C2  0012               	return		;funcret
 14447  0182C4                     __end_of___flneg:
 14448                           	opt callstack 0
 14449                           
 14450 ;; *************** function ___flge *****************
 14451 ;; Defined at:
 14452 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  ff1             4  [STACK] long 
 14455 ;;  ff2             4  [STACK] long 
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;		None
 14458 ;; Return value:  Size  Location     Type
 14459 ;;		None               void
 14460 ;; Registers used:
 14461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14462 ;; Tracked objects:
 14463 ;;		On entry : 0/5
 14464 ;;		On exit  : 0/0
 14465 ;;		Unchanged: 0/0
 14466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14471 ;;Total ram usage:        0 bytes
 14472 ;; Hardware stack levels used:    1
 14473 ;; Hardware stack levels required when called:    6
 14474 ;; This function calls:
 14475 ;;		Nothing
 14476 ;; This function is called by:
 14477 ;;		_efgtoa
 14478 ;; This function uses a reentrant model
 14479 ;;
 14480                           
 14481                           	psect	text54
 14482  0165CE                     __ptext54:
 14483                           	opt callstack 0
 14484  0165CE                     ___flge:
 14485                           	opt callstack 17
 14486                           
 14487                           ;stkvar	_ff1 @ sp[(0)+-4]
 14488                           
 14489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14490                           ;incstack = 0
 14491  0165CE  50E1               	movf	fsr1l,w,c
 14492  0165D0  0FFC               	addlw	-4
 14493  0165D2  6ED9               	movwf	fsr2l,c
 14494  0165D4  50E2               	movf	fsr1h,w,c
 14495  0165D6  6EDA               	movwf	fsr2h,c
 14496  0165D8  0EFF               	movlw	255
 14497  0165DA  22DA               	addwfc	fsr2h,f,c
 14498  0165DC  0E00               	movlw	0
 14499  0165DE  14DE               	andwf	postinc2,w,c
 14500  0165E0  6E3A               	movwf	(btemp+8)^0,c
 14501  0165E2  0E00               	movlw	0
 14502  0165E4  14DE               	andwf	postinc2,w,c
 14503  0165E6  6E3B               	movwf	(btemp+9)^0,c
 14504  0165E8  0E80               	movlw	128
 14505  0165EA  14DE               	andwf	postinc2,w,c
 14506  0165EC  6E3C               	movwf	(btemp+10)^0,c
 14507  0165EE  0E7F               	movlw	127
 14508  0165F0  14DE               	andwf	postinc2,w,c
 14509  0165F2  6E3D               	movwf	(btemp+11)^0,c
 14510  0165F4  503A               	movf	(btemp+8)^0,w,c
 14511  0165F6  103B               	iorwf	(btemp+9)^0,w,c
 14512  0165F8  103C               	iorwf	(btemp+10)^0,w,c
 14513  0165FA  103D               	iorwf	(btemp+11)^0,w,c
 14514  0165FC  A4D8               	btfss	status,2,c
 14515  0165FE  D008               	goto	l7246
 14516                           
 14517                           ;stkvar	_ff1 @ sp[(0)+-4]
 14518  016600  0EFC               	movlw	-4
 14519  016602  6AE3               	clrf	plusw1,c
 14520  016604  0EFD               	movlw	-3
 14521  016606  6AE3               	clrf	plusw1,c
 14522  016608  0EFE               	movlw	-2
 14523  01660A  6AE3               	clrf	plusw1,c
 14524  01660C  0EFF               	movlw	-1
 14525  01660E  6AE3               	clrf	plusw1,c
 14526  016610                     l7246:
 14527                           
 14528                           ;stkvar	_ff2 @ sp[(0)+-8]
 14529  016610  50E1               	movf	fsr1l,w,c
 14530  016612  0FF8               	addlw	-8
 14531  016614  6ED9               	movwf	fsr2l,c
 14532  016616  50E2               	movf	fsr1h,w,c
 14533  016618  6EDA               	movwf	fsr2h,c
 14534  01661A  0EFF               	movlw	255
 14535  01661C  22DA               	addwfc	fsr2h,f,c
 14536  01661E  0E00               	movlw	0
 14537  016620  14DE               	andwf	postinc2,w,c
 14538  016622  6E3A               	movwf	(btemp+8)^0,c
 14539  016624  0E00               	movlw	0
 14540  016626  14DE               	andwf	postinc2,w,c
 14541  016628  6E3B               	movwf	(btemp+9)^0,c
 14542  01662A  0E80               	movlw	128
 14543  01662C  14DE               	andwf	postinc2,w,c
 14544  01662E  6E3C               	movwf	(btemp+10)^0,c
 14545  016630  0E7F               	movlw	127
 14546  016632  14DE               	andwf	postinc2,w,c
 14547  016634  6E3D               	movwf	(btemp+11)^0,c
 14548  016636  503A               	movf	(btemp+8)^0,w,c
 14549  016638  103B               	iorwf	(btemp+9)^0,w,c
 14550  01663A  103C               	iorwf	(btemp+10)^0,w,c
 14551  01663C  103D               	iorwf	(btemp+11)^0,w,c
 14552  01663E  A4D8               	btfss	status,2,c
 14553  016640  D008               	goto	l2362
 14554                           
 14555                           ;stkvar	_ff2 @ sp[(0)+-8]
 14556  016642  0EF8               	movlw	-8
 14557  016644  6AE3               	clrf	plusw1,c
 14558  016646  0EF9               	movlw	-7
 14559  016648  6AE3               	clrf	plusw1,c
 14560  01664A  0EFA               	movlw	-6
 14561  01664C  6AE3               	clrf	plusw1,c
 14562  01664E  0EFB               	movlw	-5
 14563  016650  6AE3               	clrf	plusw1,c
 14564  016652                     l2362:
 14565                           
 14566                           ;stkvar	_ff1 @ sp[(0)+-4]
 14567  016652  0EFF               	movlw	-1
 14568  016654  AEE3               	btfss	plusw1,7,c
 14569  016656  D024               	goto	l7252
 14570                           
 14571                           ;stkvar	_ff1 @ sp[(0)+-4]
 14572  016658  0E00               	movlw	0
 14573  01665A  6E3A               	movwf	(btemp+8)^0,c
 14574  01665C  0E00               	movlw	0
 14575  01665E  6E3B               	movwf	(btemp+9)^0,c
 14576  016660  0E00               	movlw	0
 14577  016662  6E3C               	movwf	(btemp+10)^0,c
 14578  016664  0E80               	movlw	128
 14579  016666  6E3D               	movwf	(btemp+11)^0,c
 14580  016668  0EFC               	movlw	-4
 14581  01666A  50E3               	movf	plusw1,w,c
 14582  01666C  5E3A               	subwf	(btemp+8)^0,f,c
 14583  01666E  0EFD               	movlw	-3
 14584  016670  50E3               	movf	plusw1,w,c
 14585  016672  5A3B               	subwfb	(btemp+9)^0,f,c
 14586  016674  0EFE               	movlw	-2
 14587  016676  50E3               	movf	plusw1,w,c
 14588  016678  5A3C               	subwfb	(btemp+10)^0,f,c
 14589  01667A  0EFF               	movlw	-1
 14590  01667C  50E3               	movf	plusw1,w,c
 14591  01667E  5A3D               	subwfb	(btemp+11)^0,f,c
 14592                           
 14593                           ;stkvar	_ff1 @ sp[(0)+-4]
 14594  016680  0EFC               	movlw	-4
 14595  016682  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14596  016688  0EFD               	movlw	-3
 14597  01668A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14598  016690  0EFE               	movlw	-2
 14599  016692  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14600  016698  0EFF               	movlw	-1
 14601  01669A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14602  0166A0                     l7252:
 14603                           
 14604                           ;stkvar	_ff2 @ sp[(0)+-8]
 14605  0166A0  0EFB               	movlw	-5
 14606  0166A2  AEE3               	btfss	plusw1,7,c
 14607  0166A4  D024               	goto	l7256
 14608                           
 14609                           ;stkvar	_ff2 @ sp[(0)+-8]
 14610  0166A6  0E00               	movlw	0
 14611  0166A8  6E3A               	movwf	(btemp+8)^0,c
 14612  0166AA  0E00               	movlw	0
 14613  0166AC  6E3B               	movwf	(btemp+9)^0,c
 14614  0166AE  0E00               	movlw	0
 14615  0166B0  6E3C               	movwf	(btemp+10)^0,c
 14616  0166B2  0E80               	movlw	128
 14617  0166B4  6E3D               	movwf	(btemp+11)^0,c
 14618  0166B6  0EF8               	movlw	-8
 14619  0166B8  50E3               	movf	plusw1,w,c
 14620  0166BA  5E3A               	subwf	(btemp+8)^0,f,c
 14621  0166BC  0EF9               	movlw	-7
 14622  0166BE  50E3               	movf	plusw1,w,c
 14623  0166C0  5A3B               	subwfb	(btemp+9)^0,f,c
 14624  0166C2  0EFA               	movlw	-6
 14625  0166C4  50E3               	movf	plusw1,w,c
 14626  0166C6  5A3C               	subwfb	(btemp+10)^0,f,c
 14627  0166C8  0EFB               	movlw	-5
 14628  0166CA  50E3               	movf	plusw1,w,c
 14629  0166CC  5A3D               	subwfb	(btemp+11)^0,f,c
 14630                           
 14631                           ;stkvar	_ff2 @ sp[(0)+-8]
 14632  0166CE  0EF8               	movlw	-8
 14633  0166D0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14634  0166D6  0EF9               	movlw	-7
 14635  0166D8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14636  0166DE  0EFA               	movlw	-6
 14637  0166E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14638  0166E6  0EFB               	movlw	-5
 14639  0166E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14640  0166EE                     l7256:
 14641                           
 14642                           ;stkvar	_ff1 @ sp[(0)+-4]
 14643  0166EE  0EFF               	movlw	-1
 14644  0166F0  7EE3               	btg	plusw1,7,c
 14645                           
 14646                           ;stkvar	_ff2 @ sp[(0)+-8]
 14647  0166F2  0EFB               	movlw	-5
 14648  0166F4  7EE3               	btg	plusw1,7,c
 14649                           
 14650                           ;stkvar	_ff2 @ sp[(0)+-8]
 14651                           ;stkvar	_ff1 @ sp[(0)+-4]
 14652  0166F6  50E1               	movf	fsr1l,w,c
 14653  0166F8  0FFC               	addlw	-4
 14654  0166FA  6ED9               	movwf	fsr2l,c
 14655  0166FC  50E2               	movf	fsr1h,w,c
 14656  0166FE  6EDA               	movwf	fsr2h,c
 14657  016700  0EFF               	movlw	255
 14658  016702  22DA               	addwfc	fsr2h,f,c
 14659  016704  0EF8               	movlw	-8
 14660  016706  50E3               	movf	plusw1,w,c
 14661  016708  5CDE               	subwf	postinc2,w,c
 14662  01670A  0EF9               	movlw	-7
 14663  01670C  50E3               	movf	plusw1,w,c
 14664  01670E  58DE               	subwfb	postinc2,w,c
 14665  016710  0EFA               	movlw	-6
 14666  016712  50E3               	movf	plusw1,w,c
 14667  016714  58DE               	subwfb	postinc2,w,c
 14668  016716  0EFB               	movlw	-5
 14669  016718  50E3               	movf	plusw1,w,c
 14670  01671A  58DE               	subwfb	postinc2,w,c
 14671  01671C  B0D8               	btfsc	status,0,c
 14672  01671E  D002               	goto	l7264
 14673  016720  9032               	bcf	btemp& (0+255),0,c
 14674  016722  D001               	goto	l2369
 14675  016724                     l7264:
 14676  016724  8032               	bsf	btemp& (0+255),0,c
 14677  016726                     l2369:
 14678                           
 14679                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14680  016726  0EF8               	movlw	248
 14681  016728  26E1               	addwf	fsr1l,f,c
 14682  01672A  0EFF               	movlw	255
 14683  01672C  22E2               	addwfc	fsr1h,f,c
 14684  01672E  0012               	return		;funcret
 14685  016730                     __end_of___flge:
 14686                           	opt callstack 0
 14687                           
 14688 ;; *************** function ___fleq *****************
 14689 ;; Defined at:
 14690 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;  ff1             4  [STACK] long 
 14693 ;;  ff2             4  [STACK] long 
 14694 ;; Auto vars:     Size  Location     Type
 14695 ;;		None
 14696 ;; Return value:  Size  Location     Type
 14697 ;;		None               void
 14698 ;; Registers used:
 14699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/5
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14709 ;;Total ram usage:        0 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:    6
 14712 ;; This function calls:
 14713 ;;		Nothing
 14714 ;; This function is called by:
 14715 ;;		_efgtoa
 14716 ;; This function uses a reentrant model
 14717 ;;
 14718                           
 14719                           	psect	text55
 14720  017410                     __ptext55:
 14721                           	opt callstack 0
 14722  017410                     ___fleq:
 14723                           	opt callstack 17
 14724                           
 14725                           ;stkvar	_ff1 @ sp[(0)+-4]
 14726                           
 14727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14728                           ;incstack = 0
 14729  017410  50E1               	movf	fsr1l,w,c
 14730  017412  0FFC               	addlw	-4
 14731  017414  6ED9               	movwf	fsr2l,c
 14732  017416  50E2               	movf	fsr1h,w,c
 14733  017418  6EDA               	movwf	fsr2h,c
 14734  01741A  0EFF               	movlw	255
 14735  01741C  22DA               	addwfc	fsr2h,f,c
 14736  01741E  0E00               	movlw	0
 14737  017420  14DE               	andwf	postinc2,w,c
 14738  017422  6E3A               	movwf	(btemp+8)^0,c
 14739  017424  0E00               	movlw	0
 14740  017426  14DE               	andwf	postinc2,w,c
 14741  017428  6E3B               	movwf	(btemp+9)^0,c
 14742  01742A  0E80               	movlw	128
 14743  01742C  14DE               	andwf	postinc2,w,c
 14744  01742E  6E3C               	movwf	(btemp+10)^0,c
 14745  017430  0E7F               	movlw	127
 14746  017432  14DE               	andwf	postinc2,w,c
 14747  017434  6E3D               	movwf	(btemp+11)^0,c
 14748  017436  503A               	movf	(btemp+8)^0,w,c
 14749  017438  103B               	iorwf	(btemp+9)^0,w,c
 14750  01743A  103C               	iorwf	(btemp+10)^0,w,c
 14751  01743C  103D               	iorwf	(btemp+11)^0,w,c
 14752  01743E  A4D8               	btfss	status,2,c
 14753  017440  D008               	goto	l7230
 14754                           
 14755                           ;stkvar	_ff1 @ sp[(0)+-4]
 14756  017442  0EFC               	movlw	-4
 14757  017444  6AE3               	clrf	plusw1,c
 14758  017446  0EFD               	movlw	-3
 14759  017448  6AE3               	clrf	plusw1,c
 14760  01744A  0EFE               	movlw	-2
 14761  01744C  6AE3               	clrf	plusw1,c
 14762  01744E  0EFF               	movlw	-1
 14763  017450  6AE3               	clrf	plusw1,c
 14764  017452                     l7230:
 14765                           
 14766                           ;stkvar	_ff2 @ sp[(0)+-8]
 14767  017452  50E1               	movf	fsr1l,w,c
 14768  017454  0FF8               	addlw	-8
 14769  017456  6ED9               	movwf	fsr2l,c
 14770  017458  50E2               	movf	fsr1h,w,c
 14771  01745A  6EDA               	movwf	fsr2h,c
 14772  01745C  0EFF               	movlw	255
 14773  01745E  22DA               	addwfc	fsr2h,f,c
 14774  017460  0E00               	movlw	0
 14775  017462  14DE               	andwf	postinc2,w,c
 14776  017464  6E3A               	movwf	(btemp+8)^0,c
 14777  017466  0E00               	movlw	0
 14778  017468  14DE               	andwf	postinc2,w,c
 14779  01746A  6E3B               	movwf	(btemp+9)^0,c
 14780  01746C  0E80               	movlw	128
 14781  01746E  14DE               	andwf	postinc2,w,c
 14782  017470  6E3C               	movwf	(btemp+10)^0,c
 14783  017472  0E7F               	movlw	127
 14784  017474  14DE               	andwf	postinc2,w,c
 14785  017476  6E3D               	movwf	(btemp+11)^0,c
 14786  017478  503A               	movf	(btemp+8)^0,w,c
 14787  01747A  103B               	iorwf	(btemp+9)^0,w,c
 14788  01747C  103C               	iorwf	(btemp+10)^0,w,c
 14789  01747E  103D               	iorwf	(btemp+11)^0,w,c
 14790  017480  A4D8               	btfss	status,2,c
 14791  017482  D008               	goto	l7234
 14792                           
 14793                           ;stkvar	_ff2 @ sp[(0)+-8]
 14794  017484  0EF8               	movlw	-8
 14795  017486  6AE3               	clrf	plusw1,c
 14796  017488  0EF9               	movlw	-7
 14797  01748A  6AE3               	clrf	plusw1,c
 14798  01748C  0EFA               	movlw	-6
 14799  01748E  6AE3               	clrf	plusw1,c
 14800  017490  0EFB               	movlw	-5
 14801  017492  6AE3               	clrf	plusw1,c
 14802  017494                     l7234:
 14803                           
 14804                           ;stkvar	_ff2 @ sp[(0)+-8]
 14805                           ;stkvar	_ff1 @ sp[(0)+-4]
 14806  017494  50E1               	movf	fsr1l,w,c
 14807  017496  0FFC               	addlw	-4
 14808  017498  6ED9               	movwf	fsr2l,c
 14809  01749A  50E2               	movf	fsr1h,w,c
 14810  01749C  6EDA               	movwf	fsr2h,c
 14811  01749E  0EFF               	movlw	255
 14812  0174A0  22DA               	addwfc	fsr2h,f,c
 14813  0174A2  0EF8               	movlw	-8
 14814  0174A4  50E3               	movf	plusw1,w,c
 14815  0174A6  18DE               	xorwf	postinc2,w,c
 14816  0174A8  E10D               	bnz	u6260
 14817  0174AA  0EF9               	movlw	-7
 14818  0174AC  50E3               	movf	plusw1,w,c
 14819  0174AE  18DE               	xorwf	postinc2,w,c
 14820  0174B0  E109               	bnz	u6260
 14821  0174B2  0EFA               	movlw	-6
 14822  0174B4  50E3               	movf	plusw1,w,c
 14823  0174B6  18DE               	xorwf	postinc2,w,c
 14824  0174B8  E105               	bnz	u6260
 14825  0174BA  0EFB               	movlw	-5
 14826  0174BC  50E3               	movf	plusw1,w,c
 14827  0174BE  18DE               	xorwf	postinc2,w,c
 14828  0174C0  B4D8               	btfsc	status,2,c
 14829  0174C2  D002               	goto	l7238
 14830  0174C4                     u6260:
 14831  0174C4  9032               	bcf	btemp& (0+255),0,c
 14832  0174C6  D001               	goto	l2358
 14833  0174C8                     l7238:
 14834  0174C8  8032               	bsf	btemp& (0+255),0,c
 14835  0174CA                     l2358:
 14836                           
 14837                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14838  0174CA  0EF8               	movlw	248
 14839  0174CC  26E1               	addwf	fsr1l,f,c
 14840  0174CE  0EFF               	movlw	255
 14841  0174D0  22E2               	addwfc	fsr1h,f,c
 14842  0174D2  0012               	return		;funcret
 14843  0174D4                     __end_of___fleq:
 14844                           	opt callstack 0
 14845                           
 14846 ;; *************** function ___fldiv *****************
 14847 ;; Defined at:
 14848 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 14849 ;; Parameters:    Size  Location     Type
 14850 ;;  b               4  [STACK] long 
 14851 ;;  a               4  [STACK] long 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;  grs             4  [STACK] unsigned long 
 14854 ;;  rem             4  [STACK] unsigned long 
 14855 ;;  new_exp         2  [STACK] short 
 14856 ;;  aexp            1  [STACK] unsigned char 
 14857 ;;  bexp            1  [STACK] unsigned char 
 14858 ;;  sign            1  [STACK] unsigned char 
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  4  [STACK] unsigned char 
 14861 ;; Registers used:
 14862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14863 ;; Tracked objects:
 14864 ;;		On entry : 0/2
 14865 ;;		On exit  : 0/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14872 ;;Total ram usage:        0 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; Hardware stack levels required when called:    6
 14875 ;; This function calls:
 14876 ;;		Nothing
 14877 ;; This function is called by:
 14878 ;;		_conv_raw_result
 14879 ;;		_efgtoa
 14880 ;; This function uses a reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text56
 14884  0135A4                     __ptext56:
 14885                           	opt callstack 0
 14886  0135A4                     ___fldiv:
 14887                           	opt callstack 0
 14888                           
 14889                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14890  0135A4  0E0D               	movlw	13
 14891  0135A6  26E1               	addwf	fsr1l,f,c
 14892  0135A8  0E00               	movlw	0
 14893  0135AA  22E2               	addwfc	fsr1h,f,c
 14894                           
 14895                           ;stkvar	_b @ sp[(-13)+-4]
 14896                           
 14897                           ;incstack = 0
 14898  0135AC  0EF2               	movlw	242
 14899  0135AE  24E1               	addwf	fsr1l,w,c
 14900  0135B0  6ED9               	movwf	fsr2l,c
 14901  0135B2  0EFF               	movlw	255
 14902  0135B4  20E2               	addwfc	fsr1h,w,c
 14903  0135B6  6EDA               	movwf	fsr2h,c
 14904  0135B8  50DF               	movf	indf2,w,c
 14905  0135BA  6E3D               	movwf	(btemp+11)^0,c
 14906  0135BC  0E80               	movlw	128
 14907  0135BE  163D               	andwf	(btemp+11)^0,f,c
 14908                           
 14909                           ;stkvar	_sign @ sp[(-13)+12]
 14910  0135C0  0EFF               	movlw	-1
 14911  0135C2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14912                           
 14913                           ;stkvar	_b @ sp[(-13)+-4]
 14914  0135C8  0EF2               	movlw	242
 14915  0135CA  24E1               	addwf	fsr1l,w,c
 14916  0135CC  6ED9               	movwf	fsr2l,c
 14917  0135CE  0EFF               	movlw	255
 14918  0135D0  20E2               	addwfc	fsr1h,w,c
 14919  0135D2  6EDA               	movwf	fsr2h,c
 14920  0135D4  50DF               	movf	indf2,w,c
 14921  0135D6  6E3D               	movwf	(btemp+11)^0,c
 14922  0135D8  90D8               	bcf	status,0,c
 14923  0135DA  343D               	rlcf	(btemp+11)^0,w,c
 14924  0135DC  6E3C               	movwf	(btemp+10)^0,c
 14925                           
 14926                           ;stkvar	_bexp @ sp[(-13)+11]
 14927  0135DE  0EFE               	movlw	-2
 14928  0135E0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14929                           
 14930                           ;stkvar	_b @ sp[(-13)+-4]
 14931  0135E6  0EF1               	movlw	241
 14932  0135E8  24E1               	addwf	fsr1l,w,c
 14933  0135EA  6ED9               	movwf	fsr2l,c
 14934  0135EC  0EFF               	movlw	255
 14935  0135EE  20E2               	addwfc	fsr1h,w,c
 14936  0135F0  6EDA               	movwf	fsr2h,c
 14937  0135F2  AEDF               	btfss	indf2,7,c
 14938  0135F4  D002               	goto	l6832
 14939                           
 14940                           ;stkvar	_bexp @ sp[(-13)+11]
 14941  0135F6  0EFE               	movlw	-2
 14942  0135F8  80E3               	bsf	plusw1,0,c
 14943  0135FA                     l6832:
 14944                           
 14945                           ;stkvar	_bexp @ sp[(-13)+11]
 14946  0135FA  0EFE               	movlw	-2
 14947  0135FC  50E3               	movf	plusw1,w,c
 14948  0135FE  B4D8               	btfsc	status,2,c
 14949  013600  D027               	goto	l6842
 14950                           
 14951                           ;stkvar	_bexp @ sp[(-13)+11]
 14952  013602  0EFE               	movlw	-2
 14953  013604  28E3               	incf	plusw1,w,c
 14954  013606  A4D8               	btfss	status,2,c
 14955  013608  D018               	goto	l6838
 14956  01360A  0E00               	movlw	0
 14957  01360C  6E3A               	movwf	(btemp+8)^0,c
 14958  01360E  0E00               	movlw	0
 14959  013610  6E3B               	movwf	(btemp+9)^0,c
 14960  013612  0E00               	movlw	0
 14961  013614  6E3C               	movwf	(btemp+10)^0,c
 14962  013616  0E00               	movlw	0
 14963  013618  6E3D               	movwf	(btemp+11)^0,c
 14964                           
 14965                           ;stkvar	_b @ sp[(-13)+-4]
 14966  01361A  0EEF               	movlw	-17
 14967  01361C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14968  013622  0EF0               	movlw	-16
 14969  013624  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14970  01362A  0EF1               	movlw	-15
 14971  01362C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14972  013632  0EF2               	movlw	-14
 14973  013634  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14974  01363A                     l6838:
 14975                           
 14976                           ;stkvar	_b @ sp[(-13)+-4]
 14977  01363A  0EF1               	movlw	-15
 14978  01363C  8EE3               	bsf	plusw1,7,c
 14979                           
 14980                           ;stkvar	_b @ sp[(-13)+-4]
 14981  01363E  0EF2               	movlw	242
 14982  013640  24E1               	addwf	fsr1l,w,c
 14983  013642  6ED9               	movwf	fsr2l,c
 14984  013644  0EFF               	movlw	255
 14985  013646  20E2               	addwfc	fsr1h,w,c
 14986  013648  6EDA               	movwf	fsr2h,c
 14987  01364A  0E00               	movlw	0
 14988  01364C  6EDF               	movwf	indf2,c
 14989  01364E  D018               	goto	l6844
 14990  013650                     l6842:
 14991  013650  0E00               	movlw	0
 14992  013652  6E3A               	movwf	(btemp+8)^0,c
 14993  013654  0E00               	movlw	0
 14994  013656  6E3B               	movwf	(btemp+9)^0,c
 14995  013658  0E00               	movlw	0
 14996  01365A  6E3C               	movwf	(btemp+10)^0,c
 14997  01365C  0E00               	movlw	0
 14998  01365E  6E3D               	movwf	(btemp+11)^0,c
 14999                           
 15000                           ;stkvar	_b @ sp[(-13)+-4]
 15001  013660  0EEF               	movlw	-17
 15002  013662  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15003  013668  0EF0               	movlw	-16
 15004  01366A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15005  013670  0EF1               	movlw	-15
 15006  013672  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15007  013678  0EF2               	movlw	-14
 15008  01367A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15009  013680                     l6844:
 15010                           
 15011                           ;stkvar	_a @ sp[(-13)+-8]
 15012  013680  0EEE               	movlw	238
 15013  013682  24E1               	addwf	fsr1l,w,c
 15014  013684  6ED9               	movwf	fsr2l,c
 15015  013686  0EFF               	movlw	255
 15016  013688  20E2               	addwfc	fsr1h,w,c
 15017  01368A  6EDA               	movwf	fsr2h,c
 15018  01368C  50DF               	movf	indf2,w,c
 15019  01368E  6E3D               	movwf	(btemp+11)^0,c
 15020  013690  0E80               	movlw	128
 15021  013692  163D               	andwf	(btemp+11)^0,f,c
 15022                           
 15023                           ;stkvar	_sign @ sp[(-13)+12]
 15024  013694  50E1               	movf	fsr1l,w,c
 15025  013696  0FFF               	addlw	-1
 15026  013698  6ED9               	movwf	fsr2l,c
 15027  01369A  50E2               	movf	fsr1h,w,c
 15028  01369C  6EDA               	movwf	fsr2h,c
 15029  01369E  0EFF               	movlw	255
 15030  0136A0  22DA               	addwfc	fsr2h,f,c
 15031  0136A2  503D               	movf	(btemp+11)^0,w,c
 15032  0136A4  1ADF               	xorwf	indf2,f,c
 15033                           
 15034                           ;stkvar	_a @ sp[(-13)+-8]
 15035  0136A6  0EEE               	movlw	238
 15036  0136A8  24E1               	addwf	fsr1l,w,c
 15037  0136AA  6ED9               	movwf	fsr2l,c
 15038  0136AC  0EFF               	movlw	255
 15039  0136AE  20E2               	addwfc	fsr1h,w,c
 15040  0136B0  6EDA               	movwf	fsr2h,c
 15041  0136B2  50DF               	movf	indf2,w,c
 15042  0136B4  6E3D               	movwf	(btemp+11)^0,c
 15043  0136B6  90D8               	bcf	status,0,c
 15044  0136B8  343D               	rlcf	(btemp+11)^0,w,c
 15045  0136BA  6E3C               	movwf	(btemp+10)^0,c
 15046                           
 15047                           ;stkvar	_aexp @ sp[(-13)+10]
 15048  0136BC  0EFD               	movlw	-3
 15049  0136BE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15050                           
 15051                           ;stkvar	_a @ sp[(-13)+-8]
 15052  0136C4  0EED               	movlw	237
 15053  0136C6  24E1               	addwf	fsr1l,w,c
 15054  0136C8  6ED9               	movwf	fsr2l,c
 15055  0136CA  0EFF               	movlw	255
 15056  0136CC  20E2               	addwfc	fsr1h,w,c
 15057  0136CE  6EDA               	movwf	fsr2h,c
 15058  0136D0  AEDF               	btfss	indf2,7,c
 15059  0136D2  D002               	goto	l6852
 15060                           
 15061                           ;stkvar	_aexp @ sp[(-13)+10]
 15062  0136D4  0EFD               	movlw	-3
 15063  0136D6  80E3               	bsf	plusw1,0,c
 15064  0136D8                     l6852:
 15065                           
 15066                           ;stkvar	_aexp @ sp[(-13)+10]
 15067  0136D8  0EFD               	movlw	-3
 15068  0136DA  50E3               	movf	plusw1,w,c
 15069  0136DC  B4D8               	btfsc	status,2,c
 15070  0136DE  D027               	goto	l6862
 15071                           
 15072                           ;stkvar	_aexp @ sp[(-13)+10]
 15073  0136E0  0EFD               	movlw	-3
 15074  0136E2  28E3               	incf	plusw1,w,c
 15075  0136E4  A4D8               	btfss	status,2,c
 15076  0136E6  D018               	goto	l6858
 15077  0136E8  0E00               	movlw	0
 15078  0136EA  6E3A               	movwf	(btemp+8)^0,c
 15079  0136EC  0E00               	movlw	0
 15080  0136EE  6E3B               	movwf	(btemp+9)^0,c
 15081  0136F0  0E00               	movlw	0
 15082  0136F2  6E3C               	movwf	(btemp+10)^0,c
 15083  0136F4  0E00               	movlw	0
 15084  0136F6  6E3D               	movwf	(btemp+11)^0,c
 15085                           
 15086                           ;stkvar	_a @ sp[(-13)+-8]
 15087  0136F8  0EEB               	movlw	-21
 15088  0136FA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15089  013700  0EEC               	movlw	-20
 15090  013702  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15091  013708  0EED               	movlw	-19
 15092  01370A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15093  013710  0EEE               	movlw	-18
 15094  013712  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15095  013718                     l6858:
 15096                           
 15097                           ;stkvar	_a @ sp[(-13)+-8]
 15098  013718  0EED               	movlw	-19
 15099  01371A  8EE3               	bsf	plusw1,7,c
 15100                           
 15101                           ;stkvar	_a @ sp[(-13)+-8]
 15102  01371C  0EEE               	movlw	238
 15103  01371E  24E1               	addwf	fsr1l,w,c
 15104  013720  6ED9               	movwf	fsr2l,c
 15105  013722  0EFF               	movlw	255
 15106  013724  20E2               	addwfc	fsr1h,w,c
 15107  013726  6EDA               	movwf	fsr2h,c
 15108  013728  0E00               	movlw	0
 15109  01372A  6EDF               	movwf	indf2,c
 15110  01372C  D018               	goto	l6864
 15111  01372E                     l6862:
 15112  01372E  0E00               	movlw	0
 15113  013730  6E3A               	movwf	(btemp+8)^0,c
 15114  013732  0E00               	movlw	0
 15115  013734  6E3B               	movwf	(btemp+9)^0,c
 15116  013736  0E00               	movlw	0
 15117  013738  6E3C               	movwf	(btemp+10)^0,c
 15118  01373A  0E00               	movlw	0
 15119  01373C  6E3D               	movwf	(btemp+11)^0,c
 15120                           
 15121                           ;stkvar	_a @ sp[(-13)+-8]
 15122  01373E  0EEB               	movlw	-21
 15123  013740  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15124  013746  0EEC               	movlw	-20
 15125  013748  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15126  01374E  0EED               	movlw	-19
 15127  013750  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15128  013756  0EEE               	movlw	-18
 15129  013758  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15130  01375E                     l6864:
 15131                           
 15132                           ;stkvar	_a @ sp[(-13)+-8]
 15133  01375E  0EEB               	movlw	-21
 15134  013760  50E3               	movf	plusw1,w,c
 15135  013762  E139               	bnz	l6876
 15136  013764  0EEC               	movlw	-20
 15137  013766  50E3               	movf	plusw1,w,c
 15138  013768  E136               	bnz	l6876
 15139  01376A  0EED               	movlw	-19
 15140  01376C  50E3               	movf	plusw1,w,c
 15141  01376E  E133               	bnz	l6876
 15142  013770  0EEE               	movlw	-18
 15143  013772  50E3               	movf	plusw1,w,c
 15144  013774  A4D8               	btfss	status,2,c
 15145  013776  D02F               	goto	l6876
 15146                           
 15147                           ;stkvar	_b @ sp[(-13)+-4]
 15148  013778  0EEF               	movlw	-17
 15149  01377A  6AE3               	clrf	plusw1,c
 15150  01377C  0EF0               	movlw	-16
 15151  01377E  6AE3               	clrf	plusw1,c
 15152  013780  0EF1               	movlw	-15
 15153  013782  6AE3               	clrf	plusw1,c
 15154  013784  0EF2               	movlw	-14
 15155  013786  6AE3               	clrf	plusw1,c
 15156                           
 15157                           ;stkvar	_b @ sp[(-13)+-4]
 15158  013788  0EF1               	movlw	241
 15159  01378A  24E1               	addwf	fsr1l,w,c
 15160  01378C  6ED9               	movwf	fsr2l,c
 15161  01378E  0EFF               	movlw	255
 15162  013790  20E2               	addwfc	fsr1h,w,c
 15163  013792  6EDA               	movwf	fsr2h,c
 15164  013794  0E80               	movlw	128
 15165  013796  12DE               	iorwf	postinc2,f,c
 15166  013798  0E7F               	movlw	127
 15167  01379A  12DD               	iorwf	postdec2,f,c
 15168  01379C                     l6870:
 15169                           
 15170                           ;stkvar	_sign @ sp[(-13)+12]
 15171  01379C  0EFF               	movlw	-1
 15172  01379E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15173                           
 15174                           ;stkvar	_b @ sp[(-13)+-4]
 15175  0137A4  0EF2               	movlw	242
 15176  0137A6  24E1               	addwf	fsr1l,w,c
 15177  0137A8  6ED9               	movwf	fsr2l,c
 15178  0137AA  0EFF               	movlw	255
 15179  0137AC  20E2               	addwfc	fsr1h,w,c
 15180  0137AE  6EDA               	movwf	fsr2h,c
 15181  0137B0  503D               	movf	(btemp+11)^0,w,c
 15182  0137B2  12DF               	iorwf	indf2,f,c
 15183                           
 15184                           ;stkvar	_b @ sp[(-13)+-4]
 15185  0137B4  0EEF               	movlw	-17
 15186  0137B6  006F FF8C  F032    	movff	plusw1,btemp
 15187  0137BC  0EF0               	movlw	-16
 15188  0137BE  006F FF8C  F033    	movff	plusw1,btemp+1
 15189  0137C4  0EF1               	movlw	-15
 15190  0137C6  006F FF8C  F034    	movff	plusw1,btemp+2
 15191  0137CC  0EF2               	movlw	-14
 15192  0137CE  006F FF8C  F035    	movff	plusw1,btemp+3
 15193  0137D4  D19F               	goto	l2681
 15194  0137D6                     l6876:
 15195                           
 15196                           ;stkvar	_bexp @ sp[(-13)+11]
 15197  0137D6  0EFE               	movlw	-2
 15198  0137D8  50E3               	movf	plusw1,w,c
 15199  0137DA  A4D8               	btfss	status,2,c
 15200  0137DC  D009               	goto	l6884
 15201  0137DE  0E00               	movlw	0
 15202  0137E0  6E32               	movwf	btemp^0,c
 15203  0137E2  0E00               	movlw	0
 15204  0137E4  6E33               	movwf	(btemp+1)^0,c
 15205  0137E6  0E00               	movlw	0
 15206  0137E8  6E34               	movwf	(btemp+2)^0,c
 15207  0137EA  0E00               	movlw	0
 15208  0137EC  6E35               	movwf	(btemp+3)^0,c
 15209  0137EE  D192               	goto	l2681
 15210  0137F0                     l6884:
 15211                           
 15212                           ;stkvar	_bexp @ sp[(-13)+11]
 15213  0137F0  0EFE               	movlw	-2
 15214  0137F2  50E3               	movf	plusw1,w,c
 15215  0137F4  6E3C               	movwf	(btemp+10)^0,c
 15216  0137F6  6A3D               	clrf	(btemp+11)^0,c
 15217                           
 15218                           ;stkvar	_aexp @ sp[(-13)+10]
 15219  0137F8  0EFD               	movlw	-3
 15220  0137FA  50E3               	movf	plusw1,w,c
 15221  0137FC  5E3C               	subwf	(btemp+10)^0,f,c
 15222  0137FE  0E00               	movlw	0
 15223  013800  5A3D               	subwfb	(btemp+11)^0,f,c
 15224  013802  0E7F               	movlw	127
 15225  013804  263C               	addwf	(btemp+10)^0,f,c
 15226  013806  0E00               	movlw	0
 15227  013808  223D               	addwfc	(btemp+11)^0,f,c
 15228                           
 15229                           ;stkvar	_new_exp @ sp[(-13)+8]
 15230  01380A  0EFB               	movlw	-5
 15231  01380C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15232  013812  0EFC               	movlw	-4
 15233  013814  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15234                           
 15235                           ;stkvar	_b @ sp[(-13)+-4]
 15236  01381A  0EEF               	movlw	-17
 15237  01381C  006F FF8C  F03A    	movff	plusw1,btemp+8
 15238  013822  0EF0               	movlw	-16
 15239  013824  006F FF8C  F03B    	movff	plusw1,btemp+9
 15240  01382A  0EF1               	movlw	-15
 15241  01382C  006F FF8C  F03C    	movff	plusw1,btemp+10
 15242  013832  0EF2               	movlw	-14
 15243  013834  006F FF8C  F03D    	movff	plusw1,btemp+11
 15244                           
 15245                           ;stkvar	_rem @ sp[(-13)+4]
 15246  01383A  0EF7               	movlw	-9
 15247  01383C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15248  013842  0EF8               	movlw	-8
 15249  013844  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15250  01384A  0EF9               	movlw	-7
 15251  01384C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15252  013852  0EFA               	movlw	-6
 15253  013854  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15254                           
 15255                           ;stkvar	_b @ sp[(-13)+-4]
 15256  01385A  0EEF               	movlw	-17
 15257  01385C  6AE3               	clrf	plusw1,c
 15258  01385E  0EF0               	movlw	-16
 15259  013860  6AE3               	clrf	plusw1,c
 15260  013862  0EF1               	movlw	-15
 15261  013864  6AE3               	clrf	plusw1,c
 15262  013866  0EF2               	movlw	-14
 15263  013868  6AE3               	clrf	plusw1,c
 15264                           
 15265                           ;stkvar	_grs @ sp[(-13)+0]
 15266  01386A  0EF3               	movlw	-13
 15267  01386C  6AE3               	clrf	plusw1,c
 15268  01386E  0EF4               	movlw	-12
 15269  013870  6AE3               	clrf	plusw1,c
 15270  013872  0EF5               	movlw	-11
 15271  013874  6AE3               	clrf	plusw1,c
 15272  013876  0EF6               	movlw	-10
 15273  013878  6AE3               	clrf	plusw1,c
 15274                           
 15275                           ;stkvar	_aexp @ sp[(-13)+10]
 15276  01387A  0EFD               	movlw	-3
 15277  01387C  6AE3               	clrf	plusw1,c
 15278  01387E  D050               	goto	l6912
 15279  013880                     l6894:
 15280                           
 15281                           ;stkvar	_aexp @ sp[(-13)+10]
 15282  013880  0EFD               	movlw	-3
 15283  013882  50E3               	movf	plusw1,w,c
 15284  013884  B4D8               	btfsc	status,2,c
 15285  013886  D020               	goto	l6904
 15286                           
 15287                           ;stkvar	_rem @ sp[(-13)+4]
 15288  013888  90D8               	bcf	status,0,c
 15289  01388A  0EF7               	movlw	-9
 15290  01388C  36E3               	rlcf	plusw1,f,c
 15291  01388E  0EF8               	movlw	-8
 15292  013890  36E3               	rlcf	plusw1,f,c
 15293  013892  0EF9               	movlw	-7
 15294  013894  36E3               	rlcf	plusw1,f,c
 15295  013896  0EFA               	movlw	-6
 15296  013898  36E3               	rlcf	plusw1,f,c
 15297                           
 15298                           ;stkvar	_b @ sp[(-13)+-4]
 15299  01389A  90D8               	bcf	status,0,c
 15300  01389C  0EEF               	movlw	-17
 15301  01389E  36E3               	rlcf	plusw1,f,c
 15302  0138A0  0EF0               	movlw	-16
 15303  0138A2  36E3               	rlcf	plusw1,f,c
 15304  0138A4  0EF1               	movlw	-15
 15305  0138A6  36E3               	rlcf	plusw1,f,c
 15306  0138A8  0EF2               	movlw	-14
 15307  0138AA  36E3               	rlcf	plusw1,f,c
 15308                           
 15309                           ;stkvar	_grs @ sp[(-13)+0]
 15310  0138AC  0EF6               	movlw	-10
 15311  0138AE  AEE3               	btfss	plusw1,7,c
 15312  0138B0  D002               	goto	l6902
 15313                           
 15314                           ;stkvar	_b @ sp[(-13)+-4]
 15315  0138B2  0EEF               	movlw	-17
 15316  0138B4  80E3               	bsf	plusw1,0,c
 15317  0138B6                     l6902:
 15318                           
 15319                           ;stkvar	_grs @ sp[(-13)+0]
 15320  0138B6  90D8               	bcf	status,0,c
 15321  0138B8  0EF3               	movlw	-13
 15322  0138BA  36E3               	rlcf	plusw1,f,c
 15323  0138BC  0EF4               	movlw	-12
 15324  0138BE  36E3               	rlcf	plusw1,f,c
 15325  0138C0  0EF5               	movlw	-11
 15326  0138C2  36E3               	rlcf	plusw1,f,c
 15327  0138C4  0EF6               	movlw	-10
 15328  0138C6  36E3               	rlcf	plusw1,f,c
 15329  0138C8                     l6904:
 15330                           
 15331                           ;stkvar	_a @ sp[(-13)+-8]
 15332                           ;stkvar	_rem @ sp[(-13)+4]
 15333  0138C8  50E1               	movf	fsr1l,w,c
 15334  0138CA  0FF7               	addlw	-9
 15335  0138CC  6ED9               	movwf	fsr2l,c
 15336  0138CE  50E2               	movf	fsr1h,w,c
 15337  0138D0  6EDA               	movwf	fsr2h,c
 15338  0138D2  0EFF               	movlw	255
 15339  0138D4  22DA               	addwfc	fsr2h,f,c
 15340  0138D6  0EEB               	movlw	-21
 15341  0138D8  50E3               	movf	plusw1,w,c
 15342  0138DA  5CDE               	subwf	postinc2,w,c
 15343  0138DC  0EEC               	movlw	-20
 15344  0138DE  50E3               	movf	plusw1,w,c
 15345  0138E0  58DE               	subwfb	postinc2,w,c
 15346  0138E2  0EED               	movlw	-19
 15347  0138E4  50E3               	movf	plusw1,w,c
 15348  0138E6  58DE               	subwfb	postinc2,w,c
 15349  0138E8  0EEE               	movlw	-18
 15350  0138EA  50E3               	movf	plusw1,w,c
 15351  0138EC  58DE               	subwfb	postinc2,w,c
 15352  0138EE  A0D8               	btfss	status,0,c
 15353  0138F0  D015               	goto	l6910
 15354                           
 15355                           ;stkvar	_grs @ sp[(-13)+0]
 15356  0138F2  0EF6               	movlw	-10
 15357  0138F4  8CE3               	bsf	plusw1,6,c
 15358                           
 15359                           ;stkvar	_a @ sp[(-13)+-8]
 15360                           ;stkvar	_rem @ sp[(-13)+4]
 15361  0138F6  50E1               	movf	fsr1l,w,c
 15362  0138F8  0FF7               	addlw	-9
 15363  0138FA  6ED9               	movwf	fsr2l,c
 15364  0138FC  50E2               	movf	fsr1h,w,c
 15365  0138FE  6EDA               	movwf	fsr2h,c
 15366  013900  0EFF               	movlw	255
 15367  013902  22DA               	addwfc	fsr2h,f,c
 15368  013904  0EEB               	movlw	-21
 15369  013906  50E3               	movf	plusw1,w,c
 15370  013908  5EDE               	subwf	postinc2,f,c
 15371  01390A  0EEC               	movlw	-20
 15372  01390C  50E3               	movf	plusw1,w,c
 15373  01390E  5ADE               	subwfb	postinc2,f,c
 15374  013910  0EED               	movlw	-19
 15375  013912  50E3               	movf	plusw1,w,c
 15376  013914  5ADE               	subwfb	postinc2,f,c
 15377  013916  0EEE               	movlw	-18
 15378  013918  50E3               	movf	plusw1,w,c
 15379  01391A  5ADE               	subwfb	postinc2,f,c
 15380  01391C                     l6910:
 15381                           
 15382                           ;stkvar	_aexp @ sp[(-13)+10]
 15383  01391C  0EFD               	movlw	-3
 15384  01391E  2AE3               	incf	plusw1,f,c
 15385  013920                     l6912:
 15386                           
 15387                           ;stkvar	_aexp @ sp[(-13)+10]
 15388  013920  0EFD               	movlw	-3
 15389  013922  006F FF8C  F032    	movff	plusw1,btemp
 15390  013928  0E19               	movlw	25
 15391  01392A  6432               	cpfsgt	btemp^0,c
 15392  01392C  D7A9               	goto	l6894
 15393                           
 15394                           ;stkvar	_rem @ sp[(-13)+4]
 15395  01392E  0EF7               	movlw	-9
 15396  013930  50E3               	movf	plusw1,w,c
 15397  013932  E10A               	bnz	u5760
 15398  013934  0EF8               	movlw	-8
 15399  013936  50E3               	movf	plusw1,w,c
 15400  013938  E107               	bnz	u5760
 15401  01393A  0EF9               	movlw	-7
 15402  01393C  50E3               	movf	plusw1,w,c
 15403  01393E  E104               	bnz	u5760
 15404  013940  0EFA               	movlw	-6
 15405  013942  50E3               	movf	plusw1,w,c
 15406  013944  B4D8               	btfsc	status,2,c
 15407  013946  D024               	goto	l6928
 15408  013948                     u5760:
 15409                           
 15410                           ;stkvar	_grs @ sp[(-13)+0]
 15411  013948  0EF3               	movlw	-13
 15412  01394A  80E3               	bsf	plusw1,0,c
 15413  01394C  D021               	goto	l6928
 15414  01394E                     l6918:
 15415                           
 15416                           ;stkvar	_b @ sp[(-13)+-4]
 15417  01394E  90D8               	bcf	status,0,c
 15418  013950  0EEF               	movlw	-17
 15419  013952  36E3               	rlcf	plusw1,f,c
 15420  013954  0EF0               	movlw	-16
 15421  013956  36E3               	rlcf	plusw1,f,c
 15422  013958  0EF1               	movlw	-15
 15423  01395A  36E3               	rlcf	plusw1,f,c
 15424  01395C  0EF2               	movlw	-14
 15425  01395E  36E3               	rlcf	plusw1,f,c
 15426                           
 15427                           ;stkvar	_grs @ sp[(-13)+0]
 15428  013960  0EF6               	movlw	-10
 15429  013962  AEE3               	btfss	plusw1,7,c
 15430  013964  D002               	goto	l6924
 15431                           
 15432                           ;stkvar	_b @ sp[(-13)+-4]
 15433  013966  0EEF               	movlw	-17
 15434  013968  80E3               	bsf	plusw1,0,c
 15435  01396A                     l6924:
 15436                           
 15437                           ;stkvar	_grs @ sp[(-13)+0]
 15438  01396A  90D8               	bcf	status,0,c
 15439  01396C  0EF3               	movlw	-13
 15440  01396E  36E3               	rlcf	plusw1,f,c
 15441  013970  0EF4               	movlw	-12
 15442  013972  36E3               	rlcf	plusw1,f,c
 15443  013974  0EF5               	movlw	-11
 15444  013976  36E3               	rlcf	plusw1,f,c
 15445  013978  0EF6               	movlw	-10
 15446  01397A  36E3               	rlcf	plusw1,f,c
 15447                           
 15448                           ;stkvar	_new_exp @ sp[(-13)+8]
 15449  01397C  50E1               	movf	fsr1l,w,c
 15450  01397E  0FFB               	addlw	-5
 15451  013980  6ED9               	movwf	fsr2l,c
 15452  013982  50E2               	movf	fsr1h,w,c
 15453  013984  6EDA               	movwf	fsr2h,c
 15454  013986  0EFF               	movlw	255
 15455  013988  22DA               	addwfc	fsr2h,f,c
 15456  01398A  06DE               	decf	postinc2,f,c
 15457  01398C  0E00               	movlw	0
 15458  01398E  5ADD               	subwfb	postdec2,f,c
 15459  013990                     l6928:
 15460                           
 15461                           ;stkvar	_b @ sp[(-13)+-4]
 15462  013990  0EF1               	movlw	-15
 15463  013992  AEE3               	btfss	plusw1,7,c
 15464  013994  D7DC               	goto	l6918
 15465                           
 15466                           ;stkvar	_aexp @ sp[(-13)+10]
 15467  013996  0EFD               	movlw	-3
 15468  013998  6AE3               	clrf	plusw1,c
 15469                           
 15470                           ;stkvar	_grs @ sp[(-13)+0]
 15471  01399A  0EF6               	movlw	-10
 15472  01399C  AEE3               	btfss	plusw1,7,c
 15473  01399E  D020               	goto	l6942
 15474                           
 15475                           ;stkvar	_grs @ sp[(-13)+0]
 15476  0139A0  50E1               	movf	fsr1l,w,c
 15477  0139A2  0FF3               	addlw	-13
 15478  0139A4  6ED9               	movwf	fsr2l,c
 15479  0139A6  50E2               	movf	fsr1h,w,c
 15480  0139A8  6EDA               	movwf	fsr2h,c
 15481  0139AA  0EFF               	movlw	255
 15482  0139AC  22DA               	addwfc	fsr2h,f,c
 15483  0139AE  0EFF               	movlw	255
 15484  0139B0  14DE               	andwf	postinc2,w,c
 15485  0139B2  6E3A               	movwf	(btemp+8)^0,c
 15486  0139B4  0EFF               	movlw	255
 15487  0139B6  14DE               	andwf	postinc2,w,c
 15488  0139B8  6E3B               	movwf	(btemp+9)^0,c
 15489  0139BA  0EFF               	movlw	255
 15490  0139BC  14DE               	andwf	postinc2,w,c
 15491  0139BE  6E3C               	movwf	(btemp+10)^0,c
 15492  0139C0  0E7F               	movlw	127
 15493  0139C2  14DE               	andwf	postinc2,w,c
 15494  0139C4  6E3D               	movwf	(btemp+11)^0,c
 15495  0139C6  503A               	movf	(btemp+8)^0,w,c
 15496  0139C8  103B               	iorwf	(btemp+9)^0,w,c
 15497  0139CA  103C               	iorwf	(btemp+10)^0,w,c
 15498  0139CC  103D               	iorwf	(btemp+11)^0,w,c
 15499  0139CE  B4D8               	btfsc	status,2,c
 15500  0139D0  D004               	goto	l6938
 15501  0139D2                     u5800:
 15502                           
 15503                           ;stkvar	_aexp @ sp[(-13)+10]
 15504  0139D2  0EFD               	movlw	-3
 15505  0139D4  6AE3               	clrf	plusw1,c
 15506  0139D6  2AE3               	incf	plusw1,f,c
 15507  0139D8  D003               	goto	l6942
 15508  0139DA                     l6938:
 15509                           
 15510                           ;stkvar	_b @ sp[(-13)+-4]
 15511  0139DA  0EEF               	movlw	-17
 15512  0139DC  B0E3               	btfsc	plusw1,0,c
 15513  0139DE  D7F9               	goto	u5800
 15514  0139E0                     l6942:
 15515                           
 15516                           ;stkvar	_aexp @ sp[(-13)+10]
 15517  0139E0  0EFD               	movlw	-3
 15518  0139E2  50E3               	movf	plusw1,w,c
 15519  0139E4  B4D8               	btfsc	status,2,c
 15520  0139E6  D036               	goto	l6952
 15521                           
 15522                           ;stkvar	_b @ sp[(-13)+-4]
 15523  0139E8  50E1               	movf	fsr1l,w,c
 15524  0139EA  0FEF               	addlw	-17
 15525  0139EC  6ED9               	movwf	fsr2l,c
 15526  0139EE  50E2               	movf	fsr1h,w,c
 15527  0139F0  6EDA               	movwf	fsr2h,c
 15528  0139F2  0EFF               	movlw	255
 15529  0139F4  22DA               	addwfc	fsr2h,f,c
 15530  0139F6  2ADE               	incf	postinc2,f,c
 15531  0139F8  0E00               	movlw	0
 15532  0139FA  22DE               	addwfc	postinc2,f,c
 15533  0139FC  22DE               	addwfc	postinc2,f,c
 15534  0139FE  22DE               	addwfc	postinc2,f,c
 15535                           
 15536                           ;stkvar	_b @ sp[(-13)+-4]
 15537  013A00  0EF2               	movlw	-14
 15538  013A02  A0E3               	btfss	plusw1,0,c
 15539  013A04  D027               	goto	l6952
 15540  013A06  0E01               	movlw	1
 15541  013A08  6E3D               	movwf	(btemp+11)^0,c
 15542                           
 15543                           ;stkvar	_b @ sp[(-13)+-4]
 15544  013A0A  50E1               	movf	fsr1l,w,c
 15545  013A0C  0FEF               	addlw	-17
 15546  013A0E  6ED9               	movwf	fsr2l,c
 15547  013A10  50E2               	movf	fsr1h,w,c
 15548  013A12  6EDA               	movwf	fsr2h,c
 15549  013A14  0EFF               	movlw	255
 15550  013A16  22DA               	addwfc	fsr2h,f,c
 15551  013A18  283D               	incf	(btemp+11)^0,w,c
 15552  013A1A  52DE               	movf	postinc2,f,c
 15553  013A1C  D008               	goto	u5840
 15554  013A1E                     u5845:
 15555  013A1E  52DE               	movf	postinc2,f,c
 15556  013A20  90D8               	bcf	status,0,c
 15557  013A22  BEDC               	btfsc	preinc2,7,c
 15558  013A24  80D8               	bsf	status,0,c
 15559  013A26  32DD               	rrcf	postdec2,f,c
 15560  013A28  32DD               	rrcf	postdec2,f,c
 15561  013A2A  32DD               	rrcf	postdec2,f,c
 15562  013A2C  32DE               	rrcf	postinc2,f,c
 15563  013A2E                     u5840:
 15564  013A2E  2EE8               	decfsz	wreg,f,c
 15565  013A30  D7F6               	goto	u5845
 15566                           
 15567                           ;stkvar	_new_exp @ sp[(-13)+8]
 15568  013A32  0EFB               	movlw	-5
 15569  013A34  50E3               	movf	plusw1,w,c
 15570  013A36  0F01               	addlw	1
 15571  013A38  6E32               	movwf	btemp^0,c
 15572  013A3A  0EFB               	movlw	-5
 15573  013A3C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15574  013A42  6A32               	clrf	btemp^0,c
 15575  013A44  0EFC               	movlw	-4
 15576  013A46  50E3               	movf	plusw1,w,c
 15577  013A48  2032               	addwfc	btemp^0,w,c
 15578  013A4A  6E32               	movwf	btemp^0,c
 15579  013A4C  0EFC               	movlw	-4
 15580  013A4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 15581  013A54                     l6952:
 15582                           
 15583                           ;stkvar	_new_exp @ sp[(-13)+8]
 15584  013A54  0EFC               	movlw	-4
 15585  013A56  BEE3               	btfsc	plusw1,7,c
 15586  013A58  D01B               	goto	l6958
 15587  013A5A  0EFC               	movlw	-4
 15588  013A5C  50E3               	movf	plusw1,w,c
 15589  013A5E  E104               	bnz	u5850
 15590  013A60  0EFB               	movlw	-5
 15591  013A62  28E3               	incf	plusw1,w,c
 15592  013A64  A0D8               	btfss	status,0,c
 15593  013A66  D014               	goto	l6958
 15594  013A68                     u5850:
 15595  013A68  0EFF               	movlw	255
 15596  013A6A  6E3C               	movwf	(btemp+10)^0,c
 15597  013A6C  0E00               	movlw	0
 15598  013A6E  6E3D               	movwf	(btemp+11)^0,c
 15599                           
 15600                           ;stkvar	_new_exp @ sp[(-13)+8]
 15601  013A70  0EFB               	movlw	-5
 15602  013A72  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15603  013A78  0EFC               	movlw	-4
 15604  013A7A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15605                           
 15606                           ;stkvar	_b @ sp[(-13)+-4]
 15607  013A80  0EEF               	movlw	-17
 15608  013A82  6AE3               	clrf	plusw1,c
 15609  013A84  0EF0               	movlw	-16
 15610  013A86  6AE3               	clrf	plusw1,c
 15611  013A88  0EF1               	movlw	-15
 15612  013A8A  6AE3               	clrf	plusw1,c
 15613  013A8C  0EF2               	movlw	-14
 15614  013A8E  6AE3               	clrf	plusw1,c
 15615  013A90                     l6958:
 15616                           
 15617                           ;stkvar	_new_exp @ sp[(-13)+8]
 15618  013A90  0EFC               	movlw	-4
 15619  013A92  BEE3               	btfsc	plusw1,7,c
 15620  013A94  D007               	goto	u5860
 15621  013A96  0EFC               	movlw	-4
 15622  013A98  50E3               	movf	plusw1,w,c
 15623  013A9A  E112               	bnz	l6964
 15624  013A9C  0EFB               	movlw	-5
 15625  013A9E  04E3               	decf	plusw1,w,c
 15626  013AA0  B0D8               	btfsc	status,0,c
 15627  013AA2  D00E               	goto	l6964
 15628  013AA4                     u5860:
 15629                           
 15630                           ;stkvar	_new_exp @ sp[(-13)+8]
 15631  013AA4  0EFB               	movlw	-5
 15632  013AA6  6AE3               	clrf	plusw1,c
 15633  013AA8  0EFC               	movlw	-4
 15634  013AAA  6AE3               	clrf	plusw1,c
 15635                           
 15636                           ;stkvar	_b @ sp[(-13)+-4]
 15637  013AAC  0EEF               	movlw	-17
 15638  013AAE  6AE3               	clrf	plusw1,c
 15639  013AB0  0EF0               	movlw	-16
 15640  013AB2  6AE3               	clrf	plusw1,c
 15641  013AB4  0EF1               	movlw	-15
 15642  013AB6  6AE3               	clrf	plusw1,c
 15643  013AB8  0EF2               	movlw	-14
 15644  013ABA  6AE3               	clrf	plusw1,c
 15645                           
 15646                           ;stkvar	_sign @ sp[(-13)+12]
 15647  013ABC  0EFF               	movlw	-1
 15648  013ABE  6AE3               	clrf	plusw1,c
 15649  013AC0                     l6964:
 15650                           
 15651                           ;stkvar	_new_exp @ sp[(-13)+8]
 15652                           ;stkvar	_bexp @ sp[(-13)+11]
 15653  013AC0  0EFB               	movlw	-5
 15654  013AC2  006F FF8C  F032    	movff	plusw1,btemp
 15655  013AC8  0EFE               	movlw	-2
 15656  013ACA  0060  F0CB  FFE3   	movff	btemp,plusw1
 15657                           
 15658                           ;stkvar	_bexp @ sp[(-13)+11]
 15659  013AD0  0EFE               	movlw	-2
 15660  013AD2  A0E3               	btfss	plusw1,0,c
 15661  013AD4  D009               	goto	l6970
 15662                           
 15663                           ;stkvar	_b @ sp[(-13)+-4]
 15664  013AD6  0EF1               	movlw	241
 15665  013AD8  24E1               	addwf	fsr1l,w,c
 15666  013ADA  6ED9               	movwf	fsr2l,c
 15667  013ADC  0EFF               	movlw	255
 15668  013ADE  20E2               	addwfc	fsr1h,w,c
 15669  013AE0  6EDA               	movwf	fsr2h,c
 15670  013AE2  0E00               	movlw	0
 15671  013AE4  8EDB               	bsf	plusw2,7,c
 15672  013AE6  D008               	goto	l6972
 15673  013AE8                     l6970:
 15674                           
 15675                           ;stkvar	_b @ sp[(-13)+-4]
 15676  013AE8  0EF1               	movlw	241
 15677  013AEA  24E1               	addwf	fsr1l,w,c
 15678  013AEC  6ED9               	movwf	fsr2l,c
 15679  013AEE  0EFF               	movlw	255
 15680  013AF0  20E2               	addwfc	fsr1h,w,c
 15681  013AF2  6EDA               	movwf	fsr2h,c
 15682  013AF4  0E7F               	movlw	127
 15683  013AF6  16DF               	andwf	indf2,f,c
 15684  013AF8                     l6972:
 15685                           
 15686                           ;stkvar	_b @ sp[(-13)+-4]
 15687  013AF8  0EF2               	movlw	242
 15688  013AFA  24E1               	addwf	fsr1l,w,c
 15689  013AFC  6ED9               	movwf	fsr2l,c
 15690  013AFE  0EFF               	movlw	255
 15691  013B00  20E2               	addwfc	fsr1h,w,c
 15692  013B02  6EDA               	movwf	fsr2h,c
 15693                           
 15694                           ;stkvar	_bexp @ sp[(-13)+11]
 15695  013B04  0EFE               	movlw	-2
 15696  013B06  006F FF8C  F03D    	movff	plusw1,btemp+11
 15697  013B0C  90D8               	bcf	status,0,c
 15698  013B0E  303D               	rrcf	(btemp+11)^0,w,c
 15699  013B10  6EDF               	movwf	indf2,c
 15700  013B12  D644               	goto	l6870
 15701  013B14                     l2681:
 15702                           
 15703                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15704  013B14  0EEB               	movlw	235
 15705  013B16  26E1               	addwf	fsr1l,f,c
 15706  013B18  0EFF               	movlw	255
 15707  013B1A  22E2               	addwfc	fsr1h,f,c
 15708  013B1C  0012               	return		;funcret
 15709  013B1E                     __end_of___fldiv:
 15710                           	opt callstack 0
 15711                           
 15712 ;; *************** function ___awmod *****************
 15713 ;; Defined at:
 15714 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15715 ;; Parameters:    Size  Location     Type
 15716 ;;  dividend        2  [STACK] int 
 15717 ;;  divisor         2  [STACK] int 
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;  sign            1  [STACK] unsigned char 
 15720 ;;  counter         1  [STACK] unsigned char 
 15721 ;; Return value:  Size  Location     Type
 15722 ;;                  2  [STACK] int 
 15723 ;; Registers used:
 15724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15725 ;; Tracked objects:
 15726 ;;		On entry : 0/5
 15727 ;;		On exit  : 0/0
 15728 ;;		Unchanged: 0/0
 15729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15734 ;;Total ram usage:        0 bytes
 15735 ;; Hardware stack levels used:    1
 15736 ;; Hardware stack levels required when called:    6
 15737 ;; This function calls:
 15738 ;;		Nothing
 15739 ;; This function is called by:
 15740 ;;		_efgtoa
 15741 ;; This function uses a reentrant model
 15742 ;;
 15743                           
 15744                           	psect	text57
 15745  016C18                     __ptext57:
 15746                           	opt callstack 0
 15747  016C18                     ___awmod:
 15748                           	opt callstack 0
 15749                           
 15750                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15751  016C18  52E6               	movf	postinc1,f,c
 15752  016C1A  52E6               	movf	postinc1,f,c
 15753                           
 15754                           ;stkvar	_sign @ sp[(-2)+0]
 15755                           
 15756                           ;incstack = 0
 15757  016C1C  0EFE               	movlw	-2
 15758  016C1E  6AE3               	clrf	plusw1,c
 15759                           
 15760                           ;stkvar	_dividend @ sp[(-2)+-2]
 15761  016C20  0EFD               	movlw	-3
 15762  016C22  AEE3               	btfss	plusw1,7,c
 15763  016C24  D009               	goto	l7196
 15764                           
 15765                           ;stkvar	_dividend @ sp[(-2)+-2]
 15766                           ;stkvar	_dividend @ sp[(-2)+-2]
 15767  016C26  0EFC               	movlw	-4
 15768  016C28  6CE3               	negf	plusw1,c
 15769  016C2A  0EFD               	movlw	-3
 15770  016C2C  1EE3               	comf	plusw1,f,c
 15771  016C2E  B0D8               	btfsc	status,0,c
 15772  016C30  2AE3               	incf	plusw1,f,c
 15773                           
 15774                           ;stkvar	_sign @ sp[(-2)+0]
 15775  016C32  0EFE               	movlw	-2
 15776  016C34  6AE3               	clrf	plusw1,c
 15777  016C36  2AE3               	incf	plusw1,f,c
 15778  016C38                     l7196:
 15779                           
 15780                           ;stkvar	_divisor @ sp[(-2)+-4]
 15781  016C38  0EFB               	movlw	-5
 15782  016C3A  AEE3               	btfss	plusw1,7,c
 15783  016C3C  D006               	goto	l7200
 15784                           
 15785                           ;stkvar	_divisor @ sp[(-2)+-4]
 15786                           ;stkvar	_divisor @ sp[(-2)+-4]
 15787  016C3E  0EFA               	movlw	-6
 15788  016C40  6CE3               	negf	plusw1,c
 15789  016C42  0EFB               	movlw	-5
 15790  016C44  1EE3               	comf	plusw1,f,c
 15791  016C46  B0D8               	btfsc	status,0,c
 15792  016C48  2AE3               	incf	plusw1,f,c
 15793  016C4A                     l7200:
 15794                           
 15795                           ;stkvar	_divisor @ sp[(-2)+-4]
 15796  016C4A  0EFA               	movlw	-6
 15797  016C4C  006F FF8C  F032    	movff	plusw1,btemp
 15798  016C52  0EFB               	movlw	-5
 15799  016C54  50E3               	movf	plusw1,w,c
 15800  016C56  1032               	iorwf	btemp^0,w,c
 15801  016C58  B4D8               	btfsc	status,2,c
 15802  016C5A  D053               	goto	u6220
 15803                           
 15804                           ;stkvar	_counter @ sp[(-2)+1]
 15805  016C5C  0EFF               	movlw	-1
 15806  016C5E  6AE3               	clrf	plusw1,c
 15807  016C60  D012               	goto	L15
 15808  016C62                     l7204:
 15809                           
 15810                           ;stkvar	_divisor @ sp[(-2)+-4]
 15811  016C62  0EFA               	movlw	-6
 15812  016C64  50E3               	movf	plusw1,w,c
 15813  016C66  90D8               	bcf	status,0,c
 15814  016C68  34E8               	rlcf	wreg,w,c
 15815  016C6A  6E32               	movwf	btemp^0,c
 15816  016C6C  0EFA               	movlw	-6
 15817  016C6E  0060  F0CB  FFE3   	movff	btemp,plusw1
 15818  016C74  0EFB               	movlw	-5
 15819  016C76  50E3               	movf	plusw1,w,c
 15820  016C78  34E8               	rlcf	wreg,w,c
 15821  016C7A  6E32               	movwf	btemp^0,c
 15822  016C7C  0EFB               	movlw	-5
 15823  016C7E  0060  F0CB  FFE3   	movff	btemp,plusw1
 15824                           
 15825                           ;stkvar	_counter @ sp[(-2)+1]
 15826  016C84  0EFF               	movlw	-1
 15827  016C86                     L15:
 15828  016C86  2AE3               	incf	plusw1,f,c
 15829                           
 15830                           ;stkvar	_divisor @ sp[(-2)+-4]
 15831  016C88  0EFB               	movlw	-5
 15832  016C8A  AEE3               	btfss	plusw1,7,c
 15833  016C8C  D7EA               	goto	l7204
 15834  016C8E                     u6200:
 15835                           
 15836                           ;stkvar	_divisor @ sp[(-2)+-4]
 15837  016C8E  0EFA               	movlw	-6
 15838  016C90  006F FF8C  F03C    	movff	plusw1,btemp+10
 15839  016C96  0EFB               	movlw	-5
 15840  016C98  006F FF8C  F03D    	movff	plusw1,btemp+11
 15841                           
 15842                           ;stkvar	_dividend @ sp[(-2)+-2]
 15843  016C9E  0EFC               	movlw	-4
 15844  016CA0  006F FF8C  F03A    	movff	plusw1,btemp+8
 15845  016CA6  0EFD               	movlw	-3
 15846  016CA8  006F FF8C  F03B    	movff	plusw1,btemp+9
 15847  016CAE  503C               	movf	(btemp+10)^0,w,c
 15848  016CB0  5C3A               	subwf	(btemp+8)^0,w,c
 15849  016CB2  503D               	movf	(btemp+11)^0,w,c
 15850  016CB4  583B               	subwfb	(btemp+9)^0,w,c
 15851  016CB6  A0D8               	btfss	status,0,c
 15852  016CB8  D014               	goto	l7214
 15853                           
 15854                           ;stkvar	_divisor @ sp[(-2)+-4]
 15855                           ;stkvar	_dividend @ sp[(-2)+-2]
 15856  016CBA  0EFC               	movlw	-4
 15857  016CBC  50E3               	movf	plusw1,w,c
 15858  016CBE  6E32               	movwf	btemp^0,c
 15859  016CC0  0EFA               	movlw	-6
 15860  016CC2  50E3               	movf	plusw1,w,c
 15861  016CC4  5E32               	subwf	btemp^0,f,c
 15862  016CC6  0EFC               	movlw	-4
 15863  016CC8  0060  F0CB  FFE3   	movff	btemp,plusw1
 15864  016CCE  0EFD               	movlw	-3
 15865  016CD0  50E3               	movf	plusw1,w,c
 15866  016CD2  6E32               	movwf	btemp^0,c
 15867  016CD4  0EFB               	movlw	-5
 15868  016CD6  50E3               	movf	plusw1,w,c
 15869  016CD8  5A32               	subwfb	btemp^0,f,c
 15870  016CDA  0EFD               	movlw	-3
 15871  016CDC  0060  F0CB  FFE3   	movff	btemp,plusw1
 15872  016CE2                     l7214:
 15873                           
 15874                           ;stkvar	_divisor @ sp[(-2)+-4]
 15875  016CE2  90D8               	bcf	status,0,c
 15876  016CE4  0EFB               	movlw	-5
 15877  016CE6  32E3               	rrcf	plusw1,f,c
 15878  016CE8  0EFA               	movlw	-6
 15879  016CEA  32E3               	rrcf	plusw1,f,c
 15880                           
 15881                           ;stkvar	_counter @ sp[(-2)+1]
 15882  016CEC  0EFF               	movlw	-1
 15883  016CEE  50E3               	movf	plusw1,w,c
 15884  016CF0  6E32               	movwf	btemp^0,c
 15885  016CF2  0E01               	movlw	1
 15886  016CF4  5E32               	subwf	btemp^0,f,c
 15887  016CF6  0EFF               	movlw	-1
 15888  016CF8  0060  F0CB  FFE3   	movff	btemp,plusw1
 15889  016CFE  A4D8               	btfss	status,2,c
 15890  016D00  D7C6               	goto	u6200
 15891  016D02                     u6220:
 15892                           
 15893                           ;stkvar	_sign @ sp[(-2)+0]
 15894  016D02  0EFE               	movlw	-2
 15895  016D04  50E3               	movf	plusw1,w,c
 15896  016D06  B4D8               	btfsc	status,2,c
 15897  016D08  D006               	goto	l7222
 15898                           
 15899                           ;stkvar	_dividend @ sp[(-2)+-2]
 15900                           ;stkvar	_dividend @ sp[(-2)+-2]
 15901  016D0A  0EFC               	movlw	-4
 15902  016D0C  6CE3               	negf	plusw1,c
 15903  016D0E  0EFD               	movlw	-3
 15904  016D10  1EE3               	comf	plusw1,f,c
 15905  016D12  B0D8               	btfsc	status,0,c
 15906  016D14  2AE3               	incf	plusw1,f,c
 15907  016D16                     l7222:
 15908                           
 15909                           ;stkvar	_dividend @ sp[(-2)+-2]
 15910  016D16  0EFC               	movlw	-4
 15911  016D18  006F FF8C  F032    	movff	plusw1,btemp
 15912  016D1E  0EFD               	movlw	-3
 15913  016D20  006F FF8C  F033    	movff	plusw1,btemp+1
 15914                           
 15915                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15916  016D26  0EFA               	movlw	250
 15917  016D28  26E1               	addwf	fsr1l,f,c
 15918  016D2A  0EFF               	movlw	255
 15919  016D2C  22E2               	addwfc	fsr1h,f,c
 15920  016D2E  0012               	return		;funcret
 15921  016D30                     __end_of___awmod:
 15922                           	opt callstack 0
 15923                           
 15924 ;; *************** function ___awdiv *****************
 15925 ;; Defined at:
 15926 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 15927 ;; Parameters:    Size  Location     Type
 15928 ;;  dividend        2  [STACK] int 
 15929 ;;  divisor         2  [STACK] int 
 15930 ;; Auto vars:     Size  Location     Type
 15931 ;;  quotient        2  [STACK] int 
 15932 ;;  sign            1  [STACK] unsigned char 
 15933 ;;  counter         1  [STACK] unsigned char 
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  2  [STACK] int 
 15936 ;; Registers used:
 15937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/5
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15947 ;;Total ram usage:        0 bytes
 15948 ;; Hardware stack levels used:    1
 15949 ;; Hardware stack levels required when called:    6
 15950 ;; This function calls:
 15951 ;;		Nothing
 15952 ;; This function is called by:
 15953 ;;		_efgtoa
 15954 ;; This function uses a reentrant model
 15955 ;;
 15956                           
 15957                           	psect	text58
 15958  016730                     __ptext58:
 15959                           	opt callstack 0
 15960  016730                     ___awdiv:
 15961                           	opt callstack 0
 15962                           
 15963                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15964  016730  52E6               	movf	postinc1,f,c
 15965  016732  52E6               	movf	postinc1,f,c
 15966  016734  52E6               	movf	postinc1,f,c
 15967  016736  52E6               	movf	postinc1,f,c
 15968                           
 15969                           ;stkvar	_sign @ sp[(-4)+2]
 15970                           
 15971                           ;incstack = 0
 15972  016738  0EFE               	movlw	-2
 15973  01673A  6AE3               	clrf	plusw1,c
 15974                           
 15975                           ;stkvar	_divisor @ sp[(-4)+-4]
 15976  01673C  0EF9               	movlw	-7
 15977  01673E  AEE3               	btfss	plusw1,7,c
 15978  016740  D009               	goto	l7150
 15979                           
 15980                           ;stkvar	_divisor @ sp[(-4)+-4]
 15981                           ;stkvar	_divisor @ sp[(-4)+-4]
 15982  016742  0EF8               	movlw	-8
 15983  016744  6CE3               	negf	plusw1,c
 15984  016746  0EF9               	movlw	-7
 15985  016748  1EE3               	comf	plusw1,f,c
 15986  01674A  B0D8               	btfsc	status,0,c
 15987  01674C  2AE3               	incf	plusw1,f,c
 15988                           
 15989                           ;stkvar	_sign @ sp[(-4)+2]
 15990  01674E  0EFE               	movlw	-2
 15991  016750  6AE3               	clrf	plusw1,c
 15992  016752  2AE3               	incf	plusw1,f,c
 15993  016754                     l7150:
 15994                           
 15995                           ;stkvar	_dividend @ sp[(-4)+-2]
 15996  016754  0EFB               	movlw	-5
 15997  016756  AEE3               	btfss	plusw1,7,c
 15998  016758  D008               	goto	l7156
 15999                           
 16000                           ;stkvar	_dividend @ sp[(-4)+-2]
 16001                           ;stkvar	_dividend @ sp[(-4)+-2]
 16002  01675A  0EFA               	movlw	-6
 16003  01675C  6CE3               	negf	plusw1,c
 16004  01675E  0EFB               	movlw	-5
 16005  016760  1EE3               	comf	plusw1,f,c
 16006  016762  B0D8               	btfsc	status,0,c
 16007  016764  2AE3               	incf	plusw1,f,c
 16008                           
 16009                           ;stkvar	_sign @ sp[(-4)+2]
 16010  016766  0EFE               	movlw	-2
 16011  016768  70E3               	btg	plusw1,0,c
 16012  01676A                     l7156:
 16013                           
 16014                           ;stkvar	_quotient @ sp[(-4)+0]
 16015  01676A  0EFC               	movlw	-4
 16016  01676C  6AE3               	clrf	plusw1,c
 16017  01676E  0EFD               	movlw	-3
 16018  016770  6AE3               	clrf	plusw1,c
 16019                           
 16020                           ;stkvar	_divisor @ sp[(-4)+-4]
 16021  016772  0EF8               	movlw	-8
 16022  016774  006F FF8C  F032    	movff	plusw1,btemp
 16023  01677A  0EF9               	movlw	-7
 16024  01677C  50E3               	movf	plusw1,w,c
 16025  01677E  1032               	iorwf	btemp^0,w,c
 16026  016780  B4D8               	btfsc	status,2,c
 16027  016782  D066               	goto	u6150
 16028                           
 16029                           ;stkvar	_counter @ sp[(-4)+3]
 16030  016784  0EFF               	movlw	-1
 16031  016786  6AE3               	clrf	plusw1,c
 16032  016788  D012               	goto	L16
 16033  01678A                     l7162:
 16034                           
 16035                           ;stkvar	_divisor @ sp[(-4)+-4]
 16036  01678A  0EF8               	movlw	-8
 16037  01678C  50E3               	movf	plusw1,w,c
 16038  01678E  90D8               	bcf	status,0,c
 16039  016790  34E8               	rlcf	wreg,w,c
 16040  016792  6E32               	movwf	btemp^0,c
 16041  016794  0EF8               	movlw	-8
 16042  016796  0060  F0CB  FFE3   	movff	btemp,plusw1
 16043  01679C  0EF9               	movlw	-7
 16044  01679E  50E3               	movf	plusw1,w,c
 16045  0167A0  34E8               	rlcf	wreg,w,c
 16046  0167A2  6E32               	movwf	btemp^0,c
 16047  0167A4  0EF9               	movlw	-7
 16048  0167A6  0060  F0CB  FFE3   	movff	btemp,plusw1
 16049                           
 16050                           ;stkvar	_counter @ sp[(-4)+3]
 16051  0167AC  0EFF               	movlw	-1
 16052  0167AE                     L16:
 16053  0167AE  2AE3               	incf	plusw1,f,c
 16054                           
 16055                           ;stkvar	_divisor @ sp[(-4)+-4]
 16056  0167B0  0EF9               	movlw	-7
 16057  0167B2  AEE3               	btfss	plusw1,7,c
 16058  0167B4  D7EA               	goto	l7162
 16059  0167B6                     u6130:
 16060                           
 16061                           ;stkvar	_quotient @ sp[(-4)+0]
 16062  0167B6  0EFC               	movlw	-4
 16063  0167B8  50E3               	movf	plusw1,w,c
 16064  0167BA  90D8               	bcf	status,0,c
 16065  0167BC  34E8               	rlcf	wreg,w,c
 16066  0167BE  6E32               	movwf	btemp^0,c
 16067  0167C0  0EFC               	movlw	-4
 16068  0167C2  0060  F0CB  FFE3   	movff	btemp,plusw1
 16069  0167C8  0EFD               	movlw	-3
 16070  0167CA  50E3               	movf	plusw1,w,c
 16071  0167CC  34E8               	rlcf	wreg,w,c
 16072  0167CE  6E32               	movwf	btemp^0,c
 16073  0167D0  0EFD               	movlw	-3
 16074  0167D2  0060  F0CB  FFE3   	movff	btemp,plusw1
 16075                           
 16076                           ;stkvar	_divisor @ sp[(-4)+-4]
 16077  0167D8  0EF8               	movlw	-8
 16078  0167DA  006F FF8C  F03C    	movff	plusw1,btemp+10
 16079  0167E0  0EF9               	movlw	-7
 16080  0167E2  006F FF8C  F03D    	movff	plusw1,btemp+11
 16081                           
 16082                           ;stkvar	_dividend @ sp[(-4)+-2]
 16083  0167E8  0EFA               	movlw	-6
 16084  0167EA  006F FF8C  F03A    	movff	plusw1,btemp+8
 16085  0167F0  0EFB               	movlw	-5
 16086  0167F2  006F FF8C  F03B    	movff	plusw1,btemp+9
 16087  0167F8  503C               	movf	(btemp+10)^0,w,c
 16088  0167FA  5C3A               	subwf	(btemp+8)^0,w,c
 16089  0167FC  503D               	movf	(btemp+11)^0,w,c
 16090  0167FE  583B               	subwfb	(btemp+9)^0,w,c
 16091  016800  A0D8               	btfss	status,0,c
 16092  016802  D016               	goto	l7176
 16093                           
 16094                           ;stkvar	_divisor @ sp[(-4)+-4]
 16095                           ;stkvar	_dividend @ sp[(-4)+-2]
 16096  016804  0EFA               	movlw	-6
 16097  016806  50E3               	movf	plusw1,w,c
 16098  016808  6E32               	movwf	btemp^0,c
 16099  01680A  0EF8               	movlw	-8
 16100  01680C  50E3               	movf	plusw1,w,c
 16101  01680E  5E32               	subwf	btemp^0,f,c
 16102  016810  0EFA               	movlw	-6
 16103  016812  0060  F0CB  FFE3   	movff	btemp,plusw1
 16104  016818  0EFB               	movlw	-5
 16105  01681A  50E3               	movf	plusw1,w,c
 16106  01681C  6E32               	movwf	btemp^0,c
 16107  01681E  0EF9               	movlw	-7
 16108  016820  50E3               	movf	plusw1,w,c
 16109  016822  5A32               	subwfb	btemp^0,f,c
 16110  016824  0EFB               	movlw	-5
 16111  016826  0060  F0CB  FFE3   	movff	btemp,plusw1
 16112                           
 16113                           ;stkvar	_quotient @ sp[(-4)+0]
 16114  01682C  0EFC               	movlw	-4
 16115  01682E  80E3               	bsf	plusw1,0,c
 16116  016830                     l7176:
 16117                           
 16118                           ;stkvar	_divisor @ sp[(-4)+-4]
 16119  016830  90D8               	bcf	status,0,c
 16120  016832  0EF9               	movlw	-7
 16121  016834  32E3               	rrcf	plusw1,f,c
 16122  016836  0EF8               	movlw	-8
 16123  016838  32E3               	rrcf	plusw1,f,c
 16124                           
 16125                           ;stkvar	_counter @ sp[(-4)+3]
 16126  01683A  0EFF               	movlw	-1
 16127  01683C  50E3               	movf	plusw1,w,c
 16128  01683E  6E32               	movwf	btemp^0,c
 16129  016840  0E01               	movlw	1
 16130  016842  5E32               	subwf	btemp^0,f,c
 16131  016844  0EFF               	movlw	-1
 16132  016846  0060  F0CB  FFE3   	movff	btemp,plusw1
 16133  01684C  A4D8               	btfss	status,2,c
 16134  01684E  D7B3               	goto	u6130
 16135  016850                     u6150:
 16136                           
 16137                           ;stkvar	_sign @ sp[(-4)+2]
 16138  016850  0EFE               	movlw	-2
 16139  016852  50E3               	movf	plusw1,w,c
 16140  016854  B4D8               	btfsc	status,2,c
 16141  016856  D006               	goto	l7184
 16142                           
 16143                           ;stkvar	_quotient @ sp[(-4)+0]
 16144                           ;stkvar	_quotient @ sp[(-4)+0]
 16145  016858  0EFC               	movlw	-4
 16146  01685A  6CE3               	negf	plusw1,c
 16147  01685C  0EFD               	movlw	-3
 16148  01685E  1EE3               	comf	plusw1,f,c
 16149  016860  B0D8               	btfsc	status,0,c
 16150  016862  2AE3               	incf	plusw1,f,c
 16151  016864                     l7184:
 16152                           
 16153                           ;stkvar	_quotient @ sp[(-4)+0]
 16154  016864  0EFC               	movlw	-4
 16155  016866  006F FF8C  F032    	movff	plusw1,btemp
 16156  01686C  0EFD               	movlw	-3
 16157  01686E  006F FF8C  F033    	movff	plusw1,btemp+1
 16158                           
 16159                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16160  016874  0EF8               	movlw	248
 16161  016876  26E1               	addwf	fsr1l,f,c
 16162  016878  0EFF               	movlw	255
 16163  01687A  22E2               	addwfc	fsr1h,f,c
 16164  01687C  0012               	return		;funcret
 16165  01687E                     __end_of___awdiv:
 16166                           	opt callstack 0
 16167                           
 16168 ;; *************** function _dtoa *****************
 16169 ;; Defined at:
 16170 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16173 ;;		 -> f(6), NULL(0), 
 16174 ;;  d               8  [STACK] long long 
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;  n               8  [STACK] long long 
 16177 ;;  i               2  [STACK] int 
 16178 ;;  s               2  [STACK] int 
 16179 ;;  w               2  [STACK] int 
 16180 ;;  p               2  [STACK] int 
 16181 ;; Return value:  Size  Location     Type
 16182 ;;                  2  [STACK] int 
 16183 ;; Registers used:
 16184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16185 ;; Tracked objects:
 16186 ;;		On entry : 0/5
 16187 ;;		On exit  : 0/0
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16194 ;;Total ram usage:        0 bytes
 16195 ;; Hardware stack levels used:    1
 16196 ;; Hardware stack levels required when called:   11
 16197 ;; This function calls:
 16198 ;;		___aodiv
 16199 ;;		___aomod
 16200 ;;		_abs
 16201 ;;		_pad
 16202 ;; This function is called by:
 16203 ;;		_vfpfcnvrt
 16204 ;; This function uses a reentrant model
 16205 ;;
 16206                           
 16207                           	psect	text59
 16208  013FCA                     __ptext59:
 16209                           	opt callstack 0
 16210  013FCA                     _dtoa:
 16211                           	opt callstack 0
 16212                           
 16213                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16214  013FCA  0E12               	movlw	18
 16215  013FCC  26E1               	addwf	fsr1l,f,c
 16216  013FCE  0E00               	movlw	0
 16217  013FD0  22E2               	addwfc	fsr1h,f,c
 16218                           
 16219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16220                           ;stkvar	_d @ sp[(-18)+-10]
 16221                           
 16222                           ;incstack = 0
 16223  013FD2  0EE4               	movlw	228
 16224  013FD4  24E1               	addwf	fsr1l,w,c
 16225  013FD6  6ED9               	movwf	fsr2l,c
 16226  013FD8  0EFF               	movlw	255
 16227  013FDA  20E2               	addwfc	fsr1h,w,c
 16228  013FDC  6EDA               	movwf	fsr2h,c
 16229                           
 16230                           ;stkvar	_n @ sp[(-18)+2]
 16231  013FDE  0E08               	movlw	8
 16232  013FE0  6E32               	movwf	btemp^0,c
 16233  013FE2  0EF0               	movlw	-16
 16234  013FE4                     us916999:
 16235  013FE4  006F FF7B FFE3     	movff	postinc2,plusw1
 16236  013FEA  28E8               	incf	wreg,w,c
 16237  013FEC  2E32               	decfsz	btemp^0,f,c
 16238  013FEE  D7FA               	bra	us916999
 16239                           
 16240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16241                           ;stkvar	_n @ sp[(-18)+2]
 16242  013FF0  0EF7               	movlw	-9
 16243  013FF2  AEE3               	btfss	plusw1,7,c
 16244  013FF4  D002               	goto	u9170
 16245  013FF6  0E01               	movlw	1
 16246  013FF8  D001               	goto	u9180
 16247  013FFA                     u9170:
 16248  013FFA  0E00               	movlw	0
 16249  013FFC                     u9180:
 16250  013FFC  6E3C               	movwf	(btemp+10)^0,c
 16251  013FFE  6A3D               	clrf	(btemp+11)^0,c
 16252                           
 16253                           ;stkvar	_s @ sp[(-18)+12]
 16254  014000  0EFA               	movlw	-6
 16255  014002  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16256  014008  0EFB               	movlw	-5
 16257  01400A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16258                           
 16259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16260                           ;stkvar	_s @ sp[(-18)+12]
 16261  014010  0EFA               	movlw	-6
 16262  014012  006F FF8C  F032    	movff	plusw1,btemp
 16263  014018  0EFB               	movlw	-5
 16264  01401A  50E3               	movf	plusw1,w,c
 16265  01401C  1032               	iorwf	btemp^0,w,c
 16266  01401E  B4D8               	btfsc	status,2,c
 16267  014020  D025               	goto	u9200
 16268                           
 16269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16270                           ;stkvar	_n @ sp[(-18)+2]
 16271                           ;stkvar	_n @ sp[(-18)+2]
 16272  014022  0EF0               	movlw	-16
 16273  014024  6CE3               	negf	plusw1,c
 16274  014026  0EF1               	movlw	-15
 16275  014028  1EE3               	comf	plusw1,f,c
 16276  01402A  0EF2               	movlw	-14
 16277  01402C  1EE3               	comf	plusw1,f,c
 16278  01402E  0EF3               	movlw	-13
 16279  014030  1EE3               	comf	plusw1,f,c
 16280  014032  0EF4               	movlw	-12
 16281  014034  1EE3               	comf	plusw1,f,c
 16282  014036  0EF5               	movlw	-11
 16283  014038  1EE3               	comf	plusw1,f,c
 16284  01403A  0EF6               	movlw	-10
 16285  01403C  1EE3               	comf	plusw1,f,c
 16286  01403E  0EF7               	movlw	-9
 16287  014040  1EE3               	comf	plusw1,f,c
 16288  014042  E314               	bnc	u9200
 16289  014044  0EF1               	movlw	-15
 16290  014046  2AE3               	incf	plusw1,f,c
 16291  014048  E311               	bnc	u9200
 16292  01404A  0EF2               	movlw	-14
 16293  01404C  2AE3               	incf	plusw1,f,c
 16294  01404E  E30E               	bnc	u9200
 16295  014050  0EF3               	movlw	-13
 16296  014052  2AE3               	incf	plusw1,f,c
 16297  014054  E30B               	bnc	u9200
 16298  014056  0EF4               	movlw	-12
 16299  014058  2AE3               	incf	plusw1,f,c
 16300  01405A  E308               	bnc	u9200
 16301  01405C  0EF5               	movlw	-11
 16302  01405E  2AE3               	incf	plusw1,f,c
 16303  014060  E305               	bnc	u9200
 16304  014062  0EF6               	movlw	-10
 16305  014064  2AE3               	incf	plusw1,f,c
 16306  014066  E302               	bnc	u9200
 16307  014068  0EF7               	movlw	-9
 16308  01406A  2AE3               	incf	plusw1,f,c
 16309  01406C                     u9200:
 16310                           
 16311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16312  01406C  AE1E               	btfss	(_prec+1)^0,7,c
 16313                           
 16314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16315  01406E  921F               	bcf	_flags^0,1,c
 16316                           
 16317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16318  014070  BE1E               	btfsc	(_prec+1)^0,7,c
 16319  014072  D005               	goto	u9220
 16320  014074  501E               	movf	(_prec+1)^0,w,c
 16321  014076  E110               	bnz	l9798
 16322  014078  041D               	decf	_prec^0,w,c
 16323  01407A  B0D8               	btfsc	status,0,c
 16324  01407C  D00D               	goto	l9798
 16325  01407E                     u9220:
 16326  01407E  0E01               	movlw	1
 16327  014080  6E3C               	movwf	(btemp+10)^0,c
 16328  014082  0E00               	movlw	0
 16329  014084  6E3D               	movwf	(btemp+11)^0,c
 16330                           
 16331                           ;stkvar	_p @ sp[(-18)+16]
 16332  014086  0EFE               	movlw	-2
 16333  014088  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16334  01408E  0EFF               	movlw	-1
 16335  014090  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16336  014096  D008               	goto	l1885
 16337  014098                     l9798:
 16338                           
 16339                           ;stkvar	_p @ sp[(-18)+16]
 16340  014098  0EFE               	movlw	-2
 16341  01409A  0060  F077  FFE3   	movff	_prec,plusw1
 16342  0140A0  0EFF               	movlw	-1
 16343  0140A2  0060  F07B  FFE3   	movff	_prec+1,plusw1
 16344  0140A8                     l1885:
 16345                           
 16346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16347                           ;stkvar	_w @ sp[(-18)+14]
 16348  0140A8  0EFC               	movlw	-4
 16349  0140AA  0060  F06F  FFE3   	movff	_width,plusw1
 16350  0140B0  0EFD               	movlw	-3
 16351  0140B2  0060  F073  FFE3   	movff	_width+1,plusw1
 16352                           
 16353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16354                           ;stkvar	_s @ sp[(-18)+12]
 16355  0140B8  0EFA               	movlw	-6
 16356  0140BA  006F FF8C  F032    	movff	plusw1,btemp
 16357  0140C0  0EFB               	movlw	-5
 16358  0140C2  50E3               	movf	plusw1,w,c
 16359  0140C4  1032               	iorwf	btemp^0,w,c
 16360  0140C6  A4D8               	btfss	status,2,c
 16361  0140C8  D002               	goto	u9240
 16362  0140CA  A41F               	btfss	_flags^0,2,c
 16363  0140CC  D00A               	goto	l9806
 16364  0140CE                     u9240:
 16365                           
 16366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16367                           ;stkvar	_w @ sp[(-18)+14]
 16368  0140CE  50E1               	movf	fsr1l,w,c
 16369  0140D0  0FFC               	addlw	-4
 16370  0140D2  6ED9               	movwf	fsr2l,c
 16371  0140D4  50E2               	movf	fsr1h,w,c
 16372  0140D6  6EDA               	movwf	fsr2h,c
 16373  0140D8  0EFF               	movlw	255
 16374  0140DA  22DA               	addwfc	fsr2h,f,c
 16375  0140DC  06DE               	decf	postinc2,f,c
 16376  0140DE  0E00               	movlw	0
 16377  0140E0  5ADD               	subwfb	postdec2,f,c
 16378  0140E2                     l9806:
 16379                           
 16380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16381  0140E2  0E4F               	movlw	79
 16382  0140E4  6E3C               	movwf	(btemp+10)^0,c
 16383  0140E6  0E00               	movlw	0
 16384  0140E8  6E3D               	movwf	(btemp+11)^0,c
 16385                           
 16386                           ;stkvar	_i @ sp[(-18)+10]
 16387  0140EA  0EF8               	movlw	-8
 16388  0140EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16389  0140F2  0EF9               	movlw	-7
 16390  0140F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16391                           
 16392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16393  0140FA  0101               	movlb	1	; () banked
 16394  0140FC  6BCB               	clrf	(_dbuf+79)& (0+255),b
 16395                           
 16396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16397  0140FE  D109               	goto	l9820
 16398  014100                     l9810:
 16399                           
 16400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16401                           ;stkvar	_i @ sp[(-18)+10]
 16402  014100  50E1               	movf	fsr1l,w,c
 16403  014102  0FF8               	addlw	-8
 16404  014104  6ED9               	movwf	fsr2l,c
 16405  014106  50E2               	movf	fsr1h,w,c
 16406  014108  6EDA               	movwf	fsr2h,c
 16407  01410A  0EFF               	movlw	255
 16408  01410C  22DA               	addwfc	fsr2h,f,c
 16409  01410E  06DE               	decf	postinc2,f,c
 16410  014110  0E00               	movlw	0
 16411  014112  5ADD               	subwfb	postdec2,f,c
 16412                           
 16413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16414  014114  0E0A               	movlw	10
 16415  014116  6EE6               	movwf	postinc1,c
 16416  014118  0E00               	movlw	0
 16417  01411A  6EE6               	movwf	postinc1,c
 16418  01411C  0E00               	movlw	0
 16419  01411E  6EE6               	movwf	postinc1,c
 16420  014120  0E00               	movlw	0
 16421  014122  6EE6               	movwf	postinc1,c
 16422  014124  0E00               	movlw	0
 16423  014126  6EE6               	movwf	postinc1,c
 16424  014128  0E00               	movlw	0
 16425  01412A  6EE6               	movwf	postinc1,c
 16426  01412C  0E00               	movlw	0
 16427  01412E  6EE6               	movwf	postinc1,c
 16428  014130  0E00               	movlw	0
 16429  014132  6EE6               	movwf	postinc1,c
 16430                           
 16431                           ;stkvar	_n @ sp[(-26)+2]
 16432  014134  50E1               	movf	fsr1l,w,c
 16433  014136  0FE8               	addlw	-24
 16434  014138  6ED9               	movwf	fsr2l,c
 16435  01413A  50E2               	movf	fsr1h,w,c
 16436  01413C  6EDA               	movwf	fsr2h,c
 16437  01413E  0EFF               	movlw	255
 16438  014140  22DA               	addwfc	fsr2h,f,c
 16439  014142  006F FF7B FFE6     	movff	postinc2,postinc1
 16440  014148  006F FF7B FFE6     	movff	postinc2,postinc1
 16441  01414E  006F FF7B FFE6     	movff	postinc2,postinc1
 16442  014154  006F FF7B FFE6     	movff	postinc2,postinc1
 16443  01415A  006F FF7B FFE6     	movff	postinc2,postinc1
 16444  014160  006F FF7B FFE6     	movff	postinc2,postinc1
 16445  014166  006F FF7B FFE6     	movff	postinc2,postinc1
 16446  01416C  006F FF7B FFE6     	movff	postinc2,postinc1
 16447  014172  EC69  F0AC         	call	___aomod	;wreg free
 16448  014176  52E5               	movf	postdec1,f,c
 16449  014178  006F FF9C  F049    	movff	indf1,btemp+23
 16450  01417E  52E5               	movf	postdec1,f,c
 16451  014180  006F FF9C  F048    	movff	indf1,btemp+22
 16452  014186  52E5               	movf	postdec1,f,c
 16453  014188  006F FF9C  F047    	movff	indf1,btemp+21
 16454  01418E  52E5               	movf	postdec1,f,c
 16455  014190  006F FF9C  F046    	movff	indf1,btemp+20
 16456  014196  52E5               	movf	postdec1,f,c
 16457  014198  006F FF9C  F045    	movff	indf1,btemp+19
 16458  01419E  52E5               	movf	postdec1,f,c
 16459  0141A0  006F FF9C  F044    	movff	indf1,btemp+18
 16460  0141A6  52E5               	movf	postdec1,f,c
 16461  0141A8  006F FF9C  F043    	movff	indf1,btemp+17
 16462  0141AE  52E5               	movf	postdec1,f,c
 16463  0141B0  006F FF9C  F042    	movff	indf1,btemp+16
 16464  0141B6  0EF8               	movlw	248
 16465  0141B8  26E1               	addwf	fsr1l,f,c
 16466  0141BA  0EFF               	movlw	255
 16467  0141BC  22E2               	addwfc	fsr1h,f,c
 16468  0141BE  0060  F108  F03C   	movff	btemp+16,btemp+10
 16469  0141C4  0060  F10C  F03D   	movff	btemp+17,btemp+11
 16470  0141CA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16471  0141D0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16472  0141D6  EC62  F0C1         	call	_abs	;wreg free
 16473  0141DA  0E30               	movlw	48
 16474  0141DC  2632               	addwf	btemp^0,f,c
 16475                           
 16476                           ;stkvar	_i @ sp[(-18)+10]
 16477  0141DE  0EF8               	movlw	-8
 16478  0141E0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16479  0141E6  0EF9               	movlw	-7
 16480  0141E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16481  0141EE  0E7C               	movlw	low _dbuf
 16482  0141F0  243C               	addwf	(btemp+10)^0,w,c
 16483  0141F2  6ED9               	movwf	fsr2l,c
 16484  0141F4  0E01               	movlw	high _dbuf
 16485  0141F6  203D               	addwfc	(btemp+11)^0,w,c
 16486  0141F8  6EDA               	movwf	fsr2h,c
 16487  0141FA  0060  F0CB  FFDF   	movff	btemp,indf2
 16488                           
 16489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16490                           ;stkvar	_p @ sp[(-18)+16]
 16491  014200  50E1               	movf	fsr1l,w,c
 16492  014202  0FFE               	addlw	-2
 16493  014204  6ED9               	movwf	fsr2l,c
 16494  014206  50E2               	movf	fsr1h,w,c
 16495  014208  6EDA               	movwf	fsr2h,c
 16496  01420A  0EFF               	movlw	255
 16497  01420C  22DA               	addwfc	fsr2h,f,c
 16498  01420E  06DE               	decf	postinc2,f,c
 16499  014210  0E00               	movlw	0
 16500  014212  5ADD               	subwfb	postdec2,f,c
 16501                           
 16502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16503                           ;stkvar	_w @ sp[(-18)+14]
 16504  014214  50E1               	movf	fsr1l,w,c
 16505  014216  0FFC               	addlw	-4
 16506  014218  6ED9               	movwf	fsr2l,c
 16507  01421A  50E2               	movf	fsr1h,w,c
 16508  01421C  6EDA               	movwf	fsr2h,c
 16509  01421E  0EFF               	movlw	255
 16510  014220  22DA               	addwfc	fsr2h,f,c
 16511  014222  06DE               	decf	postinc2,f,c
 16512  014224  0E00               	movlw	0
 16513  014226  5ADD               	subwfb	postdec2,f,c
 16514                           
 16515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16516  014228  0E0A               	movlw	10
 16517  01422A  6EE6               	movwf	postinc1,c
 16518  01422C  0E00               	movlw	0
 16519  01422E  6EE6               	movwf	postinc1,c
 16520  014230  0E00               	movlw	0
 16521  014232  6EE6               	movwf	postinc1,c
 16522  014234  0E00               	movlw	0
 16523  014236  6EE6               	movwf	postinc1,c
 16524  014238  0E00               	movlw	0
 16525  01423A  6EE6               	movwf	postinc1,c
 16526  01423C  0E00               	movlw	0
 16527  01423E  6EE6               	movwf	postinc1,c
 16528  014240  0E00               	movlw	0
 16529  014242  6EE6               	movwf	postinc1,c
 16530  014244  0E00               	movlw	0
 16531  014246  6EE6               	movwf	postinc1,c
 16532                           
 16533                           ;stkvar	_n @ sp[(-26)+2]
 16534  014248  50E1               	movf	fsr1l,w,c
 16535  01424A  0FE8               	addlw	-24
 16536  01424C  6ED9               	movwf	fsr2l,c
 16537  01424E  50E2               	movf	fsr1h,w,c
 16538  014250  6EDA               	movwf	fsr2h,c
 16539  014252  0EFF               	movlw	255
 16540  014254  22DA               	addwfc	fsr2h,f,c
 16541  014256  006F FF7B FFE6     	movff	postinc2,postinc1
 16542  01425C  006F FF7B FFE6     	movff	postinc2,postinc1
 16543  014262  006F FF7B FFE6     	movff	postinc2,postinc1
 16544  014268  006F FF7B FFE6     	movff	postinc2,postinc1
 16545  01426E  006F FF7B FFE6     	movff	postinc2,postinc1
 16546  014274  006F FF7B FFE6     	movff	postinc2,postinc1
 16547  01427A  006F FF7B FFE6     	movff	postinc2,postinc1
 16548  014280  006F FF7B FFE6     	movff	postinc2,postinc1
 16549  014286  ECEF  F0A9         	call	___aodiv	;wreg free
 16550  01428A  52E5               	movf	postdec1,f,c
 16551  01428C  006F FF9C  F049    	movff	indf1,btemp+23
 16552  014292  52E5               	movf	postdec1,f,c
 16553  014294  006F FF9C  F048    	movff	indf1,btemp+22
 16554  01429A  52E5               	movf	postdec1,f,c
 16555  01429C  006F FF9C  F047    	movff	indf1,btemp+21
 16556  0142A2  52E5               	movf	postdec1,f,c
 16557  0142A4  006F FF9C  F046    	movff	indf1,btemp+20
 16558  0142AA  52E5               	movf	postdec1,f,c
 16559  0142AC  006F FF9C  F045    	movff	indf1,btemp+19
 16560  0142B2  52E5               	movf	postdec1,f,c
 16561  0142B4  006F FF9C  F044    	movff	indf1,btemp+18
 16562  0142BA  52E5               	movf	postdec1,f,c
 16563  0142BC  006F FF9C  F043    	movff	indf1,btemp+17
 16564  0142C2  52E5               	movf	postdec1,f,c
 16565  0142C4  006F FF9C  F042    	movff	indf1,btemp+16
 16566  0142CA  0EF8               	movlw	248
 16567  0142CC  26E1               	addwf	fsr1l,f,c
 16568  0142CE  0EFF               	movlw	255
 16569  0142D0  22E2               	addwfc	fsr1h,f,c
 16570                           
 16571                           ;stkvar	_n @ sp[(-18)+2]
 16572  0142D2  0EF0               	movlw	-16
 16573  0142D4  0060  F10B  FFE3   	movff	btemp+16,plusw1
 16574  0142DA  0EF1               	movlw	-15
 16575  0142DC  0060  F10F  FFE3   	movff	btemp+17,plusw1
 16576  0142E2  0EF2               	movlw	-14
 16577  0142E4  0060  F113  FFE3   	movff	btemp+18,plusw1
 16578  0142EA  0EF3               	movlw	-13
 16579  0142EC  0060  F117  FFE3   	movff	btemp+19,plusw1
 16580  0142F2  0EF4               	movlw	-12
 16581  0142F4  0060  F11B  FFE3   	movff	btemp+20,plusw1
 16582  0142FA  0EF5               	movlw	-11
 16583  0142FC  0060  F11F  FFE3   	movff	btemp+21,plusw1
 16584  014302  0EF6               	movlw	-10
 16585  014304  0060  F123  FFE3   	movff	btemp+22,plusw1
 16586  01430A  0EF7               	movlw	-9
 16587  01430C  0060  F127  FFE3   	movff	btemp+23,plusw1
 16588  014312                     l9820:
 16589                           
 16590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16591                           ;stkvar	_i @ sp[(-18)+10]
 16592  014312  0EF9               	movlw	-7
 16593  014314  BEE3               	btfsc	plusw1,7,c
 16594  014316  D036               	goto	u9290
 16595  014318  0EF9               	movlw	-7
 16596  01431A  50E3               	movf	plusw1,w,c
 16597  01431C  E104               	bnz	u9250
 16598  01431E  0EF8               	movlw	-8
 16599  014320  04E3               	decf	plusw1,w,c
 16600  014322  A0D8               	btfss	status,0,c
 16601  014324  D02F               	goto	u9290
 16602  014326                     u9250:
 16603                           
 16604                           ;stkvar	_n @ sp[(-18)+2]
 16605  014326  0EF0               	movlw	-16
 16606  014328  50E3               	movf	plusw1,w,c
 16607  01432A  E115               	bnz	u9261
 16608  01432C  0EF1               	movlw	-15
 16609  01432E  50E3               	movf	plusw1,w,c
 16610  014330  E112               	bnz	u9261
 16611  014332  0EF2               	movlw	-14
 16612  014334  50E3               	movf	plusw1,w,c
 16613  014336  E10F               	bnz	u9261
 16614  014338  0EF3               	movlw	-13
 16615  01433A  50E3               	movf	plusw1,w,c
 16616  01433C  E10C               	bnz	u9261
 16617  01433E  0EF4               	movlw	-12
 16618  014340  50E3               	movf	plusw1,w,c
 16619  014342  E109               	bnz	u9261
 16620  014344  0EF5               	movlw	-11
 16621  014346  50E3               	movf	plusw1,w,c
 16622  014348  E106               	bnz	u9261
 16623  01434A  0EF6               	movlw	-10
 16624  01434C  50E3               	movf	plusw1,w,c
 16625  01434E  E103               	bnz	u9261
 16626  014350  0EF7               	movlw	-9
 16627  014352  50E3               	movf	plusw1,w,c
 16628  014354  A4D8               	btfss	status,2,c
 16629  014356                     u9261:
 16630  014356  D6D4               	goto	l9810
 16631                           
 16632                           ;stkvar	_p @ sp[(-18)+16]
 16633  014358  0EFF               	movlw	-1
 16634  01435A  BEE3               	btfsc	plusw1,7,c
 16635  01435C  D007               	goto	u9270
 16636  01435E  0EFF               	movlw	-1
 16637  014360  50E3               	movf	plusw1,w,c
 16638  014362  E103               	bnz	u9271
 16639  014364  0EFE               	movlw	-2
 16640  014366  04E3               	decf	plusw1,w,c
 16641  014368  B0D8               	btfsc	status,0,c
 16642  01436A                     u9271:
 16643  01436A  D6CA               	goto	l9810
 16644  01436C                     u9270:
 16645                           
 16646                           ;stkvar	_w @ sp[(-18)+14]
 16647  01436C  0EFD               	movlw	-3
 16648  01436E  BEE3               	btfsc	plusw1,7,c
 16649  014370  D009               	goto	u9290
 16650  014372  0EFD               	movlw	-3
 16651  014374  50E3               	movf	plusw1,w,c
 16652  014376  E104               	bnz	u9280
 16653  014378  0EFC               	movlw	-4
 16654  01437A  04E3               	decf	plusw1,w,c
 16655  01437C  A0D8               	btfss	status,0,c
 16656  01437E  D002               	goto	u9290
 16657  014380                     u9280:
 16658  014380  B21F               	btfsc	_flags^0,1,c
 16659  014382  D6BE               	goto	l9810
 16660  014384                     u9290:
 16661                           
 16662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16663                           ;stkvar	_s @ sp[(-18)+12]
 16664  014384  0EFA               	movlw	-6
 16665  014386  006F FF8C  F032    	movff	plusw1,btemp
 16666  01438C  0EFB               	movlw	-5
 16667  01438E  50E3               	movf	plusw1,w,c
 16668  014390  1032               	iorwf	btemp^0,w,c
 16669  014392  A4D8               	btfss	status,2,c
 16670  014394  D002               	goto	u9310
 16671  014396  A41F               	btfss	_flags^0,2,c
 16672  014398  D033               	goto	l9844
 16673  01439A                     u9310:
 16674                           
 16675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16676                           ;stkvar	_i @ sp[(-18)+10]
 16677  01439A  50E1               	movf	fsr1l,w,c
 16678  01439C  0FF8               	addlw	-8
 16679  01439E  6ED9               	movwf	fsr2l,c
 16680  0143A0  50E2               	movf	fsr1h,w,c
 16681  0143A2  6EDA               	movwf	fsr2h,c
 16682  0143A4  0EFF               	movlw	255
 16683  0143A6  22DA               	addwfc	fsr2h,f,c
 16684  0143A8  06DE               	decf	postinc2,f,c
 16685  0143AA  0E00               	movlw	0
 16686  0143AC  5ADD               	subwfb	postdec2,f,c
 16687                           
 16688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16689                           ;stkvar	_s @ sp[(-18)+12]
 16690  0143AE  0EFA               	movlw	-6
 16691  0143B0  006F FF8C  F032    	movff	plusw1,btemp
 16692  0143B6  0EFB               	movlw	-5
 16693  0143B8  50E3               	movf	plusw1,w,c
 16694  0143BA  1032               	iorwf	btemp^0,w,c
 16695  0143BC  A4D8               	btfss	status,2,c
 16696  0143BE  D002               	goto	l9840
 16697  0143C0  0E2B               	movlw	43
 16698  0143C2  D001               	goto	L17
 16699  0143C4                     l9840:
 16700  0143C4  0E2D               	movlw	45
 16701  0143C6                     L17:
 16702  0143C6  6E3C               	movwf	(btemp+10)^0,c
 16703  0143C8  0E00               	movlw	0
 16704  0143CA  6E3D               	movwf	(btemp+11)^0,c
 16705                           
 16706                           ;stkvar	_dtoa$4579 @ sp[(-18)+0]
 16707  0143CC  0EEE               	movlw	-18
 16708  0143CE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16709  0143D4  0EEF               	movlw	-17
 16710  0143D6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16711                           
 16712                           ;stkvar	_dtoa$4579 @ sp[(-18)+0]
 16713                           ;stkvar	_i @ sp[(-18)+10]
 16714  0143DC  0EF8               	movlw	-8
 16715  0143DE  006F FF8C  F03C    	movff	plusw1,btemp+10
 16716  0143E4  0EF9               	movlw	-7
 16717  0143E6  006F FF8C  F03D    	movff	plusw1,btemp+11
 16718  0143EC  0E7C               	movlw	low _dbuf
 16719  0143EE  243C               	addwf	(btemp+10)^0,w,c
 16720  0143F0  6ED9               	movwf	fsr2l,c
 16721  0143F2  0E01               	movlw	high _dbuf
 16722  0143F4  203D               	addwfc	(btemp+11)^0,w,c
 16723  0143F6  6EDA               	movwf	fsr2h,c
 16724  0143F8  0EEE               	movlw	-18
 16725  0143FA  006F FF8F FFDF     	movff	plusw1,indf2
 16726  014400                     l9844:
 16727                           
 16728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16729                           ;stkvar	_w @ sp[(-18)+14]
 16730  014400  0EFC               	movlw	-4
 16731  014402  006F FF8F FFE6     	movff	plusw1,postinc1
 16732  014408  006F FF8F FFE6     	movff	plusw1,postinc1
 16733                           
 16734                           ;stkvar	_i @ sp[(-20)+10]
 16735  01440E  0E7C               	movlw	low _dbuf
 16736  014410  6E3C               	movwf	(btemp+10)^0,c
 16737  014412  0E01               	movlw	high _dbuf
 16738  014414  6E3D               	movwf	(btemp+11)^0,c
 16739  014416  0EF6               	movlw	-10
 16740  014418  50E3               	movf	plusw1,w,c
 16741  01441A  263C               	addwf	(btemp+10)^0,f,c
 16742  01441C  0EF7               	movlw	-9
 16743  01441E  50E3               	movf	plusw1,w,c
 16744  014420  223D               	addwfc	(btemp+11)^0,f,c
 16745  014422  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16746  014428  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16747                           
 16748                           ;stkvar	_fp @ sp[(-22)+-2]
 16749  01442E  0EE8               	movlw	-24
 16750  014430  006F FF8F FFE6     	movff	plusw1,postinc1
 16751  014436  006F FF8F FFE6     	movff	plusw1,postinc1
 16752  01443C  EC98  F0B6         	call	_pad	;wreg free
 16753                           
 16754                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16755  014440  0EE4               	movlw	228
 16756  014442  26E1               	addwf	fsr1l,f,c
 16757  014444  0EFF               	movlw	255
 16758  014446  22E2               	addwfc	fsr1h,f,c
 16759  014448  0012               	return		;funcret
 16760  01444A                     __end_of_dtoa:
 16761                           	opt callstack 0
 16762                           
 16763 ;; *************** function _abs *****************
 16764 ;; Defined at:
 16765 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;  a               2  [STACK] int 
 16768 ;; Auto vars:     Size  Location     Type
 16769 ;;		None
 16770 ;; Return value:  Size  Location     Type
 16771 ;;                  2  [STACK] int 
 16772 ;; Registers used:
 16773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16774 ;; Tracked objects:
 16775 ;;		On entry : 0/1
 16776 ;;		On exit  : 0/0
 16777 ;;		Unchanged: 0/0
 16778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16783 ;;Total ram usage:        0 bytes
 16784 ;; Hardware stack levels used:    1
 16785 ;; Hardware stack levels required when called:    6
 16786 ;; This function calls:
 16787 ;;		Nothing
 16788 ;; This function is called by:
 16789 ;;		_dtoa
 16790 ;; This function uses a reentrant model
 16791 ;;
 16792                           
 16793                           	psect	text60
 16794  0182C4                     __ptext60:
 16795                           	opt callstack 0
 16796  0182C4                     _abs:
 16797                           	opt callstack 17
 16798                           
 16799                           ;stkvar	_a @ sp[(0)+-2]
 16800                           
 16801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16802                           ;incstack = 0
 16803  0182C4  0EFF               	movlw	-1
 16804  0182C6  BEE3               	btfsc	plusw1,7,c
 16805  0182C8  D007               	goto	u5110
 16806  0182CA  0EFF               	movlw	-1
 16807  0182CC  50E3               	movf	plusw1,w,c
 16808  0182CE  E112               	bnz	l6638
 16809  0182D0  0EFE               	movlw	-2
 16810  0182D2  04E3               	decf	plusw1,w,c
 16811  0182D4  B0D8               	btfsc	status,0,c
 16812  0182D6  D00E               	goto	l6638
 16813  0182D8                     u5110:
 16814                           
 16815                           ;stkvar	_a @ sp[(0)+-2]
 16816  0182D8  0EFE               	movlw	-2
 16817  0182DA  006F FF8C  F032    	movff	plusw1,btemp
 16818  0182E0  1E32               	comf	btemp^0,f,c
 16819  0182E2  0EFF               	movlw	-1
 16820  0182E4  006F FF8C  F033    	movff	plusw1,btemp+1
 16821  0182EA  1E33               	comf	(btemp+1)^0,f,c
 16822  0182EC  2A32               	incf	btemp^0,f,c
 16823  0182EE  B4D8               	btfsc	status,2,c
 16824  0182F0  2A33               	incf	(btemp+1)^0,f,c
 16825  0182F2  D008               	goto	l2788
 16826  0182F4                     l6638:
 16827                           
 16828                           ;stkvar	_a @ sp[(0)+-2]
 16829  0182F4  0EFE               	movlw	-2
 16830  0182F6  006F FF8C  F032    	movff	plusw1,btemp
 16831  0182FC  0EFF               	movlw	-1
 16832  0182FE  006F FF8C  F033    	movff	plusw1,btemp+1
 16833  018304                     l2788:
 16834                           
 16835                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 16836  018304  52E5               	movf	postdec1,f,c
 16837  018306  52E5               	movf	postdec1,f,c
 16838  018308  0012               	return		;funcret
 16839  01830A                     __end_of_abs:
 16840                           	opt callstack 0
 16841                           
 16842 ;; *************** function ___aomod *****************
 16843 ;; Defined at:
 16844 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 16845 ;; Parameters:    Size  Location     Type
 16846 ;;  dividend        8  [STACK] long long 
 16847 ;;  divisor         8  [STACK] long long 
 16848 ;; Auto vars:     Size  Location     Type
 16849 ;;  sign            1  [STACK] unsigned char 
 16850 ;;  counter         1  [STACK] unsigned char 
 16851 ;; Return value:  Size  Location     Type
 16852 ;;                  8  [STACK] long long 
 16853 ;; Registers used:
 16854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16855 ;; Tracked objects:
 16856 ;;		On entry : 0/1
 16857 ;;		On exit  : 0/0
 16858 ;;		Unchanged: 0/0
 16859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16864 ;;Total ram usage:        0 bytes
 16865 ;; Hardware stack levels used:    1
 16866 ;; Hardware stack levels required when called:    6
 16867 ;; This function calls:
 16868 ;;		Nothing
 16869 ;; This function is called by:
 16870 ;;		_dtoa
 16871 ;; This function uses a reentrant model
 16872 ;;
 16873                           
 16874                           	psect	text61
 16875  0158D2                     __ptext61:
 16876                           	opt callstack 0
 16877  0158D2                     ___aomod:
 16878                           	opt callstack 0
 16879                           
 16880                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16881  0158D2  52E6               	movf	postinc1,f,c
 16882  0158D4  52E6               	movf	postinc1,f,c
 16883                           
 16884                           ;stkvar	_sign @ sp[(-2)+0]
 16885                           
 16886                           ;incstack = 0
 16887  0158D6  0EFE               	movlw	-2
 16888  0158D8  6AE3               	clrf	plusw1,c
 16889                           
 16890                           ;stkvar	_dividend @ sp[(-2)+-8]
 16891  0158DA  0EFD               	movlw	-3
 16892  0158DC  AEE3               	btfss	plusw1,7,c
 16893  0158DE  D028               	goto	l6796
 16894                           
 16895                           ;stkvar	_dividend @ sp[(-2)+-8]
 16896                           ;stkvar	_dividend @ sp[(-2)+-8]
 16897  0158E0  0EF6               	movlw	-10
 16898  0158E2  6CE3               	negf	plusw1,c
 16899  0158E4  0EF7               	movlw	-9
 16900  0158E6  1EE3               	comf	plusw1,f,c
 16901  0158E8  0EF8               	movlw	-8
 16902  0158EA  1EE3               	comf	plusw1,f,c
 16903  0158EC  0EF9               	movlw	-7
 16904  0158EE  1EE3               	comf	plusw1,f,c
 16905  0158F0  0EFA               	movlw	-6
 16906  0158F2  1EE3               	comf	plusw1,f,c
 16907  0158F4  0EFB               	movlw	-5
 16908  0158F6  1EE3               	comf	plusw1,f,c
 16909  0158F8  0EFC               	movlw	-4
 16910  0158FA  1EE3               	comf	plusw1,f,c
 16911  0158FC  0EFD               	movlw	-3
 16912  0158FE  1EE3               	comf	plusw1,f,c
 16913  015900  E314               	bnc	u5540
 16914  015902  0EF7               	movlw	-9
 16915  015904  2AE3               	incf	plusw1,f,c
 16916  015906  E311               	bnc	u5540
 16917  015908  0EF8               	movlw	-8
 16918  01590A  2AE3               	incf	plusw1,f,c
 16919  01590C  E30E               	bnc	u5540
 16920  01590E  0EF9               	movlw	-7
 16921  015910  2AE3               	incf	plusw1,f,c
 16922  015912  E30B               	bnc	u5540
 16923  015914  0EFA               	movlw	-6
 16924  015916  2AE3               	incf	plusw1,f,c
 16925  015918  E308               	bnc	u5540
 16926  01591A  0EFB               	movlw	-5
 16927  01591C  2AE3               	incf	plusw1,f,c
 16928  01591E  E305               	bnc	u5540
 16929  015920  0EFC               	movlw	-4
 16930  015922  2AE3               	incf	plusw1,f,c
 16931  015924  E302               	bnc	u5540
 16932  015926  0EFD               	movlw	-3
 16933  015928  2AE3               	incf	plusw1,f,c
 16934  01592A                     u5540:
 16935                           
 16936                           ;stkvar	_sign @ sp[(-2)+0]
 16937  01592A  0EFE               	movlw	-2
 16938  01592C  6AE3               	clrf	plusw1,c
 16939  01592E  2AE3               	incf	plusw1,f,c
 16940  015930                     l6796:
 16941                           
 16942                           ;stkvar	_divisor @ sp[(-2)+-16]
 16943  015930  0EF5               	movlw	-11
 16944  015932  AEE3               	btfss	plusw1,7,c
 16945  015934  D025               	goto	u5560
 16946                           
 16947                           ;stkvar	_divisor @ sp[(-2)+-16]
 16948                           ;stkvar	_divisor @ sp[(-2)+-16]
 16949  015936  0EEE               	movlw	-18
 16950  015938  6CE3               	negf	plusw1,c
 16951  01593A  0EEF               	movlw	-17
 16952  01593C  1EE3               	comf	plusw1,f,c
 16953  01593E  0EF0               	movlw	-16
 16954  015940  1EE3               	comf	plusw1,f,c
 16955  015942  0EF1               	movlw	-15
 16956  015944  1EE3               	comf	plusw1,f,c
 16957  015946  0EF2               	movlw	-14
 16958  015948  1EE3               	comf	plusw1,f,c
 16959  01594A  0EF3               	movlw	-13
 16960  01594C  1EE3               	comf	plusw1,f,c
 16961  01594E  0EF4               	movlw	-12
 16962  015950  1EE3               	comf	plusw1,f,c
 16963  015952  0EF5               	movlw	-11
 16964  015954  1EE3               	comf	plusw1,f,c
 16965  015956  E314               	bnc	u5560
 16966  015958  0EEF               	movlw	-17
 16967  01595A  2AE3               	incf	plusw1,f,c
 16968  01595C  E311               	bnc	u5560
 16969  01595E  0EF0               	movlw	-16
 16970  015960  2AE3               	incf	plusw1,f,c
 16971  015962  E30E               	bnc	u5560
 16972  015964  0EF1               	movlw	-15
 16973  015966  2AE3               	incf	plusw1,f,c
 16974  015968  E30B               	bnc	u5560
 16975  01596A  0EF2               	movlw	-14
 16976  01596C  2AE3               	incf	plusw1,f,c
 16977  01596E  E308               	bnc	u5560
 16978  015970  0EF3               	movlw	-13
 16979  015972  2AE3               	incf	plusw1,f,c
 16980  015974  E305               	bnc	u5560
 16981  015976  0EF4               	movlw	-12
 16982  015978  2AE3               	incf	plusw1,f,c
 16983  01597A  E302               	bnc	u5560
 16984  01597C  0EF5               	movlw	-11
 16985  01597E  2AE3               	incf	plusw1,f,c
 16986  015980                     u5560:
 16987                           
 16988                           ;stkvar	_divisor @ sp[(-2)+-16]
 16989  015980  0EEE               	movlw	-18
 16990  015982  50E3               	movf	plusw1,w,c
 16991  015984  E116               	bnz	u5570
 16992  015986  0EEF               	movlw	-17
 16993  015988  50E3               	movf	plusw1,w,c
 16994  01598A  E113               	bnz	u5570
 16995  01598C  0EF0               	movlw	-16
 16996  01598E  50E3               	movf	plusw1,w,c
 16997  015990  E110               	bnz	u5570
 16998  015992  0EF1               	movlw	-15
 16999  015994  50E3               	movf	plusw1,w,c
 17000  015996  E10D               	bnz	u5570
 17001  015998  0EF2               	movlw	-14
 17002  01599A  50E3               	movf	plusw1,w,c
 17003  01599C  E10A               	bnz	u5570
 17004  01599E  0EF3               	movlw	-13
 17005  0159A0  50E3               	movf	plusw1,w,c
 17006  0159A2  E107               	bnz	u5570
 17007  0159A4  0EF4               	movlw	-12
 17008  0159A6  50E3               	movf	plusw1,w,c
 17009  0159A8  E104               	bnz	u5570
 17010  0159AA  0EF5               	movlw	-11
 17011  0159AC  50E3               	movf	plusw1,w,c
 17012  0159AE  B4D8               	btfsc	status,2,c
 17013  0159B0  D075               	goto	u5600
 17014  0159B2                     u5570:
 17015                           
 17016                           ;stkvar	_counter @ sp[(-2)+1]
 17017  0159B2  0EFF               	movlw	-1
 17018  0159B4  6AE3               	clrf	plusw1,c
 17019  0159B6  D012               	goto	L18
 17020  0159B8                     l6804:
 17021                           
 17022                           ;stkvar	_divisor @ sp[(-2)+-16]
 17023  0159B8  90D8               	bcf	status,0,c
 17024  0159BA  0EEE               	movlw	-18
 17025  0159BC  36E3               	rlcf	plusw1,f,c
 17026  0159BE  0EEF               	movlw	-17
 17027  0159C0  36E3               	rlcf	plusw1,f,c
 17028  0159C2  0EF0               	movlw	-16
 17029  0159C4  36E3               	rlcf	plusw1,f,c
 17030  0159C6  0EF1               	movlw	-15
 17031  0159C8  36E3               	rlcf	plusw1,f,c
 17032  0159CA  0EF2               	movlw	-14
 17033  0159CC  36E3               	rlcf	plusw1,f,c
 17034  0159CE  0EF3               	movlw	-13
 17035  0159D0  36E3               	rlcf	plusw1,f,c
 17036  0159D2  0EF4               	movlw	-12
 17037  0159D4  36E3               	rlcf	plusw1,f,c
 17038  0159D6  0EF5               	movlw	-11
 17039  0159D8  36E3               	rlcf	plusw1,f,c
 17040                           
 17041                           ;stkvar	_counter @ sp[(-2)+1]
 17042  0159DA  0EFF               	movlw	-1
 17043  0159DC                     L18:
 17044  0159DC  2AE3               	incf	plusw1,f,c
 17045                           
 17046                           ;stkvar	_divisor @ sp[(-2)+-16]
 17047  0159DE  0EF5               	movlw	-11
 17048  0159E0  AEE3               	btfss	plusw1,7,c
 17049  0159E2  D7EA               	goto	l6804
 17050  0159E4                     u5580:
 17051                           
 17052                           ;stkvar	_divisor @ sp[(-2)+-16]
 17053                           ;stkvar	_dividend @ sp[(-2)+-8]
 17054  0159E4  50E1               	movf	fsr1l,w,c
 17055  0159E6  0FF6               	addlw	-10
 17056  0159E8  6ED9               	movwf	fsr2l,c
 17057  0159EA  50E2               	movf	fsr1h,w,c
 17058  0159EC  6EDA               	movwf	fsr2h,c
 17059  0159EE  0EFF               	movlw	255
 17060  0159F0  22DA               	addwfc	fsr2h,f,c
 17061  0159F2  0EEE               	movlw	-18
 17062  0159F4  50E3               	movf	plusw1,w,c
 17063  0159F6  5CDE               	subwf	postinc2,w,c
 17064  0159F8  0EEF               	movlw	-17
 17065  0159FA  50E3               	movf	plusw1,w,c
 17066  0159FC  58DE               	subwfb	postinc2,w,c
 17067  0159FE  0EF0               	movlw	-16
 17068  015A00  50E3               	movf	plusw1,w,c
 17069  015A02  58DE               	subwfb	postinc2,w,c
 17070  015A04  0EF1               	movlw	-15
 17071  015A06  50E3               	movf	plusw1,w,c
 17072  015A08  58DE               	subwfb	postinc2,w,c
 17073  015A0A  0EF2               	movlw	-14
 17074  015A0C  50E3               	movf	plusw1,w,c
 17075  015A0E  58DE               	subwfb	postinc2,w,c
 17076  015A10  0EF3               	movlw	-13
 17077  015A12  50E3               	movf	plusw1,w,c
 17078  015A14  58DE               	subwfb	postinc2,w,c
 17079  015A16  0EF4               	movlw	-12
 17080  015A18  50E3               	movf	plusw1,w,c
 17081  015A1A  58DE               	subwfb	postinc2,w,c
 17082  015A1C  0EF5               	movlw	-11
 17083  015A1E  50E3               	movf	plusw1,w,c
 17084  015A20  58DE               	subwfb	postinc2,w,c
 17085  015A22  A0D8               	btfss	status,0,c
 17086  015A24  D01F               	goto	l6812
 17087                           
 17088                           ;stkvar	_divisor @ sp[(-2)+-16]
 17089                           ;stkvar	_dividend @ sp[(-2)+-8]
 17090  015A26  50E1               	movf	fsr1l,w,c
 17091  015A28  0FF6               	addlw	-10
 17092  015A2A  6ED9               	movwf	fsr2l,c
 17093  015A2C  50E2               	movf	fsr1h,w,c
 17094  015A2E  6EDA               	movwf	fsr2h,c
 17095  015A30  0EFF               	movlw	255
 17096  015A32  22DA               	addwfc	fsr2h,f,c
 17097  015A34  0EEE               	movlw	-18
 17098  015A36  50E3               	movf	plusw1,w,c
 17099  015A38  5EDE               	subwf	postinc2,f,c
 17100  015A3A  0EEF               	movlw	-17
 17101  015A3C  50E3               	movf	plusw1,w,c
 17102  015A3E  5ADE               	subwfb	postinc2,f,c
 17103  015A40  0EF0               	movlw	-16
 17104  015A42  50E3               	movf	plusw1,w,c
 17105  015A44  5ADE               	subwfb	postinc2,f,c
 17106  015A46  0EF1               	movlw	-15
 17107  015A48  50E3               	movf	plusw1,w,c
 17108  015A4A  5ADE               	subwfb	postinc2,f,c
 17109  015A4C  0EF2               	movlw	-14
 17110  015A4E  50E3               	movf	plusw1,w,c
 17111  015A50  5ADE               	subwfb	postinc2,f,c
 17112  015A52  0EF3               	movlw	-13
 17113  015A54  50E3               	movf	plusw1,w,c
 17114  015A56  5ADE               	subwfb	postinc2,f,c
 17115  015A58  0EF4               	movlw	-12
 17116  015A5A  50E3               	movf	plusw1,w,c
 17117  015A5C  5ADE               	subwfb	postinc2,f,c
 17118  015A5E  0EF5               	movlw	-11
 17119  015A60  50E3               	movf	plusw1,w,c
 17120  015A62  5ADE               	subwfb	postinc2,f,c
 17121  015A64                     l6812:
 17122                           
 17123                           ;stkvar	_divisor @ sp[(-2)+-16]
 17124  015A64  90D8               	bcf	status,0,c
 17125  015A66  0EF5               	movlw	-11
 17126  015A68  32E3               	rrcf	plusw1,f,c
 17127  015A6A  0EF4               	movlw	-12
 17128  015A6C  32E3               	rrcf	plusw1,f,c
 17129  015A6E  0EF3               	movlw	-13
 17130  015A70  32E3               	rrcf	plusw1,f,c
 17131  015A72  0EF2               	movlw	-14
 17132  015A74  32E3               	rrcf	plusw1,f,c
 17133  015A76  0EF1               	movlw	-15
 17134  015A78  32E3               	rrcf	plusw1,f,c
 17135  015A7A  0EF0               	movlw	-16
 17136  015A7C  32E3               	rrcf	plusw1,f,c
 17137  015A7E  0EEF               	movlw	-17
 17138  015A80  32E3               	rrcf	plusw1,f,c
 17139  015A82  0EEE               	movlw	-18
 17140  015A84  32E3               	rrcf	plusw1,f,c
 17141                           
 17142                           ;stkvar	_counter @ sp[(-2)+1]
 17143  015A86  0EFF               	movlw	-1
 17144  015A88  50E3               	movf	plusw1,w,c
 17145  015A8A  6E32               	movwf	btemp^0,c
 17146  015A8C  0E01               	movlw	1
 17147  015A8E  5E32               	subwf	btemp^0,f,c
 17148  015A90  0EFF               	movlw	-1
 17149  015A92  0060  F0CB  FFE3   	movff	btemp,plusw1
 17150  015A98  A4D8               	btfss	status,2,c
 17151  015A9A  D7A4               	goto	u5580
 17152  015A9C                     u5600:
 17153                           
 17154                           ;stkvar	_sign @ sp[(-2)+0]
 17155  015A9C  0EFE               	movlw	-2
 17156  015A9E  50E3               	movf	plusw1,w,c
 17157  015AA0  B4D8               	btfsc	status,2,c
 17158  015AA2  D025               	goto	u5620
 17159                           
 17160                           ;stkvar	_dividend @ sp[(-2)+-8]
 17161                           ;stkvar	_dividend @ sp[(-2)+-8]
 17162  015AA4  0EF6               	movlw	-10
 17163  015AA6  6CE3               	negf	plusw1,c
 17164  015AA8  0EF7               	movlw	-9
 17165  015AAA  1EE3               	comf	plusw1,f,c
 17166  015AAC  0EF8               	movlw	-8
 17167  015AAE  1EE3               	comf	plusw1,f,c
 17168  015AB0  0EF9               	movlw	-7
 17169  015AB2  1EE3               	comf	plusw1,f,c
 17170  015AB4  0EFA               	movlw	-6
 17171  015AB6  1EE3               	comf	plusw1,f,c
 17172  015AB8  0EFB               	movlw	-5
 17173  015ABA  1EE3               	comf	plusw1,f,c
 17174  015ABC  0EFC               	movlw	-4
 17175  015ABE  1EE3               	comf	plusw1,f,c
 17176  015AC0  0EFD               	movlw	-3
 17177  015AC2  1EE3               	comf	plusw1,f,c
 17178  015AC4  E314               	bnc	u5620
 17179  015AC6  0EF7               	movlw	-9
 17180  015AC8  2AE3               	incf	plusw1,f,c
 17181  015ACA  E311               	bnc	u5620
 17182  015ACC  0EF8               	movlw	-8
 17183  015ACE  2AE3               	incf	plusw1,f,c
 17184  015AD0  E30E               	bnc	u5620
 17185  015AD2  0EF9               	movlw	-7
 17186  015AD4  2AE3               	incf	plusw1,f,c
 17187  015AD6  E30B               	bnc	u5620
 17188  015AD8  0EFA               	movlw	-6
 17189  015ADA  2AE3               	incf	plusw1,f,c
 17190  015ADC  E308               	bnc	u5620
 17191  015ADE  0EFB               	movlw	-5
 17192  015AE0  2AE3               	incf	plusw1,f,c
 17193  015AE2  E305               	bnc	u5620
 17194  015AE4  0EFC               	movlw	-4
 17195  015AE6  2AE3               	incf	plusw1,f,c
 17196  015AE8  E302               	bnc	u5620
 17197  015AEA  0EFD               	movlw	-3
 17198  015AEC  2AE3               	incf	plusw1,f,c
 17199  015AEE                     u5620:
 17200                           
 17201                           ;stkvar	_dividend @ sp[(-2)+-8]
 17202  015AEE  0EF6               	movlw	246
 17203  015AF0  24E1               	addwf	fsr1l,w,c
 17204  015AF2  6ED9               	movwf	fsr2l,c
 17205  015AF4  0EFF               	movlw	255
 17206  015AF6  20E2               	addwfc	fsr1h,w,c
 17207  015AF8  6EDA               	movwf	fsr2h,c
 17208                           
 17209                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17210  015AFA  0E08               	movlw	8
 17211  015AFC  6E32               	movwf	btemp^0,c
 17212  015AFE  0EF6               	movlw	-10
 17213  015B00                     us563999:
 17214  015B00  006F FF7B FFE3     	movff	postinc2,plusw1
 17215  015B06  28E8               	incf	wreg,w,c
 17216  015B08  2E32               	decfsz	btemp^0,f,c
 17217  015B0A  D7FA               	bra	us563999
 17218                           
 17219                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17220  015B0C  52E5               	movf	postdec1,f,c
 17221  015B0E  52E5               	movf	postdec1,f,c
 17222  015B10  0012               	return		;funcret
 17223  015B12                     __end_of___aomod:
 17224                           	opt callstack 0
 17225                           
 17226 ;; *************** function ___aodiv *****************
 17227 ;; Defined at:
 17228 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17229 ;; Parameters:    Size  Location     Type
 17230 ;;  dividend        8  [STACK] long long 
 17231 ;;  divisor         8  [STACK] long long 
 17232 ;; Auto vars:     Size  Location     Type
 17233 ;;  quotient        8  [STACK] long long 
 17234 ;;  sign            1  [STACK] unsigned char 
 17235 ;;  counter         1  [STACK] unsigned char 
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  8  [STACK] long long 
 17238 ;; Registers used:
 17239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/1
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17249 ;;Total ram usage:        0 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:    6
 17252 ;; This function calls:
 17253 ;;		Nothing
 17254 ;; This function is called by:
 17255 ;;		_dtoa
 17256 ;; This function uses a reentrant model
 17257 ;;
 17258                           
 17259                           	psect	text62
 17260  0153DE                     __ptext62:
 17261                           	opt callstack 0
 17262  0153DE                     ___aodiv:
 17263                           	opt callstack 0
 17264                           
 17265                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17266  0153DE  0E0A               	movlw	10
 17267  0153E0  26E1               	addwf	fsr1l,f,c
 17268  0153E2  0E00               	movlw	0
 17269  0153E4  22E2               	addwfc	fsr1h,f,c
 17270                           
 17271                           ;stkvar	_sign @ sp[(-10)+8]
 17272                           
 17273                           ;incstack = 0
 17274  0153E6  0EFE               	movlw	-2
 17275  0153E8  6AE3               	clrf	plusw1,c
 17276                           
 17277                           ;stkvar	_divisor @ sp[(-10)+-16]
 17278  0153EA  0EED               	movlw	-19
 17279  0153EC  AEE3               	btfss	plusw1,7,c
 17280  0153EE  D028               	goto	l6752
 17281                           
 17282                           ;stkvar	_divisor @ sp[(-10)+-16]
 17283                           ;stkvar	_divisor @ sp[(-10)+-16]
 17284  0153F0  0EE6               	movlw	-26
 17285  0153F2  6CE3               	negf	plusw1,c
 17286  0153F4  0EE7               	movlw	-25
 17287  0153F6  1EE3               	comf	plusw1,f,c
 17288  0153F8  0EE8               	movlw	-24
 17289  0153FA  1EE3               	comf	plusw1,f,c
 17290  0153FC  0EE9               	movlw	-23
 17291  0153FE  1EE3               	comf	plusw1,f,c
 17292  015400  0EEA               	movlw	-22
 17293  015402  1EE3               	comf	plusw1,f,c
 17294  015404  0EEB               	movlw	-21
 17295  015406  1EE3               	comf	plusw1,f,c
 17296  015408  0EEC               	movlw	-20
 17297  01540A  1EE3               	comf	plusw1,f,c
 17298  01540C  0EED               	movlw	-19
 17299  01540E  1EE3               	comf	plusw1,f,c
 17300  015410  E314               	bnc	u5420
 17301  015412  0EE7               	movlw	-25
 17302  015414  2AE3               	incf	plusw1,f,c
 17303  015416  E311               	bnc	u5420
 17304  015418  0EE8               	movlw	-24
 17305  01541A  2AE3               	incf	plusw1,f,c
 17306  01541C  E30E               	bnc	u5420
 17307  01541E  0EE9               	movlw	-23
 17308  015420  2AE3               	incf	plusw1,f,c
 17309  015422  E30B               	bnc	u5420
 17310  015424  0EEA               	movlw	-22
 17311  015426  2AE3               	incf	plusw1,f,c
 17312  015428  E308               	bnc	u5420
 17313  01542A  0EEB               	movlw	-21
 17314  01542C  2AE3               	incf	plusw1,f,c
 17315  01542E  E305               	bnc	u5420
 17316  015430  0EEC               	movlw	-20
 17317  015432  2AE3               	incf	plusw1,f,c
 17318  015434  E302               	bnc	u5420
 17319  015436  0EED               	movlw	-19
 17320  015438  2AE3               	incf	plusw1,f,c
 17321  01543A                     u5420:
 17322                           
 17323                           ;stkvar	_sign @ sp[(-10)+8]
 17324  01543A  0EFE               	movlw	-2
 17325  01543C  6AE3               	clrf	plusw1,c
 17326  01543E  2AE3               	incf	plusw1,f,c
 17327  015440                     l6752:
 17328                           
 17329                           ;stkvar	_dividend @ sp[(-10)+-8]
 17330  015440  0EF5               	movlw	-11
 17331  015442  AEE3               	btfss	plusw1,7,c
 17332  015444  D027               	goto	l6758
 17333                           
 17334                           ;stkvar	_dividend @ sp[(-10)+-8]
 17335                           ;stkvar	_dividend @ sp[(-10)+-8]
 17336  015446  0EEE               	movlw	-18
 17337  015448  6CE3               	negf	plusw1,c
 17338  01544A  0EEF               	movlw	-17
 17339  01544C  1EE3               	comf	plusw1,f,c
 17340  01544E  0EF0               	movlw	-16
 17341  015450  1EE3               	comf	plusw1,f,c
 17342  015452  0EF1               	movlw	-15
 17343  015454  1EE3               	comf	plusw1,f,c
 17344  015456  0EF2               	movlw	-14
 17345  015458  1EE3               	comf	plusw1,f,c
 17346  01545A  0EF3               	movlw	-13
 17347  01545C  1EE3               	comf	plusw1,f,c
 17348  01545E  0EF4               	movlw	-12
 17349  015460  1EE3               	comf	plusw1,f,c
 17350  015462  0EF5               	movlw	-11
 17351  015464  1EE3               	comf	plusw1,f,c
 17352  015466  E314               	bnc	u5440
 17353  015468  0EEF               	movlw	-17
 17354  01546A  2AE3               	incf	plusw1,f,c
 17355  01546C  E311               	bnc	u5440
 17356  01546E  0EF0               	movlw	-16
 17357  015470  2AE3               	incf	plusw1,f,c
 17358  015472  E30E               	bnc	u5440
 17359  015474  0EF1               	movlw	-15
 17360  015476  2AE3               	incf	plusw1,f,c
 17361  015478  E30B               	bnc	u5440
 17362  01547A  0EF2               	movlw	-14
 17363  01547C  2AE3               	incf	plusw1,f,c
 17364  01547E  E308               	bnc	u5440
 17365  015480  0EF3               	movlw	-13
 17366  015482  2AE3               	incf	plusw1,f,c
 17367  015484  E305               	bnc	u5440
 17368  015486  0EF4               	movlw	-12
 17369  015488  2AE3               	incf	plusw1,f,c
 17370  01548A  E302               	bnc	u5440
 17371  01548C  0EF5               	movlw	-11
 17372  01548E  2AE3               	incf	plusw1,f,c
 17373  015490                     u5440:
 17374                           
 17375                           ;stkvar	_sign @ sp[(-10)+8]
 17376  015490  0EFE               	movlw	-2
 17377  015492  70E3               	btg	plusw1,0,c
 17378  015494                     l6758:
 17379                           
 17380                           ;stkvar	_quotient @ sp[(-10)+0]
 17381  015494  0E07               	movlw	7
 17382  015496  6E32               	movwf	btemp^0,c
 17383  015498  0EF6               	movlw	-10
 17384  01549A                     u5451:
 17385  01549A  6AE3               	clrf	plusw1,c
 17386  01549C  2AE8               	incf	wreg,f,c
 17387  01549E  0632               	decf	btemp^0,f,c
 17388  0154A0  E2FC               	bc	u5451
 17389                           
 17390                           ;stkvar	_divisor @ sp[(-10)+-16]
 17391  0154A2  0EE6               	movlw	-26
 17392  0154A4  50E3               	movf	plusw1,w,c
 17393  0154A6  E116               	bnz	u5460
 17394  0154A8  0EE7               	movlw	-25
 17395  0154AA  50E3               	movf	plusw1,w,c
 17396  0154AC  E113               	bnz	u5460
 17397  0154AE  0EE8               	movlw	-24
 17398  0154B0  50E3               	movf	plusw1,w,c
 17399  0154B2  E110               	bnz	u5460
 17400  0154B4  0EE9               	movlw	-23
 17401  0154B6  50E3               	movf	plusw1,w,c
 17402  0154B8  E10D               	bnz	u5460
 17403  0154BA  0EEA               	movlw	-22
 17404  0154BC  50E3               	movf	plusw1,w,c
 17405  0154BE  E10A               	bnz	u5460
 17406  0154C0  0EEB               	movlw	-21
 17407  0154C2  50E3               	movf	plusw1,w,c
 17408  0154C4  E107               	bnz	u5460
 17409  0154C6  0EEC               	movlw	-20
 17410  0154C8  50E3               	movf	plusw1,w,c
 17411  0154CA  E104               	bnz	u5460
 17412  0154CC  0EED               	movlw	-19
 17413  0154CE  50E3               	movf	plusw1,w,c
 17414  0154D0  B4D8               	btfsc	status,2,c
 17415  0154D2  D088               	goto	u5490
 17416  0154D4                     u5460:
 17417                           
 17418                           ;stkvar	_counter @ sp[(-10)+9]
 17419  0154D4  0EFF               	movlw	-1
 17420  0154D6  6AE3               	clrf	plusw1,c
 17421  0154D8  D012               	goto	L19
 17422  0154DA                     l6764:
 17423                           
 17424                           ;stkvar	_divisor @ sp[(-10)+-16]
 17425  0154DA  90D8               	bcf	status,0,c
 17426  0154DC  0EE6               	movlw	-26
 17427  0154DE  36E3               	rlcf	plusw1,f,c
 17428  0154E0  0EE7               	movlw	-25
 17429  0154E2  36E3               	rlcf	plusw1,f,c
 17430  0154E4  0EE8               	movlw	-24
 17431  0154E6  36E3               	rlcf	plusw1,f,c
 17432  0154E8  0EE9               	movlw	-23
 17433  0154EA  36E3               	rlcf	plusw1,f,c
 17434  0154EC  0EEA               	movlw	-22
 17435  0154EE  36E3               	rlcf	plusw1,f,c
 17436  0154F0  0EEB               	movlw	-21
 17437  0154F2  36E3               	rlcf	plusw1,f,c
 17438  0154F4  0EEC               	movlw	-20
 17439  0154F6  36E3               	rlcf	plusw1,f,c
 17440  0154F8  0EED               	movlw	-19
 17441  0154FA  36E3               	rlcf	plusw1,f,c
 17442                           
 17443                           ;stkvar	_counter @ sp[(-10)+9]
 17444  0154FC  0EFF               	movlw	-1
 17445  0154FE                     L19:
 17446  0154FE  2AE3               	incf	plusw1,f,c
 17447                           
 17448                           ;stkvar	_divisor @ sp[(-10)+-16]
 17449  015500  0EED               	movlw	-19
 17450  015502  AEE3               	btfss	plusw1,7,c
 17451  015504  D7EA               	goto	l6764
 17452  015506                     u5470:
 17453                           
 17454                           ;stkvar	_quotient @ sp[(-10)+0]
 17455  015506  90D8               	bcf	status,0,c
 17456  015508  0EF6               	movlw	-10
 17457  01550A  36E3               	rlcf	plusw1,f,c
 17458  01550C  0EF7               	movlw	-9
 17459  01550E  36E3               	rlcf	plusw1,f,c
 17460  015510  0EF8               	movlw	-8
 17461  015512  36E3               	rlcf	plusw1,f,c
 17462  015514  0EF9               	movlw	-7
 17463  015516  36E3               	rlcf	plusw1,f,c
 17464  015518  0EFA               	movlw	-6
 17465  01551A  36E3               	rlcf	plusw1,f,c
 17466  01551C  0EFB               	movlw	-5
 17467  01551E  36E3               	rlcf	plusw1,f,c
 17468  015520  0EFC               	movlw	-4
 17469  015522  36E3               	rlcf	plusw1,f,c
 17470  015524  0EFD               	movlw	-3
 17471  015526  36E3               	rlcf	plusw1,f,c
 17472                           
 17473                           ;stkvar	_divisor @ sp[(-10)+-16]
 17474                           ;stkvar	_dividend @ sp[(-10)+-8]
 17475  015528  50E1               	movf	fsr1l,w,c
 17476  01552A  0FEE               	addlw	-18
 17477  01552C  6ED9               	movwf	fsr2l,c
 17478  01552E  50E2               	movf	fsr1h,w,c
 17479  015530  6EDA               	movwf	fsr2h,c
 17480  015532  0EFF               	movlw	255
 17481  015534  22DA               	addwfc	fsr2h,f,c
 17482  015536  0EE6               	movlw	-26
 17483  015538  50E3               	movf	plusw1,w,c
 17484  01553A  5CDE               	subwf	postinc2,w,c
 17485  01553C  0EE7               	movlw	-25
 17486  01553E  50E3               	movf	plusw1,w,c
 17487  015540  58DE               	subwfb	postinc2,w,c
 17488  015542  0EE8               	movlw	-24
 17489  015544  50E3               	movf	plusw1,w,c
 17490  015546  58DE               	subwfb	postinc2,w,c
 17491  015548  0EE9               	movlw	-23
 17492  01554A  50E3               	movf	plusw1,w,c
 17493  01554C  58DE               	subwfb	postinc2,w,c
 17494  01554E  0EEA               	movlw	-22
 17495  015550  50E3               	movf	plusw1,w,c
 17496  015552  58DE               	subwfb	postinc2,w,c
 17497  015554  0EEB               	movlw	-21
 17498  015556  50E3               	movf	plusw1,w,c
 17499  015558  58DE               	subwfb	postinc2,w,c
 17500  01555A  0EEC               	movlw	-20
 17501  01555C  50E3               	movf	plusw1,w,c
 17502  01555E  58DE               	subwfb	postinc2,w,c
 17503  015560  0EED               	movlw	-19
 17504  015562  50E3               	movf	plusw1,w,c
 17505  015564  58DE               	subwfb	postinc2,w,c
 17506  015566  A0D8               	btfss	status,0,c
 17507  015568  D021               	goto	l6776
 17508                           
 17509                           ;stkvar	_divisor @ sp[(-10)+-16]
 17510                           ;stkvar	_dividend @ sp[(-10)+-8]
 17511  01556A  50E1               	movf	fsr1l,w,c
 17512  01556C  0FEE               	addlw	-18
 17513  01556E  6ED9               	movwf	fsr2l,c
 17514  015570  50E2               	movf	fsr1h,w,c
 17515  015572  6EDA               	movwf	fsr2h,c
 17516  015574  0EFF               	movlw	255
 17517  015576  22DA               	addwfc	fsr2h,f,c
 17518  015578  0EE6               	movlw	-26
 17519  01557A  50E3               	movf	plusw1,w,c
 17520  01557C  5EDE               	subwf	postinc2,f,c
 17521  01557E  0EE7               	movlw	-25
 17522  015580  50E3               	movf	plusw1,w,c
 17523  015582  5ADE               	subwfb	postinc2,f,c
 17524  015584  0EE8               	movlw	-24
 17525  015586  50E3               	movf	plusw1,w,c
 17526  015588  5ADE               	subwfb	postinc2,f,c
 17527  01558A  0EE9               	movlw	-23
 17528  01558C  50E3               	movf	plusw1,w,c
 17529  01558E  5ADE               	subwfb	postinc2,f,c
 17530  015590  0EEA               	movlw	-22
 17531  015592  50E3               	movf	plusw1,w,c
 17532  015594  5ADE               	subwfb	postinc2,f,c
 17533  015596  0EEB               	movlw	-21
 17534  015598  50E3               	movf	plusw1,w,c
 17535  01559A  5ADE               	subwfb	postinc2,f,c
 17536  01559C  0EEC               	movlw	-20
 17537  01559E  50E3               	movf	plusw1,w,c
 17538  0155A0  5ADE               	subwfb	postinc2,f,c
 17539  0155A2  0EED               	movlw	-19
 17540  0155A4  50E3               	movf	plusw1,w,c
 17541  0155A6  5ADE               	subwfb	postinc2,f,c
 17542                           
 17543                           ;stkvar	_quotient @ sp[(-10)+0]
 17544  0155A8  0EF6               	movlw	-10
 17545  0155AA  80E3               	bsf	plusw1,0,c
 17546  0155AC                     l6776:
 17547                           
 17548                           ;stkvar	_divisor @ sp[(-10)+-16]
 17549  0155AC  90D8               	bcf	status,0,c
 17550  0155AE  0EED               	movlw	-19
 17551  0155B0  32E3               	rrcf	plusw1,f,c
 17552  0155B2  0EEC               	movlw	-20
 17553  0155B4  32E3               	rrcf	plusw1,f,c
 17554  0155B6  0EEB               	movlw	-21
 17555  0155B8  32E3               	rrcf	plusw1,f,c
 17556  0155BA  0EEA               	movlw	-22
 17557  0155BC  32E3               	rrcf	plusw1,f,c
 17558  0155BE  0EE9               	movlw	-23
 17559  0155C0  32E3               	rrcf	plusw1,f,c
 17560  0155C2  0EE8               	movlw	-24
 17561  0155C4  32E3               	rrcf	plusw1,f,c
 17562  0155C6  0EE7               	movlw	-25
 17563  0155C8  32E3               	rrcf	plusw1,f,c
 17564  0155CA  0EE6               	movlw	-26
 17565  0155CC  32E3               	rrcf	plusw1,f,c
 17566                           
 17567                           ;stkvar	_counter @ sp[(-10)+9]
 17568  0155CE  0EFF               	movlw	-1
 17569  0155D0  50E3               	movf	plusw1,w,c
 17570  0155D2  6E32               	movwf	btemp^0,c
 17571  0155D4  0E01               	movlw	1
 17572  0155D6  5E32               	subwf	btemp^0,f,c
 17573  0155D8  0EFF               	movlw	-1
 17574  0155DA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17575  0155E0  A4D8               	btfss	status,2,c
 17576  0155E2  D791               	goto	u5470
 17577  0155E4                     u5490:
 17578                           
 17579                           ;stkvar	_sign @ sp[(-10)+8]
 17580  0155E4  0EFE               	movlw	-2
 17581  0155E6  50E3               	movf	plusw1,w,c
 17582  0155E8  B4D8               	btfsc	status,2,c
 17583  0155EA  D025               	goto	u5510
 17584                           
 17585                           ;stkvar	_quotient @ sp[(-10)+0]
 17586                           ;stkvar	_quotient @ sp[(-10)+0]
 17587  0155EC  0EF6               	movlw	-10
 17588  0155EE  6CE3               	negf	plusw1,c
 17589  0155F0  0EF7               	movlw	-9
 17590  0155F2  1EE3               	comf	plusw1,f,c
 17591  0155F4  0EF8               	movlw	-8
 17592  0155F6  1EE3               	comf	plusw1,f,c
 17593  0155F8  0EF9               	movlw	-7
 17594  0155FA  1EE3               	comf	plusw1,f,c
 17595  0155FC  0EFA               	movlw	-6
 17596  0155FE  1EE3               	comf	plusw1,f,c
 17597  015600  0EFB               	movlw	-5
 17598  015602  1EE3               	comf	plusw1,f,c
 17599  015604  0EFC               	movlw	-4
 17600  015606  1EE3               	comf	plusw1,f,c
 17601  015608  0EFD               	movlw	-3
 17602  01560A  1EE3               	comf	plusw1,f,c
 17603  01560C  E314               	bnc	u5510
 17604  01560E  0EF7               	movlw	-9
 17605  015610  2AE3               	incf	plusw1,f,c
 17606  015612  E311               	bnc	u5510
 17607  015614  0EF8               	movlw	-8
 17608  015616  2AE3               	incf	plusw1,f,c
 17609  015618  E30E               	bnc	u5510
 17610  01561A  0EF9               	movlw	-7
 17611  01561C  2AE3               	incf	plusw1,f,c
 17612  01561E  E30B               	bnc	u5510
 17613  015620  0EFA               	movlw	-6
 17614  015622  2AE3               	incf	plusw1,f,c
 17615  015624  E308               	bnc	u5510
 17616  015626  0EFB               	movlw	-5
 17617  015628  2AE3               	incf	plusw1,f,c
 17618  01562A  E305               	bnc	u5510
 17619  01562C  0EFC               	movlw	-4
 17620  01562E  2AE3               	incf	plusw1,f,c
 17621  015630  E302               	bnc	u5510
 17622  015632  0EFD               	movlw	-3
 17623  015634  2AE3               	incf	plusw1,f,c
 17624  015636                     u5510:
 17625                           
 17626                           ;stkvar	_quotient @ sp[(-10)+0]
 17627  015636  0EF6               	movlw	246
 17628  015638  24E1               	addwf	fsr1l,w,c
 17629  01563A  6ED9               	movwf	fsr2l,c
 17630  01563C  0EFF               	movlw	255
 17631  01563E  20E2               	addwfc	fsr1h,w,c
 17632  015640  6EDA               	movwf	fsr2h,c
 17633                           
 17634                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17635  015642  0E08               	movlw	8
 17636  015644  6E32               	movwf	btemp^0,c
 17637  015646  0EEE               	movlw	-18
 17638  015648                     us552999:
 17639  015648  006F FF7B FFE3     	movff	postinc2,plusw1
 17640  01564E  28E8               	incf	wreg,w,c
 17641  015650  2E32               	decfsz	btemp^0,f,c
 17642  015652  D7FA               	bra	us552999
 17643                           
 17644                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17645  015654  0EF6               	movlw	246
 17646  015656  26E1               	addwf	fsr1l,f,c
 17647  015658  0EFF               	movlw	255
 17648  01565A  22E2               	addwfc	fsr1h,f,c
 17649  01565C  0012               	return		;funcret
 17650  01565E                     __end_of___aodiv:
 17651                           	opt callstack 0
 17652                           
 17653 ;; *************** function _ctoa *****************
 17654 ;; Defined at:
 17655 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17656 ;; Parameters:    Size  Location     Type
 17657 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17658 ;;		 -> f(6), NULL(0), 
 17659 ;;  c               1  [STACK] unsigned char 
 17660 ;; Auto vars:     Size  Location     Type
 17661 ;;  w               2  [STACK] int 
 17662 ;;  l               2    0        int 
 17663 ;; Return value:  Size  Location     Type
 17664 ;;                  2  [STACK] int 
 17665 ;; Registers used:
 17666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17667 ;; Tracked objects:
 17668 ;;		On entry : 0/5
 17669 ;;		On exit  : 0/0
 17670 ;;		Unchanged: 0/0
 17671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17676 ;;Total ram usage:        0 bytes
 17677 ;; Hardware stack levels used:    1
 17678 ;; Hardware stack levels required when called:   11
 17679 ;; This function calls:
 17680 ;;		_pad
 17681 ;; This function is called by:
 17682 ;;		_vfpfcnvrt
 17683 ;; This function uses a reentrant model
 17684 ;;
 17685                           
 17686                           	psect	text63
 17687  017B2E                     __ptext63:
 17688                           	opt callstack 0
 17689  017B2E                     _ctoa:
 17690                           	opt callstack 0
 17691                           
 17692                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17693  017B2E  52E6               	movf	postinc1,f,c
 17694  017B30  52E6               	movf	postinc1,f,c
 17695                           
 17696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17697                           
 17698                           ;incstack = 0
 17699  017B32  501B               	movf	_width^0,w,c
 17700  017B34  101C               	iorwf	(_width+1)^0,w,c
 17701  017B36  A4D8               	btfss	status,2,c
 17702  017B38  D009               	goto	l9772
 17703                           
 17704                           ;stkvar	_w @ sp[(-2)+0]
 17705  017B3A  0EFE               	movlw	-2
 17706  017B3C  0060  F06F  FFE3   	movff	_width,plusw1
 17707  017B42  0EFF               	movlw	-1
 17708  017B44  0060  F073  FFE3   	movff	_width+1,plusw1
 17709  017B4A  D016               	goto	l9774
 17710  017B4C                     l9772:
 17711  017B4C  0EFF               	movlw	255
 17712  017B4E  6E3C               	movwf	(btemp+10)^0,c
 17713  017B50  0EFF               	movlw	255
 17714  017B52  6E3D               	movwf	(btemp+11)^0,c
 17715  017B54  0060  F06C  F03A   	movff	_width,btemp+8
 17716  017B5A  0060  F070  F03B   	movff	_width+1,btemp+9
 17717  017B60  503C               	movf	(btemp+10)^0,w,c
 17718  017B62  263A               	addwf	(btemp+8)^0,f,c
 17719  017B64  503D               	movf	(btemp+11)^0,w,c
 17720  017B66  223B               	addwfc	(btemp+9)^0,f,c
 17721                           
 17722                           ;stkvar	_w @ sp[(-2)+0]
 17723  017B68  0EFE               	movlw	-2
 17724  017B6A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17725  017B70  0EFF               	movlw	-1
 17726  017B72  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17727  017B78                     l9774:
 17728                           
 17729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17730                           ;stkvar	_c @ sp[(-2)+-3]
 17731  017B78  0EFB               	movlw	-5
 17732  017B7A  006F FF8C  F17C    	movff	plusw1,_dbuf
 17733                           
 17734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17735  017B80  0101               	movlb	1	; () banked
 17736  017B82  6B7D               	clrf	(_dbuf+1)& (0+255),b
 17737                           
 17738                           ; BSR set to: 1
 17739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17740                           ;stkvar	_w @ sp[(-2)+0]
 17741  017B84  0EFE               	movlw	-2
 17742  017B86  006F FF8F FFE6     	movff	plusw1,postinc1
 17743  017B8C  006F FF8F FFE6     	movff	plusw1,postinc1
 17744  017B92  0E7C               	movlw	low _dbuf
 17745  017B94  6EE6               	movwf	postinc1,c
 17746  017B96  0E01               	movlw	high _dbuf
 17747  017B98  6EE6               	movwf	postinc1,c
 17748                           
 17749                           ;stkvar	_fp @ sp[(-6)+-2]
 17750  017B9A  0EF8               	movlw	-8
 17751  017B9C  006F FF8F FFE6     	movff	plusw1,postinc1
 17752  017BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 17753  017BA8  EC98  F0B6         	call	_pad	;wreg free
 17754                           
 17755                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17756  017BAC  0EFB               	movlw	251
 17757  017BAE  26E1               	addwf	fsr1l,f,c
 17758  017BB0  0EFF               	movlw	255
 17759  017BB2  22E2               	addwfc	fsr1h,f,c
 17760  017BB4  0012               	return		;funcret
 17761  017BB6                     __end_of_ctoa:
 17762                           	opt callstack 0
 17763                           
 17764 ;; *************** function _pad *****************
 17765 ;; Defined at:
 17766 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17767 ;; Parameters:    Size  Location     Type
 17768 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17769 ;;		 -> f(6), NULL(0), 
 17770 ;;  buf             2  [STACK] PTR unsigned char 
 17771 ;;		 -> dbuf(80), 
 17772 ;;  p               2  [STACK] int 
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;  w               2  [STACK] int 
 17775 ;;  i               2  [STACK] int 
 17776 ;; Return value:  Size  Location     Type
 17777 ;;                  2  [STACK] int 
 17778 ;; Registers used:
 17779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17780 ;; Tracked objects:
 17781 ;;		On entry : 0/1
 17782 ;;		On exit  : 0/0
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17789 ;;Total ram usage:        0 bytes
 17790 ;; Hardware stack levels used:    1
 17791 ;; Hardware stack levels required when called:   10
 17792 ;; This function calls:
 17793 ;;		_fputc
 17794 ;;		_fputs
 17795 ;;		_strlen
 17796 ;; This function is called by:
 17797 ;;		_ctoa
 17798 ;;		_dtoa
 17799 ;;		_efgtoa
 17800 ;;		_xtoa
 17801 ;; This function uses a reentrant model
 17802 ;;
 17803                           
 17804                           	psect	text64
 17805  016D30                     __ptext64:
 17806                           	opt callstack 0
 17807  016D30                     _pad:
 17808                           	opt callstack 0
 17809                           
 17810                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17811  016D30  52E6               	movf	postinc1,f,c
 17812  016D32  52E6               	movf	postinc1,f,c
 17813  016D34  52E6               	movf	postinc1,f,c
 17814  016D36  52E6               	movf	postinc1,f,c
 17815                           
 17816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17817                           
 17818                           ;incstack = 0
 17819  016D38  A01F               	btfss	_flags^0,0,c
 17820  016D3A  D010               	goto	l9746
 17821                           
 17822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17823                           ;stkvar	_fp @ sp[(-4)+-2]
 17824  016D3C  0EFA               	movlw	-6
 17825  016D3E  006F FF8F FFE6     	movff	plusw1,postinc1
 17826  016D44  006F FF8F FFE6     	movff	plusw1,postinc1
 17827                           
 17828                           ;stkvar	_buf @ sp[(-6)+-4]
 17829  016D4A  0EF6               	movlw	-10
 17830  016D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 17831  016D52  006F FF8F FFE6     	movff	plusw1,postinc1
 17832  016D58  EC71  F0BC         	call	_fputs	;wreg free
 17833  016D5C                     l9746:
 17834                           
 17835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17836                           ;stkvar	_p @ sp[(-4)+-6]
 17837  016D5C  0EF7               	movlw	-9
 17838  016D5E  BEE3               	btfsc	plusw1,7,c
 17839  016D60  D011               	goto	l9750
 17840                           
 17841                           ;stkvar	_p @ sp[(-4)+-6]
 17842                           ;stkvar	_w @ sp[(-4)+0]
 17843  016D62  0EF6               	movlw	-10
 17844  016D64  006F FF8C  F032    	movff	plusw1,btemp
 17845  016D6A  0EFC               	movlw	-4
 17846  016D6C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17847  016D72  0EF7               	movlw	-9
 17848  016D74  006F FF8C  F032    	movff	plusw1,btemp
 17849  016D7A  0EFD               	movlw	-3
 17850  016D7C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17851  016D82  D004               	goto	l1865
 17852  016D84                     l9750:
 17853                           
 17854                           ;stkvar	_w @ sp[(-4)+0]
 17855  016D84  0EFC               	movlw	-4
 17856  016D86  6AE3               	clrf	plusw1,c
 17857  016D88  0EFD               	movlw	-3
 17858  016D8A  6AE3               	clrf	plusw1,c
 17859  016D8C                     l1865:
 17860                           
 17861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17862                           ;stkvar	_i @ sp[(-4)+2]
 17863  016D8C  0EFE               	movlw	-2
 17864  016D8E  6AE3               	clrf	plusw1,c
 17865  016D90  0EFF               	movlw	-1
 17866  016D92  6AE3               	clrf	plusw1,c
 17867                           
 17868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17869  016D94  D01E               	goto	l9756
 17870  016D96                     l9752:
 17871                           
 17872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17873                           ;stkvar	_fp @ sp[(-4)+-2]
 17874  016D96  0EFA               	movlw	-6
 17875  016D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17876  016D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17877  016DA4  0E20               	movlw	32
 17878  016DA6  6EE6               	movwf	postinc1,c
 17879  016DA8  0E00               	movlw	0
 17880  016DAA  6EE6               	movwf	postinc1,c
 17881  016DAC  EC7A  F0B5         	call	_fputc	;wreg free
 17882                           
 17883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17884                           ;stkvar	_i @ sp[(-4)+2]
 17885  016DB0  0EFE               	movlw	-2
 17886  016DB2  50E3               	movf	plusw1,w,c
 17887  016DB4  0F01               	addlw	1
 17888  016DB6  6E32               	movwf	btemp^0,c
 17889  016DB8  0EFE               	movlw	-2
 17890  016DBA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17891  016DC0  6A32               	clrf	btemp^0,c
 17892  016DC2  0EFF               	movlw	-1
 17893  016DC4  50E3               	movf	plusw1,w,c
 17894  016DC6  2032               	addwfc	btemp^0,w,c
 17895  016DC8  6E32               	movwf	btemp^0,c
 17896  016DCA  0EFF               	movlw	-1
 17897  016DCC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17898  016DD2                     l9756:
 17899                           
 17900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17901                           ;stkvar	_w @ sp[(-4)+0]
 17902                           ;stkvar	_i @ sp[(-4)+2]
 17903  016DD2  50E1               	movf	fsr1l,w,c
 17904  016DD4  0FFE               	addlw	-2
 17905  016DD6  6ED9               	movwf	fsr2l,c
 17906  016DD8  50E2               	movf	fsr1h,w,c
 17907  016DDA  6EDA               	movwf	fsr2h,c
 17908  016DDC  0EFF               	movlw	255
 17909  016DDE  22DA               	addwfc	fsr2h,f,c
 17910  016DE0  0EFC               	movlw	-4
 17911  016DE2  50E3               	movf	plusw1,w,c
 17912  016DE4  5CDE               	subwf	postinc2,w,c
 17913  016DE6  50DE               	movf	postinc2,w,c
 17914  016DE8  0A80               	xorlw	128
 17915  016DEA  6E32               	movwf	btemp^0,c
 17916  016DEC  0EFD               	movlw	-3
 17917  016DEE  50E3               	movf	plusw1,w,c
 17918  016DF0  0A80               	xorlw	128
 17919  016DF2  5832               	subwfb	btemp^0,w,c
 17920  016DF4  A0D8               	btfss	status,0,c
 17921  016DF6  D7CF               	goto	l9752
 17922                           
 17923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17924  016DF8  B01F               	btfsc	_flags^0,0,c
 17925  016DFA  D010               	goto	l9760
 17926                           
 17927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17928                           ;stkvar	_fp @ sp[(-4)+-2]
 17929  016DFC  0EFA               	movlw	-6
 17930  016DFE  006F FF8F FFE6     	movff	plusw1,postinc1
 17931  016E04  006F FF8F FFE6     	movff	plusw1,postinc1
 17932                           
 17933                           ;stkvar	_buf @ sp[(-6)+-4]
 17934  016E0A  0EF6               	movlw	-10
 17935  016E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 17936  016E12  006F FF8F FFE6     	movff	plusw1,postinc1
 17937  016E18  EC71  F0BC         	call	_fputs	;wreg free
 17938  016E1C                     l9760:
 17939                           
 17940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17941                           ;stkvar	_w @ sp[(-4)+0]
 17942                           ;stkvar	_buf @ sp[(-4)+-4]
 17943  016E1C  0EF8               	movlw	-8
 17944  016E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 17945  016E24  006F FF8F FFE6     	movff	plusw1,postinc1
 17946  016E2A  EC20  F0BC         	call	_strlen	;wreg free
 17947  016E2E  0EFC               	movlw	-4
 17948  016E30  50E3               	movf	plusw1,w,c
 17949  016E32  2632               	addwf	btemp^0,f,c
 17950  016E34  0EFD               	movlw	-3
 17951  016E36  50E3               	movf	plusw1,w,c
 17952  016E38  2233               	addwfc	(btemp+1)^0,f,c
 17953                           
 17954                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 17955  016E3A  0EF6               	movlw	246
 17956  016E3C  26E1               	addwf	fsr1l,f,c
 17957  016E3E  0EFF               	movlw	255
 17958  016E40  22E2               	addwfc	fsr1h,f,c
 17959  016E42  0012               	return		;funcret
 17960  016E44                     __end_of_pad:
 17961                           	opt callstack 0
 17962                           
 17963 ;; *************** function _strlen *****************
 17964 ;; Defined at:
 17965 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 17966 ;; Parameters:    Size  Location     Type
 17967 ;;  s               2  [STACK] PTR const unsigned char 
 17968 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17969 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 17970 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 17971 ;; Auto vars:     Size  Location     Type
 17972 ;;  a               2  [STACK] PTR const unsigned char 
 17973 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 17974 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 17975 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 17976 ;; Return value:  Size  Location     Type
 17977 ;;                  2  [STACK] unsigned int 
 17978 ;; Registers used:
 17979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 17980 ;; Tracked objects:
 17981 ;;		On entry : 0/0
 17982 ;;		On exit  : 0/0
 17983 ;;		Unchanged: 0/0
 17984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17989 ;;Total ram usage:        0 bytes
 17990 ;; Hardware stack levels used:    1
 17991 ;; Hardware stack levels required when called:    6
 17992 ;; This function calls:
 17993 ;;		Nothing
 17994 ;; This function is called by:
 17995 ;;		_eaDogM_WriteString
 17996 ;;		_pad
 17997 ;;		_stoa
 17998 ;; This function uses a reentrant model
 17999 ;;
 18000                           
 18001                           	psect	text65
 18002  017840                     __ptext65:
 18003                           	opt callstack 0
 18004  017840                     _strlen:
 18005                           	opt callstack 0
 18006                           
 18007                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18008  017840  52E6               	movf	postinc1,f,c
 18009  017842  52E6               	movf	postinc1,f,c
 18010                           
 18011                           ;stkvar	_s @ sp[(-2)+-2]
 18012                           
 18013                           ;incstack = 0
 18014  017844  0EFC               	movlw	-4
 18015  017846  006F FF8C  F03C    	movff	plusw1,btemp+10
 18016  01784C  0EFD               	movlw	-3
 18017  01784E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18018                           
 18019                           ;stkvar	_a @ sp[(-2)+0]
 18020  017854  0EFF               	movlw	-1
 18021  017856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18022  01785C  0EFE               	movlw	-2
 18023  01785E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18024  017864  D011               	goto	l9728
 18025  017866                     l9726:
 18026                           
 18027                           ;stkvar	_s @ sp[(-2)+-2]
 18028  017866  0EFC               	movlw	-4
 18029  017868  50E3               	movf	plusw1,w,c
 18030  01786A  0F01               	addlw	1
 18031  01786C  6E32               	movwf	btemp^0,c
 18032  01786E  0EFC               	movlw	-4
 18033  017870  0060  F0CB  FFE3   	movff	btemp,plusw1
 18034  017876  6A32               	clrf	btemp^0,c
 18035  017878  0EFD               	movlw	-3
 18036  01787A  50E3               	movf	plusw1,w,c
 18037  01787C  2032               	addwfc	btemp^0,w,c
 18038  01787E  6E32               	movwf	btemp^0,c
 18039  017880  0EFD               	movlw	-3
 18040  017882  0060  F0CB  FFE3   	movff	btemp,plusw1
 18041  017888                     l9728:
 18042                           
 18043                           ;stkvar	_s @ sp[(-2)+-2]
 18044  017888  0EFC               	movlw	-4
 18045  01788A  006F FF8F FFF6     	movff	plusw1,tblptrl
 18046  017890  0EFD               	movlw	-3
 18047  017892  006F FF8F FFF7     	movff	plusw1,tblptrh
 18048  017898  0E00               	movlw	low (__mediumconst shr (0+16))
 18049  01789A  6EF8               	movwf	tblptru,c
 18050  01789C  0E1F               	movlw	(high __ramtop+-1)
 18051  01789E  64F7               	cpfsgt	tblptrh,c
 18052  0178A0  D003               	bra	u9067
 18053  0178A2  0008               	tblrd		*
 18054  0178A4  50F5               	movf	tablat,w,c
 18055  0178A6  D007               	bra	u9060
 18056  0178A8                     u9067:
 18057  0178A8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18058  0178AE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18059  0178B4  50EF               	movf	indf0,w,c
 18060  0178B6                     u9060:
 18061  0178B6  0900               	iorlw	0
 18062  0178B8  A4D8               	btfss	status,2,c
 18063  0178BA  D7D5               	goto	l9726
 18064                           
 18065                           ;stkvar	_a @ sp[(-2)+0]
 18066                           ;stkvar	_s @ sp[(-2)+-2]
 18067  0178BC  0EFC               	movlw	-4
 18068  0178BE  006F FF8C  F032    	movff	plusw1,btemp
 18069  0178C4  0EFD               	movlw	-3
 18070  0178C6  006F FF8C  F033    	movff	plusw1,btemp+1
 18071  0178CC  0EFE               	movlw	-2
 18072  0178CE  50E3               	movf	plusw1,w,c
 18073  0178D0  5E32               	subwf	btemp^0,f,c
 18074  0178D2  0EFF               	movlw	-1
 18075  0178D4  50E3               	movf	plusw1,w,c
 18076  0178D6  5A33               	subwfb	(btemp+1)^0,f,c
 18077                           
 18078                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18079  0178D8  52E5               	movf	postdec1,f,c
 18080  0178DA  52E5               	movf	postdec1,f,c
 18081  0178DC  52E5               	movf	postdec1,f,c
 18082  0178DE  52E5               	movf	postdec1,f,c
 18083  0178E0  0012               	return		;funcret
 18084  0178E2                     __end_of_strlen:
 18085                           	opt callstack 0
 18086                           
 18087 ;; *************** function _fputs *****************
 18088 ;; Defined at:
 18089 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18090 ;; Parameters:    Size  Location     Type
 18091 ;;  s               2  [STACK] PTR const unsigned char 
 18092 ;;		 -> dbuf(80), 
 18093 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18094 ;;		 -> f(6), NULL(0), 
 18095 ;; Auto vars:     Size  Location     Type
 18096 ;;  i               2  [STACK] int 
 18097 ;;  c               1  [STACK] unsigned char 
 18098 ;; Return value:  Size  Location     Type
 18099 ;;                  2  [STACK] int 
 18100 ;; Registers used:
 18101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18102 ;; Tracked objects:
 18103 ;;		On entry : 0/1
 18104 ;;		On exit  : 0/0
 18105 ;;		Unchanged: 0/0
 18106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18111 ;;Total ram usage:        0 bytes
 18112 ;; Hardware stack levels used:    1
 18113 ;; Hardware stack levels required when called:    9
 18114 ;; This function calls:
 18115 ;;		_fputc
 18116 ;; This function is called by:
 18117 ;;		_pad
 18118 ;; This function uses a reentrant model
 18119 ;;
 18120                           
 18121                           	psect	text66
 18122  0178E2                     __ptext66:
 18123                           	opt callstack 0
 18124  0178E2                     _fputs:
 18125                           	opt callstack 0
 18126                           
 18127                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18128  0178E2  52E6               	movf	postinc1,f,c
 18129  0178E4  52E6               	movf	postinc1,f,c
 18130  0178E6  52E6               	movf	postinc1,f,c
 18131                           
 18132                           ;stkvar	_i @ sp[(-3)+0]
 18133                           
 18134                           ;incstack = 0
 18135  0178E8  0EFD               	movlw	-3
 18136  0178EA  6AE3               	clrf	plusw1,c
 18137  0178EC  0EFE               	movlw	-2
 18138  0178EE  6AE3               	clrf	plusw1,c
 18139  0178F0  D01F               	goto	l9740
 18140  0178F2                     l9736:
 18141                           
 18142                           ;stkvar	_fp @ sp[(-3)+-4]
 18143  0178F2  0EF9               	movlw	-7
 18144  0178F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18145  0178FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18146                           
 18147                           ;stkvar	_c @ sp[(-5)+2]
 18148  017900  0EFD               	movlw	-3
 18149  017902  50E3               	movf	plusw1,w,c
 18150  017904  6EE6               	movwf	postinc1,c
 18151  017906  0E00               	movlw	0
 18152  017908  6EE6               	movwf	postinc1,c
 18153  01790A  EC7A  F0B5         	call	_fputc	;wreg free
 18154                           
 18155                           ;stkvar	_i @ sp[(-3)+0]
 18156  01790E  0EFD               	movlw	-3
 18157  017910  50E3               	movf	plusw1,w,c
 18158  017912  0F01               	addlw	1
 18159  017914  6E32               	movwf	btemp^0,c
 18160  017916  0EFD               	movlw	-3
 18161  017918  0060  F0CB  FFE3   	movff	btemp,plusw1
 18162  01791E  6A32               	clrf	btemp^0,c
 18163  017920  0EFE               	movlw	-2
 18164  017922  50E3               	movf	plusw1,w,c
 18165  017924  2032               	addwfc	btemp^0,w,c
 18166  017926  6E32               	movwf	btemp^0,c
 18167  017928  0EFE               	movlw	-2
 18168  01792A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18169  017930                     l9740:
 18170                           
 18171                           ;stkvar	_i @ sp[(-3)+0]
 18172  017930  0EFD               	movlw	-3
 18173  017932  006F FF8C  F03C    	movff	plusw1,btemp+10
 18174  017938  0EFE               	movlw	-2
 18175  01793A  006F FF8C  F03D    	movff	plusw1,btemp+11
 18176                           
 18177                           ;stkvar	_s @ sp[(-3)+-2]
 18178  017940  0EFB               	movlw	-5
 18179  017942  006F FF8C  F03A    	movff	plusw1,btemp+8
 18180  017948  0EFC               	movlw	-4
 18181  01794A  006F FF8C  F03B    	movff	plusw1,btemp+9
 18182  017950  503C               	movf	(btemp+10)^0,w,c
 18183  017952  243A               	addwf	(btemp+8)^0,w,c
 18184  017954  6ED9               	movwf	fsr2l,c
 18185  017956  503D               	movf	(btemp+11)^0,w,c
 18186  017958  203B               	addwfc	(btemp+9)^0,w,c
 18187  01795A  6EDA               	movwf	fsr2h,c
 18188  01795C  50DF               	movf	indf2,w,c
 18189  01795E  6E3D               	movwf	(btemp+11)^0,c
 18190                           
 18191                           ;stkvar	_c @ sp[(-3)+2]
 18192  017960  0EFF               	movlw	-1
 18193  017962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18194  017968  0EFF               	movlw	-1
 18195  01796A  50E3               	movf	plusw1,w,c
 18196  01796C  A4D8               	btfss	status,2,c
 18197  01796E  D7C1               	goto	l9736
 18198                           
 18199                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18200  017970  0EF9               	movlw	249
 18201  017972  26E1               	addwf	fsr1l,f,c
 18202  017974  0EFF               	movlw	255
 18203  017976  22E2               	addwfc	fsr1h,f,c
 18204  017978  0012               	return		;funcret
 18205  01797A                     __end_of_fputs:
 18206                           	opt callstack 0
 18207                           
 18208 ;; *************** function _fputc *****************
 18209 ;; Defined at:
 18210 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18211 ;; Parameters:    Size  Location     Type
 18212 ;;  c               2  [STACK] int 
 18213 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18214 ;;		 -> f(6), NULL(0), 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;		None
 18217 ;; Return value:  Size  Location     Type
 18218 ;;                  2  [STACK] int 
 18219 ;; Registers used:
 18220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18221 ;; Tracked objects:
 18222 ;;		On entry : 0/5
 18223 ;;		On exit  : 0/0
 18224 ;;		Unchanged: 0/0
 18225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18230 ;;Total ram usage:        0 bytes
 18231 ;; Hardware stack levels used:    1
 18232 ;; Hardware stack levels required when called:    8
 18233 ;; This function calls:
 18234 ;;		_putch
 18235 ;; This function is called by:
 18236 ;;		_pad
 18237 ;;		_stoa
 18238 ;;		_vfpfcnvrt
 18239 ;;		_fputs
 18240 ;; This function uses a reentrant model
 18241 ;;
 18242                           
 18243                           	psect	text67
 18244  016AF4                     __ptext67:
 18245                           	opt callstack 0
 18246  016AF4                     _fputc:
 18247                           	opt callstack 13
 18248                           
 18249                           ;stkvar	_fp @ sp[(0)+-4]
 18250                           
 18251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18252                           ;incstack = 0
 18253  016AF4  0EFC               	movlw	-4
 18254  016AF6  006F FF8C  F032    	movff	plusw1,btemp
 18255  016AFC  0EFD               	movlw	-3
 18256  016AFE  50E3               	movf	plusw1,w,c
 18257  016B00  1032               	iorwf	btemp^0,w,c
 18258  016B02  B4D8               	btfsc	status,2,c
 18259  016B04  D009               	goto	u9030
 18260                           
 18261                           ;stkvar	_fp @ sp[(0)+-4]
 18262  016B06  0EFC               	movlw	-4
 18263  016B08  006F FF8C  F032    	movff	plusw1,btemp
 18264  016B0E  0EFD               	movlw	-3
 18265  016B10  50E3               	movf	plusw1,w,c
 18266  016B12  1032               	iorwf	btemp^0,w,c
 18267  016B14  A4D8               	btfss	status,2,c
 18268  016B16  D006               	goto	l9714
 18269  016B18                     u9030:
 18270                           
 18271                           ;stkvar	_c @ sp[(0)+-2]
 18272  016B18  0EFE               	movlw	-2
 18273  016B1A  50E3               	movf	plusw1,w,c
 18274  016B1C  6EE6               	movwf	postinc1,c
 18275  016B1E  EC62  F0C6         	call	_putch	;wreg free
 18276  016B22  D075               	goto	l2883
 18277  016B24                     l9714:
 18278                           
 18279                           ;stkvar	_fp @ sp[(0)+-4]
 18280  016B24  0EFC               	movlw	-4
 18281  016B26  006F FF8C  F03C    	movff	plusw1,btemp+10
 18282  016B2C  0EFD               	movlw	-3
 18283  016B2E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18284  016B34  0E04               	movlw	4
 18285  016B36  243C               	addwf	(btemp+10)^0,w,c
 18286  016B38  6ED9               	movwf	fsr2l,c
 18287  016B3A  0E00               	movlw	0
 18288  016B3C  203D               	addwfc	(btemp+11)^0,w,c
 18289  016B3E  6EDA               	movwf	fsr2h,c
 18290  016B40  50DE               	movf	postinc2,w,c
 18291  016B42  10DE               	iorwf	postinc2,w,c
 18292  016B44  B4D8               	btfsc	status,2,c
 18293  016B46  D026               	goto	u9050
 18294                           
 18295                           ;stkvar	_fp @ sp[(0)+-4]
 18296  016B48  0EFC               	movlw	-4
 18297  016B4A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18298  016B50  0EFD               	movlw	-3
 18299  016B52  006F FF8C  F03D    	movff	plusw1,btemp+11
 18300  016B58  0E04               	movlw	4
 18301  016B5A  243C               	addwf	(btemp+10)^0,w,c
 18302  016B5C  6ED9               	movwf	fsr2l,c
 18303  016B5E  0E00               	movlw	0
 18304  016B60  203D               	addwfc	(btemp+11)^0,w,c
 18305  016B62  6EDA               	movwf	fsr2h,c
 18306                           
 18307                           ;stkvar	_fp @ sp[(0)+-4]
 18308  016B64  0EFC               	movlw	-4
 18309  016B66  006F FF8C  F03C    	movff	plusw1,btemp+10
 18310  016B6C  0EFD               	movlw	-3
 18311  016B6E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18312  016B74  0E02               	movlw	2
 18313  016B76  243C               	addwf	(btemp+10)^0,w,c
 18314  016B78  6EE9               	movwf	fsr0l,c
 18315  016B7A  0E00               	movlw	0
 18316  016B7C  203D               	addwfc	(btemp+11)^0,w,c
 18317  016B7E  6EEA               	movwf	fsr0h,c
 18318  016B80  50DE               	movf	postinc2,w,c
 18319  016B82  5CEE               	subwf	postinc0,w,c
 18320  016B84  50EE               	movf	postinc0,w,c
 18321  016B86  0A80               	xorlw	128
 18322  016B88  6E32               	movwf	btemp^0,c
 18323  016B8A  50DE               	movf	postinc2,w,c
 18324  016B8C  0A80               	xorlw	128
 18325  016B8E  5832               	subwfb	btemp^0,w,c
 18326  016B90  B0D8               	btfsc	status,0,c
 18327  016B92  D03D               	goto	l2883
 18328  016B94                     u9050:
 18329                           
 18330                           ;stkvar	_c @ sp[(0)+-2]
 18331                           ;stkvar	_fp @ sp[(0)+-4]
 18332  016B94  0EFC               	movlw	-4
 18333  016B96  006F FF8C  F03C    	movff	plusw1,btemp+10
 18334  016B9C  0EFD               	movlw	-3
 18335  016B9E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18336  016BA4  0E02               	movlw	2
 18337  016BA6  243C               	addwf	(btemp+10)^0,w,c
 18338  016BA8  6ED9               	movwf	fsr2l,c
 18339  016BAA  0E00               	movlw	0
 18340  016BAC  203D               	addwfc	(btemp+11)^0,w,c
 18341  016BAE  6EDA               	movwf	fsr2h,c
 18342  016BB0  006F FF78  F03C    	movff	postinc2,btemp+10
 18343  016BB6  006F FF74  F03D    	movff	postdec2,btemp+11
 18344                           
 18345                           ;stkvar	_fp @ sp[(0)+-4]
 18346  016BBC  0EFC               	movlw	-4
 18347  016BBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 18348  016BC4  0EFD               	movlw	-3
 18349  016BC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 18350  016BCC  006F FF78  F03A    	movff	postinc2,btemp+8
 18351  016BD2  006F FF74  F03B    	movff	postdec2,btemp+9
 18352  016BD8  503C               	movf	(btemp+10)^0,w,c
 18353  016BDA  243A               	addwf	(btemp+8)^0,w,c
 18354  016BDC  6ED9               	movwf	fsr2l,c
 18355  016BDE  503D               	movf	(btemp+11)^0,w,c
 18356  016BE0  203B               	addwfc	(btemp+9)^0,w,c
 18357  016BE2  6EDA               	movwf	fsr2h,c
 18358  016BE4  0EFE               	movlw	-2
 18359  016BE6  006F FF8F FFDF     	movff	plusw1,indf2
 18360                           
 18361                           ;stkvar	_fp @ sp[(0)+-4]
 18362  016BEC  0EFC               	movlw	-4
 18363  016BEE  006F FF8C  F03C    	movff	plusw1,btemp+10
 18364  016BF4  0EFD               	movlw	-3
 18365  016BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 18366  016BFC  0E02               	movlw	2
 18367  016BFE  243C               	addwf	(btemp+10)^0,w,c
 18368  016C00  6ED9               	movwf	fsr2l,c
 18369  016C02  0E00               	movlw	0
 18370  016C04  203D               	addwfc	(btemp+11)^0,w,c
 18371  016C06  6EDA               	movwf	fsr2h,c
 18372  016C08  2ADE               	incf	postinc2,f,c
 18373  016C0A  0E00               	movlw	0
 18374  016C0C  22DD               	addwfc	postdec2,f,c
 18375  016C0E                     l2883:
 18376                           
 18377                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18378  016C0E  52E5               	movf	postdec1,f,c
 18379  016C10  52E5               	movf	postdec1,f,c
 18380  016C12  52E5               	movf	postdec1,f,c
 18381  016C14  52E5               	movf	postdec1,f,c
 18382  016C16  0012               	return		;funcret
 18383  016C18                     __end_of_fputc:
 18384                           	opt callstack 0
 18385                           
 18386 ;; *************** function _putch *****************
 18387 ;; Defined at:
 18388 ;;		line 155 in file "eadog.c"
 18389 ;; Parameters:    Size  Location     Type
 18390 ;;  c               1  [STACK] unsigned char 
 18391 ;; Auto vars:     Size  Location     Type
 18392 ;;		None
 18393 ;; Return value:  Size  Location     Type
 18394 ;;                  1  [STACK] void 
 18395 ;; Registers used:
 18396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18397 ;; Tracked objects:
 18398 ;;		On entry : 0/5
 18399 ;;		On exit  : 0/0
 18400 ;;		Unchanged: 0/0
 18401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18406 ;;Total ram usage:        0 bytes
 18407 ;; Hardware stack levels used:    1
 18408 ;; Hardware stack levels required when called:    7
 18409 ;; This function calls:
 18410 ;;		_ringBufS_put_dma
 18411 ;; This function is called by:
 18412 ;;		_fputc
 18413 ;; This function uses a reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text68
 18417  018CC4                     __ptext68:
 18418                           	opt callstack 0
 18419  018CC4                     _putch:
 18420                           	opt callstack 13
 18421                           
 18422                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18423                           ;stkvar	_c @ sp[(0)+-1]
 18424                           
 18425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18426                           ;incstack = 0
 18427  018CC4  0EFF               	movlw	-1
 18428  018CC6  50E3               	movf	plusw1,w,c
 18429  018CC8  6EE6               	movwf	postinc1,c
 18430  018CCA  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 18431  018CD0  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 18432  018CD6  EC24  F0BB         	call	_ringBufS_put_dma	;wreg free
 18433                           
 18434                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18435  018CDA  52E5               	movf	postdec1,f,c
 18436  018CDC  0012               	return		;funcret
 18437  018CDE                     __end_of_putch:
 18438                           	opt callstack 0
 18439                           
 18440 ;; *************** function _ringBufS_put_dma *****************
 18441 ;; Defined at:
 18442 ;;		line 67 in file "ringbufs.c"
 18443 ;; Parameters:    Size  Location     Type
 18444 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18445 ;;		 -> ring_buf1(67), 
 18446 ;;  c               1  [STACK] const unsigned char 
 18447 ;; Auto vars:     Size  Location     Type
 18448 ;;		None
 18449 ;; Return value:  Size  Location     Type
 18450 ;;                  1  [STACK] void 
 18451 ;; Registers used:
 18452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18453 ;; Tracked objects:
 18454 ;;		On entry : 0/5
 18455 ;;		On exit  : 0/0
 18456 ;;		Unchanged: 0/0
 18457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18462 ;;Total ram usage:        0 bytes
 18463 ;; Hardware stack levels used:    1
 18464 ;; Hardware stack levels required when called:    6
 18465 ;; This function calls:
 18466 ;;		Nothing
 18467 ;; This function is called by:
 18468 ;;		_putch
 18469 ;; This function uses a reentrant model
 18470 ;;
 18471                           
 18472                           	psect	text69
 18473  017648                     __ptext69:
 18474                           	opt callstack 0
 18475  017648                     _ringBufS_put_dma:
 18476                           	opt callstack 13
 18477                           
 18478                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18479                           ;stkvar	__this @ sp[(0)+-2]
 18480                           
 18481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18482                           ;incstack = 0
 18483  017648  0EFE               	movlw	-2
 18484  01764A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18485  017650  0EFF               	movlw	-1
 18486  017652  006F FF8C  F03D    	movff	plusw1,btemp+11
 18487  017658  0E42               	movlw	66
 18488  01765A  243C               	addwf	(btemp+10)^0,w,c
 18489  01765C  6ED9               	movwf	fsr2l,c
 18490  01765E  0E00               	movlw	0
 18491  017660  203D               	addwfc	(btemp+11)^0,w,c
 18492  017662  6EDA               	movwf	fsr2h,c
 18493  017664  0E40               	movlw	64
 18494  017666  60DF               	cpfslt	indf2,c
 18495  017668  D040               	goto	l1498
 18496                           
 18497                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18498                           ;stkvar	_c @ sp[(0)+-3]
 18499                           ;stkvar	__this @ sp[(0)+-2]
 18500  01766A  0EFE               	movlw	-2
 18501  01766C  006F FF8C  F03C    	movff	plusw1,btemp+10
 18502  017672  0EFF               	movlw	-1
 18503  017674  006F FF8C  F03D    	movff	plusw1,btemp+11
 18504  01767A  0E40               	movlw	64
 18505  01767C  243C               	addwf	(btemp+10)^0,w,c
 18506  01767E  6ED9               	movwf	fsr2l,c
 18507  017680  0E00               	movlw	0
 18508  017682  203D               	addwfc	(btemp+11)^0,w,c
 18509  017684  6EDA               	movwf	fsr2h,c
 18510  017686  50DF               	movf	indf2,w,c
 18511  017688  6E3D               	movwf	(btemp+11)^0,c
 18512                           
 18513                           ;stkvar	__this @ sp[(0)+-2]
 18514  01768A  0EFE               	movlw	-2
 18515  01768C  006F FF8C  F03A    	movff	plusw1,btemp+8
 18516  017692  0EFF               	movlw	-1
 18517  017694  006F FF8C  F03B    	movff	plusw1,btemp+9
 18518  01769A  503D               	movf	(btemp+11)^0,w,c
 18519  01769C  243A               	addwf	(btemp+8)^0,w,c
 18520  01769E  6ED9               	movwf	fsr2l,c
 18521  0176A0  0E00               	movlw	0
 18522  0176A2  203B               	addwfc	(btemp+9)^0,w,c
 18523  0176A4  6EDA               	movwf	fsr2h,c
 18524  0176A6  0EFD               	movlw	-3
 18525  0176A8  006F FF8F FFDF     	movff	plusw1,indf2
 18526                           
 18527                           ;ringbufs.c: 71:   ++_this->head;
 18528                           ;stkvar	__this @ sp[(0)+-2]
 18529  0176AE  0EFE               	movlw	-2
 18530  0176B0  006F FF8C  F03C    	movff	plusw1,btemp+10
 18531  0176B6  0EFF               	movlw	-1
 18532  0176B8  006F FF8C  F03D    	movff	plusw1,btemp+11
 18533  0176BE  0E40               	movlw	64
 18534  0176C0  243C               	addwf	(btemp+10)^0,w,c
 18535  0176C2  6ED9               	movwf	fsr2l,c
 18536  0176C4  0E00               	movlw	0
 18537  0176C6  203D               	addwfc	(btemp+11)^0,w,c
 18538  0176C8  6EDA               	movwf	fsr2h,c
 18539  0176CA  2ADF               	incf	indf2,f,c
 18540                           
 18541                           ;ringbufs.c: 72:   ++_this->count;
 18542                           ;stkvar	__this @ sp[(0)+-2]
 18543  0176CC  0EFE               	movlw	-2
 18544  0176CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 18545  0176D4  0EFF               	movlw	-1
 18546  0176D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 18547  0176DC  0E42               	movlw	66
 18548  0176DE  243C               	addwf	(btemp+10)^0,w,c
 18549  0176E0  6ED9               	movwf	fsr2l,c
 18550  0176E2  0E00               	movlw	0
 18551  0176E4  203D               	addwfc	(btemp+11)^0,w,c
 18552  0176E6  6EDA               	movwf	fsr2h,c
 18553  0176E8  2ADF               	incf	indf2,f,c
 18554  0176EA                     l1498:
 18555                           
 18556                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18557  0176EA  52E5               	movf	postdec1,f,c
 18558  0176EC  52E5               	movf	postdec1,f,c
 18559  0176EE  52E5               	movf	postdec1,f,c
 18560  0176F0  0012               	return		;funcret
 18561  0176F2                     __end_of_ringBufS_put_dma:
 18562                           	opt callstack 0
 18563                           
 18564 ;; *************** function _atoi *****************
 18565 ;; Defined at:
 18566 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;  s               2  [STACK] PTR const unsigned char 
 18569 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18570 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18571 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18572 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18573 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18574 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18575 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18576 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18577 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18578 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18579 ;; Auto vars:     Size  Location     Type
 18580 ;;  n               2  [STACK] int 
 18581 ;;  neg             2  [STACK] int 
 18582 ;; Return value:  Size  Location     Type
 18583 ;;                  2  [STACK] int 
 18584 ;; Registers used:
 18585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18586 ;; Tracked objects:
 18587 ;;		On entry : 0/5
 18588 ;;		On exit  : 0/0
 18589 ;;		Unchanged: 0/0
 18590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18595 ;;Total ram usage:        0 bytes
 18596 ;; Hardware stack levels used:    1
 18597 ;; Hardware stack levels required when called:    7
 18598 ;; This function calls:
 18599 ;;		_isdigit
 18600 ;;		_isspace
 18601 ;; This function is called by:
 18602 ;;		_vfpfcnvrt
 18603 ;; This function uses a reentrant model
 18604 ;;
 18605                           
 18606                           	psect	text70
 18607  01565E                     __ptext70:
 18608                           	opt callstack 0
 18609  01565E                     _atoi:
 18610                           	opt callstack 0
 18611                           
 18612                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18613  01565E  0E09               	movlw	9
 18614  015660  26E1               	addwf	fsr1l,f,c
 18615  015662  0E00               	movlw	0
 18616  015664  22E2               	addwfc	fsr1h,f,c
 18617                           
 18618                           ;stkvar	_n @ sp[(-9)+5]
 18619                           
 18620                           ;incstack = 0
 18621  015666  0EFC               	movlw	-4
 18622  015668  6AE3               	clrf	plusw1,c
 18623  01566A  0EFD               	movlw	-3
 18624  01566C  6AE3               	clrf	plusw1,c
 18625                           
 18626                           ;stkvar	_neg @ sp[(-9)+7]
 18627  01566E  0EFE               	movlw	-2
 18628  015670  6AE3               	clrf	plusw1,c
 18629  015672  0EFF               	movlw	-1
 18630  015674  6AE3               	clrf	plusw1,c
 18631  015676  D011               	goto	l7842
 18632  015678                     l7840:
 18633                           
 18634                           ;stkvar	_s @ sp[(-9)+-2]
 18635  015678  0EF5               	movlw	-11
 18636  01567A  50E3               	movf	plusw1,w,c
 18637  01567C  0F01               	addlw	1
 18638  01567E  6E32               	movwf	btemp^0,c
 18639  015680  0EF5               	movlw	-11
 18640  015682  0060  F0CB  FFE3   	movff	btemp,plusw1
 18641  015688  6A32               	clrf	btemp^0,c
 18642  01568A  0EF6               	movlw	-10
 18643  01568C  50E3               	movf	plusw1,w,c
 18644  01568E  2032               	addwfc	btemp^0,w,c
 18645  015690  6E32               	movwf	btemp^0,c
 18646  015692  0EF6               	movlw	-10
 18647  015694  0060  F0CB  FFE3   	movff	btemp,plusw1
 18648  01569A                     l7842:
 18649                           
 18650                           ;stkvar	_atoi$5131 @ sp[(-9)+4]
 18651  01569A  0EFB               	movlw	-5
 18652  01569C  6AE3               	clrf	plusw1,c
 18653  01569E  2AE3               	incf	plusw1,f,c
 18654                           
 18655                           ;stkvar	_s @ sp[(-9)+-2]
 18656  0156A0  50E1               	movf	fsr1l,w,c
 18657  0156A2  0FF5               	addlw	-11
 18658  0156A4  6ED9               	movwf	fsr2l,c
 18659  0156A6  50E2               	movf	fsr1h,w,c
 18660  0156A8  6EDA               	movwf	fsr2h,c
 18661  0156AA  0EFF               	movlw	255
 18662  0156AC  22DA               	addwfc	fsr2h,f,c
 18663  0156AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 18664  0156B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 18665  0156BA                     	if	0	;tblptru may be non-zero
 18666  0156BA                     	endif
 18667  0156BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18668  0156BA  0E00               	movlw	low (__mediumconst shr (0+16))
 18669  0156BC  6EF8               	movwf	tblptru,c
 18670  0156BE                     	endif
 18671  0156BE  0008               	tblrd		*
 18672  0156C0  50F5               	movf	tablat,w,c
 18673  0156C2  0A20               	xorlw	32
 18674  0156C4  B4D8               	btfsc	status,2,c
 18675  0156C6  D023               	goto	l7850
 18676  0156C8  0EF7               	movlw	247
 18677  0156CA  6E3C               	movwf	(btemp+10)^0,c
 18678  0156CC  0EFF               	movlw	255
 18679  0156CE  6E3D               	movwf	(btemp+11)^0,c
 18680                           
 18681                           ;stkvar	_s @ sp[(-9)+-2]
 18682  0156D0  50E1               	movf	fsr1l,w,c
 18683  0156D2  0FF5               	addlw	-11
 18684  0156D4  6ED9               	movwf	fsr2l,c
 18685  0156D6  50E2               	movf	fsr1h,w,c
 18686  0156D8  6EDA               	movwf	fsr2h,c
 18687  0156DA  0EFF               	movlw	255
 18688  0156DC  22DA               	addwfc	fsr2h,f,c
 18689  0156DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 18690  0156E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 18691  0156EA                     	if	0	;tblptru may be non-zero
 18692  0156EA                     	endif
 18693  0156EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18694  0156EA  0E00               	movlw	low (__mediumconst shr (0+16))
 18695  0156EC  6EF8               	movwf	tblptru,c
 18696  0156EE                     	endif
 18697  0156EE  0008               	tblrd		*
 18698  0156F0  50F5               	movf	tablat,w,c
 18699  0156F2  6E3A               	movwf	(btemp+8)^0,c
 18700  0156F4  6A3B               	clrf	(btemp+9)^0,c
 18701  0156F6  503C               	movf	(btemp+10)^0,w,c
 18702  0156F8  263A               	addwf	(btemp+8)^0,f,c
 18703  0156FA  503D               	movf	(btemp+11)^0,w,c
 18704  0156FC  223B               	addwfc	(btemp+9)^0,f,c
 18705  0156FE  503B               	movf	(btemp+9)^0,w,c
 18706  015700  E104               	bnz	u7440
 18707  015702  0E05               	movlw	5
 18708  015704  5C3A               	subwf	(btemp+8)^0,w,c
 18709  015706  A0D8               	btfss	status,0,c
 18710  015708  D002               	goto	l7850
 18711  01570A                     u7440:
 18712                           
 18713                           ;stkvar	_atoi$5131 @ sp[(-9)+4]
 18714  01570A  0EFB               	movlw	-5
 18715  01570C  6AE3               	clrf	plusw1,c
 18716  01570E                     l7850:
 18717                           
 18718                           ;stkvar	_atoi$5131 @ sp[(-9)+4]
 18719  01570E  0EFB               	movlw	-5
 18720  015710  50E3               	movf	plusw1,w,c
 18721  015712  6E3C               	movwf	(btemp+10)^0,c
 18722  015714  6A3D               	clrf	(btemp+11)^0,c
 18723                           
 18724                           ;stkvar	_atoi$5130 @ sp[(-9)+2]
 18725  015716  0EF9               	movlw	-7
 18726  015718  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18727  01571E  0EFA               	movlw	-6
 18728  015720  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18729                           
 18730                           ;stkvar	_atoi$5130 @ sp[(-9)+2]
 18731  015726  0EF9               	movlw	-7
 18732  015728  006F FF8C  F032    	movff	plusw1,btemp
 18733  01572E  0EFA               	movlw	-6
 18734  015730  50E3               	movf	plusw1,w,c
 18735  015732  1032               	iorwf	btemp^0,w,c
 18736  015734  B4D8               	btfsc	status,2,c
 18737  015736  D01F               	goto	l7860
 18738  015738  D79F               	goto	l7840
 18739  01573A                     l7856:
 18740  01573A  0E01               	movlw	1
 18741  01573C  6E3C               	movwf	(btemp+10)^0,c
 18742  01573E  0E00               	movlw	0
 18743  015740  6E3D               	movwf	(btemp+11)^0,c
 18744                           
 18745                           ;stkvar	_neg @ sp[(-9)+7]
 18746  015742  0EFE               	movlw	-2
 18747  015744  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18748  01574A  0EFF               	movlw	-1
 18749  01574C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18750  015752                     l7858:
 18751                           
 18752                           ;stkvar	_s @ sp[(-9)+-2]
 18753  015752  0EF5               	movlw	-11
 18754  015754  50E3               	movf	plusw1,w,c
 18755  015756  0F01               	addlw	1
 18756  015758  6E32               	movwf	btemp^0,c
 18757  01575A  0EF5               	movlw	-11
 18758  01575C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18759  015762  6A32               	clrf	btemp^0,c
 18760  015764  0EF6               	movlw	-10
 18761  015766  50E3               	movf	plusw1,w,c
 18762  015768  2032               	addwfc	btemp^0,w,c
 18763  01576A  6E32               	movwf	btemp^0,c
 18764  01576C  0EF6               	movlw	-10
 18765  01576E  0060  F0CB  FFE3   	movff	btemp,plusw1
 18766  015774  D053               	goto	l7866
 18767  015776                     l7860:
 18768                           
 18769                           ;stkvar	_s @ sp[(-9)+-2]
 18770  015776  50E1               	movf	fsr1l,w,c
 18771  015778  0FF5               	addlw	-11
 18772  01577A  6ED9               	movwf	fsr2l,c
 18773  01577C  50E2               	movf	fsr1h,w,c
 18774  01577E  6EDA               	movwf	fsr2h,c
 18775  015780  0EFF               	movlw	255
 18776  015782  22DA               	addwfc	fsr2h,f,c
 18777  015784  006F FF7B FFF6     	movff	postinc2,tblptrl
 18778  01578A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18779  015790                     	if	0	;tblptru may be non-zero
 18780  015790                     	endif
 18781  015790                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18782  015790  0E00               	movlw	low (__mediumconst shr (0+16))
 18783  015792  6EF8               	movwf	tblptru,c
 18784  015794                     	endif
 18785  015794  0008               	tblrd		*
 18786  015796  50F5               	movf	tablat,w,c
 18787  015798  6E3C               	movwf	(btemp+10)^0,c
 18788  01579A  6A3D               	clrf	(btemp+11)^0,c
 18789                           
 18790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18791                           ; Switch size 1, requested type "simple"
 18792                           ; Number of cases is 1, Range of values is 0 to 0
 18793                           ; switch strategies available:
 18794                           ; Name         Instructions Cycles
 18795                           ; simple_byte            4     3 (average)
 18796                           ;	Chosen strategy is simple_byte
 18797  01579C  503D               	movf	(btemp+11)^0,w,c
 18798  01579E  0A00               	xorlw	0	; case 0
 18799  0157A0  A4D8               	btfss	status,2,c
 18800  0157A2  D03C               	goto	l7866
 18801                           
 18802                           ; Switch size 1, requested type "simple"
 18803                           ; Number of cases is 2, Range of values is 43 to 45
 18804                           ; switch strategies available:
 18805                           ; Name         Instructions Cycles
 18806                           ; simple_byte            7     4 (average)
 18807                           ;	Chosen strategy is simple_byte
 18808  0157A4  503C               	movf	(btemp+10)^0,w,c
 18809  0157A6  0A2B               	xorlw	43	; case 43
 18810  0157A8  B4D8               	btfsc	status,2,c
 18811  0157AA  D7D3               	goto	l7858
 18812  0157AC  0A06               	xorlw	6	; case 45
 18813  0157AE  B4D8               	btfsc	status,2,c
 18814  0157B0  D7C4               	goto	l7856
 18815  0157B2  D034               	goto	l7866
 18816  0157B4                     l7862:
 18817                           
 18818                           ;stkvar	_n @ sp[(-9)+5]
 18819  0157B4  0EFC               	movlw	-4
 18820  0157B6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18821  0157BC  0EFD               	movlw	-3
 18822  0157BE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18823  0157C4  0E0A               	movlw	10
 18824  0157C6  023C               	mulwf	(btemp+10)^0,c
 18825  0157C8  006F FFCC  F03A    	movff	prodl,btemp+8
 18826  0157CE  006F FFD0  F03B    	movff	prodh,btemp+9
 18827  0157D4  023D               	mulwf	(btemp+11)^0,c
 18828  0157D6  50F3               	movf	prodl,w,c
 18829  0157D8  263B               	addwf	(btemp+9)^0,f,c
 18830                           
 18831                           ;stkvar	_s @ sp[(-9)+-2]
 18832  0157DA  50E1               	movf	fsr1l,w,c
 18833  0157DC  0FF5               	addlw	-11
 18834  0157DE  6ED9               	movwf	fsr2l,c
 18835  0157E0  50E2               	movf	fsr1h,w,c
 18836  0157E2  6EDA               	movwf	fsr2h,c
 18837  0157E4  0EFF               	movlw	255
 18838  0157E6  22DA               	addwfc	fsr2h,f,c
 18839  0157E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 18840  0157EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 18841  0157F4                     	if	0	;tblptru may be non-zero
 18842  0157F4                     	endif
 18843  0157F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18844  0157F4  0E00               	movlw	low (__mediumconst shr (0+16))
 18845  0157F6  6EF8               	movwf	tblptru,c
 18846  0157F8                     	endif
 18847  0157F8  0008               	tblrd		*
 18848  0157FA  50F5               	movf	tablat,w,c
 18849  0157FC  5E3A               	subwf	(btemp+8)^0,f,c
 18850  0157FE  0E00               	movlw	0
 18851  015800  5A3B               	subwfb	(btemp+9)^0,f,c
 18852  015802  0E30               	movlw	48
 18853  015804  263A               	addwf	(btemp+8)^0,f,c
 18854  015806  0E00               	movlw	0
 18855  015808  223B               	addwfc	(btemp+9)^0,f,c
 18856                           
 18857                           ;stkvar	_n @ sp[(-9)+5]
 18858  01580A  0EFC               	movlw	-4
 18859  01580C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18860  015812  0EFD               	movlw	-3
 18861  015814  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18862  01581A  D79B               	goto	l7858
 18863  01581C                     l7866:
 18864  01581C  0ED0               	movlw	208
 18865  01581E  6E3C               	movwf	(btemp+10)^0,c
 18866  015820  0EFF               	movlw	255
 18867  015822  6E3D               	movwf	(btemp+11)^0,c
 18868                           
 18869                           ;stkvar	_s @ sp[(-9)+-2]
 18870  015824  50E1               	movf	fsr1l,w,c
 18871  015826  0FF5               	addlw	-11
 18872  015828  6ED9               	movwf	fsr2l,c
 18873  01582A  50E2               	movf	fsr1h,w,c
 18874  01582C  6EDA               	movwf	fsr2h,c
 18875  01582E  0EFF               	movlw	255
 18876  015830  22DA               	addwfc	fsr2h,f,c
 18877  015832  006F FF7B FFF6     	movff	postinc2,tblptrl
 18878  015838  006F FF77 FFF7     	movff	postdec2,tblptrh
 18879  01583E                     	if	0	;tblptru may be non-zero
 18880  01583E                     	endif
 18881  01583E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18882  01583E  0E00               	movlw	low (__mediumconst shr (0+16))
 18883  015840  6EF8               	movwf	tblptru,c
 18884  015842                     	endif
 18885  015842  0008               	tblrd		*
 18886  015844  50F5               	movf	tablat,w,c
 18887  015846  6E3A               	movwf	(btemp+8)^0,c
 18888  015848  6A3B               	clrf	(btemp+9)^0,c
 18889  01584A  503C               	movf	(btemp+10)^0,w,c
 18890  01584C  263A               	addwf	(btemp+8)^0,f,c
 18891  01584E  503D               	movf	(btemp+11)^0,w,c
 18892  015850  223B               	addwfc	(btemp+9)^0,f,c
 18893  015852  503B               	movf	(btemp+9)^0,w,c
 18894  015854  E106               	bnz	u7460
 18895  015856  0E0A               	movlw	10
 18896  015858  5C3A               	subwf	(btemp+8)^0,w,c
 18897  01585A  B0D8               	btfsc	status,0,c
 18898  01585C  D002               	goto	u7460
 18899  01585E  0E01               	movlw	1
 18900  015860  D001               	goto	u7470
 18901  015862                     u7460:
 18902  015862  0E00               	movlw	0
 18903  015864                     u7470:
 18904  015864  6E3C               	movwf	(btemp+10)^0,c
 18905  015866  6A3D               	clrf	(btemp+11)^0,c
 18906                           
 18907                           ;stkvar	_atoi$5132 @ sp[(-9)+0]
 18908  015868  0EF7               	movlw	-9
 18909  01586A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18910  015870  0EF8               	movlw	-8
 18911  015872  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18912                           
 18913                           ;stkvar	_atoi$5132 @ sp[(-9)+0]
 18914  015878  0EF7               	movlw	-9
 18915  01587A  006F FF8C  F032    	movff	plusw1,btemp
 18916  015880  0EF8               	movlw	-8
 18917  015882  50E3               	movf	plusw1,w,c
 18918  015884  1032               	iorwf	btemp^0,w,c
 18919  015886  A4D8               	btfss	status,2,c
 18920  015888  D795               	goto	l7862
 18921                           
 18922                           ;stkvar	_neg @ sp[(-9)+7]
 18923  01588A  0EFE               	movlw	-2
 18924  01588C  006F FF8C  F032    	movff	plusw1,btemp
 18925  015892  0EFF               	movlw	-1
 18926  015894  50E3               	movf	plusw1,w,c
 18927  015896  1032               	iorwf	btemp^0,w,c
 18928  015898  A4D8               	btfss	status,2,c
 18929  01589A  D00E               	goto	l7876
 18930                           
 18931                           ;stkvar	_n @ sp[(-9)+5]
 18932  01589C  0EFC               	movlw	-4
 18933  01589E  006F FF8C  F032    	movff	plusw1,btemp
 18934  0158A4  1E32               	comf	btemp^0,f,c
 18935  0158A6  0EFD               	movlw	-3
 18936  0158A8  006F FF8C  F033    	movff	plusw1,btemp+1
 18937  0158AE  1E33               	comf	(btemp+1)^0,f,c
 18938  0158B0  2A32               	incf	btemp^0,f,c
 18939  0158B2  B4D8               	btfsc	status,2,c
 18940  0158B4  2A33               	incf	(btemp+1)^0,f,c
 18941  0158B6  D008               	goto	l2819
 18942  0158B8                     l7876:
 18943                           
 18944                           ;stkvar	_n @ sp[(-9)+5]
 18945  0158B8  0EFC               	movlw	-4
 18946  0158BA  006F FF8C  F032    	movff	plusw1,btemp
 18947  0158C0  0EFD               	movlw	-3
 18948  0158C2  006F FF8C  F033    	movff	plusw1,btemp+1
 18949  0158C8                     l2819:
 18950                           
 18951                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 18952  0158C8  0EF5               	movlw	245
 18953  0158CA  26E1               	addwf	fsr1l,f,c
 18954  0158CC  0EFF               	movlw	255
 18955  0158CE  22E2               	addwfc	fsr1h,f,c
 18956  0158D0  0012               	return		;funcret
 18957  0158D2                     __end_of_atoi:
 18958                           	opt callstack 0
 18959                           
 18960 ;; *************** function _isspace *****************
 18961 ;; Defined at:
 18962 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 18963 ;; Parameters:    Size  Location     Type
 18964 ;;  c               2  [STACK] int 
 18965 ;; Auto vars:     Size  Location     Type
 18966 ;;		None
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  2  [STACK] int 
 18969 ;; Registers used:
 18970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18980 ;;Total ram usage:        0 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:    6
 18983 ;; This function calls:
 18984 ;;		Nothing
 18985 ;; This function is called by:
 18986 ;;		_atoi
 18987 ;; This function uses a reentrant model
 18988 ;;
 18989                           
 18990                           	psect	text71
 18991  01822A                     __ptext71:
 18992                           	opt callstack 0
 18993  01822A                     _isspace:
 18994                           	opt callstack 0
 18995                           
 18996                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18997  01822A  52E6               	movf	postinc1,f,c
 18998                           
 18999                           ;stkvar	_isspace$5170 @ sp[(-1)+0]
 19000                           
 19001                           ;incstack = 0
 19002  01822C  0EFF               	movlw	-1
 19003  01822E  6AE3               	clrf	plusw1,c
 19004  018230  2AE3               	incf	plusw1,f,c
 19005                           
 19006                           ;stkvar	_c @ sp[(-1)+-2]
 19007  018232  0EFD               	movlw	-3
 19008  018234  006F FF8C  F032    	movff	plusw1,btemp
 19009  01823A  0E20               	movlw	32
 19010  01823C  1832               	xorwf	btemp^0,w,c
 19011  01823E  E104               	bnz	u6430
 19012  018240  0EFE               	movlw	-2
 19013  018242  50E3               	movf	plusw1,w,c
 19014  018244  B4D8               	btfsc	status,2,c
 19015  018246  D012               	goto	l7326
 19016  018248                     u6430:
 19017                           
 19018                           ;stkvar	_c @ sp[(-1)+-2]
 19019  018248  0EFD               	movlw	-3
 19020  01824A  50E3               	movf	plusw1,w,c
 19021  01824C  0FF7               	addlw	247
 19022  01824E  6E3C               	movwf	(btemp+10)^0,c
 19023  018250  0EFE               	movlw	-2
 19024  018252  006F FF8C  F03D    	movff	plusw1,btemp+11
 19025  018258  0EFF               	movlw	255
 19026  01825A  223D               	addwfc	(btemp+11)^0,f,c
 19027  01825C  503D               	movf	(btemp+11)^0,w,c
 19028  01825E  E104               	bnz	u6440
 19029  018260  0E05               	movlw	5
 19030  018262  5C3C               	subwf	(btemp+10)^0,w,c
 19031  018264  A0D8               	btfss	status,0,c
 19032  018266  D002               	goto	l7326
 19033  018268                     u6440:
 19034                           
 19035                           ;stkvar	_isspace$5170 @ sp[(-1)+0]
 19036  018268  0EFF               	movlw	-1
 19037  01826A  6AE3               	clrf	plusw1,c
 19038  01826C                     l7326:
 19039                           
 19040                           ;stkvar	_isspace$5170 @ sp[(-1)+0]
 19041  01826C  0EFF               	movlw	-1
 19042  01826E  50E3               	movf	plusw1,w,c
 19043  018270  6E32               	movwf	btemp^0,c
 19044  018272  6A33               	clrf	(btemp+1)^0,c
 19045                           
 19046                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19047  018274  52E5               	movf	postdec1,f,c
 19048  018276  52E5               	movf	postdec1,f,c
 19049  018278  52E5               	movf	postdec1,f,c
 19050  01827A  0012               	return		;funcret
 19051  01827C                     __end_of_isspace:
 19052                           	opt callstack 0
 19053                           
 19054 ;; *************** function _isdigit *****************
 19055 ;; Defined at:
 19056 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19057 ;; Parameters:    Size  Location     Type
 19058 ;;  c               2  [STACK] int 
 19059 ;; Auto vars:     Size  Location     Type
 19060 ;;		None
 19061 ;; Return value:  Size  Location     Type
 19062 ;;                  2  [STACK] int 
 19063 ;; Registers used:
 19064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19074 ;;Total ram usage:        0 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; Hardware stack levels required when called:    6
 19077 ;; This function calls:
 19078 ;;		Nothing
 19079 ;; This function is called by:
 19080 ;;		_vfpfcnvrt
 19081 ;;		_atoi
 19082 ;; This function uses a reentrant model
 19083 ;;
 19084                           
 19085                           	psect	text72
 19086  0186CE                     __ptext72:
 19087                           	opt callstack 0
 19088  0186CE                     _isdigit:
 19089                           	opt callstack 18
 19090                           
 19091                           ;stkvar	_c @ sp[(0)+-2]
 19092                           
 19093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19094                           ;incstack = 0
 19095  0186CE  0EFE               	movlw	-2
 19096  0186D0  50E3               	movf	plusw1,w,c
 19097  0186D2  0FD0               	addlw	208
 19098  0186D4  6E3C               	movwf	(btemp+10)^0,c
 19099  0186D6  0EFF               	movlw	-1
 19100  0186D8  006F FF8C  F03D    	movff	plusw1,btemp+11
 19101  0186DE  0EFF               	movlw	255
 19102  0186E0  223D               	addwfc	(btemp+11)^0,f,c
 19103  0186E2  503D               	movf	(btemp+11)^0,w,c
 19104  0186E4  E106               	bnz	u5390
 19105  0186E6  0E0A               	movlw	10
 19106  0186E8  5C3C               	subwf	(btemp+10)^0,w,c
 19107  0186EA  B0D8               	btfsc	status,0,c
 19108  0186EC  D002               	goto	u5390
 19109  0186EE  0E01               	movlw	1
 19110  0186F0  D001               	goto	u5400
 19111  0186F2                     u5390:
 19112  0186F2  0E00               	movlw	0
 19113  0186F4                     u5400:
 19114  0186F4  6E32               	movwf	btemp^0,c
 19115  0186F6  6A33               	clrf	(btemp+1)^0,c
 19116                           
 19117                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19118  0186F8  52E5               	movf	postdec1,f,c
 19119  0186FA  52E5               	movf	postdec1,f,c
 19120  0186FC  0012               	return		;funcret
 19121  0186FE                     __end_of_isdigit:
 19122                           	opt callstack 0
 19123                           
 19124 ;; *************** function _set_vterm *****************
 19125 ;; Defined at:
 19126 ;;		line 107 in file "mconfig.c"
 19127 ;; Parameters:    Size  Location     Type
 19128 ;;  vterm           1  [STACK] const unsigned char 
 19129 ;; Auto vars:     Size  Location     Type
 19130 ;;		None
 19131 ;; Return value:  Size  Location     Type
 19132 ;;                  1  [STACK] unsigned char 
 19133 ;; Registers used:
 19134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19135 ;; Tracked objects:
 19136 ;;		On entry : 0/1
 19137 ;;		On exit  : 3F/5
 19138 ;;		Unchanged: 0/0
 19139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19144 ;;Total ram usage:        0 bytes
 19145 ;; Hardware stack levels used:    1
 19146 ;; Hardware stack levels required when called:    6
 19147 ;; This function calls:
 19148 ;;		Nothing
 19149 ;; This function is called by:
 19150 ;;		_main
 19151 ;;		_check_help
 19152 ;; This function uses a reentrant model
 19153 ;;
 19154                           
 19155                           	psect	text73
 19156  018CA8                     __ptext73:
 19157                           	opt callstack 0
 19158  018CA8                     _set_vterm:
 19159                           	opt callstack 24
 19160                           
 19161                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19162                           ;stkvar	_vterm @ sp[(0)+-1]
 19163                           
 19164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19165                           ;incstack = 0
 19166  018CA8  0EFF               	movlw	-1
 19167  018CAA  006F FF8C  F03D    	movff	plusw1,btemp+11
 19168  018CB0  0E03               	movlw	3
 19169  018CB2  163D               	andwf	(btemp+11)^0,f,c
 19170  018CB4  0105               	movlb	5	; () banked
 19171  018CB6  51D8               	movf	(_D+216)& (0+255),w,b
 19172  018CB8  183D               	xorwf	(btemp+11)^0,w,c
 19173  018CBA  0BFE               	andlw	-2
 19174  018CBC  183D               	xorwf	(btemp+11)^0,w,c
 19175  018CBE  6FD8               	movwf	(_D+216)& (0+255),b
 19176                           
 19177                           ; BSR set to: 5
 19178                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19179  018CC0  52E5               	movf	postdec1,f,c
 19180  018CC2  0012               	return		;funcret
 19181  018CC4                     __end_of_set_vterm:
 19182                           	opt callstack 0
 19183                           
 19184 ;; *************** function _set_temp_display_help *****************
 19185 ;; Defined at:
 19186 ;;		line 211 in file "mconfig.c"
 19187 ;; Parameters:    Size  Location     Type
 19188 ;;  new_response    1  [STACK] const enum E16501
 19189 ;; Auto vars:     Size  Location     Type
 19190 ;;		None
 19191 ;; Return value:  Size  Location     Type
 19192 ;;                  1  [STACK] enum E16501
 19193 ;; Registers used:
 19194 ;;		wreg, fsr1l, fsr1h
 19195 ;; Tracked objects:
 19196 ;;		On entry : 0/5
 19197 ;;		On exit  : 3F/2
 19198 ;;		Unchanged: 0/0
 19199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19204 ;;Total ram usage:        0 bytes
 19205 ;; Hardware stack levels used:    1
 19206 ;; Hardware stack levels required when called:    6
 19207 ;; This function calls:
 19208 ;;		Nothing
 19209 ;; This function is called by:
 19210 ;;		_check_help
 19211 ;; This function uses a reentrant model
 19212 ;;
 19213                           
 19214                           	psect	text74
 19215  018DAA                     __ptext74:
 19216                           	opt callstack 0
 19217  018DAA                     _set_temp_display_help:
 19218                           	opt callstack 23
 19219                           
 19220                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19221                           
 19222                           ; BSR set to: 5
 19223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19224                           ;incstack = 0
 19225  018DAA  0102               	movlb	2	; () banked
 19226  018DAC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19227                           
 19228                           ; BSR set to: 2
 19229                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19230                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19231  018DAE  0EFF               	movlw	-1
 19232  018DB0  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19233                           
 19234                           ; BSR set to: 2
 19235                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19236  018DB6  52E5               	movf	postdec1,f,c
 19237  018DB8  0012               	return		;funcret
 19238  018DBA                     __end_of_set_temp_display_help:
 19239                           	opt callstack 0
 19240                           
 19241 ;; *************** function _set_display_info *****************
 19242 ;; Defined at:
 19243 ;;		line 200 in file "mconfig.c"
 19244 ;; Parameters:    Size  Location     Type
 19245 ;;  new_response    1  [STACK] const enum E16501
 19246 ;; Auto vars:     Size  Location     Type
 19247 ;;		None
 19248 ;; Return value:  Size  Location     Type
 19249 ;;                  1  [STACK] enum E16986
 19250 ;; Registers used:
 19251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19252 ;; Tracked objects:
 19253 ;;		On entry : 0/39
 19254 ;;		On exit  : 0/0
 19255 ;;		Unchanged: 0/0
 19256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19261 ;;Total ram usage:        0 bytes
 19262 ;; Hardware stack levels used:    1
 19263 ;; Hardware stack levels required when called:    7
 19264 ;; This function calls:
 19265 ;;		_TimerDone
 19266 ;; This function is called by:
 19267 ;;		_main
 19268 ;;		_check_help
 19269 ;; This function uses a reentrant model
 19270 ;;
 19271                           
 19272                           	psect	text75
 19273  018C32                     __ptext75:
 19274                           	opt callstack 0
 19275  018C32                     _set_display_info:
 19276                           	opt callstack 23
 19277                           
 19278                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19279                           
 19280                           ; BSR set to: 2
 19281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19282                           ;incstack = 0
 19283  018C32  0E07               	movlw	7
 19284  018C34  6EE6               	movwf	postinc1,c
 19285  018C36  EC93  F0C5         	call	_TimerDone	;wreg free
 19286  018C3A  5032               	movf	btemp^0,w,c
 19287  018C3C  B4D8               	btfsc	status,2,c
 19288  018C3E  D006               	goto	l1635
 19289                           
 19290                           ;mconfig.c: 205:   old_info = V.response.info;
 19291  018C40  0102               	movlb	2	; () banked
 19292  018C42  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19293                           
 19294                           ; BSR set to: 2
 19295                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19296                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19297  018C44  0EFF               	movlw	-1
 19298  018C46  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19299  018C4C                     l1635:
 19300                           
 19301                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19302  018C4C  52E5               	movf	postdec1,f,c
 19303  018C4E  0012               	return		;funcret
 19304  018C50                     __end_of_set_display_info:
 19305                           	opt callstack 0
 19306                           
 19307 ;; *************** function _mode_lamp_dim *****************
 19308 ;; Defined at:
 19309 ;;		line 13 in file "mconfig.c"
 19310 ;; Parameters:    Size  Location     Type
 19311 ;;  level           2  [STACK] const unsigned short 
 19312 ;; Auto vars:     Size  Location     Type
 19313 ;;		None
 19314 ;; Return value:  Size  Location     Type
 19315 ;;                  1  [STACK] void 
 19316 ;; Registers used:
 19317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19318 ;; Tracked objects:
 19319 ;;		On entry : 0/2
 19320 ;;		On exit  : 0/0
 19321 ;;		Unchanged: 0/0
 19322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19327 ;;Total ram usage:        0 bytes
 19328 ;; Hardware stack levels used:    1
 19329 ;; Hardware stack levels required when called:    7
 19330 ;; This function calls:
 19331 ;;		_PWM8_LoadDutyValue
 19332 ;; This function is called by:
 19333 ;;		_main
 19334 ;;		_check_help
 19335 ;; This function uses a reentrant model
 19336 ;;
 19337                           
 19338                           	psect	text76
 19339  018CFA                     __ptext76:
 19340                           	opt callstack 0
 19341  018CFA                     _mode_lamp_dim:
 19342                           	opt callstack 23
 19343                           
 19344                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19345                           ;stkvar	_level @ sp[(0)+-2]
 19346                           
 19347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19348                           ;incstack = 0
 19349  018CFA  0EFE               	movlw	-2
 19350  018CFC  006F FF8F FFE6     	movff	plusw1,postinc1
 19351  018D02  006F FF8F FFE6     	movff	plusw1,postinc1
 19352  018D08  EC33  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19353                           
 19354                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19355  018D0C  52E5               	movf	postdec1,f,c
 19356  018D0E  52E5               	movf	postdec1,f,c
 19357  018D10  0012               	return		;funcret
 19358  018D12                     __end_of_mode_lamp_dim:
 19359                           	opt callstack 0
 19360                           
 19361 ;; *************** function _mode_lamp_bright *****************
 19362 ;; Defined at:
 19363 ;;		line 18 in file "mconfig.c"
 19364 ;; Parameters:    Size  Location     Type
 19365 ;;		None
 19366 ;; Auto vars:     Size  Location     Type
 19367 ;;		None
 19368 ;; Return value:  Size  Location     Type
 19369 ;;                  1  [STACK] void 
 19370 ;; Registers used:
 19371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19372 ;; Tracked objects:
 19373 ;;		On entry : 0/2
 19374 ;;		On exit  : 0/0
 19375 ;;		Unchanged: 0/0
 19376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19381 ;;Total ram usage:        0 bytes
 19382 ;; Hardware stack levels used:    1
 19383 ;; Hardware stack levels required when called:    7
 19384 ;; This function calls:
 19385 ;;		_PWM8_LoadDutyValue
 19386 ;; This function is called by:
 19387 ;;		_check_help
 19388 ;; This function uses a reentrant model
 19389 ;;
 19390                           
 19391                           	psect	text77
 19392  018DC8                     __ptext77:
 19393                           	opt callstack 0
 19394  018DC8                     _mode_lamp_bright:
 19395                           	opt callstack 22
 19396                           
 19397                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19398                           
 19399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19400                           ;incstack = 0
 19401  018DC8  0E2C               	movlw	44
 19402  018DCA  6EE6               	movwf	postinc1,c
 19403  018DCC  0E01               	movlw	1
 19404  018DCE  6EE6               	movwf	postinc1,c
 19405  018DD0  EC33  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19406                           
 19407                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19408  018DD4  0012               	return		;funcret
 19409  018DD6                     __end_of_mode_lamp_bright:
 19410                           	opt callstack 0
 19411                           
 19412 ;; *************** function _PWM8_LoadDutyValue *****************
 19413 ;; Defined at:
 19414 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19415 ;; Parameters:    Size  Location     Type
 19416 ;;  dutyValue       2  [STACK] unsigned short 
 19417 ;; Auto vars:     Size  Location     Type
 19418 ;;		None
 19419 ;; Return value:  Size  Location     Type
 19420 ;;                  1  [STACK] void 
 19421 ;; Registers used:
 19422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19423 ;; Tracked objects:
 19424 ;;		On entry : 0/2
 19425 ;;		On exit  : 0/0
 19426 ;;		Unchanged: 0/0
 19427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19432 ;;Total ram usage:        0 bytes
 19433 ;; Hardware stack levels used:    1
 19434 ;; Hardware stack levels required when called:    6
 19435 ;; This function calls:
 19436 ;;		Nothing
 19437 ;; This function is called by:
 19438 ;;		_mode_lamp_dim
 19439 ;;		_mode_lamp_bright
 19440 ;; This function uses a reentrant model
 19441 ;;
 19442                           
 19443                           	psect	text78
 19444  018466                     __ptext78:
 19445                           	opt callstack 0
 19446  018466                     _PWM8_LoadDutyValue:
 19447                           	opt callstack 23
 19448                           
 19449                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19450                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19451                           
 19452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19453                           ;incstack = 0
 19454  018466  0EFE               	movlw	-2
 19455  018468  006F FF8C  F03C    	movff	plusw1,btemp+10
 19456  01846E  0EFF               	movlw	-1
 19457  018470  006F FF8C  F03D    	movff	plusw1,btemp+11
 19458  018476  90D8               	bcf	status,0,c
 19459  018478  323D               	rrcf	(btemp+11)^0,f,c
 19460  01847A  323C               	rrcf	(btemp+10)^0,f,c
 19461  01847C  90D8               	bcf	status,0,c
 19462  01847E  323D               	rrcf	(btemp+11)^0,f,c
 19463  018480  323C               	rrcf	(btemp+10)^0,f,c
 19464  018482  503C               	movf	(btemp+10)^0,w,c
 19465  018484  6E61               	movwf	97,c	;volatile
 19466                           
 19467                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19468                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19469  018486  0EFE               	movlw	-2
 19470  018488  006F FF8C  F03D    	movff	plusw1,btemp+11
 19471  01848E  0E03               	movlw	3
 19472  018490  163D               	andwf	(btemp+11)^0,f,c
 19473  018492  0E06               	movlw	6
 19474  018494  6E32               	movwf	btemp^0,c
 19475  018496                     u7925:
 19476  018496  90D8               	bcf	status,0,c
 19477  018498  363D               	rlcf	(btemp+11)^0,f,c
 19478  01849A  2E32               	decfsz	btemp^0,f,c
 19479  01849C  D7FC               	goto	u7925
 19480  01849E  503D               	movf	(btemp+11)^0,w,c
 19481  0184A0  6E60               	movwf	96,c	;volatile
 19482                           
 19483                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19484  0184A2  52E5               	movf	postdec1,f,c
 19485  0184A4  52E5               	movf	postdec1,f,c
 19486  0184A6  0012               	return		;funcret
 19487  0184A8                     __end_of_PWM8_LoadDutyValue:
 19488                           	opt callstack 0
 19489                           
 19490 ;; *************** function _help_button *****************
 19491 ;; Defined at:
 19492 ;;		line 26 in file "mconfig.c"
 19493 ;; Parameters:    Size  Location     Type
 19494 ;;		None
 19495 ;; Auto vars:     Size  Location     Type
 19496 ;;		None
 19497 ;; Return value:  Size  Location     Type
 19498 ;;                  1  [STACK] _Bool 
 19499 ;; Registers used:
 19500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19501 ;; Tracked objects:
 19502 ;;		On entry : 0/2
 19503 ;;		On exit  : 0/0
 19504 ;;		Unchanged: 0/0
 19505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19510 ;;Total ram usage:        0 bytes
 19511 ;; Hardware stack levels used:    1
 19512 ;; Hardware stack levels required when called:    7
 19513 ;; This function calls:
 19514 ;;		_StartTimer
 19515 ;;		_TimerDone
 19516 ;; This function is called by:
 19517 ;;		_check_help
 19518 ;; This function uses a reentrant model
 19519 ;;
 19520                           
 19521                           	psect	text79
 19522  018562                     __ptext79:
 19523                           	opt callstack 0
 19524  018562                     _help_button:
 19525                           	opt callstack 22
 19526                           
 19527                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19528                           
 19529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19530                           ;incstack = 0
 19531  018562  B0CB               	btfsc	203,0,c	;volatile
 19532  018564  D00C               	goto	l1578
 19533                           
 19534                           ;mconfig.c: 29:   V.help = 1;
 19535  018566  0102               	movlb	2	; () banked
 19536  018568  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19537                           
 19538                           ; BSR set to: 2
 19539                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19540  01856A  0E08               	movlw	8
 19541  01856C  6EE6               	movwf	postinc1,c
 19542  01856E  EC93  F0C5         	call	_TimerDone	;wreg free
 19543  018572  5032               	movf	btemp^0,w,c
 19544  018574  B4D8               	btfsc	status,2,c
 19545  018576  D003               	goto	l1578
 19546                           
 19547                           ;mconfig.c: 31:    return 1;
 19548  018578  0E01               	movlw	1
 19549  01857A  6E32               	movwf	btemp^0,c
 19550  01857C  0012               	return	
 19551  01857E                     l1578:
 19552                           
 19553                           ;mconfig.c: 34:  if (!V.help)
 19554  01857E  0102               	movlb	2	; () banked
 19555  018580  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19556  018582  D008               	goto	l8800
 19557                           
 19558                           ; BSR set to: 2
 19559                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19560  018584  0E2C               	movlw	44
 19561  018586  6EE6               	movwf	postinc1,c
 19562  018588  0E01               	movlw	1
 19563  01858A  6EE6               	movwf	postinc1,c
 19564  01858C  0E08               	movlw	8
 19565  01858E  6EE6               	movwf	postinc1,c
 19566  018590  EC93  F0C2         	call	_StartTimer	;wreg free
 19567  018594                     l8800:
 19568                           
 19569                           ;mconfig.c: 37:  return 0;
 19570  018594  0E00               	movlw	0
 19571  018596  6E32               	movwf	btemp^0,c
 19572                           
 19573                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19574  018598  0012               	return		;funcret
 19575  01859A                     __end_of_help_button:
 19576                           	opt callstack 0
 19577                           
 19578 ;; *************** function _TimerDone *****************
 19579 ;; Defined at:
 19580 ;;		line 20 in file "timers.c"
 19581 ;; Parameters:    Size  Location     Type
 19582 ;;  timer           1  [STACK] const unsigned char 
 19583 ;; Auto vars:     Size  Location     Type
 19584 ;;		None
 19585 ;; Return value:  Size  Location     Type
 19586 ;;                  1  [STACK] _Bool 
 19587 ;; Registers used:
 19588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19589 ;; Tracked objects:
 19590 ;;		On entry : 0/39
 19591 ;;		On exit  : 0/0
 19592 ;;		Unchanged: 0/0
 19593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19598 ;;Total ram usage:        0 bytes
 19599 ;; Hardware stack levels used:    1
 19600 ;; Hardware stack levels required when called:    6
 19601 ;; This function calls:
 19602 ;;		Nothing
 19603 ;; This function is called by:
 19604 ;;		_main
 19605 ;;		_WaitMs
 19606 ;;		_help_button
 19607 ;;		_check_help
 19608 ;;		_set_display_info
 19609 ;; This function uses a reentrant model
 19610 ;;
 19611                           
 19612                           	psect	text80
 19613  018B26                     __ptext80:
 19614                           	opt callstack 0
 19615  018B26                     _TimerDone:
 19616                           	opt callstack 23
 19617                           
 19618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19619                           ;incstack = 0
 19620  018B26  0004               	clrwdt		;# 
 19621                           
 19622                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19623                           ;stkvar	_timer @ sp[(0)+-1]
 19624  018B28  0EFF               	movlw	-1
 19625  018B2A  50E3               	movf	plusw1,w,c
 19626  018B2C  0D02               	mullw	2
 19627  018B2E  50F3               	movf	243,w,c
 19628  018B30  0F89               	addlw	low _tickCount
 19629  018B32  6ED9               	movwf	fsr2l,c
 19630  018B34  6ADA               	clrf	fsr2h,c
 19631  018B36  50DE               	movf	postinc2,w,c
 19632  018B38  10DE               	iorwf	postinc2,w,c
 19633  018B3A  A4D8               	btfss	status,2,c
 19634  018B3C  D002               	goto	l8162
 19635                           
 19636                           ;timers.c: 24:   return 1;
 19637  018B3E  0E01               	movlw	1
 19638  018B40  D001               	goto	L20
 19639  018B42                     l8162:
 19640                           
 19641                           ;timers.c: 26:  return 0;
 19642  018B42  0E00               	movlw	0
 19643  018B44                     L20:
 19644  018B44  6E32               	movwf	btemp^0,c
 19645                           
 19646                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19647  018B46  52E5               	movf	postdec1,f,c
 19648  018B48  0012               	return		;funcret
 19649  018B4A                     __end_of_TimerDone:
 19650                           	opt callstack 0
 19651                           
 19652 ;; *************** function _StartTimer *****************
 19653 ;; Defined at:
 19654 ;;		line 12 in file "timers.c"
 19655 ;; Parameters:    Size  Location     Type
 19656 ;;  timer           1  [STACK] const unsigned char 
 19657 ;;  count           2  [STACK] const unsigned short 
 19658 ;; Auto vars:     Size  Location     Type
 19659 ;;		None
 19660 ;; Return value:  Size  Location     Type
 19661 ;;                  1  [STACK] void 
 19662 ;; Registers used:
 19663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19664 ;; Tracked objects:
 19665 ;;		On entry : 0/5
 19666 ;;		On exit  : 0/0
 19667 ;;		Unchanged: 0/0
 19668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;Total ram usage:        0 bytes
 19674 ;; Hardware stack levels used:    1
 19675 ;; Hardware stack levels required when called:    6
 19676 ;; This function calls:
 19677 ;;		Nothing
 19678 ;; This function is called by:
 19679 ;;		_main
 19680 ;;		_WaitMs
 19681 ;;		_help_button
 19682 ;;		_check_help
 19683 ;; This function uses a reentrant model
 19684 ;;
 19685                           
 19686                           	psect	text81
 19687  018526                     __ptext81:
 19688                           	opt callstack 0
 19689  018526                     _StartTimer:
 19690                           	opt callstack 21
 19691                           
 19692                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19693                           ;stkvar	_count @ sp[(0)+-3]
 19694                           
 19695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19696                           ;incstack = 0
 19697  018526  0EFD               	movlw	-3
 19698  018528  006F FF8C  F03C    	movff	plusw1,btemp+10
 19699  01852E  0EFE               	movlw	-2
 19700  018530  006F FF8C  F03D    	movff	plusw1,btemp+11
 19701  018536  90D8               	bcf	status,0,c
 19702  018538  343C               	rlcf	(btemp+10)^0,w,c
 19703  01853A  6E3A               	movwf	(btemp+8)^0,c
 19704  01853C  343D               	rlcf	(btemp+11)^0,w,c
 19705  01853E  6E3B               	movwf	(btemp+9)^0,c
 19706                           
 19707                           ;stkvar	_timer @ sp[(0)+-1]
 19708  018540  0EFF               	movlw	-1
 19709  018542  50E3               	movf	plusw1,w,c
 19710  018544  0D02               	mullw	2
 19711  018546  50F3               	movf	243,w,c
 19712  018548  0F89               	addlw	low _tickCount
 19713  01854A  6ED9               	movwf	fsr2l,c
 19714  01854C  6ADA               	clrf	fsr2h,c
 19715  01854E  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19716  018554  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19717                           
 19718                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19719  01855A  52E5               	movf	postdec1,f,c
 19720  01855C  52E5               	movf	postdec1,f,c
 19721  01855E  52E5               	movf	postdec1,f,c
 19722  018560  0012               	return		;funcret
 19723  018562                     __end_of_StartTimer:
 19724                           	opt callstack 0
 19725                           
 19726 ;; *************** function _display_info *****************
 19727 ;; Defined at:
 19728 ;;		line 190 in file "mconfig.c"
 19729 ;; Parameters:    Size  Location     Type
 19730 ;;		None
 19731 ;; Auto vars:     Size  Location     Type
 19732 ;;		None
 19733 ;; Return value:  Size  Location     Type
 19734 ;;                  1  [STACK] enum E16501
 19735 ;; Registers used:
 19736 ;;		btemp
 19737 ;; Tracked objects:
 19738 ;;		On entry : 0/2
 19739 ;;		On exit  : 0/0
 19740 ;;		Unchanged: 0/0
 19741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19746 ;;Total ram usage:        0 bytes
 19747 ;; Hardware stack levels used:    1
 19748 ;; Hardware stack levels required when called:    6
 19749 ;; This function calls:
 19750 ;;		Nothing
 19751 ;; This function is called by:
 19752 ;;		_check_help
 19753 ;; This function uses a reentrant model
 19754 ;;
 19755                           
 19756                           	psect	text82
 19757  018E2A                     __ptext82:
 19758                           	opt callstack 0
 19759  018E2A                     _display_info:
 19760                           	opt callstack 23
 19761                           
 19762                           ;mconfig.c: 192:  return V.response.info;
 19763                           
 19764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19765                           ;incstack = 0
 19766  018E2A  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19767                           
 19768                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19769  018E30  0012               	return		;funcret
 19770  018E32                     __end_of_display_info:
 19771                           	opt callstack 0
 19772                           
 19773 ;; *************** function _display_help *****************
 19774 ;; Defined at:
 19775 ;;		line 195 in file "mconfig.c"
 19776 ;; Parameters:    Size  Location     Type
 19777 ;;		None
 19778 ;; Auto vars:     Size  Location     Type
 19779 ;;		None
 19780 ;; Return value:  Size  Location     Type
 19781 ;;                  1  [STACK] enum E16501
 19782 ;; Registers used:
 19783 ;;		btemp
 19784 ;; Tracked objects:
 19785 ;;		On entry : 3F/2
 19786 ;;		On exit  : 0/0
 19787 ;;		Unchanged: 0/0
 19788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19793 ;;Total ram usage:        0 bytes
 19794 ;; Hardware stack levels used:    1
 19795 ;; Hardware stack levels required when called:    6
 19796 ;; This function calls:
 19797 ;;		Nothing
 19798 ;; This function is called by:
 19799 ;;		_check_help
 19800 ;; This function uses a reentrant model
 19801 ;;
 19802                           
 19803                           	psect	text83
 19804  018E32                     __ptext83:
 19805                           	opt callstack 0
 19806  018E32                     _display_help:
 19807                           	opt callstack 23
 19808                           
 19809                           ;mconfig.c: 197:  return V.response.help_temp;
 19810                           
 19811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19812                           ;incstack = 0
 19813  018E32  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19814                           
 19815                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19816  018E38  0012               	return		;funcret
 19817  018E3A                     __end_of_display_help:
 19818                           	opt callstack 0
 19819                           
 19820 ;; *************** function _check_adc_scan *****************
 19821 ;; Defined at:
 19822 ;;		line 56 in file "daq.c"
 19823 ;; Parameters:    Size  Location     Type
 19824 ;;		None
 19825 ;; Auto vars:     Size  Location     Type
 19826 ;;		None
 19827 ;; Return value:  Size  Location     Type
 19828 ;;                  1  [STACK] _Bool 
 19829 ;; Registers used:
 19830 ;;		btemp
 19831 ;; Tracked objects:
 19832 ;;		On entry : 0/39
 19833 ;;		On exit  : 0/0
 19834 ;;		Unchanged: 0/0
 19835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19840 ;;Total ram usage:        0 bytes
 19841 ;; Hardware stack levels used:    1
 19842 ;; Hardware stack levels required when called:    6
 19843 ;; This function calls:
 19844 ;;		Nothing
 19845 ;; This function is called by:
 19846 ;;		_main
 19847 ;; This function uses a reentrant model
 19848 ;;
 19849                           
 19850                           	psect	text84
 19851  018E3A                     __ptext84:
 19852                           	opt callstack 0
 19853  018E3A                     _check_adc_scan:
 19854                           	opt callstack 24
 19855                           
 19856                           ;daq.c: 58:  return R.done;
 19857                           
 19858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19859                           ;incstack = 0
 19860  018E3A  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 19861                           
 19862                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19863  018E40  0012               	return		;funcret
 19864  018E42                     __end_of_check_adc_scan:
 19865                           	opt callstack 0
 19866                           
 19867 ;; *************** function _calc_model_data *****************
 19868 ;; Defined at:
 19869 ;;		line 55 in file "mbmc.c"
 19870 ;; Parameters:    Size  Location     Type
 19871 ;;		None
 19872 ;; Auto vars:     Size  Location     Type
 19873 ;;		None
 19874 ;; Return value:  Size  Location     Type
 19875 ;;                  1  [STACK] void 
 19876 ;; Registers used:
 19877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19878 ;; Tracked objects:
 19879 ;;		On entry : 0/39
 19880 ;;		On exit  : 3F/1
 19881 ;;		Unchanged: 0/0
 19882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19887 ;;Total ram usage:        0 bytes
 19888 ;; Hardware stack levels used:    1
 19889 ;; Hardware stack levels required when called:    9
 19890 ;; This function calls:
 19891 ;;		___fladd
 19892 ;;		___flmul
 19893 ;;		___flsub
 19894 ;;		_lp_filter
 19895 ;; This function is called by:
 19896 ;;		_main
 19897 ;; This function uses a reentrant model
 19898 ;;
 19899                           
 19900                           	psect	text85
 19901  014E5C                     __ptext85:
 19902                           	opt callstack 0
 19903  014E5C                     _calc_model_data:
 19904                           	opt callstack 21
 19905                           
 19906                           ;mbmc.c: 57:  C.c_bat = C.calc[C_BATT];
 19907                           
 19908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19909                           ;incstack = 0
 19910  014E5C  C100  F144         	movff	_C,_C+68
 19911  014E60  C101  F145         	movff	_C+1,_C+69
 19912  014E64  C102  F146         	movff	_C+2,_C+70
 19913  014E68  C103  F147         	movff	_C+3,_C+71
 19914                           
 19915                           ;mbmc.c: 58:  C.c_pv = C.calc[C_PV];
 19916  014E6C  C104  F148         	movff	_C+4,_C+72
 19917  014E70  C105  F149         	movff	_C+5,_C+73
 19918  014E74  C106  F14A         	movff	_C+6,_C+74
 19919  014E78  C107  F14B         	movff	_C+7,_C+75
 19920                           
 19921                           ;mbmc.c: 59:  C.v_bat = C.calc[V_BAT];
 19922  014E7C  C110  F154         	movff	_C+16,_C+84
 19923  014E80  C111  F155         	movff	_C+17,_C+85
 19924  014E84  C112  F156         	movff	_C+18,_C+86
 19925  014E88  C113  F157         	movff	_C+19,_C+87
 19926                           
 19927                           ;mbmc.c: 60:  C.v_pv = C.calc[V_PV];
 19928  014E8C  C114  F150         	movff	_C+20,_C+80
 19929  014E90  C115  F151         	movff	_C+21,_C+81
 19930  014E94  C116  F152         	movff	_C+22,_C+82
 19931  014E98  C117  F153         	movff	_C+23,_C+83
 19932                           
 19933                           ;mbmc.c: 61:  C.v_inverter = C.calc[V_INVERTER];
 19934  014E9C  C130  F164         	movff	_C+48,_C+100
 19935  014EA0  C131  F165         	movff	_C+49,_C+101
 19936  014EA4  C132  F166         	movff	_C+50,_C+102
 19937  014EA8  C133  F167         	movff	_C+51,_C+103
 19938                           
 19939                           ;mbmc.c: 62:  C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 19940  014EAC  0E01               	movlw	1
 19941  014EAE  6EE6               	movwf	postinc1,c
 19942  014EB0  0E10               	movlw	16
 19943  014EB2  6EE6               	movwf	postinc1,c
 19944  014EB4  0060  F403  FFE6   	movff	_C,postinc1
 19945  014EBA  0060  F407  FFE6   	movff	_C+1,postinc1
 19946  014EC0  0060  F40B  FFE6   	movff	_C+2,postinc1
 19947  014EC6  0060  F40F  FFE6   	movff	_C+3,postinc1
 19948  014ECC  0060  F413  FFE6   	movff	_C+4,postinc1
 19949  014ED2  0060  F417  FFE6   	movff	_C+5,postinc1
 19950  014ED8  0060  F41B  FFE6   	movff	_C+6,postinc1
 19951  014EDE  0060  F41F  FFE6   	movff	_C+7,postinc1
 19952  014EE4  EC85  F0C1         	call	___flsub	;wreg free
 19953  014EE8  0060  F0CB  FFE6   	movff	btemp,postinc1
 19954  014EEE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19955  014EF4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19956  014EFA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19957  014F00  EC83  F0B0         	call	_lp_filter	;wreg free
 19958  014F04  0060  F0C8  F140   	movff	btemp,_C+64
 19959  014F0A  0060  F0CC  F141   	movff	btemp+1,_C+65
 19960  014F10  0060  F0D0  F142   	movff	btemp+2,_C+66
 19961  014F16  0060  F0D4  F143   	movff	btemp+3,_C+67
 19962                           
 19963                           ;mbmc.c: 63:  C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 19964  014F1C  0E01               	movlw	1
 19965  014F1E  6EE6               	movwf	postinc1,c
 19966  014F20  0E11               	movlw	17
 19967  014F22  6EE6               	movwf	postinc1,c
 19968  014F24  0060  F553  FFE6   	movff	_C+84,postinc1
 19969  014F2A  0060  F557  FFE6   	movff	_C+85,postinc1
 19970  014F30  0060  F55B  FFE6   	movff	_C+86,postinc1
 19971  014F36  0060  F55F  FFE6   	movff	_C+87,postinc1
 19972  014F3C  0060  F503  FFE6   	movff	_C+64,postinc1
 19973  014F42  0060  F507  FFE6   	movff	_C+65,postinc1
 19974  014F48  0060  F50B  FFE6   	movff	_C+66,postinc1
 19975  014F4E  0060  F50F  FFE6   	movff	_C+67,postinc1
 19976  014F54  ECDF  F092         	call	___flmul	;wreg free
 19977  014F58  0060  F0CB  FFE6   	movff	btemp,postinc1
 19978  014F5E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 19979  014F64  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 19980  014F6A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 19981  014F70  EC83  F0B0         	call	_lp_filter	;wreg free
 19982  014F74  0060  F0C8  F168   	movff	btemp,_C+104
 19983  014F7A  0060  F0CC  F169   	movff	btemp+1,_C+105
 19984  014F80  0060  F0D0  F16A   	movff	btemp+2,_C+106
 19985  014F86  0060  F0D4  F16B   	movff	btemp+3,_C+107
 19986                           
 19987                           ;mbmc.c: 64:  C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 19988  014F8C  0E01               	movlw	1
 19989  014F8E  6EE6               	movwf	postinc1,c
 19990  014F90  0E12               	movlw	18
 19991  014F92  6EE6               	movwf	postinc1,c
 19992  014F94  0060  F543  FFE6   	movff	_C+80,postinc1
 19993  014F9A  0060  F547  FFE6   	movff	_C+81,postinc1
 19994  014FA0  0060  F54B  FFE6   	movff	_C+82,postinc1
 19995  014FA6  0060  F54F  FFE6   	movff	_C+83,postinc1
 19996  014FAC  0060  F523  FFE6   	movff	_C+72,postinc1
 19997  014FB2  0060  F527  FFE6   	movff	_C+73,postinc1
 19998  014FB8  0060  F52B  FFE6   	movff	_C+74,postinc1
 19999  014FBE  0060  F52F  FFE6   	movff	_C+75,postinc1
 20000  014FC4  ECDF  F092         	call	___flmul	;wreg free
 20001  014FC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 20002  014FCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20003  014FD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20004  014FDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20005  014FE0  EC83  F0B0         	call	_lp_filter	;wreg free
 20006  014FE4  0060  F0C8  F170   	movff	btemp,_C+112
 20007  014FEA  0060  F0CC  F171   	movff	btemp+1,_C+113
 20008  014FF0  0060  F0D0  F172   	movff	btemp+2,_C+114
 20009  014FF6  0060  F0D4  F173   	movff	btemp+3,_C+115
 20010                           
 20011                           ;mbmc.c: 65:  C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20012  014FFC  0E01               	movlw	1
 20013  014FFE  6EE6               	movwf	postinc1,c
 20014  015000  0E13               	movlw	19
 20015  015002  6EE6               	movwf	postinc1,c
 20016  015004  0E00               	movlw	0
 20017  015006  6EE6               	movwf	postinc1,c
 20018  015008  0E00               	movlw	0
 20019  01500A  6EE6               	movwf	postinc1,c
 20020  01500C  0E60               	movlw	96
 20021  01500E  6EE6               	movwf	postinc1,c
 20022  015010  0EC1               	movlw	193
 20023  015012  6EE6               	movwf	postinc1,c
 20024  015014  0060  F593  FFE6   	movff	_C+100,postinc1
 20025  01501A  0060  F597  FFE6   	movff	_C+101,postinc1
 20026  015020  0060  F59B  FFE6   	movff	_C+102,postinc1
 20027  015026  0060  F59F  FFE6   	movff	_C+103,postinc1
 20028  01502C  0060  F503  FFE6   	movff	_C+64,postinc1
 20029  015032  0060  F507  FFE6   	movff	_C+65,postinc1
 20030  015038  0060  F50B  FFE6   	movff	_C+66,postinc1
 20031  01503E  0060  F50F  FFE6   	movff	_C+67,postinc1
 20032  015044  ECDF  F092         	call	___flmul	;wreg free
 20033  015048  0060  F0CB  FFE6   	movff	btemp,postinc1
 20034  01504E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20035  015054  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20036  01505A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20037  015060  ECF4  F096         	call	___fladd	;wreg free
 20038  015064  0060  F0CB  FFE6   	movff	btemp,postinc1
 20039  01506A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20040  015070  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20041  015076  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20042  01507C  EC83  F0B0         	call	_lp_filter	;wreg free
 20043  015080  0060  F0C8  F16C   	movff	btemp,_C+108
 20044  015086  0060  F0CC  F16D   	movff	btemp+1,_C+109
 20045  01508C  0060  F0D0  F16E   	movff	btemp+2,_C+110
 20046  015092  0060  F0D4  F16F   	movff	btemp+3,_C+111
 20047                           
 20048                           ;mbmc.c: 66:  C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20049  015098  0E01               	movlw	1
 20050  01509A  6EE6               	movwf	postinc1,c
 20051  01509C  0E14               	movlw	20
 20052  01509E  6EE6               	movwf	postinc1,c
 20053  0150A0  0060  F553  FFE6   	movff	_C+84,postinc1
 20054  0150A6  0060  F557  FFE6   	movff	_C+85,postinc1
 20055  0150AC  0060  F55B  FFE6   	movff	_C+86,postinc1
 20056  0150B2  0060  F55F  FFE6   	movff	_C+87,postinc1
 20057  0150B8  0060  F513  FFE6   	movff	_C+68,postinc1
 20058  0150BE  0060  F517  FFE6   	movff	_C+69,postinc1
 20059  0150C4  0060  F51B  FFE6   	movff	_C+70,postinc1
 20060  0150CA  0060  F51F  FFE6   	movff	_C+71,postinc1
 20061  0150D0  ECDF  F092         	call	___flmul	;wreg free
 20062  0150D4  0060  F0CB  FFE6   	movff	btemp,postinc1
 20063  0150DA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20064  0150E0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20065  0150E6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20066  0150EC  EC83  F0B0         	call	_lp_filter	;wreg free
 20067  0150F0  0060  F0C8  F174   	movff	btemp,_C+116
 20068  0150F6  0060  F0CC  F175   	movff	btemp+1,_C+117
 20069  0150FC  0060  F0D0  F176   	movff	btemp+2,_C+118
 20070  015102  0060  F0D4  F177   	movff	btemp+3,_C+119
 20071                           
 20072                           ;mbmc.c: 70:  if (C.p_inverter < 0.0)
 20073  015108  0101               	movlb	1	; () banked
 20074  01510A  AF6F               	btfss	(_C+111)& (0+255),7,b
 20075  01510C  0012               	return	
 20076                           
 20077                           ; BSR set to: 1
 20078                           ;mbmc.c: 71:   C.p_inverter = 0.0001;
 20079  01510E  0E17               	movlw	23
 20080  015110  6F6C               	movwf	(_C+108)& (0+255),b
 20081  015112  0EB7               	movlw	183
 20082  015114  6F6D               	movwf	(_C+109)& (0+255),b
 20083  015116  0ED1               	movlw	209
 20084  015118  6F6E               	movwf	(_C+110)& (0+255),b
 20085  01511A  0E38               	movlw	56
 20086  01511C  6F6F               	movwf	(_C+111)& (0+255),b
 20087                           
 20088                           ; BSR set to: 1
 20089                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20090  01511E  0012               	return		;funcret
 20091  015120                     __end_of_calc_model_data:
 20092                           	opt callstack 0
 20093                           
 20094 ;; *************** function _lp_filter *****************
 20095 ;; Defined at:
 20096 ;;		line 17 in file "mbmc.c"
 20097 ;; Parameters:    Size  Location     Type
 20098 ;;  new             4  [STACK] const float 
 20099 ;;  bn              1  [STACK] const unsigned char 
 20100 ;;  slow            1  [STACK] const char 
 20101 ;; Auto vars:     Size  Location     Type
 20102 ;;  lp_speed        4  [STACK] float 
 20103 ;; Return value:  Size  Location     Type
 20104 ;;                  4  [STACK] float 
 20105 ;; Registers used:
 20106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20107 ;; Tracked objects:
 20108 ;;		On entry : 0/2
 20109 ;;		On exit  : 0/0
 20110 ;;		Unchanged: 0/0
 20111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20116 ;;Total ram usage:        0 bytes
 20117 ;; Hardware stack levels used:    1
 20118 ;; Hardware stack levels required when called:    8
 20119 ;; This function calls:
 20120 ;;		___fladd
 20121 ;;		___flmul
 20122 ;;		___flsub
 20123 ;; This function is called by:
 20124 ;;		_main
 20125 ;;		_convert_adc_data
 20126 ;;		_calc_model_data
 20127 ;; This function uses a reentrant model
 20128 ;;
 20129                           
 20130                           	psect	text86
 20131  016106                     __ptext86:
 20132                           	opt callstack 0
 20133  016106                     _lp_filter:
 20134                           	opt callstack 0
 20135                           
 20136                           ; BSR set to: 1
 20137                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20138  016106  52E6               	movf	postinc1,f,c
 20139  016108  52E6               	movf	postinc1,f,c
 20140  01610A  52E6               	movf	postinc1,f,c
 20141  01610C  52E6               	movf	postinc1,f,c
 20142                           
 20143                           ;mbmc.c: 17: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 18: {;mbmc.c: 19:  static float smooth[16 +5];;mbmc.c: 20:  float lp_speed;;mbmc.c: 2
      +                          2:  if (bn >= 16 +5)
 20144                           ;stkvar	_bn @ sp[(-4)+-5]
 20145                           
 20146                           ;incstack = 0
 20147  01610E  0EF7               	movlw	-9
 20148  016110  006F FF8C  F032    	movff	plusw1,btemp
 20149  016116  0E14               	movlw	20
 20150  016118  6432               	cpfsgt	btemp^0,c
 20151  01611A  D011               	goto	l8754
 20152  01611C                     u8150:
 20153                           
 20154                           ;mbmc.c: 23:   return new;
 20155                           ;stkvar	_new @ sp[(-4)+-4]
 20156  01611C  0EF8               	movlw	-8
 20157  01611E  006F FF8C  F032    	movff	plusw1,btemp
 20158  016124  0EF9               	movlw	-7
 20159  016126  006F FF8C  F033    	movff	plusw1,btemp+1
 20160  01612C  0EFA               	movlw	-6
 20161  01612E  006F FF8C  F034    	movff	plusw1,btemp+2
 20162  016134  0EFB               	movlw	-5
 20163  016136  006F FF8C  F035    	movff	plusw1,btemp+3
 20164  01613C  D0BF               	goto	l1722
 20165  01613E                     l8754:
 20166                           
 20167                           ;mbmc.c: 25:  if (slow == (-1)) {
 20168                           ;stkvar	_slow @ sp[(-4)+-6]
 20169  01613E  0EF6               	movlw	-10
 20170  016140  28E3               	incf	plusw1,w,c
 20171  016142  A4D8               	btfss	status,2,c
 20172  016144  D012               	goto	l8762
 20173                           
 20174                           ;mbmc.c: 26:   smooth[bn] = 0.0;
 20175                           ;stkvar	_bn @ sp[(-4)+-5]
 20176  016146  0EF7               	movlw	-9
 20177  016148  50E3               	movf	plusw1,w,c
 20178  01614A  0D04               	mullw	4
 20179  01614C  0E00               	movlw	low lp_filter@smooth
 20180  01614E  24F3               	addwf	243,w,c
 20181  016150  6ED9               	movwf	fsr2l,c
 20182  016152  0E03               	movlw	high lp_filter@smooth
 20183  016154  20F4               	addwfc	prodh,w,c
 20184  016156  6EDA               	movwf	fsr2h,c
 20185  016158  0E00               	movlw	0
 20186  01615A  6EDE               	movwf	postinc2,c
 20187  01615C  0E00               	movlw	0
 20188  01615E  6EDE               	movwf	postinc2,c
 20189  016160  0E00               	movlw	0
 20190  016162  6EDE               	movwf	postinc2,c
 20191  016164  0E00               	movlw	0
 20192  016166  6EDD               	movwf	postdec2,c
 20193  016168  D7D9               	goto	u8150
 20194  01616A                     l8762:
 20195                           
 20196                           ;mbmc.c: 30:  if (slow) {
 20197                           ;stkvar	_slow @ sp[(-4)+-6]
 20198  01616A  0EF6               	movlw	-10
 20199  01616C  50E3               	movf	plusw1,w,c
 20200  01616E  B4D8               	btfsc	status,2,c
 20201  016170  D008               	goto	l8766
 20202                           
 20203                           ;mbmc.c: 31:   lp_speed = 0.033;
 20204  016172  0E02               	movlw	2
 20205  016174  6E3A               	movwf	(btemp+8)^0,c
 20206  016176  0E2B               	movlw	43
 20207  016178  6E3B               	movwf	(btemp+9)^0,c
 20208  01617A  0E07               	movlw	7
 20209  01617C  6E3C               	movwf	(btemp+10)^0,c
 20210  01617E  0E3D               	movlw	61
 20211  016180  D007               	goto	L21
 20212  016182                     l8766:
 20213                           
 20214                           ;mbmc.c: 33:   lp_speed = 0.125;
 20215  016182  0E00               	movlw	0
 20216  016184  6E3A               	movwf	(btemp+8)^0,c
 20217  016186  0E00               	movlw	0
 20218  016188  6E3B               	movwf	(btemp+9)^0,c
 20219  01618A  0E00               	movlw	0
 20220  01618C  6E3C               	movwf	(btemp+10)^0,c
 20221  01618E  0E3E               	movlw	62
 20222  016190                     L21:
 20223  016190  6E3D               	movwf	(btemp+11)^0,c
 20224                           
 20225                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20226  016192  0EFC               	movlw	-4
 20227  016194  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20228  01619A  0EFD               	movlw	-3
 20229  01619C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20230  0161A2  0EFE               	movlw	-2
 20231  0161A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20232  0161AA  0EFF               	movlw	-1
 20233  0161AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20234                           
 20235                           ;mbmc.c: 36:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20236                           ;stkvar	_bn @ sp[(-4)+-5]
 20237  0161B2  0EF7               	movlw	-9
 20238  0161B4  50E3               	movf	plusw1,w,c
 20239  0161B6  0D04               	mullw	4
 20240  0161B8  0E00               	movlw	low lp_filter@smooth
 20241  0161BA  24F3               	addwf	243,w,c
 20242  0161BC  6ED9               	movwf	fsr2l,c
 20243  0161BE  0E03               	movlw	high lp_filter@smooth
 20244  0161C0  20F4               	addwfc	prodh,w,c
 20245  0161C2  6EDA               	movwf	fsr2h,c
 20246  0161C4  006F FF7B FFE6     	movff	postinc2,postinc1
 20247  0161CA  006F FF7B FFE6     	movff	postinc2,postinc1
 20248  0161D0  006F FF7B FFE6     	movff	postinc2,postinc1
 20249  0161D6  006F FF7B FFE6     	movff	postinc2,postinc1
 20250                           
 20251                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20252  0161DC  0EF8               	movlw	-8
 20253  0161DE  006F FF8F FFE6     	movff	plusw1,postinc1
 20254  0161E4  006F FF8F FFE6     	movff	plusw1,postinc1
 20255  0161EA  006F FF8F FFE6     	movff	plusw1,postinc1
 20256  0161F0  006F FF8F FFE6     	movff	plusw1,postinc1
 20257                           
 20258                           ;stkvar	_bn @ sp[(-12)+-5]
 20259  0161F6  0EEF               	movlw	-17
 20260  0161F8  50E3               	movf	plusw1,w,c
 20261  0161FA  0D04               	mullw	4
 20262  0161FC  0E00               	movlw	low lp_filter@smooth
 20263  0161FE  24F3               	addwf	243,w,c
 20264  016200  6ED9               	movwf	fsr2l,c
 20265  016202  0E03               	movlw	high lp_filter@smooth
 20266  016204  20F4               	addwfc	prodh,w,c
 20267  016206  6EDA               	movwf	fsr2h,c
 20268  016208  006F FF7B FFE6     	movff	postinc2,postinc1
 20269  01620E  006F FF7B FFE6     	movff	postinc2,postinc1
 20270  016214  006F FF7B FFE6     	movff	postinc2,postinc1
 20271  01621A  006F FF7B FFE6     	movff	postinc2,postinc1
 20272                           
 20273                           ;stkvar	_new @ sp[(-16)+-4]
 20274  016220  0EEC               	movlw	-20
 20275  016222  006F FF8F FFE6     	movff	plusw1,postinc1
 20276  016228  006F FF8F FFE6     	movff	plusw1,postinc1
 20277  01622E  006F FF8F FFE6     	movff	plusw1,postinc1
 20278  016234  006F FF8F FFE6     	movff	plusw1,postinc1
 20279  01623A  EC85  F0C1         	call	___flsub	;wreg free
 20280  01623E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20281  016244  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20282  01624A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20283  016250  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20284  016256  ECDF  F092         	call	___flmul	;wreg free
 20285  01625A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20286  016260  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20287  016266  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20288  01626C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20289  016272  ECF4  F096         	call	___fladd	;wreg free
 20290                           
 20291                           ;stkvar	_bn @ sp[(-4)+-5]
 20292  016276  0EF7               	movlw	-9
 20293  016278  50E3               	movf	plusw1,w,c
 20294  01627A  0D04               	mullw	4
 20295  01627C  0E00               	movlw	low lp_filter@smooth
 20296  01627E  24F3               	addwf	243,w,c
 20297  016280  6ED9               	movwf	fsr2l,c
 20298  016282  0E03               	movlw	high lp_filter@smooth
 20299  016284  20F4               	addwfc	prodh,w,c
 20300  016286  6EDA               	movwf	fsr2h,c
 20301  016288  0060  F0CB  FFDE   	movff	btemp,postinc2
 20302  01628E  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 20303  016294  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 20304  01629A  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 20305  0162A0  52DD               	movf	postdec2,f,c
 20306  0162A2  52DD               	movf	postdec2,f,c
 20307  0162A4  006F FF78  F032    	movff	postinc2,btemp
 20308  0162AA  006F FF78  F033    	movff	postinc2,btemp+1
 20309  0162B0  006F FF78  F034    	movff	postinc2,btemp+2
 20310  0162B6  006F FF78  F035    	movff	postinc2,btemp+3
 20311  0162BC                     l1722:
 20312                           
 20313                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20314  0162BC  0EF6               	movlw	246
 20315  0162BE  26E1               	addwf	fsr1l,f,c
 20316  0162C0  0EFF               	movlw	255
 20317  0162C2  22E2               	addwfc	fsr1h,f,c
 20318  0162C4  0012               	return		;funcret
 20319  0162C6                     __end_of_lp_filter:
 20320                           	opt callstack 0
 20321                           
 20322 ;; *************** function ___flsub *****************
 20323 ;; Defined at:
 20324 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20325 ;; Parameters:    Size  Location     Type
 20326 ;;  b               4  [STACK] float 
 20327 ;;  a               4  [STACK] float 
 20328 ;; Auto vars:     Size  Location     Type
 20329 ;;		None
 20330 ;; Return value:  Size  Location     Type
 20331 ;;                  4  [STACK] float 
 20332 ;; Registers used:
 20333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20334 ;; Tracked objects:
 20335 ;;		On entry : 0/2
 20336 ;;		On exit  : 0/0
 20337 ;;		Unchanged: 0/0
 20338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20343 ;;Total ram usage:        0 bytes
 20344 ;; Hardware stack levels used:    1
 20345 ;; Hardware stack levels required when called:    7
 20346 ;; This function calls:
 20347 ;;		___fladd
 20348 ;; This function is called by:
 20349 ;;		_conv_raw_result
 20350 ;;		_lp_filter
 20351 ;;		_calc_model_data
 20352 ;;		_efgtoa
 20353 ;; This function uses a reentrant model
 20354 ;;
 20355                           
 20356                           	psect	text87
 20357  01830A                     __ptext87:
 20358                           	opt callstack 0
 20359  01830A                     ___flsub:
 20360                           	opt callstack 16
 20361                           
 20362                           ;stkvar	_a @ sp[(0)+-8]
 20363                           
 20364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20365                           ;incstack = 0
 20366  01830A  0EFB               	movlw	-5
 20367  01830C  7EE3               	btg	plusw1,7,c
 20368                           
 20369                           ;stkvar	_a @ sp[(0)+-8]
 20370  01830E  0EF8               	movlw	-8
 20371  018310  006F FF8F FFE6     	movff	plusw1,postinc1
 20372  018316  006F FF8F FFE6     	movff	plusw1,postinc1
 20373  01831C  006F FF8F FFE6     	movff	plusw1,postinc1
 20374  018322  006F FF8F FFE6     	movff	plusw1,postinc1
 20375                           
 20376                           ;stkvar	_b @ sp[(-4)+-4]
 20377  018328  0EF8               	movlw	-8
 20378  01832A  006F FF8F FFE6     	movff	plusw1,postinc1
 20379  018330  006F FF8F FFE6     	movff	plusw1,postinc1
 20380  018336  006F FF8F FFE6     	movff	plusw1,postinc1
 20381  01833C  006F FF8F FFE6     	movff	plusw1,postinc1
 20382  018342  ECF4  F096         	call	___fladd	;wreg free
 20383                           
 20384                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20385  018346  0EF8               	movlw	248
 20386  018348  26E1               	addwf	fsr1l,f,c
 20387  01834A  0EFF               	movlw	255
 20388  01834C  22E2               	addwfc	fsr1h,f,c
 20389  01834E  0012               	return		;funcret
 20390  018350                     __end_of___flsub:
 20391                           	opt callstack 0
 20392                           
 20393 ;; *************** function ___fladd *****************
 20394 ;; Defined at:
 20395 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20396 ;; Parameters:    Size  Location     Type
 20397 ;;  b               4  [STACK] float 
 20398 ;;  a               4  [STACK] float 
 20399 ;; Auto vars:     Size  Location     Type
 20400 ;;  grs             1  [STACK] unsigned char 
 20401 ;;  bexp            1  [STACK] unsigned char 
 20402 ;;  aexp            1  [STACK] unsigned char 
 20403 ;;  signs           1  [STACK] unsigned char 
 20404 ;; Return value:  Size  Location     Type
 20405 ;;                  4  [STACK] unsigned char 
 20406 ;; Registers used:
 20407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20408 ;; Tracked objects:
 20409 ;;		On entry : 0/5
 20410 ;;		On exit  : 0/0
 20411 ;;		Unchanged: 0/0
 20412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20417 ;;Total ram usage:        0 bytes
 20418 ;; Hardware stack levels used:    1
 20419 ;; Hardware stack levels required when called:    6
 20420 ;; This function calls:
 20421 ;;		Nothing
 20422 ;; This function is called by:
 20423 ;;		_lp_filter
 20424 ;;		_calc_model_data
 20425 ;;		_efgtoa
 20426 ;;		___flsub
 20427 ;; This function uses a reentrant model
 20428 ;;
 20429                           
 20430                           	psect	text88
 20431  012DE8                     __ptext88:
 20432                           	opt callstack 0
 20433  012DE8                     ___fladd:
 20434                           	opt callstack 0
 20435                           
 20436                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20437  012DE8  52E6               	movf	postinc1,f,c
 20438  012DEA  52E6               	movf	postinc1,f,c
 20439  012DEC  52E6               	movf	postinc1,f,c
 20440  012DEE  52E6               	movf	postinc1,f,c
 20441                           
 20442                           ;stkvar	_b @ sp[(-4)+-4]
 20443                           
 20444                           ;incstack = 0
 20445  012DF0  0EFB               	movlw	251
 20446  012DF2  24E1               	addwf	fsr1l,w,c
 20447  012DF4  6ED9               	movwf	fsr2l,c
 20448  012DF6  0EFF               	movlw	255
 20449  012DF8  20E2               	addwfc	fsr1h,w,c
 20450  012DFA  6EDA               	movwf	fsr2h,c
 20451  012DFC  50DF               	movf	indf2,w,c
 20452  012DFE  6E3D               	movwf	(btemp+11)^0,c
 20453  012E00  0E80               	movlw	128
 20454  012E02  163D               	andwf	(btemp+11)^0,f,c
 20455                           
 20456                           ;stkvar	_signs @ sp[(-4)+3]
 20457  012E04  0EFF               	movlw	-1
 20458  012E06  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20459                           
 20460                           ;stkvar	_b @ sp[(-4)+-4]
 20461  012E0C  0EFB               	movlw	251
 20462  012E0E  24E1               	addwf	fsr1l,w,c
 20463  012E10  6ED9               	movwf	fsr2l,c
 20464  012E12  0EFF               	movlw	255
 20465  012E14  20E2               	addwfc	fsr1h,w,c
 20466  012E16  6EDA               	movwf	fsr2h,c
 20467  012E18  50DF               	movf	indf2,w,c
 20468  012E1A  6E3D               	movwf	(btemp+11)^0,c
 20469  012E1C  90D8               	bcf	status,0,c
 20470  012E1E  343D               	rlcf	(btemp+11)^0,w,c
 20471  012E20  6E3C               	movwf	(btemp+10)^0,c
 20472                           
 20473                           ;stkvar	_bexp @ sp[(-4)+1]
 20474  012E22  0EFD               	movlw	-3
 20475  012E24  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20476                           
 20477                           ;stkvar	_b @ sp[(-4)+-4]
 20478  012E2A  0EFA               	movlw	250
 20479  012E2C  24E1               	addwf	fsr1l,w,c
 20480  012E2E  6ED9               	movwf	fsr2l,c
 20481  012E30  0EFF               	movlw	255
 20482  012E32  20E2               	addwfc	fsr1h,w,c
 20483  012E34  6EDA               	movwf	fsr2h,c
 20484  012E36  AEDF               	btfss	indf2,7,c
 20485  012E38  D002               	goto	l6396
 20486                           
 20487                           ;stkvar	_bexp @ sp[(-4)+1]
 20488  012E3A  0EFD               	movlw	-3
 20489  012E3C  80E3               	bsf	plusw1,0,c
 20490  012E3E                     l6396:
 20491                           
 20492                           ;stkvar	_bexp @ sp[(-4)+1]
 20493  012E3E  0EFD               	movlw	-3
 20494  012E40  50E3               	movf	plusw1,w,c
 20495  012E42  B4D8               	btfsc	status,2,c
 20496  012E44  D027               	goto	l6406
 20497                           
 20498                           ;stkvar	_bexp @ sp[(-4)+1]
 20499  012E46  0EFD               	movlw	-3
 20500  012E48  28E3               	incf	plusw1,w,c
 20501  012E4A  A4D8               	btfss	status,2,c
 20502  012E4C  D018               	goto	l6402
 20503  012E4E  0E00               	movlw	0
 20504  012E50  6E3A               	movwf	(btemp+8)^0,c
 20505  012E52  0E00               	movlw	0
 20506  012E54  6E3B               	movwf	(btemp+9)^0,c
 20507  012E56  0E00               	movlw	0
 20508  012E58  6E3C               	movwf	(btemp+10)^0,c
 20509  012E5A  0E00               	movlw	0
 20510  012E5C  6E3D               	movwf	(btemp+11)^0,c
 20511                           
 20512                           ;stkvar	_b @ sp[(-4)+-4]
 20513  012E5E  0EF8               	movlw	-8
 20514  012E60  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20515  012E66  0EF9               	movlw	-7
 20516  012E68  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20517  012E6E  0EFA               	movlw	-6
 20518  012E70  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20519  012E76  0EFB               	movlw	-5
 20520  012E78  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20521  012E7E                     l6402:
 20522                           
 20523                           ;stkvar	_b @ sp[(-4)+-4]
 20524  012E7E  0EFA               	movlw	-6
 20525  012E80  8EE3               	bsf	plusw1,7,c
 20526                           
 20527                           ;stkvar	_b @ sp[(-4)+-4]
 20528  012E82  0EFB               	movlw	251
 20529  012E84  24E1               	addwf	fsr1l,w,c
 20530  012E86  6ED9               	movwf	fsr2l,c
 20531  012E88  0EFF               	movlw	255
 20532  012E8A  20E2               	addwfc	fsr1h,w,c
 20533  012E8C  6EDA               	movwf	fsr2h,c
 20534  012E8E  0E00               	movlw	0
 20535  012E90  6EDF               	movwf	indf2,c
 20536  012E92  D018               	goto	l6408
 20537  012E94                     l6406:
 20538  012E94  0E00               	movlw	0
 20539  012E96  6E3A               	movwf	(btemp+8)^0,c
 20540  012E98  0E00               	movlw	0
 20541  012E9A  6E3B               	movwf	(btemp+9)^0,c
 20542  012E9C  0E00               	movlw	0
 20543  012E9E  6E3C               	movwf	(btemp+10)^0,c
 20544  012EA0  0E00               	movlw	0
 20545  012EA2  6E3D               	movwf	(btemp+11)^0,c
 20546                           
 20547                           ;stkvar	_b @ sp[(-4)+-4]
 20548  012EA4  0EF8               	movlw	-8
 20549  012EA6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20550  012EAC  0EF9               	movlw	-7
 20551  012EAE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20552  012EB4  0EFA               	movlw	-6
 20553  012EB6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20554  012EBC  0EFB               	movlw	-5
 20555  012EBE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20556  012EC4                     l6408:
 20557                           
 20558                           ;stkvar	_a @ sp[(-4)+-8]
 20559  012EC4  0EF7               	movlw	247
 20560  012EC6  24E1               	addwf	fsr1l,w,c
 20561  012EC8  6ED9               	movwf	fsr2l,c
 20562  012ECA  0EFF               	movlw	255
 20563  012ECC  20E2               	addwfc	fsr1h,w,c
 20564  012ECE  6EDA               	movwf	fsr2h,c
 20565  012ED0  50DF               	movf	indf2,w,c
 20566  012ED2  6E3D               	movwf	(btemp+11)^0,c
 20567  012ED4  0E80               	movlw	128
 20568  012ED6  163D               	andwf	(btemp+11)^0,f,c
 20569                           
 20570                           ;stkvar	_aexp @ sp[(-4)+2]
 20571  012ED8  0EFE               	movlw	-2
 20572  012EDA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20573                           
 20574                           ;stkvar	_signs @ sp[(-4)+3]
 20575                           ;stkvar	_aexp @ sp[(-4)+2]
 20576  012EE0  50E1               	movf	fsr1l,w,c
 20577  012EE2  0FFE               	addlw	-2
 20578  012EE4  6ED9               	movwf	fsr2l,c
 20579  012EE6  50E2               	movf	fsr1h,w,c
 20580  012EE8  6EDA               	movwf	fsr2h,c
 20581  012EEA  0EFF               	movlw	255
 20582  012EEC  22DA               	addwfc	fsr2h,f,c
 20583  012EEE  0EFF               	movlw	-1
 20584  012EF0  50E3               	movf	plusw1,w,c
 20585  012EF2  18DE               	xorwf	postinc2,w,c
 20586  012EF4  B4D8               	btfsc	status,2,c
 20587  012EF6  D002               	goto	l6414
 20588                           
 20589                           ;stkvar	_signs @ sp[(-4)+3]
 20590  012EF8  0EFF               	movlw	-1
 20591  012EFA  8CE3               	bsf	plusw1,6,c
 20592  012EFC                     l6414:
 20593                           
 20594                           ;stkvar	_a @ sp[(-4)+-8]
 20595  012EFC  0EF7               	movlw	247
 20596  012EFE  24E1               	addwf	fsr1l,w,c
 20597  012F00  6ED9               	movwf	fsr2l,c
 20598  012F02  0EFF               	movlw	255
 20599  012F04  20E2               	addwfc	fsr1h,w,c
 20600  012F06  6EDA               	movwf	fsr2h,c
 20601  012F08  50DF               	movf	indf2,w,c
 20602  012F0A  6E3D               	movwf	(btemp+11)^0,c
 20603  012F0C  90D8               	bcf	status,0,c
 20604  012F0E  343D               	rlcf	(btemp+11)^0,w,c
 20605  012F10  6E3C               	movwf	(btemp+10)^0,c
 20606                           
 20607                           ;stkvar	_aexp @ sp[(-4)+2]
 20608  012F12  0EFE               	movlw	-2
 20609  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20610                           
 20611                           ;stkvar	_a @ sp[(-4)+-8]
 20612  012F1A  0EF6               	movlw	246
 20613  012F1C  24E1               	addwf	fsr1l,w,c
 20614  012F1E  6ED9               	movwf	fsr2l,c
 20615  012F20  0EFF               	movlw	255
 20616  012F22  20E2               	addwfc	fsr1h,w,c
 20617  012F24  6EDA               	movwf	fsr2h,c
 20618  012F26  AEDF               	btfss	indf2,7,c
 20619  012F28  D002               	goto	l6420
 20620                           
 20621                           ;stkvar	_aexp @ sp[(-4)+2]
 20622  012F2A  0EFE               	movlw	-2
 20623  012F2C  80E3               	bsf	plusw1,0,c
 20624  012F2E                     l6420:
 20625                           
 20626                           ;stkvar	_aexp @ sp[(-4)+2]
 20627  012F2E  0EFE               	movlw	-2
 20628  012F30  50E3               	movf	plusw1,w,c
 20629  012F32  B4D8               	btfsc	status,2,c
 20630  012F34  D027               	goto	l6430
 20631                           
 20632                           ;stkvar	_aexp @ sp[(-4)+2]
 20633  012F36  0EFE               	movlw	-2
 20634  012F38  28E3               	incf	plusw1,w,c
 20635  012F3A  A4D8               	btfss	status,2,c
 20636  012F3C  D018               	goto	l6426
 20637  012F3E  0E00               	movlw	0
 20638  012F40  6E3A               	movwf	(btemp+8)^0,c
 20639  012F42  0E00               	movlw	0
 20640  012F44  6E3B               	movwf	(btemp+9)^0,c
 20641  012F46  0E00               	movlw	0
 20642  012F48  6E3C               	movwf	(btemp+10)^0,c
 20643  012F4A  0E00               	movlw	0
 20644  012F4C  6E3D               	movwf	(btemp+11)^0,c
 20645                           
 20646                           ;stkvar	_a @ sp[(-4)+-8]
 20647  012F4E  0EF4               	movlw	-12
 20648  012F50  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20649  012F56  0EF5               	movlw	-11
 20650  012F58  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20651  012F5E  0EF6               	movlw	-10
 20652  012F60  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20653  012F66  0EF7               	movlw	-9
 20654  012F68  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20655  012F6E                     l6426:
 20656                           
 20657                           ;stkvar	_a @ sp[(-4)+-8]
 20658  012F6E  0EF6               	movlw	-10
 20659  012F70  8EE3               	bsf	plusw1,7,c
 20660                           
 20661                           ;stkvar	_a @ sp[(-4)+-8]
 20662  012F72  0EF7               	movlw	247
 20663  012F74  24E1               	addwf	fsr1l,w,c
 20664  012F76  6ED9               	movwf	fsr2l,c
 20665  012F78  0EFF               	movlw	255
 20666  012F7A  20E2               	addwfc	fsr1h,w,c
 20667  012F7C  6EDA               	movwf	fsr2h,c
 20668  012F7E  0E00               	movlw	0
 20669  012F80  6EDF               	movwf	indf2,c
 20670  012F82  D018               	goto	l6432
 20671  012F84                     l6430:
 20672  012F84  0E00               	movlw	0
 20673  012F86  6E3A               	movwf	(btemp+8)^0,c
 20674  012F88  0E00               	movlw	0
 20675  012F8A  6E3B               	movwf	(btemp+9)^0,c
 20676  012F8C  0E00               	movlw	0
 20677  012F8E  6E3C               	movwf	(btemp+10)^0,c
 20678  012F90  0E00               	movlw	0
 20679  012F92  6E3D               	movwf	(btemp+11)^0,c
 20680                           
 20681                           ;stkvar	_a @ sp[(-4)+-8]
 20682  012F94  0EF4               	movlw	-12
 20683  012F96  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20684  012F9C  0EF5               	movlw	-11
 20685  012F9E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20686  012FA4  0EF6               	movlw	-10
 20687  012FA6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20688  012FAC  0EF7               	movlw	-9
 20689  012FAE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20690  012FB4                     l6432:
 20691                           
 20692                           ;stkvar	_bexp @ sp[(-4)+1]
 20693                           ;stkvar	_aexp @ sp[(-4)+2]
 20694  012FB4  50E1               	movf	fsr1l,w,c
 20695  012FB6  0FFE               	addlw	-2
 20696  012FB8  6ED9               	movwf	fsr2l,c
 20697  012FBA  50E2               	movf	fsr1h,w,c
 20698  012FBC  6EDA               	movwf	fsr2h,c
 20699  012FBE  0EFF               	movlw	255
 20700  012FC0  22DA               	addwfc	fsr2h,f,c
 20701  012FC2  0EFD               	movlw	-3
 20702  012FC4  50E3               	movf	plusw1,w,c
 20703  012FC6  5CDE               	subwf	postinc2,w,c
 20704  012FC8  B0D8               	btfsc	status,0,c
 20705  012FCA  D0A4               	goto	l6468
 20706                           
 20707                           ;stkvar	_signs @ sp[(-4)+3]
 20708  012FCC  0EFF               	movlw	-1
 20709  012FCE  ACE3               	btfss	plusw1,6,c
 20710  012FD0  D002               	goto	l6438
 20711                           
 20712                           ;stkvar	_signs @ sp[(-4)+3]
 20713  012FD2  0EFF               	movlw	-1
 20714  012FD4  7EE3               	btg	plusw1,7,c
 20715  012FD6                     l6438:
 20716                           
 20717                           ;stkvar	_bexp @ sp[(-4)+1]
 20718                           ;stkvar	_grs @ sp[(-4)+0]
 20719  012FD6  0EFD               	movlw	-3
 20720  012FD8  006F FF8C  F032    	movff	plusw1,btemp
 20721  012FDE  0EFC               	movlw	-4
 20722  012FE0  0060  F0CB  FFE3   	movff	btemp,plusw1
 20723                           
 20724                           ;stkvar	_aexp @ sp[(-4)+2]
 20725                           ;stkvar	_bexp @ sp[(-4)+1]
 20726  012FE6  0EFE               	movlw	-2
 20727  012FE8  006F FF8C  F032    	movff	plusw1,btemp
 20728  012FEE  0EFD               	movlw	-3
 20729  012FF0  0060  F0CB  FFE3   	movff	btemp,plusw1
 20730                           
 20731                           ;stkvar	_grs @ sp[(-4)+0]
 20732                           ;stkvar	_aexp @ sp[(-4)+2]
 20733  012FF6  0EFC               	movlw	-4
 20734  012FF8  006F FF8C  F032    	movff	plusw1,btemp
 20735  012FFE  0EFE               	movlw	-2
 20736  013000  0060  F0CB  FFE3   	movff	btemp,plusw1
 20737                           
 20738                           ;stkvar	_b @ sp[(-4)+-4]
 20739                           ;stkvar	_grs @ sp[(-4)+0]
 20740  013006  0EF8               	movlw	-8
 20741  013008  006F FF8C  F032    	movff	plusw1,btemp
 20742  01300E  0EFC               	movlw	-4
 20743  013010  0060  F0CB  FFE3   	movff	btemp,plusw1
 20744                           
 20745                           ;stkvar	_a @ sp[(-4)+-8]
 20746                           ;stkvar	_b @ sp[(-4)+-4]
 20747  013016  0EF4               	movlw	-12
 20748  013018  006F FF8C  F032    	movff	plusw1,btemp
 20749  01301E  0EF8               	movlw	-8
 20750  013020  0060  F0CB  FFE3   	movff	btemp,plusw1
 20751                           
 20752                           ;stkvar	_grs @ sp[(-4)+0]
 20753                           ;stkvar	_a @ sp[(-4)+-8]
 20754  013026  0EFC               	movlw	-4
 20755  013028  006F FF8C  F032    	movff	plusw1,btemp
 20756  01302E  0EF4               	movlw	-12
 20757  013030  0060  F0CB  FFE3   	movff	btemp,plusw1
 20758                           
 20759                           ;stkvar	_b @ sp[(-4)+-4]
 20760  013036  0EF9               	movlw	249
 20761  013038  24E1               	addwf	fsr1l,w,c
 20762  01303A  6ED9               	movwf	fsr2l,c
 20763  01303C  0EFF               	movlw	255
 20764  01303E  20E2               	addwfc	fsr1h,w,c
 20765  013040  6EDA               	movwf	fsr2h,c
 20766  013042  50DF               	movf	indf2,w,c
 20767  013044  6E3D               	movwf	(btemp+11)^0,c
 20768                           
 20769                           ;stkvar	_grs @ sp[(-4)+0]
 20770  013046  0EFC               	movlw	-4
 20771  013048  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20772                           
 20773                           ;stkvar	_a @ sp[(-4)+-8]
 20774  01304E  0EF5               	movlw	245
 20775  013050  24E1               	addwf	fsr1l,w,c
 20776  013052  6ED9               	movwf	fsr2l,c
 20777  013054  0EFF               	movlw	255
 20778  013056  20E2               	addwfc	fsr1h,w,c
 20779  013058  6EDA               	movwf	fsr2h,c
 20780                           
 20781                           ;stkvar	_b @ sp[(-4)+-4]
 20782  01305A  0EF9               	movlw	249
 20783  01305C  24E1               	addwf	fsr1l,w,c
 20784  01305E  6EE9               	movwf	fsr0l,c
 20785  013060  0EFF               	movlw	255
 20786  013062  20E2               	addwfc	fsr1h,w,c
 20787  013064  6EEA               	movwf	fsr0h,c
 20788  013066  006F FF7F FFEF     	movff	indf2,indf0
 20789                           
 20790                           ;stkvar	_grs @ sp[(-4)+0]
 20791                           ;stkvar	_a @ sp[(-4)+-8]
 20792  01306C  0EF5               	movlw	245
 20793  01306E  24E1               	addwf	fsr1l,w,c
 20794  013070  6ED9               	movwf	fsr2l,c
 20795  013072  0EFF               	movlw	255
 20796  013074  20E2               	addwfc	fsr1h,w,c
 20797  013076  6EDA               	movwf	fsr2h,c
 20798  013078  0EFC               	movlw	-4
 20799  01307A  006F FF8F FFDF     	movff	plusw1,indf2
 20800                           
 20801                           ;stkvar	_b @ sp[(-4)+-4]
 20802  013080  0EFA               	movlw	250
 20803  013082  24E1               	addwf	fsr1l,w,c
 20804  013084  6ED9               	movwf	fsr2l,c
 20805  013086  0EFF               	movlw	255
 20806  013088  20E2               	addwfc	fsr1h,w,c
 20807  01308A  6EDA               	movwf	fsr2h,c
 20808  01308C  50DF               	movf	indf2,w,c
 20809  01308E  6E3D               	movwf	(btemp+11)^0,c
 20810                           
 20811                           ;stkvar	_grs @ sp[(-4)+0]
 20812  013090  0EFC               	movlw	-4
 20813  013092  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20814                           
 20815                           ;stkvar	_a @ sp[(-4)+-8]
 20816  013098  0EF6               	movlw	246
 20817  01309A  24E1               	addwf	fsr1l,w,c
 20818  01309C  6ED9               	movwf	fsr2l,c
 20819  01309E  0EFF               	movlw	255
 20820  0130A0  20E2               	addwfc	fsr1h,w,c
 20821  0130A2  6EDA               	movwf	fsr2h,c
 20822                           
 20823                           ;stkvar	_b @ sp[(-4)+-4]
 20824  0130A4  0EFA               	movlw	250
 20825  0130A6  24E1               	addwf	fsr1l,w,c
 20826  0130A8  6EE9               	movwf	fsr0l,c
 20827  0130AA  0EFF               	movlw	255
 20828  0130AC  20E2               	addwfc	fsr1h,w,c
 20829  0130AE  6EEA               	movwf	fsr0h,c
 20830  0130B0  006F FF7F FFEF     	movff	indf2,indf0
 20831                           
 20832                           ;stkvar	_grs @ sp[(-4)+0]
 20833                           ;stkvar	_a @ sp[(-4)+-8]
 20834  0130B6  0EF6               	movlw	246
 20835  0130B8  24E1               	addwf	fsr1l,w,c
 20836  0130BA  6ED9               	movwf	fsr2l,c
 20837  0130BC  0EFF               	movlw	255
 20838  0130BE  20E2               	addwfc	fsr1h,w,c
 20839  0130C0  6EDA               	movwf	fsr2h,c
 20840  0130C2  0EFC               	movlw	-4
 20841  0130C4  006F FF8F FFDF     	movff	plusw1,indf2
 20842                           
 20843                           ;stkvar	_b @ sp[(-4)+-4]
 20844  0130CA  0EFB               	movlw	251
 20845  0130CC  24E1               	addwf	fsr1l,w,c
 20846  0130CE  6ED9               	movwf	fsr2l,c
 20847  0130D0  0EFF               	movlw	255
 20848  0130D2  20E2               	addwfc	fsr1h,w,c
 20849  0130D4  6EDA               	movwf	fsr2h,c
 20850  0130D6  50DF               	movf	indf2,w,c
 20851  0130D8  6E3D               	movwf	(btemp+11)^0,c
 20852                           
 20853                           ;stkvar	_grs @ sp[(-4)+0]
 20854  0130DA  0EFC               	movlw	-4
 20855  0130DC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20856                           
 20857                           ;stkvar	_a @ sp[(-4)+-8]
 20858  0130E2  0EF7               	movlw	247
 20859  0130E4  24E1               	addwf	fsr1l,w,c
 20860  0130E6  6ED9               	movwf	fsr2l,c
 20861  0130E8  0EFF               	movlw	255
 20862  0130EA  20E2               	addwfc	fsr1h,w,c
 20863  0130EC  6EDA               	movwf	fsr2h,c
 20864                           
 20865                           ;stkvar	_b @ sp[(-4)+-4]
 20866  0130EE  0EFB               	movlw	251
 20867  0130F0  24E1               	addwf	fsr1l,w,c
 20868  0130F2  6EE9               	movwf	fsr0l,c
 20869  0130F4  0EFF               	movlw	255
 20870  0130F6  20E2               	addwfc	fsr1h,w,c
 20871  0130F8  6EEA               	movwf	fsr0h,c
 20872  0130FA  006F FF7F FFEF     	movff	indf2,indf0
 20873                           
 20874                           ;stkvar	_grs @ sp[(-4)+0]
 20875                           ;stkvar	_a @ sp[(-4)+-8]
 20876  013100  0EF7               	movlw	247
 20877  013102  24E1               	addwf	fsr1l,w,c
 20878  013104  6ED9               	movwf	fsr2l,c
 20879  013106  0EFF               	movlw	255
 20880  013108  20E2               	addwfc	fsr1h,w,c
 20881  01310A  6EDA               	movwf	fsr2h,c
 20882  01310C  0EFC               	movlw	-4
 20883  01310E  006F FF8F FFDF     	movff	plusw1,indf2
 20884  013114                     l6468:
 20885                           
 20886                           ;stkvar	_grs @ sp[(-4)+0]
 20887  013114  0EFC               	movlw	-4
 20888  013116  6AE3               	clrf	plusw1,c
 20889                           
 20890                           ;stkvar	_aexp @ sp[(-4)+2]
 20891  013118  0EFE               	movlw	-2
 20892  01311A  50E3               	movf	plusw1,w,c
 20893  01311C  6E3C               	movwf	(btemp+10)^0,c
 20894  01311E  6A3D               	clrf	(btemp+11)^0,c
 20895                           
 20896                           ;stkvar	_bexp @ sp[(-4)+1]
 20897  013120  0EFD               	movlw	-3
 20898  013122  50E3               	movf	plusw1,w,c
 20899  013124  5E3C               	subwf	(btemp+10)^0,f,c
 20900  013126  0E00               	movlw	0
 20901  013128  5A3D               	subwfb	(btemp+11)^0,f,c
 20902  01312A  BE3D               	btfsc	(btemp+11)^0,7,c
 20903  01312C  D062               	goto	l6492
 20904  01312E  503D               	movf	(btemp+11)^0,w,c
 20905  013130  E104               	bnz	u4720
 20906  013132  0E1A               	movlw	26
 20907  013134  5C3C               	subwf	(btemp+10)^0,w,c
 20908  013136  A0D8               	btfss	status,0,c
 20909  013138  D05C               	goto	l6492
 20910  01313A                     u4720:
 20911                           
 20912                           ;stkvar	_b @ sp[(-4)+-4]
 20913  01313A  0EF8               	movlw	-8
 20914  01313C  50E3               	movf	plusw1,w,c
 20915  01313E  E10A               	bnz	u4731
 20916  013140  0EF9               	movlw	-7
 20917  013142  50E3               	movf	plusw1,w,c
 20918  013144  E107               	bnz	u4731
 20919  013146  0EFA               	movlw	-6
 20920  013148  50E3               	movf	plusw1,w,c
 20921  01314A  E104               	bnz	u4731
 20922  01314C  0EFB               	movlw	-5
 20923  01314E  50E3               	movf	plusw1,w,c
 20924  013150  B4D8               	btfsc	status,2,c
 20925  013152  D003               	goto	u4730
 20926  013154                     u4731:
 20927  013154  6A3D               	clrf	(btemp+11)^0,c
 20928  013156  2A3D               	incf	(btemp+11)^0,f,c
 20929  013158  D001               	goto	u4748
 20930  01315A                     u4730:
 20931  01315A  6A3D               	clrf	(btemp+11)^0,c
 20932  01315C                     u4748:
 20933                           
 20934                           ;stkvar	_grs @ sp[(-4)+0]
 20935  01315C  0EFC               	movlw	-4
 20936  01315E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20937                           
 20938                           ;stkvar	_b @ sp[(-4)+-4]
 20939  013164  0EF8               	movlw	-8
 20940  013166  6AE3               	clrf	plusw1,c
 20941  013168  0EF9               	movlw	-7
 20942  01316A  6AE3               	clrf	plusw1,c
 20943  01316C  0EFA               	movlw	-6
 20944  01316E  6AE3               	clrf	plusw1,c
 20945  013170  0EFB               	movlw	-5
 20946  013172  6AE3               	clrf	plusw1,c
 20947                           
 20948                           ;stkvar	_aexp @ sp[(-4)+2]
 20949                           ;stkvar	_bexp @ sp[(-4)+1]
 20950  013174  0EFE               	movlw	-2
 20951  013176  006F FF8C  F032    	movff	plusw1,btemp
 20952  01317C  0EFD               	movlw	-3
 20953  01317E  0060  F0CB  FFE3   	movff	btemp,plusw1
 20954  013184  D042               	goto	u4780
 20955  013186                     l6478:
 20956                           
 20957                           ;stkvar	_grs @ sp[(-4)+0]
 20958  013186  0EFC               	movlw	-4
 20959  013188  A0E3               	btfss	plusw1,0,c
 20960  01318A  D00D               	goto	l6482
 20961                           
 20962                           ;stkvar	_grs @ sp[(-4)+0]
 20963  01318C  0EFC               	movlw	-4
 20964  01318E  006F FF8C  F03D    	movff	plusw1,btemp+11
 20965  013194  90D8               	bcf	status,0,c
 20966  013196  323D               	rrcf	(btemp+11)^0,f,c
 20967  013198  0E01               	movlw	1
 20968  01319A  123D               	iorwf	(btemp+11)^0,f,c
 20969                           
 20970                           ;stkvar	_grs @ sp[(-4)+0]
 20971  01319C  0EFC               	movlw	-4
 20972  01319E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20973  0131A4  D009               	goto	l6484
 20974  0131A6                     l6482:
 20975                           
 20976                           ;stkvar	_grs @ sp[(-4)+0]
 20977  0131A6  50E1               	movf	fsr1l,w,c
 20978  0131A8  0FFC               	addlw	-4
 20979  0131AA  6ED9               	movwf	fsr2l,c
 20980  0131AC  50E2               	movf	fsr1h,w,c
 20981  0131AE  6EDA               	movwf	fsr2h,c
 20982  0131B0  0EFF               	movlw	255
 20983  0131B2  22DA               	addwfc	fsr2h,f,c
 20984  0131B4  90D8               	bcf	status,0,c
 20985  0131B6  32DF               	rrcf	indf2,f,c
 20986  0131B8                     l6484:
 20987                           
 20988                           ;stkvar	_b @ sp[(-4)+-4]
 20989  0131B8  0EF8               	movlw	-8
 20990  0131BA  A0E3               	btfss	plusw1,0,c
 20991  0131BC  D002               	goto	l6488
 20992                           
 20993                           ;stkvar	_grs @ sp[(-4)+0]
 20994  0131BE  0EFC               	movlw	-4
 20995  0131C0  8EE3               	bsf	plusw1,7,c
 20996  0131C2                     l6488:
 20997  0131C2  0E01               	movlw	1
 20998  0131C4  6E3D               	movwf	(btemp+11)^0,c
 20999                           
 21000                           ;stkvar	_b @ sp[(-4)+-4]
 21001  0131C6  50E1               	movf	fsr1l,w,c
 21002  0131C8  0FF8               	addlw	-8
 21003  0131CA  6ED9               	movwf	fsr2l,c
 21004  0131CC  50E2               	movf	fsr1h,w,c
 21005  0131CE  6EDA               	movwf	fsr2h,c
 21006  0131D0  0EFF               	movlw	255
 21007  0131D2  22DA               	addwfc	fsr2h,f,c
 21008  0131D4  283D               	incf	(btemp+11)^0,w,c
 21009  0131D6  52DE               	movf	postinc2,f,c
 21010  0131D8  D008               	goto	u4770
 21011  0131DA                     u4775:
 21012  0131DA  52DE               	movf	postinc2,f,c
 21013  0131DC  90D8               	bcf	status,0,c
 21014  0131DE  BEDC               	btfsc	preinc2,7,c
 21015  0131E0  80D8               	bsf	status,0,c
 21016  0131E2  32DD               	rrcf	postdec2,f,c
 21017  0131E4  32DD               	rrcf	postdec2,f,c
 21018  0131E6  32DD               	rrcf	postdec2,f,c
 21019  0131E8  32DE               	rrcf	postinc2,f,c
 21020  0131EA                     u4770:
 21021  0131EA  2EE8               	decfsz	wreg,f,c
 21022  0131EC  D7F6               	goto	u4775
 21023                           
 21024                           ;stkvar	_bexp @ sp[(-4)+1]
 21025  0131EE  0EFD               	movlw	-3
 21026  0131F0  2AE3               	incf	plusw1,f,c
 21027  0131F2                     l6492:
 21028                           
 21029                           ;stkvar	_aexp @ sp[(-4)+2]
 21030                           ;stkvar	_bexp @ sp[(-4)+1]
 21031  0131F2  50E1               	movf	fsr1l,w,c
 21032  0131F4  0FFD               	addlw	-3
 21033  0131F6  6ED9               	movwf	fsr2l,c
 21034  0131F8  50E2               	movf	fsr1h,w,c
 21035  0131FA  6EDA               	movwf	fsr2h,c
 21036  0131FC  0EFF               	movlw	255
 21037  0131FE  22DA               	addwfc	fsr2h,f,c
 21038  013200  0EFE               	movlw	-2
 21039  013202  50E3               	movf	plusw1,w,c
 21040  013204  5CDE               	subwf	postinc2,w,c
 21041  013206  A0D8               	btfss	status,0,c
 21042  013208  D7BE               	goto	l6478
 21043  01320A                     u4780:
 21044                           
 21045                           ;stkvar	_signs @ sp[(-4)+3]
 21046  01320A  0EFF               	movlw	-1
 21047  01320C  BCE3               	btfsc	plusw1,6,c
 21048  01320E  D066               	goto	l6520
 21049                           
 21050                           ;stkvar	_bexp @ sp[(-4)+1]
 21051  013210  0EFD               	movlw	-3
 21052  013212  50E3               	movf	plusw1,w,c
 21053  013214  B4D8               	btfsc	status,2,c
 21054  013216  D0F2               	goto	u4880
 21055                           
 21056                           ;stkvar	_a @ sp[(-4)+-8]
 21057                           ;stkvar	_b @ sp[(-4)+-4]
 21058  013218  0EF8               	movlw	-8
 21059  01321A  50E3               	movf	plusw1,w,c
 21060  01321C  6E32               	movwf	btemp^0,c
 21061  01321E  0EF4               	movlw	-12
 21062  013220  50E3               	movf	plusw1,w,c
 21063  013222  2632               	addwf	btemp^0,f,c
 21064  013224  0EF8               	movlw	-8
 21065  013226  0060  F0CB  FFE3   	movff	btemp,plusw1
 21066  01322C  0EF9               	movlw	-7
 21067  01322E  50E3               	movf	plusw1,w,c
 21068  013230  6E32               	movwf	btemp^0,c
 21069  013232  0EF5               	movlw	-11
 21070  013234  50E3               	movf	plusw1,w,c
 21071  013236  2232               	addwfc	btemp^0,f,c
 21072  013238  0EF9               	movlw	-7
 21073  01323A  0060  F0CB  FFE3   	movff	btemp,plusw1
 21074  013240  0EFA               	movlw	-6
 21075  013242  50E3               	movf	plusw1,w,c
 21076  013244  6E32               	movwf	btemp^0,c
 21077  013246  0EF6               	movlw	-10
 21078  013248  50E3               	movf	plusw1,w,c
 21079  01324A  2232               	addwfc	btemp^0,f,c
 21080  01324C  0EFA               	movlw	-6
 21081  01324E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21082  013254  0EFB               	movlw	-5
 21083  013256  50E3               	movf	plusw1,w,c
 21084  013258  6E32               	movwf	btemp^0,c
 21085  01325A  0EF7               	movlw	-9
 21086  01325C  50E3               	movf	plusw1,w,c
 21087  01325E  2232               	addwfc	btemp^0,f,c
 21088  013260  0EFB               	movlw	-5
 21089  013262  0060  F0CB  FFE3   	movff	btemp,plusw1
 21090                           
 21091                           ;stkvar	_b @ sp[(-4)+-4]
 21092  013268  0EFB               	movlw	-5
 21093  01326A  A0E3               	btfss	plusw1,0,c
 21094  01326C  D101               	goto	u4920
 21095                           
 21096                           ;stkvar	_grs @ sp[(-4)+0]
 21097  01326E  0EFC               	movlw	-4
 21098  013270  A0E3               	btfss	plusw1,0,c
 21099  013272  D00D               	goto	l6510
 21100                           
 21101                           ;stkvar	_grs @ sp[(-4)+0]
 21102  013274  0EFC               	movlw	-4
 21103  013276  006F FF8C  F03D    	movff	plusw1,btemp+11
 21104  01327C  90D8               	bcf	status,0,c
 21105  01327E  323D               	rrcf	(btemp+11)^0,f,c
 21106  013280  0E01               	movlw	1
 21107  013282  123D               	iorwf	(btemp+11)^0,f,c
 21108                           
 21109                           ;stkvar	_grs @ sp[(-4)+0]
 21110  013284  0EFC               	movlw	-4
 21111  013286  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21112  01328C  D009               	goto	l6512
 21113  01328E                     l6510:
 21114                           
 21115                           ;stkvar	_grs @ sp[(-4)+0]
 21116  01328E  50E1               	movf	fsr1l,w,c
 21117  013290  0FFC               	addlw	-4
 21118  013292  6ED9               	movwf	fsr2l,c
 21119  013294  50E2               	movf	fsr1h,w,c
 21120  013296  6EDA               	movwf	fsr2h,c
 21121  013298  0EFF               	movlw	255
 21122  01329A  22DA               	addwfc	fsr2h,f,c
 21123  01329C  90D8               	bcf	status,0,c
 21124  01329E  32DF               	rrcf	indf2,f,c
 21125  0132A0                     l6512:
 21126                           
 21127                           ;stkvar	_b @ sp[(-4)+-4]
 21128  0132A0  0EF8               	movlw	-8
 21129  0132A2  A0E3               	btfss	plusw1,0,c
 21130  0132A4  D002               	goto	l6516
 21131                           
 21132                           ;stkvar	_grs @ sp[(-4)+0]
 21133  0132A6  0EFC               	movlw	-4
 21134  0132A8  8EE3               	bsf	plusw1,7,c
 21135  0132AA                     l6516:
 21136  0132AA  0E01               	movlw	1
 21137  0132AC  6E3D               	movwf	(btemp+11)^0,c
 21138                           
 21139                           ;stkvar	_b @ sp[(-4)+-4]
 21140  0132AE  50E1               	movf	fsr1l,w,c
 21141  0132B0  0FF8               	addlw	-8
 21142  0132B2  6ED9               	movwf	fsr2l,c
 21143  0132B4  50E2               	movf	fsr1h,w,c
 21144  0132B6  6EDA               	movwf	fsr2h,c
 21145  0132B8  0EFF               	movlw	255
 21146  0132BA  22DA               	addwfc	fsr2h,f,c
 21147  0132BC  283D               	incf	(btemp+11)^0,w,c
 21148  0132BE  52DE               	movf	postinc2,f,c
 21149  0132C0  D008               	goto	u4840
 21150  0132C2                     u4845:
 21151  0132C2  52DE               	movf	postinc2,f,c
 21152  0132C4  90D8               	bcf	status,0,c
 21153  0132C6  BEDC               	btfsc	preinc2,7,c
 21154  0132C8  80D8               	bsf	status,0,c
 21155  0132CA  32DD               	rrcf	postdec2,f,c
 21156  0132CC  32DD               	rrcf	postdec2,f,c
 21157  0132CE  32DD               	rrcf	postdec2,f,c
 21158  0132D0  32DE               	rrcf	postinc2,f,c
 21159  0132D2                     u4840:
 21160  0132D2  2EE8               	decfsz	wreg,f,c
 21161  0132D4  D7F6               	goto	u4845
 21162                           
 21163                           ;stkvar	_bexp @ sp[(-4)+1]
 21164  0132D6  0EFD               	movlw	-3
 21165  0132D8  2AE3               	incf	plusw1,f,c
 21166  0132DA  D0CA               	goto	u4920
 21167  0132DC                     l6520:
 21168                           
 21169                           ;stkvar	_a @ sp[(-4)+-8]
 21170                           ;stkvar	_b @ sp[(-4)+-4]
 21171  0132DC  50E1               	movf	fsr1l,w,c
 21172  0132DE  0FF8               	addlw	-8
 21173  0132E0  6ED9               	movwf	fsr2l,c
 21174  0132E2  50E2               	movf	fsr1h,w,c
 21175  0132E4  6EDA               	movwf	fsr2h,c
 21176  0132E6  0EFF               	movlw	255
 21177  0132E8  22DA               	addwfc	fsr2h,f,c
 21178  0132EA  0EF4               	movlw	-12
 21179  0132EC  50E3               	movf	plusw1,w,c
 21180  0132EE  5CDE               	subwf	postinc2,w,c
 21181  0132F0  0EF5               	movlw	-11
 21182  0132F2  50E3               	movf	plusw1,w,c
 21183  0132F4  58DE               	subwfb	postinc2,w,c
 21184  0132F6  0EF6               	movlw	-10
 21185  0132F8  50E3               	movf	plusw1,w,c
 21186  0132FA  58DE               	subwfb	postinc2,w,c
 21187  0132FC  50DE               	movf	postinc2,w,c
 21188  0132FE  0A80               	xorlw	128
 21189  013300  6E32               	movwf	btemp^0,c
 21190  013302  0EF7               	movlw	-9
 21191  013304  50E3               	movf	plusw1,w,c
 21192  013306  0A80               	xorlw	128
 21193  013308  5832               	subwfb	btemp^0,w,c
 21194  01330A  B0D8               	btfsc	status,0,c
 21195  01330C  D053               	goto	l6532
 21196                           
 21197                           ;stkvar	_b @ sp[(-4)+-4]
 21198                           ;stkvar	_a @ sp[(-4)+-8]
 21199  01330E  0EF4               	movlw	-12
 21200  013310  006F FF8C  F03A    	movff	plusw1,btemp+8
 21201  013316  0EF5               	movlw	-11
 21202  013318  006F FF8C  F03B    	movff	plusw1,btemp+9
 21203  01331E  0EF6               	movlw	-10
 21204  013320  006F FF8C  F03C    	movff	plusw1,btemp+10
 21205  013326  0EF7               	movlw	-9
 21206  013328  006F FF8C  F03D    	movff	plusw1,btemp+11
 21207  01332E  0EF8               	movlw	-8
 21208  013330  50E3               	movf	plusw1,w,c
 21209  013332  5E3A               	subwf	(btemp+8)^0,f,c
 21210  013334  0EF9               	movlw	-7
 21211  013336  50E3               	movf	plusw1,w,c
 21212  013338  5A3B               	subwfb	(btemp+9)^0,f,c
 21213  01333A  0EFA               	movlw	-6
 21214  01333C  50E3               	movf	plusw1,w,c
 21215  01333E  5A3C               	subwfb	(btemp+10)^0,f,c
 21216  013340  0EFB               	movlw	-5
 21217  013342  50E3               	movf	plusw1,w,c
 21218  013344  5A3D               	subwfb	(btemp+11)^0,f,c
 21219  013346  0EFF               	movlw	255
 21220  013348  243A               	addwf	(btemp+8)^0,w,c
 21221  01334A  6E36               	movwf	(btemp+4)^0,c
 21222  01334C  0EFF               	movlw	255
 21223  01334E  203B               	addwfc	(btemp+9)^0,w,c
 21224  013350  6E37               	movwf	(btemp+5)^0,c
 21225  013352  0EFF               	movlw	255
 21226  013354  203C               	addwfc	(btemp+10)^0,w,c
 21227  013356  6E38               	movwf	(btemp+6)^0,c
 21228  013358  0EFF               	movlw	255
 21229  01335A  203D               	addwfc	(btemp+11)^0,w,c
 21230  01335C  6E39               	movwf	(btemp+7)^0,c
 21231                           
 21232                           ;stkvar	_b @ sp[(-4)+-4]
 21233  01335E  0EF8               	movlw	-8
 21234  013360  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21235  013366  0EF9               	movlw	-7
 21236  013368  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21237  01336E  0EFA               	movlw	-6
 21238  013370  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21239  013376  0EFB               	movlw	-5
 21240  013378  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21241                           
 21242                           ;stkvar	_signs @ sp[(-4)+3]
 21243  01337E  0EFF               	movlw	-1
 21244  013380  7EE3               	btg	plusw1,7,c
 21245                           
 21246                           ;stkvar	_grs @ sp[(-4)+0]
 21247  013382  0EFC               	movlw	-4
 21248  013384  50E3               	movf	plusw1,w,c
 21249  013386  0800               	sublw	0
 21250  013388  6E3D               	movwf	(btemp+11)^0,c
 21251                           
 21252                           ;stkvar	_grs @ sp[(-4)+0]
 21253  01338A  0EFC               	movlw	-4
 21254  01338C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21255                           
 21256                           ;stkvar	_grs @ sp[(-4)+0]
 21257  013392  0EFC               	movlw	-4
 21258  013394  50E3               	movf	plusw1,w,c
 21259  013396  A4D8               	btfss	status,2,c
 21260  013398  D020               	goto	l6534
 21261                           
 21262                           ;stkvar	_b @ sp[(-4)+-4]
 21263  01339A  50E1               	movf	fsr1l,w,c
 21264  01339C  0FF8               	addlw	-8
 21265  01339E  6ED9               	movwf	fsr2l,c
 21266  0133A0  50E2               	movf	fsr1h,w,c
 21267  0133A2  6EDA               	movwf	fsr2h,c
 21268  0133A4  0EFF               	movlw	255
 21269  0133A6  22DA               	addwfc	fsr2h,f,c
 21270  0133A8  2ADE               	incf	postinc2,f,c
 21271  0133AA  0E00               	movlw	0
 21272  0133AC  22DE               	addwfc	postinc2,f,c
 21273  0133AE  22DE               	addwfc	postinc2,f,c
 21274  0133B0  22DE               	addwfc	postinc2,f,c
 21275  0133B2  D013               	goto	l6534
 21276  0133B4                     l6532:
 21277                           
 21278                           ;stkvar	_a @ sp[(-4)+-8]
 21279                           ;stkvar	_b @ sp[(-4)+-4]
 21280  0133B4  50E1               	movf	fsr1l,w,c
 21281  0133B6  0FF8               	addlw	-8
 21282  0133B8  6ED9               	movwf	fsr2l,c
 21283  0133BA  50E2               	movf	fsr1h,w,c
 21284  0133BC  6EDA               	movwf	fsr2h,c
 21285  0133BE  0EFF               	movlw	255
 21286  0133C0  22DA               	addwfc	fsr2h,f,c
 21287  0133C2  0EF4               	movlw	-12
 21288  0133C4  50E3               	movf	plusw1,w,c
 21289  0133C6  5EDE               	subwf	postinc2,f,c
 21290  0133C8  0EF5               	movlw	-11
 21291  0133CA  50E3               	movf	plusw1,w,c
 21292  0133CC  5ADE               	subwfb	postinc2,f,c
 21293  0133CE  0EF6               	movlw	-10
 21294  0133D0  50E3               	movf	plusw1,w,c
 21295  0133D2  5ADE               	subwfb	postinc2,f,c
 21296  0133D4  0EF7               	movlw	-9
 21297  0133D6  50E3               	movf	plusw1,w,c
 21298  0133D8  5ADE               	subwfb	postinc2,f,c
 21299  0133DA                     l6534:
 21300                           
 21301                           ;stkvar	_b @ sp[(-4)+-4]
 21302  0133DA  0EF8               	movlw	-8
 21303  0133DC  50E3               	movf	plusw1,w,c
 21304  0133DE  E145               	bnz	l6556
 21305  0133E0  0EF9               	movlw	-7
 21306  0133E2  50E3               	movf	plusw1,w,c
 21307  0133E4  E142               	bnz	l6556
 21308  0133E6  0EFA               	movlw	-6
 21309  0133E8  50E3               	movf	plusw1,w,c
 21310  0133EA  E13F               	bnz	l6556
 21311  0133EC  0EFB               	movlw	-5
 21312  0133EE  50E3               	movf	plusw1,w,c
 21313  0133F0  A4D8               	btfss	status,2,c
 21314  0133F2  D03B               	goto	l6556
 21315                           
 21316                           ;stkvar	_grs @ sp[(-4)+0]
 21317  0133F4  0EFC               	movlw	-4
 21318  0133F6  50E3               	movf	plusw1,w,c
 21319  0133F8  A4D8               	btfss	status,2,c
 21320  0133FA  D037               	goto	l6556
 21321  0133FC                     u4880:
 21322  0133FC  0E00               	movlw	0
 21323  0133FE  6E32               	movwf	btemp^0,c
 21324  013400  0E00               	movlw	0
 21325  013402  6E33               	movwf	(btemp+1)^0,c
 21326  013404  0E00               	movlw	0
 21327  013406  6E34               	movwf	(btemp+2)^0,c
 21328  013408  0E00               	movlw	0
 21329  01340A  6E35               	movwf	(btemp+3)^0,c
 21330  01340C  D0C6               	goto	l2636
 21331  01340E                     l6542:
 21332                           
 21333                           ;stkvar	_b @ sp[(-4)+-4]
 21334  01340E  90D8               	bcf	status,0,c
 21335  013410  0EF8               	movlw	-8
 21336  013412  36E3               	rlcf	plusw1,f,c
 21337  013414  0EF9               	movlw	-7
 21338  013416  36E3               	rlcf	plusw1,f,c
 21339  013418  0EFA               	movlw	-6
 21340  01341A  36E3               	rlcf	plusw1,f,c
 21341  01341C  0EFB               	movlw	-5
 21342  01341E  36E3               	rlcf	plusw1,f,c
 21343                           
 21344                           ;stkvar	_grs @ sp[(-4)+0]
 21345  013420  0EFC               	movlw	-4
 21346  013422  AEE3               	btfss	plusw1,7,c
 21347  013424  D002               	goto	l2648
 21348                           
 21349                           ;stkvar	_b @ sp[(-4)+-4]
 21350  013426  0EF8               	movlw	-8
 21351  013428  80E3               	bsf	plusw1,0,c
 21352  01342A                     l2648:
 21353                           
 21354                           ;stkvar	_grs @ sp[(-4)+0]
 21355  01342A  0EFC               	movlw	-4
 21356  01342C  A0E3               	btfss	plusw1,0,c
 21357  01342E  D00E               	goto	l6550
 21358                           
 21359                           ;stkvar	_grs @ sp[(-4)+0]
 21360  013430  0EFC               	movlw	-4
 21361  013432  006F FF8C  F03D    	movff	plusw1,btemp+11
 21362  013438  90D8               	bcf	status,0,c
 21363  01343A  343D               	rlcf	(btemp+11)^0,w,c
 21364  01343C  6E3C               	movwf	(btemp+10)^0,c
 21365  01343E  0E01               	movlw	1
 21366  013440  123C               	iorwf	(btemp+10)^0,f,c
 21367                           
 21368                           ;stkvar	_grs @ sp[(-4)+0]
 21369  013442  0EFC               	movlw	-4
 21370  013444  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21371  01344A  D009               	goto	l6552
 21372  01344C                     l6550:
 21373                           
 21374                           ;stkvar	_grs @ sp[(-4)+0]
 21375  01344C  50E1               	movf	fsr1l,w,c
 21376  01344E  0FFC               	addlw	-4
 21377  013450  6ED9               	movwf	fsr2l,c
 21378  013452  50E2               	movf	fsr1h,w,c
 21379  013454  6EDA               	movwf	fsr2h,c
 21380  013456  0EFF               	movlw	255
 21381  013458  22DA               	addwfc	fsr2h,f,c
 21382  01345A  90D8               	bcf	status,0,c
 21383  01345C  36DF               	rlcf	indf2,f,c
 21384  01345E                     l6552:
 21385                           
 21386                           ;stkvar	_bexp @ sp[(-4)+1]
 21387  01345E  0EFD               	movlw	-3
 21388  013460  50E3               	movf	plusw1,w,c
 21389  013462  B4D8               	btfsc	status,2,c
 21390  013464  D002               	goto	l6556
 21391                           
 21392                           ;stkvar	_bexp @ sp[(-4)+1]
 21393  013466  0EFD               	movlw	-3
 21394  013468  06E3               	decf	plusw1,f,c
 21395  01346A                     l6556:
 21396                           
 21397                           ;stkvar	_b @ sp[(-4)+-4]
 21398  01346A  0EFA               	movlw	-6
 21399  01346C  AEE3               	btfss	plusw1,7,c
 21400  01346E  D7CF               	goto	l6542
 21401  013470                     u4920:
 21402                           
 21403                           ;stkvar	_aexp @ sp[(-4)+2]
 21404  013470  0EFE               	movlw	-2
 21405  013472  6AE3               	clrf	plusw1,c
 21406                           
 21407                           ;stkvar	_grs @ sp[(-4)+0]
 21408  013474  0EFC               	movlw	-4
 21409  013476  AEE3               	btfss	plusw1,7,c
 21410  013478  D00F               	goto	l6570
 21411                           
 21412                           ;stkvar	_grs @ sp[(-4)+0]
 21413  01347A  0EFC               	movlw	-4
 21414  01347C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21415  013482  0E7F               	movlw	127
 21416  013484  163D               	andwf	(btemp+11)^0,f,c
 21417  013486  B4D8               	btfsc	status,2,c
 21418  013488  D004               	goto	l6566
 21419  01348A                     u4940:
 21420                           
 21421                           ;stkvar	_aexp @ sp[(-4)+2]
 21422  01348A  0EFE               	movlw	-2
 21423  01348C  6AE3               	clrf	plusw1,c
 21424  01348E  2AE3               	incf	plusw1,f,c
 21425  013490  D003               	goto	l6570
 21426  013492                     l6566:
 21427                           
 21428                           ;stkvar	_b @ sp[(-4)+-4]
 21429  013492  0EF8               	movlw	-8
 21430  013494  B0E3               	btfsc	plusw1,0,c
 21431  013496  D7F9               	goto	u4940
 21432  013498                     l6570:
 21433                           
 21434                           ;stkvar	_aexp @ sp[(-4)+2]
 21435  013498  0EFE               	movlw	-2
 21436  01349A  50E3               	movf	plusw1,w,c
 21437  01349C  B4D8               	btfsc	status,2,c
 21438  01349E  D02B               	goto	l6582
 21439                           
 21440                           ;stkvar	_b @ sp[(-4)+-4]
 21441  0134A0  50E1               	movf	fsr1l,w,c
 21442  0134A2  0FF8               	addlw	-8
 21443  0134A4  6ED9               	movwf	fsr2l,c
 21444  0134A6  50E2               	movf	fsr1h,w,c
 21445  0134A8  6EDA               	movwf	fsr2h,c
 21446  0134AA  0EFF               	movlw	255
 21447  0134AC  22DA               	addwfc	fsr2h,f,c
 21448  0134AE  2ADE               	incf	postinc2,f,c
 21449  0134B0  0E00               	movlw	0
 21450  0134B2  22DE               	addwfc	postinc2,f,c
 21451  0134B4  22DE               	addwfc	postinc2,f,c
 21452  0134B6  22DE               	addwfc	postinc2,f,c
 21453                           
 21454                           ;stkvar	_b @ sp[(-4)+-4]
 21455  0134B8  0EFB               	movlw	-5
 21456  0134BA  A0E3               	btfss	plusw1,0,c
 21457  0134BC  D01C               	goto	l6582
 21458  0134BE  0E01               	movlw	1
 21459  0134C0  6E3D               	movwf	(btemp+11)^0,c
 21460                           
 21461                           ;stkvar	_b @ sp[(-4)+-4]
 21462  0134C2  50E1               	movf	fsr1l,w,c
 21463  0134C4  0FF8               	addlw	-8
 21464  0134C6  6ED9               	movwf	fsr2l,c
 21465  0134C8  50E2               	movf	fsr1h,w,c
 21466  0134CA  6EDA               	movwf	fsr2h,c
 21467  0134CC  0EFF               	movlw	255
 21468  0134CE  22DA               	addwfc	fsr2h,f,c
 21469  0134D0  283D               	incf	(btemp+11)^0,w,c
 21470  0134D2  52DE               	movf	postinc2,f,c
 21471  0134D4  D008               	goto	u4980
 21472  0134D6                     u4985:
 21473  0134D6  52DE               	movf	postinc2,f,c
 21474  0134D8  90D8               	bcf	status,0,c
 21475  0134DA  BEDC               	btfsc	preinc2,7,c
 21476  0134DC  80D8               	bsf	status,0,c
 21477  0134DE  32DD               	rrcf	postdec2,f,c
 21478  0134E0  32DD               	rrcf	postdec2,f,c
 21479  0134E2  32DD               	rrcf	postdec2,f,c
 21480  0134E4  32DE               	rrcf	postinc2,f,c
 21481  0134E6                     u4980:
 21482  0134E6  2EE8               	decfsz	wreg,f,c
 21483  0134E8  D7F6               	goto	u4985
 21484                           
 21485                           ;stkvar	_bexp @ sp[(-4)+1]
 21486  0134EA  0EFD               	movlw	-3
 21487  0134EC  28E3               	incf	plusw1,w,c
 21488  0134EE  B4D8               	btfsc	status,2,c
 21489  0134F0  D002               	goto	l6582
 21490                           
 21491                           ;stkvar	_bexp @ sp[(-4)+1]
 21492  0134F2  0EFD               	movlw	-3
 21493  0134F4  2AE3               	incf	plusw1,f,c
 21494  0134F6                     l6582:
 21495                           
 21496                           ;stkvar	_bexp @ sp[(-4)+1]
 21497  0134F6  0EFD               	movlw	-3
 21498  0134F8  28E3               	incf	plusw1,w,c
 21499  0134FA  B4D8               	btfsc	status,2,c
 21500  0134FC  D004               	goto	u5010
 21501                           
 21502                           ;stkvar	_bexp @ sp[(-4)+1]
 21503  0134FE  0EFD               	movlw	-3
 21504  013500  50E3               	movf	plusw1,w,c
 21505  013502  A4D8               	btfss	status,2,c
 21506  013504  D00E               	goto	l6592
 21507  013506                     u5010:
 21508                           
 21509                           ;stkvar	_b @ sp[(-4)+-4]
 21510  013506  0EF8               	movlw	-8
 21511  013508  6AE3               	clrf	plusw1,c
 21512  01350A  0EF9               	movlw	-7
 21513  01350C  6AE3               	clrf	plusw1,c
 21514  01350E  0EFA               	movlw	-6
 21515  013510  6AE3               	clrf	plusw1,c
 21516  013512  0EFB               	movlw	-5
 21517  013514  6AE3               	clrf	plusw1,c
 21518                           
 21519                           ;stkvar	_bexp @ sp[(-4)+1]
 21520  013516  0EFD               	movlw	-3
 21521  013518  50E3               	movf	plusw1,w,c
 21522  01351A  A4D8               	btfss	status,2,c
 21523  01351C  D002               	goto	l6592
 21524                           
 21525                           ;stkvar	_signs @ sp[(-4)+3]
 21526  01351E  0EFF               	movlw	-1
 21527  013520  6AE3               	clrf	plusw1,c
 21528  013522                     l6592:
 21529                           
 21530                           ;stkvar	_bexp @ sp[(-4)+1]
 21531  013522  0EFD               	movlw	-3
 21532  013524  A0E3               	btfss	plusw1,0,c
 21533  013526  D009               	goto	l6596
 21534                           
 21535                           ;stkvar	_b @ sp[(-4)+-4]
 21536  013528  0EFA               	movlw	250
 21537  01352A  24E1               	addwf	fsr1l,w,c
 21538  01352C  6ED9               	movwf	fsr2l,c
 21539  01352E  0EFF               	movlw	255
 21540  013530  20E2               	addwfc	fsr1h,w,c
 21541  013532  6EDA               	movwf	fsr2h,c
 21542  013534  0E00               	movlw	0
 21543  013536  8EDB               	bsf	plusw2,7,c
 21544  013538  D008               	goto	l6598
 21545  01353A                     l6596:
 21546                           
 21547                           ;stkvar	_b @ sp[(-4)+-4]
 21548  01353A  0EFA               	movlw	250
 21549  01353C  24E1               	addwf	fsr1l,w,c
 21550  01353E  6ED9               	movwf	fsr2l,c
 21551  013540  0EFF               	movlw	255
 21552  013542  20E2               	addwfc	fsr1h,w,c
 21553  013544  6EDA               	movwf	fsr2h,c
 21554  013546  0E7F               	movlw	127
 21555  013548  16DF               	andwf	indf2,f,c
 21556  01354A                     l6598:
 21557                           
 21558                           ;stkvar	_b @ sp[(-4)+-4]
 21559  01354A  0EFB               	movlw	251
 21560  01354C  24E1               	addwf	fsr1l,w,c
 21561  01354E  6ED9               	movwf	fsr2l,c
 21562  013550  0EFF               	movlw	255
 21563  013552  20E2               	addwfc	fsr1h,w,c
 21564  013554  6EDA               	movwf	fsr2h,c
 21565                           
 21566                           ;stkvar	_bexp @ sp[(-4)+1]
 21567  013556  0EFD               	movlw	-3
 21568  013558  006F FF8C  F03D    	movff	plusw1,btemp+11
 21569  01355E  90D8               	bcf	status,0,c
 21570  013560  303D               	rrcf	(btemp+11)^0,w,c
 21571  013562  6EDF               	movwf	indf2,c
 21572                           
 21573                           ;stkvar	_signs @ sp[(-4)+3]
 21574  013564  0EFF               	movlw	-1
 21575  013566  AEE3               	btfss	plusw1,7,c
 21576  013568  D008               	goto	l6604
 21577                           
 21578                           ;stkvar	_b @ sp[(-4)+-4]
 21579  01356A  0EFB               	movlw	251
 21580  01356C  24E1               	addwf	fsr1l,w,c
 21581  01356E  6ED9               	movwf	fsr2l,c
 21582  013570  0EFF               	movlw	255
 21583  013572  20E2               	addwfc	fsr1h,w,c
 21584  013574  6EDA               	movwf	fsr2h,c
 21585  013576  0E00               	movlw	0
 21586  013578  8EDB               	bsf	plusw2,7,c
 21587  01357A                     l6604:
 21588                           
 21589                           ;stkvar	_b @ sp[(-4)+-4]
 21590  01357A  0EF8               	movlw	-8
 21591  01357C  006F FF8C  F032    	movff	plusw1,btemp
 21592  013582  0EF9               	movlw	-7
 21593  013584  006F FF8C  F033    	movff	plusw1,btemp+1
 21594  01358A  0EFA               	movlw	-6
 21595  01358C  006F FF8C  F034    	movff	plusw1,btemp+2
 21596  013592  0EFB               	movlw	-5
 21597  013594  006F FF8C  F035    	movff	plusw1,btemp+3
 21598  01359A                     l2636:
 21599                           
 21600                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21601  01359A  0EF4               	movlw	244
 21602  01359C  26E1               	addwf	fsr1l,f,c
 21603  01359E  0EFF               	movlw	255
 21604  0135A0  22E2               	addwfc	fsr1h,f,c
 21605  0135A2  0012               	return		;funcret
 21606  0135A4                     __end_of___fladd:
 21607                           	opt callstack 0
 21608                           
 21609 ;; *************** function ___flmul *****************
 21610 ;; Defined at:
 21611 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 21612 ;; Parameters:    Size  Location     Type
 21613 ;;  b               4  [STACK] unsigned char 
 21614 ;;  a               4  [STACK] unsigned char 
 21615 ;; Auto vars:     Size  Location     Type
 21616 ;;  prod            4  [STACK] struct .
 21617 ;;  grs             4  [STACK] unsigned long 
 21618 ;;  temp            2  [STACK] struct .
 21619 ;;  bexp            1  [STACK] unsigned char 
 21620 ;;  aexp            1  [STACK] unsigned char 
 21621 ;;  sign            1  [STACK] unsigned char 
 21622 ;; Return value:  Size  Location     Type
 21623 ;;                  4  [STACK] unsigned char 
 21624 ;; Registers used:
 21625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21626 ;; Tracked objects:
 21627 ;;		On entry : 0/2
 21628 ;;		On exit  : 0/0
 21629 ;;		Unchanged: 0/0
 21630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21635 ;;Total ram usage:        0 bytes
 21636 ;; Hardware stack levels used:    1
 21637 ;; Hardware stack levels required when called:    6
 21638 ;; This function calls:
 21639 ;;		Nothing
 21640 ;; This function is called by:
 21641 ;;		_conv_raw_result
 21642 ;;		_lp_filter
 21643 ;;		_calc_model_data
 21644 ;;		_efgtoa
 21645 ;; This function uses a reentrant model
 21646 ;;
 21647                           
 21648                           	psect	text89
 21649  0125BE                     __ptext89:
 21650                           	opt callstack 0
 21651  0125BE                     ___flmul:
 21652                           	opt callstack 0
 21653                           
 21654                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21655  0125BE  0E0D               	movlw	13
 21656  0125C0  26E1               	addwf	fsr1l,f,c
 21657  0125C2  0E00               	movlw	0
 21658  0125C4  22E2               	addwfc	fsr1h,f,c
 21659                           
 21660                           ;stkvar	_b @ sp[(-13)+-4]
 21661                           
 21662                           ;incstack = 0
 21663  0125C6  0EF2               	movlw	242
 21664  0125C8  24E1               	addwf	fsr1l,w,c
 21665  0125CA  6ED9               	movwf	fsr2l,c
 21666  0125CC  0EFF               	movlw	255
 21667  0125CE  20E2               	addwfc	fsr1h,w,c
 21668  0125D0  6EDA               	movwf	fsr2h,c
 21669  0125D2  50DF               	movf	indf2,w,c
 21670  0125D4  6E3D               	movwf	(btemp+11)^0,c
 21671  0125D6  0E80               	movlw	128
 21672  0125D8  163D               	andwf	(btemp+11)^0,f,c
 21673                           
 21674                           ;stkvar	_sign @ sp[(-13)+12]
 21675  0125DA  0EFF               	movlw	-1
 21676  0125DC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21677                           
 21678                           ;stkvar	_b @ sp[(-13)+-4]
 21679  0125E2  0EF2               	movlw	242
 21680  0125E4  24E1               	addwf	fsr1l,w,c
 21681  0125E6  6ED9               	movwf	fsr2l,c
 21682  0125E8  0EFF               	movlw	255
 21683  0125EA  20E2               	addwfc	fsr1h,w,c
 21684  0125EC  6EDA               	movwf	fsr2h,c
 21685  0125EE  50DF               	movf	indf2,w,c
 21686  0125F0  6E3D               	movwf	(btemp+11)^0,c
 21687  0125F2  90D8               	bcf	status,0,c
 21688  0125F4  343D               	rlcf	(btemp+11)^0,w,c
 21689  0125F6  6E3C               	movwf	(btemp+10)^0,c
 21690                           
 21691                           ;stkvar	_bexp @ sp[(-13)+10]
 21692  0125F8  0EFD               	movlw	-3
 21693  0125FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21694                           
 21695                           ;stkvar	_b @ sp[(-13)+-4]
 21696  012600  0EF1               	movlw	241
 21697  012602  24E1               	addwf	fsr1l,w,c
 21698  012604  6ED9               	movwf	fsr2l,c
 21699  012606  0EFF               	movlw	255
 21700  012608  20E2               	addwfc	fsr1h,w,c
 21701  01260A  6EDA               	movwf	fsr2h,c
 21702  01260C  AEDF               	btfss	indf2,7,c
 21703  01260E  D002               	goto	l6988
 21704                           
 21705                           ;stkvar	_bexp @ sp[(-13)+10]
 21706  012610  0EFD               	movlw	-3
 21707  012612  80E3               	bsf	plusw1,0,c
 21708  012614                     l6988:
 21709                           
 21710                           ;stkvar	_bexp @ sp[(-13)+10]
 21711  012614  0EFD               	movlw	-3
 21712  012616  50E3               	movf	plusw1,w,c
 21713  012618  B4D8               	btfsc	status,2,c
 21714  01261A  D01F               	goto	l6996
 21715                           
 21716                           ;stkvar	_bexp @ sp[(-13)+10]
 21717  01261C  0EFD               	movlw	-3
 21718  01261E  28E3               	incf	plusw1,w,c
 21719  012620  A4D8               	btfss	status,2,c
 21720  012622  D018               	goto	l6994
 21721  012624  0E00               	movlw	0
 21722  012626  6E3A               	movwf	(btemp+8)^0,c
 21723  012628  0E00               	movlw	0
 21724  01262A  6E3B               	movwf	(btemp+9)^0,c
 21725  01262C  0E00               	movlw	0
 21726  01262E  6E3C               	movwf	(btemp+10)^0,c
 21727  012630  0E00               	movlw	0
 21728  012632  6E3D               	movwf	(btemp+11)^0,c
 21729                           
 21730                           ;stkvar	_b @ sp[(-13)+-4]
 21731  012634  0EEF               	movlw	-17
 21732  012636  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21733  01263C  0EF0               	movlw	-16
 21734  01263E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21735  012644  0EF1               	movlw	-15
 21736  012646  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21737  01264C  0EF2               	movlw	-14
 21738  01264E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21739  012654                     l6994:
 21740                           
 21741                           ;stkvar	_b @ sp[(-13)+-4]
 21742  012654  0EF1               	movlw	-15
 21743  012656  8EE3               	bsf	plusw1,7,c
 21744  012658  D018               	goto	l6998
 21745  01265A                     l6996:
 21746  01265A  0E00               	movlw	0
 21747  01265C  6E3A               	movwf	(btemp+8)^0,c
 21748  01265E  0E00               	movlw	0
 21749  012660  6E3B               	movwf	(btemp+9)^0,c
 21750  012662  0E00               	movlw	0
 21751  012664  6E3C               	movwf	(btemp+10)^0,c
 21752  012666  0E00               	movlw	0
 21753  012668  6E3D               	movwf	(btemp+11)^0,c
 21754                           
 21755                           ;stkvar	_b @ sp[(-13)+-4]
 21756  01266A  0EEF               	movlw	-17
 21757  01266C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21758  012672  0EF0               	movlw	-16
 21759  012674  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21760  01267A  0EF1               	movlw	-15
 21761  01267C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21762  012682  0EF2               	movlw	-14
 21763  012684  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21764  01268A                     l6998:
 21765                           
 21766                           ;stkvar	_a @ sp[(-13)+-8]
 21767  01268A  0EEE               	movlw	238
 21768  01268C  24E1               	addwf	fsr1l,w,c
 21769  01268E  6ED9               	movwf	fsr2l,c
 21770  012690  0EFF               	movlw	255
 21771  012692  20E2               	addwfc	fsr1h,w,c
 21772  012694  6EDA               	movwf	fsr2h,c
 21773  012696  50DF               	movf	indf2,w,c
 21774  012698  6E3D               	movwf	(btemp+11)^0,c
 21775  01269A  0E80               	movlw	128
 21776  01269C  163D               	andwf	(btemp+11)^0,f,c
 21777                           
 21778                           ;stkvar	_sign @ sp[(-13)+12]
 21779  01269E  50E1               	movf	fsr1l,w,c
 21780  0126A0  0FFF               	addlw	-1
 21781  0126A2  6ED9               	movwf	fsr2l,c
 21782  0126A4  50E2               	movf	fsr1h,w,c
 21783  0126A6  6EDA               	movwf	fsr2h,c
 21784  0126A8  0EFF               	movlw	255
 21785  0126AA  22DA               	addwfc	fsr2h,f,c
 21786  0126AC  503D               	movf	(btemp+11)^0,w,c
 21787  0126AE  1ADF               	xorwf	indf2,f,c
 21788                           
 21789                           ;stkvar	_a @ sp[(-13)+-8]
 21790  0126B0  0EEE               	movlw	238
 21791  0126B2  24E1               	addwf	fsr1l,w,c
 21792  0126B4  6ED9               	movwf	fsr2l,c
 21793  0126B6  0EFF               	movlw	255
 21794  0126B8  20E2               	addwfc	fsr1h,w,c
 21795  0126BA  6EDA               	movwf	fsr2h,c
 21796  0126BC  50DF               	movf	indf2,w,c
 21797  0126BE  6E3D               	movwf	(btemp+11)^0,c
 21798  0126C0  90D8               	bcf	status,0,c
 21799  0126C2  343D               	rlcf	(btemp+11)^0,w,c
 21800  0126C4  6E3C               	movwf	(btemp+10)^0,c
 21801                           
 21802                           ;stkvar	_aexp @ sp[(-13)+11]
 21803  0126C6  0EFE               	movlw	-2
 21804  0126C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21805                           
 21806                           ;stkvar	_a @ sp[(-13)+-8]
 21807  0126CE  0EED               	movlw	237
 21808  0126D0  24E1               	addwf	fsr1l,w,c
 21809  0126D2  6ED9               	movwf	fsr2l,c
 21810  0126D4  0EFF               	movlw	255
 21811  0126D6  20E2               	addwfc	fsr1h,w,c
 21812  0126D8  6EDA               	movwf	fsr2h,c
 21813  0126DA  AEDF               	btfss	indf2,7,c
 21814  0126DC  D002               	goto	l7006
 21815                           
 21816                           ;stkvar	_aexp @ sp[(-13)+11]
 21817  0126DE  0EFE               	movlw	-2
 21818  0126E0  80E3               	bsf	plusw1,0,c
 21819  0126E2                     l7006:
 21820                           
 21821                           ;stkvar	_aexp @ sp[(-13)+11]
 21822  0126E2  0EFE               	movlw	-2
 21823  0126E4  50E3               	movf	plusw1,w,c
 21824  0126E6  B4D8               	btfsc	status,2,c
 21825  0126E8  D01F               	goto	l7014
 21826                           
 21827                           ;stkvar	_aexp @ sp[(-13)+11]
 21828  0126EA  0EFE               	movlw	-2
 21829  0126EC  28E3               	incf	plusw1,w,c
 21830  0126EE  A4D8               	btfss	status,2,c
 21831  0126F0  D018               	goto	l7012
 21832  0126F2  0E00               	movlw	0
 21833  0126F4  6E3A               	movwf	(btemp+8)^0,c
 21834  0126F6  0E00               	movlw	0
 21835  0126F8  6E3B               	movwf	(btemp+9)^0,c
 21836  0126FA  0E00               	movlw	0
 21837  0126FC  6E3C               	movwf	(btemp+10)^0,c
 21838  0126FE  0E00               	movlw	0
 21839  012700  6E3D               	movwf	(btemp+11)^0,c
 21840                           
 21841                           ;stkvar	_a @ sp[(-13)+-8]
 21842  012702  0EEB               	movlw	-21
 21843  012704  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21844  01270A  0EEC               	movlw	-20
 21845  01270C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21846  012712  0EED               	movlw	-19
 21847  012714  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21848  01271A  0EEE               	movlw	-18
 21849  01271C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21850  012722                     l7012:
 21851                           
 21852                           ;stkvar	_a @ sp[(-13)+-8]
 21853  012722  0EED               	movlw	-19
 21854  012724  8EE3               	bsf	plusw1,7,c
 21855  012726  D018               	goto	l7016
 21856  012728                     l7014:
 21857  012728  0E00               	movlw	0
 21858  01272A  6E3A               	movwf	(btemp+8)^0,c
 21859  01272C  0E00               	movlw	0
 21860  01272E  6E3B               	movwf	(btemp+9)^0,c
 21861  012730  0E00               	movlw	0
 21862  012732  6E3C               	movwf	(btemp+10)^0,c
 21863  012734  0E00               	movlw	0
 21864  012736  6E3D               	movwf	(btemp+11)^0,c
 21865                           
 21866                           ;stkvar	_a @ sp[(-13)+-8]
 21867  012738  0EEB               	movlw	-21
 21868  01273A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21869  012740  0EEC               	movlw	-20
 21870  012742  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21871  012748  0EED               	movlw	-19
 21872  01274A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21873  012750  0EEE               	movlw	-18
 21874  012752  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21875  012758                     l7016:
 21876                           
 21877                           ;stkvar	_aexp @ sp[(-13)+11]
 21878  012758  0EFE               	movlw	-2
 21879  01275A  50E3               	movf	plusw1,w,c
 21880  01275C  B4D8               	btfsc	status,2,c
 21881  01275E  D004               	goto	u5950
 21882                           
 21883                           ;stkvar	_bexp @ sp[(-13)+10]
 21884  012760  0EFD               	movlw	-3
 21885  012762  50E3               	movf	plusw1,w,c
 21886  012764  A4D8               	btfss	status,2,c
 21887  012766  D009               	goto	l7024
 21888  012768                     u5950:
 21889  012768  0E00               	movlw	0
 21890  01276A  6E32               	movwf	btemp^0,c
 21891  01276C  0E00               	movlw	0
 21892  01276E  6E33               	movwf	(btemp+1)^0,c
 21893  012770  0E00               	movlw	0
 21894  012772  6E34               	movwf	(btemp+2)^0,c
 21895  012774  0E00               	movlw	0
 21896  012776  6E35               	movwf	(btemp+3)^0,c
 21897  012778  D332               	goto	l2717
 21898  01277A                     l7024:
 21899                           
 21900                           ;stkvar	_b @ sp[(-13)+-4]
 21901  01277A  0EEF               	movlw	-17
 21902  01277C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21903                           
 21904                           ;stkvar	_a @ sp[(-13)+-8]
 21905  012782  0EED               	movlw	237
 21906  012784  24E1               	addwf	fsr1l,w,c
 21907  012786  6ED9               	movwf	fsr2l,c
 21908  012788  0EFF               	movlw	255
 21909  01278A  20E2               	addwfc	fsr1h,w,c
 21910  01278C  6EDA               	movwf	fsr2h,c
 21911  01278E  50DF               	movf	indf2,w,c
 21912  012790  023D               	mulwf	(btemp+11)^0,c
 21913                           
 21914                           ;stkvar	_temp @ sp[(-13)+8]
 21915  012792  0EFB               	movlw	-5
 21916  012794  006F FFCF FFE3     	movff	prodl,plusw1
 21917  01279A  0EFC               	movlw	-4
 21918  01279C  006F FFD3 FFE3     	movff	prodh,plusw1
 21919                           
 21920                           ;stkvar	_temp @ sp[(-13)+8]
 21921  0127A2  0EFB               	movlw	-5
 21922  0127A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 21923  0127AA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21924  0127B0  6A37               	clrf	(btemp+5)^0,c
 21925  0127B2  6A38               	clrf	(btemp+6)^0,c
 21926  0127B4  6A39               	clrf	(btemp+7)^0,c
 21927                           
 21928                           ;stkvar	_grs @ sp[(-13)+4]
 21929  0127B6  0EF7               	movlw	-9
 21930  0127B8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21931  0127BE  0EF8               	movlw	-8
 21932  0127C0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21933  0127C6  0EF9               	movlw	-7
 21934  0127C8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21935  0127CE  0EFA               	movlw	-6
 21936  0127D0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21937                           
 21938                           ;stkvar	_temp @ sp[(-13)+8]
 21939  0127D6  0EFC               	movlw	252
 21940  0127D8  24E1               	addwf	fsr1l,w,c
 21941  0127DA  6ED9               	movwf	fsr2l,c
 21942  0127DC  0EFF               	movlw	255
 21943  0127DE  20E2               	addwfc	fsr1h,w,c
 21944  0127E0  6EDA               	movwf	fsr2h,c
 21945  0127E2  50DF               	movf	indf2,w,c
 21946  0127E4  6E3D               	movwf	(btemp+11)^0,c
 21947  0127E6  0060  F0F4  F036   	movff	btemp+11,btemp+4
 21948  0127EC  6A37               	clrf	(btemp+5)^0,c
 21949  0127EE  6A38               	clrf	(btemp+6)^0,c
 21950  0127F0  6A39               	clrf	(btemp+7)^0,c
 21951                           
 21952                           ;stkvar	_prod @ sp[(-13)+0]
 21953  0127F2  0EF3               	movlw	-13
 21954  0127F4  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21955  0127FA  0EF4               	movlw	-12
 21956  0127FC  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21957  012802  0EF5               	movlw	-11
 21958  012804  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21959  01280A  0EF6               	movlw	-10
 21960  01280C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21961                           
 21962                           ;stkvar	_b @ sp[(-13)+-4]
 21963  012812  0EF0               	movlw	240
 21964  012814  24E1               	addwf	fsr1l,w,c
 21965  012816  6ED9               	movwf	fsr2l,c
 21966  012818  0EFF               	movlw	255
 21967  01281A  20E2               	addwfc	fsr1h,w,c
 21968  01281C  6EDA               	movwf	fsr2h,c
 21969  01281E  50DF               	movf	indf2,w,c
 21970  012820  6E3D               	movwf	(btemp+11)^0,c
 21971                           
 21972                           ;stkvar	_a @ sp[(-13)+-8]
 21973  012822  0EEC               	movlw	236
 21974  012824  24E1               	addwf	fsr1l,w,c
 21975  012826  6ED9               	movwf	fsr2l,c
 21976  012828  0EFF               	movlw	255
 21977  01282A  20E2               	addwfc	fsr1h,w,c
 21978  01282C  6EDA               	movwf	fsr2h,c
 21979  01282E  50DF               	movf	indf2,w,c
 21980  012830  023D               	mulwf	(btemp+11)^0,c
 21981                           
 21982                           ;stkvar	_temp @ sp[(-13)+8]
 21983  012832  0EFB               	movlw	-5
 21984  012834  006F FFCF FFE3     	movff	prodl,plusw1
 21985  01283A  0EFC               	movlw	-4
 21986  01283C  006F FFD3 FFE3     	movff	prodh,plusw1
 21987                           
 21988                           ;stkvar	_grs @ sp[(-13)+4]
 21989  012842  50E1               	movf	fsr1l,w,c
 21990  012844  0FF7               	addlw	-9
 21991  012846  6ED9               	movwf	fsr2l,c
 21992  012848  50E2               	movf	fsr1h,w,c
 21993  01284A  6EDA               	movwf	fsr2h,c
 21994  01284C  0EFF               	movlw	255
 21995  01284E  22DA               	addwfc	fsr2h,f,c
 21996                           
 21997                           ;stkvar	_temp @ sp[(-13)+8]
 21998  012850  0EFB               	movlw	-5
 21999  012852  50E3               	movf	plusw1,w,c
 22000  012854  26DE               	addwf	postinc2,f,c
 22001  012856  0E00               	movlw	0
 22002  012858  22DE               	addwfc	postinc2,f,c
 22003  01285A  22DE               	addwfc	postinc2,f,c
 22004  01285C  22DE               	addwfc	postinc2,f,c
 22005                           
 22006                           ;stkvar	_prod @ sp[(-13)+0]
 22007  01285E  50E1               	movf	fsr1l,w,c
 22008  012860  0FF3               	addlw	-13
 22009  012862  6ED9               	movwf	fsr2l,c
 22010  012864  50E2               	movf	fsr1h,w,c
 22011  012866  6EDA               	movwf	fsr2h,c
 22012  012868  0EFF               	movlw	255
 22013  01286A  22DA               	addwfc	fsr2h,f,c
 22014                           
 22015                           ;stkvar	_temp @ sp[(-13)+8]
 22016  01286C  0EFC               	movlw	252
 22017  01286E  24E1               	addwf	fsr1l,w,c
 22018  012870  6EE9               	movwf	fsr0l,c
 22019  012872  0EFF               	movlw	255
 22020  012874  20E2               	addwfc	fsr1h,w,c
 22021  012876  6EEA               	movwf	fsr0h,c
 22022  012878  50EF               	movf	indf0,w,c
 22023  01287A  26DE               	addwf	postinc2,f,c
 22024  01287C  0E00               	movlw	0
 22025  01287E  22DE               	addwfc	postinc2,f,c
 22026  012880  22DE               	addwfc	postinc2,f,c
 22027  012882  22DE               	addwfc	postinc2,f,c
 22028                           
 22029                           ;stkvar	_b @ sp[(-13)+-4]
 22030  012884  0EF1               	movlw	241
 22031  012886  24E1               	addwf	fsr1l,w,c
 22032  012888  6ED9               	movwf	fsr2l,c
 22033  01288A  0EFF               	movlw	255
 22034  01288C  20E2               	addwfc	fsr1h,w,c
 22035  01288E  6EDA               	movwf	fsr2h,c
 22036  012890  50DF               	movf	indf2,w,c
 22037  012892  6E3D               	movwf	(btemp+11)^0,c
 22038                           
 22039                           ;stkvar	_a @ sp[(-13)+-8]
 22040  012894  0EEB               	movlw	-21
 22041  012896  50E3               	movf	plusw1,w,c
 22042  012898  023D               	mulwf	(btemp+11)^0,c
 22043                           
 22044                           ;stkvar	_temp @ sp[(-13)+8]
 22045  01289A  0EFB               	movlw	-5
 22046  01289C  006F FFCF FFE3     	movff	prodl,plusw1
 22047  0128A2  0EFC               	movlw	-4
 22048  0128A4  006F FFD3 FFE3     	movff	prodh,plusw1
 22049                           
 22050                           ;stkvar	_grs @ sp[(-13)+4]
 22051  0128AA  50E1               	movf	fsr1l,w,c
 22052  0128AC  0FF7               	addlw	-9
 22053  0128AE  6ED9               	movwf	fsr2l,c
 22054  0128B0  50E2               	movf	fsr1h,w,c
 22055  0128B2  6EDA               	movwf	fsr2h,c
 22056  0128B4  0EFF               	movlw	255
 22057  0128B6  22DA               	addwfc	fsr2h,f,c
 22058                           
 22059                           ;stkvar	_temp @ sp[(-13)+8]
 22060  0128B8  0EFB               	movlw	-5
 22061  0128BA  50E3               	movf	plusw1,w,c
 22062  0128BC  26DE               	addwf	postinc2,f,c
 22063  0128BE  0E00               	movlw	0
 22064  0128C0  22DE               	addwfc	postinc2,f,c
 22065  0128C2  22DE               	addwfc	postinc2,f,c
 22066  0128C4  22DE               	addwfc	postinc2,f,c
 22067                           
 22068                           ;stkvar	_prod @ sp[(-13)+0]
 22069  0128C6  50E1               	movf	fsr1l,w,c
 22070  0128C8  0FF3               	addlw	-13
 22071  0128CA  6ED9               	movwf	fsr2l,c
 22072  0128CC  50E2               	movf	fsr1h,w,c
 22073  0128CE  6EDA               	movwf	fsr2h,c
 22074  0128D0  0EFF               	movlw	255
 22075  0128D2  22DA               	addwfc	fsr2h,f,c
 22076                           
 22077                           ;stkvar	_temp @ sp[(-13)+8]
 22078  0128D4  0EFC               	movlw	252
 22079  0128D6  24E1               	addwf	fsr1l,w,c
 22080  0128D8  6EE9               	movwf	fsr0l,c
 22081  0128DA  0EFF               	movlw	255
 22082  0128DC  20E2               	addwfc	fsr1h,w,c
 22083  0128DE  6EEA               	movwf	fsr0h,c
 22084  0128E0  50EF               	movf	indf0,w,c
 22085  0128E2  26DE               	addwf	postinc2,f,c
 22086  0128E4  0E00               	movlw	0
 22087  0128E6  22DE               	addwfc	postinc2,f,c
 22088  0128E8  22DE               	addwfc	postinc2,f,c
 22089  0128EA  22DE               	addwfc	postinc2,f,c
 22090                           
 22091                           ;stkvar	_grs @ sp[(-13)+4]
 22092  0128EC  50E1               	movf	fsr1l,w,c
 22093  0128EE  0FF7               	addlw	-9
 22094  0128F0  6ED9               	movwf	fsr2l,c
 22095  0128F2  50E2               	movf	fsr1h,w,c
 22096  0128F4  6EDA               	movwf	fsr2h,c
 22097  0128F6  0EFF               	movlw	255
 22098  0128F8  22DA               	addwfc	fsr2h,f,c
 22099  0128FA  0E08               	movlw	8
 22100  0128FC                     u5965:
 22101  0128FC  90D8               	bcf	status,0,c
 22102  0128FE  36DE               	rlcf	postinc2,f,c
 22103  012900  36DE               	rlcf	postinc2,f,c
 22104  012902  36DE               	rlcf	postinc2,f,c
 22105  012904  36DD               	rlcf	postdec2,f,c
 22106  012906  52DD               	movf	postdec2,f,c
 22107  012908  52DD               	movf	postdec2,f,c
 22108  01290A  2EE8               	decfsz	wreg,f,c
 22109  01290C  D7F7               	goto	u5965
 22110                           
 22111                           ;stkvar	_b @ sp[(-13)+-4]
 22112  01290E  0EF0               	movlw	240
 22113  012910  24E1               	addwf	fsr1l,w,c
 22114  012912  6ED9               	movwf	fsr2l,c
 22115  012914  0EFF               	movlw	255
 22116  012916  20E2               	addwfc	fsr1h,w,c
 22117  012918  6EDA               	movwf	fsr2h,c
 22118  01291A  50DF               	movf	indf2,w,c
 22119  01291C  6E3D               	movwf	(btemp+11)^0,c
 22120                           
 22121                           ;stkvar	_a @ sp[(-13)+-8]
 22122  01291E  0EEB               	movlw	-21
 22123  012920  50E3               	movf	plusw1,w,c
 22124  012922  023D               	mulwf	(btemp+11)^0,c
 22125                           
 22126                           ;stkvar	_temp @ sp[(-13)+8]
 22127  012924  0EFB               	movlw	-5
 22128  012926  006F FFCF FFE3     	movff	prodl,plusw1
 22129  01292C  0EFC               	movlw	-4
 22130  01292E  006F FFD3 FFE3     	movff	prodh,plusw1
 22131                           
 22132                           ;stkvar	_temp @ sp[(-13)+8]
 22133  012934  0EFB               	movlw	-5
 22134  012936  006F FF8C  F03C    	movff	plusw1,btemp+10
 22135  01293C  0EFC               	movlw	-4
 22136  01293E  006F FF8C  F03D    	movff	plusw1,btemp+11
 22137                           
 22138                           ;stkvar	_grs @ sp[(-13)+4]
 22139  012944  50E1               	movf	fsr1l,w,c
 22140  012946  0FF7               	addlw	-9
 22141  012948  6ED9               	movwf	fsr2l,c
 22142  01294A  50E2               	movf	fsr1h,w,c
 22143  01294C  6EDA               	movwf	fsr2h,c
 22144  01294E  0EFF               	movlw	255
 22145  012950  22DA               	addwfc	fsr2h,f,c
 22146  012952  503C               	movf	(btemp+10)^0,w,c
 22147  012954  26DE               	addwf	postinc2,f,c
 22148  012956  503D               	movf	(btemp+11)^0,w,c
 22149  012958  22DE               	addwfc	postinc2,f,c
 22150  01295A  0E00               	movlw	0
 22151  01295C  22DE               	addwfc	postinc2,f,c
 22152  01295E  22DE               	addwfc	postinc2,f,c
 22153                           
 22154                           ;stkvar	_b @ sp[(-13)+-4]
 22155  012960  0EEF               	movlw	-17
 22156  012962  006F FF8C  F03D    	movff	plusw1,btemp+11
 22157                           
 22158                           ;stkvar	_a @ sp[(-13)+-8]
 22159  012968  0EEC               	movlw	236
 22160  01296A  24E1               	addwf	fsr1l,w,c
 22161  01296C  6ED9               	movwf	fsr2l,c
 22162  01296E  0EFF               	movlw	255
 22163  012970  20E2               	addwfc	fsr1h,w,c
 22164  012972  6EDA               	movwf	fsr2h,c
 22165  012974  50DF               	movf	indf2,w,c
 22166  012976  023D               	mulwf	(btemp+11)^0,c
 22167                           
 22168                           ;stkvar	_temp @ sp[(-13)+8]
 22169  012978  0EFB               	movlw	-5
 22170  01297A  006F FFCF FFE3     	movff	prodl,plusw1
 22171  012980  0EFC               	movlw	-4
 22172  012982  006F FFD3 FFE3     	movff	prodh,plusw1
 22173                           
 22174                           ;stkvar	_temp @ sp[(-13)+8]
 22175  012988  0EFB               	movlw	-5
 22176  01298A  006F FF8C  F03C    	movff	plusw1,btemp+10
 22177  012990  0EFC               	movlw	-4
 22178  012992  006F FF8C  F03D    	movff	plusw1,btemp+11
 22179                           
 22180                           ;stkvar	_grs @ sp[(-13)+4]
 22181  012998  50E1               	movf	fsr1l,w,c
 22182  01299A  0FF7               	addlw	-9
 22183  01299C  6ED9               	movwf	fsr2l,c
 22184  01299E  50E2               	movf	fsr1h,w,c
 22185  0129A0  6EDA               	movwf	fsr2h,c
 22186  0129A2  0EFF               	movlw	255
 22187  0129A4  22DA               	addwfc	fsr2h,f,c
 22188  0129A6  503C               	movf	(btemp+10)^0,w,c
 22189  0129A8  26DE               	addwf	postinc2,f,c
 22190  0129AA  503D               	movf	(btemp+11)^0,w,c
 22191  0129AC  22DE               	addwfc	postinc2,f,c
 22192  0129AE  0E00               	movlw	0
 22193  0129B0  22DE               	addwfc	postinc2,f,c
 22194  0129B2  22DE               	addwfc	postinc2,f,c
 22195                           
 22196                           ;stkvar	_grs @ sp[(-13)+4]
 22197  0129B4  50E1               	movf	fsr1l,w,c
 22198  0129B6  0FF7               	addlw	-9
 22199  0129B8  6ED9               	movwf	fsr2l,c
 22200  0129BA  50E2               	movf	fsr1h,w,c
 22201  0129BC  6EDA               	movwf	fsr2h,c
 22202  0129BE  0EFF               	movlw	255
 22203  0129C0  22DA               	addwfc	fsr2h,f,c
 22204  0129C2  0E08               	movlw	8
 22205  0129C4                     u5975:
 22206  0129C4  90D8               	bcf	status,0,c
 22207  0129C6  36DE               	rlcf	postinc2,f,c
 22208  0129C8  36DE               	rlcf	postinc2,f,c
 22209  0129CA  36DE               	rlcf	postinc2,f,c
 22210  0129CC  36DD               	rlcf	postdec2,f,c
 22211  0129CE  52DD               	movf	postdec2,f,c
 22212  0129D0  52DD               	movf	postdec2,f,c
 22213  0129D2  2EE8               	decfsz	wreg,f,c
 22214  0129D4  D7F7               	goto	u5975
 22215                           
 22216                           ;stkvar	_b @ sp[(-13)+-4]
 22217  0129D6  0EEF               	movlw	-17
 22218  0129D8  006F FF8C  F03D    	movff	plusw1,btemp+11
 22219                           
 22220                           ;stkvar	_a @ sp[(-13)+-8]
 22221  0129DE  0EEB               	movlw	-21
 22222  0129E0  50E3               	movf	plusw1,w,c
 22223  0129E2  023D               	mulwf	(btemp+11)^0,c
 22224                           
 22225                           ;stkvar	_temp @ sp[(-13)+8]
 22226  0129E4  0EFB               	movlw	-5
 22227  0129E6  006F FFCF FFE3     	movff	prodl,plusw1
 22228  0129EC  0EFC               	movlw	-4
 22229  0129EE  006F FFD3 FFE3     	movff	prodh,plusw1
 22230                           
 22231                           ;stkvar	_temp @ sp[(-13)+8]
 22232  0129F4  0EFB               	movlw	-5
 22233  0129F6  006F FF8C  F03C    	movff	plusw1,btemp+10
 22234  0129FC  0EFC               	movlw	-4
 22235  0129FE  006F FF8C  F03D    	movff	plusw1,btemp+11
 22236                           
 22237                           ;stkvar	_grs @ sp[(-13)+4]
 22238  012A04  50E1               	movf	fsr1l,w,c
 22239  012A06  0FF7               	addlw	-9
 22240  012A08  6ED9               	movwf	fsr2l,c
 22241  012A0A  50E2               	movf	fsr1h,w,c
 22242  012A0C  6EDA               	movwf	fsr2h,c
 22243  012A0E  0EFF               	movlw	255
 22244  012A10  22DA               	addwfc	fsr2h,f,c
 22245  012A12  503C               	movf	(btemp+10)^0,w,c
 22246  012A14  26DE               	addwf	postinc2,f,c
 22247  012A16  503D               	movf	(btemp+11)^0,w,c
 22248  012A18  22DE               	addwfc	postinc2,f,c
 22249  012A1A  0E00               	movlw	0
 22250  012A1C  22DE               	addwfc	postinc2,f,c
 22251  012A1E  22DE               	addwfc	postinc2,f,c
 22252                           
 22253                           ;stkvar	_b @ sp[(-13)+-4]
 22254  012A20  0EF0               	movlw	240
 22255  012A22  24E1               	addwf	fsr1l,w,c
 22256  012A24  6ED9               	movwf	fsr2l,c
 22257  012A26  0EFF               	movlw	255
 22258  012A28  20E2               	addwfc	fsr1h,w,c
 22259  012A2A  6EDA               	movwf	fsr2h,c
 22260  012A2C  50DF               	movf	indf2,w,c
 22261  012A2E  6E3D               	movwf	(btemp+11)^0,c
 22262                           
 22263                           ;stkvar	_a @ sp[(-13)+-8]
 22264  012A30  0EED               	movlw	237
 22265  012A32  24E1               	addwf	fsr1l,w,c
 22266  012A34  6ED9               	movwf	fsr2l,c
 22267  012A36  0EFF               	movlw	255
 22268  012A38  20E2               	addwfc	fsr1h,w,c
 22269  012A3A  6EDA               	movwf	fsr2h,c
 22270  012A3C  50DF               	movf	indf2,w,c
 22271  012A3E  023D               	mulwf	(btemp+11)^0,c
 22272                           
 22273                           ;stkvar	_temp @ sp[(-13)+8]
 22274  012A40  0EFB               	movlw	-5
 22275  012A42  006F FFCF FFE3     	movff	prodl,plusw1
 22276  012A48  0EFC               	movlw	-4
 22277  012A4A  006F FFD3 FFE3     	movff	prodh,plusw1
 22278                           
 22279                           ;stkvar	_temp @ sp[(-13)+8]
 22280  012A50  0EFB               	movlw	-5
 22281  012A52  006F FF8C  F03C    	movff	plusw1,btemp+10
 22282  012A58  0EFC               	movlw	-4
 22283  012A5A  006F FF8C  F03D    	movff	plusw1,btemp+11
 22284                           
 22285                           ;stkvar	_prod @ sp[(-13)+0]
 22286  012A60  50E1               	movf	fsr1l,w,c
 22287  012A62  0FF3               	addlw	-13
 22288  012A64  6ED9               	movwf	fsr2l,c
 22289  012A66  50E2               	movf	fsr1h,w,c
 22290  012A68  6EDA               	movwf	fsr2h,c
 22291  012A6A  0EFF               	movlw	255
 22292  012A6C  22DA               	addwfc	fsr2h,f,c
 22293  012A6E  503C               	movf	(btemp+10)^0,w,c
 22294  012A70  26DE               	addwf	postinc2,f,c
 22295  012A72  503D               	movf	(btemp+11)^0,w,c
 22296  012A74  22DE               	addwfc	postinc2,f,c
 22297  012A76  0E00               	movlw	0
 22298  012A78  22DE               	addwfc	postinc2,f,c
 22299  012A7A  22DE               	addwfc	postinc2,f,c
 22300                           
 22301                           ;stkvar	_b @ sp[(-13)+-4]
 22302  012A7C  0EF1               	movlw	241
 22303  012A7E  24E1               	addwf	fsr1l,w,c
 22304  012A80  6ED9               	movwf	fsr2l,c
 22305  012A82  0EFF               	movlw	255
 22306  012A84  20E2               	addwfc	fsr1h,w,c
 22307  012A86  6EDA               	movwf	fsr2h,c
 22308  012A88  50DF               	movf	indf2,w,c
 22309  012A8A  6E3D               	movwf	(btemp+11)^0,c
 22310                           
 22311                           ;stkvar	_a @ sp[(-13)+-8]
 22312  012A8C  0EEC               	movlw	236
 22313  012A8E  24E1               	addwf	fsr1l,w,c
 22314  012A90  6ED9               	movwf	fsr2l,c
 22315  012A92  0EFF               	movlw	255
 22316  012A94  20E2               	addwfc	fsr1h,w,c
 22317  012A96  6EDA               	movwf	fsr2h,c
 22318  012A98  50DF               	movf	indf2,w,c
 22319  012A9A  023D               	mulwf	(btemp+11)^0,c
 22320                           
 22321                           ;stkvar	_temp @ sp[(-13)+8]
 22322  012A9C  0EFB               	movlw	-5
 22323  012A9E  006F FFCF FFE3     	movff	prodl,plusw1
 22324  012AA4  0EFC               	movlw	-4
 22325  012AA6  006F FFD3 FFE3     	movff	prodh,plusw1
 22326                           
 22327                           ;stkvar	_temp @ sp[(-13)+8]
 22328  012AAC  0EFB               	movlw	-5
 22329  012AAE  006F FF8C  F03C    	movff	plusw1,btemp+10
 22330  012AB4  0EFC               	movlw	-4
 22331  012AB6  006F FF8C  F03D    	movff	plusw1,btemp+11
 22332                           
 22333                           ;stkvar	_prod @ sp[(-13)+0]
 22334  012ABC  50E1               	movf	fsr1l,w,c
 22335  012ABE  0FF3               	addlw	-13
 22336  012AC0  6ED9               	movwf	fsr2l,c
 22337  012AC2  50E2               	movf	fsr1h,w,c
 22338  012AC4  6EDA               	movwf	fsr2h,c
 22339  012AC6  0EFF               	movlw	255
 22340  012AC8  22DA               	addwfc	fsr2h,f,c
 22341  012ACA  503C               	movf	(btemp+10)^0,w,c
 22342  012ACC  26DE               	addwf	postinc2,f,c
 22343  012ACE  503D               	movf	(btemp+11)^0,w,c
 22344  012AD0  22DE               	addwfc	postinc2,f,c
 22345  012AD2  0E00               	movlw	0
 22346  012AD4  22DE               	addwfc	postinc2,f,c
 22347  012AD6  22DE               	addwfc	postinc2,f,c
 22348                           
 22349                           ;stkvar	_b @ sp[(-13)+-4]
 22350  012AD8  0EF1               	movlw	241
 22351  012ADA  24E1               	addwf	fsr1l,w,c
 22352  012ADC  6ED9               	movwf	fsr2l,c
 22353  012ADE  0EFF               	movlw	255
 22354  012AE0  20E2               	addwfc	fsr1h,w,c
 22355  012AE2  6EDA               	movwf	fsr2h,c
 22356  012AE4  50DF               	movf	indf2,w,c
 22357  012AE6  6E3D               	movwf	(btemp+11)^0,c
 22358                           
 22359                           ;stkvar	_a @ sp[(-13)+-8]
 22360  012AE8  0EED               	movlw	237
 22361  012AEA  24E1               	addwf	fsr1l,w,c
 22362  012AEC  6ED9               	movwf	fsr2l,c
 22363  012AEE  0EFF               	movlw	255
 22364  012AF0  20E2               	addwfc	fsr1h,w,c
 22365  012AF2  6EDA               	movwf	fsr2h,c
 22366  012AF4  50DF               	movf	indf2,w,c
 22367  012AF6  023D               	mulwf	(btemp+11)^0,c
 22368                           
 22369                           ;stkvar	_temp @ sp[(-13)+8]
 22370  012AF8  0EFB               	movlw	-5
 22371  012AFA  006F FFCF FFE3     	movff	prodl,plusw1
 22372  012B00  0EFC               	movlw	-4
 22373  012B02  006F FFD3 FFE3     	movff	prodh,plusw1
 22374                           
 22375                           ;stkvar	_temp @ sp[(-13)+8]
 22376  012B08  0EFB               	movlw	-5
 22377  012B0A  006F FF8C  F03C    	movff	plusw1,btemp+10
 22378  012B10  0EFC               	movlw	-4
 22379  012B12  006F FF8C  F03D    	movff	plusw1,btemp+11
 22380  012B18  503C               	movf	(btemp+10)^0,w,c
 22381  012B1A  6E36               	movwf	(btemp+4)^0,c
 22382  012B1C  503D               	movf	(btemp+11)^0,w,c
 22383  012B1E  6E37               	movwf	(btemp+5)^0,c
 22384  012B20  6A38               	clrf	(btemp+6)^0,c
 22385  012B22  6A39               	clrf	(btemp+7)^0,c
 22386  012B24  0060  F0E0  F039   	movff	btemp+6,btemp+7
 22387  012B2A  0060  F0DC  F038   	movff	btemp+5,btemp+6
 22388  012B30  0060  F0D8  F037   	movff	btemp+4,btemp+5
 22389  012B36  6A36               	clrf	(btemp+4)^0,c
 22390                           
 22391                           ;stkvar	_prod @ sp[(-13)+0]
 22392  012B38  50E1               	movf	fsr1l,w,c
 22393  012B3A  0FF3               	addlw	-13
 22394  012B3C  6ED9               	movwf	fsr2l,c
 22395  012B3E  50E2               	movf	fsr1h,w,c
 22396  012B40  6EDA               	movwf	fsr2h,c
 22397  012B42  0EFF               	movlw	255
 22398  012B44  22DA               	addwfc	fsr2h,f,c
 22399  012B46  5036               	movf	(btemp+4)^0,w,c
 22400  012B48  26DE               	addwf	postinc2,f,c
 22401  012B4A  5037               	movf	(btemp+5)^0,w,c
 22402  012B4C  22DE               	addwfc	postinc2,f,c
 22403  012B4E  5038               	movf	(btemp+6)^0,w,c
 22404  012B50  22DE               	addwfc	postinc2,f,c
 22405  012B52  5039               	movf	(btemp+7)^0,w,c
 22406  012B54  22DE               	addwfc	postinc2,f,c
 22407                           
 22408                           ;stkvar	_prod @ sp[(-13)+0]
 22409  012B56  50E1               	movf	fsr1l,w,c
 22410  012B58  0FF3               	addlw	-13
 22411  012B5A  6ED9               	movwf	fsr2l,c
 22412  012B5C  50E2               	movf	fsr1h,w,c
 22413  012B5E  6EDA               	movwf	fsr2h,c
 22414  012B60  0EFF               	movlw	255
 22415  012B62  22DA               	addwfc	fsr2h,f,c
 22416                           
 22417                           ;stkvar	_grs @ sp[(-13)+4]
 22418  012B64  0EFA               	movlw	250
 22419  012B66  24E1               	addwf	fsr1l,w,c
 22420  012B68  6EE9               	movwf	fsr0l,c
 22421  012B6A  0EFF               	movlw	255
 22422  012B6C  20E2               	addwfc	fsr1h,w,c
 22423  012B6E  6EEA               	movwf	fsr0h,c
 22424  012B70  50EF               	movf	indf0,w,c
 22425  012B72  26DE               	addwf	postinc2,f,c
 22426  012B74  0E00               	movlw	0
 22427  012B76  22DE               	addwfc	postinc2,f,c
 22428  012B78  22DE               	addwfc	postinc2,f,c
 22429  012B7A  22DE               	addwfc	postinc2,f,c
 22430                           
 22431                           ;stkvar	_grs @ sp[(-13)+4]
 22432  012B7C  50E1               	movf	fsr1l,w,c
 22433  012B7E  0FF7               	addlw	-9
 22434  012B80  6ED9               	movwf	fsr2l,c
 22435  012B82  50E2               	movf	fsr1h,w,c
 22436  012B84  6EDA               	movwf	fsr2h,c
 22437  012B86  0EFF               	movlw	255
 22438  012B88  22DA               	addwfc	fsr2h,f,c
 22439  012B8A  0E08               	movlw	8
 22440  012B8C                     u5985:
 22441  012B8C  90D8               	bcf	status,0,c
 22442  012B8E  36DE               	rlcf	postinc2,f,c
 22443  012B90  36DE               	rlcf	postinc2,f,c
 22444  012B92  36DE               	rlcf	postinc2,f,c
 22445  012B94  36DD               	rlcf	postdec2,f,c
 22446  012B96  52DD               	movf	postdec2,f,c
 22447  012B98  52DD               	movf	postdec2,f,c
 22448  012B9A  2EE8               	decfsz	wreg,f,c
 22449  012B9C  D7F7               	goto	u5985
 22450  012B9E  0E82               	movlw	130
 22451  012BA0  6E3C               	movwf	(btemp+10)^0,c
 22452  012BA2  0EFF               	movlw	255
 22453  012BA4  6E3D               	movwf	(btemp+11)^0,c
 22454                           
 22455                           ;stkvar	_bexp @ sp[(-13)+10]
 22456  012BA6  0EFD               	movlw	-3
 22457  012BA8  50E3               	movf	plusw1,w,c
 22458  012BAA  6E3A               	movwf	(btemp+8)^0,c
 22459  012BAC  6A3B               	clrf	(btemp+9)^0,c
 22460                           
 22461                           ;stkvar	_aexp @ sp[(-13)+11]
 22462  012BAE  0EFE               	movlw	-2
 22463  012BB0  50E3               	movf	plusw1,w,c
 22464  012BB2  263A               	addwf	(btemp+8)^0,f,c
 22465  012BB4  0E00               	movlw	0
 22466  012BB6  223B               	addwfc	(btemp+9)^0,f,c
 22467  012BB8  503C               	movf	(btemp+10)^0,w,c
 22468  012BBA  263A               	addwf	(btemp+8)^0,f,c
 22469  012BBC  503D               	movf	(btemp+11)^0,w,c
 22470  012BBE  223B               	addwfc	(btemp+9)^0,f,c
 22471                           
 22472                           ;stkvar	_temp @ sp[(-13)+8]
 22473  012BC0  0EFB               	movlw	-5
 22474  012BC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22475  012BC8  0EFC               	movlw	-4
 22476  012BCA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22477  012BD0  D021               	goto	l7086
 22478  012BD2                     l7076:
 22479                           
 22480                           ;stkvar	_prod @ sp[(-13)+0]
 22481  012BD2  90D8               	bcf	status,0,c
 22482  012BD4  0EF3               	movlw	-13
 22483  012BD6  36E3               	rlcf	plusw1,f,c
 22484  012BD8  0EF4               	movlw	-12
 22485  012BDA  36E3               	rlcf	plusw1,f,c
 22486  012BDC  0EF5               	movlw	-11
 22487  012BDE  36E3               	rlcf	plusw1,f,c
 22488  012BE0  0EF6               	movlw	-10
 22489  012BE2  36E3               	rlcf	plusw1,f,c
 22490                           
 22491                           ;stkvar	_grs @ sp[(-13)+4]
 22492  012BE4  0EFA               	movlw	-6
 22493  012BE6  AEE3               	btfss	plusw1,7,c
 22494  012BE8  D002               	goto	l7082
 22495                           
 22496                           ;stkvar	_prod @ sp[(-13)+0]
 22497  012BEA  0EF3               	movlw	-13
 22498  012BEC  80E3               	bsf	plusw1,0,c
 22499  012BEE                     l7082:
 22500                           
 22501                           ;stkvar	_grs @ sp[(-13)+4]
 22502  012BEE  90D8               	bcf	status,0,c
 22503  012BF0  0EF7               	movlw	-9
 22504  012BF2  36E3               	rlcf	plusw1,f,c
 22505  012BF4  0EF8               	movlw	-8
 22506  012BF6  36E3               	rlcf	plusw1,f,c
 22507  012BF8  0EF9               	movlw	-7
 22508  012BFA  36E3               	rlcf	plusw1,f,c
 22509  012BFC  0EFA               	movlw	-6
 22510  012BFE  36E3               	rlcf	plusw1,f,c
 22511                           
 22512                           ;stkvar	_temp @ sp[(-13)+8]
 22513  012C00  50E1               	movf	fsr1l,w,c
 22514  012C02  0FFB               	addlw	-5
 22515  012C04  6ED9               	movwf	fsr2l,c
 22516  012C06  50E2               	movf	fsr1h,w,c
 22517  012C08  6EDA               	movwf	fsr2h,c
 22518  012C0A  0EFF               	movlw	255
 22519  012C0C  22DA               	addwfc	fsr2h,f,c
 22520  012C0E  06DE               	decf	postinc2,f,c
 22521  012C10  0E00               	movlw	0
 22522  012C12  5ADD               	subwfb	postdec2,f,c
 22523  012C14                     l7086:
 22524                           
 22525                           ;stkvar	_prod @ sp[(-13)+0]
 22526  012C14  0EF5               	movlw	-11
 22527  012C16  AEE3               	btfss	plusw1,7,c
 22528  012C18  D7DC               	goto	l7076
 22529                           
 22530                           ;stkvar	_aexp @ sp[(-13)+11]
 22531  012C1A  0EFE               	movlw	-2
 22532  012C1C  6AE3               	clrf	plusw1,c
 22533                           
 22534                           ;stkvar	_grs @ sp[(-13)+4]
 22535  012C1E  0EFA               	movlw	-6
 22536  012C20  AEE3               	btfss	plusw1,7,c
 22537  012C22  D020               	goto	l7100
 22538                           
 22539                           ;stkvar	_grs @ sp[(-13)+4]
 22540  012C24  50E1               	movf	fsr1l,w,c
 22541  012C26  0FF7               	addlw	-9
 22542  012C28  6ED9               	movwf	fsr2l,c
 22543  012C2A  50E2               	movf	fsr1h,w,c
 22544  012C2C  6EDA               	movwf	fsr2h,c
 22545  012C2E  0EFF               	movlw	255
 22546  012C30  22DA               	addwfc	fsr2h,f,c
 22547  012C32  0EFF               	movlw	255
 22548  012C34  14DE               	andwf	postinc2,w,c
 22549  012C36  6E3A               	movwf	(btemp+8)^0,c
 22550  012C38  0EFF               	movlw	255
 22551  012C3A  14DE               	andwf	postinc2,w,c
 22552  012C3C  6E3B               	movwf	(btemp+9)^0,c
 22553  012C3E  0EFF               	movlw	255
 22554  012C40  14DE               	andwf	postinc2,w,c
 22555  012C42  6E3C               	movwf	(btemp+10)^0,c
 22556  012C44  0E7F               	movlw	127
 22557  012C46  14DE               	andwf	postinc2,w,c
 22558  012C48  6E3D               	movwf	(btemp+11)^0,c
 22559  012C4A  503A               	movf	(btemp+8)^0,w,c
 22560  012C4C  103B               	iorwf	(btemp+9)^0,w,c
 22561  012C4E  103C               	iorwf	(btemp+10)^0,w,c
 22562  012C50  103D               	iorwf	(btemp+11)^0,w,c
 22563  012C52  B4D8               	btfsc	status,2,c
 22564  012C54  D004               	goto	l7096
 22565  012C56                     u6020:
 22566                           
 22567                           ;stkvar	_aexp @ sp[(-13)+11]
 22568  012C56  0EFE               	movlw	-2
 22569  012C58  6AE3               	clrf	plusw1,c
 22570  012C5A  2AE3               	incf	plusw1,f,c
 22571  012C5C  D003               	goto	l7100
 22572  012C5E                     l7096:
 22573                           
 22574                           ;stkvar	_prod @ sp[(-13)+0]
 22575  012C5E  0EF3               	movlw	-13
 22576  012C60  B0E3               	btfsc	plusw1,0,c
 22577  012C62  D7F9               	goto	u6020
 22578  012C64                     l7100:
 22579                           
 22580                           ;stkvar	_aexp @ sp[(-13)+11]
 22581  012C64  0EFE               	movlw	-2
 22582  012C66  50E3               	movf	plusw1,w,c
 22583  012C68  B4D8               	btfsc	status,2,c
 22584  012C6A  D036               	goto	l7110
 22585                           
 22586                           ;stkvar	_prod @ sp[(-13)+0]
 22587  012C6C  50E1               	movf	fsr1l,w,c
 22588  012C6E  0FF3               	addlw	-13
 22589  012C70  6ED9               	movwf	fsr2l,c
 22590  012C72  50E2               	movf	fsr1h,w,c
 22591  012C74  6EDA               	movwf	fsr2h,c
 22592  012C76  0EFF               	movlw	255
 22593  012C78  22DA               	addwfc	fsr2h,f,c
 22594  012C7A  2ADE               	incf	postinc2,f,c
 22595  012C7C  0E00               	movlw	0
 22596  012C7E  22DE               	addwfc	postinc2,f,c
 22597  012C80  22DE               	addwfc	postinc2,f,c
 22598  012C82  22DE               	addwfc	postinc2,f,c
 22599                           
 22600                           ;stkvar	_prod @ sp[(-13)+0]
 22601  012C84  0EF6               	movlw	-10
 22602  012C86  A0E3               	btfss	plusw1,0,c
 22603  012C88  D027               	goto	l7110
 22604  012C8A  0E01               	movlw	1
 22605  012C8C  6E3D               	movwf	(btemp+11)^0,c
 22606                           
 22607                           ;stkvar	_prod @ sp[(-13)+0]
 22608  012C8E  50E1               	movf	fsr1l,w,c
 22609  012C90  0FF3               	addlw	-13
 22610  012C92  6ED9               	movwf	fsr2l,c
 22611  012C94  50E2               	movf	fsr1h,w,c
 22612  012C96  6EDA               	movwf	fsr2h,c
 22613  012C98  0EFF               	movlw	255
 22614  012C9A  22DA               	addwfc	fsr2h,f,c
 22615  012C9C  283D               	incf	(btemp+11)^0,w,c
 22616  012C9E  52DE               	movf	postinc2,f,c
 22617  012CA0  D008               	goto	u6060
 22618  012CA2                     u6065:
 22619  012CA2  52DE               	movf	postinc2,f,c
 22620  012CA4  90D8               	bcf	status,0,c
 22621  012CA6  BEDC               	btfsc	preinc2,7,c
 22622  012CA8  80D8               	bsf	status,0,c
 22623  012CAA  32DD               	rrcf	postdec2,f,c
 22624  012CAC  32DD               	rrcf	postdec2,f,c
 22625  012CAE  32DD               	rrcf	postdec2,f,c
 22626  012CB0  32DE               	rrcf	postinc2,f,c
 22627  012CB2                     u6060:
 22628  012CB2  2EE8               	decfsz	wreg,f,c
 22629  012CB4  D7F6               	goto	u6065
 22630                           
 22631                           ;stkvar	_temp @ sp[(-13)+8]
 22632  012CB6  0EFB               	movlw	-5
 22633  012CB8  50E3               	movf	plusw1,w,c
 22634  012CBA  0F01               	addlw	1
 22635  012CBC  6E32               	movwf	btemp^0,c
 22636  012CBE  0EFB               	movlw	-5
 22637  012CC0  0060  F0CB  FFE3   	movff	btemp,plusw1
 22638  012CC6  6A32               	clrf	btemp^0,c
 22639  012CC8  0EFC               	movlw	-4
 22640  012CCA  50E3               	movf	plusw1,w,c
 22641  012CCC  2032               	addwfc	btemp^0,w,c
 22642  012CCE  6E32               	movwf	btemp^0,c
 22643  012CD0  0EFC               	movlw	-4
 22644  012CD2  0060  F0CB  FFE3   	movff	btemp,plusw1
 22645  012CD8                     l7110:
 22646                           
 22647                           ;stkvar	_temp @ sp[(-13)+8]
 22648  012CD8  0EFC               	movlw	-4
 22649  012CDA  BEE3               	btfsc	plusw1,7,c
 22650  012CDC  D020               	goto	l7114
 22651  012CDE  0EFC               	movlw	-4
 22652  012CE0  50E3               	movf	plusw1,w,c
 22653  012CE2  E104               	bnz	u6070
 22654  012CE4  0EFB               	movlw	-5
 22655  012CE6  28E3               	incf	plusw1,w,c
 22656  012CE8  A0D8               	btfss	status,0,c
 22657  012CEA  D019               	goto	l7114
 22658  012CEC                     u6070:
 22659  012CEC  0E00               	movlw	0
 22660  012CEE  6E3A               	movwf	(btemp+8)^0,c
 22661  012CF0  0E00               	movlw	0
 22662  012CF2  6E3B               	movwf	(btemp+9)^0,c
 22663  012CF4  0E80               	movlw	128
 22664  012CF6  6E3C               	movwf	(btemp+10)^0,c
 22665  012CF8  0E7F               	movlw	127
 22666  012CFA  6E3D               	movwf	(btemp+11)^0,c
 22667                           
 22668                           ;stkvar	_prod @ sp[(-13)+0]
 22669  012CFC  0EF3               	movlw	-13
 22670  012CFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22671  012D04  0EF4               	movlw	-12
 22672  012D06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22673  012D0C  0EF5               	movlw	-11
 22674  012D0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22675  012D14  0EF6               	movlw	-10
 22676  012D16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22677  012D1C  D044               	goto	l7130
 22678  012D1E                     l7114:
 22679                           
 22680                           ;stkvar	_temp @ sp[(-13)+8]
 22681  012D1E  0EFC               	movlw	-4
 22682  012D20  BEE3               	btfsc	plusw1,7,c
 22683  012D22  D007               	goto	u6080
 22684  012D24  0EFC               	movlw	-4
 22685  012D26  50E3               	movf	plusw1,w,c
 22686  012D28  E10F               	bnz	l7120
 22687  012D2A  0EFB               	movlw	-5
 22688  012D2C  04E3               	decf	plusw1,w,c
 22689  012D2E  B0D8               	btfsc	status,0,c
 22690  012D30  D00B               	goto	l7120
 22691  012D32                     u6080:
 22692                           
 22693                           ;stkvar	_prod @ sp[(-13)+0]
 22694  012D32  0EF3               	movlw	-13
 22695  012D34  6AE3               	clrf	plusw1,c
 22696  012D36  0EF4               	movlw	-12
 22697  012D38  6AE3               	clrf	plusw1,c
 22698  012D3A  0EF5               	movlw	-11
 22699  012D3C  6AE3               	clrf	plusw1,c
 22700  012D3E  0EF6               	movlw	-10
 22701  012D40  6AE3               	clrf	plusw1,c
 22702                           
 22703                           ;stkvar	_sign @ sp[(-13)+12]
 22704  012D42  0EFF               	movlw	-1
 22705  012D44  6AE3               	clrf	plusw1,c
 22706  012D46  D02F               	goto	l7130
 22707  012D48                     l7120:
 22708                           
 22709                           ;stkvar	_temp @ sp[(-13)+8]
 22710                           ;stkvar	_bexp @ sp[(-13)+10]
 22711  012D48  0EFB               	movlw	-5
 22712  012D4A  006F FF8C  F032    	movff	plusw1,btemp
 22713  012D50  0EFD               	movlw	-3
 22714  012D52  0060  F0CB  FFE3   	movff	btemp,plusw1
 22715                           
 22716                           ;stkvar	_prod @ sp[(-13)+0]
 22717  012D58  50E1               	movf	fsr1l,w,c
 22718  012D5A  0FF3               	addlw	-13
 22719  012D5C  6ED9               	movwf	fsr2l,c
 22720  012D5E  50E2               	movf	fsr1h,w,c
 22721  012D60  6EDA               	movwf	fsr2h,c
 22722  012D62  0EFF               	movlw	255
 22723  012D64  22DA               	addwfc	fsr2h,f,c
 22724  012D66  0EFF               	movlw	255
 22725  012D68  16DE               	andwf	postinc2,f,c
 22726  012D6A  0EFF               	movlw	255
 22727  012D6C  16DE               	andwf	postinc2,f,c
 22728  012D6E  0E7F               	movlw	127
 22729  012D70  16DE               	andwf	postinc2,f,c
 22730  012D72  0E00               	movlw	0
 22731  012D74  16DE               	andwf	postinc2,f,c
 22732                           
 22733                           ;stkvar	_bexp @ sp[(-13)+10]
 22734  012D76  0EFD               	movlw	-3
 22735  012D78  A0E3               	btfss	plusw1,0,c
 22736  012D7A  D008               	goto	l7128
 22737                           
 22738                           ;stkvar	_prod @ sp[(-13)+0]
 22739  012D7C  0EF5               	movlw	245
 22740  012D7E  24E1               	addwf	fsr1l,w,c
 22741  012D80  6ED9               	movwf	fsr2l,c
 22742  012D82  0EFF               	movlw	255
 22743  012D84  20E2               	addwfc	fsr1h,w,c
 22744  012D86  6EDA               	movwf	fsr2h,c
 22745  012D88  0E00               	movlw	0
 22746  012D8A  8EDB               	bsf	plusw2,7,c
 22747  012D8C                     l7128:
 22748                           
 22749                           ;stkvar	_prod @ sp[(-13)+0]
 22750  012D8C  0EF6               	movlw	246
 22751  012D8E  24E1               	addwf	fsr1l,w,c
 22752  012D90  6ED9               	movwf	fsr2l,c
 22753  012D92  0EFF               	movlw	255
 22754  012D94  20E2               	addwfc	fsr1h,w,c
 22755  012D96  6EDA               	movwf	fsr2h,c
 22756                           
 22757                           ;stkvar	_bexp @ sp[(-13)+10]
 22758  012D98  0EFD               	movlw	-3
 22759  012D9A  006F FF8C  F03D    	movff	plusw1,btemp+11
 22760  012DA0  90D8               	bcf	status,0,c
 22761  012DA2  303D               	rrcf	(btemp+11)^0,w,c
 22762  012DA4  6EDF               	movwf	indf2,c
 22763  012DA6                     l7130:
 22764                           
 22765                           ;stkvar	_sign @ sp[(-13)+12]
 22766  012DA6  0EFF               	movlw	-1
 22767  012DA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 22768                           
 22769                           ;stkvar	_prod @ sp[(-13)+0]
 22770  012DAE  0EF6               	movlw	246
 22771  012DB0  24E1               	addwf	fsr1l,w,c
 22772  012DB2  6ED9               	movwf	fsr2l,c
 22773  012DB4  0EFF               	movlw	255
 22774  012DB6  20E2               	addwfc	fsr1h,w,c
 22775  012DB8  6EDA               	movwf	fsr2h,c
 22776  012DBA  503D               	movf	(btemp+11)^0,w,c
 22777  012DBC  12DF               	iorwf	indf2,f,c
 22778                           
 22779                           ;stkvar	_prod @ sp[(-13)+0]
 22780  012DBE  0EF3               	movlw	-13
 22781  012DC0  006F FF8C  F032    	movff	plusw1,btemp
 22782  012DC6  0EF4               	movlw	-12
 22783  012DC8  006F FF8C  F033    	movff	plusw1,btemp+1
 22784  012DCE  0EF5               	movlw	-11
 22785  012DD0  006F FF8C  F034    	movff	plusw1,btemp+2
 22786  012DD6  0EF6               	movlw	-10
 22787  012DD8  006F FF8C  F035    	movff	plusw1,btemp+3
 22788  012DDE                     l2717:
 22789                           
 22790                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 22791  012DDE  0EEB               	movlw	235
 22792  012DE0  26E1               	addwf	fsr1l,f,c
 22793  012DE2  0EFF               	movlw	255
 22794  012DE4  22E2               	addwfc	fsr1h,f,c
 22795  012DE6  0012               	return		;funcret
 22796  012DE8                     __end_of___flmul:
 22797                           	opt callstack 0
 22798                           
 22799 ;; *************** function _SYSTEM_Initialize *****************
 22800 ;; Defined at:
 22801 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22802 ;; Parameters:    Size  Location     Type
 22803 ;;		None
 22804 ;; Auto vars:     Size  Location     Type
 22805 ;;		None
 22806 ;; Return value:  Size  Location     Type
 22807 ;;                  1  [STACK] void 
 22808 ;; Registers used:
 22809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22810 ;; Tracked objects:
 22811 ;;		On entry : 0/0
 22812 ;;		On exit  : 3F/3C
 22813 ;;		Unchanged: 0/0
 22814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22819 ;;Total ram usage:        0 bytes
 22820 ;; Hardware stack levels used:    1
 22821 ;; Hardware stack levels required when called:    8
 22822 ;; This function calls:
 22823 ;;		_ADCC_Initialize
 22824 ;;		_CLKREF_Initialize
 22825 ;;		_DMA1_Initialize
 22826 ;;		_DMA2_Initialize
 22827 ;;		_EXT_INT_Initialize
 22828 ;;		_FVR_Initialize
 22829 ;;		_INTERRUPT_Initialize
 22830 ;;		_OSCILLATOR_Initialize
 22831 ;;		_PIN_MANAGER_Initialize
 22832 ;;		_PMD_Initialize
 22833 ;;		_PWM8_Initialize
 22834 ;;		_SPI1_Initialize
 22835 ;;		_TMR2_Initialize
 22836 ;;		_TMR5_Initialize
 22837 ;;		_TMR6_Initialize
 22838 ;;		_UART1_Initialize
 22839 ;;		_UART2_Initialize
 22840 ;; This function is called by:
 22841 ;;		_main
 22842 ;; This function uses a reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text90
 22846  018350                     __ptext90:
 22847                           	opt callstack 0
 22848  018350                     _SYSTEM_Initialize:
 22849                           	opt callstack 22
 22850                           
 22851                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22852                           
 22853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22854                           ;incstack = 0
 22855  018350  EC3C  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 22856                           
 22857                           ; BSR set to: 57
 22858                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22859  018354  ECC2  F0C6         	call	_PMD_Initialize	;wreg free
 22860                           
 22861                           ; BSR set to: 57
 22862                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22863  018358  EC06  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22864                           
 22865                           ; BSR set to: 58
 22866                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22867  01835C  ECB7  F0C6         	call	_OSCILLATOR_Initialize	;wreg free
 22868                           
 22869                           ; BSR set to: 57
 22870                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22871  018360  EC21  F0C7         	call	_FVR_Initialize	;wreg free
 22872                           
 22873                           ; BSR set to: 62
 22874                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22875  018364  ECD3  F0BE         	call	_ADCC_Initialize	;wreg free
 22876                           
 22877                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22878  018368  EC89  F0C6         	call	_TMR2_Initialize	;wreg free
 22879                           
 22880                           ; BSR set to: 57
 22881                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22882  01836C  ECAC  F0C6         	call	_PWM8_Initialize	;wreg free
 22883                           
 22884                           ; BSR set to: 63
 22885                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22886  018370  EC1D  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22887                           
 22888                           ; BSR set to: 57
 22889                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22890  018374  ECDA  F0C3         	call	_TMR6_Initialize	;wreg free
 22891                           
 22892                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22893  018378  ECCB  F0C1         	call	_TMR5_Initialize	;wreg free
 22894                           
 22895                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22896  01837C  ECA1  F0BF         	call	_UART1_Initialize	;wreg free
 22897                           
 22898                           ; BSR set to: 57
 22899                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22900  018380  EC35  F0C0         	call	_UART2_Initialize	;wreg free
 22901                           
 22902                           ; BSR set to: 57
 22903                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22904  018384  ECA1  F0C6         	call	_SPI1_Initialize	;wreg free
 22905                           
 22906                           ; BSR set to: 61
 22907                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22908  018388  ECBF  F0C0         	call	_DMA2_Initialize	;wreg free
 22909                           
 22910                           ; BSR set to: 59
 22911                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22912  01838C  EC9E  F0BE         	call	_DMA1_Initialize	;wreg free
 22913                           
 22914                           ; BSR set to: 59
 22915                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22916  018390  ECFB  F0C6         	call	_CLKREF_Initialize	;wreg free
 22917                           
 22918                           ; BSR set to: 60
 22919                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22920  018394  0012               	return		;funcret
 22921  018396                     __end_of_SYSTEM_Initialize:
 22922                           	opt callstack 0
 22923                           
 22924 ;; *************** function _UART2_Initialize *****************
 22925 ;; Defined at:
 22926 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22927 ;; Parameters:    Size  Location     Type
 22928 ;;		None
 22929 ;; Auto vars:     Size  Location     Type
 22930 ;;		None
 22931 ;; Return value:  Size  Location     Type
 22932 ;;                  1  [STACK] void 
 22933 ;; Registers used:
 22934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22935 ;; Tracked objects:
 22936 ;;		On entry : 3F/39
 22937 ;;		On exit  : 3F/39
 22938 ;;		Unchanged: 0/0
 22939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22944 ;;Total ram usage:        0 bytes
 22945 ;; Hardware stack levels used:    1
 22946 ;; Hardware stack levels required when called:    7
 22947 ;; This function calls:
 22948 ;;		_UART2_SetRxInterruptHandler
 22949 ;;		_UART2_SetTxInterruptHandler
 22950 ;; This function is called by:
 22951 ;;		_SYSTEM_Initialize
 22952 ;; This function uses a reentrant model
 22953 ;;
 22954                           
 22955                           	psect	text91
 22956  01806A                     __ptext91:
 22957                           	opt callstack 0
 22958  01806A                     _UART2_Initialize:
 22959                           	opt callstack 22
 22960                           
 22961                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22962                           
 22963                           ; BSR set to: 60
 22964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22965                           ;incstack = 0
 22966  01806A  0139               	movlb	57	; () banked
 22967  01806C  9596               	bcf	150,2,b	;volatile
 22968                           
 22969                           ; BSR set to: 57
 22970                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22971  01806E  0E6E               	movlw	low _UART2_Receive_ISR
 22972  018070  6EE6               	movwf	postinc1,c
 22973  018072  0E8C               	movlw	high _UART2_Receive_ISR
 22974  018074  6EE6               	movwf	postinc1,c
 22975  018076  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22976  018078  6EE6               	movwf	postinc1,c
 22977  01807A  EC69  F0C4         	call	_UART2_SetRxInterruptHandler	;wreg free
 22978                           
 22979                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22980  01807E  0139               	movlb	57	; () banked
 22981  018080  9796               	bcf	150,3,b	;volatile
 22982                           
 22983                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22984  018082  0E88               	movlw	low _UART2_Transmit_ISR
 22985  018084  6EE6               	movwf	postinc1,c
 22986  018086  0E87               	movlw	high _UART2_Transmit_ISR
 22987  018088  6EE6               	movwf	postinc1,c
 22988  01808A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22989  01808C  6EE6               	movwf	postinc1,c
 22990  01808E  EC55  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22991                           
 22992                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22993  018092  013D               	movlb	61	; () banked
 22994  018094  6BD4               	clrf	212,b	;volatile
 22995                           
 22996                           ; BSR set to: 61
 22997                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22998  018096  6BD6               	clrf	214,b	;volatile
 22999                           
 23000                           ; BSR set to: 61
 23001                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23002  018098  6BD8               	clrf	216,b	;volatile
 23003                           
 23004                           ; BSR set to: 61
 23005                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23006  01809A  0EB0               	movlw	176
 23007  01809C  6FDA               	movwf	218,b	;volatile
 23008                           
 23009                           ; BSR set to: 61
 23010                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23011  01809E  0E80               	movlw	128
 23012  0180A0  6FDB               	movwf	219,b	;volatile
 23013                           
 23014                           ; BSR set to: 61
 23015                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23016  0180A2  6BDC               	clrf	220,b	;volatile
 23017                           
 23018                           ; BSR set to: 61
 23019                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23020  0180A4  0E82               	movlw	130
 23021  0180A6  6FDD               	movwf	221,b	;volatile
 23022                           
 23023                           ; BSR set to: 61
 23024                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23025  0180A8  0E06               	movlw	6
 23026  0180AA  6FDE               	movwf	222,b	;volatile
 23027                           
 23028                           ; BSR set to: 61
 23029                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23030  0180AC  6BDF               	clrf	223,b	;volatile
 23031                           
 23032                           ; BSR set to: 61
 23033                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23034  0180AE  6BE0               	clrf	224,b	;volatile
 23035                           
 23036                           ; BSR set to: 61
 23037                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23038  0180B0  6BE1               	clrf	225,b	;volatile
 23039                           
 23040                           ; BSR set to: 61
 23041                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23042  0180B2  6BE2               	clrf	226,b	;volatile
 23043                           
 23044                           ; BSR set to: 61
 23045                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23046  0180B4  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 23047                           
 23048                           ; BSR set to: 61
 23049                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23050  0180B6  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 23051                           
 23052                           ; BSR set to: 61
 23053                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23054  0180B8  0E40               	movlw	64
 23055  0180BA  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23056                           
 23057                           ; BSR set to: 61
 23058                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23059  0180BC  6A28               	clrf	_uart2RxHead^0,c	;volatile
 23060                           
 23061                           ; BSR set to: 61
 23062                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23063  0180BE  6A27               	clrf	_uart2RxTail^0,c	;volatile
 23064                           
 23065                           ; BSR set to: 61
 23066                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23067  0180C0  6A26               	clrf	_uart2RxCount^0,c	;volatile
 23068                           
 23069                           ; BSR set to: 61
 23070                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23071  0180C2  0139               	movlb	57	; () banked
 23072  0180C4  8596               	bsf	150,2,b	;volatile
 23073                           
 23074                           ; BSR set to: 57
 23075                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23076  0180C6  0012               	return		;funcret
 23077  0180C8                     __end_of_UART2_Initialize:
 23078                           	opt callstack 0
 23079                           
 23080 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23081 ;; Defined at:
 23082 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23083 ;; Parameters:    Size  Location     Type
 23084 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23085 ;;		 -> UART2_Transmit_ISR(1), 
 23086 ;; Auto vars:     Size  Location     Type
 23087 ;;		None
 23088 ;; Return value:  Size  Location     Type
 23089 ;;                  1  [STACK] void 
 23090 ;; Registers used:
 23091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23092 ;; Tracked objects:
 23093 ;;		On entry : 3F/39
 23094 ;;		On exit  : 0/0
 23095 ;;		Unchanged: 0/0
 23096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23101 ;;Total ram usage:        0 bytes
 23102 ;; Hardware stack levels used:    1
 23103 ;; Hardware stack levels required when called:    6
 23104 ;; This function calls:
 23105 ;;		Nothing
 23106 ;; This function is called by:
 23107 ;;		_UART2_Initialize
 23108 ;; This function uses a reentrant model
 23109 ;;
 23110                           
 23111                           	psect	text92
 23112  0188AA                     __ptext92:
 23113                           	opt callstack 0
 23114  0188AA                     _UART2_SetTxInterruptHandler:
 23115                           	opt callstack 22
 23116                           
 23117                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23118                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23119                           
 23120                           ; BSR set to: 57
 23121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23122                           ;incstack = 0
 23123  0188AA  50E1               	movf	fsr1l,w,c
 23124  0188AC  0FFD               	addlw	-3
 23125  0188AE  6ED9               	movwf	fsr2l,c
 23126  0188B0  50E2               	movf	fsr1h,w,c
 23127  0188B2  6EDA               	movwf	fsr2h,c
 23128  0188B4  0EFF               	movlw	255
 23129  0188B6  22DA               	addwfc	fsr2h,f,c
 23130  0188B8  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 23131  0188BE  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 23132  0188C4  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 23133                           
 23134                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23135  0188CA  52E5               	movf	postdec1,f,c
 23136  0188CC  52E5               	movf	postdec1,f,c
 23137  0188CE  52E5               	movf	postdec1,f,c
 23138  0188D0  0012               	return		;funcret
 23139  0188D2                     __end_of_UART2_SetTxInterruptHandler:
 23140                           	opt callstack 0
 23141                           
 23142 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23143 ;; Defined at:
 23144 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23145 ;; Parameters:    Size  Location     Type
 23146 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23147 ;;		 -> UART2_Receive_ISR(1), 
 23148 ;; Auto vars:     Size  Location     Type
 23149 ;;		None
 23150 ;; Return value:  Size  Location     Type
 23151 ;;                  1  [STACK] void 
 23152 ;; Registers used:
 23153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23154 ;; Tracked objects:
 23155 ;;		On entry : 3F/39
 23156 ;;		On exit  : 0/0
 23157 ;;		Unchanged: 0/0
 23158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23163 ;;Total ram usage:        0 bytes
 23164 ;; Hardware stack levels used:    1
 23165 ;; Hardware stack levels required when called:    6
 23166 ;; This function calls:
 23167 ;;		Nothing
 23168 ;; This function is called by:
 23169 ;;		_UART2_Initialize
 23170 ;; This function uses a reentrant model
 23171 ;;
 23172                           
 23173                           	psect	text93
 23174  0188D2                     __ptext93:
 23175                           	opt callstack 0
 23176  0188D2                     _UART2_SetRxInterruptHandler:
 23177                           	opt callstack 22
 23178                           
 23179                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23180                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23181                           
 23182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23183                           ;incstack = 0
 23184  0188D2  50E1               	movf	fsr1l,w,c
 23185  0188D4  0FFD               	addlw	-3
 23186  0188D6  6ED9               	movwf	fsr2l,c
 23187  0188D8  50E2               	movf	fsr1h,w,c
 23188  0188DA  6EDA               	movwf	fsr2h,c
 23189  0188DC  0EFF               	movlw	255
 23190  0188DE  22DA               	addwfc	fsr2h,f,c
 23191  0188E0  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 23192  0188E6  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 23193  0188EC  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 23194                           
 23195                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23196  0188F2  52E5               	movf	postdec1,f,c
 23197  0188F4  52E5               	movf	postdec1,f,c
 23198  0188F6  52E5               	movf	postdec1,f,c
 23199  0188F8  0012               	return		;funcret
 23200  0188FA                     __end_of_UART2_SetRxInterruptHandler:
 23201                           	opt callstack 0
 23202                           
 23203 ;; *************** function _UART1_Initialize *****************
 23204 ;; Defined at:
 23205 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23206 ;; Parameters:    Size  Location     Type
 23207 ;;		None
 23208 ;; Auto vars:     Size  Location     Type
 23209 ;;		None
 23210 ;; Return value:  Size  Location     Type
 23211 ;;                  1  [STACK] void 
 23212 ;; Registers used:
 23213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23214 ;; Tracked objects:
 23215 ;;		On entry : 0/39
 23216 ;;		On exit  : 3F/39
 23217 ;;		Unchanged: 0/0
 23218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23223 ;;Total ram usage:        0 bytes
 23224 ;; Hardware stack levels used:    1
 23225 ;; Hardware stack levels required when called:    7
 23226 ;; This function calls:
 23227 ;;		_UART1_SetRxInterruptHandler
 23228 ;;		_UART1_SetTxInterruptHandler
 23229 ;; This function is called by:
 23230 ;;		_SYSTEM_Initialize
 23231 ;; This function uses a reentrant model
 23232 ;;
 23233                           
 23234                           	psect	text94
 23235  017F42                     __ptext94:
 23236                           	opt callstack 0
 23237  017F42                     _UART1_Initialize:
 23238                           	opt callstack 22
 23239                           
 23240                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23241                           
 23242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23243                           ;incstack = 0
 23244  017F42  0139               	movlb	57	; () banked
 23245  017F44  9793               	bcf	147,3,b	;volatile
 23246                           
 23247                           ; BSR set to: 57
 23248                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23249  017F46  0E50               	movlw	low _UART1_Receive_ISR
 23250  017F48  6EE6               	movwf	postinc1,c
 23251  017F4A  0E8C               	movlw	high _UART1_Receive_ISR
 23252  017F4C  6EE6               	movwf	postinc1,c
 23253  017F4E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23254  017F50  6EE6               	movwf	postinc1,c
 23255  017F52  EC91  F0C4         	call	_UART1_SetRxInterruptHandler	;wreg free
 23256                           
 23257                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23258  017F56  0139               	movlb	57	; () banked
 23259  017F58  9993               	bcf	147,4,b	;volatile
 23260                           
 23261                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23262  017F5A  0E5C               	movlw	low _UART1_Transmit_ISR
 23263  017F5C  6EE6               	movwf	postinc1,c
 23264  017F5E  0E87               	movlw	high _UART1_Transmit_ISR
 23265  017F60  6EE6               	movwf	postinc1,c
 23266  017F62  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23267  017F64  6EE6               	movwf	postinc1,c
 23268  017F66  EC7D  F0C4         	call	_UART1_SetTxInterruptHandler	;wreg free
 23269                           
 23270                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23271  017F6A  013D               	movlb	61	; () banked
 23272  017F6C  6BEC               	clrf	236,b	;volatile
 23273                           
 23274                           ; BSR set to: 61
 23275                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23276  017F6E  6BED               	clrf	237,b	;volatile
 23277                           
 23278                           ; BSR set to: 61
 23279                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23280  017F70  6BEE               	clrf	238,b	;volatile
 23281                           
 23282                           ; BSR set to: 61
 23283                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23284  017F72  6BEF               	clrf	239,b	;volatile
 23285                           
 23286                           ; BSR set to: 61
 23287                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23288  017F74  6BF0               	clrf	240,b	;volatile
 23289                           
 23290                           ; BSR set to: 61
 23291                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23292  017F76  6BF1               	clrf	241,b	;volatile
 23293                           
 23294                           ; BSR set to: 61
 23295                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23296  017F78  0EB0               	movlw	176
 23297  017F7A  6FF2               	movwf	242,b	;volatile
 23298                           
 23299                           ; BSR set to: 61
 23300                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23301  017F7C  0E80               	movlw	128
 23302  017F7E  6FF3               	movwf	243,b	;volatile
 23303                           
 23304                           ; BSR set to: 61
 23305                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23306  017F80  6BF4               	clrf	244,b	;volatile
 23307                           
 23308                           ; BSR set to: 61
 23309                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23310  017F82  0E82               	movlw	130
 23311  017F84  6FF5               	movwf	245,b	;volatile
 23312                           
 23313                           ; BSR set to: 61
 23314                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23315  017F86  0E06               	movlw	6
 23316  017F88  6FF6               	movwf	246,b	;volatile
 23317                           
 23318                           ; BSR set to: 61
 23319                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23320  017F8A  6BF7               	clrf	247,b	;volatile
 23321                           
 23322                           ; BSR set to: 61
 23323                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23324  017F8C  6BF8               	clrf	248,b	;volatile
 23325                           
 23326                           ; BSR set to: 61
 23327                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23328  017F8E  6BF9               	clrf	249,b	;volatile
 23329                           
 23330                           ; BSR set to: 61
 23331                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23332  017F90  6BFA               	clrf	250,b	;volatile
 23333                           
 23334                           ; BSR set to: 61
 23335                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23336  017F92  6A31               	clrf	_uart1TxHead^0,c	;volatile
 23337                           
 23338                           ; BSR set to: 61
 23339                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23340  017F94  6A30               	clrf	_uart1TxTail^0,c	;volatile
 23341                           
 23342                           ; BSR set to: 61
 23343                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23344  017F96  0E40               	movlw	64
 23345  017F98  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23346                           
 23347                           ; BSR set to: 61
 23348                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23349  017F9A  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 23350                           
 23351                           ; BSR set to: 61
 23352                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23353  017F9C  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 23354                           
 23355                           ; BSR set to: 61
 23356                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23357  017F9E  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 23358                           
 23359                           ; BSR set to: 61
 23360                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23361  017FA0  0139               	movlb	57	; () banked
 23362  017FA2  8793               	bsf	147,3,b	;volatile
 23363                           
 23364                           ; BSR set to: 57
 23365                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23366  017FA4  0012               	return		;funcret
 23367  017FA6                     __end_of_UART1_Initialize:
 23368                           	opt callstack 0
 23369                           
 23370 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23371 ;; Defined at:
 23372 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23373 ;; Parameters:    Size  Location     Type
 23374 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23375 ;;		 -> UART1_Transmit_ISR(1), 
 23376 ;; Auto vars:     Size  Location     Type
 23377 ;;		None
 23378 ;; Return value:  Size  Location     Type
 23379 ;;                  1  [STACK] void 
 23380 ;; Registers used:
 23381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23382 ;; Tracked objects:
 23383 ;;		On entry : 3F/39
 23384 ;;		On exit  : 0/0
 23385 ;;		Unchanged: 0/0
 23386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23391 ;;Total ram usage:        0 bytes
 23392 ;; Hardware stack levels used:    1
 23393 ;; Hardware stack levels required when called:    6
 23394 ;; This function calls:
 23395 ;;		Nothing
 23396 ;; This function is called by:
 23397 ;;		_UART1_Initialize
 23398 ;; This function uses a reentrant model
 23399 ;;
 23400                           
 23401                           	psect	text95
 23402  0188FA                     __ptext95:
 23403                           	opt callstack 0
 23404  0188FA                     _UART1_SetTxInterruptHandler:
 23405                           	opt callstack 22
 23406                           
 23407                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23408                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23409                           
 23410                           ; BSR set to: 57
 23411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23412                           ;incstack = 0
 23413  0188FA  50E1               	movf	fsr1l,w,c
 23414  0188FC  0FFD               	addlw	-3
 23415  0188FE  6ED9               	movwf	fsr2l,c
 23416  018900  50E2               	movf	fsr1h,w,c
 23417  018902  6EDA               	movwf	fsr2h,c
 23418  018904  0EFF               	movlw	255
 23419  018906  22DA               	addwfc	fsr2h,f,c
 23420  018908  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 23421  01890E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 23422  018914  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 23423                           
 23424                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23425  01891A  52E5               	movf	postdec1,f,c
 23426  01891C  52E5               	movf	postdec1,f,c
 23427  01891E  52E5               	movf	postdec1,f,c
 23428  018920  0012               	return		;funcret
 23429  018922                     __end_of_UART1_SetTxInterruptHandler:
 23430                           	opt callstack 0
 23431                           
 23432 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23433 ;; Defined at:
 23434 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23435 ;; Parameters:    Size  Location     Type
 23436 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23437 ;;		 -> UART1_Receive_ISR(1), 
 23438 ;; Auto vars:     Size  Location     Type
 23439 ;;		None
 23440 ;; Return value:  Size  Location     Type
 23441 ;;                  1  [STACK] void 
 23442 ;; Registers used:
 23443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23444 ;; Tracked objects:
 23445 ;;		On entry : 3F/39
 23446 ;;		On exit  : 0/0
 23447 ;;		Unchanged: 0/0
 23448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23453 ;;Total ram usage:        0 bytes
 23454 ;; Hardware stack levels used:    1
 23455 ;; Hardware stack levels required when called:    6
 23456 ;; This function calls:
 23457 ;;		Nothing
 23458 ;; This function is called by:
 23459 ;;		_UART1_Initialize
 23460 ;; This function uses a reentrant model
 23461 ;;
 23462                           
 23463                           	psect	text96
 23464  018922                     __ptext96:
 23465                           	opt callstack 0
 23466  018922                     _UART1_SetRxInterruptHandler:
 23467                           	opt callstack 22
 23468                           
 23469                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23470                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23471                           
 23472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23473                           ;incstack = 0
 23474  018922  50E1               	movf	fsr1l,w,c
 23475  018924  0FFD               	addlw	-3
 23476  018926  6ED9               	movwf	fsr2l,c
 23477  018928  50E2               	movf	fsr1h,w,c
 23478  01892A  6EDA               	movwf	fsr2h,c
 23479  01892C  0EFF               	movlw	255
 23480  01892E  22DA               	addwfc	fsr2h,f,c
 23481  018930  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23482  018936  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23483  01893C  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23484                           
 23485                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23486  018942  52E5               	movf	postdec1,f,c
 23487  018944  52E5               	movf	postdec1,f,c
 23488  018946  52E5               	movf	postdec1,f,c
 23489  018948  0012               	return		;funcret
 23490  01894A                     __end_of_UART1_SetRxInterruptHandler:
 23491                           	opt callstack 0
 23492                           
 23493 ;; *************** function _TMR6_Initialize *****************
 23494 ;; Defined at:
 23495 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23496 ;; Parameters:    Size  Location     Type
 23497 ;;		None
 23498 ;; Auto vars:     Size  Location     Type
 23499 ;;		None
 23500 ;; Return value:  Size  Location     Type
 23501 ;;                  1  [STACK] void 
 23502 ;; Registers used:
 23503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23504 ;; Tracked objects:
 23505 ;;		On entry : 3F/39
 23506 ;;		On exit  : 0/0
 23507 ;;		Unchanged: 0/0
 23508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23513 ;;Total ram usage:        0 bytes
 23514 ;; Hardware stack levels used:    1
 23515 ;; Hardware stack levels required when called:    7
 23516 ;; This function calls:
 23517 ;;		_TMR6_SetInterruptHandler
 23518 ;; This function is called by:
 23519 ;;		_SYSTEM_Initialize
 23520 ;; This function uses a reentrant model
 23521 ;;
 23522                           
 23523                           	psect	text97
 23524  0187B4                     __ptext97:
 23525                           	opt callstack 0
 23526  0187B4                     _TMR6_Initialize:
 23527                           	opt callstack 22
 23528                           
 23529                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23530                           
 23531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23532                           ;incstack = 0
 23533  0187B4  0E01               	movlw	1
 23534  0187B6  6E96               	movwf	150,c	;volatile
 23535                           
 23536                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23537  0187B8  6A95               	clrf	149,c	;volatile
 23538                           
 23539                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23540  0187BA  6A97               	clrf	151,c	;volatile
 23541                           
 23542                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23543  0187BC  0E7C               	movlw	124
 23544  0187BE  6E93               	movwf	147,c	;volatile
 23545                           
 23546                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23547  0187C0  6A92               	clrf	146,c	;volatile
 23548                           
 23549                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23550  0187C2  0139               	movlb	57	; () banked
 23551  0187C4  91A9               	bcf	169,0,b	;volatile
 23552                           
 23553                           ; BSR set to: 57
 23554                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23555  0187C6  8199               	bsf	153,0,b	;volatile
 23556                           
 23557                           ; BSR set to: 57
 23558                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23559  0187C8  0EDC               	movlw	low _TMR6_DefaultInterruptHandler
 23560  0187CA  6EE6               	movwf	postinc1,c
 23561  0187CC  0E83               	movlw	high _TMR6_DefaultInterruptHandler
 23562  0187CE  6EE6               	movwf	postinc1,c
 23563  0187D0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23564  0187D2  6EE6               	movwf	postinc1,c
 23565  0187D4  ECA5  F0C4         	call	_TMR6_SetInterruptHandler	;wreg free
 23566                           
 23567                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23568  0187D8  0EE0               	movlw	224
 23569  0187DA  6E94               	movwf	148,c	;volatile
 23570                           
 23571                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23572  0187DC  0012               	return		;funcret
 23573  0187DE                     __end_of_TMR6_Initialize:
 23574                           	opt callstack 0
 23575                           
 23576 ;; *************** function _TMR6_SetInterruptHandler *****************
 23577 ;; Defined at:
 23578 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23579 ;; Parameters:    Size  Location     Type
 23580 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23581 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23582 ;; Auto vars:     Size  Location     Type
 23583 ;;		None
 23584 ;; Return value:  Size  Location     Type
 23585 ;;                  1  [STACK] void 
 23586 ;; Registers used:
 23587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23588 ;; Tracked objects:
 23589 ;;		On entry : 3F/39
 23590 ;;		On exit  : 0/0
 23591 ;;		Unchanged: 0/0
 23592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23597 ;;Total ram usage:        0 bytes
 23598 ;; Hardware stack levels used:    1
 23599 ;; Hardware stack levels required when called:    6
 23600 ;; This function calls:
 23601 ;;		Nothing
 23602 ;; This function is called by:
 23603 ;;		_TMR6_Initialize
 23604 ;; This function uses a reentrant model
 23605 ;;
 23606                           
 23607                           	psect	text98
 23608  01894A                     __ptext98:
 23609                           	opt callstack 0
 23610  01894A                     _TMR6_SetInterruptHandler:
 23611                           	opt callstack 22
 23612                           
 23613                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23614                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23615                           
 23616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23617                           ;incstack = 0
 23618  01894A  50E1               	movf	fsr1l,w,c
 23619  01894C  0FFD               	addlw	-3
 23620  01894E  6ED9               	movwf	fsr2l,c
 23621  018950  50E2               	movf	fsr1h,w,c
 23622  018952  6EDA               	movwf	fsr2h,c
 23623  018954  0EFF               	movlw	255
 23624  018956  22DA               	addwfc	fsr2h,f,c
 23625  018958  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 23626  01895E  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 23627  018964  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 23628                           
 23629                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23630  01896A  52E5               	movf	postdec1,f,c
 23631  01896C  52E5               	movf	postdec1,f,c
 23632  01896E  52E5               	movf	postdec1,f,c
 23633  018970  0012               	return		;funcret
 23634  018972                     __end_of_TMR6_SetInterruptHandler:
 23635                           	opt callstack 0
 23636                           
 23637 ;; *************** function _TMR5_Initialize *****************
 23638 ;; Defined at:
 23639 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23640 ;; Parameters:    Size  Location     Type
 23641 ;;		None
 23642 ;; Auto vars:     Size  Location     Type
 23643 ;;		None
 23644 ;; Return value:  Size  Location     Type
 23645 ;;                  1  [STACK] void 
 23646 ;; Registers used:
 23647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23648 ;; Tracked objects:
 23649 ;;		On entry : 0/39
 23650 ;;		On exit  : 0/0
 23651 ;;		Unchanged: 0/0
 23652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23657 ;;Total ram usage:        0 bytes
 23658 ;; Hardware stack levels used:    1
 23659 ;; Hardware stack levels required when called:    7
 23660 ;; This function calls:
 23661 ;;		_TMR5_SetInterruptHandler
 23662 ;; This function is called by:
 23663 ;;		_SYSTEM_Initialize
 23664 ;; This function uses a reentrant model
 23665 ;;
 23666                           
 23667                           	psect	text99
 23668  018396                     __ptext99:
 23669                           	opt callstack 0
 23670  018396                     _TMR5_Initialize:
 23671                           	opt callstack 22
 23672                           
 23673                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23674                           
 23675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23676                           ;incstack = 0
 23677  018396  6A9B               	clrf	155,c	;volatile
 23678                           
 23679                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23680  018398  6A9C               	clrf	156,c	;volatile
 23681                           
 23682                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23683  01839A  0E01               	movlw	1
 23684  01839C  6E9D               	movwf	157,c	;volatile
 23685                           
 23686                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23687  01839E  0E63               	movlw	99
 23688  0183A0  6E99               	movwf	153,c	;volatile
 23689                           
 23690                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23691  0183A2  0EC0               	movlw	192
 23692  0183A4  6E98               	movwf	152,c	;volatile
 23693                           
 23694                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23695  0183A6  5098               	movf	152,w,c	;volatile
 23696  0183A8  006F FE64  F032    	movff	16281,btemp	;volatile
 23697  0183AE  6A33               	clrf	(btemp+1)^0,c
 23698  0183B0  0060  F0C8  F033   	movff	btemp,btemp+1
 23699  0183B6  6A32               	clrf	btemp^0,c
 23700  0183B8  1032               	iorwf	btemp^0,w,c
 23701  0183BA  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23702  0183BC  5033               	movf	(btemp+1)^0,w,c
 23703  0183BE  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23704                           
 23705                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23706  0183C0  0139               	movlb	57	; () banked
 23707  0183C2  9DA8               	bcf	168,6,b	;volatile
 23708                           
 23709                           ; BSR set to: 57
 23710                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23711  0183C4  8D98               	bsf	152,6,b	;volatile
 23712                           
 23713                           ; BSR set to: 57
 23714                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23715  0183C6  0E3A               	movlw	low _TMR5_DefaultInterruptHandler
 23716  0183C8  6EE6               	movwf	postinc1,c
 23717  0183CA  0E8A               	movlw	high _TMR5_DefaultInterruptHandler
 23718  0183CC  6EE6               	movwf	postinc1,c
 23719  0183CE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23720  0183D0  6EE6               	movwf	postinc1,c
 23721  0183D2  ECB9  F0C4         	call	_TMR5_SetInterruptHandler	;wreg free
 23722                           
 23723                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23724  0183D6  0E31               	movlw	49
 23725  0183D8  6E9A               	movwf	154,c	;volatile
 23726                           
 23727                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23728  0183DA  0012               	return		;funcret
 23729  0183DC                     __end_of_TMR5_Initialize:
 23730                           	opt callstack 0
 23731                           
 23732 ;; *************** function _TMR5_SetInterruptHandler *****************
 23733 ;; Defined at:
 23734 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23735 ;; Parameters:    Size  Location     Type
 23736 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23737 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23738 ;; Auto vars:     Size  Location     Type
 23739 ;;		None
 23740 ;; Return value:  Size  Location     Type
 23741 ;;                  1  [STACK] void 
 23742 ;; Registers used:
 23743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23744 ;; Tracked objects:
 23745 ;;		On entry : 3F/39
 23746 ;;		On exit  : 0/0
 23747 ;;		Unchanged: 0/0
 23748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23753 ;;Total ram usage:        0 bytes
 23754 ;; Hardware stack levels used:    1
 23755 ;; Hardware stack levels required when called:    6
 23756 ;; This function calls:
 23757 ;;		Nothing
 23758 ;; This function is called by:
 23759 ;;		_TMR5_Initialize
 23760 ;; This function uses a reentrant model
 23761 ;;
 23762                           
 23763                           	psect	text100
 23764  018972                     __ptext100:
 23765                           	opt callstack 0
 23766  018972                     _TMR5_SetInterruptHandler:
 23767                           	opt callstack 22
 23768                           
 23769                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23770                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23771                           
 23772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23773                           ;incstack = 0
 23774  018972  50E1               	movf	fsr1l,w,c
 23775  018974  0FFD               	addlw	-3
 23776  018976  6ED9               	movwf	fsr2l,c
 23777  018978  50E2               	movf	fsr1h,w,c
 23778  01897A  6EDA               	movwf	fsr2h,c
 23779  01897C  0EFF               	movlw	255
 23780  01897E  22DA               	addwfc	fsr2h,f,c
 23781  018980  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 23782  018986  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 23783  01898C  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 23784                           
 23785                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23786  018992  52E5               	movf	postdec1,f,c
 23787  018994  52E5               	movf	postdec1,f,c
 23788  018996  52E5               	movf	postdec1,f,c
 23789  018998  0012               	return		;funcret
 23790  01899A                     __end_of_TMR5_SetInterruptHandler:
 23791                           	opt callstack 0
 23792                           
 23793 ;; *************** function _TMR2_Initialize *****************
 23794 ;; Defined at:
 23795 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23796 ;; Parameters:    Size  Location     Type
 23797 ;;		None
 23798 ;; Auto vars:     Size  Location     Type
 23799 ;;		None
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1  [STACK] void 
 23802 ;; Registers used:
 23803 ;;		wreg, status,2
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/3E
 23806 ;;		On exit  : 3F/39
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;Total ram usage:        0 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:    6
 23816 ;; This function calls:
 23817 ;;		Nothing
 23818 ;; This function is called by:
 23819 ;;		_SYSTEM_Initialize
 23820 ;; This function uses a reentrant model
 23821 ;;
 23822                           
 23823                           	psect	text101
 23824  018D12                     __ptext101:
 23825                           	opt callstack 0
 23826  018D12                     _TMR2_Initialize:
 23827                           	opt callstack 23
 23828                           
 23829                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23830                           
 23831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23832                           ;incstack = 0
 23833  018D12  0E01               	movlw	1
 23834  018D14  6EAE               	movwf	174,c	;volatile
 23835                           
 23836                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23837  018D16  6AAD               	clrf	173,c	;volatile
 23838                           
 23839                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23840  018D18  6AAF               	clrf	175,c	;volatile
 23841                           
 23842                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23843  018D1A  0E63               	movlw	99
 23844  018D1C  6EAB               	movwf	171,c	;volatile
 23845                           
 23846                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23847  018D1E  6AAA               	clrf	170,c	;volatile
 23848                           
 23849                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23850  018D20  0139               	movlb	57	; () banked
 23851  018D22  95A4               	bcf	164,2,b	;volatile
 23852                           
 23853                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23854  018D24  0EC0               	movlw	192
 23855  018D26  6EAC               	movwf	172,c	;volatile
 23856                           
 23857                           ; BSR set to: 57
 23858                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23859  018D28  0012               	return		;funcret
 23860  018D2A                     __end_of_TMR2_Initialize:
 23861                           	opt callstack 0
 23862                           
 23863 ;; *************** function _SPI1_Initialize *****************
 23864 ;; Defined at:
 23865 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23866 ;; Parameters:    Size  Location     Type
 23867 ;;		None
 23868 ;; Auto vars:     Size  Location     Type
 23869 ;;		None
 23870 ;; Return value:  Size  Location     Type
 23871 ;;                  1  [STACK] void 
 23872 ;; Registers used:
 23873 ;;		wreg, status,2
 23874 ;; Tracked objects:
 23875 ;;		On entry : 3F/39
 23876 ;;		On exit  : 3F/3D
 23877 ;;		Unchanged: 0/0
 23878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23883 ;;Total ram usage:        0 bytes
 23884 ;; Hardware stack levels used:    1
 23885 ;; Hardware stack levels required when called:    6
 23886 ;; This function calls:
 23887 ;;		Nothing
 23888 ;; This function is called by:
 23889 ;;		_SYSTEM_Initialize
 23890 ;; This function uses a reentrant model
 23891 ;;
 23892                           
 23893                           	psect	text102
 23894  018D42                     __ptext102:
 23895                           	opt callstack 0
 23896  018D42                     _SPI1_Initialize:
 23897                           	opt callstack 23
 23898                           
 23899                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23900                           
 23901                           ; BSR set to: 57
 23902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23903                           ;incstack = 0
 23904  018D42  0E40               	movlw	64
 23905  018D44  013D               	movlb	61	; () banked
 23906  018D46  6F15               	movwf	21,b	;volatile
 23907                           
 23908                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23909  018D48  0E03               	movlw	3
 23910  018D4A  6F16               	movwf	22,b	;volatile
 23911                           
 23912                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23913  018D4C  0E4F               	movlw	79
 23914  018D4E  6F19               	movwf	25,b	;volatile
 23915                           
 23916                           ; BSR set to: 61
 23917                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23918  018D50  6B1C               	clrf	28,b	;volatile
 23919                           
 23920                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23921  018D52  0E83               	movlw	131
 23922  018D54  6F14               	movwf	20,b	;volatile
 23923                           
 23924                           ; BSR set to: 61
 23925                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23926  018D56  0012               	return		;funcret
 23927  018D58                     __end_of_SPI1_Initialize:
 23928                           	opt callstack 0
 23929                           
 23930 ;; *************** function _PWM8_Initialize *****************
 23931 ;; Defined at:
 23932 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;		None
 23935 ;; Auto vars:     Size  Location     Type
 23936 ;;		None
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  1  [STACK] void 
 23939 ;; Registers used:
 23940 ;;		wreg, status,2
 23941 ;; Tracked objects:
 23942 ;;		On entry : 3F/39
 23943 ;;		On exit  : 3F/3F
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23950 ;;Total ram usage:        0 bytes
 23951 ;; Hardware stack levels used:    1
 23952 ;; Hardware stack levels required when called:    6
 23953 ;; This function calls:
 23954 ;;		Nothing
 23955 ;; This function is called by:
 23956 ;;		_SYSTEM_Initialize
 23957 ;; This function uses a reentrant model
 23958 ;;
 23959                           
 23960                           	psect	text103
 23961  018D58                     __ptext103:
 23962                           	opt callstack 0
 23963  018D58                     _PWM8_Initialize:
 23964                           	opt callstack 23
 23965                           
 23966                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23967                           
 23968                           ; BSR set to: 61
 23969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23970                           ;incstack = 0
 23971  018D58  0E80               	movlw	128
 23972  018D5A  6E62               	movwf	98,c	;volatile
 23973                           
 23974                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23975  018D5C  6A61               	clrf	97,c	;volatile
 23976                           
 23977                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23978  018D5E  0E40               	movlw	64
 23979  018D60  6E60               	movwf	96,c	;volatile
 23980                           
 23981                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23982  018D62  013F               	movlb	63	; () banked
 23983  018D64  515F               	movf	95,w,b	;volatile
 23984  018D66  0B3F               	andlw	-193
 23985  018D68  0940               	iorlw	64
 23986  018D6A  6F5F               	movwf	95,b	;volatile
 23987                           
 23988                           ; BSR set to: 63
 23989                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23990  018D6C  0012               	return		;funcret
 23991  018D6E                     __end_of_PWM8_Initialize:
 23992                           	opt callstack 0
 23993                           
 23994 ;; *************** function _PMD_Initialize *****************
 23995 ;; Defined at:
 23996 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23997 ;; Parameters:    Size  Location     Type
 23998 ;;		None
 23999 ;; Auto vars:     Size  Location     Type
 24000 ;;		None
 24001 ;; Return value:  Size  Location     Type
 24002 ;;                  1  [STACK] void 
 24003 ;; Registers used:
 24004 ;;		None
 24005 ;; Tracked objects:
 24006 ;;		On entry : 3F/39
 24007 ;;		On exit  : 3F/39
 24008 ;;		Unchanged: 0/0
 24009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24014 ;;Total ram usage:        0 bytes
 24015 ;; Hardware stack levels used:    1
 24016 ;; Hardware stack levels required when called:    6
 24017 ;; This function calls:
 24018 ;;		Nothing
 24019 ;; This function is called by:
 24020 ;;		_SYSTEM_Initialize
 24021 ;; This function uses a reentrant model
 24022 ;;
 24023                           
 24024                           	psect	text104
 24025  018D84                     __ptext104:
 24026                           	opt callstack 0
 24027  018D84                     _PMD_Initialize:
 24028                           	opt callstack 23
 24029                           
 24030                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 24031                           
 24032                           ; BSR set to: 63
 24033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24034                           ;incstack = 0
 24035  018D84  0139               	movlb	57	; () banked
 24036  018D86  6BC0               	clrf	192,b	;volatile
 24037                           
 24038                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 24039  018D88  6BC1               	clrf	193,b	;volatile
 24040                           
 24041                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 24042  018D8A  6BC2               	clrf	194,b	;volatile
 24043                           
 24044                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 24045  018D8C  6BC3               	clrf	195,b	;volatile
 24046                           
 24047                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 24048  018D8E  6BC4               	clrf	196,b	;volatile
 24049                           
 24050                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 24051  018D90  6BC5               	clrf	197,b	;volatile
 24052                           
 24053                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 24054  018D92  6BC6               	clrf	198,b	;volatile
 24055                           
 24056                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 24057  018D94  6BC7               	clrf	199,b	;volatile
 24058                           
 24059                           ; BSR set to: 57
 24060                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24061  018D96  0012               	return		;funcret
 24062  018D98                     __end_of_PMD_Initialize:
 24063                           	opt callstack 0
 24064                           
 24065 ;; *************** function _PIN_MANAGER_Initialize *****************
 24066 ;; Defined at:
 24067 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24068 ;; Parameters:    Size  Location     Type
 24069 ;;		None
 24070 ;; Auto vars:     Size  Location     Type
 24071 ;;		None
 24072 ;; Return value:  Size  Location     Type
 24073 ;;                  1  [STACK] void 
 24074 ;; Registers used:
 24075 ;;		wreg, status,2
 24076 ;; Tracked objects:
 24077 ;;		On entry : 3F/39
 24078 ;;		On exit  : 3F/3A
 24079 ;;		Unchanged: 0/0
 24080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24085 ;;Total ram usage:        0 bytes
 24086 ;; Hardware stack levels used:    1
 24087 ;; Hardware stack levels required when called:    6
 24088 ;; This function calls:
 24089 ;;		Nothing
 24090 ;; This function is called by:
 24091 ;;		_SYSTEM_Initialize
 24092 ;; This function uses a reentrant model
 24093 ;;
 24094                           
 24095                           	psect	text105
 24096  017A0C                     __ptext105:
 24097                           	opt callstack 0
 24098  017A0C                     _PIN_MANAGER_Initialize:
 24099                           	opt callstack 23
 24100                           
 24101                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24102                           
 24103                           ; BSR set to: 57
 24104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24105                           ;incstack = 0
 24106  017A0C  0E07               	movlw	7
 24107  017A0E  6EBE               	movwf	190,c	;volatile
 24108                           
 24109                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24110  017A10  0E80               	movlw	128
 24111  017A12  6EBD               	movwf	189,c	;volatile
 24112                           
 24113                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24114  017A14  6ABA               	clrf	186,c	;volatile
 24115                           
 24116                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24117  017A16  6ABF               	clrf	191,c	;volatile
 24118                           
 24119                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24120  017A18  6ABB               	clrf	187,c	;volatile
 24121                           
 24122                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24123  017A1A  0E07               	movlw	7
 24124  017A1C  6EBC               	movwf	188,c	;volatile
 24125                           
 24126                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24127  017A1E  6AC6               	clrf	198,c	;volatile
 24128                           
 24129                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24130  017A20  0E0F               	movlw	15
 24131  017A22  6EC7               	movwf	199,c	;volatile
 24132                           
 24133                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24134  017A24  68C2               	setf	194,c	;volatile
 24135                           
 24136                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24137  017A26  0EBF               	movlw	191
 24138  017A28  6EC3               	movwf	195,c	;volatile
 24139                           
 24140                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24141  017A2A  0E90               	movlw	144
 24142  017A2C  6EC4               	movwf	196,c	;volatile
 24143                           
 24144                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24145  017A2E  0E0C               	movlw	12
 24146  017A30  6EC5               	movwf	197,c	;volatile
 24147                           
 24148                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24149  017A32  013A               	movlb	58	; () banked
 24150  017A34  6B70               	clrf	112,b	;volatile
 24151                           
 24152                           ; BSR set to: 58
 24153                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24154  017A36  6B60               	clrf	96,b	;volatile
 24155                           
 24156                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24157  017A38  0E3C               	movlw	60
 24158  017A3A  6F50               	movwf	80,b	;volatile
 24159                           
 24160                           ; BSR set to: 58
 24161                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24162  017A3C  6B80               	clrf	128,b	;volatile
 24163                           
 24164                           ; BSR set to: 58
 24165                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24166  017A3E  6B90               	clrf	144,b	;volatile
 24167                           
 24168                           ; BSR set to: 58
 24169                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24170  017A40  6940               	setf	64,b	;volatile
 24171                           
 24172                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24173  017A42  0E0C               	movlw	12
 24174  017A44  6F71               	movwf	113,b	;volatile
 24175                           
 24176                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24177  017A46  0E0F               	movlw	15
 24178  017A48  6F91               	movwf	145,b	;volatile
 24179                           
 24180                           ; BSR set to: 58
 24181                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24182  017A4A  6B81               	clrf	129,b	;volatile
 24183                           
 24184                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24185  017A4C  0E83               	movlw	131
 24186  017A4E  6F51               	movwf	81,b	;volatile
 24187                           
 24188                           ; BSR set to: 58
 24189                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24190  017A50  6B41               	clrf	65,b	;volatile
 24191                           
 24192                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24193  017A52  0E97               	movlw	151
 24194  017A54  6F61               	movwf	97,b	;volatile
 24195                           
 24196                           ; BSR set to: 58
 24197                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24198  017A56  6B82               	clrf	130,b	;volatile
 24199                           
 24200                           ; BSR set to: 58
 24201                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24202  017A58  6B92               	clrf	146,b	;volatile
 24203                           
 24204                           ; BSR set to: 58
 24205                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24206  017A5A  6B42               	clrf	66,b	;volatile
 24207                           
 24208                           ; BSR set to: 58
 24209                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24210  017A5C  6B52               	clrf	82,b	;volatile
 24211                           
 24212                           ; BSR set to: 58
 24213                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24214  017A5E  6B62               	clrf	98,b	;volatile
 24215                           
 24216                           ; BSR set to: 58
 24217                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24218  017A60  6B72               	clrf	114,b	;volatile
 24219                           
 24220                           ; BSR set to: 58
 24221                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24222  017A62  6943               	setf	67,b	;volatile
 24223                           
 24224                           ; BSR set to: 58
 24225                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24226  017A64  6953               	setf	83,b	;volatile
 24227                           
 24228                           ; BSR set to: 58
 24229                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24230  017A66  6963               	setf	99,b	;volatile
 24231                           
 24232                           ; BSR set to: 58
 24233                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24234  017A68  6973               	setf	115,b	;volatile
 24235                           
 24236                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24237  017A6A  0E07               	movlw	7
 24238  017A6C  6F83               	movwf	131,b	;volatile
 24239                           
 24240                           ; BSR set to: 58
 24241                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24242  017A6E  6993               	setf	147,b	;volatile
 24243                           
 24244                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24245  017A70  0E0F               	movlw	15
 24246  017A72  6FE8               	movwf	232,b	;volatile
 24247                           
 24248                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24249  017A74  0E13               	movlw	19
 24250  017A76  6FDE               	movwf	222,b	;volatile
 24251                           
 24252                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24253  017A78  0E16               	movlw	22
 24254  017A7A  6F0E               	movwf	14,b	;volatile
 24255                           
 24256                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24257  017A7C  0E1E               	movlw	30
 24258  017A7E  6F13               	movwf	19,b	;volatile
 24259                           
 24260                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24261  017A80  0E08               	movlw	8
 24262  017A82  6FC0               	movwf	192,b	;volatile
 24263                           
 24264                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24265  017A84  0E10               	movlw	16
 24266  017A86  6F19               	movwf	25,b	;volatile
 24267                           
 24268                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24269  017A88  0E09               	movlw	9
 24270  017A8A  6FC1               	movwf	193,b	;volatile
 24271                           
 24272                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24273  017A8C  0E1F               	movlw	31
 24274  017A8E  6F15               	movwf	21,b	;volatile
 24275                           
 24276                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24277  017A90  0E13               	movlw	19
 24278  017A92  6F16               	movwf	22,b	;volatile
 24279                           
 24280                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24281  017A94  0E17               	movlw	23
 24282  017A96  6FE5               	movwf	229,b	;volatile
 24283                           
 24284                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24285  017A98  0E14               	movlw	20
 24286  017A9A  6FDF               	movwf	223,b	;volatile
 24287                           
 24288                           ; BSR set to: 58
 24289                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24290  017A9C  0012               	return		;funcret
 24291  017A9E                     __end_of_PIN_MANAGER_Initialize:
 24292                           	opt callstack 0
 24293                           
 24294 ;; *************** function _OSCILLATOR_Initialize *****************
 24295 ;; Defined at:
 24296 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24297 ;; Parameters:    Size  Location     Type
 24298 ;;		None
 24299 ;; Auto vars:     Size  Location     Type
 24300 ;;		None
 24301 ;; Return value:  Size  Location     Type
 24302 ;;                  1  [STACK] void 
 24303 ;; Registers used:
 24304 ;;		wreg, status,2
 24305 ;; Tracked objects:
 24306 ;;		On entry : 3F/3A
 24307 ;;		On exit  : 3F/39
 24308 ;;		Unchanged: 0/0
 24309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24314 ;;Total ram usage:        0 bytes
 24315 ;; Hardware stack levels used:    1
 24316 ;; Hardware stack levels required when called:    6
 24317 ;; This function calls:
 24318 ;;		Nothing
 24319 ;; This function is called by:
 24320 ;;		_SYSTEM_Initialize
 24321 ;; This function uses a reentrant model
 24322 ;;
 24323                           
 24324                           	psect	text106
 24325  018D6E                     __ptext106:
 24326                           	opt callstack 0
 24327  018D6E                     _OSCILLATOR_Initialize:
 24328                           	opt callstack 23
 24329                           
 24330                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24331                           
 24332                           ; BSR set to: 58
 24333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24334                           ;incstack = 0
 24335  018D6E  0E20               	movlw	32
 24336  018D70  0139               	movlb	57	; () banked
 24337  018D72  6FD9               	movwf	217,b	;volatile
 24338                           
 24339                           ; BSR set to: 57
 24340                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24341  018D74  6BDB               	clrf	219,b	;volatile
 24342                           
 24343                           ; BSR set to: 57
 24344                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24345  018D76  6BDD               	clrf	221,b	;volatile
 24346                           
 24347                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24348  018D78  0E02               	movlw	2
 24349  018D7A  6FDF               	movwf	223,b	;volatile
 24350                           
 24351                           ; BSR set to: 57
 24352                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24353  018D7C  6BDE               	clrf	222,b	;volatile
 24354  018D7E                     l171:
 24355                           
 24356                           ; BSR set to: 57
 24357                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24358  018D7E  B1DC               	btfsc	220,0,b	;volatile
 24359  018D80  0012               	return	
 24360  018D82  D7FD               	goto	l171
 24361  018D84                     __end_of_OSCILLATOR_Initialize:
 24362                           	opt callstack 0
 24363                           
 24364 ;; *************** function _INTERRUPT_Initialize *****************
 24365 ;; Defined at:
 24366 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24367 ;; Parameters:    Size  Location     Type
 24368 ;;		None
 24369 ;; Auto vars:     Size  Location     Type
 24370 ;;  state           1  [STACK] _Bool 
 24371 ;; Return value:  Size  Location     Type
 24372 ;;                  1  [STACK] void 
 24373 ;; Registers used:
 24374 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24375 ;; Tracked objects:
 24376 ;;		On entry : 0/0
 24377 ;;		On exit  : 3F/39
 24378 ;;		Unchanged: 0/0
 24379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24384 ;;Total ram usage:        0 bytes
 24385 ;; Hardware stack levels used:    1
 24386 ;; Hardware stack levels required when called:    6
 24387 ;; This function calls:
 24388 ;;		Nothing
 24389 ;; This function is called by:
 24390 ;;		_SYSTEM_Initialize
 24391 ;; This function uses a reentrant model
 24392 ;;
 24393                           
 24394                           	psect	text107
 24395  017E78                     __ptext107:
 24396                           	opt callstack 0
 24397  017E78                     _INTERRUPT_Initialize:
 24398                           	opt callstack 0
 24399                           
 24400                           ; BSR set to: 57
 24401                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24402  017E78  52E6               	movf	postinc1,f,c
 24403                           
 24404                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24405                           
 24406                           ;incstack = 0
 24407  017E7A  8AD2               	bsf	210,5,c	;volatile
 24408                           
 24409                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24410  017E7C  AED2               	btfss	16338,7,c	;volatile
 24411  017E7E  D003               	goto	u8050
 24412  017E80  6A3D               	clrf	(btemp+11)^0,c
 24413  017E82  2A3D               	incf	(btemp+11)^0,f,c
 24414  017E84  D001               	goto	u8068
 24415  017E86                     u8050:
 24416  017E86  6A3D               	clrf	(btemp+11)^0,c
 24417  017E88                     u8068:
 24418                           
 24419                           ;stkvar	_state @ sp[(-1)+0]
 24420  017E88  0EFF               	movlw	-1
 24421  017E8A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24422                           
 24423                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24424  017E90  9ED2               	bcf	16338,7,c	;volatile
 24425                           
 24426                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24427  017E92  0E55               	movlw	85
 24428  017E94  6ED4               	movwf	212,c	;volatile
 24429                           
 24430                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24431  017E96  0EAA               	movlw	170
 24432  017E98  6ED4               	movwf	212,c	;volatile
 24433                           
 24434                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24435  017E9A  90D4               	bcf	212,0,c	;volatile
 24436                           
 24437                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24438  017E9C  0138               	movlb	56	; () banked
 24439  017E9E  6B9F               	clrf	159,b	;volatile
 24440                           
 24441                           ; BSR set to: 56
 24442                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24443  017EA0  6B9E               	clrf	158,b	;volatile
 24444                           
 24445                           ; BSR set to: 56
 24446                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24447  017EA2  0E08               	movlw	8
 24448  017EA4  6F9D               	movwf	157,b	;volatile
 24449                           
 24450                           ; BSR set to: 56
 24451                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24452  017EA6  0E55               	movlw	85
 24453  017EA8  6ED4               	movwf	212,c	;volatile
 24454                           
 24455                           ; BSR set to: 56
 24456                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24457  017EAA  0EAA               	movlw	170
 24458  017EAC  6ED4               	movwf	212,c	;volatile
 24459                           
 24460                           ; BSR set to: 56
 24461                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24462  017EAE  80D4               	bsf	212,0,c	;volatile
 24463                           
 24464                           ; BSR set to: 56
 24465                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24466                           ;stkvar	_state @ sp[(-1)+0]
 24467  017EB0  0EFF               	movlw	-1
 24468  017EB2  B0E3               	btfsc	plusw1,0,c
 24469  017EB4  D002               	bra	u8075
 24470  017EB6  9ED2               	bcf	16338,7,c	;volatile
 24471  017EB8  D001               	bra	u8076
 24472  017EBA                     u8075:
 24473  017EBA  8ED2               	bsf	16338,7,c	;volatile
 24474  017EBC                     u8076:
 24475                           
 24476                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24477  017EBC  0139               	movlb	57	; () banked
 24478  017EBE  8782               	bsf	130,3,b	;volatile
 24479                           
 24480                           ; BSR set to: 57
 24481                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24482  017EC0  8382               	bsf	130,1,b	;volatile
 24483                           
 24484                           ; BSR set to: 57
 24485                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24486  017EC2  8182               	bsf	130,0,b	;volatile
 24487                           
 24488                           ; BSR set to: 57
 24489                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24490  017EC4  8582               	bsf	130,2,b	;volatile
 24491                           
 24492                           ; BSR set to: 57
 24493                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24494  017EC6  8786               	bsf	134,3,b	;volatile
 24495                           
 24496                           ; BSR set to: 57
 24497                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24498  017EC8  8586               	bsf	134,2,b	;volatile
 24499                           
 24500                           ; BSR set to: 57
 24501                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24502  017ECA  8983               	bsf	131,4,b	;volatile
 24503                           
 24504                           ; BSR set to: 57
 24505                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24506  017ECC  8783               	bsf	131,3,b	;volatile
 24507                           
 24508                           ; BSR set to: 57
 24509                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24510  017ECE  8181               	bsf	129,0,b	;volatile
 24511                           
 24512                           ; BSR set to: 57
 24513                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24514  017ED0  9185               	bcf	133,0,b	;volatile
 24515                           
 24516                           ; BSR set to: 57
 24517                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24518  017ED2  8189               	bsf	137,0,b	;volatile
 24519                           
 24520                           ; BSR set to: 57
 24521                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24522  017ED4  9D88               	bcf	136,6,b	;volatile
 24523                           
 24524                           ; BSR set to: 57
 24525                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24526  017ED6  8581               	bsf	129,2,b	;volatile
 24527                           
 24528                           ; BSR set to: 57
 24529                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24530  017ED8  8781               	bsf	129,3,b	;volatile
 24531                           
 24532                           ; BSR set to: 57
 24533                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24534  017EDA  52E5               	movf	postdec1,f,c
 24535  017EDC  0012               	return		;funcret
 24536  017EDE                     __end_of_INTERRUPT_Initialize:
 24537                           	opt callstack 0
 24538                           
 24539 ;; *************** function _FVR_Initialize *****************
 24540 ;; Defined at:
 24541 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24542 ;; Parameters:    Size  Location     Type
 24543 ;;		None
 24544 ;; Auto vars:     Size  Location     Type
 24545 ;;		None
 24546 ;; Return value:  Size  Location     Type
 24547 ;;                  1  [STACK] void 
 24548 ;; Registers used:
 24549 ;;		wreg, status,2
 24550 ;; Tracked objects:
 24551 ;;		On entry : 3F/39
 24552 ;;		On exit  : 3F/3E
 24553 ;;		Unchanged: 0/0
 24554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24559 ;;Total ram usage:        0 bytes
 24560 ;; Hardware stack levels used:    1
 24561 ;; Hardware stack levels required when called:    6
 24562 ;; This function calls:
 24563 ;;		Nothing
 24564 ;; This function is called by:
 24565 ;;		_SYSTEM_Initialize
 24566 ;; This function uses a reentrant model
 24567 ;;
 24568                           
 24569                           	psect	text108
 24570  018E42                     __ptext108:
 24571                           	opt callstack 0
 24572  018E42                     _FVR_Initialize:
 24573                           	opt callstack 23
 24574                           
 24575                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24576                           
 24577                           ; BSR set to: 57
 24578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24579                           ;incstack = 0
 24580  018E42  0EAF               	movlw	175
 24581  018E44  013E               	movlb	62	; () banked
 24582  018E46  6FC1               	movwf	193,b	;volatile
 24583                           
 24584                           ; BSR set to: 62
 24585                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24586  018E48  0012               	return		;funcret
 24587  018E4A                     __end_of_FVR_Initialize:
 24588                           	opt callstack 0
 24589                           
 24590 ;; *************** function _EXT_INT_Initialize *****************
 24591 ;; Defined at:
 24592 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24593 ;; Parameters:    Size  Location     Type
 24594 ;;		None
 24595 ;; Auto vars:     Size  Location     Type
 24596 ;;		None
 24597 ;; Return value:  Size  Location     Type
 24598 ;;                  1  [STACK] void 
 24599 ;; Registers used:
 24600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24601 ;; Tracked objects:
 24602 ;;		On entry : 3F/3F
 24603 ;;		On exit  : 3F/39
 24604 ;;		Unchanged: 0/0
 24605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24610 ;;Total ram usage:        0 bytes
 24611 ;; Hardware stack levels used:    1
 24612 ;; Hardware stack levels required when called:    7
 24613 ;; This function calls:
 24614 ;;		_INT0_SetInterruptHandler
 24615 ;;		_INT1_SetInterruptHandler
 24616 ;; This function is called by:
 24617 ;;		_SYSTEM_Initialize
 24618 ;; This function uses a reentrant model
 24619 ;;
 24620                           
 24621                           	psect	text109
 24622  01863A                     __ptext109:
 24623                           	opt callstack 0
 24624  01863A                     _EXT_INT_Initialize:
 24625                           	opt callstack 22
 24626                           
 24627                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24628                           
 24629                           ; BSR set to: 62
 24630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24631                           ;incstack = 0
 24632  01863A  0139               	movlb	57	; () banked
 24633  01863C  91A1               	bcf	161,0,b	;volatile
 24634                           
 24635                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24636  01863E  90D2               	bcf	210,0,c	;volatile
 24637                           
 24638                           ; BSR set to: 57
 24639                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24640  018640  0E64               	movlw	low _INT0_DefaultInterruptHandler
 24641  018642  6EE6               	movwf	postinc1,c
 24642  018644  0E8E               	movlw	high _INT0_DefaultInterruptHandler
 24643  018646  6EE6               	movwf	postinc1,c
 24644  018648  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24645  01864A  6EE6               	movwf	postinc1,c
 24646  01864C  ECE1  F0C4         	call	_INT0_SetInterruptHandler	;wreg free
 24647                           
 24648                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24649  018650  0139               	movlb	57	; () banked
 24650  018652  8191               	bsf	145,0,b	;volatile
 24651                           
 24652                           ; BSR set to: 57
 24653                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24654  018654  91A5               	bcf	165,0,b	;volatile
 24655                           
 24656                           ; BSR set to: 57
 24657                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24658  018656  92D2               	bcf	210,1,c	;volatile
 24659                           
 24660                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24661  018658  0E62               	movlw	low _INT1_DefaultInterruptHandler
 24662  01865A  6EE6               	movwf	postinc1,c
 24663  01865C  0E8E               	movlw	high _INT1_DefaultInterruptHandler
 24664  01865E  6EE6               	movwf	postinc1,c
 24665  018660  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24666  018662  6EE6               	movwf	postinc1,c
 24667  018664  ECCD  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
 24668                           
 24669                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24670  018668  0139               	movlb	57	; () banked
 24671  01866A  8195               	bsf	149,0,b	;volatile
 24672                           
 24673                           ; BSR set to: 57
 24674                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24675  01866C  0012               	return		;funcret
 24676  01866E                     __end_of_EXT_INT_Initialize:
 24677                           	opt callstack 0
 24678                           
 24679 ;; *************** function _INT1_SetInterruptHandler *****************
 24680 ;; Defined at:
 24681 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24682 ;; Parameters:    Size  Location     Type
 24683 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24684 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24685 ;; Auto vars:     Size  Location     Type
 24686 ;;		None
 24687 ;; Return value:  Size  Location     Type
 24688 ;;                  1  [STACK] void 
 24689 ;; Registers used:
 24690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24691 ;; Tracked objects:
 24692 ;;		On entry : 3F/39
 24693 ;;		On exit  : 0/0
 24694 ;;		Unchanged: 0/0
 24695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24700 ;;Total ram usage:        0 bytes
 24701 ;; Hardware stack levels used:    1
 24702 ;; Hardware stack levels required when called:    6
 24703 ;; This function calls:
 24704 ;;		Nothing
 24705 ;; This function is called by:
 24706 ;;		_EXT_INT_Initialize
 24707 ;;		_start_switch_handler
 24708 ;; This function uses a reentrant model
 24709 ;;
 24710                           
 24711                           	psect	text110
 24712  01899A                     __ptext110:
 24713                           	opt callstack 0
 24714  01899A                     _INT1_SetInterruptHandler:
 24715                           	opt callstack 23
 24716                           
 24717                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24718                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24719                           
 24720                           ; BSR set to: 57
 24721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24722                           ;incstack = 0
 24723  01899A  50E1               	movf	fsr1l,w,c
 24724  01899C  0FFD               	addlw	-3
 24725  01899E  6ED9               	movwf	fsr2l,c
 24726  0189A0  50E2               	movf	fsr1h,w,c
 24727  0189A2  6EDA               	movwf	fsr2h,c
 24728  0189A4  0EFF               	movlw	255
 24729  0189A6  22DA               	addwfc	fsr2h,f,c
 24730  0189A8  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24731  0189AE  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 24732  0189B4  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 24733                           
 24734                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24735  0189BA  52E5               	movf	postdec1,f,c
 24736  0189BC  52E5               	movf	postdec1,f,c
 24737  0189BE  52E5               	movf	postdec1,f,c
 24738  0189C0  0012               	return		;funcret
 24739  0189C2                     __end_of_INT1_SetInterruptHandler:
 24740                           	opt callstack 0
 24741                           
 24742 ;; *************** function _INT0_SetInterruptHandler *****************
 24743 ;; Defined at:
 24744 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24747 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24748 ;; Auto vars:     Size  Location     Type
 24749 ;;		None
 24750 ;; Return value:  Size  Location     Type
 24751 ;;                  1  [STACK] void 
 24752 ;; Registers used:
 24753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24754 ;; Tracked objects:
 24755 ;;		On entry : 3F/39
 24756 ;;		On exit  : 0/0
 24757 ;;		Unchanged: 0/0
 24758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24763 ;;Total ram usage:        0 bytes
 24764 ;; Hardware stack levels used:    1
 24765 ;; Hardware stack levels required when called:    6
 24766 ;; This function calls:
 24767 ;;		Nothing
 24768 ;; This function is called by:
 24769 ;;		_EXT_INT_Initialize
 24770 ;; This function uses a reentrant model
 24771 ;;
 24772                           
 24773                           	psect	text111
 24774  0189C2                     __ptext111:
 24775                           	opt callstack 0
 24776  0189C2                     _INT0_SetInterruptHandler:
 24777                           	opt callstack 22
 24778                           
 24779                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24780                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24781                           
 24782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24783                           ;incstack = 0
 24784  0189C2  50E1               	movf	fsr1l,w,c
 24785  0189C4  0FFD               	addlw	-3
 24786  0189C6  6ED9               	movwf	fsr2l,c
 24787  0189C8  50E2               	movf	fsr1h,w,c
 24788  0189CA  6EDA               	movwf	fsr2h,c
 24789  0189CC  0EFF               	movlw	255
 24790  0189CE  22DA               	addwfc	fsr2h,f,c
 24791  0189D0  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 24792  0189D6  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 24793  0189DC  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24794                           
 24795                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24796  0189E2  52E5               	movf	postdec1,f,c
 24797  0189E4  52E5               	movf	postdec1,f,c
 24798  0189E6  52E5               	movf	postdec1,f,c
 24799  0189E8  0012               	return		;funcret
 24800  0189EA                     __end_of_INT0_SetInterruptHandler:
 24801                           	opt callstack 0
 24802                           
 24803 ;; *************** function _DMA2_Initialize *****************
 24804 ;; Defined at:
 24805 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24806 ;; Parameters:    Size  Location     Type
 24807 ;;		None
 24808 ;; Auto vars:     Size  Location     Type
 24809 ;;		None
 24810 ;; Return value:  Size  Location     Type
 24811 ;;                  1  [STACK] void 
 24812 ;; Registers used:
 24813 ;;		wreg, status,2
 24814 ;; Tracked objects:
 24815 ;;		On entry : 3F/3D
 24816 ;;		On exit  : 3F/3B
 24817 ;;		Unchanged: 0/0
 24818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24823 ;;Total ram usage:        0 bytes
 24824 ;; Hardware stack levels used:    1
 24825 ;; Hardware stack levels required when called:    6
 24826 ;; This function calls:
 24827 ;;		Nothing
 24828 ;; This function is called by:
 24829 ;;		_SYSTEM_Initialize
 24830 ;; This function uses a reentrant model
 24831 ;;
 24832                           
 24833                           	psect	text112
 24834  01817E                     __ptext112:
 24835                           	opt callstack 0
 24836  01817E                     _DMA2_Initialize:
 24837                           	opt callstack 23
 24838                           
 24839                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24840                           
 24841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24842                           ;incstack = 0
 24843  01817E  0E00               	movlw	0
 24844  018180  013B               	movlb	59	; () banked
 24845  018182  6FD9               	movwf	217,b	;volatile
 24846  018184  0E10               	movlw	16
 24847  018186  6FDA               	movwf	218,b	;volatile
 24848  018188  0E00               	movlw	0
 24849  01818A  6FDB               	movwf	219,b	;volatile
 24850                           
 24851                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24852  01818C  0E3F               	movlw	63
 24853  01818E  6FD1               	movwf	209,b	;volatile
 24854  018190  0EBB               	movlw	187
 24855  018192  6FD0               	movwf	208,b	;volatile
 24856                           
 24857                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24858  018194  0E03               	movlw	3
 24859  018196  6FDD               	movwf	221,b	;volatile
 24860                           
 24861                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24862  018198  0E00               	movlw	0
 24863  01819A  6FD8               	movwf	216,b	;volatile
 24864  01819C  0E01               	movlw	1
 24865  01819E  6FD7               	movwf	215,b	;volatile
 24866                           
 24867                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24868  0181A0  0E00               	movlw	0
 24869  0181A2  6FCF               	movwf	207,b	;volatile
 24870  0181A4  0E01               	movlw	1
 24871  0181A6  6FCE               	movwf	206,b	;volatile
 24872                           
 24873                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24874  0181A8  0E46               	movlw	70
 24875  0181AA  6FDF               	movwf	223,b	;volatile
 24876                           
 24877                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24878  0181AC  0E3D               	movlw	61
 24879  0181AE  6FDE               	movwf	222,b	;volatile
 24880                           
 24881                           ; BSR set to: 59
 24882                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24883  0181B0  0139               	movlb	57	; () banked
 24884  0181B2  97A5               	bcf	165,3,b	;volatile
 24885                           
 24886                           ; BSR set to: 57
 24887                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24888  0181B4  95A5               	bcf	165,2,b	;volatile
 24889                           
 24890                           ; BSR set to: 57
 24891                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24892  0181B6  9BA5               	bcf	165,5,b	;volatile
 24893                           
 24894                           ; BSR set to: 57
 24895                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24896  0181B8  99A5               	bcf	165,4,b	;volatile
 24897                           
 24898                           ; BSR set to: 57
 24899                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24900  0181BA  9795               	bcf	149,3,b	;volatile
 24901                           
 24902                           ; BSR set to: 57
 24903                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24904  0181BC  9595               	bcf	149,2,b	;volatile
 24905                           
 24906                           ; BSR set to: 57
 24907                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24908  0181BE  9B95               	bcf	149,5,b	;volatile
 24909                           
 24910                           ; BSR set to: 57
 24911                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24912  0181C0  9995               	bcf	149,4,b	;volatile
 24913  0181C2  9ED2               	bcf	16338,7,c	;# 
 24914  0181C4  0139               	banksel	14831	;# 
 24915  0181C6  0E55               	movlw	85	;# 
 24916  0181C8  6FEF               	movwf	14831,b	;# 
 24917  0181CA  0EAA               	movlw	170	;# 
 24918  0181CC  6FEF               	movwf	14831,b	;# 
 24919  0181CE  81EF               	bsf	14831,0,b	;# 
 24920  0181D0  8ED2               	bsf	16338,7,c	;# 
 24921                           
 24922                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24923  0181D2  013B               	movlb	59	; () banked
 24924  0181D4  6BDC               	clrf	220,b	;volatile
 24925                           
 24926                           ; BSR set to: 59
 24927                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24928  0181D6  0012               	return		;funcret
 24929  0181D8                     __end_of_DMA2_Initialize:
 24930                           	opt callstack 0
 24931                           
 24932 ;; *************** function _DMA1_Initialize *****************
 24933 ;; Defined at:
 24934 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24935 ;; Parameters:    Size  Location     Type
 24936 ;;		None
 24937 ;; Auto vars:     Size  Location     Type
 24938 ;;		None
 24939 ;; Return value:  Size  Location     Type
 24940 ;;                  1  [STACK] void 
 24941 ;; Registers used:
 24942 ;;		wreg, status,2
 24943 ;; Tracked objects:
 24944 ;;		On entry : 3F/3B
 24945 ;;		On exit  : 3F/3B
 24946 ;;		Unchanged: 0/0
 24947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24952 ;;Total ram usage:        0 bytes
 24953 ;; Hardware stack levels used:    1
 24954 ;; Hardware stack levels required when called:    6
 24955 ;; This function calls:
 24956 ;;		Nothing
 24957 ;; This function is called by:
 24958 ;;		_SYSTEM_Initialize
 24959 ;; This function uses a reentrant model
 24960 ;;
 24961                           
 24962                           	psect	text113
 24963  017D3C                     __ptext113:
 24964                           	opt callstack 0
 24965  017D3C                     _DMA1_Initialize:
 24966                           	opt callstack 23
 24967                           
 24968                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24969                           
 24970                           ; BSR set to: 59
 24971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24972                           ;incstack = 0
 24973  017D3C  0E00               	movlw	0
 24974  017D3E  013B               	movlb	59	; () banked
 24975  017D40  6FF9               	movwf	249,b	;volatile
 24976  017D42  0E10               	movlw	16
 24977  017D44  6FFA               	movwf	250,b	;volatile
 24978  017D46  0E00               	movlw	0
 24979  017D48  6FFB               	movwf	251,b	;volatile
 24980                           
 24981                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24982  017D4A  0E3D               	movlw	61
 24983  017D4C  6FF1               	movwf	241,b	;volatile
 24984  017D4E  0E11               	movlw	17
 24985  017D50  6FF0               	movwf	240,b	;volatile
 24986                           
 24987                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24988  017D52  0E03               	movlw	3
 24989  017D54  6FFD               	movwf	253,b	;volatile
 24990                           
 24991                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24992  017D56  0E00               	movlw	0
 24993  017D58  6FF8               	movwf	248,b	;volatile
 24994  017D5A  0E01               	movlw	1
 24995  017D5C  6FF7               	movwf	247,b	;volatile
 24996                           
 24997                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24998  017D5E  0E00               	movlw	0
 24999  017D60  6FEF               	movwf	239,b	;volatile
 25000  017D62  0E01               	movlw	1
 25001  017D64  6FEE               	movwf	238,b	;volatile
 25002                           
 25003                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25004  017D66  0E15               	movlw	21
 25005  017D68  6FFF               	movwf	255,b	;volatile
 25006                           
 25007                           ; BSR set to: 59
 25008                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25009  017D6A  6BFE               	clrf	254,b	;volatile
 25010                           
 25011                           ; BSR set to: 59
 25012                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25013  017D6C  0139               	movlb	57	; () banked
 25014  017D6E  93A2               	bcf	162,1,b	;volatile
 25015                           
 25016                           ; BSR set to: 57
 25017                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25018  017D70  91A2               	bcf	162,0,b	;volatile
 25019                           
 25020                           ; BSR set to: 57
 25021                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25022  017D72  97A2               	bcf	162,3,b	;volatile
 25023                           
 25024                           ; BSR set to: 57
 25025                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25026  017D74  95A2               	bcf	162,2,b	;volatile
 25027                           
 25028                           ; BSR set to: 57
 25029                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25030  017D76  8392               	bsf	146,1,b	;volatile
 25031                           
 25032                           ; BSR set to: 57
 25033                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25034  017D78  8192               	bsf	146,0,b	;volatile
 25035                           
 25036                           ; BSR set to: 57
 25037                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25038  017D7A  8792               	bsf	146,3,b	;volatile
 25039                           
 25040                           ; BSR set to: 57
 25041                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25042  017D7C  8592               	bsf	146,2,b	;volatile
 25043                           
 25044                           ; BSR set to: 57
 25045                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25046  017D7E  6BF1               	clrf	241,b	;volatile
 25047                           
 25048                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25049  017D80  0E01               	movlw	1
 25050  017D82  6FF2               	movwf	242,b	;volatile
 25051                           
 25052                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25053  017D84  0E04               	movlw	4
 25054  017D86  6FF3               	movwf	243,b	;volatile
 25055                           
 25056                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25057  017D88  0E02               	movlw	2
 25058  017D8A  6FF4               	movwf	244,b	;volatile
 25059                           
 25060                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25061  017D8C  0E03               	movlw	3
 25062  017D8E  6FF7               	movwf	247,b	;volatile
 25063  017D90  9ED2               	bcf	16338,7,c	;# 
 25064  017D92  0139               	banksel	14831	;# 
 25065  017D94  0E55               	movlw	85	;# 
 25066  017D96  6FEF               	movwf	14831,b	;# 
 25067  017D98  0EAA               	movlw	170	;# 
 25068  017D9A  6FEF               	movwf	14831,b	;# 
 25069  017D9C  81EF               	bsf	14831,0,b	;# 
 25070  017D9E  8ED2               	bsf	16338,7,c	;# 
 25071                           
 25072                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25073  017DA0  013B               	movlb	59	; () banked
 25074  017DA2  6BFC               	clrf	252,b	;volatile
 25075                           
 25076                           ; BSR set to: 59
 25077                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25078  017DA4  0012               	return		;funcret
 25079  017DA6                     __end_of_DMA1_Initialize:
 25080                           	opt callstack 0
 25081                           
 25082 ;; *************** function _CLKREF_Initialize *****************
 25083 ;; Defined at:
 25084 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25085 ;; Parameters:    Size  Location     Type
 25086 ;;		None
 25087 ;; Auto vars:     Size  Location     Type
 25088 ;;		None
 25089 ;; Return value:  Size  Location     Type
 25090 ;;                  1  [STACK] void 
 25091 ;; Registers used:
 25092 ;;		wreg, status,2
 25093 ;; Tracked objects:
 25094 ;;		On entry : 3F/3B
 25095 ;;		On exit  : 3F/3C
 25096 ;;		Unchanged: 0/0
 25097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;Total ram usage:        0 bytes
 25103 ;; Hardware stack levels used:    1
 25104 ;; Hardware stack levels required when called:    6
 25105 ;; This function calls:
 25106 ;;		Nothing
 25107 ;; This function is called by:
 25108 ;;		_SYSTEM_Initialize
 25109 ;; This function uses a reentrant model
 25110 ;;
 25111                           
 25112                           	psect	text114
 25113  018DF6                     __ptext114:
 25114                           	opt callstack 0
 25115  018DF6                     _CLKREF_Initialize:
 25116                           	opt callstack 23
 25117                           
 25118                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25119                           
 25120                           ; BSR set to: 59
 25121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25122                           ;incstack = 0
 25123  018DF6  013C               	movlb	60	; () banked
 25124  018DF8  6BE6               	clrf	230,b	;volatile
 25125                           
 25126                           ; BSR set to: 60
 25127                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25128  018DFA  0E94               	movlw	148
 25129  018DFC  6FE5               	movwf	229,b	;volatile
 25130                           
 25131                           ; BSR set to: 60
 25132                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25133  018DFE  0012               	return		;funcret
 25134  018E00                     __end_of_CLKREF_Initialize:
 25135                           	opt callstack 0
 25136                           
 25137 ;; *************** function _ADCC_Initialize *****************
 25138 ;; Defined at:
 25139 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25140 ;; Parameters:    Size  Location     Type
 25141 ;;		None
 25142 ;; Auto vars:     Size  Location     Type
 25143 ;;		None
 25144 ;; Return value:  Size  Location     Type
 25145 ;;                  1  [STACK] void 
 25146 ;; Registers used:
 25147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25148 ;; Tracked objects:
 25149 ;;		On entry : 3F/3E
 25150 ;;		On exit  : 0/0
 25151 ;;		Unchanged: 0/0
 25152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25157 ;;Total ram usage:        0 bytes
 25158 ;; Hardware stack levels used:    1
 25159 ;; Hardware stack levels required when called:    7
 25160 ;; This function calls:
 25161 ;;		_ADCC_SetADIInterruptHandler
 25162 ;;		_ADCC_SetADTIInterruptHandler
 25163 ;; This function is called by:
 25164 ;;		_SYSTEM_Initialize
 25165 ;; This function uses a reentrant model
 25166 ;;
 25167                           
 25168                           	psect	text115
 25169  017DA6                     __ptext115:
 25170                           	opt callstack 0
 25171  017DA6                     _ADCC_Initialize:
 25172                           	opt callstack 22
 25173                           
 25174                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25175                           
 25176                           ; BSR set to: 60
 25177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25178                           ;incstack = 0
 25179  017DA6  013E               	movlb	62	; () banked
 25180  017DA8  6BDE               	clrf	222,b	;volatile
 25181                           
 25182                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25183  017DAA  6BDF               	clrf	223,b	;volatile
 25184                           
 25185                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25186  017DAC  6BE0               	clrf	224,b	;volatile
 25187                           
 25188                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25189  017DAE  6BE1               	clrf	225,b	;volatile
 25190                           
 25191                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25192  017DB0  6BE4               	clrf	228,b	;volatile
 25193                           
 25194                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25195  017DB2  6BE5               	clrf	229,b	;volatile
 25196                           
 25197                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25198  017DB4  6BEA               	clrf	234,b	;volatile
 25199                           
 25200                           ; BSR set to: 62
 25201                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25202  017DB6  0E40               	movlw	64
 25203  017DB8  6FEC               	movwf	236,b	;volatile
 25204                           
 25205                           ; BSR set to: 62
 25206                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25207  017DBA  6BF1               	clrf	241,b	;volatile
 25208                           
 25209                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25210  017DBC  0E20               	movlw	32
 25211  017DBE  6FF3               	movwf	243,b	;volatile
 25212                           
 25213                           ; BSR set to: 62
 25214                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25215  017DC0  6BF4               	clrf	244,b	;volatile
 25216                           
 25217                           ; BSR set to: 62
 25218                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25219  017DC2  6BF5               	clrf	245,b	;volatile
 25220                           
 25221                           ; BSR set to: 62
 25222                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25223  017DC4  6BF6               	clrf	246,b	;volatile
 25224                           
 25225                           ; BSR set to: 62
 25226                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25227  017DC6  6BF7               	clrf	247,b	;volatile
 25228                           
 25229                           ; BSR set to: 62
 25230                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25231  017DC8  6BF9               	clrf	249,b	;volatile
 25232                           
 25233                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25234  017DCA  0E5B               	movlw	91
 25235  017DCC  6FFA               	movwf	250,b	;volatile
 25236                           
 25237                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25238  017DCE  0E27               	movlw	39
 25239  017DD0  6FFB               	movwf	251,b	;volatile
 25240                           
 25241                           ; BSR set to: 62
 25242                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25243  017DD2  6BFC               	clrf	252,b	;volatile
 25244                           
 25245                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25246  017DD4  0E02               	movlw	2
 25247  017DD6  6FFD               	movwf	253,b	;volatile
 25248                           
 25249                           ; BSR set to: 62
 25250                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25251  017DD8  6BFE               	clrf	254,b	;volatile
 25252                           
 25253                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25254  017DDA  0E07               	movlw	7
 25255  017DDC  6FFF               	movwf	255,b	;volatile
 25256                           
 25257                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25258  017DDE  0E84               	movlw	132
 25259  017DE0  6FF8               	movwf	248,b	;volatile
 25260                           
 25261                           ; BSR set to: 62
 25262                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25263  017DE2  0139               	movlb	57	; () banked
 25264  017DE4  95A1               	bcf	161,2,b	;volatile
 25265                           
 25266                           ; BSR set to: 57
 25267                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25268  017DE6  8591               	bsf	145,2,b	;volatile
 25269                           
 25270                           ; BSR set to: 57
 25271                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25272  017DE8  0E66               	movlw	low _ADCC_DefaultInterruptHandler
 25273  017DEA  6EE6               	movwf	postinc1,c
 25274  017DEC  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 25275  017DEE  6EE6               	movwf	postinc1,c
 25276  017DF0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25277  017DF2  6EE6               	movwf	postinc1,c
 25278  017DF4  EC09  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25279                           
 25280                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25281  017DF8  0139               	movlb	57	; () banked
 25282  017DFA  97A1               	bcf	161,3,b	;volatile
 25283                           
 25284                           ; BSR set to: 57
 25285                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25286  017DFC  8791               	bsf	145,3,b	;volatile
 25287                           
 25288                           ; BSR set to: 57
 25289                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25290  017DFE  0E66               	movlw	low _ADCC_DefaultInterruptHandler
 25291  017E00  6EE6               	movwf	postinc1,c
 25292  017E02  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 25293  017E04  6EE6               	movwf	postinc1,c
 25294  017E06  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25295  017E08  6EE6               	movwf	postinc1,c
 25296  017E0A  ECF5  F0C4         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25297                           
 25298                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25299  017E0E  0012               	return		;funcret
 25300  017E10                     __end_of_ADCC_Initialize:
 25301                           	opt callstack 0
 25302                           
 25303 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25304 ;; Defined at:
 25305 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25306 ;; Parameters:    Size  Location     Type
 25307 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25308 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25309 ;; Auto vars:     Size  Location     Type
 25310 ;;		None
 25311 ;; Return value:  Size  Location     Type
 25312 ;;                  1  [STACK] void 
 25313 ;; Registers used:
 25314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25315 ;; Tracked objects:
 25316 ;;		On entry : 0/0
 25317 ;;		On exit  : 0/0
 25318 ;;		Unchanged: 0/0
 25319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25324 ;;Total ram usage:        0 bytes
 25325 ;; Hardware stack levels used:    1
 25326 ;; Hardware stack levels required when called:    6
 25327 ;; This function calls:
 25328 ;;		Nothing
 25329 ;; This function is called by:
 25330 ;;		_ADCC_Initialize
 25331 ;;		_start_adc_scan
 25332 ;; This function uses a reentrant model
 25333 ;;
 25334                           
 25335                           	psect	text116
 25336  0189EA                     __ptext116:
 25337                           	opt callstack 0
 25338  0189EA                     _ADCC_SetADTIInterruptHandler:
 25339                           	opt callstack 23
 25340                           
 25341                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25342                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25343                           
 25344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25345                           ;incstack = 0
 25346  0189EA  50E1               	movf	fsr1l,w,c
 25347  0189EC  0FFD               	addlw	-3
 25348  0189EE  6ED9               	movwf	fsr2l,c
 25349  0189F0  50E2               	movf	fsr1h,w,c
 25350  0189F2  6EDA               	movwf	fsr2h,c
 25351  0189F4  0EFF               	movlw	255
 25352  0189F6  22DA               	addwfc	fsr2h,f,c
 25353  0189F8  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25354  0189FE  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25355  018A04  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25356                           
 25357                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25358  018A0A  52E5               	movf	postdec1,f,c
 25359  018A0C  52E5               	movf	postdec1,f,c
 25360  018A0E  52E5               	movf	postdec1,f,c
 25361  018A10  0012               	return		;funcret
 25362  018A12                     __end_of_ADCC_SetADTIInterruptHandler:
 25363                           	opt callstack 0
 25364                           
 25365 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25366 ;; Defined at:
 25367 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25368 ;; Parameters:    Size  Location     Type
 25369 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25370 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25371 ;; Auto vars:     Size  Location     Type
 25372 ;;		None
 25373 ;; Return value:  Size  Location     Type
 25374 ;;                  1  [STACK] void 
 25375 ;; Registers used:
 25376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25377 ;; Tracked objects:
 25378 ;;		On entry : 6/0
 25379 ;;		On exit  : 0/0
 25380 ;;		Unchanged: 0/0
 25381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25386 ;;Total ram usage:        0 bytes
 25387 ;; Hardware stack levels used:    1
 25388 ;; Hardware stack levels required when called:    6
 25389 ;; This function calls:
 25390 ;;		Nothing
 25391 ;; This function is called by:
 25392 ;;		_ADCC_Initialize
 25393 ;;		_start_adc_scan
 25394 ;; This function uses a reentrant model
 25395 ;;
 25396                           
 25397                           	psect	text117
 25398  018A12                     __ptext117:
 25399                           	opt callstack 0
 25400  018A12                     _ADCC_SetADIInterruptHandler:
 25401                           	opt callstack 23
 25402                           
 25403                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25404                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25405                           
 25406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25407                           ;incstack = 0
 25408  018A12  50E1               	movf	fsr1l,w,c
 25409  018A14  0FFD               	addlw	-3
 25410  018A16  6ED9               	movwf	fsr2l,c
 25411  018A18  50E2               	movf	fsr1h,w,c
 25412  018A1A  6EDA               	movwf	fsr2h,c
 25413  018A1C  0EFF               	movlw	255
 25414  018A1E  22DA               	addwfc	fsr2h,f,c
 25415  018A20  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25416  018A26  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25417  018A2C  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25418                           
 25419                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25420  018A32  52E5               	movf	postdec1,f,c
 25421  018A34  52E5               	movf	postdec1,f,c
 25422  018A36  52E5               	movf	postdec1,f,c
 25423  018A38  0012               	return		;funcret
 25424  018A3A                     __end_of_ADCC_SetADIInterruptHandler:
 25425                           	opt callstack 0
 25426                           
 25427 ;; *************** function _INT1_ISR *****************
 25428 ;; Defined at:
 25429 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 25430 ;; Parameters:    Size  Location     Type
 25431 ;;		None
 25432 ;; Auto vars:     Size  Location     Type
 25433 ;;		None
 25434 ;; Return value:  Size  Location     Type
 25435 ;;                  1    wreg      void 
 25436 ;; Registers used:
 25437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25438 ;; Tracked objects:
 25439 ;;		On entry : 0/0
 25440 ;;		On exit  : 0/0
 25441 ;;		Unchanged: 0/0
 25442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25447 ;;Total ram usage:        4 bytes
 25448 ;; Hardware stack levels used:    1
 25449 ;; Hardware stack levels required when called:    5
 25450 ;; This function calls:
 25451 ;;		_INT1_CallBack
 25452 ;; This function is called by:
 25453 ;;		Interrupt level 1
 25454 ;; This function uses a non-reentrant model
 25455 ;;
 25456                           
 25457                           	psect	text118
 25458  0184E8                     __ptext118:
 25459                           	opt callstack 0
 25460  0184E8                     _INT1_ISR:
 25461                           	opt callstack 12
 25462                           
 25463                           ;incstack = 0
 25464  0184E8  006F FF60  F0F6    	movff	status,??_INT1_ISR
 25465  0184EE  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 25466  0184F4  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 25467  0184FA  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 25468  018500  EE16  F000         	lfsr	1,___intlo_sp
 25469                           
 25470                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25471  018504  0139               	movlb	57	; () banked
 25472  018506  91A5               	bcf	165,0,b	;volatile
 25473                           
 25474                           ; BSR set to: 57
 25475                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25476  018508  ECC9  F0C5         	call	_INT1_CallBack	;wreg free
 25477  01850C  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 25478  018512  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 25479  018518  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 25480  01851E  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 25481  018524  0011               	retfie		f
 25482  018526                     __end_of_INT1_ISR:
 25483                           	opt callstack 0
 25484                           
 25485 ;; *************** function _INT1_CallBack *****************
 25486 ;; Defined at:
 25487 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25488 ;; Parameters:    Size  Location     Type
 25489 ;;		None
 25490 ;; Auto vars:     Size  Location     Type
 25491 ;;		None
 25492 ;; Return value:  Size  Location     Type
 25493 ;;                  1  [STACK] void 
 25494 ;; Registers used:
 25495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25496 ;; Tracked objects:
 25497 ;;		On entry : 3F/39
 25498 ;;		On exit  : 0/0
 25499 ;;		Unchanged: 0/0
 25500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25505 ;;Total ram usage:        0 bytes
 25506 ;; Hardware stack levels used:    1
 25507 ;; Hardware stack levels required when called:    4
 25508 ;; This function calls:
 25509 ;;		Absolute function
 25510 ;;		_INT1_DefaultInterruptHandler
 25511 ;;		_switch_handler
 25512 ;; This function is called by:
 25513 ;;		_INT1_ISR
 25514 ;; This function uses a reentrant model
 25515 ;;
 25516                           
 25517                           	psect	text119
 25518  018B92                     __ptext119:
 25519                           	opt callstack 0
 25520  018B92                     _INT1_CallBack:
 25521                           	opt callstack 12
 25522                           
 25523                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25524                           
 25525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25526                           ;incstack = 0
 25527  018B92  5013               	movf	_INT1_InterruptHandler^0,w,c
 25528  018B94  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25529  018B96  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25530  018B98  B4D8               	btfsc	status,2,c
 25531  018B9A  0012               	return	
 25532                           
 25533                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25534  018B9C  D801               	call	u850_28
 25535  018B9E  0012               	return	
 25536  018BA0                     u850_28:
 25537  018BA0  0005               	push	
 25538  018BA2  6EFA               	movwf	pclath,c
 25539  018BA4  5013               	movf	_INT1_InterruptHandler^0,w,c
 25540  018BA6  6EFD               	movwf	tosl,c
 25541  018BA8  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25542  018BAA  6EFE               	movwf	tosh,c
 25543  018BAC  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25544  018BAE  6EFF               	movwf	tosu,c
 25545  018BB0  50FA               	movf	pclath,w,c
 25546  018BB2  0012               	return		;indir
 25547  018BB4                     __end_of_INT1_CallBack:
 25548                           	opt callstack 0
 25549                           
 25550 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25551 ;; Defined at:
 25552 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25553 ;; Parameters:    Size  Location     Type
 25554 ;;		None
 25555 ;; Auto vars:     Size  Location     Type
 25556 ;;		None
 25557 ;; Return value:  Size  Location     Type
 25558 ;;                  1  [STACK] void 
 25559 ;; Registers used:
 25560 ;;		None
 25561 ;; Tracked objects:
 25562 ;;		On entry : 0/39
 25563 ;;		On exit  : 0/0
 25564 ;;		Unchanged: 0/0
 25565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25570 ;;Total ram usage:        0 bytes
 25571 ;; Hardware stack levels used:    1
 25572 ;; Hardware stack levels required when called:    3
 25573 ;; This function calls:
 25574 ;;		Nothing
 25575 ;; This function is called by:
 25576 ;;		_EXT_INT_Initialize
 25577 ;;		_INT1_CallBack
 25578 ;; This function uses a reentrant model
 25579 ;;
 25580                           
 25581                           	psect	text120
 25582  018E62                     __ptext120:
 25583                           	opt callstack 0
 25584  018E62                     _INT1_DefaultInterruptHandler:
 25585                           	opt callstack 12
 25586                           
 25587                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25588                           
 25589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25590                           ;incstack = 0
 25591  018E62  0012               	return		;funcret
 25592  018E64                     __end_of_INT1_DefaultInterruptHandler:
 25593                           	opt callstack 0
 25594                           
 25595 ;; *************** function _switch_handler *****************
 25596 ;; Defined at:
 25597 ;;		line 58 in file "dio.c"
 25598 ;; Parameters:    Size  Location     Type
 25599 ;;		None
 25600 ;; Auto vars:     Size  Location     Type
 25601 ;;  i               1  [STACK] unsigned char 
 25602 ;;  sw_value        1  [STACK] unsigned char 
 25603 ;; Return value:  Size  Location     Type
 25604 ;;                  1  [STACK] void 
 25605 ;; Registers used:
 25606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25607 ;; Tracked objects:
 25608 ;;		On entry : 0/39
 25609 ;;		On exit  : 0/0
 25610 ;;		Unchanged: 0/0
 25611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25616 ;;Total ram usage:        0 bytes
 25617 ;; Hardware stack levels used:    1
 25618 ;; Hardware stack levels required when called:    3
 25619 ;; This function calls:
 25620 ;;		Nothing
 25621 ;; This function is called by:
 25622 ;;		_start_switch_handler
 25623 ;;		_INT1_CallBack
 25624 ;; This function uses a reentrant model
 25625 ;;
 25626                           
 25627                           	psect	text121
 25628  01687E                     __ptext121:
 25629                           	opt callstack 0
 25630  01687E                     _switch_handler:
 25631                           	opt callstack 0
 25632                           
 25633                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25634  01687E  52E6               	movf	postinc1,f,c
 25635  016880  52E6               	movf	postinc1,f,c
 25636                           
 25637                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 25638                           ;stkvar	_i @ sp[(-2)+0]
 25639                           
 25640                           ;incstack = 0
 25641  016882  0EFE               	movlw	-2
 25642  016884  6AE3               	clrf	plusw1,c
 25643  016886  9EBD               	bcf	189,7,c	;volatile
 25644  016888  82BE               	bsf	190,1,c	;volatile
 25645                           
 25646                           ;dio.c: 72:  __nop();
 25647  01688A  F000               	nop	
 25648                           
 25649                           ;dio.c: 73:  __nop();
 25650  01688C  F000               	nop	
 25651                           
 25652                           ;dio.c: 74:  __nop();
 25653  01688E  F000               	nop	
 25654  016890  D019               	goto	l8924
 25655  016892                     l8912:
 25656                           
 25657                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 25658  016892  A6CF               	btfss	207,3,c	;volatile
 25659  016894  D011               	goto	u836_20
 25660  016896  D00D               	goto	u836_21
 25661  016898                     u833_28:
 25662                           
 25663                           ;stkvar	_sw_value @ sp[(-2)+1]
 25664  016898  0EFF               	movlw	-1
 25665  01689A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25666                           
 25667                           ;dio.c: 80:    break;
 25668  0168A0  D027               	goto	l8926
 25669  0168A2                     l8914:
 25670                           
 25671                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 25672  0168A2  A4CF               	btfss	207,2,c	;volatile
 25673  0168A4  D009               	goto	u836_20
 25674  0168A6  D005               	goto	u836_21
 25675  0168A8                     l8916:
 25676                           
 25677                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 25678  0168A8  A2CF               	btfss	207,1,c	;volatile
 25679  0168AA  D006               	goto	u836_20
 25680  0168AC  D002               	goto	u836_21
 25681  0168AE                     l8918:
 25682                           
 25683                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 25684  0168AE  A0CF               	btfss	207,0,c	;volatile
 25685  0168B0  D003               	goto	u836_20
 25686  0168B2                     u836_21:
 25687  0168B2  6A3D               	clrf	(btemp+11)^0,c
 25688  0168B4  2A3D               	incf	(btemp+11)^0,f,c
 25689  0168B6  D7F0               	goto	u833_28
 25690  0168B8                     u836_20:
 25691  0168B8  6A3D               	clrf	(btemp+11)^0,c
 25692  0168BA  D7EE               	goto	u833_28
 25693  0168BC                     l8920:
 25694                           
 25695                           ;dio.c: 91:    sw_value = 1;
 25696                           ;stkvar	_sw_value @ sp[(-2)+1]
 25697  0168BC  0EFF               	movlw	-1
 25698  0168BE  6AE3               	clrf	plusw1,c
 25699  0168C0  2AE3               	incf	plusw1,f,c
 25700                           
 25701                           ;dio.c: 92:    break;
 25702  0168C2  D016               	goto	l8926
 25703  0168C4                     l8924:
 25704                           
 25705                           ;stkvar	_i @ sp[(-2)+0]
 25706  0168C4  0EFE               	movlw	-2
 25707  0168C6  50E3               	movf	plusw1,w,c
 25708  0168C8  6E3C               	movwf	(btemp+10)^0,c
 25709  0168CA  6A3D               	clrf	(btemp+11)^0,c
 25710                           
 25711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25712                           ; Switch size 1, requested type "simple"
 25713                           ; Number of cases is 1, Range of values is 0 to 0
 25714                           ; switch strategies available:
 25715                           ; Name         Instructions Cycles
 25716                           ; simple_byte            4     3 (average)
 25717                           ;	Chosen strategy is simple_byte
 25718  0168CC  503D               	movf	(btemp+11)^0,w,c
 25719  0168CE  0A00               	xorlw	0	; case 0
 25720  0168D0  A4D8               	btfss	status,2,c
 25721  0168D2  D7F4               	goto	l8920
 25722                           
 25723                           ; Switch size 1, requested type "simple"
 25724                           ; Number of cases is 4, Range of values is 0 to 3
 25725                           ; switch strategies available:
 25726                           ; Name         Instructions Cycles
 25727                           ; simple_byte           13     7 (average)
 25728                           ;	Chosen strategy is simple_byte
 25729  0168D4  503C               	movf	(btemp+10)^0,w,c
 25730  0168D6  0A00               	xorlw	0	; case 0
 25731  0168D8  B4D8               	btfsc	status,2,c
 25732  0168DA  D7E9               	goto	l8918
 25733  0168DC  0A01               	xorlw	1	; case 1
 25734  0168DE  B4D8               	btfsc	status,2,c
 25735  0168E0  D7E3               	goto	l8916
 25736  0168E2  0A03               	xorlw	3	; case 2
 25737  0168E4  B4D8               	btfsc	status,2,c
 25738  0168E6  D7DD               	goto	l8914
 25739  0168E8  0A01               	xorlw	1	; case 3
 25740  0168EA  B4D8               	btfsc	status,2,c
 25741  0168EC  D7D2               	goto	l8912
 25742  0168EE  D7E6               	goto	l8920
 25743  0168F0                     l8926:
 25744                           
 25745                           ;dio.c: 96:   if (sw_value) {
 25746                           ;stkvar	_sw_value @ sp[(-2)+1]
 25747  0168F0  0EFF               	movlw	-1
 25748  0168F2  50E3               	movf	plusw1,w,c
 25749  0168F4  B4D8               	btfsc	status,2,c
 25750  0168F6  D014               	goto	l8932
 25751                           
 25752                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 25753                           ;stkvar	_i @ sp[(-2)+0]
 25754  0168F8  0EFE               	movlw	-2
 25755  0168FA  50E3               	movf	plusw1,w,c
 25756  0168FC  0D05               	mullw	5
 25757  0168FE  50F3               	movf	243,w,c
 25758  016900  0F60               	addlw	low _S
 25759  016902  6ED9               	movwf	fsr2l,c
 25760  016904  6ADA               	clrf	fsr2h,c
 25761  016906  04DE               	decf	postinc2,w,c
 25762  016908  A4D8               	btfss	status,2,c
 25763  01690A  D041               	goto	l8940
 25764                           
 25765                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 25766                           ;stkvar	_i @ sp[(-2)+0]
 25767  01690C  0EFE               	movlw	-2
 25768  01690E  50E3               	movf	plusw1,w,c
 25769  016910  0D05               	mullw	5
 25770  016912  50F3               	movf	243,w,c
 25771  016914  0F60               	addlw	low _S
 25772  016916  6ED9               	movwf	fsr2l,c
 25773  016918  6ADA               	clrf	fsr2h,c
 25774  01691A  0E00               	movlw	0
 25775  01691C  6EDF               	movwf	indf2,c
 25776  01691E  D037               	goto	l8940
 25777  016920                     l8932:
 25778                           
 25779                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 25780                           ;stkvar	_i @ sp[(-2)+0]
 25781  016920  0EFE               	movlw	-2
 25782  016922  50E3               	movf	plusw1,w,c
 25783  016924  0D05               	mullw	5
 25784  016926  50F3               	movf	243,w,c
 25785  016928  0F60               	addlw	low _S
 25786  01692A  6ED9               	movwf	fsr2l,c
 25787  01692C  6ADA               	clrf	fsr2h,c
 25788  01692E  50DF               	movf	indf2,w,c
 25789  016930  A4D8               	btfss	status,2,c
 25790  016932  D02D               	goto	l8940
 25791                           
 25792                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 25793                           ;stkvar	_i @ sp[(-2)+0]
 25794  016934  0EFE               	movlw	-2
 25795  016936  50E3               	movf	plusw1,w,c
 25796  016938  0D05               	mullw	5
 25797  01693A  50F3               	movf	243,w,c
 25798  01693C  0F60               	addlw	low _S
 25799  01693E  6ED9               	movwf	fsr2l,c
 25800  016940  6ADA               	clrf	fsr2h,c
 25801  016942  0E01               	movlw	1
 25802  016944  6EDF               	movwf	indf2,c
 25803                           
 25804                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 25805  016946  EE20  F2B8         	lfsr	2,_V+184	;volatile
 25806                           
 25807                           ;stkvar	_i @ sp[(-2)+0]
 25808  01694A  0EFE               	movlw	-2
 25809  01694C  50E3               	movf	plusw1,w,c
 25810  01694E  0D05               	mullw	5
 25811  016950  50F3               	movf	243,w,c
 25812  016952  0F61               	addlw	low (_S+1)
 25813  016954  6EE9               	movwf	fsr0l,c
 25814  016956  6AEA               	clrf	fsr0h,c
 25815  016958  006F FF7B FFEE     	movff	postinc2,postinc0
 25816  01695E  006F FF7B FFEE     	movff	postinc2,postinc0
 25817  016964  006F FF7B FFEE     	movff	postinc2,postinc0
 25818  01696A  006F FF7B FFEE     	movff	postinc2,postinc0
 25819                           
 25820                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 25821                           ;stkvar	_i @ sp[(-2)+0]
 25822  016970  0EFE               	movlw	-2
 25823  016972  006F FF8C  F03D    	movff	plusw1,btemp+11
 25824  016978  0E01               	movlw	1
 25825  01697A  6E3C               	movwf	(btemp+10)^0,c
 25826  01697C  2A3D               	incf	(btemp+11)^0,f,c
 25827  01697E  D002               	goto	u840_24
 25828  016980                     u840_25:
 25829  016980  90D8               	bcf	status,0,c
 25830  016982  363C               	rlcf	(btemp+10)^0,f,c
 25831  016984                     u840_24:
 25832  016984  2E3D               	decfsz	(btemp+11)^0,f,c
 25833  016986  D7FC               	goto	u840_25
 25834  016988  503C               	movf	(btemp+10)^0,w,c
 25835  01698A  0100               	movlb	0	; () banked
 25836  01698C  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 25837  01698E                     l8940:
 25838                           
 25839                           ;dio.c: 107:  } while (++i < 4);
 25840                           ;stkvar	_i @ sp[(-2)+0]
 25841  01698E  0EFE               	movlw	-2
 25842  016990  2AE3               	incf	plusw1,f,c
 25843  016992  0EFE               	movlw	-2
 25844  016994  006F FF8C  F032    	movff	plusw1,btemp
 25845  01699A  0E03               	movlw	3
 25846  01699C  6432               	cpfsgt	btemp^0,c
 25847  01699E  D792               	goto	l8924
 25848                           
 25849                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 25850  0169A0  92BE               	bcf	190,1,c	;volatile
 25851  0169A2  A4BE               	btfss	190,2,c	;volatile
 25852  0169A4  D002               	goto	u842_20
 25853  0169A6  0E01               	movlw	1
 25854  0169A8  D001               	goto	u842_26
 25855  0169AA                     u842_20:
 25856  0169AA  0E00               	movlw	0
 25857  0169AC                     u842_26:
 25858  0169AC  0AFF               	xorlw	255
 25859  0169AE  6E3D               	movwf	(btemp+11)^0,c
 25860  0169B0  463D               	rlncf	(btemp+11)^0,f,c
 25861  0169B2  463D               	rlncf	(btemp+11)^0,f,c
 25862  0169B4  50BE               	movf	190,w,c	;volatile
 25863  0169B6  183D               	xorwf	(btemp+11)^0,w,c
 25864  0169B8  0BFB               	andlw	-5
 25865  0169BA  183D               	xorwf	(btemp+11)^0,w,c
 25866  0169BC  6EBE               	movwf	190,c	;volatile
 25867  0169BE  8EBD               	bsf	189,7,c	;volatile
 25868                           
 25869                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25870  0169C0  52E5               	movf	postdec1,f,c
 25871  0169C2  52E5               	movf	postdec1,f,c
 25872  0169C4  0012               	return		;funcret
 25873  0169C6                     __end_of_switch_handler:
 25874                           	opt callstack 0
 25875                           
 25876 ;; *************** function _TMR5_ISR *****************
 25877 ;; Defined at:
 25878 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25879 ;; Parameters:    Size  Location     Type
 25880 ;;		None
 25881 ;; Auto vars:     Size  Location     Type
 25882 ;;		None
 25883 ;; Return value:  Size  Location     Type
 25884 ;;                  1    wreg      void 
 25885 ;; Registers used:
 25886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25887 ;; Tracked objects:
 25888 ;;		On entry : 0/0
 25889 ;;		On exit  : 0/0
 25890 ;;		Unchanged: 0/0
 25891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25894 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25895 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25896 ;;Total ram usage:        4 bytes
 25897 ;; Hardware stack levels used:    1
 25898 ;; Hardware stack levels required when called:    5
 25899 ;; This function calls:
 25900 ;;		_TMR5_CallBack
 25901 ;;		_TMR5_WriteTimer
 25902 ;; This function is called by:
 25903 ;;		Interrupt level 1
 25904 ;; This function uses a non-reentrant model
 25905 ;;
 25906                           
 25907                           	psect	text122
 25908  0180C8                     __ptext122:
 25909                           	opt callstack 0
 25910  0180C8                     _TMR5_ISR:
 25911                           	opt callstack 12
 25912                           
 25913                           ;incstack = 0
 25914  0180C8  006F FF60  F1ED    	movff	status,??_TMR5_ISR+2
 25915  0180CE  0060  F0F4  F1EE   	movff	btemp+11,??_TMR5_ISR+3
 25916  0180D4  EE16  F000         	lfsr	1,___intlo_sp
 25917                           
 25918                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25919  0180D8  0139               	movlb	57	; () banked
 25920  0180DA  9DA8               	bcf	168,6,b	;volatile
 25921                           
 25922                           ; BSR set to: 57
 25923                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25924  0180DC  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 25925  0180E2  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25926  0180E8  EC54  F0C2         	call	_TMR5_WriteTimer	;wreg free
 25927                           
 25928                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25929  0180EC  0102               	movlb	2	; () banked
 25930  0180EE  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25931  0180F0  0101               	movlb	1	; () banked
 25932  0180F2  6FEB               	movwf	??_TMR5_ISR& (0+255),b
 25933  0180F4  6BEC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25934  0180F6  0E05               	movlw	5
 25935  0180F8  27EB               	addwf	??_TMR5_ISR& (0+255),f,b
 25936  0180FA  0E00               	movlw	0
 25937  0180FC  23EC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25938  0180FE  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25939  018100  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25940  018102  51EB               	movf	??_TMR5_ISR& (0+255),w,b
 25941  018104  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25942  018106  51EC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25943  018108  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25944  01810A  A0D8               	btfss	status,0,c
 25945  01810C  D004               	goto	i1l1045
 25946                           
 25947                           ; BSR set to: 1
 25948                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25949  01810E  ECA5  F0C5         	call	_TMR5_CallBack	;wreg free
 25950                           
 25951                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25952  018112  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25953  018114  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25954  018116                     i1l1045:
 25955  018116  0060  F7B8  F03D   	movff	??_TMR5_ISR+3,btemp+11
 25956  01811C  0060  F7B7  FFD8   	movff	??_TMR5_ISR+2,status
 25957  018122  0011               	retfie		f
 25958  018124                     __end_of_TMR5_ISR:
 25959                           	opt callstack 0
 25960                           
 25961 ;; *************** function _TMR5_WriteTimer *****************
 25962 ;; Defined at:
 25963 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25964 ;; Parameters:    Size  Location     Type
 25965 ;;  timerVal        2  [STACK] unsigned short 
 25966 ;; Auto vars:     Size  Location     Type
 25967 ;;		None
 25968 ;; Return value:  Size  Location     Type
 25969 ;;                  1  [STACK] void 
 25970 ;; Registers used:
 25971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25972 ;; Tracked objects:
 25973 ;;		On entry : 3F/39
 25974 ;;		On exit  : 0/0
 25975 ;;		Unchanged: 0/0
 25976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25981 ;;Total ram usage:        0 bytes
 25982 ;; Hardware stack levels used:    1
 25983 ;; Hardware stack levels required when called:    3
 25984 ;; This function calls:
 25985 ;;		Nothing
 25986 ;; This function is called by:
 25987 ;;		_TMR5_ISR
 25988 ;; This function uses a reentrant model
 25989 ;;
 25990                           
 25991                           	psect	text123
 25992  0184A8                     __ptext123:
 25993                           	opt callstack 0
 25994  0184A8                     _TMR5_WriteTimer:
 25995                           	opt callstack 13
 25996                           
 25997                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25998                           
 25999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26000                           ;incstack = 0
 26001  0184A8  A49A               	btfss	154,2,c	;volatile
 26002  0184AA  D00F               	goto	l9060
 26003                           
 26004                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26005  0184AC  909A               	bcf	154,0,c	;volatile
 26006                           
 26007                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26008                           ;stkvar	_timerVal @ sp[(0)+-2]
 26009  0184AE  0EFF               	movlw	255
 26010  0184B0  24E1               	addwf	fsr1l,w,c
 26011  0184B2  6ED9               	movwf	fsr2l,c
 26012  0184B4  0EFF               	movlw	255
 26013  0184B6  20E2               	addwfc	fsr1h,w,c
 26014  0184B8  6EDA               	movwf	fsr2h,c
 26015  0184BA  50DF               	movf	indf2,w,c
 26016  0184BC  6E99               	movwf	153,c	;volatile
 26017                           
 26018                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26019                           ;stkvar	_timerVal @ sp[(0)+-2]
 26020  0184BE  0EFE               	movlw	-2
 26021  0184C0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26022                           
 26023                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26024  0184C6  809A               	bsf	154,0,c	;volatile
 26025                           
 26026                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26027  0184C8  D00C               	goto	l1028
 26028  0184CA                     l9060:
 26029                           
 26030                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26031                           ;stkvar	_timerVal @ sp[(0)+-2]
 26032  0184CA  0EFF               	movlw	255
 26033  0184CC  24E1               	addwf	fsr1l,w,c
 26034  0184CE  6ED9               	movwf	fsr2l,c
 26035  0184D0  0EFF               	movlw	255
 26036  0184D2  20E2               	addwfc	fsr1h,w,c
 26037  0184D4  6EDA               	movwf	fsr2h,c
 26038  0184D6  50DF               	movf	indf2,w,c
 26039  0184D8  6E99               	movwf	153,c	;volatile
 26040                           
 26041                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26042                           ;stkvar	_timerVal @ sp[(0)+-2]
 26043  0184DA  0EFE               	movlw	-2
 26044  0184DC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26045  0184E2                     l1028:
 26046                           
 26047                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26048  0184E2  52E5               	movf	postdec1,f,c
 26049  0184E4  52E5               	movf	postdec1,f,c
 26050  0184E6  0012               	return		;funcret
 26051  0184E8                     __end_of_TMR5_WriteTimer:
 26052                           	opt callstack 0
 26053                           
 26054 ;; *************** function _TMR5_CallBack *****************
 26055 ;; Defined at:
 26056 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26057 ;; Parameters:    Size  Location     Type
 26058 ;;		None
 26059 ;; Auto vars:     Size  Location     Type
 26060 ;;		None
 26061 ;; Return value:  Size  Location     Type
 26062 ;;                  1  [STACK] void 
 26063 ;; Registers used:
 26064 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26065 ;; Tracked objects:
 26066 ;;		On entry : 3F/1
 26067 ;;		On exit  : 0/0
 26068 ;;		Unchanged: 0/0
 26069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26074 ;;Total ram usage:        0 bytes
 26075 ;; Hardware stack levels used:    1
 26076 ;; Hardware stack levels required when called:    4
 26077 ;; This function calls:
 26078 ;;		Absolute function
 26079 ;;		_TMR5_DefaultInterruptHandler
 26080 ;; This function is called by:
 26081 ;;		_TMR5_ISR
 26082 ;; This function uses a reentrant model
 26083 ;;
 26084                           
 26085                           	psect	text124
 26086  018B4A                     __ptext124:
 26087                           	opt callstack 0
 26088  018B4A                     _TMR5_CallBack:
 26089                           	opt callstack 12
 26090                           
 26091                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26092                           
 26093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26094                           ;incstack = 0
 26095  018B4A  0100               	movlb	0	; () banked
 26096  018B4C  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26097  018B4E  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26098  018B50  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26099  018B52  B4D8               	btfsc	status,2,c
 26100  018B54  0012               	return	
 26101                           
 26102                           ; BSR set to: 0
 26103                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26104  018B56  D801               	call	u861_28
 26105  018B58  0012               	return	
 26106  018B5A                     u861_28:
 26107  018B5A  0005               	push	
 26108  018B5C  6EFA               	movwf	pclath,c
 26109  018B5E  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26110  018B60  6EFD               	movwf	tosl,c
 26111  018B62  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26112  018B64  6EFE               	movwf	tosh,c
 26113  018B66  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26114  018B68  6EFF               	movwf	tosu,c
 26115  018B6A  50FA               	movf	pclath,w,c
 26116  018B6C  0012               	return		;indir
 26117  018B6E                     __end_of_TMR5_CallBack:
 26118                           	opt callstack 0
 26119                           
 26120 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26121 ;; Defined at:
 26122 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26123 ;; Parameters:    Size  Location     Type
 26124 ;;		None
 26125 ;; Auto vars:     Size  Location     Type
 26126 ;;		None
 26127 ;; Return value:  Size  Location     Type
 26128 ;;                  1  [STACK] void 
 26129 ;; Registers used:
 26130 ;;		wreg, status,2, status,0, btemp+11
 26131 ;; Tracked objects:
 26132 ;;		On entry : 3F/0
 26133 ;;		On exit  : 3F/2
 26134 ;;		Unchanged: 0/0
 26135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26140 ;;Total ram usage:        0 bytes
 26141 ;; Hardware stack levels used:    1
 26142 ;; Hardware stack levels required when called:    3
 26143 ;; This function calls:
 26144 ;;		Nothing
 26145 ;; This function is called by:
 26146 ;;		_TMR5_Initialize
 26147 ;;		_TMR5_CallBack
 26148 ;; This function uses a reentrant model
 26149 ;;
 26150                           
 26151                           	psect	text125
 26152  018A3A                     __ptext125:
 26153                           	opt callstack 0
 26154  018A3A                     _TMR5_DefaultInterruptHandler:
 26155                           	opt callstack 12
 26156                           
 26157                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26158                           
 26159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26160                           ;incstack = 0
 26161  018A3A  A0BE               	btfss	190,0,c	;volatile
 26162  018A3C  D002               	goto	u811_20
 26163  018A3E  0E01               	movlw	1
 26164  018A40  D001               	goto	u811_26
 26165  018A42                     u811_20:
 26166  018A42  0E00               	movlw	0
 26167  018A44                     u811_26:
 26168  018A44  0AFF               	xorlw	255
 26169  018A46  6E3D               	movwf	(btemp+11)^0,c
 26170  018A48  50BE               	movf	190,w,c	;volatile
 26171  018A4A  183D               	xorwf	(btemp+11)^0,w,c
 26172  018A4C  0BFE               	andlw	-2
 26173  018A4E  183D               	xorwf	(btemp+11)^0,w,c
 26174  018A50  6EBE               	movwf	190,c	;volatile
 26175                           
 26176                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26177  018A52  0E01               	movlw	1
 26178  018A54  0102               	movlb	2	; () banked
 26179  018A56  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26180  018A58  0E00               	movlw	0
 26181  018A5A  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26182  018A5C  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26183  018A5E  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26184                           
 26185                           ; BSR set to: 2
 26186                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26187  018A60  0012               	return		;funcret
 26188  018A62                     __end_of_TMR5_DefaultInterruptHandler:
 26189                           	opt callstack 0
 26190                           
 26191 ;; *************** function _INT0_ISR *****************
 26192 ;; Defined at:
 26193 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 26194 ;; Parameters:    Size  Location     Type
 26195 ;;		None
 26196 ;; Auto vars:     Size  Location     Type
 26197 ;;		None
 26198 ;; Return value:  Size  Location     Type
 26199 ;;                  1    wreg      void 
 26200 ;; Registers used:
 26201 ;;		wreg, status,2, status,0, pclath, tosl
 26202 ;; Tracked objects:
 26203 ;;		On entry : 0/0
 26204 ;;		On exit  : 0/0
 26205 ;;		Unchanged: 0/0
 26206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26211 ;;Total ram usage:        0 bytes
 26212 ;; Hardware stack levels used:    1
 26213 ;; Hardware stack levels required when called:    2
 26214 ;; This function calls:
 26215 ;;		_INT0_CallBack
 26216 ;; This function is called by:
 26217 ;;		Interrupt level 2
 26218 ;; This function uses a non-reentrant model
 26219 ;;
 26220                           
 26221                           	psect	text126
 26222  018DD8                     __ptext126:
 26223                           	opt callstack 0
 26224  018DD8                     _INT0_ISR:
 26225                           	opt callstack 12
 26226                           
 26227                           ; BSR set to: 2
 26228                           ;incstack = 0
 26229  018DD8  EE14  F000         	lfsr	1,___inthi_sp
 26230                           
 26231                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 26232  018DDC  0139               	movlb	57	; () banked
 26233  018DDE  91A1               	bcf	161,0,b	;volatile
 26234                           
 26235                           ; BSR set to: 57
 26236                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 26237  018DE0  ECDA  F0C5         	call	_INT0_CallBack	;wreg free
 26238  018DE4  0011               	retfie		f
 26239  018DE6                     __end_of_INT0_ISR:
 26240                           	opt callstack 0
 26241                           
 26242 ;; *************** function _INT0_CallBack *****************
 26243 ;; Defined at:
 26244 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 26245 ;; Parameters:    Size  Location     Type
 26246 ;;		None
 26247 ;; Auto vars:     Size  Location     Type
 26248 ;;		None
 26249 ;; Return value:  Size  Location     Type
 26250 ;;                  1  [STACK] void 
 26251 ;; Registers used:
 26252 ;;		wreg, status,2, status,0, pclath, tosl
 26253 ;; Tracked objects:
 26254 ;;		On entry : 3F/39
 26255 ;;		On exit  : 0/0
 26256 ;;		Unchanged: 0/0
 26257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26262 ;;Total ram usage:        0 bytes
 26263 ;; Hardware stack levels used:    1
 26264 ;; Hardware stack levels required when called:    1
 26265 ;; This function calls:
 26266 ;;		Absolute function
 26267 ;;		_INT0_DefaultInterruptHandler
 26268 ;; This function is called by:
 26269 ;;		_INT0_ISR
 26270 ;; This function uses a reentrant model
 26271 ;;
 26272                           
 26273                           	psect	text127
 26274  018BB4                     __ptext127:
 26275                           	opt callstack 0
 26276  018BB4                     _INT0_CallBack:
 26277                           	opt callstack 12
 26278                           
 26279                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 26280                           
 26281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26282                           ;incstack = 0
 26283  018BB4  5016               	movf	_INT0_InterruptHandler^0,w,c
 26284  018BB6  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 26285  018BB8  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 26286  018BBA  B4D8               	btfsc	status,2,c
 26287  018BBC  0012               	return	
 26288                           
 26289                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 26290  018BBE  D801               	call	u398_48
 26291  018BC0  0012               	return	
 26292  018BC2                     u398_48:
 26293  018BC2  0005               	push	
 26294  018BC4  6EFA               	movwf	pclath,c
 26295  018BC6  5016               	movf	_INT0_InterruptHandler^0,w,c
 26296  018BC8  6EFD               	movwf	tosl,c
 26297  018BCA  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 26298  018BCC  6EFE               	movwf	tosh,c
 26299  018BCE  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 26300  018BD0  6EFF               	movwf	tosu,c
 26301  018BD2  50FA               	movf	pclath,w,c
 26302  018BD4  0012               	return		;indir
 26303  018BD6                     __end_of_INT0_CallBack:
 26304                           	opt callstack 0
 26305                           
 26306 ;; *************** function _INT0_DefaultInterruptHandler *****************
 26307 ;; Defined at:
 26308 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 26309 ;; Parameters:    Size  Location     Type
 26310 ;;		None
 26311 ;; Auto vars:     Size  Location     Type
 26312 ;;		None
 26313 ;; Return value:  Size  Location     Type
 26314 ;;                  1  [STACK] void 
 26315 ;; Registers used:
 26316 ;;		None
 26317 ;; Tracked objects:
 26318 ;;		On entry : 0/39
 26319 ;;		On exit  : 0/0
 26320 ;;		Unchanged: 0/0
 26321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26326 ;;Total ram usage:        0 bytes
 26327 ;; Hardware stack levels used:    1
 26328 ;; This function calls:
 26329 ;;		Nothing
 26330 ;; This function is called by:
 26331 ;;		_EXT_INT_Initialize
 26332 ;;		_INT0_CallBack
 26333 ;; This function uses a reentrant model
 26334 ;;
 26335                           
 26336                           	psect	text128
 26337  018E64                     __ptext128:
 26338                           	opt callstack 0
 26339  018E64                     _INT0_DefaultInterruptHandler:
 26340                           	opt callstack 12
 26341                           
 26342                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26343                           
 26344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26345                           ;incstack = 0
 26346  018E64  0012               	return		;funcret
 26347  018E66                     __end_of_INT0_DefaultInterruptHandler:
 26348                           	opt callstack 0
 26349                           
 26350 ;; *************** function _Default_ISR *****************
 26351 ;; Defined at:
 26352 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 26353 ;; Parameters:    Size  Location     Type
 26354 ;;		None
 26355 ;; Auto vars:     Size  Location     Type
 26356 ;;		None
 26357 ;; Return value:  Size  Location     Type
 26358 ;;                  1    wreg      void 
 26359 ;; Registers used:
 26360 ;;		None
 26361 ;; Tracked objects:
 26362 ;;		On entry : 0/0
 26363 ;;		On exit  : 0/0
 26364 ;;		Unchanged: 0/0
 26365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26370 ;;Total ram usage:        0 bytes
 26371 ;; Hardware stack levels used:    1
 26372 ;; This function calls:
 26373 ;;		Nothing
 26374 ;; This function is called by:
 26375 ;;		Interrupt level 2
 26376 ;; This function uses a non-reentrant model
 26377 ;;
 26378                           
 26379                           	psect	text129
 26380  018E5C                     __ptext129:
 26381                           	opt callstack 0
 26382  018E5C                     _Default_ISR:
 26383                           	opt callstack 14
 26384                           
 26385                           ;incstack = 0
 26386  018E5C  EE14  F000         	lfsr	1,___inthi_sp
 26387  018E60  0011               	retfie		f
 26388  018E62                     __end_of_Default_ISR:
 26389                           	opt callstack 0
 26390                           
 26391 ;; *************** function _ADCC_ISR *****************
 26392 ;; Defined at:
 26393 ;;		line 314 in file "mcc_generated_files/adcc.c"
 26394 ;; Parameters:    Size  Location     Type
 26395 ;;		None
 26396 ;; Auto vars:     Size  Location     Type
 26397 ;;		None
 26398 ;; Return value:  Size  Location     Type
 26399 ;;                  1    wreg      void 
 26400 ;; Registers used:
 26401 ;;		wreg, status,2, status,0, pclath, tosl
 26402 ;; Tracked objects:
 26403 ;;		On entry : 0/0
 26404 ;;		On exit  : 0/0
 26405 ;;		Unchanged: 0/0
 26406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26411 ;;Total ram usage:        0 bytes
 26412 ;; Hardware stack levels used:    1
 26413 ;; Hardware stack levels required when called:    1
 26414 ;; This function calls:
 26415 ;;		Absolute function
 26416 ;;		_ADCC_DefaultInterruptHandler
 26417 ;;		_adc_int_handler
 26418 ;; This function is called by:
 26419 ;;		Interrupt level 2
 26420 ;; This function uses a non-reentrant model
 26421 ;;
 26422                           
 26423                           	psect	text130
 26424  0187E0                     __ptext130:
 26425                           	opt callstack 0
 26426  0187E0                     _ADCC_ISR:
 26427                           	opt callstack 13
 26428                           
 26429                           ;incstack = 0
 26430  0187E0  EE14  F000         	lfsr	1,___inthi_sp
 26431                           
 26432                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 26433  0187E4  0139               	movlb	57	; () banked
 26434  0187E6  95A1               	bcf	161,2,b	;volatile
 26435                           
 26436                           ; BSR set to: 57
 26437                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26438  0187E8  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26439  0187EA  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26440  0187EC  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26441  0187EE  B4D8               	btfsc	status,2,c
 26442  0187F0  0011               	retfie		f
 26443                           
 26444                           ; BSR set to: 57
 26445                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26446  0187F2  D801               	call	i2u430_48
 26447  0187F4  0011               	retfie		f
 26448  0187F6                     i2u430_48:
 26449  0187F6  0005               	push	
 26450  0187F8  6EFA               	movwf	pclath,c
 26451  0187FA  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26452  0187FC  6EFD               	movwf	tosl,c
 26453  0187FE  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26454  018800  6EFE               	movwf	tosh,c
 26455  018802  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26456  018804  6EFF               	movwf	tosu,c
 26457  018806  50FA               	movf	pclath,w,c
 26458  018808  0012               	return		;indir
 26459  01880A                     __end_of_ADCC_ISR:
 26460                           	opt callstack 0
 26461                           
 26462 ;; *************** function _adc_int_t_handler *****************
 26463 ;; Defined at:
 26464 ;;		line 128 in file "daq.c"
 26465 ;; Parameters:    Size  Location     Type
 26466 ;;		None
 26467 ;; Auto vars:     Size  Location     Type
 26468 ;;		None
 26469 ;; Return value:  Size  Location     Type
 26470 ;;                  1  [STACK] void 
 26471 ;; Registers used:
 26472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26473 ;; Tracked objects:
 26474 ;;		On entry : 3F/39
 26475 ;;		On exit  : 1/0
 26476 ;;		Unchanged: 0/0
 26477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26482 ;;Total ram usage:        0 bytes
 26483 ;; Hardware stack levels used:    1
 26484 ;; Hardware stack levels required when called:    1
 26485 ;; This function calls:
 26486 ;;		_ADCC_DischargeSampleCapacitor
 26487 ;;		_ADCC_StartConversion
 26488 ;; This function is called by:
 26489 ;;		_start_adc_scan
 26490 ;;		_ADCC_ThresholdISR
 26491 ;; This function uses a reentrant model
 26492 ;;
 26493                           
 26494                           	psect	text131
 26495  017CBE                     __ptext131:
 26496                           	opt callstack 0
 26497  017CBE                     _adc_int_t_handler:
 26498                           	opt callstack 12
 26499                           
 26500                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26501                           
 26502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26503                           ;incstack = 0
 26504  017CBE  013E               	movlb	62	; () banked
 26505  017CC0  51E6               	movf	230,w,b	;volatile
 26506  017CC2  006F FB9C  F032    	movff	16103,btemp	;volatile
 26507  017CC8  6A33               	clrf	(btemp+1)^0,c
 26508  017CCA  0060  F0C8  F033   	movff	btemp,btemp+1
 26509  017CD0  6A32               	clrf	btemp^0,c
 26510  017CD2  2632               	addwf	btemp^0,f,c
 26511  017CD4  0E00               	movlw	0
 26512  017CD6  2233               	addwfc	(btemp+1)^0,f,c
 26513  017CD8  0100               	movlb	0	; () banked
 26514  017CDA  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26515  017CDC  0D02               	mullw	2
 26516  017CDE  50F3               	movf	243,w,c
 26517  017CE0  0FC7               	addlw	low _R
 26518  017CE2  6ED9               	movwf	fsr2l,c
 26519  017CE4  6ADA               	clrf	fsr2h,c
 26520  017CE6  0060  F0CB  FFDE   	movff	btemp,postinc2
 26521  017CEC  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26522  017CF2                     l9270:
 26523                           
 26524                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 26525  017CF2  0100               	movlb	0	; () banked
 26526  017CF4  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 26527  017CF6  0E0D               	movlw	13
 26528  017CF8  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26529  017CFA  D003               	goto	l9276
 26530                           
 26531                           ; BSR set to: 0
 26532                           ;daq.c: 136:    R.done = 1;
 26533  017CFC  0E01               	movlw	1
 26534  017CFE  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 26535  017D00  0012               	return	
 26536  017D02                     l9276:
 26537                           
 26538                           ; BSR set to: 0
 26539                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26540  017D02  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 26541  017D08  EE20  F0EC         	lfsr	2,_R+37	;volatile
 26542  017D0C  006F FF78  F03A    	movff	postinc2,btemp+8
 26543  017D12  006F FF74  F03B    	movff	postdec2,btemp+9
 26544  017D18  2A3D               	incf	(btemp+11)^0,f,c
 26545  017D1A  D003               	goto	u877_44
 26546  017D1C                     u877_45:
 26547  017D1C  90D8               	bcf	status,0,c
 26548  017D1E  323B               	rrcf	(btemp+9)^0,f,c
 26549  017D20  323A               	rrcf	(btemp+8)^0,f,c
 26550  017D22                     u877_44:
 26551  017D22  2E3D               	decfsz	(btemp+11)^0,f,c
 26552  017D24  D7FB               	goto	u877_45
 26553  017D26  A03A               	btfss	(btemp+8)^0,0,c
 26554  017D28  D7E4               	goto	l9270
 26555                           
 26556                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 26557  017D2A  EC11  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26558                           
 26559                           ; BSR set to: 62
 26560                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 26561  017D2E  0100               	movlb	0	; () banked
 26562  017D30  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26563  017D32  0B0F               	andlw	15
 26564  017D34  6EE6               	movwf	postinc1,c
 26565  017D36  ECCC  F0C6         	call	_ADCC_StartConversion	;wreg free
 26566                           
 26567                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26568  017D3A  0012               	return		;funcret
 26569  017D3C                     __end_of_adc_int_t_handler:
 26570                           	opt callstack 0
 26571                           
 26572 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26573 ;; Defined at:
 26574 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26575 ;; Parameters:    Size  Location     Type
 26576 ;;		None
 26577 ;; Auto vars:     Size  Location     Type
 26578 ;;		None
 26579 ;; Return value:  Size  Location     Type
 26580 ;;                  1  [STACK] void 
 26581 ;; Registers used:
 26582 ;;		None
 26583 ;; Tracked objects:
 26584 ;;		On entry : 3F/39
 26585 ;;		On exit  : 0/0
 26586 ;;		Unchanged: 0/0
 26587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26592 ;;Total ram usage:        0 bytes
 26593 ;; Hardware stack levels used:    1
 26594 ;; This function calls:
 26595 ;;		Nothing
 26596 ;; This function is called by:
 26597 ;;		_ADCC_Initialize
 26598 ;;		_ADCC_ISR
 26599 ;;		_ADCC_ThresholdISR
 26600 ;; This function uses a reentrant model
 26601 ;;
 26602                           
 26603                           	psect	text132
 26604  018E66                     __ptext132:
 26605                           	opt callstack 0
 26606  018E66                     _ADCC_DefaultInterruptHandler:
 26607                           	opt callstack 13
 26608                           
 26609                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26610                           
 26611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26612                           ;incstack = 0
 26613  018E66  0012               	return		;funcret
 26614  018E68                     __end_of_ADCC_DefaultInterruptHandler:
 26615                           	opt callstack 0
 26616                           
 26617 ;; *************** function _adc_int_handler *****************
 26618 ;; Defined at:
 26619 ;;		line 118 in file "daq.c"
 26620 ;; Parameters:    Size  Location     Type
 26621 ;;		None
 26622 ;; Auto vars:     Size  Location     Type
 26623 ;;		None
 26624 ;; Return value:  Size  Location     Type
 26625 ;;                  1  [STACK] void 
 26626 ;; Registers used:
 26627 ;;		None
 26628 ;; Tracked objects:
 26629 ;;		On entry : 3F/39
 26630 ;;		On exit  : 0/0
 26631 ;;		Unchanged: 0/0
 26632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26637 ;;Total ram usage:        0 bytes
 26638 ;; Hardware stack levels used:    1
 26639 ;; This function calls:
 26640 ;;		Nothing
 26641 ;; This function is called by:
 26642 ;;		_start_adc_scan
 26643 ;;		_ADCC_ISR
 26644 ;; This function uses a reentrant model
 26645 ;;
 26646                           
 26647                           	psect	text133
 26648  018E68                     __ptext133:
 26649                           	opt callstack 0
 26650  018E68                     _adc_int_handler:
 26651                           	opt callstack 13
 26652                           
 26653                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26654                           
 26655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26656                           ;incstack = 0
 26657  018E68  0012               	return		;funcret
 26658  018E6A                     __end_of_adc_int_handler:
 26659                           	opt callstack 0
 26660                           
 26661 ;; *************** function _ADCC_ThresholdISR *****************
 26662 ;; Defined at:
 26663 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26664 ;; Parameters:    Size  Location     Type
 26665 ;;		None
 26666 ;; Auto vars:     Size  Location     Type
 26667 ;;		None
 26668 ;; Return value:  Size  Location     Type
 26669 ;;                  1    wreg      void 
 26670 ;; Registers used:
 26671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26672 ;; Tracked objects:
 26673 ;;		On entry : 0/0
 26674 ;;		On exit  : 0/0
 26675 ;;		Unchanged: 0/0
 26676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26679 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26680 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26681 ;;Total ram usage:        5 bytes
 26682 ;; Hardware stack levels used:    1
 26683 ;; Hardware stack levels required when called:    2
 26684 ;; This function calls:
 26685 ;;		Absolute function
 26686 ;;		_ADCC_DefaultInterruptHandler
 26687 ;;		_adc_int_t_handler
 26688 ;; This function is called by:
 26689 ;;		Interrupt level 2
 26690 ;; This function uses a non-reentrant model
 26691 ;;
 26692                           
 26693                           	psect	text134
 26694  017E10                     __ptext134:
 26695                           	opt callstack 0
 26696  017E10                     _ADCC_ThresholdISR:
 26697                           	opt callstack 12
 26698                           
 26699                           ;incstack = 0
 26700  017E10  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26701  017E16  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26702  017E1C  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26703  017E22  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26704  017E28  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26705  017E2E  EE14  F000         	lfsr	1,___inthi_sp
 26706                           
 26707                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26708  017E32  0139               	movlb	57	; () banked
 26709  017E34  97A1               	bcf	161,3,b	;volatile
 26710                           
 26711                           ; BSR set to: 57
 26712                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26713  017E36  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26714  017E38  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26715  017E3A  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26716  017E3C  B4D8               	btfsc	status,2,c
 26717  017E3E  D00C               	goto	i2u880_49
 26718                           
 26719                           ; BSR set to: 57
 26720                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26721  017E40  D801               	call	i2u880_48
 26722  017E42  D00A               	goto	i2u880_49
 26723  017E44                     i2u880_48:
 26724  017E44  0005               	push	
 26725  017E46  6EFA               	movwf	pclath,c
 26726  017E48  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26727  017E4A  6EFD               	movwf	tosl,c
 26728  017E4C  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26729  017E4E  6EFE               	movwf	tosh,c
 26730  017E50  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26731  017E52  6EFF               	movwf	tosu,c
 26732  017E54  50FA               	movf	pclath,w,c
 26733  017E56  0012               	return		;indir
 26734  017E58                     i2u880_49:
 26735  017E58  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26736  017E5E  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26737  017E64  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26738  017E6A  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26739  017E70  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 26740  017E76  0011               	retfie		f
 26741  017E78                     __end_of_ADCC_ThresholdISR:
 26742                           	opt callstack 0
 26743                           
 26744 ;; *************** function _UART1_tx_vect_isr *****************
 26745 ;; Defined at:
 26746 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26747 ;; Parameters:    Size  Location     Type
 26748 ;;		None
 26749 ;; Auto vars:     Size  Location     Type
 26750 ;;		None
 26751 ;; Return value:  Size  Location     Type
 26752 ;;                  1    wreg      void 
 26753 ;; Registers used:
 26754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26755 ;; Tracked objects:
 26756 ;;		On entry : 0/0
 26757 ;;		On exit  : 0/0
 26758 ;;		Unchanged: 0/0
 26759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26764 ;;Total ram usage:        0 bytes
 26765 ;; Hardware stack levels used:    1
 26766 ;; Hardware stack levels required when called:    1
 26767 ;; This function calls:
 26768 ;;		Absolute function
 26769 ;;		_UART1_Transmit_ISR
 26770 ;; This function is called by:
 26771 ;;		Interrupt level 2
 26772 ;; This function uses a non-reentrant model
 26773 ;;
 26774                           
 26775                           	psect	text135
 26776  018A64                     __ptext135:
 26777                           	opt callstack 0
 26778  018A64                     _UART1_tx_vect_isr:
 26779                           	opt callstack 13
 26780                           
 26781                           ;incstack = 0
 26782  018A64  EE14  F000         	lfsr	1,___inthi_sp
 26783                           
 26784                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26785  018A68  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26786  018A6A  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26787  018A6C  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26788  018A6E  B4D8               	btfsc	status,2,c
 26789  018A70  0011               	retfie		f
 26790                           
 26791                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26792  018A72  D801               	call	i2u882_48
 26793  018A74  0011               	retfie		f
 26794  018A76                     i2u882_48:
 26795  018A76  0005               	push	
 26796  018A78  6EFA               	movwf	pclath,c
 26797  018A7A  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26798  018A7C  6EFD               	movwf	tosl,c
 26799  018A7E  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26800  018A80  6EFE               	movwf	tosh,c
 26801  018A82  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26802  018A84  6EFF               	movwf	tosu,c
 26803  018A86  50FA               	movf	pclath,w,c
 26804  018A88  0012               	return		;indir
 26805  018A8A                     __end_of_UART1_tx_vect_isr:
 26806                           	opt callstack 0
 26807                           
 26808 ;; *************** function _UART1_Transmit_ISR *****************
 26809 ;; Defined at:
 26810 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26811 ;; Parameters:    Size  Location     Type
 26812 ;;		None
 26813 ;; Auto vars:     Size  Location     Type
 26814 ;;		None
 26815 ;; Return value:  Size  Location     Type
 26816 ;;                  1  [STACK] void 
 26817 ;; Registers used:
 26818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26819 ;; Tracked objects:
 26820 ;;		On entry : 0/0
 26821 ;;		On exit  : 3B/39
 26822 ;;		Unchanged: 0/0
 26823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26828 ;;Total ram usage:        0 bytes
 26829 ;; Hardware stack levels used:    1
 26830 ;; This function calls:
 26831 ;;		Nothing
 26832 ;; This function is called by:
 26833 ;;		_UART1_Initialize
 26834 ;;		_UART1_tx_vect_isr
 26835 ;; This function uses a reentrant model
 26836 ;;
 26837                           
 26838                           	psect	text136
 26839  01875C                     __ptext136:
 26840                           	opt callstack 0
 26841  01875C                     _UART1_Transmit_ISR:
 26842                           	opt callstack 13
 26843                           
 26844                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26845                           
 26846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26847                           ;incstack = 0
 26848  01875C  0E40               	movlw	64
 26849  01875E  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26850  018760  D010               	goto	l581
 26851                           
 26852                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26853  018762  0EBC               	movlw	low _uart1TxBuffer
 26854  018764  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26855  018766  6ED9               	movwf	fsr2l,c
 26856  018768  6ADA               	clrf	fsr2h,c
 26857  01876A  0E02               	movlw	high _uart1TxBuffer
 26858  01876C  22DA               	addwfc	fsr2h,f,c
 26859  01876E  50DF               	movf	indf2,w,c
 26860  018770  013D               	movlb	61	; () banked
 26861  018772  6FEA               	movwf	234,b	;volatile
 26862                           
 26863                           ; BSR set to: 61
 26864  018774  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26865                           
 26866                           ; BSR set to: 61
 26867                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26868  018776  0E3F               	movlw	63
 26869  018778  6430               	cpfsgt	_uart1TxTail^0,c
 26870  01877A  D001               	goto	l9012
 26871                           
 26872                           ; BSR set to: 61
 26873                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26874  01877C  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26875  01877E                     l9012:
 26876                           
 26877                           ; BSR set to: 61
 26878                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26879  01877E  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26880                           
 26881                           ;mcc_generated_files/uart1.c: 222:  } else {
 26882  018780  0012               	return	
 26883  018782                     l581:
 26884                           
 26885                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26886  018782  0139               	movlb	57	; () banked
 26887  018784  9993               	bcf	147,4,b	;volatile
 26888                           
 26889                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26890  018786  0012               	return		;funcret
 26891  018788                     __end_of_UART1_Transmit_ISR:
 26892                           	opt callstack 0
 26893                           
 26894 ;; *************** function _UART1_rx_vect_isr *****************
 26895 ;; Defined at:
 26896 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26897 ;; Parameters:    Size  Location     Type
 26898 ;;		None
 26899 ;; Auto vars:     Size  Location     Type
 26900 ;;		None
 26901 ;; Return value:  Size  Location     Type
 26902 ;;                  1    wreg      void 
 26903 ;; Registers used:
 26904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26905 ;; Tracked objects:
 26906 ;;		On entry : 0/0
 26907 ;;		On exit  : 0/0
 26908 ;;		Unchanged: 0/0
 26909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26914 ;;Total ram usage:        0 bytes
 26915 ;; Hardware stack levels used:    1
 26916 ;; Hardware stack levels required when called:    1
 26917 ;; This function calls:
 26918 ;;		Absolute function
 26919 ;;		_UART1_Receive_ISR
 26920 ;; This function is called by:
 26921 ;;		Interrupt level 2
 26922 ;; This function uses a non-reentrant model
 26923 ;;
 26924                           
 26925                           	psect	text137
 26926  018A8C                     __ptext137:
 26927                           	opt callstack 0
 26928  018A8C                     _UART1_rx_vect_isr:
 26929                           	opt callstack 13
 26930                           
 26931                           ;incstack = 0
 26932  018A8C  EE14  F000         	lfsr	1,___inthi_sp
 26933                           
 26934                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26935  018A90  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26936  018A92  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26937  018A94  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26938  018A96  B4D8               	btfsc	status,2,c
 26939  018A98  0011               	retfie		f
 26940                           
 26941                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26942  018A9A  D801               	call	i2u884_48
 26943  018A9C  0011               	retfie		f
 26944  018A9E                     i2u884_48:
 26945  018A9E  0005               	push	
 26946  018AA0  6EFA               	movwf	pclath,c
 26947  018AA2  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26948  018AA4  6EFD               	movwf	tosl,c
 26949  018AA6  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26950  018AA8  6EFE               	movwf	tosh,c
 26951  018AAA  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26952  018AAC  6EFF               	movwf	tosu,c
 26953  018AAE  50FA               	movf	pclath,w,c
 26954  018AB0  0012               	return		;indir
 26955  018AB2                     __end_of_UART1_rx_vect_isr:
 26956                           	opt callstack 0
 26957                           
 26958 ;; *************** function _UART1_Receive_ISR *****************
 26959 ;; Defined at:
 26960 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26961 ;; Parameters:    Size  Location     Type
 26962 ;;		None
 26963 ;; Auto vars:     Size  Location     Type
 26964 ;;		None
 26965 ;; Return value:  Size  Location     Type
 26966 ;;                  1  [STACK] void 
 26967 ;; Registers used:
 26968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26969 ;; Tracked objects:
 26970 ;;		On entry : 0/0
 26971 ;;		On exit  : 0/0
 26972 ;;		Unchanged: 0/0
 26973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26978 ;;Total ram usage:        0 bytes
 26979 ;; Hardware stack levels used:    1
 26980 ;; This function calls:
 26981 ;;		Nothing
 26982 ;; This function is called by:
 26983 ;;		_UART1_Initialize
 26984 ;;		_UART1_rx_vect_isr
 26985 ;; This function uses a reentrant model
 26986 ;;
 26987                           
 26988                           	psect	text138
 26989  018C50                     __ptext138:
 26990                           	opt callstack 0
 26991  018C50                     _UART1_Receive_ISR:
 26992                           	opt callstack 13
 26993                           
 26994                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26995                           
 26996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26997                           ;incstack = 0
 26998  018C50  0E00               	movlw	low _uart1RxBuffer
 26999  018C52  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 27000  018C54  6ED9               	movwf	fsr2l,c
 27001  018C56  6ADA               	clrf	fsr2h,c
 27002  018C58  0E06               	movlw	high _uart1RxBuffer
 27003  018C5A  22DA               	addwfc	fsr2h,f,c
 27004  018C5C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27005  018C62  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 27006                           
 27007                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 27008  018C64  282E               	incf	_uart1RxHead^0,w,c
 27009  018C66  B4D8               	btfsc	status,2,c
 27010                           
 27011                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 27012  018C68  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 27013                           
 27014                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 27015  018C6A  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 27016                           
 27017                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27018  018C6C  0012               	return		;funcret
 27019  018C6E                     __end_of_UART1_Receive_ISR:
 27020                           	opt callstack 0
 27021                           
 27022 ;; *************** function _UART2_tx_vect_isr *****************
 27023 ;; Defined at:
 27024 ;;		line 195 in file "mcc_generated_files/uart2.c"
 27025 ;; Parameters:    Size  Location     Type
 27026 ;;		None
 27027 ;; Auto vars:     Size  Location     Type
 27028 ;;		None
 27029 ;; Return value:  Size  Location     Type
 27030 ;;                  1    wreg      void 
 27031 ;; Registers used:
 27032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27033 ;; Tracked objects:
 27034 ;;		On entry : 0/0
 27035 ;;		On exit  : 0/0
 27036 ;;		Unchanged: 0/0
 27037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27042 ;;Total ram usage:        0 bytes
 27043 ;; Hardware stack levels used:    1
 27044 ;; Hardware stack levels required when called:    1
 27045 ;; This function calls:
 27046 ;;		Absolute function
 27047 ;;		_UART2_Transmit_ISR
 27048 ;; This function is called by:
 27049 ;;		Interrupt level 2
 27050 ;; This function uses a non-reentrant model
 27051 ;;
 27052                           
 27053                           	psect	text139
 27054  018AB4                     __ptext139:
 27055                           	opt callstack 0
 27056  018AB4                     _UART2_tx_vect_isr:
 27057                           	opt callstack 13
 27058                           
 27059                           ;incstack = 0
 27060  018AB4  EE14  F000         	lfsr	1,___inthi_sp
 27061                           
 27062                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 27063  018AB8  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27064  018ABA  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 27065  018ABC  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 27066  018ABE  B4D8               	btfsc	status,2,c
 27067  018AC0  0011               	retfie		f
 27068                           
 27069                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 27070  018AC2  D801               	call	i2u886_48
 27071  018AC4  0011               	retfie		f
 27072  018AC6                     i2u886_48:
 27073  018AC6  0005               	push	
 27074  018AC8  6EFA               	movwf	pclath,c
 27075  018ACA  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27076  018ACC  6EFD               	movwf	tosl,c
 27077  018ACE  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 27078  018AD0  6EFE               	movwf	tosh,c
 27079  018AD2  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 27080  018AD4  6EFF               	movwf	tosu,c
 27081  018AD6  50FA               	movf	pclath,w,c
 27082  018AD8  0012               	return		;indir
 27083  018ADA                     __end_of_UART2_tx_vect_isr:
 27084                           	opt callstack 0
 27085                           
 27086 ;; *************** function _UART2_Transmit_ISR *****************
 27087 ;; Defined at:
 27088 ;;		line 213 in file "mcc_generated_files/uart2.c"
 27089 ;; Parameters:    Size  Location     Type
 27090 ;;		None
 27091 ;; Auto vars:     Size  Location     Type
 27092 ;;		None
 27093 ;; Return value:  Size  Location     Type
 27094 ;;                  1  [STACK] void 
 27095 ;; Registers used:
 27096 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27097 ;; Tracked objects:
 27098 ;;		On entry : 0/0
 27099 ;;		On exit  : 3B/39
 27100 ;;		Unchanged: 0/0
 27101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27106 ;;Total ram usage:        0 bytes
 27107 ;; Hardware stack levels used:    1
 27108 ;; This function calls:
 27109 ;;		Nothing
 27110 ;; This function is called by:
 27111 ;;		_UART2_Initialize
 27112 ;;		_UART2_tx_vect_isr
 27113 ;; This function uses a reentrant model
 27114 ;;
 27115                           
 27116                           	psect	text140
 27117  018788                     __ptext140:
 27118                           	opt callstack 0
 27119  018788                     _UART2_Transmit_ISR:
 27120                           	opt callstack 13
 27121                           
 27122                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 27123                           
 27124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27125                           ;incstack = 0
 27126  018788  0E40               	movlw	64
 27127  01878A  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 27128  01878C  D010               	goto	l701
 27129                           
 27130                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 27131  01878E  0E54               	movlw	low _uart2TxBuffer
 27132  018790  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 27133  018792  6ED9               	movwf	fsr2l,c
 27134  018794  6ADA               	clrf	fsr2h,c
 27135  018796  0E03               	movlw	high _uart2TxBuffer
 27136  018798  22DA               	addwfc	fsr2h,f,c
 27137  01879A  50DF               	movf	indf2,w,c
 27138  01879C  013D               	movlb	61	; () banked
 27139  01879E  6FD2               	movwf	210,b	;volatile
 27140                           
 27141                           ; BSR set to: 61
 27142  0187A0  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 27143                           
 27144                           ; BSR set to: 61
 27145                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 27146  0187A2  0E3F               	movlw	63
 27147  0187A4  642A               	cpfsgt	_uart2TxTail^0,c
 27148  0187A6  D001               	goto	l9034
 27149                           
 27150                           ; BSR set to: 61
 27151                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 27152  0187A8  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 27153  0187AA                     l9034:
 27154                           
 27155                           ; BSR set to: 61
 27156                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 27157  0187AA  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 27158                           
 27159                           ;mcc_generated_files/uart2.c: 224:     }
 27160  0187AC  0012               	return	
 27161  0187AE                     l701:
 27162                           
 27163                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 27164  0187AE  0139               	movlb	57	; () banked
 27165  0187B0  9796               	bcf	150,3,b	;volatile
 27166                           
 27167                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27168  0187B2  0012               	return		;funcret
 27169  0187B4                     __end_of_UART2_Transmit_ISR:
 27170                           	opt callstack 0
 27171                           
 27172 ;; *************** function _UART2_rx_vect_isr *****************
 27173 ;; Defined at:
 27174 ;;		line 203 in file "mcc_generated_files/uart2.c"
 27175 ;; Parameters:    Size  Location     Type
 27176 ;;		None
 27177 ;; Auto vars:     Size  Location     Type
 27178 ;;		None
 27179 ;; Return value:  Size  Location     Type
 27180 ;;                  1    wreg      void 
 27181 ;; Registers used:
 27182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27183 ;; Tracked objects:
 27184 ;;		On entry : 0/0
 27185 ;;		On exit  : 0/0
 27186 ;;		Unchanged: 0/0
 27187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27192 ;;Total ram usage:        0 bytes
 27193 ;; Hardware stack levels used:    1
 27194 ;; Hardware stack levels required when called:    1
 27195 ;; This function calls:
 27196 ;;		Absolute function
 27197 ;;		_UART2_Receive_ISR
 27198 ;; This function is called by:
 27199 ;;		Interrupt level 2
 27200 ;; This function uses a non-reentrant model
 27201 ;;
 27202                           
 27203                           	psect	text141
 27204  018ADC                     __ptext141:
 27205                           	opt callstack 0
 27206  018ADC                     _UART2_rx_vect_isr:
 27207                           	opt callstack 13
 27208                           
 27209                           ;incstack = 0
 27210  018ADC  EE14  F000         	lfsr	1,___inthi_sp
 27211                           
 27212                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 27213  018AE0  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27214  018AE2  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 27215  018AE4  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 27216  018AE6  B4D8               	btfsc	status,2,c
 27217  018AE8  0011               	retfie		f
 27218                           
 27219                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 27220  018AEA  D801               	call	i2u888_48
 27221  018AEC  0011               	retfie		f
 27222  018AEE                     i2u888_48:
 27223  018AEE  0005               	push	
 27224  018AF0  6EFA               	movwf	pclath,c
 27225  018AF2  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27226  018AF4  6EFD               	movwf	tosl,c
 27227  018AF6  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 27228  018AF8  6EFE               	movwf	tosh,c
 27229  018AFA  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 27230  018AFC  6EFF               	movwf	tosu,c
 27231  018AFE  50FA               	movf	pclath,w,c
 27232  018B00  0012               	return		;indir
 27233  018B02                     __end_of_UART2_rx_vect_isr:
 27234                           	opt callstack 0
 27235                           
 27236 ;; *************** function _UART2_Receive_ISR *****************
 27237 ;; Defined at:
 27238 ;;		line 233 in file "mcc_generated_files/uart2.c"
 27239 ;; Parameters:    Size  Location     Type
 27240 ;;		None
 27241 ;; Auto vars:     Size  Location     Type
 27242 ;;		None
 27243 ;; Return value:  Size  Location     Type
 27244 ;;                  1  [STACK] void 
 27245 ;; Registers used:
 27246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27247 ;; Tracked objects:
 27248 ;;		On entry : 0/0
 27249 ;;		On exit  : 0/0
 27250 ;;		Unchanged: 0/0
 27251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27256 ;;Total ram usage:        0 bytes
 27257 ;; Hardware stack levels used:    1
 27258 ;; This function calls:
 27259 ;;		Nothing
 27260 ;; This function is called by:
 27261 ;;		_UART2_Initialize
 27262 ;;		_UART2_rx_vect_isr
 27263 ;; This function uses a reentrant model
 27264 ;;
 27265                           
 27266                           	psect	text142
 27267  018C6E                     __ptext142:
 27268                           	opt callstack 0
 27269  018C6E                     _UART2_Receive_ISR:
 27270                           	opt callstack 13
 27271                           
 27272                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 27273                           
 27274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27275                           ;incstack = 0
 27276  018C6E  0E00               	movlw	low _uart2RxBuffer
 27277  018C70  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 27278  018C72  6ED9               	movwf	fsr2l,c
 27279  018C74  6ADA               	clrf	fsr2h,c
 27280  018C76  0E07               	movlw	high _uart2RxBuffer
 27281  018C78  22DA               	addwfc	fsr2h,f,c
 27282  018C7A  006F F743 FFDF     	movff	15824,indf2	;volatile
 27283  018C80  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 27284                           
 27285                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 27286  018C82  2828               	incf	_uart2RxHead^0,w,c
 27287  018C84  B4D8               	btfsc	status,2,c
 27288                           
 27289                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 27290  018C86  6A28               	clrf	_uart2RxHead^0,c	;volatile
 27291                           
 27292                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 27293  018C88  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 27294                           
 27295                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27296  018C8A  0012               	return		;funcret
 27297  018C8C                     __end_of_UART2_Receive_ISR:
 27298                           	opt callstack 0
 27299                           
 27300 ;; *************** function _TMR6_ISR *****************
 27301 ;; Defined at:
 27302 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 27303 ;; Parameters:    Size  Location     Type
 27304 ;;		None
 27305 ;; Auto vars:     Size  Location     Type
 27306 ;;		None
 27307 ;; Return value:  Size  Location     Type
 27308 ;;                  1    wreg      void 
 27309 ;; Registers used:
 27310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27311 ;; Tracked objects:
 27312 ;;		On entry : 0/0
 27313 ;;		On exit  : 0/0
 27314 ;;		Unchanged: 0/0
 27315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27320 ;;Total ram usage:        1 bytes
 27321 ;; Hardware stack levels used:    1
 27322 ;; Hardware stack levels required when called:    2
 27323 ;; This function calls:
 27324 ;;		_TMR6_CallBack
 27325 ;; This function is called by:
 27326 ;;		Interrupt level 2
 27327 ;; This function uses a non-reentrant model
 27328 ;;
 27329                           
 27330                           	psect	text143
 27331  018CE0                     __ptext143:
 27332                           	opt callstack 0
 27333  018CE0                     _TMR6_ISR:
 27334                           	opt callstack 12
 27335                           
 27336                           ;incstack = 0
 27337  018CE0  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 27338  018CE6  EE14  F000         	lfsr	1,___inthi_sp
 27339                           
 27340                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 27341  018CEA  0139               	movlb	57	; () banked
 27342  018CEC  91A9               	bcf	169,0,b	;volatile
 27343                           
 27344                           ; BSR set to: 57
 27345                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 27346  018CEE  ECB7  F0C5         	call	_TMR6_CallBack	;wreg free
 27347  018CF2  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 27348  018CF8  0011               	retfie		f
 27349  018CFA                     __end_of_TMR6_ISR:
 27350                           	opt callstack 0
 27351                           
 27352 ;; *************** function _TMR6_CallBack *****************
 27353 ;; Defined at:
 27354 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27355 ;; Parameters:    Size  Location     Type
 27356 ;;		None
 27357 ;; Auto vars:     Size  Location     Type
 27358 ;;		None
 27359 ;; Return value:  Size  Location     Type
 27360 ;;                  1  [STACK] void 
 27361 ;; Registers used:
 27362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27363 ;; Tracked objects:
 27364 ;;		On entry : 3F/39
 27365 ;;		On exit  : 0/0
 27366 ;;		Unchanged: 0/0
 27367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27372 ;;Total ram usage:        0 bytes
 27373 ;; Hardware stack levels used:    1
 27374 ;; Hardware stack levels required when called:    1
 27375 ;; This function calls:
 27376 ;;		Absolute function
 27377 ;;		_TMR6_DefaultInterruptHandler
 27378 ;; This function is called by:
 27379 ;;		_TMR6_ISR
 27380 ;; This function uses a reentrant model
 27381 ;;
 27382                           
 27383                           	psect	text144
 27384  018B6E                     __ptext144:
 27385                           	opt callstack 0
 27386  018B6E                     _TMR6_CallBack:
 27387                           	opt callstack 12
 27388                           
 27389                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 27390                           
 27391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27392                           ;incstack = 0
 27393  018B6E  0100               	movlb	0	; () banked
 27394  018B70  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27395  018B72  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27396  018B74  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27397  018B76  B4D8               	btfsc	status,2,c
 27398  018B78  0012               	return	
 27399                           
 27400                           ; BSR set to: 0
 27401                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 27402  018B7A  D801               	call	u858_48
 27403  018B7C  0012               	return	
 27404  018B7E                     u858_48:
 27405  018B7E  0005               	push	
 27406  018B80  6EFA               	movwf	pclath,c
 27407  018B82  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27408  018B84  6EFD               	movwf	tosl,c
 27409  018B86  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27410  018B88  6EFE               	movwf	tosh,c
 27411  018B8A  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27412  018B8C  6EFF               	movwf	tosu,c
 27413  018B8E  50FA               	movf	pclath,w,c
 27414  018B90  0012               	return		;indir
 27415  018B92                     __end_of_TMR6_CallBack:
 27416                           	opt callstack 0
 27417                           
 27418 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27419 ;; Defined at:
 27420 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 27421 ;; Parameters:    Size  Location     Type
 27422 ;;		None
 27423 ;; Auto vars:     Size  Location     Type
 27424 ;;  i               1  [STACK] unsigned char 
 27425 ;; Return value:  Size  Location     Type
 27426 ;;                  1  [STACK] void 
 27427 ;; Registers used:
 27428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27429 ;; Tracked objects:
 27430 ;;		On entry : 3F/0
 27431 ;;		On exit  : 0/0
 27432 ;;		Unchanged: 0/0
 27433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27438 ;;Total ram usage:        0 bytes
 27439 ;; Hardware stack levels used:    1
 27440 ;; This function calls:
 27441 ;;		Nothing
 27442 ;; This function is called by:
 27443 ;;		_TMR6_Initialize
 27444 ;;		_TMR6_CallBack
 27445 ;; This function uses a reentrant model
 27446 ;;
 27447                           
 27448                           	psect	text145
 27449  0183DC                     __ptext145:
 27450                           	opt callstack 0
 27451  0183DC                     _TMR6_DefaultInterruptHandler:
 27452                           	opt callstack 0
 27453                           
 27454                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27455  0183DC  52E6               	movf	postinc1,f,c
 27456                           
 27457                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27458                           ;stkvar	_i @ sp[(-1)+0]
 27459                           
 27460                           ;incstack = 0
 27461  0183DE  0EFF               	movlw	-1
 27462  0183E0  6AE3               	clrf	plusw1,c
 27463  0183E2                     l8698:
 27464                           
 27465                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27466                           ;stkvar	_i @ sp[(-1)+0]
 27467  0183E2  0EFF               	movlw	-1
 27468  0183E4  50E3               	movf	plusw1,w,c
 27469  0183E6  0D02               	mullw	2
 27470  0183E8  50F3               	movf	243,w,c
 27471  0183EA  0F89               	addlw	low _tickCount
 27472  0183EC  6ED9               	movwf	fsr2l,c
 27473  0183EE  6ADA               	clrf	fsr2h,c
 27474  0183F0  50DE               	movf	postinc2,w,c
 27475  0183F2  10DE               	iorwf	postinc2,w,c
 27476  0183F4  B4D8               	btfsc	status,2,c
 27477  0183F6  D00A               	goto	l8702
 27478                           
 27479                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27480                           ;stkvar	_i @ sp[(-1)+0]
 27481  0183F8  0EFF               	movlw	-1
 27482  0183FA  50E3               	movf	plusw1,w,c
 27483  0183FC  0D02               	mullw	2
 27484  0183FE  50F3               	movf	243,w,c
 27485  018400  0F89               	addlw	low _tickCount
 27486  018402  6ED9               	movwf	fsr2l,c
 27487  018404  6ADA               	clrf	fsr2h,c
 27488  018406  06DE               	decf	postinc2,f,c
 27489  018408  0E00               	movlw	0
 27490  01840A  5ADD               	subwfb	postdec2,f,c
 27491  01840C                     l8702:
 27492                           
 27493                           ;mcc_generated_files/tmr6.c: 207:  }
 27494                           ;stkvar	_i @ sp[(-1)+0]
 27495  01840C  0EFF               	movlw	-1
 27496  01840E  2AE3               	incf	plusw1,f,c
 27497                           
 27498                           ;stkvar	_i @ sp[(-1)+0]
 27499  018410  0EFF               	movlw	-1
 27500  018412  006F FF8C  F032    	movff	plusw1,btemp
 27501  018418  0E0B               	movlw	11
 27502  01841A  6432               	cpfsgt	btemp^0,c
 27503  01841C  D7E2               	goto	l8698
 27504                           
 27505                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27506  01841E  52E5               	movf	postdec1,f,c
 27507  018420  0012               	return		;funcret
 27508  018422                     __end_of_TMR6_DefaultInterruptHandler:
 27509                           	opt callstack 0
 27510                           
 27511 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27512 ;; Defined at:
 27513 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27514 ;; Parameters:    Size  Location     Type
 27515 ;;		None
 27516 ;; Auto vars:     Size  Location     Type
 27517 ;;		None
 27518 ;; Return value:  Size  Location     Type
 27519 ;;                  1    wreg      void 
 27520 ;; Registers used:
 27521 ;;		None
 27522 ;; Tracked objects:
 27523 ;;		On entry : 0/0
 27524 ;;		On exit  : 3F/0
 27525 ;;		Unchanged: 0/0
 27526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27531 ;;Total ram usage:        0 bytes
 27532 ;; Hardware stack levels used:    1
 27533 ;; This function calls:
 27534 ;;		Nothing
 27535 ;; This function is called by:
 27536 ;;		Interrupt level 2
 27537 ;; This function uses a non-reentrant model
 27538 ;;
 27539                           
 27540                           	psect	text146
 27541  018DE8                     __ptext146:
 27542                           	opt callstack 0
 27543  018DE8                     _DMA1_DMASCNT_ISR:
 27544                           	opt callstack 14
 27545                           
 27546                           ;incstack = 0
 27547  018DE8  EE14  F000         	lfsr	1,___inthi_sp
 27548                           
 27549                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27550  018DEC  0139               	movlb	57	; () banked
 27551  018DEE  91A2               	bcf	162,0,b	;volatile
 27552                           
 27553                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27554  018DF0  0100               	movlb	0	; () banked
 27555  018DF2  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 27556                           
 27557                           ; BSR set to: 0
 27558  018DF4  0011               	retfie		f
 27559  018DF6                     __end_of_DMA1_DMASCNT_ISR:
 27560                           	opt callstack 0
 27561                           
 27562 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27563 ;; Defined at:
 27564 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27565 ;; Parameters:    Size  Location     Type
 27566 ;;		None
 27567 ;; Auto vars:     Size  Location     Type
 27568 ;;		None
 27569 ;; Return value:  Size  Location     Type
 27570 ;;                  1    wreg      void 
 27571 ;; Registers used:
 27572 ;;		None
 27573 ;; Tracked objects:
 27574 ;;		On entry : 0/0
 27575 ;;		On exit  : 3F/39
 27576 ;;		Unchanged: 0/0
 27577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27582 ;;Total ram usage:        0 bytes
 27583 ;; Hardware stack levels used:    1
 27584 ;; This function calls:
 27585 ;;		Nothing
 27586 ;; This function is called by:
 27587 ;;		Interrupt level 2
 27588 ;; This function uses a non-reentrant model
 27589 ;;
 27590                           
 27591                           	psect	text147
 27592  018E00                     __ptext147:
 27593                           	opt callstack 0
 27594  018E00                     _DMA1_DMADCNT_ISR:
 27595                           	opt callstack 14
 27596                           
 27597                           ; BSR set to: 0
 27598                           ;incstack = 0
 27599  018E00  EE14  F000         	lfsr	1,___inthi_sp
 27600                           
 27601                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27602  018E04  0139               	movlb	57	; () banked
 27603  018E06  93A2               	bcf	162,1,b	;volatile
 27604                           
 27605                           ; BSR set to: 57
 27606  018E08  0011               	retfie		f
 27607  018E0A                     __end_of_DMA1_DMADCNT_ISR:
 27608                           	opt callstack 0
 27609                           
 27610 ;; *************** function _DMA1_DMAA_ISR *****************
 27611 ;; Defined at:
 27612 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27613 ;; Parameters:    Size  Location     Type
 27614 ;;		None
 27615 ;; Auto vars:     Size  Location     Type
 27616 ;;		None
 27617 ;; Return value:  Size  Location     Type
 27618 ;;                  1    wreg      void 
 27619 ;; Registers used:
 27620 ;;		None
 27621 ;; Tracked objects:
 27622 ;;		On entry : 0/0
 27623 ;;		On exit  : 3F/39
 27624 ;;		Unchanged: 0/0
 27625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27630 ;;Total ram usage:        0 bytes
 27631 ;; Hardware stack levels used:    1
 27632 ;; This function calls:
 27633 ;;		Nothing
 27634 ;; This function is called by:
 27635 ;;		Interrupt level 2
 27636 ;; This function uses a non-reentrant model
 27637 ;;
 27638                           
 27639                           	psect	text148
 27640  018E0C                     __ptext148:
 27641                           	opt callstack 0
 27642  018E0C                     _DMA1_DMAA_ISR:
 27643                           	opt callstack 14
 27644                           
 27645                           ; BSR set to: 57
 27646                           ;incstack = 0
 27647  018E0C  EE14  F000         	lfsr	1,___inthi_sp
 27648                           
 27649                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27650  018E10  0139               	movlb	57	; () banked
 27651  018E12  97A2               	bcf	162,3,b	;volatile
 27652                           
 27653                           ; BSR set to: 57
 27654  018E14  0011               	retfie		f
 27655  018E16                     __end_of_DMA1_DMAA_ISR:
 27656                           	opt callstack 0
 27657                           
 27658 ;; *************** function _DMA1_DMAOR_ISR *****************
 27659 ;; Defined at:
 27660 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27661 ;; Parameters:    Size  Location     Type
 27662 ;;		None
 27663 ;; Auto vars:     Size  Location     Type
 27664 ;;		None
 27665 ;; Return value:  Size  Location     Type
 27666 ;;                  1    wreg      void 
 27667 ;; Registers used:
 27668 ;;		None
 27669 ;; Tracked objects:
 27670 ;;		On entry : 0/0
 27671 ;;		On exit  : 3F/39
 27672 ;;		Unchanged: 0/0
 27673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27678 ;;Total ram usage:        0 bytes
 27679 ;; Hardware stack levels used:    1
 27680 ;; This function calls:
 27681 ;;		Nothing
 27682 ;; This function is called by:
 27683 ;;		Interrupt level 2
 27684 ;; This function uses a non-reentrant model
 27685 ;;
 27686                           
 27687                           	psect	text149
 27688  018E18                     __ptext149:
 27689                           	opt callstack 0
 27690  018E18                     _DMA1_DMAOR_ISR:
 27691                           	opt callstack 14
 27692                           
 27693                           ; BSR set to: 57
 27694                           ;incstack = 0
 27695  018E18  EE14  F000         	lfsr	1,___inthi_sp
 27696                           
 27697                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27698  018E1C  0139               	movlb	57	; () banked
 27699  018E1E  95A2               	bcf	162,2,b	;volatile
 27700                           
 27701                           ; BSR set to: 57
 27702  018E20  0011               	retfie		f
 27703  018E22                     __end_of_DMA1_DMAOR_ISR:
 27704                           	opt callstack 0
 27705                           
 27706                           ;
 27707                           ; Interrupt Vector Table @ 0x8
 27708                           ;
 27709                           
 27710                           	psect	ivt0x8
 27711  000008                     __pivt0x8:
 27712                           	opt callstack 0
 27713  000008                     ivt0x8_base:
 27714                           	opt callstack 0
 27715                           
 27716                           ; Vector 0 : SWINT
 27717  000008  6397               	dw	_Default_ISR shr (0+2)
 27718                           
 27719                           ; Vector 1 : HLVD
 27720  00000A  6397               	dw	_Default_ISR shr (0+2)
 27721                           
 27722                           ; Vector 2 : OSF
 27723  00000C  6397               	dw	_Default_ISR shr (0+2)
 27724                           
 27725                           ; Vector 3 : CSW
 27726  00000E  6397               	dw	_Default_ISR shr (0+2)
 27727                           
 27728                           ; Vector 4 : NVM
 27729  000010  6397               	dw	_Default_ISR shr (0+2)
 27730                           
 27731                           ; Vector 5 : SCAN
 27732  000012  6397               	dw	_Default_ISR shr (0+2)
 27733                           
 27734                           ; Vector 6 : CRC
 27735  000014  6397               	dw	_Default_ISR shr (0+2)
 27736                           
 27737                           ; Vector 7 : IOC
 27738  000016  6397               	dw	_Default_ISR shr (0+2)
 27739                           
 27740                           ; Vector 8 : INT0
 27741  000018  6376               	dw	_INT0_ISR shr (0+2)
 27742                           
 27743                           ; Vector 9 : ZCD
 27744  00001A  6397               	dw	_Default_ISR shr (0+2)
 27745                           
 27746                           ; Vector 10 : AD
 27747  00001C  61F8               	dw	_ADCC_ISR shr (0+2)
 27748                           
 27749                           ; Vector 11 : ADT
 27750  00001E  5F84               	dw	_ADCC_ThresholdISR shr (0+2)
 27751                           
 27752                           ; Vector 12 : CMP1
 27753  000020  6397               	dw	_Default_ISR shr (0+2)
 27754                           
 27755                           ; Vector 13 : SMT1
 27756  000022  6397               	dw	_Default_ISR shr (0+2)
 27757                           
 27758                           ; Vector 14 : SMT1PRA
 27759  000024  6397               	dw	_Default_ISR shr (0+2)
 27760                           
 27761                           ; Vector 15 : SMT1PRW
 27762  000026  6397               	dw	_Default_ISR shr (0+2)
 27763                           
 27764                           ; Vector 16 : DMA1SCNT
 27765  000028  637A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27766                           
 27767                           ; Vector 17 : DMA1DCNT
 27768  00002A  6380               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27769                           
 27770                           ; Vector 18 : DMA1OR
 27771  00002C  6386               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27772                           
 27773                           ; Vector 19 : DMA1A
 27774  00002E  6383               	dw	_DMA1_DMAA_ISR shr (0+2)
 27775                           
 27776                           ; Vector 20 : SPI1RX
 27777  000030  6397               	dw	_Default_ISR shr (0+2)
 27778                           
 27779                           ; Vector 21 : SPI1TX
 27780  000032  6397               	dw	_Default_ISR shr (0+2)
 27781                           
 27782                           ; Vector 22 : SPI1
 27783  000034  6397               	dw	_Default_ISR shr (0+2)
 27784                           
 27785                           ; Vector 23 : I2C1RX
 27786  000036  6397               	dw	_Default_ISR shr (0+2)
 27787                           
 27788                           ; Vector 24 : I2C1TX
 27789  000038  6397               	dw	_Default_ISR shr (0+2)
 27790                           
 27791                           ; Vector 25 : I2C1
 27792  00003A  6397               	dw	_Default_ISR shr (0+2)
 27793                           
 27794                           ; Vector 26 : I2C1E
 27795  00003C  6397               	dw	_Default_ISR shr (0+2)
 27796                           
 27797                           ; Vector 27 : U1RX
 27798  00003E  62A3               	dw	_UART1_rx_vect_isr shr (0+2)
 27799                           
 27800                           ; Vector 28 : U1TX
 27801  000040  6299               	dw	_UART1_tx_vect_isr shr (0+2)
 27802                           
 27803                           ; Vector 29 : U1E
 27804  000042  6397               	dw	_Default_ISR shr (0+2)
 27805                           
 27806                           ; Vector 30 : U1
 27807  000044  6397               	dw	_Default_ISR shr (0+2)
 27808                           
 27809                           ; Vector 31 : TMR0
 27810  000046  6397               	dw	_Default_ISR shr (0+2)
 27811                           
 27812                           ; Vector 32 : TMR1
 27813  000048  6397               	dw	_Default_ISR shr (0+2)
 27814                           
 27815                           ; Vector 33 : TMR1G
 27816  00004A  6397               	dw	_Default_ISR shr (0+2)
 27817                           
 27818                           ; Vector 34 : TMR2
 27819  00004C  6397               	dw	_Default_ISR shr (0+2)
 27820                           
 27821                           ; Vector 35 : CCP1
 27822  00004E  6397               	dw	_Default_ISR shr (0+2)
 27823                           
 27824                           ; Vector 36 : Undefined
 27825  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27826                           
 27827                           ; Vector 37 : NCO1
 27828  000052  6397               	dw	_Default_ISR shr (0+2)
 27829                           
 27830                           ; Vector 38 : CWG1
 27831  000054  6397               	dw	_Default_ISR shr (0+2)
 27832                           
 27833                           ; Vector 39 : CLC1
 27834  000056  6397               	dw	_Default_ISR shr (0+2)
 27835                           
 27836                           ; Vector 40 : INT1
 27837  000058  613A               	dw	_INT1_ISR shr (0+2)
 27838                           
 27839                           ; Vector 41 : CMP2
 27840  00005A  6397               	dw	_Default_ISR shr (0+2)
 27841                           
 27842                           ; Vector 42 : DMA2SCNT
 27843  00005C  6397               	dw	_Default_ISR shr (0+2)
 27844                           
 27845                           ; Vector 43 : DMA2DCNT
 27846  00005E  6397               	dw	_Default_ISR shr (0+2)
 27847                           
 27848                           ; Vector 44 : DMA2OR
 27849  000060  6397               	dw	_Default_ISR shr (0+2)
 27850                           
 27851                           ; Vector 45 : DMA2A
 27852  000062  6397               	dw	_Default_ISR shr (0+2)
 27853                           
 27854                           ; Vector 46 : I2C2RX
 27855  000064  6397               	dw	_Default_ISR shr (0+2)
 27856                           
 27857                           ; Vector 47 : I2C2TX
 27858  000066  6397               	dw	_Default_ISR shr (0+2)
 27859                           
 27860                           ; Vector 48 : I2C2
 27861  000068  6397               	dw	_Default_ISR shr (0+2)
 27862                           
 27863                           ; Vector 49 : I2C2E
 27864  00006A  6397               	dw	_Default_ISR shr (0+2)
 27865                           
 27866                           ; Vector 50 : U2RX
 27867  00006C  62B7               	dw	_UART2_rx_vect_isr shr (0+2)
 27868                           
 27869                           ; Vector 51 : U2TX
 27870  00006E  62AD               	dw	_UART2_tx_vect_isr shr (0+2)
 27871                           
 27872                           ; Vector 52 : U2E
 27873  000070  6397               	dw	_Default_ISR shr (0+2)
 27874                           
 27875                           ; Vector 53 : U2
 27876  000072  6397               	dw	_Default_ISR shr (0+2)
 27877                           
 27878                           ; Vector 54 : TMR3
 27879  000074  6397               	dw	_Default_ISR shr (0+2)
 27880                           
 27881                           ; Vector 55 : TMR3G
 27882  000076  6397               	dw	_Default_ISR shr (0+2)
 27883                           
 27884                           ; Vector 56 : TMR4
 27885  000078  6397               	dw	_Default_ISR shr (0+2)
 27886                           
 27887                           ; Vector 57 : CCP2
 27888  00007A  6397               	dw	_Default_ISR shr (0+2)
 27889                           
 27890                           ; Vector 58 : Undefined
 27891  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27892                           
 27893                           ; Vector 59 : CWG2
 27894  00007E  6397               	dw	_Default_ISR shr (0+2)
 27895                           
 27896                           ; Vector 60 : CLC2
 27897  000080  6397               	dw	_Default_ISR shr (0+2)
 27898                           
 27899                           ; Vector 61 : INT2
 27900  000082  6397               	dw	_Default_ISR shr (0+2)
 27901                           
 27902                           ; Vector 62 : Undefined
 27903  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27904                           
 27905                           ; Vector 63 : Undefined
 27906  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27907                           
 27908                           ; Vector 64 : Undefined
 27909  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27910                           
 27911                           ; Vector 65 : Undefined
 27912  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27913                           
 27914                           ; Vector 66 : Undefined
 27915  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27916                           
 27917                           ; Vector 67 : Undefined
 27918  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27919                           
 27920                           ; Vector 68 : Undefined
 27921  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27922                           
 27923                           ; Vector 69 : Undefined
 27924  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27925                           
 27926                           ; Vector 70 : TMR5
 27927  000094  6032               	dw	_TMR5_ISR shr (0+2)
 27928                           
 27929                           ; Vector 71 : TMR5G
 27930  000096  6397               	dw	_Default_ISR shr (0+2)
 27931                           
 27932                           ; Vector 72 : TMR6
 27933  000098  6338               	dw	_TMR6_ISR shr (0+2)
 27934                           
 27935                           ; Vector 73 : CCP3
 27936  00009A  6397               	dw	_Default_ISR shr (0+2)
 27937                           
 27938                           ; Vector 74 : CWG3
 27939  00009C  6397               	dw	_Default_ISR shr (0+2)
 27940                           
 27941                           ; Vector 75 : CLC3
 27942  00009E  6397               	dw	_Default_ISR shr (0+2)
 27943                           
 27944                           ; Vector 76 : Undefined
 27945  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27946                           
 27947                           ; Vector 77 : Undefined
 27948  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27949                           
 27950                           ; Vector 78 : Undefined
 27951  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27952                           
 27953                           ; Vector 79 : Undefined
 27954  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27955                           
 27956                           ; Vector 80 : CCP4
 27957  0000A8  6397               	dw	_Default_ISR shr (0+2)
 27958                           
 27959                           ; Vector 81 : CLC4
 27960  0000AA  6397               	dw	_Default_ISR shr (0+2)
 27961  0000AC                     ivt0x8_undefint:
 27962                           	opt callstack 0
 27963  0000AC  00FF               	reset	
 27964                           
 27965                           	psect	text150
 27966  000000                     __ptext150:
 27967                           	opt callstack 0
 27968                           
 27969                           	psect	rparam
 27970  0000                     
 27971                           	psect	temp
 27972  000032                     btemp:
 27973                           	opt callstack 0
 27974  000032                     	ds	32
 27975  0000                     wtemp0	set	btemp
 27976  0000                     wtemp1	set	btemp+2
 27977  0000                     wtemp2	set	btemp+4
 27978  0000                     wtemp3	set	btemp+6
 27979  0000                     wtemp4	set	btemp+8
 27980  0000                     wtemp5	set	btemp+10
 27981  0000                     wtemp8	set	btemp+1
 27982  0000                     ttemp0	set	btemp
 27983  0000                     ttemp1	set	btemp+3
 27984  0000                     ttemp2	set	btemp+6
 27985  0000                     ttemp3	set	btemp+9
 27986  0000                     ttemp5	set	btemp+1
 27987  0000                     ttemp6	set	btemp+4
 27988  0000                     ttemp7	set	btemp+8
 27989  0000                     ltemp0	set	btemp
 27990  0000                     ltemp1	set	btemp+4
 27991  0000                     ltemp2	set	btemp+8
 27992  0000                     lltemp0	set	btemp
 27993  0000                     lltemp1	set	btemp+8
 27994  0000                     lltemp2	set	btemp+16
 27995  0000                     lltemp3	set	btemp+24
 27996                           tosu	equ	0x3FFF
 27997                           tosh	equ	0x3FFE
 27998                           tosl	equ	0x3FFD
 27999                           stkptr	equ	0x3FFC
 28000                           pclatu	equ	0x3FFB
 28001                           pclath	equ	0x3FFA
 28002                           pcl	equ	0x3FF9
 28003                           tblptru	equ	0x3FF8
 28004                           tblptrh	equ	0x3FF7
 28005                           tblptrl	equ	0x3FF6
 28006                           tablat	equ	0x3FF5
 28007                           prodh	equ	0x3FF4
 28008                           prodl	equ	0x3FF3
 28009                           indf0	equ	0x3FEF
 28010                           postinc0	equ	0x3FEE
 28011                           postdec0	equ	0x3FED
 28012                           preinc0	equ	0x3FEC
 28013                           plusw0	equ	0x3FEB
 28014                           fsr0h	equ	0x3FEA
 28015                           fsr0l	equ	0x3FE9
 28016                           wreg	equ	0x3FE8
 28017                           indf1	equ	0x3FE7
 28018                           postinc1	equ	0x3FE6
 28019                           postdec1	equ	0x3FE5
 28020                           preinc1	equ	0x3FE4
 28021                           plusw1	equ	0x3FE3
 28022                           fsr1h	equ	0x3FE2
 28023                           fsr1l	equ	0x3FE1
 28024                           bsr	equ	0x3FE0
 28025                           indf2	equ	0x3FDF
 28026                           postinc2	equ	0x3FDE
 28027                           postdec2	equ	0x3FDD
 28028                           preinc2	equ	0x3FDC
 28029                           plusw2	equ	0x3FDB
 28030                           fsr2h	equ	0x3FDA
 28031                           fsr2l	equ	0x3FD9
 28032                           status	equ	0x3FD8


Data Sizes:
    Strings     426
    Constant    144
    Data        258
    BSS         1438
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     239
    BANK2           256      0     252
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5198_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4062tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  311348
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   28176
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  168252
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83861
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   27123
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56826
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56562
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   28145
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28324
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26898
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26769
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26437
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6AE      58        0.0%
DATA                 0      0     6AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec  1 18:57:56 2019

                     _SPI1_Exchange8bit 8BF6                __end_of_set_display_info 8C50  
                                     _C 0100                                       _D 0500  
                                     _H 00EF                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FDC5                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 899A            __end_of_start_switch_handler 8BF6  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8E4A                             __CFG_LVP$ON 000000  
                                   l171 8D7E                                     l701 87AE  
                                   l581 8782                                     l835 8C04  
                                   _GIE 01FE97                                     _abs 82C4  
                                   _pad 6D30                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8D12                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8BB4                      _UART1_Transmit_ISR 875C  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8B92  
                          __CFG_ZCD$OFF 000000                                    l2003 520A  
                                  l1028 84E2                                    l2024 448E  
                                  l1502 7A04                                    l1264 1F90  
                                  l1256 1DE0                                    l1281 2582  
                                  l2074 1D78                                    l1362 812E  
                                  l1274 202E                                    l1266 1F96  
                                  l1276 20F4                                    l1517 85B2  
                                  l1277 2202                                    l1722 62BC  
                                  l2362 6652                                    l1635 8C4C  
                                  l1803 7B2A                                    l1812 715A  
                                  l2358 74CA                                    l2369 6726  
                                  l1921 123A                                    l1578 857E  
                                  l1498 76EA                                    l1595 6F4E  
                                  l1587 5BCA                                    l1683 3FC4  
                                  l2636 359A                                    l2396 65C4  
                                  l2717 2DDE                                    l1950 066A  
                  _ADCC_StartConversion 8D98                                    l2648 342A  
                                  l1865 6D8C                                    l2681 3B14  
                                  l2819 58C8                                    l7100 2C64  
                                  l7012 2722                                    l2780 6452  
                                  l1885 40A8                                    l1965 0B1A  
                                  l2757 5F34                                    l7110 2CD8  
                                  l7014 2728                                    l7006 26E2  
                                  l7120 2D48                                    l7024 277A  
                                  l7016 2758                                    l7200 6C4A  
                                  l2944 7CB4                                    l2929 60FC  
                                  l7130 2DA6                                    l7114 2D1E  
                                  l6402 2E7E                                    l2883 6C0E  
                                  l6420 2F2E                                    l2788 8304  
                                  l7204 6C62                                    l7300 654C  
                                  l2957 7C30                                    l6510 328E  
                                  l6430 2F84                                    l6414 2EFC  
                                  l6406 2E94                                    l7150 6754  
                                  l7222 6D16                                    l7214 6CE2  
                                  l7230 7452                                    l7128 2D8C  
                                  l6512 32A0                                    l6520 32DC  
                                  l6432 2FB4                                    l6408 2EC4  
                                  l7082 2BEE                                    l6426 2F6E  
                                  l7162 678A                                    l7234 7494  
                                  l7306 655C                                    l9012 877E  
                                  l7076 2BD2                                    l6604 357A  
                                  l6532 33B4                                    l6516 32AA  
                                  l7156 676A                                    l7252 66A0  
                                  l7308 6572                                    l8300 5DFE  
                                  l7086 2C14                                    l6550 344C  
                                  l6542 340E                                    l6534 33DA  
                                  l6438 2FD6                                    l7326 826C  
                                  l7238 74C8                                    l7246 6610  
                                  l6710 4A90                                    l8310 5E60  
                                  l8302 5E14                                    l7096 2C5E  
                                  l6552 345E                                    l7184 6864  
                                  l7176 6830                                    l7264 6724  
                                  l7256 66EE                                    l7272 829A  
                                  l8312 5E7E                                    l8304 5E32  
                                  l9034 87AA                                    l6570 3498  
                                  l6482 31A6                                    l8162 8B42  
                                  l7282 64AE                                    l6714 4AD8  
                                  l8242 85BC                                    l8322 5EB2  
                                  l8314 5E94                                    l9060 84CA  
                                  l6556 346A                                    l6484 31B8  
                                  l6492 31F2                                    l6468 3114  
                                  l6396 2E3E                                    l6812 5A64  
                                  l6804 59B8                                    l7196 6C38  
                                  l6652 63F0                                    l6708 4A40  
                                  l8332 5F14                                    l9204 7134  
                                  l6582 34F6                                    l6566 3492  
                                  l6478 3186                                    l6638 82F4  
                                  l6910 391C                                    l6902 38B6  
                                  l6662 644A                                    l6718 4B46  
                                  l6592 3522                                    l6488 31C2  
                                  l6752 5440                                    l6904 38C8  
                                  l6912 3920                                    l6832 35FA  
                                  l6656 63F4                                    l6680 7CA4  
                                  l6736 7C20                                    l8272 8894  
                                  l6842 3650                                    l7298 6530  
                                  l8290 5D84                                    l9162 7596  
                                  l6596 353A                                    l6764 54DA  
                                  l6924 396A                                    l6852 36D8  
                                  l6844 3680                                    l8702 840C  
                                  l9270 7CF2                                    l6598 354A  
                                  l6758 5494                                    l6942 39E0  
                                  l6918 394E                                    l6870 379C  
                                  l6862 372E                                    l6838 363A  
                                  l6694 4922                                    l9166 75D4  
                                  l9182 7068                                    l8800 8594  
                                  l7840 5678                                    l6776 55AC  
                                  l6952 3A54                                    l6928 3990  
                                  l6864 375E                                    l7850 570E  
                                  l7842 569A                                    l6970 3AE8  
                                  l6938 39DA                                    l6858 3718  
                                  l8298 5DF0                                    l9194 70C4  
                                  l9276 7D02                                    l7860 5776  
                                  l6796 5930                                    l6972 3AF8  
                                  l6964 3AC0                                    l6884 37F0  
                                  l6876 37D6                                    l7862 57B4  
                                  l6958 3A90                                    l6894 3880  
                                  l8920 68BC                                    l8912 6892  
                                  l7856 573A                                    l8914 68A2  
                                  l6994 2654                                    l8762 616A  
                                  l8754 613E                                    l7866 581C  
                                  l7858 5752                                    l9714 6B24  
                                  l9810 4100                                    l8842 3B50  
                                  l8940 698E                                    l8932 6920  
                                  l8916 68A8                                    l8924 68C4  
                                  l6996 265A                                    l6988 2614  
                                  l7876 58B8                                    l9740 7930  
                                  l9820 4312                                    l7892 5FC6  
                                  l8852 3C6E                                    l8836 3B20  
                                  l8918 68AE                                    l8926 68F0  
                                  l6998 268A                                    l8766 6182  
                                  l9726 7866                                    l9750 6D84  
                                  l9806 40E2                                    l7894 6032  
                                  l9736 78F2                                    l9728 7888  
                                  l9760 6E1C                                    l9752 6D96  
                                  l9840 43C4                                    l8864 3D7A  
                                  l8856 3D48                                    l8698 83E2  
                                  l9746 6D5C                                    l9922 0396  
                                  l9906 02FC                                    l9914 032A  
                                  l8882 3F92                                    l8890 3FA4  
                                  l9756 6DD2                                    l9772 7B4C  
                                  l9844 4400                                    l9932 04D2  
                                  l8876 3EF6                                    l8868 3E16  
                                  l8956 7AE4                                    l9774 7B78  
                                  l9766 7384                                    l9950 058E  
                                  l9926 0406                                    l9870 00F0  
                                  STR_1 FF60                                    l9944 0554  
                                  l9928 0470                                    STR_2 FFB2  
                                  STR_3 FFE0                                    l9890 0216  
                                  l9858 00AC                                    STR_4 FF4F  
                                  STR_5 FF71                                    l9964 05F6  
                                  l9956 0594                                    l9948 057C  
                                  l9892 022C                                    STR_6 FFB2  
                                  STR_7 FFE0                                    l9798 4098  
                                  l9982 06B8                                    l9966 0602  
                                  l9878 0146                                    STR_8 FF3E  
                                  STR_9 FF93                                    l9992 077A  
                                  l9888 01EA                                    l9896 0258  
                                  l9986 06F0                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 3506  
                                  _T2PR 003FAB                                    u5110 82D8  
                                  u5120 6374                                    u5210 7C62  
                                  u5050 8692                                    u6020 2C56  
                                  u5220 7C64                                    u5060 8694  
                                  u5125 636A                                    u5310 4ABE  
                                  u5400 86F4                                    u6200 6C8E  
                                  u5240 48BA                                    u6130 67B6  
                                  u5170 6442                                    u5250 4906  
                                  u4610 86C2                                    _T6PR 003F93  
                                  u5315 4AB4                                    u6060 2CB2  
                                  u5420 543A                                    u6220 6D02  
                                  u5180 6444                                    u4620 86C4  
                                  u5340 845A                                    _PMD0 0039C0  
                                  u5165 6424                                    u5245 48B0  
                                  _PMD1 0039C1                                    u6070 2CEC  
                                  u5510 5636                                    u6150 6850  
                                  u5350 845C                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u6080 2D32  
                                  u4720 313A                                    u5440 5490  
                                  u5600 5A9C                                    u6320 8296  
                                  u6400 657A                                    u5360 7BDE  
                                  _PMD4 0039C4                                    u6065 2CA2  
                                  _PMD5 0039C5                                    u4730 315A  
                                  u6330 648E                                    u5290 49E6  
                                  u5370 7BE0                                    u8010 5EA8  
                                  _PMD6 0039C6                                    u4731 3154  
                                  u5451 549A                                    u5275 4940  
                                  _PMD7 0039C7                                    u5460 54D4  
                                  u5620 5AEE                                    u5540 592A  
                                  u6260 74C4                                    u6420 65A4  
                                  u6340 64A2                                    u5276 4946  
                                  u5277 4954                                    u5390 86F2  
                                  u6430 8248                                    u5470 5506  
                                  u6350 64DC                                    u6335 6484  
                                  u5295 49DC                                    u4920 3470  
                                  u4840 32D2                                    u6440 8268  
                                  u5560 5980                                    u5800 39D2  
                                  u8050 7E86                                    u4770 31EA  
                                  u5490 55E4                                    u5570 59B2  
                                  u6355 64D2                                    u4940 348A  
                                  u4780 320A                                    u4748 315C  
                                  u5580 59E4                                    u4845 32C2  
                                  u8150 611C                                    u9030 6B18  
                                  u8214 3B3A                                    u4775 31DA  
                                  u8215 3B34                                    u4880 33FC  
                                  u7440 570A                                    u9200 406C  
                                  u5840 3A2E                                    u5760 3948  
                                  u8320 3E5A                                    u9050 6B94  
                                  u5850 3A68                                    u9130 73FE  
                                  u8314 3E52                                    u8234 3B6A  
                                  u8075 7EBA                                    u8315 3E4C  
                                  u8235 3B64                                    u8076 7EBC  
                                  u8068 7E88                                    u4980 34E6  
                                  u7460 5862                                    u9060 78B6  
                                  u9220 407E                                    u5860 3AA4  
                                  u7540 60BE                                    u5845 3A1E  
                                  u5950 2768                                    u7470 5864  
                                  u9310 439A                                    u8254 3B8C  
                                  u8255 3B86                                    u9240 40CE  
                                  u8440 7AD0                                    u4985 34D6  
                                  u9137 73F0                                    u9250 4326  
                                  u9170 3FFA                                    u8274 3D62  
                                  u9067 78A8                                    u8275 3D5C  
                                  u9180 3FFC                                    u9500 0562  
                                  u9420 02A6                                    u5965 28FC  
                                  u9261 4356                                    u9270 436C  
                                  u9430 02A8                                    u9350 00DA  
                                  u8294 3E30                                    u8470 7B16  
                                  u5975 29C4                                    u9271 436A  
                                  u8295 3E2A                                    u9280 4380  
                                  u5985 2B8C                                    u9290 4384  
                                  u9530 05C6                                    u8458 7AD2  
                                  u9380 0194                                    u7925 8496  
                                  u9470 050E                                    u9390 0196  
                                  u9800 10B8                                    u9640 0A18  
                                  u8488 7B18                                    u9570 0648  
                                  _PLLR 01CEE0                                    u9820 116E  
                                  u9740 0EE4                                    u9900 52A2  
                                  u9830 1170                                    u9910 52E8  
                                  u9940 53C4                                    u9917 52DA  
                                  u9960 4464                                    u9990 454C  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 880A                           __CFG_FCMEN$ON 000000  
                                  _dbuf 017C                                    _atoi 565E  
                                  _ctoa 7B2E                                    _main 1D82  
                                  _dtoa 3FCA                                    _nanf 7FA6  
                                  _seed 01CC                                    _prec 001D  
                                  _nout 0019                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 5120                                    btemp 0032  
                                  _xtoa 444A                  __end_of_check_adc_scan 8E42  
                         ___fpclassifyf 62C6                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 8C14  
             __size_of_clear_hid_pflags 0024                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 8A8C                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 8DE6  
                      __end_of_INT1_ISR 8526          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 76F2           __end_of_OSCILLATOR_Initialize 8D84  
                                 l10002 0926                                   l10102 0FD6  
                                 l10104 0FF0                                   l10040 0C32  
                                 l10024 0B12                                   l10016 0A48  
                                 l10114 1092                                   l10026 0B34  
                                 l10140 119A                                   l10124 10E2  
                                 l10052 0CBA                                   l10060 0D24  
                                 l10212 447E                                   l10160 518C  
                                 l10232 4554                                   l10224 44F4  
                                 l10400 1B2A                                   l10320 14F8  
                                 l10218 44B8                                   l10068 0D90  
                                 l10076 0EA2                                   l10180 527C  
                                 l10420 1D00                                   l10316 14A8  
                                 l10190 5336                                   l10414 1CA6  
                                 l10318 14E2                                   l10430 1D24  
                                 l10088 0F3A                                   l10184 52AC  
                                 l10176 5240                                   l10272 47BA  
                                 l10248 464A                                   l10256 46D0  
                                 l10424 1D04                                   l10336 165C  
                                 l10194 5362                                   l10370 191C  
                                 l10346 16F2                                   l10452 4C08  
                                 l10198 539E                                   l10390 1A7C  
                                 l10366 18E8                                   l10358 1830  
                                 l10294 1326                                   l10702 5CC8  
                                 l10296 1360                                   l10472 4DDE  
                                 l10464 4D30                                   l10536 77F2  
                                 l10298 1376                                   l10458 4CC6  
                                 l10570 6E66                                   l10484 771C  
                                 l10820 1FFC                                   l10486 775C  
                                 l10718 5D2C                                   l10806 1F9A  
                                 l10840 2298                                   l10808 1FC8  
                                 l10762 1DE8                                   l10844 22FA  
                                 l10828 2020                                   l10764 1DFA  
                                 l10756 1DC2                                   PRLOCK 0039EF  
                                 l10870 24EA                                   l10854 2464  
                                 l10862 24AE                                   l10758 1DCA  
                                 l10688 5B9A                                   l10856 248E  
                                 l10884 2532                                   l10876 24FC  
                                 l10878 2514                                   l10888 2558  
                                 l10898 25AC                         __end_of___aodiv 565E  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 35A4                                   _ADCLK 003EFF  
                       __end_of___aomod 5B12                                   _ADPCH 003EF1  
                       __end_of___fldiv 3B1E                                   _ADREF 003EFD  
                       __end_of___awdiv 687E                         __end_of___flneg 82C4  
                                 STR_11 FF82                                   STR_20 FEA6  
                                 STR_12 FEB9                                   STR_21 FF93  
                                 STR_13 FEF2                                   STR_30 FE80  
                                 STR_22 FF93                                   STR_14 FEDF  
                                 STR_23 FF82                                   STR_31 FFCD  
                                 STR_15 FF2B                                   STR_32 FFCD  
                                 STR_24 FFFC                                   STR_16 FF05  
                                 STR_25 FFF9                                   STR_33 FFA3  
                                 STR_17 FF18                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFA3                                   STR_50 FFEA  
                                 STR_18 FECC                                   STR_35 FFA3  
                                 STR_51 FFF2                                   STR_27 FFC1  
                                 STR_19 FEA6                                   STR_28 FFD7  
                                 STR_36 FE55                         __end_of___awmod 6D30  
                                 STR_45 FE7F                                   STR_29 FE80  
                                 STR_54 FFF6                                   STR_46 FFE6  
                                 STR_38 FE93                                   STR_47 FFEE  
                                 STR_39 FE6D                                   STR_56 FFF6  
                                 _ADRPT 003EEC                         __end_of___flmul 2DE8  
                       __end_of___flsub 8350                         __end_of___fltol 65CE  
                                 u10000 45A0                                   u10010 45A2  
                                 u10100 4746                                   u10110 474A  
                                 u10030 4600                                   u10040 4602  
                                 u10210 1540                                   u10060 46CC  
                                 u10220 1542                                   u10070 46EC  
                                 u10310 19D6                                   u10230 1568  
                                 u10320 19D8                                   u10160 13BE  
                                 u10081 471C                                   u10065 46AE  
                                 u10090 4732                                   u10170 13C0  
                                 u10091 4730                                   u10180 13E6  
                                 u10420 4E52                                   u10360 1B7E  
                                 u10280 1746                                   u10450 77D2  
                                 u10540 5D18                                   u10550 5D1A  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8E5C                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8A64  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 8124  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8CFA  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 02C4                                   _fputc 6AF4  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 8466  
                                 _fputs 78E2                         __end_of_isdigit 86FE  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 8606                                   _width 001B  
                                 _putch 8CC4                         __end_of_islower 869E  
                       __end_of_isspace 827C                _INT1_SetInterruptHandler 899A  
                       __end_of_isupper 86CE                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 894A  
           _UART1_SetRxInterruptHandler 8922                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 705C                         __end_of_tolower 7CBE  
                       __end_of_strncmp 6106                         __end_of_toupper 7C3A  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8AB2                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8396                   __end_of_ringBufS_init 8882  
                       __initialization 715E                       _UART2_rx_vect_isr 8ADC  
                          __end_of_atoi 58D2                            __end_of_ctoa 7BB6  
                          __end_of_main 25BE                            __end_of_dtoa 444A  
                          __end_of_nanf 8008                            __end_of_stoa 53DE  
                          __end_of_xtoa 4804                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8D2A  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 8972  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 8A8A                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 87B4                         _PWM8_Initialize 8D58  
                      _UART1_Initialize 7F42                       _UART2_tx_vect_isr 8AB4  
                    _UART2_Transmit_ISR 8788                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 7EDE                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 8466                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 8116                    _start_switch_handler 8BD6  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8DC8                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                u811_20 8A42                                  u811_26 8A44  
                                _OSCFRQ 0039DF                                  u398_48 8BC2  
                                u840_24 6984                                  u840_25 6980  
                                u842_20 69AA                                  u833_28 6898  
                                u842_26 69AC                                  u850_28 8BA0  
                                u836_20 68B8                                  u836_21 68B2  
                                u861_28 8B5A                                  u858_48 8B7E  
                  __size_of_hid_display 0102                                  u877_44 7D22  
                                u877_45 7D1C                        __end_of___xxtofl 5F3E  
 __end_of_ADCC_DischargeSampleCapacitor 8E2A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8E22                __end_of_send_lcd_cmd_dma 822A  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8B02  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8DF6  
                      _UART2_Initialize 806A                                  _WaitMs 859A  
                       _conv_raw_result 3B1E                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 65CE  
                                ___fleq 7410                       _ADCC_ThresholdISR 7E10  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 797A  
                                _efgtoa 0000                                  _floorf 4804  
                    ?_ADCC_ThresholdISR 0052                                  _memset 4B70  
                  __size_of_help_button 0038                                  clear_0 71CC  
                                clear_1 71E0                                  clear_2 71F2  
                                clear_3 71FE                                  clear_4 720A  
                                clear_5 7216                                  clear_6 7222  
                                clear_7 722E                                  clear_8 723A  
                                _printf 8008                      _eaDogM_WriteString 779A  
                                _strcpy 733C                               ?_ADCC_ISR 0052  
                                _strlen 7840                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 7DA6                          _PMD_Initialize 8D84  
             __end_of_UART2_tx_vect_isr 8ADA                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7F42                            __mediumconst FDC4  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 817E                        __end_of_vfprintf 779A  
                            _StartTimer 8526           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 83DC                       _SYSTEM_Initialize 8350  
                            __accesstop 0060                 __end_of__initialization 724C  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 8E3A                    __end_of_display_info 8E32  
             __end_of_CLKREF_Initialize 8E00                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 84A8  
                 _set_temp_display_help 8DAA                        _clear_hid_pflags 8B02  
             __end_of_ADCC_ThresholdISR 7E78                  __end_of_ringBufS_flush 7A0C  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 86FE  
                          __pidataBANK1 8D2A                            __pidataBANK2 74D4  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 6C18  
                         __end_of_fputs 797A                           __end_of_srand 863A  
                 __end_of_TMR5_CallBack 8B6E                           __end_of_putch 8CDE  
               __end_of_PWM8_Initialize 8D6E                 __end_of_TMR6_Initialize 87DE  
                     _adc_int_t_handler 7CBE                  __end_of_PMD_Initialize 8D98  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 8B92  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 8E0C                          _clear_adc_scan 8E4A  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 8396  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 0100  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 5B12                 __end_of_conv_raw_result 3FCA  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 8B4A  
                      _DMA1_DMADCNT_ISR 8E00              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 8CA8                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8972                 __end_of_ADCC_Initialize 7E10  
                            ??_TMR5_ISR 01EB               __end_of_adc_int_t_handler 7D3C  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8A12  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 89EA  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 8C50                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 8E50  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 8DE8  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 8882  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 84E8  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8CFA                                 __Lparam 0000  
              __end_of_UART1_Initialize 7FA6                       __end_of_hid_input 7B2E  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 53DE  
                               ___fladd 2DE8                                 ___aomod 58D2  
                               ___fldiv 35A4                                 ___awdiv 6730  
                               ___flneg 827C                                 ___awmod 6C18  
                               ___flmul 25BE                                 ___flsub 830A  
                               ___fltol 645C               __end_of_UART1_Receive_ISR 8C6E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 733C                                 __pcinit 715E  
              __end_of_mode_lamp_bright 8DD6                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 8DBA  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 8BD6  
                               __ptext2 7EDE                                 __ptext3 8D98  
                               __ptext4 8E22                                 __ptext5 8606  
                               __ptext6 7252                                 __ptext7 880A  
                               __ptext8 8832                                 __ptext9 8BF6  
                     _UART2_Receive_ISR 8C6E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8D6E  
                          __size_of_abs 0046                                 us552999 5648  
                               us563999 5B00                            __size_of_pad 0114  
                               _isalpha 8422                                 _isdigit 86CE  
                               us916999 3FE4                                 _mode_sw 0025  
                               us985999 5132                       __end_of_lp_filter 62C6  
                               us998999 44CA                                 _islower 866E  
                               _isspace 822A                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 80C8  
                               _isupper 869E              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6F52                                 _tolower 7C3A  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 5F3E  
                               _toupper 7BB6                    end_of_initialization 724C  
             __size_of_convert_adc_data 00B8     __end_of_UART1_SetTxInterruptHandler 8922  
           _UART1_SetTxInterruptHandler 88FA     __end_of_UART2_SetRxInterruptHandler 88FA  
           _UART2_SetRxInterruptHandler 88D2                       __end_of_set_vterm 8CC4  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8E5C               __end_of_UART2_Receive_ISR 8C8C  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 894A                            _display_help 8E32  
                 _TMR5_InterruptHandler 00C1                            _display_info 8E2A  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 8B26  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 8A3A  
           _ADCC_SetADIInterruptHandler 8A12                              _update_lcd 6E44  
                       _calc_model_data 4E5C                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 7D3C  
                       _SPI1_Initialize 8D42                   __end_of_get_vterm_ptr 875C  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 85D0            __end_of_INTERRUPT_Initialize 7EDE  
                            _vterm_dump 69C6                          __end_of___flge 6730  
                        __end_of___fleq 74D4    __end_of_INT0_DefaultInterruptHandler 8E66  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8E64  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 817E  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0228  
                        __end_of_floorf 4B70             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4E5C  
                        __end_of_printf 806A                __end_of_DMA1_DMADCNT_ISR 8E0A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8BD6  
                        __end_of_strcpy 7410                          __end_of_strlen 78E2  
                   start_initialization 715E    __end_of_TMR5_DefaultInterruptHandler 8A62  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 8A3A  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 830A  
                 __end_of_INT1_CallBack 8BB4               __size_of_set_display_info 001E  
                           __end_of_pad 6E44                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 885A                          _switch_handler 687E  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 645C  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 02BC  
              __end_of_DMA1_DMASCNT_ISR 8DF6                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR 8E18                     __end_of_hid_display 715E  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8B26  
                         _ringBufS_init 885A                             __pdataBANK0 00C7  
                           __pdataBANK1 01D4                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 866E                 __end_of_calc_model_data 5120  
                   __end_of_help_button 859A         __end_of_eaDogM_WriteStringAtPos 8606  
               __end_of_DMA1_Initialize 7DA6                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 89EA                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01EB                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 69C6                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8D58                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE55  
                      _convert_adc_data 7590               __size_of_ringBufS_put_dma 00AA  
                          _init_display 7252                  __end_of_DMA1_DMAOR_ISR 8E22  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 81D8  
                _PIN_MANAGER_Initialize 7A0C                    __end_of_wait_lcd_set 8E56  
                         __pmediumconst FDC4                               __ptext100 8972  
                             __ptext101 8D12                               __ptext110 899A  
                             __ptext102 8D42                               __ptext111 89C2  
                             __ptext103 8D58                               __ptext120 8E62  
                             __ptext112 817E                               __ptext104 8D84  
                             __ptext121 687E                               __ptext113 7D3C  
                             __ptext105 7A0C                               __ptext130 87E0  
                             __ptext122 80C8                               __ptext114 8DF6  
                             __ptext106 8D6E                               __ptext131 7CBE  
                             __ptext123 84A8                               __ptext115 7DA6  
                             __ptext107 7E78                               __ptext140 8788  
                             __ptext132 8E66                               __ptext124 8B4A  
                             __ptext116 89EA                               __ptext108 8E42  
                             __ptext141 8ADC                               __ptext133 8E68  
                             __ptext125 8A3A                               __ptext117 8A12  
                             __ptext109 863A                               __ptext150 0000  
                             __ptext142 8C6E                               __ptext134 7E10  
                             __ptext126 8DD8                               __ptext118 84E8  
                             __ptext143 8CE0                               __ptext135 8A64  
                             __ptext127 8BB4                               __ptext119 8B92  
                             __ptext144 8B6E                               __ptext136 875C  
                             __ptext128 8E64                               __ptext145 83DC  
                             __ptext137 8A8C                               __ptext129 8E5C  
                             __ptext146 8DE8                               __ptext138 8C50  
                             __ptext147 8E00                               __ptext139 8AB4  
                             __ptext148 8E0C                               __ptext149 8E18  
                             _hid_input 7A9E                      __end_of_StartTimer 8562  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 87E0                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6106  
                           _hid_display 705C                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7E78  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 8DD8  
                              _INT1_ISR 84E8                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0089                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0394  
                             _ring_buf2 0400                                i2u430_48 87F6  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u880_48 7E44                                i2u880_49 7E58  
                              i2u882_48 8A76                                i2u884_48 8A9E  
              __size_of_TMR5_Initialize 0046                                i2u886_48 8AC6  
                              i2u888_48 8AEE                               _set_vterm 8CA8  
                   __size_of_update_lcd 010E                             _help_button 8562  
            __end_of_UART1_Transmit_ISR 8788                                _TMR5_ISR 80C8  
                              _TMR6_ISR 8CE0                               _port_data 01DB  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 8B4A                              _ADCON0bits 003EF8  
                    __end_of_check_help 5D3A                               _start_lcd 8E56  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8B6E                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 8C32  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 7172  
                             copy_data1 7194                               copy_data2 71B6  
              _INT0_SetInterruptHandler 89C2                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 002F     __end_of_UART2_SetTxInterruptHandler 88D2  
           _UART2_SetTxInterruptHandler 88AA                            _uart1RxCount 002C  
                          _uart2RxCount 0026                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 8C8C                            _send_lcd_cmd 8832  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 8E68  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 88AA  
                 __end_of_DMA1_DMAA_ISR 8E16                      ___fpclassifyf@F463 00B1  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 5D3A                       ?_DMA1_DMADCNT_ISR 0052  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8DC8  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 885A                                __ptext11 705C  
                              __ptext20 8B02                                __ptext12 7A9E  
                              __ptext21 8E4A                                __ptext13 8882  
                              __ptext30 8C8C                                __ptext22 5B12  
                              __ptext14 8DBA                                __ptext31 8124  
                              __ptext23 69C6                                __ptext15 7590  
                              __ptext40 444A                                __ptext32 779A  
                              __ptext24 6F52                                __ptext16 3B1E  
                              __ptext41 7BB6                                __ptext33 8E50  
                              __ptext25 872E                                __ptext17 7FA6  
                              __ptext50 4804                                __ptext42 866E  
                              __ptext34 8E56                                __ptext26 859A  
                              __ptext18 8C14                                __ptext51 62C6  
                              __ptext43 8422                                __ptext35 797A  
                              __ptext27 6E44                                __ptext19 5D3A  
                              __ptext60 82C4                                __ptext52 645C  
                              __ptext44 5F3E                                __ptext36 4B70  
                              __ptext28 85D0                                __ptext61 58D2  
                              __ptext53 827C                                __ptext45 5120  
                              __ptext37 8008                                __ptext29 81D8  
                              __ptext70 565E                                __ptext62 53DE  
                              __ptext54 65CE                                __ptext46 0000  
                              __ptext38 76F2                                __ptext71 822A  
                              __ptext63 7B2E                                __ptext55 7410  
                              __ptext47 7C3A                                __ptext39 1244  
                              __ptext80 8B26                                __ptext72 86CE  
                              __ptext64 6D30                                __ptext56 35A4  
                              __ptext48 869E                                __ptext81 8526  
                              __ptext73 8CA8                                __ptext65 7840  
                              __ptext57 6C18                                __ptext49 733C  
                              __ptext90 8350                                __ptext82 8E2A  
                              __ptext74 8DAA                                __ptext66 78E2  
                              __ptext58 6730                                __ptext91 806A  
                              __ptext83 8E32                                __ptext75 8C32  
                              __ptext67 6AF4                                __ptext59 3FCA  
                              __ptext92 88AA                                __ptext84 8E3A  
                              __ptext76 8CFA                                __ptext68 8CC4  
                              __ptext93 88D2                                __ptext85 4E5C  
                              __ptext77 8DC8                                __ptext69 7648  
                              __ptext94 7F42                                __ptext86 6106  
                              __ptext78 8466                                __ptext95 88FA  
                              __ptext87 830A                                __ptext79 8562  
                              __ptext96 8922                                __ptext88 2DE8  
                              __ptext97 87B4                                __ptext89 25BE  
                              __ptext98 894A                                __ptext99 8396  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 7648  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 083C                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0004                               stoa@F1166 01D4  
                    ??_DMA1_DMASCNT_ISR 0058            __end_of_ADCC_StartConversion 8DAA  
                              _spi_link 00A1                                _wdtdelay 8124  
            __end_of_UART2_Transmit_ISR 87B4                                _vfprintf 76F2  
              __end_of_convert_adc_data 7648              __end_of_PWM8_LoadDutyValue 84A8  
  __end_of_INT1_DefaultInterruptHandler 8E64   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 8E62                           ??_Default_ISR 0052  
                           _uart1RxHead 002E                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0031                             _uart2RxHead 0028  
                           _uart1RxTail 002D                          _get_raw_result 8C14  
                           _uart2TxHead 002B                             _uart1TxTail 0030  
                           _uart2RxTail 0027                             _uart2TxTail 002A  
                          _wait_lcd_set 8E50                      _EXT_INT_Initialize 863A  
  __end_of_TMR6_DefaultInterruptHandler 8422   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 83DC    __end_of_ADCC_DefaultInterruptHandler 8E68  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8E66  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 880A          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 8DBA                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7840                   __end_of_mode_lamp_dim 8D12  
               __end_of_adc_int_handler 8E6A                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6F52  
                _uart2TxBufferRemaining 0029                          _FVR_Initialize 8E42  
                __end_of_get_raw_result 8C32                        _send_lcd_cmd_dma 81D8  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 89C2               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 8832                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 8E62          __end_of_PIN_MANAGER_Initialize 7A9E  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6AF4  
               _eaDogM_WriteStringAtPos 85D0                           _get_vterm_ptr 872E  
                        _check_adc_scan 8E3A               __size_of_UART2_Initialize 005E  
