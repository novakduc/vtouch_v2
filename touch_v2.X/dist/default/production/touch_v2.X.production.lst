

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec  7 21:27:37 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=4,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=4,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=4,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   189                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   190                           	psect	text163,global,reloc=4,class=CODE,delta=1
   191                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   192                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   193  0000                     
   194                           ; Version 2.10
   195                           ; Generated 31/07/2019 GMT
   196                           ; 
   197                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   198                           ; All rights reserved.
   199                           ; 
   200                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   201                           ; 
   202                           ; Redistribution and use in source and binary forms, with or without modification, are
   203                           ; permitted provided that the following conditions are met:
   204                           ; 
   205                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   206                           ;        conditions and the following disclaimer.
   207                           ; 
   208                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   209                           ;        of conditions and the following disclaimer in the documentation and/or other
   210                           ;        materials provided with the distribution.
   211                           ; 
   212                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   213                           ;        software without specific prior written permission.
   214                           ; 
   215                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   216                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   217                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   218                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   219                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   220                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   221                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   222                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   223                           ; 
   224                           ; 
   225                           ; Code-generator required, PIC18F57K42 Definitions
   226                           ; 
   227                           ; SFR Addresses
   228  0000                     
   229 ;;_k	offset	0
   230 ;;_j	offset	1
   231 ;;_i	offset	2
   232 ;;_inp_index	offset	3
   233 ;;_mode	offset	4
   234 ;;_channel	offset=-1 (param)
   235 ;;_s	offset=-2 (param)
   236 ;;_cmd	offset=-1 (param)
   237 ;;_cmd	offset=-1 (param)
   238 ;;_data	offset=-1 (param)
   239 ;;__this	offset=-2 (param)
   240 ;;_cvoltage	offset=-4 (param)
   241 ;;_h	offset=-1 (param)
   242 ;;_h	offset=-1 (param)
   243 ;;_i	offset=-1 (param)
   244 ;;_cmd	offset=-1 (param)
   245 ;;_i	offset	0
   246 ;;_chan	offset=-1 (param)
   247 ;;_to_what	offset=-2 (param)
   248 ;;_u	offset	0
   249 ;;_s	offset=-2 (param)
   250 ;;_index	offset=-1 (param)
   251 ;;_arg	offset	0
   252 ;;_exp	offset	4
   253 ;;_sign	offset=-1 (param)
   254 ;;_val	offset=-5 (param)
   255 ;;_h	offset=-1 (param)
   256 ;;_flipper	offset=-1 (param)
   257 ;;_f	offset	0
   258 ;;_ap	offset	6
   259 ;;_s	offset=-3 (param)
   260 ;;_fmt	offset=-5 (param)
   261 ;;_line	offset=-1 (param)
   262 ;;_vterm	offset=-2 (param)
   263 ;;_numMilliseconds	offset=-2 (param)
   264 ;;_vterm	offset=-1 (param)
   265 ;;_r	offset=-1 (param)
   266 ;;_c	offset=-2 (param)
   267 ;;_strPtr	offset=-4 (param)
   268 ;;_strPtr	offset=-1 (param)
   269 ;;_delay	offset=-4 (param)
   270 ;;_strPtr	offset=-2 (param)
   271 ;;__this	offset=-2 (param)
   272 ;;_clearBuffer	offset=-3 (param)
   273 ;;_s	offset	0
   274 ;;_k	offset	2
   275 ;;_dest	offset=-2 (param)
   276 ;;_c	offset=-4 (param)
   277 ;;_n	offset=-6 (param)
   278 ;;_ap	offset	0
   279 ;;_fmt	offset=-3 (param)
   280 ;;_cfmt	offset	0
   281 ;;_fp	offset=-2 (param)
   282 ;;_fmt	offset=-4 (param)
   283 ;;_ap	offset=-6 (param)
   284 ;;_vfpfcnvrt$5190	offset	0
   285 ;;_vfpfcnvrt$5196	offset	2
   286 ;;_vfpfcnvrt$5189	offset	4
   287 ;;_llu	offset	6
   288 ;;_ll	offset	14
   289 ;;_f	offset	22
   290 ;;_ct	offset	26
   291 ;;_cp	offset	29
   292 ;;_c	offset	31
   293 ;;_fp	offset=-2 (param)
   294 ;;_fmt	offset=-4 (param)
   295 ;;_ap	offset=-6 (param)
   296 ;;_xtoa$5175	offset	0
   297 ;;_xtoa$5174	offset	2
   298 ;;_n	offset	4
   299 ;;_c	offset	12
   300 ;;_i	offset	14
   301 ;;_w	offset	16
   302 ;;_p	offset	18
   303 ;;_fp	offset=-2 (param)
   304 ;;_d	offset=-10 (param)
   305 ;;_x	offset=-11 (param)
   306 ;;_toupper$5950	offset	0
   307 ;;_c	offset=-2 (param)
   308 ;;_c	offset=-2 (param)
   309 ;;_c	offset=-2 (param)
   310 ;;_r	offset	0
   311 ;;_l	offset	2
   312 ;;__l	offset=-2 (param)
   313 ;;__r	offset=-4 (param)
   314 ;;_n	offset=-6 (param)
   315 ;;_nuls	offset	0
   316 ;;_l	offset	7
   317 ;;_p	offset	9
   318 ;;_cp	offset	11
   319 ;;_w	offset	13
   320 ;;_i	offset	15
   321 ;;_fp	offset=-2 (param)
   322 ;;_s	offset=-4 (param)
   323 ;;_efgtoa$5154	offset	0
   324 ;;_efgtoa$5153	offset	2
   325 ;;_efgtoa$5152	offset	4
   326 ;;_efgtoa$5148	offset	6
   327 ;;_efgtoa$5144	offset	8
   328 ;;_efgtoa$5143	offset	10
   329 ;;_u	offset	12
   330 ;;_g	offset	16
   331 ;;_l	offset	20
   332 ;;_h	offset	24
   333 ;;_ou	offset	28
   334 ;;_n	offset	32
   335 ;;_e	offset	34
   336 ;;_i	offset	36
   337 ;;_w	offset	38
   338 ;;_p	offset	40
   339 ;;_sign	offset	42
   340 ;;_d	offset	44
   341 ;;_ne	offset	46
   342 ;;_m	offset	48
   343 ;;_pp	offset	50
   344 ;;_t	offset	52
   345 ;;_mode	offset	54
   346 ;;_nmode	offset	55
   347 ;;_fp	offset=-2 (param)
   348 ;;_f	offset=-6 (param)
   349 ;;_c	offset=-7 (param)
   350 ;;_tolower$5935	offset	0
   351 ;;_c	offset=-2 (param)
   352 ;;_c	offset=-2 (param)
   353 ;;_d	offset	0
   354 ;;_s	offset	2
   355 ;;_dest	offset=-2 (param)
   356 ;;_src	offset=-4 (param)
   357 ;;_u	offset	0
   358 ;;_m	offset	4
   359 ;;_e	offset	8
   360 ;;_x	offset=-4 (param)
   361 ;;_u	offset	0
   362 ;;_e	offset	4
   363 ;;_x	offset=-4 (param)
   364 ;;_exp1	offset	0
   365 ;;_sign1	offset	1
   366 ;;_f1	offset=-4 (param)
   367 ;;_f1	offset=-4 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_ff1	offset=-4 (param)
   371 ;;_ff2	offset=-8 (param)
   372 ;;_grs	offset	0
   373 ;;_rem	offset	4
   374 ;;_new_exp	offset	8
   375 ;;_aexp	offset	10
   376 ;;_bexp	offset	11
   377 ;;_sign	offset	12
   378 ;;_b	offset=-4 (param)
   379 ;;_a	offset=-8 (param)
   380 ;;_sign	offset	0
   381 ;;_counter	offset	1
   382 ;;_dividend	offset=-2 (param)
   383 ;;_divisor	offset=-4 (param)
   384 ;;_quotient	offset	0
   385 ;;_sign	offset	2
   386 ;;_counter	offset	3
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_dtoa$5120	offset	0
   390 ;;_n	offset	2
   391 ;;_i	offset	10
   392 ;;_s	offset	12
   393 ;;_w	offset	14
   394 ;;_p	offset	16
   395 ;;_fp	offset=-2 (param)
   396 ;;_d	offset=-10 (param)
   397 ;;_a	offset=-2 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-8 (param)
   401 ;;_divisor	offset=-16 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	8
   404 ;;_counter	offset	9
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_w	offset	0
   408 ;;_fp	offset=-2 (param)
   409 ;;_c	offset=-3 (param)
   410 ;;_w	offset	0
   411 ;;_i	offset	2
   412 ;;_fp	offset=-2 (param)
   413 ;;_buf	offset=-4 (param)
   414 ;;_p	offset=-6 (param)
   415 ;;_a	offset	0
   416 ;;_s	offset=-2 (param)
   417 ;;_i	offset	0
   418 ;;_c	offset	2
   419 ;;_s	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_fp	offset=-4 (param)
   423 ;;_c	offset=-1 (param)
   424 ;;__this	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_atoi$5673	offset	0
   427 ;;_atoi$5671	offset	2
   428 ;;_atoi$5672	offset	4
   429 ;;_n	offset	5
   430 ;;_neg	offset	7
   431 ;;_s	offset=-2 (param)
   432 ;;_isspace$5711	offset	0
   433 ;;_c	offset=-2 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_vterm	offset=-1 (param)
   436 ;;_new_response_info	offset=-1 (param)
   437 ;;_new_response_info	offset=-1 (param)
   438 ;;_level	offset=-2 (param)
   439 ;;_dutyValue	offset=-2 (param)
   440 ;;_timer	offset=-1 (param)
   441 ;;_timer	offset=-1 (param)
   442 ;;_count	offset=-3 (param)
   443 ;;_h	offset=-1 (param)
   444 ;;_lp_speed	offset	0
   445 ;;_new	offset=-4 (param)
   446 ;;_bn	offset=-5 (param)
   447 ;;_slow	offset=-6 (param)
   448 ;;_b	offset=-4 (param)
   449 ;;_a	offset=-8 (param)
   450 ;;_grs	offset	0
   451 ;;_bexp	offset	1
   452 ;;_aexp	offset	2
   453 ;;_signs	offset	3
   454 ;;_b	offset=-4 (param)
   455 ;;_a	offset=-8 (param)
   456 ;;_prod	offset	0
   457 ;;_grs	offset	4
   458 ;;_temp	offset	8
   459 ;;_bexp	offset	10
   460 ;;_aexp	offset	11
   461 ;;_sign	offset	12
   462 ;;_b	offset=-4 (param)
   463 ;;_a	offset=-8 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_InterruptHandler	offset=-3 (param)
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_state	offset	0
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_InterruptHandler	offset=-3 (param)
   474 ;;_InterruptHandler	offset=-3 (param)
   475 ;;_i	offset	0
   476 ;;_sw_value	offset	1
   477 ;;_timerVal	offset=-2 (param)
   478 ;;_timerVal	offset=-2 (param)
   479 ;;_log_ptr	offset	0
   480 ;;_temp	offset	2
   481 ;;_f	offset	0
   482 ;;_ap	offset	6
   483 ;;_s	offset=-3 (param)
   484 ;;_fmt	offset=-5 (param)
   485 ;;_cfmt	offset	0
   486 ;;_fp	offset=-2 (param)
   487 ;;_fmt	offset=-4 (param)
   488 ;;_ap	offset=-6 (param)
   489 ;;_vfpfcnvrt$5190	offset	0
   490 ;;_vfpfcnvrt$5196	offset	2
   491 ;;_vfpfcnvrt$5189	offset	4
   492 ;;_llu	offset	6
   493 ;;_ll	offset	14
   494 ;;_f	offset	22
   495 ;;_ct	offset	26
   496 ;;_cp	offset	29
   497 ;;_c	offset	31
   498 ;;_fp	offset=-2 (param)
   499 ;;_fmt	offset=-4 (param)
   500 ;;_ap	offset=-6 (param)
   501 ;;_xtoa$5175	offset	0
   502 ;;_xtoa$5174	offset	2
   503 ;;_n	offset	4
   504 ;;_c	offset	12
   505 ;;_i	offset	14
   506 ;;_w	offset	16
   507 ;;_p	offset	18
   508 ;;_fp	offset=-2 (param)
   509 ;;_d	offset=-10 (param)
   510 ;;_x	offset=-11 (param)
   511 ;;_toupper$5950	offset	0
   512 ;;_c	offset=-2 (param)
   513 ;;_c	offset=-2 (param)
   514 ;;_c	offset=-2 (param)
   515 ;;_r	offset	0
   516 ;;_l	offset	2
   517 ;;__l	offset=-2 (param)
   518 ;;__r	offset=-4 (param)
   519 ;;_n	offset=-6 (param)
   520 ;;_nuls	offset	0
   521 ;;_l	offset	7
   522 ;;_p	offset	9
   523 ;;_cp	offset	11
   524 ;;_w	offset	13
   525 ;;_i	offset	15
   526 ;;_fp	offset=-2 (param)
   527 ;;_s	offset=-4 (param)
   528 ;;_efgtoa$5154	offset	0
   529 ;;_efgtoa$5153	offset	2
   530 ;;_efgtoa$5152	offset	4
   531 ;;_efgtoa$5148	offset	6
   532 ;;_efgtoa$5144	offset	8
   533 ;;_efgtoa$5143	offset	10
   534 ;;_u	offset	12
   535 ;;_g	offset	16
   536 ;;_l	offset	20
   537 ;;_h	offset	24
   538 ;;_ou	offset	28
   539 ;;_n	offset	32
   540 ;;_e	offset	34
   541 ;;_i	offset	36
   542 ;;_w	offset	38
   543 ;;_p	offset	40
   544 ;;_sign	offset	42
   545 ;;_d	offset	44
   546 ;;_ne	offset	46
   547 ;;_m	offset	48
   548 ;;_pp	offset	50
   549 ;;_t	offset	52
   550 ;;_mode	offset	54
   551 ;;_nmode	offset	55
   552 ;;_fp	offset=-2 (param)
   553 ;;_f	offset=-6 (param)
   554 ;;_c	offset=-7 (param)
   555 ;;_tolower$5935	offset	0
   556 ;;_c	offset=-2 (param)
   557 ;;_c	offset=-2 (param)
   558 ;;_d	offset	0
   559 ;;_s	offset	2
   560 ;;_dest	offset=-2 (param)
   561 ;;_src	offset=-4 (param)
   562 ;;_u	offset	0
   563 ;;_m	offset	4
   564 ;;_e	offset	8
   565 ;;_x	offset=-4 (param)
   566 ;;_u	offset	0
   567 ;;_e	offset	4
   568 ;;_x	offset=-4 (param)
   569 ;;_exp1	offset	0
   570 ;;_sign1	offset	1
   571 ;;_f1	offset=-4 (param)
   572 ;;_b	offset=-4 (param)
   573 ;;_a	offset=-8 (param)
   574 ;;_grs	offset	0
   575 ;;_bexp	offset	1
   576 ;;_aexp	offset	2
   577 ;;_signs	offset	3
   578 ;;_b	offset=-4 (param)
   579 ;;_a	offset=-8 (param)
   580 ;;_f1	offset=-4 (param)
   581 ;;_prod	offset	0
   582 ;;_grs	offset	4
   583 ;;_temp	offset	8
   584 ;;_bexp	offset	10
   585 ;;_aexp	offset	11
   586 ;;_sign	offset	12
   587 ;;_b	offset=-4 (param)
   588 ;;_a	offset=-8 (param)
   589 ;;_ff1	offset=-4 (param)
   590 ;;_ff2	offset=-8 (param)
   591 ;;_ff1	offset=-4 (param)
   592 ;;_ff2	offset=-8 (param)
   593 ;;_grs	offset	0
   594 ;;_rem	offset	4
   595 ;;_new_exp	offset	8
   596 ;;_aexp	offset	10
   597 ;;_bexp	offset	11
   598 ;;_sign	offset	12
   599 ;;_b	offset=-4 (param)
   600 ;;_a	offset=-8 (param)
   601 ;;_sign	offset	0
   602 ;;_counter	offset	1
   603 ;;_dividend	offset=-2 (param)
   604 ;;_divisor	offset=-4 (param)
   605 ;;_quotient	offset	0
   606 ;;_sign	offset	2
   607 ;;_counter	offset	3
   608 ;;_dividend	offset=-2 (param)
   609 ;;_divisor	offset=-4 (param)
   610 ;;_dtoa$5120	offset	0
   611 ;;_n	offset	2
   612 ;;_i	offset	10
   613 ;;_s	offset	12
   614 ;;_w	offset	14
   615 ;;_p	offset	16
   616 ;;_fp	offset=-2 (param)
   617 ;;_d	offset=-10 (param)
   618 ;;_a	offset=-2 (param)
   619 ;;_sign	offset	0
   620 ;;_counter	offset	1
   621 ;;_dividend	offset=-8 (param)
   622 ;;_divisor	offset=-16 (param)
   623 ;;_quotient	offset	0
   624 ;;_sign	offset	8
   625 ;;_counter	offset	9
   626 ;;_dividend	offset=-8 (param)
   627 ;;_divisor	offset=-16 (param)
   628 ;;_w	offset	0
   629 ;;_fp	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_w	offset	0
   632 ;;_i	offset	2
   633 ;;_fp	offset=-2 (param)
   634 ;;_buf	offset=-4 (param)
   635 ;;_p	offset=-6 (param)
   636 ;;_a	offset	0
   637 ;;_s	offset=-2 (param)
   638 ;;_i	offset	0
   639 ;;_c	offset	2
   640 ;;_s	offset=-2 (param)
   641 ;;_fp	offset=-4 (param)
   642 ;;_c	offset=-2 (param)
   643 ;;_fp	offset=-4 (param)
   644 ;;_c	offset=-1 (param)
   645 ;;__this	offset=-2 (param)
   646 ;;_c	offset=-3 (param)
   647 ;;_atoi$5673	offset	0
   648 ;;_atoi$5671	offset	2
   649 ;;_atoi$5672	offset	4
   650 ;;_n	offset	5
   651 ;;_neg	offset	7
   652 ;;_s	offset=-2 (param)
   653 ;;_isspace$5711	offset	0
   654 ;;_c	offset=-2 (param)
   655 ;;_c	offset=-2 (param)
   656 ;;_dsize	offset=-2 (param)
   657 ;;_arg	offset	0
   658 ;;_exp	offset	4
   659 ;;_sign	offset=-1 (param)
   660 ;;_val	offset=-5 (param)
   661 ;;_cvoltage	offset=-4 (param)
   662 ;;_channel	offset=-1 (param)
   663 ;;_i	offset	0
   664                           
   665                           	psect	idataBIGRAM
   666  0166EC                     __pidataBIGRAM:
   667                           	opt callstack 0
   668                           
   669                           ;initializer for _port_data
   670  0166EC  FF                 	db	255
   671  0166ED  00                 	db	0
   672  0166EE  FF                 	db	255
   673  0166EF  00                 	db	0
   674  0166F0  FF                 	db	255
   675  0166F1  00                 	db	0
   676  0166F2  FF                 	db	255
   677  0166F3  00                 	db	0
   678  0166F4  FF                 	db	255
   679  0166F5  00                 	db	0
   680  0166F6  FF                 	db	255
   681  0166F7  00                 	db	0
   682  0166F8  FF                 	db	255
   683  0166F9  00                 	db	0
   684  0166FA  FF                 	db	255
   685  0166FB  00                 	db	0
   686  0166FC  00                 	db	0
   687  0166FD  00                 	db	0
   688  0166FE  00                 	db	0
   689  0166FF  00                 	db	0
   690  016700  00                 	db	0
   691  016701  00                 	db	0
   692  016702  00                 	db	0
   693  016703  00                 	db	0
   694  016704  00                 	db	0
   695  016705  00                 	db	0
   696  016706  00                 	db	0
   697  016707  00                 	db	0
   698  016708  00                 	db	0
   699  016709  00                 	db	0
   700  01670A  00                 	db	0
   701  01670B  00                 	db	0
   702  01670C  00                 	db	0
   703  01670D  00                 	db	0
   704  01670E  00                 	db	0
   705  01670F  00                 	db	0
   706  016710  00                 	db	0
   707  016711  00                 	db	0
   708  016712  00                 	db	0
   709  016713  00                 	db	0
   710  016714  00                 	db	0
   711  016715  00                 	db	0
   712  016716  00                 	db	0
   713  016717  00                 	db	0
   714  016718  00                 	db	0
   715  016719  00                 	db	0
   716  01671A  00                 	db	0
   717  01671B  00                 	db	0
   718  01671C  00                 	db	0
   719  01671D  00                 	db	0
   720  01671E  00                 	db	0
   721  01671F  00                 	db	0
   722  016720  00                 	db	0
   723  016721  00                 	db	0
   724  016722  00                 	db	0
   725  016723  00                 	db	0
   726  016724  00                 	db	0
   727  016725  00                 	db	0
   728  016726  00                 	db	0
   729  016727  00                 	db	0
   730  016728  00                 	db	0
   731  016729  00                 	db	0
   732  01672A  00                 	db	0
   733  01672B  00                 	db	0
   734  01672C  00                 	db	0
   735  01672D  00                 	db	0
   736  01672E  00                 	db	0
   737  01672F  00                 	db	0
   738  016730  00                 	db	0
   739  016731  00                 	db	0
   740  016732  00                 	db	0
   741  016733  00                 	db	0
   742  016734  00                 	db	0
   743  016735  00                 	db	0
   744  016736  00                 	db	0
   745  016737  00                 	db	0
   746  016738  00                 	db	0
   747  016739  00                 	db	0
   748  01673A  00                 	db	0
   749  01673B  00                 	db	0
   750  01673C  00                 	db	0
   751  01673D  00                 	db	0
   752  01673E  00                 	db	0
   753  01673F  00                 	db	0
   754  016740  00                 	db	0
   755  016741  00                 	db	0
   756  016742  00                 	db	0
   757  016743  00                 	db	0
   758  016744  00                 	db	0
   759  016745  00                 	db	0
   760  016746  00                 	db	0
   761  016747  00                 	db	0
   762  016748  00                 	db	0
   763  016749  00                 	db	0
   764  01674A  00                 	db	0
   765  01674B  00                 	db	0
   766  01674C  00                 	db	0
   767  01674D  00                 	db	0
   768  01674E  00                 	db	0
   769  01674F  00                 	db	0
   770  016750  00                 	db	0
   771  016751  00                 	db	0
   772  016752  00                 	db	0
   773  016753  00                 	db	0
   774  016754  00                 	db	0
   775  016755  00                 	db	0
   776  016756  00                 	db	0
   777  016757  00                 	db	0
   778  016758  00                 	db	0
   779  016759  00                 	db	0
   780  01675A  00                 	db	0
   781  01675B  00                 	db	0
   782  01675C  00                 	db	0
   783  01675D  00                 	db	0
   784  01675E  00                 	db	0
   785  01675F  00                 	db	0
   786  016760  00                 	db	0
   787  016761  00                 	db	0
   788  016762  00                 	db	0
   789  016763  00                 	db	0
   790  016764  00                 	db	0
   791  016765  00                 	db	0
   792  016766  00                 	db	0
   793  016767  00                 	db	0
   794  016768  00                 	db	0
   795  016769  00                 	db	0
   796  01676A  00                 	db	0
   797  01676B  00                 	db	0
   798  01676C  00                 	db	0
   799  01676D  00                 	db	0
   800  01676E  00                 	db	0
   801  01676F  00                 	db	0
   802  016770  00                 	db	0
   803  016771  00                 	db	0
   804  016772  00                 	db	0
   805  016773  00                 	db	0
   806  016774  00                 	db	0
   807  016775  00                 	db	0
   808  016776  00                 	db	0
   809  016777  00                 	db	0
   810  016778  00                 	db	0
   811  016779  00                 	db	0
   812  01677A  00                 	db	0
   813  01677B  00                 	db	0
   814  01677C  00                 	db	0
   815  01677D  00                 	db	0
   816  01677E  00                 	db	0
   817  01677F  00                 	db	0
   818  016780  00                 	db	0
   819  016781  00                 	db	0
   820  016782  00                 	db	0
   821  016783  00                 	db	0
   822  016784  00                 	db	0
   823  016785  00                 	db	0
   824  016786  00                 	db	0
   825  016787  00                 	db	0
   826  016788  00                 	db	0
   827  016789  00                 	db	0
   828  01678A  00                 	db	0
   829  01678B  00                 	db	0
   830  01678C  00                 	db	0
   831  01678D  00                 	db	0
   832  01678E  00                 	db	0
   833  01678F  00                 	db	0
   834  016790  00                 	db	0
   835  016791  00                 	db	0
   836  016792  00                 	db	0
   837  016793  00                 	db	0
   838  016794  00                 	db	0
   839  016795  00                 	db	0
   840  016796  00                 	db	0
   841  016797  00                 	db	0
   842  016798  00                 	db	0
   843  016799  00                 	db	0
   844  01679A  00                 	db	0
   845  01679B  00                 	db	0
   846  01679C  00                 	db	0
   847  01679D  00                 	db	0
   848  01679E  00                 	db	0
   849  01679F  00                 	db	0
   850  0167A0  00                 	db	0
   851  0167A1  00                 	db	0
   852  0167A2  00                 	db	0
   853  0167A3  00                 	db	0
   854  0167A4  00                 	db	0
   855  0167A5  00                 	db	0
   856  0167A6  00                 	db	0
   857  0167A7  00                 	db	0
   858  0167A8  00                 	db	0
   859  0167A9  00                 	db	0
   860  0167AA  00                 	db	0
   861  0167AB  00                 	db	0
   862  0167AC  00                 	db	0
   863  0167AD  00                 	db	0
   864  0167AE  00                 	db	0
   865  0167AF  00                 	db	0
   866  0167B0  00                 	db	0
   867  0167B1  00                 	db	0
   868  0167B2  00                 	db	0
   869  0167B3  00                 	db	0
   870  0167B4  00                 	db	0
   871  0167B5  00                 	db	0
   872  0167B6  00                 	db	0
   873  0167B7  00                 	db	0
   874  0167B8  00                 	db	0
   875  0167B9  00                 	db	0
   876  0167BA  00                 	db	0
   877  0167BB  00                 	db	0
   878  0167BC  00                 	db	0
   879  0167BD  00                 	db	0
   880  0167BE  00                 	db	0
   881  0167BF  00                 	db	0
   882  0167C0  00                 	db	0
   883  0167C1  00                 	db	0
   884  0167C2  00                 	db	0
   885  0167C3  00                 	db	0
   886  0167C4  00                 	db	0
   887  0167C5  00                 	db	0
   888  0167C6  00                 	db	0
   889  0167C7  00                 	db	0
   890  0167C8  00                 	db	0
   891  0167C9  00                 	db	0
   892  0167CA  00                 	db	0
   893  0167CB  00                 	db	0
   894  0167CC  00                 	db	0
   895  0167CD  00                 	db	0
   896  0167CE  00                 	db	0
   897  0167CF  00                 	db	0
   898  0167D0  00                 	db	0
   899  0167D1  00                 	db	0
   900  0167D2  00                 	db	0
   901  0167D3  00                 	db	0
   902  0167D4  00                 	db	0
   903  0167D5  00                 	db	0
   904  0167D6  00                 	db	0
   905  0167D7  00                 	db	0
   906  0167D8  00                 	db	0
   907  0167D9  00                 	db	0
   908  0167DA  00                 	db	0
   909  0167DB  00                 	db	0
   910  0167DC  00                 	db	0
   911  0167DD  00                 	db	0
   912  0167DE  00                 	db	0
   913  0167DF  00                 	db	0
   914  0167E0  00                 	db	0
   915  0167E1  00                 	db	0
   916  0167E2  00                 	db	0
   917  0167E3  00                 	db	0
   918  0167E4  00                 	db	0
   919  0167E5  00                 	db	0
   920  0167E6  00                 	db	0
   921  0167E7  00                 	db	0
   922  0167E8  00                 	db	0
   923  0167E9  00                 	db	0
   924  0167EA  00                 	db	0
   925  0167EB  00                 	db	0
   926  0167EC  00                 	db	0
   927  0167ED  00                 	db	0
   928  0167EE  00                 	db	0
   929  0167EF  00                 	db	0
   930  0167F0  00                 	db	0
   931  0167F1  00                 	db	0
   932  0167F2  00                 	db	0
   933  0167F3  00                 	db	0
   934  0167F4  00                 	db	0
   935  0167F5  00                 	db	0
   936  0167F6  00                 	db	0
   937  0167F7  00                 	db	0
   938  0167F8  00                 	db	0
   939  0167F9  00                 	db	0
   940  0167FA  00                 	db	0
   941  0167FB  00                 	db	0
   942  0167FC  00                 	db	0
   943  0167FD  00                 	db	0
   944  0167FE  00                 	db	0
   945  0167FF  00                 	db	0
   946  016800  00                 	db	0
   947  016801  00                 	db	0
   948  016802  00                 	db	0
   949  016803  00                 	db	0
   950  016804  00                 	db	0
   951  016805  00                 	db	0
   952  016806  00                 	db	0
   953  016807  00                 	db	0
   954  016808  00                 	db	0
   955  016809  00                 	db	0
   956  01680A  00                 	db	0
   957  01680B  00                 	db	0
   958  01680C  00                 	db	0
   959  01680D  00                 	db	0
   960  01680E  00                 	db	0
   961  01680F  00                 	db	0
   962  016810  00                 	db	0
   963  016811  00                 	db	0
   964  016812  00                 	db	0
   965  016813  00                 	db	0
   966  016814  00                 	db	0
   967  016815  00                 	db	0
   968  016816  00                 	db	0
   969  016817  00                 	db	0
   970  016818  00                 	db	0
   971  016819  00                 	db	0
   972  01681A  00                 	db	0
   973  01681B  00                 	db	0
   974  01681C  00                 	db	0
   975  01681D  00                 	db	0
   976  01681E  00                 	db	0
   977  01681F  00                 	db	0
   978  016820  00                 	db	0
   979  016821  00                 	db	0
   980  016822  00                 	db	0
   981  016823  00                 	db	0
   982  016824  00                 	db	0
   983  016825  00                 	db	0
   984  016826  00                 	db	0
   985  016827  00                 	db	0
   986  016828  00                 	db	0
   987  016829  00                 	db	0
   988  01682A  00                 	db	0
   989  01682B  00                 	db	0
   990  01682C  00                 	db	0
   991  01682D  00                 	db	0
   992  01682E  00                 	db	0
   993  01682F  00                 	db	0
   994  016830  00                 	db	0
   995  016831  00                 	db	0
   996  016832  00                 	db	0
   997  016833  00                 	db	0
   998  016834  00                 	db	0
   999  016835  00                 	db	0
  1000  016836  00                 	db	0
  1001  016837  00                 	db	0
  1002  016838  00                 	db	0
  1003  016839  00                 	db	0
  1004  01683A  00                 	db	0
  1005  01683B  00                 	db	0
  1006  01683C  00                 	db	0
  1007  01683D  00                 	db	0
  1008  01683E  00                 	db	0
  1009  01683F  00                 	db	0
  1010  016840  00                 	db	0
  1011  016841  00                 	db	0
  1012  016842  00                 	db	0
  1013  016843  00                 	db	0
  1014  016844  00                 	db	0
  1015  016845  00                 	db	0
  1016  016846  00                 	db	0
  1017  016847  00                 	db	0
  1018  016848  00                 	db	0
  1019  016849  00                 	db	0
  1020  01684A  00                 	db	0
  1021  01684B  00                 	db	0
  1022  01684C  00                 	db	0
  1023  01684D  00                 	db	0
  1024  01684E  00                 	db	0
  1025  01684F  00                 	db	0
  1026  016850  00                 	db	0
  1027  016851  00                 	db	0
  1028  016852  00                 	db	0
  1029  016853  00                 	db	0
  1030  016854  00                 	db	0
  1031  016855  00                 	db	0
  1032  016856  00                 	db	0
  1033  016857  00                 	db	0
  1034  016858  00                 	db	0
  1035  016859  00                 	db	0
  1036  01685A  00                 	db	0
  1037  01685B  00                 	db	0
  1038  01685C  00                 	db	0
  1039  01685D  00                 	db	0
  1040  01685E  00                 	db	0
  1041  01685F  00                 	db	0
  1042  016860  00                 	db	0
  1043  016861  00                 	db	0
  1044  016862  00                 	db	0
  1045  016863  00                 	db	0
  1046  016864  00                 	db	0
  1047  016865  00                 	db	0
  1048  016866  00                 	db	0
  1049  016867  00                 	db	0
  1050  016868  00                 	db	0
  1051  016869  00                 	db	0
  1052  01686A  00                 	db	0
  1053  01686B  00                 	db	0
  1054  01686C  00                 	db	0
  1055  01686D  00                 	db	0
  1056  01686E  00                 	db	0
  1057  01686F  00                 	db	0
  1058  016870  00                 	db	0
  1059  016871  00                 	db	0
  1060  016872  00                 	db	0
  1061  016873  00                 	db	0
  1062  016874  00                 	db	0
  1063  016875  00                 	db	0
  1064  016876  00                 	db	0
  1065  016877  00                 	db	0
  1066  016878  00                 	db	0
  1067  016879  00                 	db	0
  1068  01687A  00                 	db	0
  1069  01687B  00                 	db	0
  1070  01687C  00                 	db	0
  1071  01687D  00                 	db	0
  1072  01687E  00                 	db	0
  1073  01687F  00                 	db	0
  1074  016880  00                 	db	0
  1075  016881  00                 	db	0
  1076  016882  00                 	db	0
  1077  016883  00                 	db	0
  1078  016884  00                 	db	0
  1079  016885  00                 	db	0
  1080  016886  00                 	db	0
  1081  016887  00                 	db	0
  1082  016888  00                 	db	0
  1083  016889  00                 	db	0
  1084  01688A  00                 	db	0
  1085  01688B  00                 	db	0
  1086  01688C  00                 	db	0
  1087  01688D  00                 	db	0
  1088  01688E  00                 	db	0
  1089  01688F  00                 	db	0
  1090  016890  00                 	db	0
  1091  016891  00                 	db	0
  1092  016892  00                 	db	0
  1093  016893  00                 	db	0
  1094  016894  00                 	db	0
  1095  016895  00                 	db	0
  1096  016896  00                 	db	0
  1097  016897  00                 	db	0
  1098  016898  00                 	db	0
  1099  016899  00                 	db	0
  1100  01689A  00                 	db	0
  1101  01689B  00                 	db	0
  1102  01689C  00                 	db	0
  1103  01689D  00                 	db	0
  1104  01689E  00                 	db	0
  1105  01689F  00                 	db	0
  1106  0168A0  00                 	db	0
  1107  0168A1  00                 	db	0
  1108  0168A2  00                 	db	0
  1109  0168A3  00                 	db	0
  1110  0168A4  00                 	db	0
  1111  0168A5  00                 	db	0
  1112  0168A6  00                 	db	0
  1113  0168A7  00                 	db	0
  1114  0168A8  00                 	db	0
  1115  0168A9  00                 	db	0
  1116  0168AA  00                 	db	0
  1117  0168AB  00                 	db	0
  1118  0168AC  00                 	db	0
  1119  0168AD  00                 	db	0
  1120  0168AE  00                 	db	0
  1121  0168AF  00                 	db	0
  1122  0168B0  00                 	db	0
  1123  0168B1  00                 	db	0
  1124  0168B2  00                 	db	0
  1125  0168B3  00                 	db	0
  1126  0168B4  00                 	db	0
  1127  0168B5  00                 	db	0
  1128  0168B6  00                 	db	0
  1129  0168B7  00                 	db	0
  1130  0168B8  00                 	db	0
  1131  0168B9  00                 	db	0
  1132  0168BA  00                 	db	0
  1133  0168BB  00                 	db	0
  1134  0168BC  00                 	db	0
  1135  0168BD  00                 	db	0
  1136  0168BE  00                 	db	0
  1137  0168BF  00                 	db	0
  1138  0168C0  00                 	db	0
  1139  0168C1  00                 	db	0
  1140  0168C2  00                 	db	0
  1141  0168C3  00                 	db	0
  1142  0168C4  00                 	db	0
  1143  0168C5  00                 	db	0
  1144  0168C6  00                 	db	0
  1145  0168C7  00                 	db	0
  1146  0168C8  00                 	db	0
  1147  0168C9  00                 	db	0
  1148  0168CA  00                 	db	0
  1149  0168CB  00                 	db	0
  1150  0168CC  00                 	db	0
  1151  0168CD  00                 	db	0
  1152  0168CE  00                 	db	0
  1153  0168CF  00                 	db	0
  1154  0168D0  00                 	db	0
  1155  0168D1  00                 	db	0
  1156  0168D2  00                 	db	0
  1157  0168D3  00                 	db	0
  1158  0168D4  00                 	db	0
  1159  0168D5  00                 	db	0
  1160  0168D6  00                 	db	0
  1161  0168D7  00                 	db	0
  1162  0168D8  00                 	db	0
  1163  0168D9  00                 	db	0
  1164  0168DA  00                 	db	0
  1165  0168DB  00                 	db	0
  1166  0168DC  00                 	db	0
  1167  0168DD  00                 	db	0
  1168  0168DE  00                 	db	0
  1169  0168DF  00                 	db	0
  1170  0168E0  00                 	db	0
  1171  0168E1  00                 	db	0
  1172  0168E2  00                 	db	0
  1173  0168E3  00                 	db	0
  1174  0168E4  00                 	db	0
  1175  0168E5  00                 	db	0
  1176  0168E6  00                 	db	0
  1177  0168E7  00                 	db	0
  1178  0168E8  00                 	db	0
  1179  0168E9  00                 	db	0
  1180  0168EA  00                 	db	0
  1181  0168EB  00                 	db	0
  1182                           
  1183                           	psect	idataBANK0
  1184  01962E                     __pidataBANK0:
  1185                           	opt callstack 0
  1186                           
  1187                           ;initializer for _R
  1188  01962E  0000               	dw	0
  1189  019630  0000               	dw	0
  1190  019632  0000               	dw	0
  1191  019634  0000               	dw	0
  1192  019636  0000               	dw	0
  1193  019638  0000               	dw	0
  1194  01963A  0000               	dw	0
  1195  01963C  0000               	dw	0
  1196  01963E  0000               	dw	0
  1197  019640  0000               	dw	0
  1198  019642  0000               	dw	0
  1199  019644  0000               	dw	0
  1200  019646  0000               	dw	0
  1201  019648  0000               	dw	0
  1202  01964A  0000               	dw	0
  1203  01964C  0000               	dw	0
  1204  01964E  0F67               	dw	3943
  1205  019650  0F8F               	dw	3983
  1206  019652  00                 	db	0
  1207  019653  0000               	dw	0
  1208  019655  00                 	db	0
  1209                           
  1210                           ;initializer for _H
  1211  019656  00                 	db	0
  1212  019657  00                 	db	0
  1213  019658  01                 	db	1
  1214  019659  00                 	db	0
  1215  01965A  01                 	db	1
  1216  01965B  00                 	db	0
  1217  01965C  00                 	db	0
  1218                           
  1219                           	psect	idataBANK1
  1220  017FBA                     __pidataBANK1:
  1221                           	opt callstack 0
  1222                           
  1223                           ;initializer for _C
  1224  017FBA  0000               	dw	0
  1225  017FBC  0000               	dw	0
  1226  017FBE  0000               	dw	0
  1227  017FC0  0000               	dw	0
  1228  017FC2  0000               	dw	0
  1229  017FC4  0000               	dw	0
  1230  017FC6  0000               	dw	0
  1231  017FC8  0000               	dw	0
  1232  017FCA  0000               	dw	0
  1233  017FCC  0000               	dw	0
  1234  017FCE  0000               	dw	0
  1235  017FD0  0000               	dw	0
  1236  017FD2  0000               	dw	0
  1237  017FD4  0000               	dw	0
  1238  017FD6  0000               	dw	0
  1239  017FD8  0000               	dw	0
  1240  017FDA  0000               	dw	0
  1241  017FDC  0000               	dw	0
  1242  017FDE  0000               	dw	0
  1243  017FE0  0000               	dw	0
  1244  017FE2  0000               	dw	0
  1245  017FE4  0000               	dw	0
  1246  017FE6  0000               	dw	0
  1247  017FE8  0000               	dw	0
  1248  017FEA  0000               	dw	0
  1249  017FEC  0000               	dw	0
  1250  017FEE  0000               	dw	0
  1251  017FF0  0000               	dw	0
  1252  017FF2  0000               	dw	0
  1253  017FF4  0000               	dw	0
  1254  017FF6  0000               	dw	0
  1255  017FF8  0000               	dw	0
  1256  017FFA  0000               	dw	0
  1257  017FFC  0000               	dw	0
  1258  017FFE  0000               	dw	0
  1259  018000  0000               	dw	0
  1260  018002  0000               	dw	0
  1261  018004  0000               	dw	0
  1262  018006  0000               	dw	0
  1263  018008  0000               	dw	0
  1264  01800A  0000               	dw	0
  1265  01800C  0000               	dw	0
  1266  01800E  0000               	dw	0
  1267  018010  0000               	dw	0
  1268  018012  0000               	dw	0
  1269  018014  0000               	dw	0
  1270  018016  0000               	dw	0
  1271  018018  0000               	dw	0
  1272  01801A  0000               	dw	0
  1273  01801C  0000               	dw	0
  1274  01801E  0000               	dw	0
  1275  018020  0000               	dw	0
  1276  018022  0000               	dw	0
  1277  018024  0000               	dw	0
  1278  018026  0000               	dw	0
  1279  018028  0000               	dw	0
  1280  01802A  0000               	dw	0
  1281  01802C  0000               	dw	0
  1282  01802E  0000               	dw	0
  1283  018030  0000               	dw	0
  1284  018032  0000               	dw	0
  1285  018034  0000               	dw	0
  1286  018036  0000               	dw	0
  1287  018038  42FA               	dw	17146
  1288  01803A  00                 	db	0
  1289  01803B  00                 	db	0
  1290  01803C  00                 	db	0
  1291  01803D  00                 	db	0
  1292  01803E  00                 	db	0
  1293  01803F  00                 	db	0
  1294  018040  00                 	db	0
  1295  018041  00                 	db	0
  1296  018042  00                 	db	0
  1297  018043  00                 	db	0
  1298  018044  00                 	db	0
  1299  018045  00                 	db	0
  1300  018046  00                 	db	0
  1301  018047  00                 	db	0
  1302  018048  00                 	db	0
  1303  018049  00                 	db	0
  1304  01804A  00                 	db	0
  1305  01804B  00                 	db	0
  1306  01804C  00                 	db	0
  1307  01804D  00                 	db	0
  1308  01804E  00                 	db	0
  1309  01804F  00                 	db	0
  1310  018050  00                 	db	0
  1311  018051  00                 	db	0
  1312  018052  00                 	db	0
  1313  018053  00                 	db	0
  1314  018054  00                 	db	0
  1315  018055  00                 	db	0
  1316  018056  00                 	db	0
  1317  018057  00                 	db	0
  1318  018058  00                 	db	0
  1319  018059  00                 	db	0
  1320  01805A  00                 	db	0
  1321  01805B  00                 	db	0
  1322  01805C  00                 	db	0
  1323  01805D  00                 	db	0
  1324  01805E  00                 	db	0
  1325  01805F  00                 	db	0
  1326  018060  00                 	db	0
  1327  018061  00                 	db	0
  1328  018062  00                 	db	0
  1329  018063  00                 	db	0
  1330  018064  00                 	db	0
  1331  018065  00                 	db	0
  1332  018066  00                 	db	0
  1333  018067  00                 	db	0
  1334  018068  00                 	db	0
  1335  018069  00                 	db	0
  1336  01806A  00                 	db	0
  1337  01806B  00                 	db	0
  1338  01806C  00                 	db	0
  1339  01806D  00                 	db	0
  1340  01806E  00                 	db	0
  1341  01806F  00                 	db	0
  1342  018070  00                 	db	0
  1343  018071  00                 	db	0
  1344  018072  00                 	db	0
  1345  018073  00                 	db	0
  1346  018074  00                 	db	0
  1347  018075  00                 	db	0
  1348  018076  00                 	db	0
  1349  018077  00                 	db	0
  1350  018078  00                 	db	0
  1351  018079  00                 	db	0
  1352  01807A  00                 	db	0
  1353  01807B  00                 	db	0
  1354  01807C  00                 	db	0
  1355  01807D  00                 	db	0
  1356  01807E  00                 	db	0
  1357  01807F  00                 	db	0
  1358  018080  00                 	db	0
  1359  018081  00                 	db	0
  1360  018082  00                 	db	0
  1361  018083  00                 	db	0
  1362  018084  00                 	db	0
  1363  018085  00                 	db	0
  1364  018086  00                 	db	0
  1365  018087  00                 	db	0
  1366  018088  00                 	db	0
  1367  018089  00                 	db	0
  1368  01808A  00                 	db	0
  1369  01808B  00                 	db	0
  1370  01808C  00                 	db	0
  1371                           
  1372                           ;initializer for stoa@F1166
  1373  01808D  28                 	db	40
  1374  01808E  6E                 	db	110
  1375  01808F  75                 	db	117
  1376  018090  6C                 	db	108
  1377  018091  6C                 	db	108
  1378  018092  29                 	db	41
  1379  018093  00                 	db	0
  1380                           
  1381                           	psect	idataBANK2
  1382  01822C                     __pidataBANK2:
  1383                           	opt callstack 0
  1384                           
  1385                           ;initializer for _V
  1386  01822C  00                 	db	0
  1387  01822D  00                 	db	0
  1388  01822E  00                 	db	0
  1389  01822F  00                 	db	0
  1390  018230  00                 	db	0
  1391  018231  00                 	db	0
  1392  018232  00                 	db	0
  1393  018233  00                 	db	0
  1394  018234  00                 	db	0
  1395  018235  00                 	db	0
  1396  018236  00                 	db	0
  1397  018237  00                 	db	0
  1398  018238  00                 	db	0
  1399  018239  00                 	db	0
  1400  01823A  00                 	db	0
  1401  01823B  00                 	db	0
  1402  01823C  00                 	db	0
  1403  01823D  00                 	db	0
  1404  01823E  00                 	db	0
  1405  01823F  00                 	db	0
  1406  018240  00                 	db	0
  1407  018241  00                 	db	0
  1408  018242  00                 	db	0
  1409  018243  00                 	db	0
  1410  018244  00                 	db	0
  1411  018245  00                 	db	0
  1412  018246  00                 	db	0
  1413  018247  00                 	db	0
  1414  018248  00                 	db	0
  1415  018249  00                 	db	0
  1416  01824A  00                 	db	0
  1417  01824B  00                 	db	0
  1418  01824C  00                 	db	0
  1419  01824D  00                 	db	0
  1420  01824E  00                 	db	0
  1421  01824F  00                 	db	0
  1422  018250  00                 	db	0
  1423  018251  00                 	db	0
  1424  018252  00                 	db	0
  1425  018253  00                 	db	0
  1426  018254  00                 	db	0
  1427  018255  00                 	db	0
  1428  018256  00                 	db	0
  1429  018257  00                 	db	0
  1430  018258  00                 	db	0
  1431  018259  00                 	db	0
  1432  01825A  00                 	db	0
  1433  01825B  00                 	db	0
  1434  01825C  00                 	db	0
  1435  01825D  00                 	db	0
  1436  01825E  00                 	db	0
  1437  01825F  00                 	db	0
  1438  018260  00                 	db	0
  1439  018261  00                 	db	0
  1440  018262  00                 	db	0
  1441  018263  00                 	db	0
  1442  018264  00                 	db	0
  1443  018265  00                 	db	0
  1444  018266  00                 	db	0
  1445  018267  00                 	db	0
  1446  018268  00                 	db	0
  1447  018269  00                 	db	0
  1448  01826A  00                 	db	0
  1449  01826B  00                 	db	0
  1450  01826C  00                 	db	0
  1451  01826D  00                 	db	0
  1452  01826E  00                 	db	0
  1453  01826F  00                 	db	0
  1454  018270  00                 	db	0
  1455  018271  00                 	db	0
  1456  018272  00                 	db	0
  1457  018273  00                 	db	0
  1458  018274  00                 	db	0
  1459  018275  00                 	db	0
  1460  018276  00                 	db	0
  1461  018277  00                 	db	0
  1462  018278  00                 	db	0
  1463  018279  00                 	db	0
  1464  01827A  00                 	db	0
  1465  01827B  00                 	db	0
  1466  01827C  00                 	db	0
  1467  01827D  00                 	db	0
  1468  01827E  00                 	db	0
  1469  01827F  00                 	db	0
  1470  018280  00                 	db	0
  1471  018281  00                 	db	0
  1472  018282  00                 	db	0
  1473  018283  00                 	db	0
  1474  018284  00                 	db	0
  1475  018285  00                 	db	0
  1476  018286  00                 	db	0
  1477  018287  00                 	db	0
  1478  018288  00                 	db	0
  1479  018289  00                 	db	0
  1480  01828A  00                 	db	0
  1481  01828B  00                 	db	0
  1482  01828C  00                 	db	0
  1483  01828D  00                 	db	0
  1484  01828E  00                 	db	0
  1485  01828F  00                 	db	0
  1486  018290  00                 	db	0
  1487  018291  00                 	db	0
  1488  018292  00                 	db	0
  1489  018293  00                 	db	0
  1490  018294  00                 	db	0
  1491  018295  00                 	db	0
  1492  018296  00                 	db	0
  1493  018297  00                 	db	0
  1494  018298  00                 	db	0
  1495  018299  00                 	db	0
  1496  01829A  00                 	db	0
  1497  01829B  00                 	db	0
  1498  01829C  00                 	db	0
  1499  01829D  00                 	db	0
  1500  01829E  00                 	db	0
  1501  01829F  00                 	db	0
  1502  0182A0  00                 	db	0
  1503  0182A1  00                 	db	0
  1504  0182A2  00                 	db	0
  1505  0182A3  00                 	db	0
  1506  0182A4  00                 	db	0
  1507  0182A5  00                 	db	0
  1508  0182A6  00                 	db	0
  1509  0182A7  00                 	db	0
  1510  0182A8  00                 	db	0
  1511  0182A9  00                 	db	0
  1512  0182AA  00                 	db	0
  1513  0182AB  00                 	db	0
  1514  0182AC  00                 	db	0
  1515  0182AD  0000               	dw	0
  1516  0182AF  0000               	dw	0
  1517  0182B1  0000               	dw	0
  1518  0182B3  0000               	dw	0
  1519  0182B5  00                 	db	0
  1520  0182B6  00                 	db	0
  1521  0182B7  00                 	db	0
  1522  0182B8  00                 	db	0
  1523  0182B9  00                 	db	0
  1524  0182BA  00                 	db	0
  1525  0182BB  0000               	dw	0
  1526  0182BD  0000               	dw	0
  1527  0182BF  0000               	dw	0
  1528  0182C1  0000               	dw	0
  1529  0182C3  0000               	dw	0
  1530  0182C5  0000               	dw	0
  1531  0182C7  00                 	db	0
  1532  0182C8  00                 	db	0
  1533  0182C9  00                 	db	0
  1534  0182CA  00                 	db	0
  1535  0182CB  00                 	db	0
  1536  0182CC  00                 	db	0
  1537  0182CD  00                 	db	0
  1538  0182CE  00                 	db	0
  1539  0182CF  00                 	db	0
  1540  0182D0  00                 	db	0
  1541  0182D1  0000               	dw	0
  1542  0182D3  0000               	dw	0
  1543  0182D5  2D                 	db	45
  1544  0182D6  00                 	db	0
  1545  0182D7  00                 	db	0
  1546  0182D8  0000               	dw	0
  1547  0182DA  0000               	dw	0
  1548  0182DC  0000               	dw	0
  1549  0182DE  0000               	dw	0
  1550  0182E0  0000               	dw	0
  1551  0182E2  0000               	dw	0
  1552  0182E4  0000               	dw	0
  1553  0182E6  0000               	dw	0
  1554                           
  1555                           	psect	mediumconst
  1556  00FC80                     __pmediumconst:
  1557                           	opt callstack 0
  1558  00FC80  00                 	db	0
  1559  00FC81                     _BVSOC_TABLE:
  1560                           	opt callstack 0
  1561  00FC81  59D8               	dw	23000
  1562  00FC83  0000               	dw	0
  1563  00FC85  0005               	dw	5
  1564  00FC87  0000               	dw	0
  1565  00FC89  5B68               	dw	23400
  1566  00FC8B  0000               	dw	0
  1567  00FC8D  000A               	dw	10
  1568  00FC8F  0000               	dw	0
  1569  00FC91  5C30               	dw	23600
  1570  00FC93  0000               	dw	0
  1571  00FC95  0014               	dw	20
  1572  00FC97  0000               	dw	0
  1573  00FC99  5E38               	dw	24120
  1574  00FC9B  0000               	dw	0
  1575  00FC9D  0019               	dw	25
  1576  00FC9F  0000               	dw	0
  1577  00FCA1  5E88               	dw	24200
  1578  00FCA3  0000               	dw	0
  1579  00FCA5  001E               	dw	30
  1580  00FCA7  0000               	dw	0
  1581  00FCA9  5F78               	dw	24440
  1582  00FCAB  0000               	dw	0
  1583  00FCAD  0028               	dw	40
  1584  00FCAF  0000               	dw	0
  1585  00FCB1  5FDC               	dw	24540
  1586  00FCB3  0000               	dw	0
  1587  00FCB5  002D               	dw	45
  1588  00FCB7  0000               	dw	0
  1589  00FCB9  6018               	dw	24600
  1590  00FCBB  0000               	dw	0
  1591  00FCBD  0032               	dw	50
  1592  00FCBF  0000               	dw	0
  1593  00FCC1  6046               	dw	24646
  1594  00FCC3  0000               	dw	0
  1595  00FCC5  0035               	dw	53
  1596  00FCC7  0000               	dw	0
  1597  00FCC9  607C               	dw	24700
  1598  00FCCB  0000               	dw	0
  1599  00FCCD  0037               	dw	55
  1600  00FCCF  0000               	dw	0
  1601  00FCD1  60AE               	dw	24750
  1602  00FCD3  0000               	dw	0
  1603  00FCD5  0039               	dw	57
  1604  00FCD7  0000               	dw	0
  1605  00FCD9  60E0               	dw	24800
  1606  00FCDB  0000               	dw	0
  1607  00FCDD  003C               	dw	60
  1608  00FCDF  0000               	dw	0
  1609  00FCE1  6112               	dw	24850
  1610  00FCE3  0000               	dw	0
  1611  00FCE5  003F               	dw	63
  1612  00FCE7  0000               	dw	0
  1613  00FCE9  6176               	dw	24950
  1614  00FCEB  0000               	dw	0
  1615  00FCED  0043               	dw	67
  1616  00FCEF  0000               	dw	0
  1617  00FCF1  61A8               	dw	25000
  1618  00FCF3  0000               	dw	0
  1619  00FCF5  0046               	dw	70
  1620  00FCF7  0000               	dw	0
  1621  00FCF9  61BC               	dw	25020
  1622  00FCFB  0000               	dw	0
  1623  00FCFD  0048               	dw	72
  1624  00FCFF  0000               	dw	0
  1625  00FD01  61D0               	dw	25040
  1626  00FD03  0000               	dw	0
  1627  00FD05  004B               	dw	75
  1628  00FD07  0000               	dw	0
  1629  00FD09  61DA               	dw	25050
  1630  00FD0B  0000               	dw	0
  1631  00FD0D  0050               	dw	80
  1632  00FD0F  0000               	dw	0
  1633  00FD11  61E4               	dw	25060
  1634  00FD13  0000               	dw	0
  1635  00FD15  0055               	dw	85
  1636  00FD17  0000               	dw	0
  1637  00FD19  61F8               	dw	25080
  1638  00FD1B  0000               	dw	0
  1639  00FD1D  005A               	dw	90
  1640  00FD1F  0000               	dw	0
  1641  00FD21  6208               	dw	25096
  1642  00FD23  0000               	dw	0
  1643  00FD25  005C               	dw	92
  1644  00FD27  0000               	dw	0
  1645  00FD29  6222               	dw	25122
  1646  00FD2B  0000               	dw	0
  1647  00FD2D  005D               	dw	93
  1648  00FD2F  0000               	dw	0
  1649  00FD31  6234               	dw	25140
  1650  00FD33  0000               	dw	0
  1651  00FD35  005F               	dw	95
  1652  00FD37  0000               	dw	0
  1653  00FD39  6248               	dw	25160
  1654  00FD3B  0000               	dw	0
  1655  00FD3D  0061               	dw	97
  1656  00FD3F  0000               	dw	0
  1657  00FD41  625C               	dw	25180
  1658  00FD43  0000               	dw	0
  1659  00FD45  0064               	dw	100
  1660  00FD47  0000               	dw	0
  1661  00FD49  6658               	dw	26200
  1662  00FD4B  0000               	dw	0
  1663  00FD4D  005A               	dw	90
  1664  00FD4F  0000               	dw	0
  1665  00FD51                     __end_of_BVSOC_TABLE:
  1666                           	opt callstack 0
  1667  00FD51                     _T:
  1668                           	opt callstack 0
  1669  00FD51  63                 	db	99
  1670  00FD52  6F                 	db	111
  1671  00FD53  6D                 	db	109
  1672  00FD54  6D                 	db	109
  1673  00FD55  61                 	db	97
  1674  00FD56  6E                 	db	110
  1675  00FD57  64                 	db	100
  1676  00FD58  73                 	db	115
  1677  00FD59  20                 	db	32
  1678  00FD5A  31                 	db	49
  1679  00FD5B  00                 	db	0
  1680  00FD5C  00                 	db	0
  1681  00FD5D  00                 	db	0
  1682  00FD5E  00                 	db	0
  1683  00FD5F  00                 	db	0
  1684  00FD60  00                 	db	0
  1685  00FD61  00                 	db	0
  1686  00FD62  00                 	db	0
  1687  00FD63  64                 	db	100
  1688  00FD64  69                 	db	105
  1689  00FD65  73                 	db	115
  1690  00FD66  70                 	db	112
  1691  00FD67  6C                 	db	108
  1692  00FD68  61                 	db	97
  1693  00FD69  79                 	db	121
  1694  00FD6A  73                 	db	115
  1695  00FD6B  20                 	db	32
  1696  00FD6C  31                 	db	49
  1697  00FD6D  00                 	db	0
  1698  00FD6E  00                 	db	0
  1699  00FD6F  00                 	db	0
  1700  00FD70  00                 	db	0
  1701  00FD71  00                 	db	0
  1702  00FD72  00                 	db	0
  1703  00FD73  00                 	db	0
  1704  00FD74  00                 	db	0
  1705  00FD75  63                 	db	99
  1706  00FD76  6F                 	db	111
  1707  00FD77  6D                 	db	109
  1708  00FD78  6D                 	db	109
  1709  00FD79  61                 	db	97
  1710  00FD7A  6E                 	db	110
  1711  00FD7B  64                 	db	100
  1712  00FD7C  73                 	db	115
  1713  00FD7D  20                 	db	32
  1714  00FD7E  32                 	db	50
  1715  00FD7F  00                 	db	0
  1716  00FD80  00                 	db	0
  1717  00FD81  00                 	db	0
  1718  00FD82  00                 	db	0
  1719  00FD83  00                 	db	0
  1720  00FD84  00                 	db	0
  1721  00FD85  00                 	db	0
  1722  00FD86  00                 	db	0
  1723  00FD87  64                 	db	100
  1724  00FD88  69                 	db	105
  1725  00FD89  73                 	db	115
  1726  00FD8A  70                 	db	112
  1727  00FD8B  6C                 	db	108
  1728  00FD8C  61                 	db	97
  1729  00FD8D  79                 	db	121
  1730  00FD8E  73                 	db	115
  1731  00FD8F  20                 	db	32
  1732  00FD90  32                 	db	50
  1733  00FD91  00                 	db	0
  1734  00FD92  00                 	db	0
  1735  00FD93  00                 	db	0
  1736  00FD94  00                 	db	0
  1737  00FD95  00                 	db	0
  1738  00FD96  00                 	db	0
  1739  00FD97  00                 	db	0
  1740  00FD98  00                 	db	0
  1741  00FD99  63                 	db	99
  1742  00FD9A  6F                 	db	111
  1743  00FD9B  6D                 	db	109
  1744  00FD9C  6D                 	db	109
  1745  00FD9D  61                 	db	97
  1746  00FD9E  6E                 	db	110
  1747  00FD9F  64                 	db	100
  1748  00FDA0  73                 	db	115
  1749  00FDA1  20                 	db	32
  1750  00FDA2  33                 	db	51
  1751  00FDA3  00                 	db	0
  1752  00FDA4  00                 	db	0
  1753  00FDA5  00                 	db	0
  1754  00FDA6  00                 	db	0
  1755  00FDA7  00                 	db	0
  1756  00FDA8  00                 	db	0
  1757  00FDA9  00                 	db	0
  1758  00FDAA  00                 	db	0
  1759  00FDAB  64                 	db	100
  1760  00FDAC  69                 	db	105
  1761  00FDAD  73                 	db	115
  1762  00FDAE  70                 	db	112
  1763  00FDAF  6C                 	db	108
  1764  00FDB0  61                 	db	97
  1765  00FDB1  79                 	db	121
  1766  00FDB2  73                 	db	115
  1767  00FDB3  20                 	db	32
  1768  00FDB4  33                 	db	51
  1769  00FDB5  00                 	db	0
  1770  00FDB6  00                 	db	0
  1771  00FDB7  00                 	db	0
  1772  00FDB8  00                 	db	0
  1773  00FDB9  00                 	db	0
  1774  00FDBA  00                 	db	0
  1775  00FDBB  00                 	db	0
  1776  00FDBC  00                 	db	0
  1777  00FDBD  63                 	db	99
  1778  00FDBE  6F                 	db	111
  1779  00FDBF  6D                 	db	109
  1780  00FDC0  6D                 	db	109
  1781  00FDC1  61                 	db	97
  1782  00FDC2  6E                 	db	110
  1783  00FDC3  64                 	db	100
  1784  00FDC4  73                 	db	115
  1785  00FDC5  20                 	db	32
  1786  00FDC6  34                 	db	52
  1787  00FDC7  00                 	db	0
  1788  00FDC8  00                 	db	0
  1789  00FDC9  00                 	db	0
  1790  00FDCA  00                 	db	0
  1791  00FDCB  00                 	db	0
  1792  00FDCC  00                 	db	0
  1793  00FDCD  00                 	db	0
  1794  00FDCE  00                 	db	0
  1795  00FDCF  64                 	db	100
  1796  00FDD0  69                 	db	105
  1797  00FDD1  73                 	db	115
  1798  00FDD2  70                 	db	112
  1799  00FDD3  6C                 	db	108
  1800  00FDD4  61                 	db	97
  1801  00FDD5  79                 	db	121
  1802  00FDD6  73                 	db	115
  1803  00FDD7  20                 	db	32
  1804  00FDD8  34                 	db	52
  1805  00FDD9  00                 	db	0
  1806  00FDDA  00                 	db	0
  1807  00FDDB  00                 	db	0
  1808  00FDDC  00                 	db	0
  1809  00FDDD  00                 	db	0
  1810  00FDDE  00                 	db	0
  1811  00FDDF  00                 	db	0
  1812  00FDE0  00                 	db	0
  1813  00FDE1                     __end_of_T:
  1814                           	opt callstack 0
  1815  00FDE1  0000               	dw	0
  1816  00FDE3  3F80               	dw	16256
  1817  00FDE5  0000               	dw	0
  1818  00FDE7  3FC0               	dw	16320
  1819  00FDE9                     __end_of_bp:
  1820                           	opt callstack 0
  1821  00FDE9  AA00               	dw	43520
  1822  00FDEB  3FB8               	dw	16312
  1823  00FDED                     __end_of_ivln2_h:
  1824                           	opt callstack 0
  1825  00FDED  23C6               	dw	9158
  1826  00FDEF  B8F6               	dw	47350
  1827  00FDF1                     __end_of_cp_l:
  1828                           	opt callstack 0
  1829  00FDF1  4000               	dw	16384
  1830  00FDF3  3F76               	dw	16246
  1831  00FDF5                     __end_of_cp_h:
  1832                           	opt callstack 0
  1833  0000                     _IVTADL	set	14493
  1834  0000                     _IVTADH	set	14494
  1835  0000                     _IVTADU	set	14495
  1836  0000                     _PIR6bits	set	14758
  1837  0000                     _PIR4bits	set	14756
  1838  0000                     _PIE8bits	set	14744
  1839  0000                     _PIR8bits	set	14760
  1840  0000                     _SCANPR	set	14839
  1841  0000                     _DMA2PR	set	14836
  1842  0000                     _DMA1PR	set	14835
  1843  0000                     _MAINPR	set	14834
  1844  0000                     _ISRPR	set	14833
  1845  0000                     _PIE2bits	set	14738
  1846  0000                     _PIR2bits	set	14754
  1847  0000                     _PIE9bits	set	14745
  1848  0000                     _PIR9bits	set	14761
  1849  0000                     _PIE6bits	set	14742
  1850  0000                     _PIE3bits	set	14739
  1851  0000                     _PMD7	set	14791
  1852  0000                     _PMD6	set	14790
  1853  0000                     _PMD5	set	14789
  1854  0000                     _PMD4	set	14788
  1855  0000                     _PMD3	set	14787
  1856  0000                     _PMD2	set	14786
  1857  0000                     _PMD1	set	14785
  1858  0000                     _PMD0	set	14784
  1859  0000                     _OSCTUNE	set	14814
  1860  0000                     _OSCFRQ	set	14815
  1861  0000                     _OSCEN	set	14813
  1862  0000                     _OSCCON3	set	14811
  1863  0000                     _OSCCON1	set	14809
  1864  0000                     _IPR8bits	set	14728
  1865  0000                     _IPR9bits	set	14729
  1866  0000                     _IPR5bits	set	14725
  1867  0000                     _IPR1bits	set	14721
  1868  0000                     _IPR3bits	set	14723
  1869  0000                     _IPR6bits	set	14726
  1870  0000                     _IPR2bits	set	14722
  1871  0000                     _PIE5bits	set	14741
  1872  0000                     _PIE1bits	set	14737
  1873  0000                     _PIR5bits	set	14757
  1874  0000                     _PIR1bits	set	14753
  1875  0000                     _PLLR	set	118496
  1876  0000                     _SPI1SDIPPS	set	15071
  1877  0000                     _U1RXPPS	set	15077
  1878  0000                     _RC6PPS	set	14870
  1879  0000                     _RC5PPS	set	14869
  1880  0000                     _INT1PPS	set	15041
  1881  0000                     _RD1PPS	set	14873
  1882  0000                     _INT0PPS	set	15040
  1883  0000                     _RC3PPS	set	14867
  1884  0000                     _RB6PPS	set	14862
  1885  0000                     _SPI1SCKPPS	set	15070
  1886  0000                     _U2RXPPS	set	15080
  1887  0000                     _SLRCONF	set	14995
  1888  0000                     _SLRCONE	set	14979
  1889  0000                     _SLRCOND	set	14963
  1890  0000                     _SLRCONC	set	14947
  1891  0000                     _SLRCONB	set	14931
  1892  0000                     _SLRCONA	set	14915
  1893  0000                     _ODCOND	set	14962
  1894  0000                     _ODCONC	set	14946
  1895  0000                     _ODCONB	set	14930
  1896  0000                     _ODCONA	set	14914
  1897  0000                     _ODCONF	set	14994
  1898  0000                     _ODCONE	set	14978
  1899  0000                     _WPUC	set	14945
  1900  0000                     _WPUA	set	14913
  1901  0000                     _WPUB	set	14929
  1902  0000                     _WPUE	set	14977
  1903  0000                     _WPUF	set	14993
  1904  0000                     _WPUD	set	14961
  1905  0000                     _ANSELA	set	14912
  1906  0000                     _ANSELF	set	14992
  1907  0000                     _ANSELE	set	14976
  1908  0000                     _ANSELB	set	14928
  1909  0000                     _ANSELC	set	14944
  1910  0000                     _ANSELD	set	14960
  1911  0000                     _DMA2SSA	set	15321
  1912  0000                     _DMA1SSA	set	15353
  1913  0000                     _DMA2DSZ	set	15310
  1914  0000                     _DMA2SSZ	set	15319
  1915  0000                     _DMA2DSA	set	15312
  1916  0000                     _DMA1DSZ	set	15342
  1917  0000                     _DMA1SSZ	set	15351
  1918  0000                     _DMA1DSA	set	15344
  1919  0000                     _DMA2CON0bits	set	15324
  1920  0000                     _DMA2CON1bits	set	15325
  1921  0000                     _DMA1CON0bits	set	15356
  1922  0000                     _DMA1CON1bits	set	15357
  1923  0000                     _DMA2CON0	set	15324
  1924  0000                     _DMA2AIRQ	set	15326
  1925  0000                     _DMA2SIRQ	set	15327
  1926  0000                     _DMA2CON1	set	15325
  1927  0000                     _DMA1CON0	set	15356
  1928  0000                     _DMA1AIRQ	set	15358
  1929  0000                     _DMA1SIRQ	set	15359
  1930  0000                     _DMA1CON1	set	15357
  1931  0000                     _CLKRCON	set	15589
  1932  0000                     _CLKRCLK	set	15590
  1933  0000                     _SPI1INTFbits	set	15642
  1934  0000                     _SPI1RXB	set	15632
  1935  0000                     _SPI1TXB	set	15633
  1936  0000                     _SPI1TCNTL	set	15634
  1937  0000                     _SPI1CON0	set	15636
  1938  0000                     _SPI1CLK	set	15644
  1939  0000                     _SPI1BAUD	set	15641
  1940  0000                     _SPI1CON2	set	15638
  1941  0000                     _SPI1CON1	set	15637
  1942  0000                     _U2RXB	set	15824
  1943  0000                     _U2TXB	set	15826
  1944  0000                     _U2ERRIE	set	15842
  1945  0000                     _U2ERRIR	set	15841
  1946  0000                     _U2UIR	set	15840
  1947  0000                     _U2FIFO	set	15839
  1948  0000                     _U2BRGH	set	15838
  1949  0000                     _U2BRGL	set	15837
  1950  0000                     _U2CON2	set	15836
  1951  0000                     _U2CON1	set	15835
  1952  0000                     _U2CON0	set	15834
  1953  0000                     _U2P3L	set	15832
  1954  0000                     _U2P2L	set	15830
  1955  0000                     _U2P1L	set	15828
  1956  0000                     _U1RXB	set	15848
  1957  0000                     _U1ERRIE	set	15866
  1958  0000                     _U1ERRIR	set	15865
  1959  0000                     _U1UIR	set	15864
  1960  0000                     _U1FIFO	set	15863
  1961  0000                     _U1BRGH	set	15862
  1962  0000                     _U1BRGL	set	15861
  1963  0000                     _U1CON2	set	15860
  1964  0000                     _U1CON1	set	15859
  1965  0000                     _U1CON0	set	15858
  1966  0000                     _U1P3H	set	15857
  1967  0000                     _U1P3L	set	15856
  1968  0000                     _U1P2H	set	15855
  1969  0000                     _U1P2L	set	15854
  1970  0000                     _U1P1H	set	15853
  1971  0000                     _U1P1L	set	15852
  1972  0000                     _FVRCON	set	16065
  1973  0000                     _ADFLTRL	set	16102
  1974  0000                     _ADFLTRH	set	16103
  1975  0000                     _ADCON0bits	set	16120
  1976  0000                     _ADCON0	set	16120
  1977  0000                     _ADCLK	set	16127
  1978  0000                     _ADACT	set	16126
  1979  0000                     _ADREF	set	16125
  1980  0000                     _ADSTAT	set	16124
  1981  0000                     _ADCON3	set	16123
  1982  0000                     _ADCON2	set	16122
  1983  0000                     _ADCON1	set	16121
  1984  0000                     _ADPREH	set	16119
  1985  0000                     _ADPREL	set	16118
  1986  0000                     _ADCAP	set	16117
  1987  0000                     _ADACQH	set	16116
  1988  0000                     _ADACQL	set	16115
  1989  0000                     _ADPCH	set	16113
  1990  0000                     _ADRPT	set	16108
  1991  0000                     _ADACCU	set	16106
  1992  0000                     _ADSTPTH	set	16101
  1993  0000                     _ADSTPTL	set	16100
  1994  0000                     _ADUTHH	set	16097
  1995  0000                     _ADUTHL	set	16096
  1996  0000                     _ADLTHH	set	16095
  1997  0000                     _ADLTHL	set	16094
  1998  0000                     _CCPTMRS1bits	set	16223
  1999  0000                     _PORTFbits	set	16335
  2000  0000                     _LATCbits	set	16316
  2001  0000                     _LATDbits	set	16317
  2002  0000                     _PORTBbits	set	16331
  2003  0000                     _T3CONbits	set	16294
  2004  0000                     _T3CON	set	16294
  2005  0000                     _TMR3L	set	16292
  2006  0000                     _TMR3H	set	16293
  2007  0000                     _T3CLK	set	16297
  2008  0000                     _T3GATE	set	16296
  2009  0000                     _T3GCON	set	16295
  2010  0000                     _T2CON	set	16300
  2011  0000                     _T2TMR	set	16298
  2012  0000                     _T2PR	set	16299
  2013  0000                     _T2RST	set	16303
  2014  0000                     _T2HLT	set	16301
  2015  0000                     _T2CLKCON	set	16302
  2016  0000                     _PWM8DCL	set	16224
  2017  0000                     _PWM8DCH	set	16225
  2018  0000                     _PWM8CON	set	16226
  2019  0000                     _LATEbits	set	16318
  2020  0000                     _T5CONbits	set	16282
  2021  0000                     _T5CON	set	16282
  2022  0000                     _TMR5L	set	16280
  2023  0000                     _TMR5H	set	16281
  2024  0000                     _T5CLK	set	16285
  2025  0000                     _T5GATE	set	16284
  2026  0000                     _T5GCON	set	16283
  2027  0000                     _T6CON	set	16276
  2028  0000                     _T6TMR	set	16274
  2029  0000                     _T6PR	set	16275
  2030  0000                     _T6RST	set	16279
  2031  0000                     _T6HLT	set	16277
  2032  0000                     _T6CLKCON	set	16278
  2033  0000                     _TRISD	set	16325
  2034  0000                     _TRISC	set	16324
  2035  0000                     _TRISB	set	16323
  2036  0000                     _TRISA	set	16322
  2037  0000                     _TRISF	set	16327
  2038  0000                     _TRISE	set	16326
  2039  0000                     _LATC	set	16316
  2040  0000                     _LATB	set	16315
  2041  0000                     _LATF	set	16319
  2042  0000                     _LATA	set	16314
  2043  0000                     _LATD	set	16317
  2044  0000                     _LATE	set	16318
  2045  0000                     _IVTLOCKbits	set	16340
  2046  0000                     _IVTLOCK	set	16340
  2047  0000                     _INTCON0bits	set	16338
  2048  0000                     _GIE	set	130711
  2049  00FDF5                     STR_46:
  2050                           
  2051                           ; BSR set to: 57
  2052  00FDF5  20                 	db	32
  2053  00FDF6  25                 	db	37
  2054  00FDF7  34                 	db	52	;'4'
  2055  00FDF8  2E                 	db	46
  2056  00FDF9  33                 	db	51	;'3'
  2057  00FDFA  66                 	db	102	;'f'
  2058  00FDFB  2C                 	db	44
  2059  00FDFC  25                 	db	37
  2060  00FDFD  34                 	db	52	;'4'
  2061  00FDFE  2E                 	db	46
  2062  00FDFF  33                 	db	51	;'3'
  2063  00FE00  66                 	db	102	;'f'
  2064  00FE01  2C                 	db	44
  2065  00FE02  25                 	db	37
  2066  00FE03  34                 	db	52	;'4'
  2067  00FE04  2E                 	db	46
  2068  00FE05  33                 	db	51	;'3'
  2069  00FE06  66                 	db	102	;'f'
  2070  00FE07  2C                 	db	44
  2071  00FE08  25                 	db	37
  2072  00FE09  34                 	db	52	;'4'
  2073  00FE0A  2E                 	db	46
  2074  00FE0B  33                 	db	51	;'3'
  2075  00FE0C  66                 	db	102	;'f'
  2076  00FE0D  2C                 	db	44
  2077  00FE0E  25                 	db	37
  2078  00FE0F  34                 	db	52	;'4'
  2079  00FE10  2E                 	db	46
  2080  00FE11  33                 	db	51	;'3'
  2081  00FE12  66                 	db	102	;'f'
  2082  00FE13  2C                 	db	44
  2083  00FE14  25                 	db	37
  2084  00FE15  34                 	db	52	;'4'
  2085  00FE16  2E                 	db	46
  2086  00FE17  33                 	db	51	;'3'
  2087  00FE18  66                 	db	102	;'f'
  2088  00FE19  2C                 	db	44
  2089  00FE1A  25                 	db	37
  2090  00FE1B  34                 	db	52	;'4'
  2091  00FE1C  2E                 	db	46
  2092  00FE1D  33                 	db	51	;'3'
  2093  00FE1E  66                 	db	102	;'f'
  2094  00FE1F  2C                 	db	44
  2095  00FE20  25                 	db	37
  2096  00FE21  34                 	db	52	;'4'
  2097  00FE22  2E                 	db	46
  2098  00FE23  33                 	db	51	;'3'
  2099  00FE24  66                 	db	102	;'f'
  2100  00FE25  2C                 	db	44
  2101  00FE26  25                 	db	37
  2102  00FE27  34                 	db	52	;'4'
  2103  00FE28  2E                 	db	46
  2104  00FE29  33                 	db	51	;'3'
  2105  00FE2A  66                 	db	102	;'f'
  2106  00FE2B  2C                 	db	44
  2107  00FE2C  25                 	db	37
  2108  00FE2D  34                 	db	52	;'4'
  2109  00FE2E  2E                 	db	46
  2110  00FE2F  33                 	db	51	;'3'
  2111  00FE30  66                 	db	102	;'f'
  2112  00FE31  2C                 	db	44
  2113  00FE32  25                 	db	37
  2114  00FE33  34                 	db	52	;'4'
  2115  00FE34  2E                 	db	46
  2116  00FE35  33                 	db	51	;'3'
  2117  00FE36  64                 	db	100	;'d'
  2118  00FE37  2C                 	db	44
  2119  00FE38  25                 	db	37
  2120  00FE39  34                 	db	52	;'4'
  2121  00FE3A  2E                 	db	46
  2122  00FE3B  33                 	db	51	;'3'
  2123  00FE3C  64                 	db	100	;'d'
  2124  00FE3D  0D                 	db	13
  2125  00FE3E  0A                 	db	10
  2126  00FE3F  00                 	db	0
  2127  00FE40                     
  2128                           ; BSR set to: 57
  2129  00FE40  20                 	db	32
  2130  00FE41  4D                 	db	77	;'M'
  2131  00FE42  65                 	db	101	;'e'
  2132  00FE43  73                 	db	115	;'s'
  2133  00FE44  67                 	db	103	;'g'
  2134  00FE45  20                 	db	32
  2135  00FE46  25                 	db	37
  2136  00FE47  64                 	db	100	;'d'
  2137  00FE48  20                 	db	32
  2138  00FE49  53                 	db	83	;'S'
  2139  00FE4A  74                 	db	116	;'t'
  2140  00FE4B  61                 	db	97	;'a'
  2141  00FE4C  63                 	db	99	;'c'
  2142  00FE4D  6B                 	db	107	;'k'
  2143  00FE4E  20                 	db	32
  2144  00FE4F  25                 	db	37
  2145  00FE50  64                 	db	100	;'d'
  2146  00FE51  20                 	db	32
  2147  00FE52  20                 	db	32
  2148  00FE53  20                 	db	32
  2149  00FE54  20                 	db	32
  2150  00FE55  20                 	db	32
  2151  00FE56  20                 	db	32
  2152  00FE57  00                 	db	0
  2153  00FE58                     STR_19:
  2154                           
  2155                           ; BSR set to: 57
  2156  00FE58  42                 	db	66	;'B'
  2157  00FE59  41                 	db	65	;'A'
  2158  00FE5A  48                 	db	72	;'H'
  2159  00FE5B  20                 	db	32
  2160  00FE5C  25                 	db	37
  2161  00FE5D  33                 	db	51	;'3'
  2162  00FE5E  2E                 	db	46
  2163  00FE5F  32                 	db	50	;'2'
  2164  00FE60  66                 	db	102	;'f'
  2165  00FE61  20                 	db	32
  2166  00FE62  50                 	db	80	;'P'
  2167  00FE63  25                 	db	37
  2168  00FE64  33                 	db	51	;'3'
  2169  00FE65  2E                 	db	46
  2170  00FE66  32                 	db	50	;'2'
  2171  00FE67  66                 	db	102	;'f'
  2172  00FE68  20                 	db	32
  2173  00FE69  20                 	db	32
  2174  00FE6A  20                 	db	32
  2175  00FE6B  00                 	db	0
  2176  00FE6C                     STR_39:
  2177                           
  2178                           ; BSR set to: 57
  2179  00FE6C  20                 	db	32
  2180  00FE6D  20                 	db	32
  2181  00FE6E  20                 	db	32
  2182  00FE6F  20                 	db	32
  2183  00FE70  20                 	db	32
  2184  00FE71  20                 	db	32
  2185  00FE72  20                 	db	32
  2186  00FE73  20                 	db	32
  2187  00FE74  20                 	db	32
  2188  00FE75  20                 	db	32
  2189  00FE76  20                 	db	32
  2190  00FE77  20                 	db	32
  2191  00FE78  20                 	db	32
  2192  00FE79  20                 	db	32
  2193  00FE7A  20                 	db	32
  2194  00FE7B  20                 	db	32
  2195  00FE7C  20                 	db	32
  2196  00FE7D  20                 	db	32
  2197  00FE7E  00                 	db	0
  2198  00FE7F                     STR_29:
  2199                           
  2200                           ; BSR set to: 57
  2201  00FE7F  48                 	db	72	;'H'
  2202  00FE80  45                 	db	69	;'E'
  2203  00FE81  4C                 	db	76	;'L'
  2204  00FE82  50                 	db	80	;'P'
  2205  00FE83  20                 	db	32
  2206  00FE84  25                 	db	37
  2207  00FE85  73                 	db	115	;'s'
  2208  00FE86  20                 	db	32
  2209  00FE87  20                 	db	32
  2210  00FE88  20                 	db	32
  2211  00FE89  20                 	db	32
  2212  00FE8A  20                 	db	32
  2213  00FE8B  20                 	db	32
  2214  00FE8C  20                 	db	32
  2215  00FE8D  20                 	db	32
  2216  00FE8E  20                 	db	32
  2217  00FE8F  20                 	db	32
  2218  00FE90  20                 	db	32
  2219  00FE91  00                 	db	0
  2220  00FE92                     
  2221                           ; BSR set to: 57
  2222  00FE92  44                 	db	68	;'D'
  2223  00FE93  49                 	db	73	;'I'
  2224  00FE94  53                 	db	83	;'S'
  2225  00FE95  50                 	db	80	;'P'
  2226  00FE96  4C                 	db	76	;'L'
  2227  00FE97  41                 	db	65	;'A'
  2228  00FE98  59                 	db	89	;'Y'
  2229  00FE99  20                 	db	32
  2230  00FE9A  25                 	db	37
  2231  00FE9B  73                 	db	115	;'s'
  2232  00FE9C  20                 	db	32
  2233  00FE9D  20                 	db	32
  2234  00FE9E  20                 	db	32
  2235  00FE9F  20                 	db	32
  2236  00FEA0  20                 	db	32
  2237  00FEA1  20                 	db	32
  2238  00FEA2  20                 	db	32
  2239  00FEA3  20                 	db	32
  2240  00FEA4  00                 	db	0
  2241  00FEA5                     STR_20:
  2242                           
  2243                           ; BSR set to: 57
  2244  00FEA5  53                 	db	83	;'S'
  2245  00FEA6  4F                 	db	79	;'O'
  2246  00FEA7  43                 	db	67	;'C'
  2247  00FEA8  20                 	db	32
  2248  00FEA9  25                 	db	37
  2249  00FEAA  64                 	db	100	;'d'
  2250  00FEAB  20                 	db	32
  2251  00FEAC  52                 	db	82	;'R'
  2252  00FEAD  55                 	db	85	;'U'
  2253  00FEAE  4E                 	db	78	;'N'
  2254  00FEAF  20                 	db	32
  2255  00FEB0  25                 	db	37
  2256  00FEB1  64                 	db	100	;'d'
  2257  00FEB2  20                 	db	32
  2258  00FEB3  20                 	db	32
  2259  00FEB4  20                 	db	32
  2260  00FEB5  20                 	db	32
  2261  00FEB6  20                 	db	32
  2262  00FEB7  00                 	db	0
  2263  00FEB8                     STR_12:
  2264                           
  2265                           ; BSR set to: 57
  2266  00FEB8  50                 	db	80	;'P'
  2267  00FEB9  56                 	db	86	;'V'
  2268  00FEBA  20                 	db	32
  2269  00FEBB  20                 	db	32
  2270  00FEBC  20                 	db	32
  2271  00FEBD  50                 	db	80	;'P'
  2272  00FEBE  57                 	db	87	;'W'
  2273  00FEBF  52                 	db	82	;'R'
  2274  00FEC0  20                 	db	32
  2275  00FEC1  25                 	db	37
  2276  00FEC2  33                 	db	51	;'3'
  2277  00FEC3  2E                 	db	46
  2278  00FEC4  32                 	db	50	;'2'
  2279  00FEC5  66                 	db	102	;'f'
  2280  00FEC6  20                 	db	32
  2281  00FEC7  20                 	db	32
  2282  00FEC8  20                 	db	32
  2283  00FEC9  20                 	db	32
  2284  00FECA  00                 	db	0
  2285  00FECB                     STR_14:
  2286                           
  2287                           ; BSR set to: 57
  2288  00FECB  49                 	db	73	;'I'
  2289  00FECC  4E                 	db	78	;'N'
  2290  00FECD  56                 	db	86	;'V'
  2291  00FECE  20                 	db	32
  2292  00FECF  20                 	db	32
  2293  00FED0  50                 	db	80	;'P'
  2294  00FED1  57                 	db	87	;'W'
  2295  00FED2  52                 	db	82	;'R'
  2296  00FED3  20                 	db	32
  2297  00FED4  25                 	db	37
  2298  00FED5  33                 	db	51	;'3'
  2299  00FED6  2E                 	db	46
  2300  00FED7  32                 	db	50	;'2'
  2301  00FED8  66                 	db	102	;'f'
  2302  00FED9  20                 	db	32
  2303  00FEDA  20                 	db	32
  2304  00FEDB  20                 	db	32
  2305  00FEDC  20                 	db	32
  2306  00FEDD  00                 	db	0
  2307  00FEDE                     STR_13:
  2308                           
  2309                           ; BSR set to: 57
  2310  00FEDE  4C                 	db	76	;'L'
  2311  00FEDF  4F                 	db	79	;'O'
  2312  00FEE0  41                 	db	65	;'A'
  2313  00FEE1  44                 	db	68	;'D'
  2314  00FEE2  20                 	db	32
  2315  00FEE3  50                 	db	80	;'P'
  2316  00FEE4  57                 	db	87	;'W'
  2317  00FEE5  52                 	db	82	;'R'
  2318  00FEE6  20                 	db	32
  2319  00FEE7  25                 	db	37
  2320  00FEE8  33                 	db	51	;'3'
  2321  00FEE9  2E                 	db	46
  2322  00FEEA  32                 	db	50	;'2'
  2323  00FEEB  66                 	db	102	;'f'
  2324  00FEEC  20                 	db	32
  2325  00FEED  20                 	db	32
  2326  00FEEE  20                 	db	32
  2327  00FEEF  20                 	db	32
  2328  00FEF0  00                 	db	0
  2329  00FEF1                     STR_18:
  2330                           
  2331                           ; BSR set to: 57
  2332  00FEF1  42                 	db	66	;'B'
  2333  00FEF2  41                 	db	65	;'A'
  2334  00FEF3  54                 	db	84	;'T'
  2335  00FEF4  54                 	db	84	;'T'
  2336  00FEF5  20                 	db	32
  2337  00FEF6  50                 	db	80	;'P'
  2338  00FEF7  57                 	db	87	;'W'
  2339  00FEF8  52                 	db	82	;'R'
  2340  00FEF9  20                 	db	32
  2341  00FEFA  25                 	db	37
  2342  00FEFB  33                 	db	51	;'3'
  2343  00FEFC  2E                 	db	46
  2344  00FEFD  32                 	db	50	;'2'
  2345  00FEFE  66                 	db	102	;'f'
  2346  00FEFF  20                 	db	32
  2347  00FF00  20                 	db	32
  2348  00FF01  20                 	db	32
  2349  00FF02  20                 	db	32
  2350  00FF03  00                 	db	0
  2351  00FF04                     STR_16:
  2352                           
  2353                           ; BSR set to: 57
  2354  00FF04  42                 	db	66	;'B'
  2355  00FF05  56                 	db	86	;'V'
  2356  00FF06  20                 	db	32
  2357  00FF07  25                 	db	37
  2358  00FF08  32                 	db	50	;'2'
  2359  00FF09  2E                 	db	46
  2360  00FF0A  32                 	db	50	;'2'
  2361  00FF0B  66                 	db	102	;'f'
  2362  00FF0C  20                 	db	32
  2363  00FF0D  42                 	db	66	;'B'
  2364  00FF0E  41                 	db	65	;'A'
  2365  00FF0F  20                 	db	32
  2366  00FF10  25                 	db	37
  2367  00FF11  32                 	db	50	;'2'
  2368  00FF12  2E                 	db	46
  2369  00FF13  32                 	db	50	;'2'
  2370  00FF14  66                 	db	102	;'f'
  2371  00FF15  20                 	db	32
  2372  00FF16  00                 	db	0
  2373  00FF17                     STR_17:
  2374                           
  2375                           ; BSR set to: 57
  2376  00FF17  43                 	db	67	;'C'
  2377  00FF18  56                 	db	86	;'V'
  2378  00FF19  20                 	db	32
  2379  00FF1A  25                 	db	37
  2380  00FF1B  32                 	db	50	;'2'
  2381  00FF1C  2E                 	db	46
  2382  00FF1D  32                 	db	50	;'2'
  2383  00FF1E  66                 	db	102	;'f'
  2384  00FF1F  20                 	db	32
  2385  00FF20  4C                 	db	76	;'L'
  2386  00FF21  41                 	db	65	;'A'
  2387  00FF22  20                 	db	32
  2388  00FF23  25                 	db	37
  2389  00FF24  32                 	db	50	;'2'
  2390  00FF25  2E                 	db	46
  2391  00FF26  32                 	db	50	;'2'
  2392  00FF27  66                 	db	102	;'f'
  2393  00FF28  20                 	db	32
  2394  00FF29  00                 	db	0
  2395  00FF2A                     STR_15:
  2396                           
  2397                           ; BSR set to: 57
  2398  00FF2A  50                 	db	80	;'P'
  2399  00FF2B  56                 	db	86	;'V'
  2400  00FF2C  20                 	db	32
  2401  00FF2D  25                 	db	37
  2402  00FF2E  32                 	db	50	;'2'
  2403  00FF2F  2E                 	db	46
  2404  00FF30  32                 	db	50	;'2'
  2405  00FF31  66                 	db	102	;'f'
  2406  00FF32  20                 	db	32
  2407  00FF33  50                 	db	80	;'P'
  2408  00FF34  41                 	db	65	;'A'
  2409  00FF35  20                 	db	32
  2410  00FF36  25                 	db	37
  2411  00FF37  32                 	db	50	;'2'
  2412  00FF38  2E                 	db	46
  2413  00FF39  32                 	db	50	;'2'
  2414  00FF3A  66                 	db	102	;'f'
  2415  00FF3B  20                 	db	32
  2416  00FF3C  00                 	db	0
  2417  00FF3D                     STR_8:
  2418                           
  2419                           ; BSR set to: 57
  2420  00FF3D  20                 	db	32
  2421  00FF3E  56                 	db	86	;'V'
  2422  00FF3F  54                 	db	84	;'T'
  2423  00FF40  45                 	db	69	;'E'
  2424  00FF41  52                 	db	82	;'R'
  2425  00FF42  4D                 	db	77	;'M'
  2426  00FF43  20                 	db	32
  2427  00FF44  23                 	db	35
  2428  00FF45  32                 	db	50	;'2'
  2429  00FF46  20                 	db	32
  2430  00FF47  20                 	db	32
  2431  00FF48  20                 	db	32
  2432  00FF49  20                 	db	32
  2433  00FF4A  20                 	db	32
  2434  00FF4B  20                 	db	32
  2435  00FF4C  20                 	db	32
  2436  00FF4D  00                 	db	0
  2437  00FF4E                     STR_4:
  2438                           
  2439                           ; BSR set to: 57
  2440  00FF4E  20                 	db	32
  2441  00FF4F  4E                 	db	78	;'N'
  2442  00FF50  53                 	db	83	;'S'
  2443  00FF51  41                 	db	65	;'A'
  2444  00FF52  53                 	db	83	;'S'
  2445  00FF53  50                 	db	80	;'P'
  2446  00FF54  4F                 	db	79	;'O'
  2447  00FF55  4F                 	db	79	;'O'
  2448  00FF56  4B                 	db	75	;'K'
  2449  00FF57  20                 	db	32
  2450  00FF58  20                 	db	32
  2451  00FF59  20                 	db	32
  2452  00FF5A  20                 	db	32
  2453  00FF5B  20                 	db	32
  2454  00FF5C  20                 	db	32
  2455  00FF5D  20                 	db	32
  2456  00FF5E  00                 	db	0
  2457  00FF5F                     STR_1:
  2458                           
  2459                           ; BSR set to: 57
  2460  00FF5F  20                 	db	32
  2461  00FF60  4D                 	db	77	;'M'
  2462  00FF61  42                 	db	66	;'B'
  2463  00FF62  4D                 	db	77	;'M'
  2464  00FF63  43                 	db	67	;'C'
  2465  00FF64  20                 	db	32
  2466  00FF65  53                 	db	83	;'S'
  2467  00FF66  4F                 	db	79	;'O'
  2468  00FF67  4C                 	db	76	;'L'
  2469  00FF68  41                 	db	65	;'A'
  2470  00FF69  52                 	db	82	;'R'
  2471  00FF6A  4D                 	db	77	;'M'
  2472  00FF6B  4F                 	db	79	;'O'
  2473  00FF6C  4E                 	db	78	;'N'
  2474  00FF6D  20                 	db	32
  2475  00FF6E  20                 	db	32
  2476  00FF6F  00                 	db	0
  2477  00FF70                     STR_5:
  2478                           
  2479                           ; BSR set to: 57
  2480  00FF70  20                 	db	32
  2481  00FF71  53                 	db	83	;'S'
  2482  00FF72  45                 	db	69	;'E'
  2483  00FF73  51                 	db	81	;'Q'
  2484  00FF74  55                 	db	85	;'U'
  2485  00FF75  45                 	db	69	;'E'
  2486  00FF76  4E                 	db	78	;'N'
  2487  00FF77  43                 	db	67	;'C'
  2488  00FF78  45                 	db	69	;'E'
  2489  00FF79  20                 	db	32
  2490  00FF7A  54                 	db	84	;'T'
  2491  00FF7B  45                 	db	69	;'E'
  2492  00FF7C  53                 	db	83	;'S'
  2493  00FF7D  54                 	db	84	;'T'
  2494  00FF7E  20                 	db	32
  2495  00FF7F  20                 	db	32
  2496  00FF80  00                 	db	0
  2497  00FF81                     STR_11:
  2498                           
  2499                           ; BSR set to: 57
  2500  00FF81  25                 	db	37
  2501  00FF82  64                 	db	100	;'d'
  2502  00FF83  20                 	db	32
  2503  00FF84  25                 	db	37
  2504  00FF85  32                 	db	50	;'2'
  2505  00FF86  2E                 	db	46
  2506  00FF87  34                 	db	52	;'4'
  2507  00FF88  66                 	db	102	;'f'
  2508  00FF89  2C                 	db	44
  2509  00FF8A  20                 	db	32
  2510  00FF8B  25                 	db	37
  2511  00FF8C  64                 	db	100	;'d'
  2512  00FF8D  20                 	db	32
  2513  00FF8E  20                 	db	32
  2514  00FF8F  20                 	db	32
  2515  00FF90  23                 	db	35
  2516  00FF91  00                 	db	0
  2517  00FF92                     STR_9:
  2518                           
  2519                           ; BSR set to: 57
  2520  00FF92  25                 	db	37
  2521  00FF93  64                 	db	100	;'d'
  2522  00FF94  20                 	db	32
  2523  00FF95  25                 	db	37
  2524  00FF96  32                 	db	50	;'2'
  2525  00FF97  2E                 	db	46
  2526  00FF98  34                 	db	52	;'4'
  2527  00FF99  66                 	db	102	;'f'
  2528  00FF9A  20                 	db	32
  2529  00FF9B  20                 	db	32
  2530  00FF9C  20                 	db	32
  2531  00FF9D  25                 	db	37
  2532  00FF9E  64                 	db	100	;'d'
  2533  00FF9F  20                 	db	32
  2534  00FFA0  20                 	db	32
  2535  00FFA1  00                 	db	0
  2536  00FFA2                     STR_33:
  2537                           
  2538                           ; BSR set to: 57
  2539  00FFA2  76                 	db	118	;'v'
  2540  00FFA3  74                 	db	116	;'t'
  2541  00FFA4  65                 	db	101	;'e'
  2542  00FFA5  72                 	db	114	;'r'
  2543  00FFA6  6D                 	db	109	;'m'
  2544  00FFA7  20                 	db	32
  2545  00FFA8  25                 	db	37
  2546  00FFA9  78                 	db	120	;'x'
  2547  00FFAA  3A                 	db	58	;':'
  2548  00FFAB  25                 	db	37
  2549  00FFAC  78                 	db	120	;'x'
  2550  00FFAD  20                 	db	32
  2551  00FFAE  20                 	db	32
  2552  00FFAF  20                 	db	32
  2553  00FFB0  00                 	db	0
  2554  00FFB1                     STR_2:
  2555                           
  2556                           ; BSR set to: 57
  2557  00FFB1  20                 	db	32
  2558  00FFB2  56                 	db	86	;'V'
  2559  00FFB3  65                 	db	101	;'e'
  2560  00FFB4  72                 	db	114	;'r'
  2561  00FFB5  73                 	db	115	;'s'
  2562  00FFB6  69                 	db	105	;'i'
  2563  00FFB7  6F                 	db	111	;'o'
  2564  00FFB8  6E                 	db	110	;'n'
  2565  00FFB9  20                 	db	32
  2566  00FFBA  25                 	db	37
  2567  00FFBB  73                 	db	115	;'s'
  2568  00FFBC  20                 	db	32
  2569  00FFBD  20                 	db	32
  2570  00FFBE  20                 	db	32
  2571  00FFBF  00                 	db	0
  2572  00FFC0                     STR_27:
  2573                           
  2574                           ; BSR set to: 57
  2575  00FFC0  44                 	db	68	;'D'
  2576  00FFC1  65                 	db	101	;'e'
  2577  00FFC2  63                 	db	99	;'c'
  2578  00FFC3  20                 	db	32
  2579  00FFC4  20                 	db	32
  2580  00FFC5  37                 	db	55	;'7'
  2581  00FFC6  20                 	db	32
  2582  00FFC7  32                 	db	50	;'2'
  2583  00FFC8  30                 	db	48	;'0'
  2584  00FFC9  31                 	db	49	;'1'
  2585  00FFCA  39                 	db	57	;'9'
  2586  00FFCB  00                 	db	0
  2587  00FFCC                     STR_31:
  2588                           
  2589                           ; BSR set to: 57
  2590  00FFCC  25                 	db	37
  2591  00FFCD  73                 	db	115	;'s'
  2592  00FFCE  20                 	db	32
  2593  00FFCF  20                 	db	32
  2594  00FFD0  20                 	db	32
  2595  00FFD1  20                 	db	32
  2596  00FFD2  20                 	db	32
  2597  00FFD3  20                 	db	32
  2598  00FFD4  20                 	db	32
  2599  00FFD5  00                 	db	0
  2600  00FFD6                     STR_28:
  2601                           
  2602                           ; BSR set to: 57
  2603  00FFD6  31                 	db	49	;'1'
  2604  00FFD7  32                 	db	50	;'2'
  2605  00FFD8  3A                 	db	58	;':'
  2606  00FFD9  30                 	db	48	;'0'
  2607  00FFDA  33                 	db	51	;'3'
  2608  00FFDB  3A                 	db	58	;':'
  2609  00FFDC  31                 	db	49	;'1'
  2610  00FFDD  35                 	db	53	;'5'
  2611  00FFDE  00                 	db	0
  2612  00FFDF                     STR_3:
  2613                           
  2614                           ; BSR set to: 57
  2615  00FFDF  30                 	db	48	;'0'
  2616  00FFE0  2E                 	db	46
  2617  00FFE1  39                 	db	57	;'9'
  2618  00FFE2  39                 	db	57	;'9'
  2619  00FFE3  39                 	db	57	;'9'
  2620  00FFE4  00                 	db	0
  2621  00FFE5                     STR_47:
  2622                           
  2623                           ; BSR set to: 57
  2624  00FFE5  49                 	db	73	;'I'
  2625  00FFE6  4E                 	db	78	;'N'
  2626  00FFE7  46                 	db	70	;'F'
  2627  00FFE8  00                 	db	0
  2628  00FFE9                     STR_51:
  2629                           
  2630                           ; BSR set to: 57
  2631  00FFE9  4E                 	db	78	;'N'
  2632  00FFEA  41                 	db	65	;'A'
  2633  00FFEB  4E                 	db	78	;'N'
  2634  00FFEC  00                 	db	0
  2635  00FFED                     STR_48:
  2636                           
  2637                           ; BSR set to: 57
  2638  00FFED  69                 	db	105	;'i'
  2639  00FFEE  6E                 	db	110	;'n'
  2640  00FFEF  66                 	db	102	;'f'
  2641  00FFF0  00                 	db	0
  2642  00FFF1                     STR_52:
  2643                           
  2644                           ; BSR set to: 57
  2645  00FFF1  6E                 	db	110	;'n'
  2646  00FFF2  61                 	db	97	;'a'
  2647  00FFF3  6E                 	db	110	;'n'
  2648  00FFF4  00                 	db	0
  2649  00FFF5                     STR_55:
  2650                           
  2651                           ; BSR set to: 57
  2652  00FFF5  6C                 	db	108	;'l'
  2653  00FFF6  66                 	db	102	;'f'
  2654  00FFF7  00                 	db	0
  2655  00FFF8                     STR_25:
  2656                           
  2657                           ; BSR set to: 57
  2658  00FFF8  25                 	db	37
  2659  00FFF9  63                 	db	99	;'c'
  2660  00FFFA  00                 	db	0
  2661  00FFFB                     STR_24:
  2662                           
  2663                           ; BSR set to: 57
  2664  00FFFB  25                 	db	37
  2665  00FFFC  73                 	db	115	;'s'
  2666  00FFFD  00                 	db	0
  2667  0000                     
  2668                           ; #config settings
  2669  00FFFE  00                 	db	0	; dummy byte at the end
  2670  0000                     
  2671                           	psect	cinit
  2672  017BB6                     __pcinit:
  2673                           	opt callstack 0
  2674  017BB6                     start_initialization:
  2675                           	opt callstack 0
  2676  017BB6                     __initialization:
  2677                           	opt callstack 0
  2678                           
  2679                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2680                           ; load TBLPTR registers with __pidataBIGRAM
  2681  017BB6  0EEC               	movlw	low __pidataBIGRAM
  2682  017BB8  6EF6               	movwf	tblptrl,c
  2683  017BBA  0E66               	movlw	high __pidataBIGRAM
  2684  017BBC  6EF7               	movwf	tblptrh,c
  2685  017BBE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2686  017BC0  6EF8               	movwf	tblptru,c
  2687  017BC2  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2688  017BC6  EE20 F200          	lfsr	2,512
  2689  017BCA                     copy_data0:
  2690  017BCA  0009               	tblrd		*+
  2691  017BCC  006F FFD7 FFEE     	movff	tablat,postinc0
  2692  017BD2  50DD               	movf	postdec2,w,c
  2693  017BD4  50D9               	movf	fsr2l,w,c
  2694  017BD6  E1F9               	bnz	copy_data0
  2695  017BD8  50DA               	movf	fsr2h,w,c
  2696  017BDA  E1F7               	bnz	copy_data0
  2697                           
  2698                           ; Initialize objects allocated to BANK2 (188 bytes)
  2699                           ; load TBLPTR registers with __pidataBANK2
  2700  017BDC  0E2C               	movlw	low __pidataBANK2
  2701  017BDE  6EF6               	movwf	tblptrl,c
  2702  017BE0  0E82               	movlw	high __pidataBANK2
  2703  017BE2  6EF7               	movwf	tblptrh,c
  2704  017BE4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2705  017BE6  6EF8               	movwf	tblptru,c
  2706  017BE8  EE00  F200         	lfsr	0,__pdataBANK2
  2707  017BEC  EE20 F0BC          	lfsr	2,188
  2708  017BF0                     copy_data1:
  2709  017BF0  0009               	tblrd		*+
  2710  017BF2  006F FFD7 FFEE     	movff	tablat,postinc0
  2711  017BF8  50DD               	movf	postdec2,w,c
  2712  017BFA  50D9               	movf	fsr2l,w,c
  2713  017BFC  E1F9               	bnz	copy_data1
  2714                           
  2715                           ; Initialize objects allocated to BANK1 (218 bytes)
  2716                           ; load TBLPTR registers with __pidataBANK1
  2717  017BFE  0EBA               	movlw	low __pidataBANK1
  2718  017C00  6EF6               	movwf	tblptrl,c
  2719  017C02  0E7F               	movlw	high __pidataBANK1
  2720  017C04  6EF7               	movwf	tblptrh,c
  2721  017C06  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2722  017C08  6EF8               	movwf	tblptru,c
  2723  017C0A  EE00  F100         	lfsr	0,__pdataBANK1
  2724  017C0E  EE20 F0DA          	lfsr	2,218
  2725  017C12                     copy_data2:
  2726  017C12  0009               	tblrd		*+
  2727  017C14  006F FFD7 FFEE     	movff	tablat,postinc0
  2728  017C1A  50DD               	movf	postdec2,w,c
  2729  017C1C  50D9               	movf	fsr2l,w,c
  2730  017C1E  E1F9               	bnz	copy_data2
  2731                           
  2732                           ; Initialize objects allocated to BANK0 (47 bytes)
  2733                           ; load TBLPTR registers with __pidataBANK0
  2734  017C20  0E2E               	movlw	low __pidataBANK0
  2735  017C22  6EF6               	movwf	tblptrl,c
  2736  017C24  0E96               	movlw	high __pidataBANK0
  2737  017C26  6EF7               	movwf	tblptrh,c
  2738  017C28  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2739  017C2A  6EF8               	movwf	tblptru,c
  2740  017C2C  EE00  F0CB         	lfsr	0,__pdataBANK0
  2741  017C30  EE20 F02F          	lfsr	2,47
  2742  017C34                     copy_data3:
  2743  017C34  0009               	tblrd		*+
  2744  017C36  006F FFD7 FFEE     	movff	tablat,postinc0
  2745  017C3C  50DD               	movf	postdec2,w,c
  2746  017C3E  50D9               	movf	fsr2l,w,c
  2747  017C40  E1F9               	bnz	copy_data3
  2748                           
  2749                           ; Clear objects allocated to BIGRAM (290 bytes)
  2750  017C42  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2751  017C46  EE20 F122          	lfsr	2,290
  2752  017C4A                     clear_0:
  2753  017C4A  6AEE               	clrf	postinc0,c
  2754  017C4C  50DD               	movf	postdec2,w,c
  2755  017C4E  50D9               	movf	fsr2l,w,c
  2756  017C50  E1FC               	bnz	clear_0
  2757  017C52  50DA               	movf	fsr2h,w,c
  2758  017C54  E1FA               	bnz	clear_0
  2759                           
  2760                           ; Clear objects allocated to BANK5 (255 bytes)
  2761  017C56  EE01  F100         	lfsr	0,__pbssBANK5
  2762  017C5A  EE20 F0FF          	lfsr	2,255
  2763  017C5E                     clear_1:
  2764  017C5E  6AEE               	clrf	postinc0,c
  2765  017C60  50DD               	movf	postdec2,w,c
  2766  017C62  50D9               	movf	fsr2l,w,c
  2767  017C64  E1FC               	bnz	clear_1
  2768  017C66  50DA               	movf	fsr2h,w,c
  2769  017C68  E1FA               	bnz	clear_1
  2770                           
  2771                           ; Clear objects allocated to BANK4 (134 bytes)
  2772  017C6A  EE01  F000         	lfsr	0,__pbssBANK4
  2773  017C6E  0E86               	movlw	134
  2774  017C70                     clear_2:
  2775  017C70  6AEE               	clrf	postinc0,c
  2776  017C72  06E8               	decf	wreg,f,c
  2777  017C74  E1FD               	bnz	clear_2
  2778                           
  2779                           ; Clear objects allocated to BANK3 (228 bytes)
  2780  017C76  EE00  F300         	lfsr	0,__pbssBANK3
  2781  017C7A  0EE4               	movlw	228
  2782  017C7C                     clear_3:
  2783  017C7C  6AEE               	clrf	postinc0,c
  2784  017C7E  06E8               	decf	wreg,f,c
  2785  017C80  E1FD               	bnz	clear_3
  2786                           
  2787                           ; Clear objects allocated to BANK2 (8 bytes)
  2788  017C82  EE00  F2D5         	lfsr	0,__pbssBANK2
  2789  017C86  0E08               	movlw	8
  2790  017C88                     clear_4:
  2791  017C88  6AEE               	clrf	postinc0,c
  2792  017C8A  06E8               	decf	wreg,f,c
  2793  017C8C  E1FD               	bnz	clear_4
  2794                           
  2795                           ; Clear objects allocated to BANK1 (32 bytes)
  2796  017C8E  EE00  F1DA         	lfsr	0,__pbssBANK1
  2797  017C92  0E20               	movlw	32
  2798  017C94                     clear_5:
  2799  017C94  6AEE               	clrf	postinc0,c
  2800  017C96  06E8               	decf	wreg,f,c
  2801  017C98  E1FD               	bnz	clear_5
  2802                           
  2803                           ; Clear objects allocated to BANK0 (107 bytes)
  2804  017C9A  EE00  F060         	lfsr	0,__pbssBANK0
  2805  017C9E  0E6B               	movlw	107
  2806  017CA0                     clear_6:
  2807  017CA0  6AEE               	clrf	postinc0,c
  2808  017CA2  06E8               	decf	wreg,f,c
  2809  017CA4  E1FD               	bnz	clear_6
  2810                           
  2811                           ; Clear objects allocated to COMRAM (23 bytes)
  2812  017CA6  EE00  F021         	lfsr	0,__pbssCOMRAM
  2813  017CAA  0E17               	movlw	23
  2814  017CAC                     clear_7:
  2815  017CAC  6AEE               	clrf	postinc0,c
  2816  017CAE  06E8               	decf	wreg,f,c
  2817  017CB0  E1FD               	bnz	clear_7
  2818                           
  2819                           ;
  2820                           ; Setup IVTBASE
  2821                           ;
  2822  017CB2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2823  017CB4  6ED5               	movwf	213,c
  2824  017CB6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2825  017CB8  6ED6               	movwf	214,c
  2826  017CBA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2827  017CBC  6ED7               	movwf	215,c
  2828  017CBE                     end_of_initialization:
  2829                           	opt callstack 0
  2830  017CBE                     __end_of__initialization:
  2831                           	opt callstack 0
  2832  017CBE  0100               	movlb	0
  2833  017CC0  EFC1  F08E         	goto	_main	;jump to C main() function
  2834                           
  2835                           	psect	bssCOMRAM
  2836  000021                     __pbssCOMRAM:
  2837                           	opt callstack 0
  2838  000021                     _width:
  2839                           	opt callstack 0
  2840  000021                     	ds	2
  2841  000023                     _prec:
  2842                           	opt callstack 0
  2843  000023                     	ds	2
  2844  000025                     _flags:
  2845                           	opt callstack 0
  2846  000025                     	ds	2
  2847  000027                     _timer3ReloadVal:
  2848                           	opt callstack 0
  2849  000027                     	ds	2
  2850  000029                     TMR5_ISR@CountCallBack:
  2851                           	opt callstack 0
  2852  000029                     	ds	2
  2853  00002B                     _timer5ReloadVal:
  2854                           	opt callstack 0
  2855  00002B                     	ds	2
  2856  00002D                     Volts_to_SOC@slot:
  2857                           	opt callstack 0
  2858  00002D                     	ds	1
  2859  00002E                     _mode_sw:
  2860                           	opt callstack 0
  2861  00002E                     	ds	1
  2862  00002F                     _uart2RxCount:
  2863                           	opt callstack 0
  2864  00002F                     	ds	1
  2865  000030                     _uart2RxTail:
  2866                           	opt callstack 0
  2867  000030                     	ds	1
  2868  000031                     _uart2RxHead:
  2869                           	opt callstack 0
  2870  000031                     	ds	1
  2871  000032                     _uart2TxBufferRemaining:
  2872                           	opt callstack 0
  2873  000032                     	ds	1
  2874  000033                     _uart2TxTail:
  2875                           	opt callstack 0
  2876  000033                     	ds	1
  2877  000034                     _uart2TxHead:
  2878                           	opt callstack 0
  2879  000034                     	ds	1
  2880  000035                     _uart1RxCount:
  2881                           	opt callstack 0
  2882  000035                     	ds	1
  2883  000036                     _uart1RxTail:
  2884                           	opt callstack 0
  2885  000036                     	ds	1
  2886  000037                     _uart1RxHead:
  2887                           	opt callstack 0
  2888  000037                     	ds	1
  2889                           
  2890                           	psect	bssBANK0
  2891  000060                     __pbssBANK0:
  2892                           	opt callstack 0
  2893  000060                     _S:
  2894                           	opt callstack 0
  2895  000060                     	ds	41
  2896  000089                     _spi_link:
  2897                           	opt callstack 0
  2898  000089                     	ds	12
  2899  000095                     floorf@F524:
  2900                           	opt callstack 0
  2901  000095                     	ds	4
  2902  000099                     ___fpclassifyf@F463:
  2903                           	opt callstack 0
  2904  000099                     	ds	4
  2905  00009D                     _utctime:
  2906                           	opt callstack 0
  2907  00009D                     	ds	4
  2908  0000A1                     wdtdelay@dcount:
  2909                           	opt callstack 0
  2910  0000A1                     	ds	4
  2911  0000A5                     _P:
  2912                           	opt callstack 0
  2913  0000A5                     	ds	4
  2914  0000A9                     _TMR3_InterruptHandler:
  2915                           	opt callstack 0
  2916  0000A9                     	ds	3
  2917  0000AC                     _TMR5_InterruptHandler:
  2918                           	opt callstack 0
  2919  0000AC                     	ds	3
  2920  0000AF                     _TMR6_InterruptHandler:
  2921                           	opt callstack 0
  2922  0000AF                     	ds	3
  2923  0000B2                     _ADCC_ADTI_InterruptHandler:
  2924                           	opt callstack 0
  2925  0000B2                     	ds	3
  2926  0000B5                     _ADCC_ADI_InterruptHandler:
  2927                           	opt callstack 0
  2928  0000B5                     	ds	3
  2929  0000B8                     _UART1_RxInterruptHandler:
  2930                           	opt callstack 0
  2931  0000B8                     	ds	3
  2932  0000BB                     _UART2_TxInterruptHandler:
  2933                           	opt callstack 0
  2934  0000BB                     	ds	3
  2935  0000BE                     _UART2_RxInterruptHandler:
  2936                           	opt callstack 0
  2937  0000BE                     	ds	3
  2938  0000C1                     _INT1_InterruptHandler:
  2939                           	opt callstack 0
  2940  0000C1                     	ds	3
  2941  0000C4                     _INT0_InterruptHandler:
  2942                           	opt callstack 0
  2943  0000C4                     	ds	3
  2944  0000C7                     _nout:
  2945                           	opt callstack 0
  2946  0000C7                     	ds	2
  2947  0000C9                     TMR3_ISR@CountCallBack:
  2948                           	opt callstack 0
  2949  0000C9                     	ds	2
  2950                           
  2951                           	psect	dataBANK0
  2952  0000CB                     __pdataBANK0:
  2953                           	opt callstack 0
  2954  0000CB                     _R:
  2955                           	opt callstack 0
  2956  0000CB                     	ds	40
  2957  0000F3                     _H:
  2958                           	opt callstack 0
  2959  0000F3                     	ds	7
  2960                           
  2961                           	psect	bssBANK1
  2962  0001DA                     __pbssBANK1:
  2963                           	opt callstack 0
  2964  0001DA                     _tickCount:
  2965                           	opt callstack 0
  2966  0001DA                     	ds	24
  2967  0001F2                     _uart1RxBuffer:
  2968                           	opt callstack 0
  2969  0001F2                     	ds	8
  2970                           
  2971                           	psect	dataBANK1
  2972  000100                     __pdataBANK1:
  2973                           	opt callstack 0
  2974  000100                     _C:
  2975                           	opt callstack 0
  2976  000100                     	ds	211
  2977  0001D3                     stoa@F1166:
  2978                           	opt callstack 0
  2979  0001D3                     	ds	7
  2980                           
  2981                           	psect	bssBANK2
  2982  0002D5                     __pbssBANK2:
  2983                           	opt callstack 0
  2984  0002D5                     _seed:
  2985                           	opt callstack 0
  2986  0002D5                     	ds	8
  2987                           
  2988                           	psect	dataBANK2
  2989  000200                     __pdataBANK2:
  2990                           	opt callstack 0
  2991  000200                     _V:
  2992                           	opt callstack 0
  2993  000200                     	ds	188
  2994                           
  2995                           	psect	bssBANK3
  2996  000300                     __pbssBANK3:
  2997                           	opt callstack 0
  2998  000300                     lp_filter@smooth:
  2999                           	opt callstack 0
  3000  000300                     	ds	84
  3001  000354                     _uart2TxBuffer:
  3002                           	opt callstack 0
  3003  000354                     	ds	64
  3004  000394                     _dbuf:
  3005                           	opt callstack 0
  3006  000394                     	ds	80
  3007                           
  3008                           	psect	bssBANK4
  3009  000400                     __pbssBANK4:
  3010                           	opt callstack 0
  3011  000400                     _ring_buf2:
  3012                           	opt callstack 0
  3013  000400                     	ds	67
  3014  000443                     _ring_buf1:
  3015                           	opt callstack 0
  3016  000443                     	ds	67
  3017                           
  3018                           	psect	bssBANK5
  3019  000500                     __pbssBANK5:
  3020                           	opt callstack 0
  3021  000500                     _uart2RxBuffer:
  3022                           	opt callstack 0
  3023  000500                     	ds	255
  3024                           
  3025                           	psect	bssBIGRAM
  3026  0007FF                     __pbssBIGRAM:
  3027                           	opt callstack 0
  3028  0007FF                     _D:
  3029                           	opt callstack 0
  3030  0007FF                     	ds	290
  3031                           
  3032                           	psect	dataBIGRAM
  3033  0005FF                     __pdataBIGRAM:
  3034                           	opt callstack 0
  3035  0005FF                     _port_data:
  3036                           	opt callstack 0
  3037  0005FF                     	ds	512
  3038                           
  3039                           	psect	cstackBANK2
  3040  0002BC                     __pcstackBANK2:
  3041                           	opt callstack 0
  3042  0002BC                     ??_TMR3_ISR:
  3043                           
  3044                           ; 1 bytes @ 0x0
  3045  0002BC                     	ds	25
  3046                           
  3047                           	psect	cstackCOMRAM
  3048  000038                     __pcstackCOMRAM:
  3049                           	opt callstack 0
  3050  000038                     ??_ADCC_ThresholdISR:
  3051  000038                     
  3052                           ; 1 bytes @ 0x0
  3053  000038                     	ds	5
  3054  00003D                     ??_TMR6_ISR:
  3055                           
  3056                           ; 1 bytes @ 0x5
  3057  00003D                     	ds	1
  3058  00003E                     ??_INT1_ISR:
  3059  00003E                     
  3060                           ; 1 bytes @ 0x6
  3061  00003E                     	ds	4
  3062  000042                     ??_TMR5_ISR:
  3063                           
  3064                           ; 1 bytes @ 0xA
  3065  000042                     	ds	4
  3066                           
  3067 ;;
  3068 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  3069 ;;
  3070 ;; *************** function _main *****************
  3071 ;; Defined at:
  3072 ;;		line 174 in file "main.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  k               1  [STACK] unsigned char 
  3077 ;;  j               1  [STACK] unsigned char 
  3078 ;;  i               1  [STACK] unsigned char 
  3079 ;;  inp_index       1  [STACK] unsigned char 
  3080 ;;  mode            1  [STACK] enum E17013
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1  [STACK] void 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3094 ;;Total ram usage:        0 bytes
  3095 ;; Hardware stack levels required when called:   28
  3096 ;; This function calls:
  3097 ;;		_SYSTEM_Initialize
  3098 ;;		_StartTimer
  3099 ;;		_TimerDone
  3100 ;;		_WaitMs
  3101 ;;		_calc_model_data
  3102 ;;		_check_adc_scan
  3103 ;;		_check_enter_button
  3104 ;;		_check_help
  3105 ;;		_clear_adc_scan
  3106 ;;		_clear_hid_pflags
  3107 ;;		_convert_adc_data
  3108 ;;		_eaDogM_WriteCommand
  3109 ;;		_get_raw_result
  3110 ;;		_get_switch
  3111 ;;		_get_vterm_ptr
  3112 ;;		_hid_display
  3113 ;;		_init_bsoc
  3114 ;;		_init_display
  3115 ;;		_init_port_dma
  3116 ;;		_lp_filter
  3117 ;;		_mode_lamp_dim
  3118 ;;		_set_display_info
  3119 ;;		_set_vterm
  3120 ;;		_sprintf
  3121 ;;		_srand
  3122 ;;		_start_adc_scan
  3123 ;;		_start_switch_handler
  3124 ;;		_static_soc
  3125 ;;		_update_lcd
  3126 ;; This function is called by:
  3127 ;;		Startup code after reset
  3128 ;; This function uses a reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text0
  3132  011D82                     __ptext0:
  3133                           	opt callstack 0
  3134  011D82                     _main:
  3135                           	opt callstack 0
  3136                           
  3137                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3138  011D82  0E05               	movlw	5
  3139  011D84  26E1               	addwf	fsr1l,f,c
  3140  011D86  0E00               	movlw	0
  3141  011D88  22E2               	addwfc	fsr1h,f,c
  3142                           
  3143                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  3144                           ;stkvar	_inp_index @ sp[(-5)+3]
  3145                           
  3146                           ;incstack = 0
  3147  011D8A  0EFE               	movlw	-2
  3148  011D8C  6AE3               	clrf	plusw1,c
  3149                           
  3150                           ;stkvar	_i @ sp[(-5)+2]
  3151  011D8E  0EFD               	movlw	-3
  3152  011D90  6AE3               	clrf	plusw1,c
  3153                           
  3154                           ;stkvar	_j @ sp[(-5)+1]
  3155  011D92  0EFC               	movlw	-4
  3156  011D94  6AE3               	clrf	plusw1,c
  3157  011D96  2AE3               	incf	plusw1,f,c
  3158                           
  3159                           ;stkvar	_k @ sp[(-5)+0]
  3160  011D98  0EFB               	movlw	-5
  3161  011D9A  6AE3               	clrf	plusw1,c
  3162  011D9C  82E3               	bsf	plusw1,1,c
  3163                           
  3164                           ;main.c: 180:  SYSTEM_Initialize();
  3165  011D9E  EC57  F0C8         	call	_SYSTEM_Initialize	;wreg free
  3166                           
  3167                           ; BSR set to: 60
  3168                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3169  011DA2  8ED2               	bsf	210,7,c	;volatile
  3170                           
  3171                           ; BSR set to: 60
  3172                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3173  011DA4  8CD2               	bsf	210,6,c	;volatile
  3174                           
  3175                           ; BSR set to: 60
  3176                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3177  011DA6  0102               	movlb	2	; () banked
  3178  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  3179                           
  3180                           ; BSR set to: 2
  3181                           ;main.c: 193:  WaitMs(300);
  3182  011DAA  0E2C               	movlw	44
  3183  011DAC  6EE6               	movwf	postinc1,c
  3184  011DAE  0E01               	movlw	1
  3185  011DB0  6EE6               	movwf	postinc1,c
  3186  011DB2  EC4D  F0CA         	call	_WaitMs	;wreg free
  3187                           
  3188                           ;main.c: 194:  if (PORTBbits.RB0) {
  3189  011DB6  A0CB               	btfss	203,0,c	;volatile
  3190  011DB8  D004               	goto	l11720
  3191                           
  3192                           ;main.c: 195:   mode = UI_STATE_HOST;
  3193                           ;stkvar	_mode @ sp[(-5)+4]
  3194  011DBA  0EFF               	movlw	-1
  3195  011DBC  6AE3               	clrf	plusw1,c
  3196  011DBE  2AE3               	incf	plusw1,f,c
  3197                           
  3198                           ;main.c: 196:  } else {
  3199  011DC0  D004               	goto	l11722
  3200  011DC2                     l11720:
  3201                           
  3202                           ;main.c: 197:   mode = UI_STATE_LOG;
  3203                           ;stkvar	_mode @ sp[(-5)+4]
  3204  011DC2  0EFF               	movlw	-1
  3205  011DC4  6AE3               	clrf	plusw1,c
  3206  011DC6  80E3               	bsf	plusw1,0,c
  3207  011DC8  82E3               	bsf	plusw1,1,c	;indir
  3208  011DCA                     l11722:
  3209                           
  3210                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3211                           ;stkvar	_mode @ sp[(-5)+4]
  3212  011DCA  0EFF               	movlw	-1
  3213  011DCC  04E3               	decf	plusw1,w,c
  3214  011DCE  A4D8               	btfss	status,2,c
  3215  011DD0  D007               	goto	l1308
  3216                           
  3217                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3218  011DD2  80BD               	bsf	189,0,c	;volatile
  3219                           
  3220                           ;main.c: 202:   V.mode_pwm = 70;
  3221  011DD4  0E00               	movlw	0
  3222  011DD6  0102               	movlb	2	; () banked
  3223  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3224  011DDA  0E46               	movlw	70
  3225  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3226                           
  3227                           ;main.c: 203:  } else {
  3228  011DDE  D004               	goto	l11726
  3229  011DE0                     l1308:
  3230  011DE0  90BD               	bcf	189,0,c	;volatile
  3231                           
  3232                           ;main.c: 205:   V.mode_pwm = 0;
  3233  011DE2  0102               	movlb	2	; () banked
  3234  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3235  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3236  011DE8                     l11726:
  3237                           
  3238                           ; BSR set to: 2
  3239                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3240  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  3241  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3242  011DF4  EC27  F0CE         	call	_mode_lamp_dim	;wreg free
  3243  011DF8  D0DC               	goto	l11778
  3244  011DFA                     l11728:
  3245                           
  3246                           ; BSR set to: 2
  3247                           ;main.c: 215:    init_port_dma();
  3248  011DFA  ECB7  F0CA         	call	_init_port_dma	;wreg free
  3249                           
  3250                           ; BSR set to: 59
  3251                           ;main.c: 217:    init_display();
  3252  011DFE  EC68  F0BF         	call	_init_display	;wreg free
  3253                           
  3254                           ; BSR set to: 61
  3255                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3256  011E02  0E0C               	movlw	12
  3257  011E04  6EE6               	movwf	postinc1,c
  3258  011E06  EC7B  F0CE         	call	_eaDogM_WriteCommand	;wreg free
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;main.c: 220:    V.ui_state = mode;
  3262                           ;stkvar	_mode @ sp[(-5)+4]
  3263  011E0A  0EFF               	movlw	-1
  3264  011E0C  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;main.c: 221:    srand(1957);
  3268  011E12  0EA5               	movlw	165
  3269  011E14  6EE6               	movwf	postinc1,c
  3270  011E16  0E07               	movlw	7
  3271  011E18  6EE6               	movwf	postinc1,c
  3272  011E1A  EC83  F0CA         	call	_srand	;wreg free
  3273                           
  3274                           ; BSR set to: 2
  3275                           ;main.c: 222:    set_vterm(0);
  3276  011E1E  0E00               	movlw	0
  3277  011E20  6EE6               	movwf	postinc1,c
  3278  011E22  ECD1  F0CD         	call	_set_vterm	;wreg free
  3279                           
  3280                           ;main.c: 223:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3281  011E26  0E5F               	movlw	low STR_1
  3282  011E28  6EE6               	movwf	postinc1,c
  3283  011E2A  0EFF               	movlw	high STR_1
  3284  011E2C  6EE6               	movwf	postinc1,c
  3285  011E2E  0E00               	movlw	0
  3286  011E30  6EE6               	movwf	postinc1,c
  3287  011E32  0E00               	movlw	0
  3288  011E34  6EE6               	movwf	postinc1,c
  3289  011E36  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3290  011E3A  0060  F007  FFE6   	movff	btemp,postinc1
  3291  011E40  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3292  011E46  0E04               	movlw	4
  3293  011E48  6EE6               	movwf	postinc1,c
  3294  011E4A  EC62  F0BE         	call	_sprintf	;wreg free
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;main.c: 224:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.999");
  3298  011E4E  0EDF               	movlw	low STR_3
  3299  011E50  6EE6               	movwf	postinc1,c
  3300  011E52  0EFF               	movlw	high STR_3
  3301  011E54  6EE6               	movwf	postinc1,c
  3302  011E56  0EB1               	movlw	low STR_2
  3303  011E58  6EE6               	movwf	postinc1,c
  3304  011E5A  0EFF               	movlw	high STR_2
  3305  011E5C  6EE6               	movwf	postinc1,c
  3306  011E5E  0E00               	movlw	0
  3307  011E60  6EE6               	movwf	postinc1,c
  3308  011E62  0E01               	movlw	1
  3309  011E64  6EE6               	movwf	postinc1,c
  3310  011E66  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3311  011E6A  0060  F007  FFE6   	movff	btemp,postinc1
  3312  011E70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3313  011E76  0E06               	movlw	6
  3314  011E78  6EE6               	movwf	postinc1,c
  3315  011E7A  EC62  F0BE         	call	_sprintf	;wreg free
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;main.c: 225:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3319  011E7E  0E4E               	movlw	low STR_4
  3320  011E80  6EE6               	movwf	postinc1,c
  3321  011E82  0EFF               	movlw	high STR_4
  3322  011E84  6EE6               	movwf	postinc1,c
  3323  011E86  0E00               	movlw	0
  3324  011E88  6EE6               	movwf	postinc1,c
  3325  011E8A  0E02               	movlw	2
  3326  011E8C  6EE6               	movwf	postinc1,c
  3327  011E8E  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3328  011E92  0060  F007  FFE6   	movff	btemp,postinc1
  3329  011E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3330  011E9E  0E04               	movlw	4
  3331  011EA0  6EE6               	movwf	postinc1,c
  3332  011EA2  EC62  F0BE         	call	_sprintf	;wreg free
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;main.c: 226:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3336  011EA6  0E70               	movlw	low STR_5
  3337  011EA8  6EE6               	movwf	postinc1,c
  3338  011EAA  0EFF               	movlw	high STR_5
  3339  011EAC  6EE6               	movwf	postinc1,c
  3340  011EAE  0E02               	movlw	2
  3341  011EB0  6EE6               	movwf	postinc1,c
  3342  011EB2  0E00               	movlw	0
  3343  011EB4  6EE6               	movwf	postinc1,c
  3344  011EB6  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3345  011EBA  0060  F007  FFE6   	movff	btemp,postinc1
  3346  011EC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3347  011EC6  0E04               	movlw	4
  3348  011EC8  6EE6               	movwf	postinc1,c
  3349  011ECA  EC62  F0BE         	call	_sprintf	;wreg free
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;main.c: 227:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.999");
  3353  011ECE  0EDF               	movlw	low STR_3
  3354  011ED0  6EE6               	movwf	postinc1,c
  3355  011ED2  0EFF               	movlw	high STR_3
  3356  011ED4  6EE6               	movwf	postinc1,c
  3357  011ED6  0EB1               	movlw	low STR_2
  3358  011ED8  6EE6               	movwf	postinc1,c
  3359  011EDA  0EFF               	movlw	high STR_2
  3360  011EDC  6EE6               	movwf	postinc1,c
  3361  011EDE  0E02               	movlw	2
  3362  011EE0  6EE6               	movwf	postinc1,c
  3363  011EE2  0E01               	movlw	1
  3364  011EE4  6EE6               	movwf	postinc1,c
  3365  011EE6  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3366  011EEA  0060  F007  FFE6   	movff	btemp,postinc1
  3367  011EF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3368  011EF6  0E06               	movlw	6
  3369  011EF8  6EE6               	movwf	postinc1,c
  3370  011EFA  EC62  F0BE         	call	_sprintf	;wreg free
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;main.c: 228:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3374  011EFE  0E3D               	movlw	low STR_8
  3375  011F00  6EE6               	movwf	postinc1,c
  3376  011F02  0EFF               	movlw	high STR_8
  3377  011F04  6EE6               	movwf	postinc1,c
  3378  011F06  0E02               	movlw	2
  3379  011F08  6EE6               	movwf	postinc1,c
  3380  011F0A  0E02               	movlw	2
  3381  011F0C  6EE6               	movwf	postinc1,c
  3382  011F0E  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3383  011F12  0060  F007  FFE6   	movff	btemp,postinc1
  3384  011F18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3385  011F1E  0E04               	movlw	4
  3386  011F20  6EE6               	movwf	postinc1,c
  3387  011F22  EC62  F0BE         	call	_sprintf	;wreg free
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;main.c: 229:    update_lcd(0);
  3391  011F26  0E00               	movlw	0
  3392  011F28  6EE6               	movwf	postinc1,c
  3393  011F2A  EC53  F0BD         	call	_update_lcd	;wreg free
  3394                           
  3395                           ;main.c: 230:    WaitMs(3000);
  3396  011F2E  0EB8               	movlw	184
  3397  011F30  6EE6               	movwf	postinc1,c
  3398  011F32  0E0B               	movlw	11
  3399  011F34  6EE6               	movwf	postinc1,c
  3400  011F36  EC4D  F0CA         	call	_WaitMs	;wreg free
  3401                           
  3402                           ;main.c: 231:    StartTimer(TMR_DISPLAY, 250);
  3403  011F3A  0EFA               	movlw	250
  3404  011F3C  6EE6               	movwf	postinc1,c
  3405  011F3E  0E00               	movlw	0
  3406  011F40  6EE6               	movwf	postinc1,c
  3407  011F42  0E0A               	movlw	10
  3408  011F44  6EE6               	movwf	postinc1,c
  3409  011F46  EC92  F0C9         	call	_StartTimer	;wreg free
  3410                           
  3411                           ;main.c: 232:    StartTimer(TMR_ADC, 200);
  3412  011F4A  0EC8               	movlw	200
  3413  011F4C  6EE6               	movwf	postinc1,c
  3414  011F4E  0E00               	movlw	0
  3415  011F50  6EE6               	movwf	postinc1,c
  3416  011F52  0E01               	movlw	1
  3417  011F54  6EE6               	movwf	postinc1,c
  3418  011F56  EC92  F0C9         	call	_StartTimer	;wreg free
  3419                           
  3420                           ;main.c: 233:    StartTimer(TMR_INFO, 3000);
  3421  011F5A  0EB8               	movlw	184
  3422  011F5C  6EE6               	movwf	postinc1,c
  3423  011F5E  0E0B               	movlw	11
  3424  011F60  6EE6               	movwf	postinc1,c
  3425  011F62  0E07               	movlw	7
  3426  011F64  6EE6               	movwf	postinc1,c
  3427  011F66  EC92  F0C9         	call	_StartTimer	;wreg free
  3428                           
  3429                           ;main.c: 234:    StartTimer(TMR_FLIPPER, 1500);
  3430  011F6A  0EDC               	movlw	220
  3431  011F6C  6EE6               	movwf	postinc1,c
  3432  011F6E  0E05               	movlw	5
  3433  011F70  6EE6               	movwf	postinc1,c
  3434  011F72  0E0B               	movlw	11
  3435  011F74  6EE6               	movwf	postinc1,c
  3436  011F76  EC92  F0C9         	call	_StartTimer	;wreg free
  3437                           
  3438                           ;main.c: 235:    StartTimer(TMR_HELPDIS, 3000);
  3439  011F7A  0EB8               	movlw	184
  3440  011F7C  6EE6               	movwf	postinc1,c
  3441  011F7E  0E0B               	movlw	11
  3442  011F80  6EE6               	movwf	postinc1,c
  3443  011F82  0E09               	movlw	9
  3444  011F84  6EE6               	movwf	postinc1,c
  3445  011F86  EC92  F0C9         	call	_StartTimer	;wreg free
  3446                           
  3447                           ;main.c: 237:    start_adc_scan();
  3448  011F8A  EC6A  F0C6         	call	_start_adc_scan	;wreg free
  3449                           
  3450                           ;main.c: 238:    start_switch_handler();
  3451  011F8E  EC93  F0CD         	call	_start_switch_handler	;wreg free
  3452                           
  3453                           ; BSR set to: 57
  3454                           ;main.c: 239:    WaitMs(1000);
  3455  011F92  0EE8               	movlw	232
  3456  011F94  6EE6               	movwf	postinc1,c
  3457  011F96  0E03               	movlw	3
  3458  011F98  6EE6               	movwf	postinc1,c
  3459  011F9A  EC4D  F0CA         	call	_WaitMs	;wreg free
  3460                           
  3461                           ;main.c: 240:    static_soc();
  3462  011F9E  EC04  F0CD         	call	_static_soc	;wreg free
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;main.c: 241:    init_bsoc();
  3466  011FA2  ECBE  F0B7         	call	_init_bsoc	;wreg free
  3467                           
  3468                           ;main.c: 243:    break;
  3469  011FA6  D01C               	goto	l11780
  3470  011FA8                     l1316:
  3471                           
  3472                           ; BSR set to: 2
  3473                           ;main.c: 249:    P.SYSTEM_STABLE = 1;
  3474  011FA8  0100               	movlb	0	; () banked
  3475  011FAA  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  3476                           
  3477                           ;main.c: 250:    break;
  3478  011FAC  D019               	goto	l11780
  3479  011FAE                     l1318:
  3480                           
  3481                           ; BSR set to: 2
  3482                           ;main.c: 253:    V.ui_state = UI_STATE_INIT;
  3483  011FAE  6B00               	clrf	_V& (0+255),b	;volatile
  3484                           
  3485                           ;main.c: 254:    break;
  3486  011FB0  D017               	goto	l11780
  3487  011FB2                     l11778:
  3488  011FB2  0102               	movlb	2	; () banked
  3489  011FB4  5100               	movf	_V& (0+255),w,b	;volatile
  3490  011FB6  6E0B               	movwf	(btemp+10)^0,c
  3491  011FB8  6A0C               	clrf	(btemp+11)^0,c
  3492                           
  3493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3494                           ; Switch size 1, requested type "simple"
  3495                           ; Number of cases is 1, Range of values is 0 to 0
  3496                           ; switch strategies available:
  3497                           ; Name         Instructions Cycles
  3498                           ; simple_byte            4     3 (average)
  3499                           ;	Chosen strategy is simple_byte
  3500  011FBA  500C               	movf	(btemp+11)^0,w,c
  3501  011FBC  0A00               	xorlw	0	; case 0
  3502  011FBE  A4D8               	btfss	status,2,c
  3503  011FC0  D7F6               	goto	l1318
  3504                           
  3505                           ; BSR set to: 2
  3506                           ; Switch size 1, requested type "simple"
  3507                           ; Number of cases is 5, Range of values is 0 to 5
  3508                           ; switch strategies available:
  3509                           ; Name         Instructions Cycles
  3510                           ; simple_byte           16     9 (average)
  3511                           ;	Chosen strategy is simple_byte
  3512  011FC2  500B               	movf	(btemp+10)^0,w,c
  3513  011FC4  0A00               	xorlw	0	; case 0
  3514  011FC6  B4D8               	btfsc	status,2,c
  3515  011FC8  D718               	goto	l11728
  3516  011FCA  0A01               	xorlw	1	; case 1
  3517  011FCC  B4D8               	btfsc	status,2,c
  3518  011FCE  D008               	goto	l11780
  3519  011FD0  0A02               	xorlw	2	; case 3
  3520  011FD2  B4D8               	btfsc	status,2,c
  3521  011FD4  D005               	goto	l11780
  3522  011FD6  0A07               	xorlw	7	; case 4
  3523  011FD8  B4D8               	btfsc	status,2,c
  3524  011FDA  D7E6               	goto	l1316
  3525  011FDC  0A01               	xorlw	1	; case 5
  3526  011FDE  D7E7               	goto	l1318
  3527  011FE0                     l11780:
  3528                           
  3529                           ;main.c: 257:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3530  011FE0  0E01               	movlw	1
  3531  011FE2  6EE6               	movwf	postinc1,c
  3532  011FE4  ECD7  F0CB         	call	_TimerDone	;wreg free
  3533  011FE8  5001               	movf	btemp^0,w,c
  3534  011FEA  B4D8               	btfsc	status,2,c
  3535  011FEC  D013               	goto	l11792
  3536  011FEE  ECC1  F0CE         	call	_check_adc_scan	;wreg free
  3537  011FF2  5001               	movf	btemp^0,w,c
  3538  011FF4  B4D8               	btfsc	status,2,c
  3539  011FF6  D00E               	goto	l11792
  3540                           
  3541                           ;main.c: 261:    convert_adc_data();
  3542  011FF8  EC74  F0C1         	call	_convert_adc_data	;wreg free
  3543                           
  3544                           ;main.c: 265:    clear_adc_scan();
  3545  011FFC  ECC9  F0CE         	call	_clear_adc_scan	;wreg free
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;main.c: 266:    start_adc_scan();
  3549  012000  EC6A  F0C6         	call	_start_adc_scan	;wreg free
  3550                           
  3551                           ;main.c: 267:    StartTimer(TMR_ADC, 200);
  3552  012004  0EC8               	movlw	200
  3553  012006  6EE6               	movwf	postinc1,c
  3554  012008  0E00               	movlw	0
  3555  01200A  6EE6               	movwf	postinc1,c
  3556  01200C  0E01               	movlw	1
  3557  01200E  6EE6               	movwf	postinc1,c
  3558  012010  EC92  F0C9         	call	_StartTimer	;wreg free
  3559  012014                     l11792:
  3560                           
  3561                           ;main.c: 274:   if (TimerDone(TMR_DISPLAY)) {
  3562                           
  3563                           ;main.c: 270:   if (V.ticks) {
  3564  012014  0E0A               	movlw	10
  3565  012016  6EE6               	movwf	postinc1,c
  3566  012018  ECD7  F0CB         	call	_TimerDone	;wreg free
  3567  01201C  5001               	movf	btemp^0,w,c
  3568  01201E  B4D8               	btfsc	status,2,c
  3569  012020  D27F               	goto	l11834
  3570                           
  3571                           ;main.c: 275:    if (TimerDone(TMR_HELPDIS)) {
  3572  012022  0E09               	movlw	9
  3573  012024  6EE6               	movwf	postinc1,c
  3574  012026  ECD7  F0CB         	call	_TimerDone	;wreg free
  3575  01202A  5001               	movf	btemp^0,w,c
  3576  01202C  B4D8               	btfsc	status,2,c
  3577  01202E  D004               	goto	l11800
  3578                           
  3579                           ;main.c: 276:     set_display_info(DIS_STR);
  3580  012030  0E00               	movlw	0
  3581  012032  6EE6               	movwf	postinc1,c
  3582  012034  ECE0  F0CD         	call	_set_display_info	;wreg free
  3583  012038                     l11800:
  3584                           
  3585                           ;main.c: 278:    calc_model_data();
  3586  012038  EC05  F0AB         	call	_calc_model_data	;wreg free
  3587                           
  3588                           ; BSR set to: 1
  3589                           ;main.c: 285:     hid_display(&H);
  3590                           
  3591                           ;main.c: 280:    if (0) {
  3592  01203C  0EF3               	movlw	_H& (0+255)
  3593  01203E  6EE6               	movwf	postinc1,c
  3594  012040  ECE7  F0BE         	call	_hid_display	;wreg free
  3595                           
  3596                           ;main.c: 286:     switch (H.hid_display) {
  3597  012044  D248               	goto	l11826
  3598  012046                     l1326:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;main.c: 288:      V.calib = 0;
  3602  012046  0102               	movlb	2	; () banked
  3603  012048  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3604                           
  3605                           ; BSR set to: 2
  3606                           ;main.c: 289:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3607  01204A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3608  012050  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3609  012056  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3610  01205C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3611  012062  0EB8               	movlw	low STR_12
  3612  012064  6EE6               	movwf	postinc1,c
  3613  012066  0EFE               	movlw	high STR_12
  3614  012068  6EE6               	movwf	postinc1,c
  3615  01206A  0E00               	movlw	0
  3616  01206C  6EE6               	movwf	postinc1,c
  3617  01206E  0E00               	movlw	0
  3618  012070  6EE6               	movwf	postinc1,c
  3619  012072  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3620  012076  0060  F007  FFE6   	movff	btemp,postinc1
  3621  01207C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3622  012082  0E08               	movlw	8
  3623  012084  6EE6               	movwf	postinc1,c
  3624  012086  EC62  F0BE         	call	_sprintf	;wreg free
  3625                           
  3626                           ;main.c: 290:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3627  01208A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3628  012090  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3629  012096  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3630  01209C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3631  0120A2  0EDE               	movlw	low STR_13
  3632  0120A4  6EE6               	movwf	postinc1,c
  3633  0120A6  0EFE               	movlw	high STR_13
  3634  0120A8  6EE6               	movwf	postinc1,c
  3635  0120AA  0E00               	movlw	0
  3636  0120AC  6EE6               	movwf	postinc1,c
  3637  0120AE  0E01               	movlw	1
  3638  0120B0  6EE6               	movwf	postinc1,c
  3639  0120B2  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3640  0120B6  0060  F007  FFE6   	movff	btemp,postinc1
  3641  0120BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3642  0120C2  0E08               	movlw	8
  3643  0120C4  6EE6               	movwf	postinc1,c
  3644  0120C6  EC62  F0BE         	call	_sprintf	;wreg free
  3645                           
  3646                           ;main.c: 291:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3647  0120CA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  3648  0120D0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  3649  0120D6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  3650  0120DC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  3651  0120E2  0ECB               	movlw	low STR_14
  3652  0120E4  6EE6               	movwf	postinc1,c
  3653  0120E6  0EFE               	movlw	high STR_14
  3654  0120E8  6EE6               	movwf	postinc1,c
  3655  0120EA  0E00               	movlw	0
  3656  0120EC  6EE6               	movwf	postinc1,c
  3657  0120EE  0E02               	movlw	2
  3658  0120F0  6EE6               	movwf	postinc1,c
  3659  0120F2  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3660  0120F6  0060  F007  FFE6   	movff	btemp,postinc1
  3661  0120FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3662  012102  0E08               	movlw	8
  3663  012104  6EE6               	movwf	postinc1,c
  3664  012106  EC62  F0BE         	call	_sprintf	;wreg free
  3665                           
  3666                           ;main.c: 292:      break;
  3667  01210A  D1FA               	goto	l11828
  3668  01210C                     l1328:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 294:      V.calib = 0;
  3672  01210C  0102               	movlb	2	; () banked
  3673  01210E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3674                           
  3675                           ; BSR set to: 2
  3676                           ;main.c: 295:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3677  012110  0060  F413  FFE6   	movff	_C+4,postinc1
  3678  012116  0060  F417  FFE6   	movff	_C+5,postinc1
  3679  01211C  0060  F41B  FFE6   	movff	_C+6,postinc1
  3680  012122  0060  F41F  FFE6   	movff	_C+7,postinc1
  3681  012128  0060  F453  FFE6   	movff	_C+20,postinc1
  3682  01212E  0060  F457  FFE6   	movff	_C+21,postinc1
  3683  012134  0060  F45B  FFE6   	movff	_C+22,postinc1
  3684  01213A  0060  F45F  FFE6   	movff	_C+23,postinc1
  3685  012140  0E2A               	movlw	low STR_15
  3686  012142  6EE6               	movwf	postinc1,c
  3687  012144  0EFF               	movlw	high STR_15
  3688  012146  6EE6               	movwf	postinc1,c
  3689  012148  0E00               	movlw	0
  3690  01214A  6EE6               	movwf	postinc1,c
  3691  01214C  0E00               	movlw	0
  3692  01214E  6EE6               	movwf	postinc1,c
  3693  012150  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3694  012154  0060  F007  FFE6   	movff	btemp,postinc1
  3695  01215A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3696  012160  0E0C               	movlw	12
  3697  012162  6EE6               	movwf	postinc1,c
  3698  012164  EC62  F0BE         	call	_sprintf	;wreg free
  3699                           
  3700                           ;main.c: 296:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3701  012168  0060  F403  FFE6   	movff	_C,postinc1
  3702  01216E  0060  F407  FFE6   	movff	_C+1,postinc1
  3703  012174  0060  F40B  FFE6   	movff	_C+2,postinc1
  3704  01217A  0060  F40F  FFE6   	movff	_C+3,postinc1
  3705  012180  0060  F443  FFE6   	movff	_C+16,postinc1
  3706  012186  0060  F447  FFE6   	movff	_C+17,postinc1
  3707  01218C  0060  F44B  FFE6   	movff	_C+18,postinc1
  3708  012192  0060  F44F  FFE6   	movff	_C+19,postinc1
  3709  012198  0E04               	movlw	low STR_16
  3710  01219A  6EE6               	movwf	postinc1,c
  3711  01219C  0EFF               	movlw	high STR_16
  3712  01219E  6EE6               	movwf	postinc1,c
  3713  0121A0  0E00               	movlw	0
  3714  0121A2  6EE6               	movwf	postinc1,c
  3715  0121A4  0E01               	movlw	1
  3716  0121A6  6EE6               	movwf	postinc1,c
  3717  0121A8  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3718  0121AC  0060  F007  FFE6   	movff	btemp,postinc1
  3719  0121B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3720  0121B8  0E0C               	movlw	12
  3721  0121BA  6EE6               	movwf	postinc1,c
  3722  0121BC  EC62  F0BE         	call	_sprintf	;wreg free
  3723                           
  3724                           ;main.c: 297:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  3725  0121C0  0060  F503  FFE6   	movff	_C+64,postinc1
  3726  0121C6  0060  F507  FFE6   	movff	_C+65,postinc1
  3727  0121CC  0060  F50B  FFE6   	movff	_C+66,postinc1
  3728  0121D2  0060  F50F  FFE6   	movff	_C+67,postinc1
  3729  0121D8  0060  F423  FFE6   	movff	_C+8,postinc1
  3730  0121DE  0060  F427  FFE6   	movff	_C+9,postinc1
  3731  0121E4  0060  F42B  FFE6   	movff	_C+10,postinc1
  3732  0121EA  0060  F42F  FFE6   	movff	_C+11,postinc1
  3733  0121F0  0E17               	movlw	low STR_17
  3734  0121F2  6EE6               	movwf	postinc1,c
  3735  0121F4  0EFF               	movlw	high STR_17
  3736  0121F6  6EE6               	movwf	postinc1,c
  3737  0121F8  0E00               	movlw	0
  3738  0121FA  6EE6               	movwf	postinc1,c
  3739  0121FC  0E02               	movlw	2
  3740  0121FE  6EE6               	movwf	postinc1,c
  3741  012200  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3742  012204  0060  F007  FFE6   	movff	btemp,postinc1
  3743  01220A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3744  012210  0E0C               	movlw	12
  3745  012212  6EE6               	movwf	postinc1,c
  3746  012214  EC62  F0BE         	call	_sprintf	;wreg free
  3747                           
  3748                           ;main.c: 298:      break;
  3749  012218  D173               	goto	l11828
  3750  01221A                     l1329:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;main.c: 300:      V.calib = 0;
  3754  01221A  0102               	movlb	2	; () banked
  3755  01221C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3756                           
  3757                           ; BSR set to: 2
  3758                           ;main.c: 301:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3759  01221E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3760  012224  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3761  01222A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3762  012230  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3763  012236  0EF1               	movlw	low STR_18
  3764  012238  6EE6               	movwf	postinc1,c
  3765  01223A  0EFE               	movlw	high STR_18
  3766  01223C  6EE6               	movwf	postinc1,c
  3767  01223E  0E00               	movlw	0
  3768  012240  6EE6               	movwf	postinc1,c
  3769  012242  0E00               	movlw	0
  3770  012244  6EE6               	movwf	postinc1,c
  3771  012246  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3772  01224A  0060  F007  FFE6   	movff	btemp,postinc1
  3773  012250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3774  012256  0E08               	movlw	8
  3775  012258  6EE6               	movwf	postinc1,c
  3776  01225A  EC62  F0BE         	call	_sprintf	;wreg free
  3777                           
  3778                           ;main.c: 302:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  3779  01225E  0060  F613  FFE6   	movff	_C+132,postinc1
  3780  012264  0060  F617  FFE6   	movff	_C+133,postinc1
  3781  01226A  0060  F61B  FFE6   	movff	_C+134,postinc1
  3782  012270  0060  F61F  FFE6   	movff	_C+135,postinc1
  3783  012276  0060  F603  FFE6   	movff	_C+128,postinc1
  3784  01227C  0060  F607  FFE6   	movff	_C+129,postinc1
  3785  012282  0060  F60B  FFE6   	movff	_C+130,postinc1
  3786  012288  0060  F60F  FFE6   	movff	_C+131,postinc1
  3787  01228E  0E58               	movlw	low STR_19
  3788  012290  6EE6               	movwf	postinc1,c
  3789  012292  0EFE               	movlw	high STR_19
  3790  012294  6EE6               	movwf	postinc1,c
  3791  012296  0E00               	movlw	0
  3792  012298  6EE6               	movwf	postinc1,c
  3793  01229A  0E01               	movlw	1
  3794  01229C  6EE6               	movwf	postinc1,c
  3795  01229E  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3796  0122A2  0060  F007  FFE6   	movff	btemp,postinc1
  3797  0122A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3798  0122AE  0E0C               	movlw	12
  3799  0122B0  6EE6               	movwf	postinc1,c
  3800  0122B2  EC62  F0BE         	call	_sprintf	;wreg free
  3801                           
  3802                           ;main.c: 303:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  3803  0122B6  0060  F673  FFE6   	movff	_C+156,postinc1
  3804  0122BC  0060  F677  FFE6   	movff	_C+157,postinc1
  3805  0122C2  0060  F67B  FFE6   	movff	_C+158,postinc1
  3806  0122C8  0060  F67F  FFE6   	movff	_C+159,postinc1
  3807  0122CE  0EA5               	movlw	low STR_20
  3808  0122D0  6EE6               	movwf	postinc1,c
  3809  0122D2  0EFE               	movlw	high STR_20
  3810  0122D4  6EE6               	movwf	postinc1,c
  3811  0122D6  0E00               	movlw	0
  3812  0122D8  6EE6               	movwf	postinc1,c
  3813  0122DA  0E02               	movlw	2
  3814  0122DC  6EE6               	movwf	postinc1,c
  3815  0122DE  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3816  0122E2  0060  F007  FFE6   	movff	btemp,postinc1
  3817  0122E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3818  0122EE  0E08               	movlw	8
  3819  0122F0  6EE6               	movwf	postinc1,c
  3820  0122F2  EC62  F0BE         	call	_sprintf	;wreg free
  3821                           
  3822                           ;main.c: 304:      break;
  3823  0122F6  D104               	goto	l11828
  3824  0122F8                     l11812:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;main.c: 306:      if (!V.calib) {
  3828  0122F8  0102               	movlb	2	; () banked
  3829  0122FA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  3830  0122FC  A4D8               	btfss	status,2,c
  3831  0122FE  D02D               	goto	l11816
  3832                           
  3833                           ; BSR set to: 2
  3834                           ;main.c: 307:       lp_filter(0.0, i, -1);
  3835  012300  0EFF               	movlw	255
  3836  012302  6EE6               	movwf	postinc1,c
  3837                           
  3838                           ;stkvar	_i @ sp[(-6)+2]
  3839  012304  0EFC               	movlw	-4
  3840  012306  50E3               	movf	plusw1,w,c
  3841  012308  6EE6               	movwf	postinc1,c
  3842  01230A  0E00               	movlw	0
  3843  01230C  6EE6               	movwf	postinc1,c
  3844  01230E  0E00               	movlw	0
  3845  012310  6EE6               	movwf	postinc1,c
  3846  012312  0E00               	movlw	0
  3847  012314  6EE6               	movwf	postinc1,c
  3848  012316  0E00               	movlw	0
  3849  012318  6EE6               	movwf	postinc1,c
  3850  01231A  EC5A  F0B5         	call	_lp_filter	;wreg free
  3851                           
  3852                           ;main.c: 308:       lp_filter(0.0, j, -1);
  3853  01231E  0EFF               	movlw	255
  3854  012320  6EE6               	movwf	postinc1,c
  3855                           
  3856                           ;stkvar	_j @ sp[(-6)+1]
  3857  012322  0EFB               	movlw	-5
  3858  012324  50E3               	movf	plusw1,w,c
  3859  012326  6EE6               	movwf	postinc1,c
  3860  012328  0E00               	movlw	0
  3861  01232A  6EE6               	movwf	postinc1,c
  3862  01232C  0E00               	movlw	0
  3863  01232E  6EE6               	movwf	postinc1,c
  3864  012330  0E00               	movlw	0
  3865  012332  6EE6               	movwf	postinc1,c
  3866  012334  0E00               	movlw	0
  3867  012336  6EE6               	movwf	postinc1,c
  3868  012338  EC5A  F0B5         	call	_lp_filter	;wreg free
  3869                           
  3870                           ;main.c: 309:       lp_filter(0.0, k, -1);
  3871  01233C  0EFF               	movlw	255
  3872  01233E  6EE6               	movwf	postinc1,c
  3873                           
  3874                           ;stkvar	_k @ sp[(-6)+0]
  3875  012340  0EFA               	movlw	-6
  3876  012342  50E3               	movf	plusw1,w,c
  3877  012344  6EE6               	movwf	postinc1,c
  3878  012346  0E00               	movlw	0
  3879  012348  6EE6               	movwf	postinc1,c
  3880  01234A  0E00               	movlw	0
  3881  01234C  6EE6               	movwf	postinc1,c
  3882  01234E  0E00               	movlw	0
  3883  012350  6EE6               	movwf	postinc1,c
  3884  012352  0E00               	movlw	0
  3885  012354  6EE6               	movwf	postinc1,c
  3886  012356  EC5A  F0B5         	call	_lp_filter	;wreg free
  3887  01235A                     l11816:
  3888                           
  3889                           ;main.c: 311:      V.calib = 1;
  3890  01235A  0E01               	movlw	1
  3891  01235C  0102               	movlb	2	; () banked
  3892  01235E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  3893                           
  3894                           ; BSR set to: 2
  3895                           ;main.c: 312:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  3896  012360  0E02               	movlw	2
  3897  012362  6EE6               	movwf	postinc1,c
  3898  012364  ECC3  F0CB         	call	_get_switch	;wreg free
  3899  012368  5001               	movf	btemp^0,w,c
  3900  01236A  6EE6               	movwf	postinc1,c
  3901  01236C  0E00               	movlw	0
  3902  01236E  6EE6               	movwf	postinc1,c
  3903                           
  3904                           ;stkvar	_i @ sp[(-7)+2]
  3905  012370  0EFB               	movlw	-5
  3906  012372  50E3               	movf	plusw1,w,c
  3907  012374  0D04               	mullw	4
  3908  012376  0E00               	movlw	low _C
  3909  012378  24F3               	addwf	243,w,c
  3910  01237A  6ED9               	movwf	fsr2l,c
  3911  01237C  0E01               	movlw	high _C
  3912  01237E  20F4               	addwfc	prodh,w,c
  3913  012380  6EDA               	movwf	fsr2h,c
  3914  012382  006F FF7B FFE6     	movff	postinc2,postinc1
  3915  012388  006F FF7B FFE6     	movff	postinc2,postinc1
  3916  01238E  006F FF7B FFE6     	movff	postinc2,postinc1
  3917  012394  006F FF7B FFE6     	movff	postinc2,postinc1
  3918                           
  3919                           ;stkvar	_i @ sp[(-11)+2]
  3920  01239A  0EF7               	movlw	-9
  3921  01239C  50E3               	movf	plusw1,w,c
  3922  01239E  6EE6               	movwf	postinc1,c
  3923  0123A0  ECC2  F0CD         	call	_get_raw_result	;wreg free
  3924  0123A4  0060  F007  FFE6   	movff	btemp,postinc1
  3925  0123AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3926  0123B0  0E92               	movlw	low STR_9
  3927  0123B2  6EE6               	movwf	postinc1,c
  3928  0123B4  0EFF               	movlw	high STR_9
  3929  0123B6  6EE6               	movwf	postinc1,c
  3930  0123B8  0E00               	movlw	0
  3931  0123BA  6EE6               	movwf	postinc1,c
  3932  0123BC  0E00               	movlw	0
  3933  0123BE  6EE6               	movwf	postinc1,c
  3934  0123C0  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3935  0123C4  0060  F007  FFE6   	movff	btemp,postinc1
  3936  0123CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3937  0123D0  0E0C               	movlw	12
  3938  0123D2  6EE6               	movwf	postinc1,c
  3939  0123D4  EC62  F0BE         	call	_sprintf	;wreg free
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 313:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3943  0123D8  0E03               	movlw	3
  3944  0123DA  6EE6               	movwf	postinc1,c
  3945  0123DC  ECC3  F0CB         	call	_get_switch	;wreg free
  3946  0123E0  5001               	movf	btemp^0,w,c
  3947  0123E2  6EE6               	movwf	postinc1,c
  3948  0123E4  0E00               	movlw	0
  3949  0123E6  6EE6               	movwf	postinc1,c
  3950                           
  3951                           ;stkvar	_j @ sp[(-7)+1]
  3952  0123E8  0EFA               	movlw	-6
  3953  0123EA  50E3               	movf	plusw1,w,c
  3954  0123EC  0D04               	mullw	4
  3955  0123EE  0E00               	movlw	low _C
  3956  0123F0  24F3               	addwf	243,w,c
  3957  0123F2  6ED9               	movwf	fsr2l,c
  3958  0123F4  0E01               	movlw	high _C
  3959  0123F6  20F4               	addwfc	prodh,w,c
  3960  0123F8  6EDA               	movwf	fsr2h,c
  3961  0123FA  006F FF7B FFE6     	movff	postinc2,postinc1
  3962  012400  006F FF7B FFE6     	movff	postinc2,postinc1
  3963  012406  006F FF7B FFE6     	movff	postinc2,postinc1
  3964  01240C  006F FF7B FFE6     	movff	postinc2,postinc1
  3965                           
  3966                           ;stkvar	_j @ sp[(-11)+1]
  3967  012412  0EF6               	movlw	-10
  3968  012414  50E3               	movf	plusw1,w,c
  3969  012416  6EE6               	movwf	postinc1,c
  3970  012418  ECC2  F0CD         	call	_get_raw_result	;wreg free
  3971  01241C  0060  F007  FFE6   	movff	btemp,postinc1
  3972  012422  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3973  012428  0E92               	movlw	low STR_9
  3974  01242A  6EE6               	movwf	postinc1,c
  3975  01242C  0EFF               	movlw	high STR_9
  3976  01242E  6EE6               	movwf	postinc1,c
  3977  012430  0E00               	movlw	0
  3978  012432  6EE6               	movwf	postinc1,c
  3979  012434  0E01               	movlw	1
  3980  012436  6EE6               	movwf	postinc1,c
  3981  012438  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  3982  01243C  0060  F007  FFE6   	movff	btemp,postinc1
  3983  012442  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3984  012448  0E0C               	movlw	12
  3985  01244A  6EE6               	movwf	postinc1,c
  3986  01244C  EC62  F0BE         	call	_sprintf	;wreg free
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;main.c: 314:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3990                           ;stkvar	_inp_index @ sp[(-5)+3]
  3991  012450  0EFE               	movlw	-2
  3992  012452  50E3               	movf	plusw1,w,c
  3993  012454  6E0B               	movwf	(btemp+10)^0,c
  3994  012456  6A0C               	clrf	(btemp+11)^0,c
  3995  012458  0E01               	movlw	1
  3996  01245A  260B               	addwf	(btemp+10)^0,f,c
  3997  01245C  0E00               	movlw	0
  3998  01245E  220C               	addwfc	(btemp+11)^0,f,c
  3999  012460  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4000  012466  0060  F033  FFE6   	movff	btemp+11,postinc1
  4001                           
  4002                           ;stkvar	_k @ sp[(-7)+0]
  4003  01246C  0EF9               	movlw	-7
  4004  01246E  50E3               	movf	plusw1,w,c
  4005  012470  0D04               	mullw	4
  4006  012472  0E00               	movlw	low _C
  4007  012474  24F3               	addwf	243,w,c
  4008  012476  6ED9               	movwf	fsr2l,c
  4009  012478  0E01               	movlw	high _C
  4010  01247A  20F4               	addwfc	prodh,w,c
  4011  01247C  6EDA               	movwf	fsr2h,c
  4012  01247E  006F FF7B FFE6     	movff	postinc2,postinc1
  4013  012484  006F FF7B FFE6     	movff	postinc2,postinc1
  4014  01248A  006F FF7B FFE6     	movff	postinc2,postinc1
  4015  012490  006F FF7B FFE6     	movff	postinc2,postinc1
  4016                           
  4017                           ;stkvar	_k @ sp[(-11)+0]
  4018  012496  0EF5               	movlw	-11
  4019  012498  50E3               	movf	plusw1,w,c
  4020  01249A  6EE6               	movwf	postinc1,c
  4021  01249C  ECC2  F0CD         	call	_get_raw_result	;wreg free
  4022  0124A0  0060  F007  FFE6   	movff	btemp,postinc1
  4023  0124A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4024  0124AC  0E81               	movlw	low STR_11
  4025  0124AE  6EE6               	movwf	postinc1,c
  4026  0124B0  0EFF               	movlw	high STR_11
  4027  0124B2  6EE6               	movwf	postinc1,c
  4028  0124B4  0E00               	movlw	0
  4029  0124B6  6EE6               	movwf	postinc1,c
  4030  0124B8  0E02               	movlw	2
  4031  0124BA  6EE6               	movwf	postinc1,c
  4032  0124BC  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  4033  0124C0  0060  F007  FFE6   	movff	btemp,postinc1
  4034  0124C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4035  0124CC  0E0C               	movlw	12
  4036  0124CE  6EE6               	movwf	postinc1,c
  4037  0124D0  EC62  F0BE         	call	_sprintf	;wreg free
  4038                           
  4039                           ;main.c: 315:      break;
  4040  0124D4  D015               	goto	l11828
  4041  0124D6                     l11826:
  4042  0124D6  0100               	movlb	0	; () banked
  4043  0124D8  51F3               	movf	_H& (0+255),w,b
  4044  0124DA  6E0B               	movwf	(btemp+10)^0,c
  4045  0124DC  6A0C               	clrf	(btemp+11)^0,c
  4046                           
  4047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4048                           ; Switch size 1, requested type "simple"
  4049                           ; Number of cases is 1, Range of values is 0 to 0
  4050                           ; switch strategies available:
  4051                           ; Name         Instructions Cycles
  4052                           ; simple_byte            4     3 (average)
  4053                           ;	Chosen strategy is simple_byte
  4054  0124DE  500C               	movf	(btemp+11)^0,w,c
  4055  0124E0  0A00               	xorlw	0	; case 0
  4056  0124E2  A4D8               	btfss	status,2,c
  4057  0124E4  D00D               	goto	l11828
  4058                           
  4059                           ; BSR set to: 0
  4060                           ; Switch size 1, requested type "simple"
  4061                           ; Number of cases is 4, Range of values is 0 to 3
  4062                           ; switch strategies available:
  4063                           ; Name         Instructions Cycles
  4064                           ; simple_byte           13     7 (average)
  4065                           ;	Chosen strategy is simple_byte
  4066  0124E6  500B               	movf	(btemp+10)^0,w,c
  4067  0124E8  0A00               	xorlw	0	; case 0
  4068  0124EA  B4D8               	btfsc	status,2,c
  4069  0124EC  D60F               	goto	l1328
  4070  0124EE  0A01               	xorlw	1	; case 1
  4071  0124F0  B4D8               	btfsc	status,2,c
  4072  0124F2  D5A9               	goto	l1326
  4073  0124F4  0A03               	xorlw	3	; case 2
  4074  0124F6  B4D8               	btfsc	status,2,c
  4075  0124F8  D690               	goto	l1329
  4076  0124FA  0A01               	xorlw	1	; case 3
  4077  0124FC  B4D8               	btfsc	status,2,c
  4078  0124FE  D6FC               	goto	l11812
  4079  012500                     l11828:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;main.c: 319:     clear_hid_pflags(&H);
  4083  012500  0EF3               	movlw	_H& (0+255)
  4084  012502  6EE6               	movwf	postinc1,c
  4085  012504  EC16  F0CD         	call	_clear_hid_pflags	;wreg free
  4086                           
  4087                           ;main.c: 321:    StartTimer(TMR_DISPLAY, 250);
  4088  012508  0EFA               	movlw	250
  4089  01250A  6EE6               	movwf	postinc1,c
  4090  01250C  0E00               	movlw	0
  4091  01250E  6EE6               	movwf	postinc1,c
  4092  012510  0E0A               	movlw	10
  4093  012512  6EE6               	movwf	postinc1,c
  4094  012514  EC92  F0C9         	call	_StartTimer	;wreg free
  4095                           
  4096                           ;main.c: 322:    update_lcd(0);
  4097  012518  0E00               	movlw	0
  4098  01251A  6EE6               	movwf	postinc1,c
  4099  01251C  EC53  F0BD         	call	_update_lcd	;wreg free
  4100  012520                     l11834:
  4101                           
  4102                           ;main.c: 328:   check_help(V.flipper);
  4103  012520  0102               	movlb	2	; () banked
  4104  012522  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4105  012524  6EE6               	movwf	postinc1,c
  4106  012526  EC6B  F0B1         	call	_check_help	;wreg free
  4107                           
  4108                           ;main.c: 330:   if (check_enter_button(&H)) {
  4109  01252A  0EF3               	movlw	_H& (0+255)
  4110  01252C  6EE6               	movwf	postinc1,c
  4111  01252E  ECB2  F0C9         	call	_check_enter_button	;wreg free
  4112  012532  5001               	movf	btemp^0,w,c
  4113  012534  B4D8               	btfsc	status,2,c
  4114  012536  D062               	goto	l1333
  4115                           
  4116                           ;main.c: 331:    V.calib = 0;
  4117  012538  0102               	movlb	2	; () banked
  4118  01253A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4119                           
  4120                           ; BSR set to: 2
  4121                           ;main.c: 332:    inp_index += 3;
  4122                           ;stkvar	_inp_index @ sp[(-5)+3]
  4123  01253C  0EFE               	movlw	-2
  4124  01253E  006F FF8C  F001    	movff	plusw1,btemp
  4125  012544  0E03               	movlw	3
  4126  012546  2601               	addwf	btemp^0,f,c
  4127  012548  0EFE               	movlw	-2
  4128  01254A  0060  F007  FFE3   	movff	btemp,plusw1
  4129                           
  4130                           ;main.c: 333:    if (inp_index > 9)
  4131                           ;stkvar	_inp_index @ sp[(-5)+3]
  4132  012550  0EFE               	movlw	-2
  4133  012552  006F FF8C  F001    	movff	plusw1,btemp
  4134  012558  0E09               	movlw	9
  4135  01255A  6401               	cpfsgt	btemp^0,c
  4136  01255C  D03A               	goto	l11862
  4137                           
  4138                           ; BSR set to: 2
  4139                           ;main.c: 334:     inp_index = 0;
  4140                           ;stkvar	_inp_index @ sp[(-5)+3]
  4141  01255E  0EFE               	movlw	-2
  4142  012560  6AE3               	clrf	plusw1,c
  4143  012562  D037               	goto	l11862
  4144  012564                     l11844:
  4145                           
  4146                           ; BSR set to: 2
  4147                           ;main.c: 337:     i = C_BATT;
  4148                           ;stkvar	_i @ sp[(-5)+2]
  4149  012564  0EFD               	movlw	-3
  4150  012566  6AE3               	clrf	plusw1,c
  4151                           
  4152                           ; BSR set to: 2
  4153                           ;main.c: 338:     j = C_PV;
  4154                           ;stkvar	_j @ sp[(-5)+1]
  4155  012568  0EFC               	movlw	-4
  4156  01256A  6AE3               	clrf	plusw1,c
  4157  01256C  2AE3               	incf	plusw1,f,c
  4158                           
  4159                           ; BSR set to: 2
  4160                           ;main.c: 339:     k = V_CC;
  4161                           ;stkvar	_k @ sp[(-5)+0]
  4162  01256E  0EFB               	movlw	-5
  4163  012570  6AE3               	clrf	plusw1,c
  4164  012572  82E3               	bsf	plusw1,1,c
  4165                           
  4166                           ;main.c: 340:     break;
  4167  012574  D043               	goto	l1333
  4168  012576                     l11850:
  4169                           
  4170                           ; BSR set to: 2
  4171                           ;main.c: 342:     i = V_BAT;
  4172                           ;stkvar	_i @ sp[(-5)+2]
  4173  012576  0EFD               	movlw	-3
  4174  012578  6AE3               	clrf	plusw1,c
  4175  01257A  84E3               	bsf	plusw1,2,c
  4176                           
  4177                           ;main.c: 343:     j = V_PV;
  4178                           ;stkvar	_j @ sp[(-5)+1]
  4179  01257C  0EFC               	movlw	-4
  4180  01257E  6AE3               	clrf	plusw1,c
  4181  012580  80E3               	bsf	plusw1,0,c
  4182  012582  84E3               	bsf	plusw1,2,c	;indir
  4183                           
  4184                           ;main.c: 344:     k = V_CBUS;
  4185                           ;stkvar	_k @ sp[(-5)+0]
  4186  012584  0EFB               	movlw	-5
  4187  012586  6AE3               	clrf	plusw1,c
  4188  012588  82E3               	bsf	plusw1,1,c
  4189  01258A  84E3               	bsf	plusw1,2,c	;indir
  4190                           
  4191                           ;main.c: 345:     break;
  4192  01258C  D037               	goto	l1333
  4193  01258E                     l11852:
  4194                           
  4195                           ; BSR set to: 2
  4196                           ;main.c: 347:     i = V_BBAT;
  4197                           ;stkvar	_i @ sp[(-5)+2]
  4198  01258E  0EFD               	movlw	-3
  4199  012590  6AE3               	clrf	plusw1,c
  4200  012592  82E3               	bsf	plusw1,1,c
  4201  012594  86E3               	bsf	plusw1,3,c	;indir
  4202                           
  4203                           ; BSR set to: 2
  4204                           ;main.c: 348:     j = V_TEMP;
  4205  012596  0E0B               	movlw	11
  4206  012598  6E0C               	movwf	(btemp+11)^0,c
  4207                           
  4208                           ;stkvar	_j @ sp[(-5)+1]
  4209  01259A  0EFC               	movlw	-4
  4210  01259C  0060  F033  FFE3   	movff	btemp+11,plusw1
  4211                           
  4212                           ; BSR set to: 2
  4213                           ;main.c: 349:     k = V_INVERTER;
  4214                           ;stkvar	_k @ sp[(-5)+0]
  4215  0125A2  0EFB               	movlw	-5
  4216  0125A4  6AE3               	clrf	plusw1,c
  4217  0125A6  84E3               	bsf	plusw1,2,c
  4218  0125A8  86E3               	bsf	plusw1,3,c	;indir
  4219                           
  4220                           ;main.c: 350:     break;
  4221  0125AA  D028               	goto	l1333
  4222  0125AC                     l11858:
  4223                           
  4224                           ; BSR set to: 2
  4225                           ;main.c: 352:     i = channel_ANB5;
  4226  0125AC  0E0D               	movlw	13
  4227  0125AE  6E0C               	movwf	(btemp+11)^0,c
  4228                           
  4229                           ;stkvar	_i @ sp[(-5)+2]
  4230  0125B0  0EFD               	movlw	-3
  4231  0125B2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4232                           
  4233                           ;main.c: 353:     j = channel_ANB5;
  4234  0125B8  0E0D               	movlw	13
  4235  0125BA  6E0C               	movwf	(btemp+11)^0,c
  4236                           
  4237                           ;stkvar	_j @ sp[(-5)+1]
  4238  0125BC  0EFC               	movlw	-4
  4239  0125BE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4240                           
  4241                           ;main.c: 354:     k = channel_ANB5;
  4242  0125C4  0E0D               	movlw	13
  4243  0125C6  6E0C               	movwf	(btemp+11)^0,c
  4244                           
  4245                           ;stkvar	_k @ sp[(-5)+0]
  4246  0125C8  0EFB               	movlw	-5
  4247  0125CA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4248                           
  4249                           ;main.c: 355:     break;
  4250  0125D0  D015               	goto	l1333
  4251  0125D2                     l11862:
  4252                           
  4253                           ; BSR set to: 2
  4254                           ;stkvar	_inp_index @ sp[(-5)+3]
  4255  0125D2  0EFE               	movlw	-2
  4256  0125D4  50E3               	movf	plusw1,w,c
  4257  0125D6  6E0B               	movwf	(btemp+10)^0,c
  4258  0125D8  6A0C               	clrf	(btemp+11)^0,c
  4259                           
  4260                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4261                           ; Switch size 1, requested type "simple"
  4262                           ; Number of cases is 1, Range of values is 0 to 0
  4263                           ; switch strategies available:
  4264                           ; Name         Instructions Cycles
  4265                           ; simple_byte            4     3 (average)
  4266                           ;	Chosen strategy is simple_byte
  4267  0125DA  500C               	movf	(btemp+11)^0,w,c
  4268  0125DC  0A00               	xorlw	0	; case 0
  4269  0125DE  A4D8               	btfss	status,2,c
  4270  0125E0  D00D               	goto	l1333
  4271                           
  4272                           ; BSR set to: 2
  4273                           ; Switch size 1, requested type "simple"
  4274                           ; Number of cases is 4, Range of values is 0 to 9
  4275                           ; switch strategies available:
  4276                           ; Name         Instructions Cycles
  4277                           ; simple_byte           13     7 (average)
  4278                           ;	Chosen strategy is simple_byte
  4279  0125E2  500B               	movf	(btemp+10)^0,w,c
  4280  0125E4  0A00               	xorlw	0	; case 0
  4281  0125E6  B4D8               	btfsc	status,2,c
  4282  0125E8  D7BD               	goto	l11844
  4283  0125EA  0A03               	xorlw	3	; case 3
  4284  0125EC  B4D8               	btfsc	status,2,c
  4285  0125EE  D7C3               	goto	l11850
  4286  0125F0  0A05               	xorlw	5	; case 6
  4287  0125F2  B4D8               	btfsc	status,2,c
  4288  0125F4  D7CC               	goto	l11852
  4289  0125F6  0A0F               	xorlw	15	; case 9
  4290  0125F8  B4D8               	btfsc	status,2,c
  4291  0125FA  D7D8               	goto	l11858
  4292  0125FC                     l1333:
  4293                           
  4294                           ;main.c: 364:   if (V.set_sequ) {
  4295  0125FC  0102               	movlb	2	; () banked
  4296  0125FE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4297  012600  D4D8               	goto	l11778
  4298                           
  4299                           ; BSR set to: 2
  4300                           ;main.c: 365:    if (TimerDone(TMR_INFO)) {
  4301  012602  0E07               	movlw	7
  4302  012604  6EE6               	movwf	postinc1,c
  4303  012606  ECD7  F0CB         	call	_TimerDone	;wreg free
  4304  01260A  5001               	movf	btemp^0,w,c
  4305  01260C  B4D8               	btfsc	status,2,c
  4306  01260E  D00B               	goto	l11872
  4307                           
  4308                           ;main.c: 366:     V.set_sequ = 0;
  4309  012610  0102               	movlb	2	; () banked
  4310  012612  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4311                           
  4312                           ; BSR set to: 2
  4313                           ;main.c: 367:     set_vterm(0);
  4314  012614  0E00               	movlw	0
  4315  012616  6EE6               	movwf	postinc1,c
  4316  012618  ECD1  F0CD         	call	_set_vterm	;wreg free
  4317                           
  4318                           ;main.c: 368:     update_lcd(0);
  4319  01261C  0E00               	movlw	0
  4320  01261E  6EE6               	movwf	postinc1,c
  4321  012620  EC53  F0BD         	call	_update_lcd	;wreg free
  4322                           
  4323                           ;main.c: 369:    } else {
  4324  012624  D4C6               	goto	l11778
  4325  012626                     l11872:
  4326                           
  4327                           ;main.c: 370:     set_vterm(2);
  4328  012626  0E02               	movlw	2
  4329  012628  6EE6               	movwf	postinc1,c
  4330  01262A  ECD1  F0CD         	call	_set_vterm	;wreg free
  4331                           
  4332                           ;main.c: 371:     update_lcd(2);
  4333  01262E  0E02               	movlw	2
  4334  012630  6EE6               	movwf	postinc1,c
  4335  012632  EC53  F0BD         	call	_update_lcd	;wreg free
  4336  012636  D4BD               	goto	l11778
  4337  012638                     __end_of_main:
  4338                           	opt callstack 0
  4339                           
  4340 ;; *************** function _static_soc *****************
  4341 ;; Defined at:
  4342 ;;		line 84 in file "mbmc.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1  [STACK] void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/39
  4353 ;;		On exit  : 3F/1
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4360 ;;Total ram usage:        0 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:   15
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text1
  4371  019A08                     __ptext1:
  4372                           	opt callstack 0
  4373  019A08                     _static_soc:
  4374                           	opt callstack 15
  4375                           
  4376                           ;mbmc.c: 86:  C.runtime = 120;
  4377                           
  4378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4379                           ;incstack = 0
  4380  019A08  0E00               	movlw	0
  4381  019A0A  0101               	movlb	1	; () banked
  4382  019A0C  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  4383  019A0E  0E78               	movlw	120
  4384  019A10  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  4385                           
  4386                           ;mbmc.c: 87:  C.soc = 100;
  4387  019A12  0E00               	movlw	0
  4388  019A14  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  4389  019A16  0E64               	movlw	100
  4390  019A18  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  4391                           
  4392                           ; BSR set to: 1
  4393                           ;mbmc.c: 88:  C.dynamic_ah = C.bank_ah;
  4394  019A1A  C17C  F180         	movff	_C+124,_C+128	;volatile
  4395  019A1E  C17D  F181         	movff	_C+125,_C+129	;volatile
  4396  019A22  C17E  F182         	movff	_C+126,_C+130	;volatile
  4397  019A26  C17F  F183         	movff	_C+127,_C+131	;volatile
  4398                           
  4399                           ; BSR set to: 1
  4400                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4401  019A2A  0012               	return		;funcret
  4402  019A2C                     __end_of_static_soc:
  4403                           	opt callstack 0
  4404                           
  4405 ;; *************** function _start_switch_handler *****************
  4406 ;; Defined at:
  4407 ;;		line 119 in file "dio.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1  [STACK] void 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4416 ;; Tracked objects:
  4417 ;;		On entry : 1/0
  4418 ;;		On exit  : 3F/39
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:   16
  4428 ;; This function calls:
  4429 ;;		_INT1_SetInterruptHandler
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;; This function uses a reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text2
  4436  019B26                     __ptext2:
  4437                           	opt callstack 0
  4438  019B26                     _start_switch_handler:
  4439                           	opt callstack 14
  4440                           
  4441                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4442                           
  4443                           ; BSR set to: 1
  4444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4445                           ;incstack = 0
  4446  019B26  0139               	movlb	57	; () banked
  4447  019B28  9195               	bcf	149,0,b	;volatile
  4448                           
  4449                           ; BSR set to: 57
  4450                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4451  019B2A  0E2E               	movlw	low _switch_handler
  4452  019B2C  6EE6               	movwf	postinc1,c
  4453  019B2E  0E76               	movlw	high _switch_handler
  4454  019B30  6EE6               	movwf	postinc1,c
  4455  019B32  0E01               	movlw	low (_switch_handler shr (0+16))
  4456  019B34  6EE6               	movwf	postinc1,c
  4457  019B36  EC63  F0CC         	call	_INT1_SetInterruptHandler	;wreg free
  4458                           
  4459                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4460  019B3A  0E02               	movlw	2
  4461  019B3C  0100               	movlb	0	; () banked
  4462  019B3E  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4466  019B40  0139               	movlb	57	; () banked
  4467  019B42  8195               	bsf	149,0,b	;volatile
  4468                           
  4469                           ; BSR set to: 57
  4470                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4471  019B44  0012               	return		;funcret
  4472  019B46                     __end_of_start_switch_handler:
  4473                           	opt callstack 0
  4474                           
  4475 ;; *************** function _start_adc_scan *****************
  4476 ;; Defined at:
  4477 ;;		line 33 in file "daq.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1  [STACK] _Bool 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 1/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4495 ;;Total ram usage:        0 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:   16
  4498 ;; This function calls:
  4499 ;;		_ADCC_DischargeSampleCapacitor
  4500 ;;		_ADCC_SetADIInterruptHandler
  4501 ;;		_ADCC_SetADTIInterruptHandler
  4502 ;;		_ADCC_StartConversion
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;; This function uses a reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text3
  4509  018CD4                     __ptext3:
  4510                           	opt callstack 0
  4511  018CD4                     _start_adc_scan:
  4512                           	opt callstack 14
  4513                           
  4514                           ;daq.c: 35:  if (R.done)
  4515                           
  4516                           ; BSR set to: 57
  4517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4518                           ;incstack = 0
  4519  018CD4  0100               	movlb	0	; () banked
  4520  018CD6  51F2               	movf	(_R+39)& (0+255),w,b	;volatile
  4521  018CD8  A4D8               	btfss	status,2,c
  4522  018CDA  0012               	return	
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;daq.c: 38:  R.scan_index = 0;
  4526  018CDC  6BEF               	clrf	(_R+36)& (0+255),b	;volatile
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4530  018CDE  013A               	movlb	58	; () banked
  4531  018CE0  5140               	movf	64,w,b	;volatile
  4532  018CE2  006E F940  F001    	movff	14928,btemp	;volatile
  4533  018CE8  6A02               	clrf	(btemp+1)^0,c
  4534  018CEA  0060  F004  F002   	movff	btemp,btemp+1
  4535  018CF0  6A01               	clrf	btemp^0,c
  4536  018CF2  2601               	addwf	btemp^0,f,c
  4537  018CF4  0E00               	movlw	0
  4538  018CF6  2202               	addwfc	(btemp+1)^0,f,c
  4539  018CF8  0E77               	movlw	119
  4540  018CFA  1401               	andwf	btemp^0,w,c
  4541  018CFC  0100               	movlb	0	; () banked
  4542  018CFE  6FF0               	movwf	(_R+37)& (0+255),b	;volatile
  4543  018D00  0E3C               	movlw	60
  4544  018D02  1402               	andwf	(btemp+1)^0,w,c
  4545  018D04  6FF1               	movwf	(_R+38)& (0+255),b	;volatile
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4549  018D06  0EBA               	movlw	low _adc_int_handler
  4550  018D08  6EE6               	movwf	postinc1,c
  4551  018D0A  0E9D               	movlw	high _adc_int_handler
  4552  018D0C  6EE6               	movwf	postinc1,c
  4553  018D0E  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4554  018D10  6EE6               	movwf	postinc1,c
  4555  018D12  EC9F  F0CC         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4556                           
  4557                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4558  018D16  0EB0               	movlw	low _adc_int_t_handler
  4559  018D18  6EE6               	movwf	postinc1,c
  4560  018D1A  0E8A               	movlw	high _adc_int_t_handler
  4561  018D1C  6EE6               	movwf	postinc1,c
  4562  018D1E  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4563  018D20  6EE6               	movwf	postinc1,c
  4564  018D22  EC8B  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4565                           
  4566                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4567  018D26  ECB5  F0CE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4568                           
  4569                           ; BSR set to: 62
  4570                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4571  018D2A  0100               	movlb	0	; () banked
  4572  018D2C  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
  4573  018D2E  0B0F               	andlw	15
  4574  018D30  6EE6               	movwf	postinc1,c
  4575  018D32  EC6A  F0CE         	call	_ADCC_StartConversion	;wreg free
  4576                           
  4577                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4578  018D36  0012               	return		;funcret
  4579  018D38                     __end_of_start_adc_scan:
  4580                           	opt callstack 0
  4581                           
  4582 ;; *************** function _ADCC_StartConversion *****************
  4583 ;; Defined at:
  4584 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  channel         1  [STACK] enum E16136
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1  [STACK] void 
  4591 ;; Registers used:
  4592 ;;		fsr1l, fsr1h
  4593 ;; Tracked objects:
  4594 ;;		On entry : 3F/0
  4595 ;;		On exit  : 3F/3E
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:   15
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_start_adc_scan
  4609 ;;		_adc_int_t_handler
  4610 ;; This function uses a reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text4
  4614  019CD4                     __ptext4:
  4615                           	opt callstack 0
  4616  019CD4                     _ADCC_StartConversion:
  4617                           	opt callstack 0
  4618                           
  4619                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4620                           ;stkvar	_channel @ sp[(0)+-1]
  4621                           
  4622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4623                           ;incstack = 0
  4624 ;; hardware stack exceeded
  4625  019CD4  0EFF               	movlw	-1
  4626  019CD6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4627                           
  4628                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4629  019CDC  013E               	movlb	62	; () banked
  4630  019CDE  8FF8               	bsf	248,7,b	;volatile
  4631                           
  4632                           ; BSR set to: 62
  4633                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4634  019CE0  81F8               	bsf	248,0,b	;volatile
  4635                           
  4636                           ; BSR set to: 62
  4637                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4638  019CE2  52E5               	movf	postdec1,f,c
  4639  019CE4  0012               	return		;funcret
  4640  019CE6                     __end_of_ADCC_StartConversion:
  4641                           	opt callstack 0
  4642                           
  4643 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4644 ;; Defined at:
  4645 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1  [STACK] void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 3F/3E
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4663 ;;Total ram usage:        0 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:   15
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_start_adc_scan
  4670 ;;		_adc_int_t_handler
  4671 ;; This function uses a reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text5
  4675  019D6A                     __ptext5:
  4676                           	opt callstack 0
  4677  019D6A                     _ADCC_DischargeSampleCapacitor:
  4678                           	opt callstack 0
  4679                           
  4680                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4681                           
  4682                           ; BSR set to: 62
  4683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4684                           ;incstack = 0
  4685 ;; hardware stack exceeded
  4686  019D6A  0E3B               	movlw	59
  4687  019D6C  013E               	movlb	62	; () banked
  4688  019D6E  6FF1               	movwf	241,b	;volatile
  4689                           
  4690                           ; BSR set to: 62
  4691                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4692  019D70  0012               	return		;funcret
  4693  019D72                     __end_of_ADCC_DischargeSampleCapacitor:
  4694                           	opt callstack 0
  4695                           
  4696 ;; *************** function _srand *****************
  4697 ;; Defined at:
  4698 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  s               2  [STACK] unsigned int 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1  [STACK] void 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4707 ;; Tracked objects:
  4708 ;;		On entry : 3F/0
  4709 ;;		On exit  : 3F/2
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:   15
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_main
  4723 ;; This function uses a reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text6
  4727  019506                     __ptext6:
  4728                           	opt callstack 0
  4729  019506                     _srand:
  4730                           	opt callstack 15
  4731                           
  4732                           ;stkvar	_s @ sp[(0)+-2]
  4733                           
  4734                           ; BSR set to: 62
  4735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4736                           ;incstack = 0
  4737  019506  0EFE               	movlw	-2
  4738  019508  50E3               	movf	plusw1,w,c
  4739  01950A  0FFF               	addlw	255
  4740  01950C  6E0B               	movwf	(btemp+10)^0,c
  4741  01950E  0EFF               	movlw	-1
  4742  019510  006F FF8C  F00C    	movff	plusw1,btemp+11
  4743  019516  0EFF               	movlw	255
  4744  019518  220C               	addwfc	(btemp+11)^0,f,c
  4745  01951A  0060  F02C  F2D5   	movff	btemp+10,_seed
  4746  019520  0060  F030  F2D6   	movff	btemp+11,_seed+1
  4747  019526  0102               	movlb	2	; () banked
  4748  019528  6BD7               	clrf	(_seed+2)& (0+255),b
  4749  01952A  6BD8               	clrf	(_seed+3)& (0+255),b
  4750  01952C  6BD9               	clrf	(_seed+4)& (0+255),b
  4751  01952E  6BDA               	clrf	(_seed+5)& (0+255),b
  4752  019530  6BDB               	clrf	(_seed+6)& (0+255),b
  4753  019532  6BDC               	clrf	(_seed+7)& (0+255),b
  4754                           
  4755                           ; BSR set to: 2
  4756                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4757  019534  52E5               	movf	postdec1,f,c
  4758  019536  52E5               	movf	postdec1,f,c
  4759  019538  0012               	return		;funcret
  4760  01953A                     __end_of_srand:
  4761                           	opt callstack 0
  4762                           
  4763 ;; *************** function _init_port_dma *****************
  4764 ;; Defined at:
  4765 ;;		line 90 in file "eadog.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1  [STACK] void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/2
  4776 ;;		On exit  : 3F/3B
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:   15
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;; This function uses a reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text7
  4794  01956E                     __ptext7:
  4795                           	opt callstack 0
  4796  01956E                     _init_port_dma:
  4797                           	opt callstack 15
  4798                           
  4799                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  4800                           
  4801                           ; BSR set to: 2
  4802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4803                           ;incstack = 0
  4804  01956E  0E3F               	movlw	-193
  4805  019570  013B               	movlb	59	; () banked
  4806  019572  17DD               	andwf	221,f,b	;volatile
  4807                           
  4808                           ; BSR set to: 59
  4809                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  4810  019574  9BDD               	bcf	221,5,b	;volatile
  4811                           
  4812                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  4813  019576  51DD               	movf	221,w,b	;volatile
  4814  019578  0BF9               	andlw	-7
  4815  01957A  0902               	iorlw	2
  4816  01957C  6FDD               	movwf	221,b	;volatile
  4817                           
  4818                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  4819  01957E  0EE7               	movlw	-25
  4820  019580  17DD               	andwf	221,f,b	;volatile
  4821                           
  4822                           ; BSR set to: 59
  4823                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  4824  019582  81DD               	bsf	221,0,b	;volatile
  4825                           
  4826                           ; BSR set to: 59
  4827                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  4828  019584  9DDC               	bcf	220,6,b	;volatile
  4829                           
  4830                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  4831  019586  0E3D               	movlw	61
  4832  019588  6FD1               	movwf	209,b	;volatile
  4833  01958A  0EEA               	movlw	234
  4834  01958C  6FD0               	movwf	208,b	;volatile
  4835                           
  4836                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  4837  01958E  0EFF               	movlw	low _port_data
  4838  019590  6FD9               	movwf	217,b	;volatile
  4839  019592  0E05               	movlw	high _port_data
  4840  019594  6FDA               	movwf	218,b	;volatile
  4841  019596  0E00               	movlw	low (_port_data shr (0+16))
  4842  019598  6FDB               	movwf	219,b	;volatile
  4843                           
  4844                           ; BSR set to: 59
  4845                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  4846  01959A  9BDC               	bcf	220,5,b	;volatile
  4847                           
  4848                           ; BSR set to: 59
  4849                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4850  01959C  0012               	return		;funcret
  4851  01959E                     __end_of_init_port_dma:
  4852                           	opt callstack 0
  4853                           
  4854 ;; *************** function _init_display *****************
  4855 ;; Defined at:
  4856 ;;		line 38 in file "eadog.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1  [STACK] void 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4865 ;; Tracked objects:
  4866 ;;		On entry : 3F/3B
  4867 ;;		On exit  : 3F/3D
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:   17
  4877 ;; This function calls:
  4878 ;;		_ringBufS_init
  4879 ;;		_send_lcd_cmd
  4880 ;;		_send_lcd_cmd_long
  4881 ;;		_wdtdelay
  4882 ;; This function is called by:
  4883 ;;		_main
  4884 ;; This function uses a reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text8
  4888  017ED0                     __ptext8:
  4889                           	opt callstack 0
  4890  017ED0                     _init_display:
  4891                           	opt callstack 13
  4892                           
  4893                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  4894                           
  4895                           ; BSR set to: 59
  4896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4897                           ;incstack = 0
  4898  017ED0  0E43               	movlw	low _ring_buf1
  4899  017ED2  0100               	movlb	0	; () banked
  4900  017ED4  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4901  017ED6  0E04               	movlw	high _ring_buf1
  4902  017ED8  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4903                           
  4904                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  4905  017EDA  0E00               	movlw	low _ring_buf2
  4906  017EDC  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4907  017EDE  0E04               	movlw	high _ring_buf2
  4908  017EE0  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  4912  017EE2  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  4913  017EE8  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  4914  017EEE  ECAF  F0CB         	call	_ringBufS_init	;wreg free
  4915                           
  4916                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  4917  017EF2  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  4918  017EF8  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  4919  017EFE  ECAF  F0CB         	call	_ringBufS_init	;wreg free
  4920                           
  4921                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  4922  017F02  84BE               	bsf	190,2,c	;volatile
  4923  017F04  84BC               	bsf	188,2,c	;volatile
  4924                           
  4925                           ;eadog.c: 59:  wdtdelay(350000);
  4926  017F06  0E30               	movlw	48
  4927  017F08  6EE6               	movwf	postinc1,c
  4928  017F0A  0E57               	movlw	87
  4929  017F0C  6EE6               	movwf	postinc1,c
  4930  017F0E  0E05               	movlw	5
  4931  017F10  6EE6               	movwf	postinc1,c
  4932  017F12  0E00               	movlw	0
  4933  017F14  6EE6               	movwf	postinc1,c
  4934  017F16  EC2D  F0C7         	call	_wdtdelay	;wreg free
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  4938  017F1A  0E39               	movlw	57
  4939  017F1C  6EE6               	movwf	postinc1,c
  4940  017F1E  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  4944  017F22  0E1D               	movlw	29
  4945  017F24  6EE6               	movwf	postinc1,c
  4946  017F26  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  4950  017F2A  0E50               	movlw	80
  4951  017F2C  6EE6               	movwf	postinc1,c
  4952  017F2E  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  4956  017F32  0E6C               	movlw	108
  4957  017F34  6EE6               	movwf	postinc1,c
  4958  017F36  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  4962  017F3A  0E76               	movlw	118
  4963  017F3C  6EE6               	movwf	postinc1,c
  4964  017F3E  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  4968  017F42  0E38               	movlw	56
  4969  017F44  6EE6               	movwf	postinc1,c
  4970  017F46  EC87  F0CB         	call	_send_lcd_cmd_long	;wreg free
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  4974  017F4A  0E0F               	movlw	15
  4975  017F4C  6EE6               	movwf	postinc1,c
  4976  017F4E  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  4980  017F52  0E01               	movlw	1
  4981  017F54  6EE6               	movwf	postinc1,c
  4982  017F56  EC87  F0CB         	call	_send_lcd_cmd_long	;wreg free
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  4986  017F5A  0E02               	movlw	2
  4987  017F5C  6EE6               	movwf	postinc1,c
  4988  017F5E  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  4992  017F62  0E06               	movlw	6
  4993  017F64  6EE6               	movwf	postinc1,c
  4994  017F66  EC9B  F0CB         	call	_send_lcd_cmd	;wreg free
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;eadog.c: 70:  wdtdelay(30);
  4998  017F6A  0E1E               	movlw	30
  4999  017F6C  6EE6               	movwf	postinc1,c
  5000  017F6E  0E00               	movlw	0
  5001  017F70  6EE6               	movwf	postinc1,c
  5002  017F72  0E00               	movlw	0
  5003  017F74  6EE6               	movwf	postinc1,c
  5004  017F76  0E00               	movlw	0
  5005  017F78  6EE6               	movwf	postinc1,c
  5006  017F7A  EC2D  F0C7         	call	_wdtdelay	;wreg free
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5010  017F7E  0E02               	movlw	2
  5011  017F80  013D               	movlb	61	; () banked
  5012  017F82  6F16               	movwf	22,b	;volatile
  5013                           
  5014                           ; BSR set to: 61
  5015                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5016  017F84  0E40               	movlw	64
  5017  017F86  6F15               	movwf	21,b	;volatile
  5018                           
  5019                           ; BSR set to: 61
  5020                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5021  017F88  0E83               	movlw	131
  5022  017F8A  6F14               	movwf	20,b	;volatile
  5023                           
  5024                           ; BSR set to: 61
  5025                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5026  017F8C  931A               	bcf	26,1,b	;volatile
  5027                           
  5028                           ; BSR set to: 61
  5029                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5030  017F8E  0E3F               	movlw	-193
  5031  017F90  013B               	movlb	59	; () banked
  5032  017F92  17FD               	andwf	253,f,b	;volatile
  5033                           
  5034                           ; BSR set to: 59
  5035                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5036  017F94  9BFD               	bcf	253,5,b	;volatile
  5037                           
  5038                           ; BSR set to: 59
  5039                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5040  017F96  51FD               	movf	253,w,b	;volatile
  5041  017F98  0BF9               	andlw	-7
  5042  017F9A  0902               	iorlw	2
  5043  017F9C  6FFD               	movwf	253,b	;volatile
  5044                           
  5045                           ; BSR set to: 59
  5046                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5047  017F9E  0EE7               	movlw	-25
  5048  017FA0  17FD               	andwf	253,f,b	;volatile
  5049                           
  5050                           ; BSR set to: 59
  5051                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5052  017FA2  81FD               	bsf	253,0,b	;volatile
  5053                           
  5054                           ; BSR set to: 59
  5055                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5056  017FA4  0E43               	movlw	low _ring_buf1
  5057  017FA6  6FF9               	movwf	249,b	;volatile
  5058  017FA8  0E04               	movlw	high _ring_buf1
  5059  017FAA  6FFA               	movwf	250,b	;volatile
  5060  017FAC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5061  017FAE  6FFB               	movwf	251,b	;volatile
  5062                           
  5063                           ; BSR set to: 59
  5064                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5065  017FB0  9BFC               	bcf	252,5,b	;volatile
  5066                           
  5067                           ; BSR set to: 59
  5068                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5069  017FB2  013D               	movlb	61	; () banked
  5070  017FB4  831A               	bsf	26,1,b	;volatile
  5071                           
  5072                           ; BSR set to: 61
  5073                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5074  017FB6  94BE               	bcf	190,2,c	;volatile
  5075                           
  5076                           ; BSR set to: 61
  5077                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5078  017FB8  0012               	return		;funcret
  5079  017FBA                     __end_of_init_display:
  5080                           	opt callstack 0
  5081                           
  5082 ;; *************** function _send_lcd_cmd_long *****************
  5083 ;; Defined at:
  5084 ;;		line 129 in file "eadog.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  cmd             1  [STACK] const unsigned char 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1  [STACK] void 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5093 ;; Tracked objects:
  5094 ;;		On entry : 3F/0
  5095 ;;		On exit  : 3F/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:   16
  5105 ;; This function calls:
  5106 ;;		_SPI1_Exchange8bit
  5107 ;;		_wdtdelay
  5108 ;; This function is called by:
  5109 ;;		_init_display
  5110 ;; This function uses a reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text9
  5114  01970E                     __ptext9:
  5115                           	opt callstack 0
  5116  01970E                     _send_lcd_cmd_long:
  5117                           	opt callstack 13
  5118                           
  5119                           ; BSR set to: 61
  5120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5121                           ;incstack = 0
  5122                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5123  01970E  92BC               	bcf	188,1,c	;volatile
  5124                           
  5125                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5126  019710  94BC               	bcf	188,2,c	;volatile
  5127                           
  5128                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5129                           ;stkvar	_cmd @ sp[(0)+-1]
  5130  019712  0EFF               	movlw	-1
  5131  019714  50E3               	movf	plusw1,w,c
  5132  019716  6EE6               	movwf	postinc1,c
  5133  019718  ECB3  F0CD         	call	_SPI1_Exchange8bit	;wreg free
  5134                           
  5135                           ; BSR set to: 57
  5136                           ;eadog.c: 134:  wdtdelay(800);
  5137  01971C  0E20               	movlw	32
  5138  01971E  6EE6               	movwf	postinc1,c
  5139  019720  0E03               	movlw	3
  5140  019722  6EE6               	movwf	postinc1,c
  5141  019724  0E00               	movlw	0
  5142  019726  6EE6               	movwf	postinc1,c
  5143  019728  0E00               	movlw	0
  5144  01972A  6EE6               	movwf	postinc1,c
  5145  01972C  EC2D  F0C7         	call	_wdtdelay	;wreg free
  5146                           
  5147                           ; BSR set to: 0
  5148  019730  82BC               	bsf	188,1,c	;volatile
  5149                           
  5150                           ; BSR set to: 0
  5151                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5152  019732  52E5               	movf	postdec1,f,c
  5153  019734  0012               	return		;funcret
  5154  019736                     __end_of_send_lcd_cmd_long:
  5155                           	opt callstack 0
  5156                           
  5157 ;; *************** function _send_lcd_cmd *****************
  5158 ;; Defined at:
  5159 ;;		line 117 in file "eadog.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  cmd             1  [STACK] const unsigned char 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1  [STACK] void 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5168 ;; Tracked objects:
  5169 ;;		On entry : 3F/0
  5170 ;;		On exit  : 3F/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:   16
  5180 ;; This function calls:
  5181 ;;		_SPI1_Exchange8bit
  5182 ;;		_wdtdelay
  5183 ;; This function is called by:
  5184 ;;		_init_display
  5185 ;; This function uses a reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text10
  5189  019736                     __ptext10:
  5190                           	opt callstack 0
  5191  019736                     _send_lcd_cmd:
  5192                           	opt callstack 13
  5193                           
  5194                           ; BSR set to: 0
  5195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5196                           ;incstack = 0
  5197                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5198  019736  92BC               	bcf	188,1,c	;volatile
  5199                           
  5200                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5201  019738  94BC               	bcf	188,2,c	;volatile
  5202                           
  5203                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5204                           ;stkvar	_cmd @ sp[(0)+-1]
  5205  01973A  0EFF               	movlw	-1
  5206  01973C  50E3               	movf	plusw1,w,c
  5207  01973E  6EE6               	movwf	postinc1,c
  5208  019740  ECB3  F0CD         	call	_SPI1_Exchange8bit	;wreg free
  5209                           
  5210                           ; BSR set to: 57
  5211                           ;eadog.c: 122:  wdtdelay(30);
  5212  019744  0E1E               	movlw	30
  5213  019746  6EE6               	movwf	postinc1,c
  5214  019748  0E00               	movlw	0
  5215  01974A  6EE6               	movwf	postinc1,c
  5216  01974C  0E00               	movlw	0
  5217  01974E  6EE6               	movwf	postinc1,c
  5218  019750  0E00               	movlw	0
  5219  019752  6EE6               	movwf	postinc1,c
  5220  019754  EC2D  F0C7         	call	_wdtdelay	;wreg free
  5221                           
  5222                           ; BSR set to: 0
  5223  019758  82BC               	bsf	188,1,c	;volatile
  5224                           
  5225                           ; BSR set to: 0
  5226                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5227  01975A  52E5               	movf	postdec1,f,c
  5228  01975C  0012               	return		;funcret
  5229  01975E                     __end_of_send_lcd_cmd:
  5230                           	opt callstack 0
  5231                           
  5232 ;; *************** function _SPI1_Exchange8bit *****************
  5233 ;; Defined at:
  5234 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  data            1  [STACK] unsigned char 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1  [STACK] unsigned char 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 3F/39
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:   15
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_send_lcd_cmd
  5259 ;;		_send_lcd_cmd_long
  5260 ;; This function uses a reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text11
  5264  019B66                     __ptext11:
  5265                           	opt callstack 0
  5266  019B66                     _SPI1_Exchange8bit:
  5267                           	opt callstack 13
  5268                           
  5269                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5270                           
  5271                           ; BSR set to: 0
  5272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5273                           ;incstack = 0
  5274  019B66  0E01               	movlw	1
  5275  019B68  013D               	movlb	61	; () banked
  5276  019B6A  6F12               	movwf	18,b	;volatile
  5277                           
  5278                           ; BSR set to: 61
  5279                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5280                           ;stkvar	_data @ sp[(0)+-1]
  5281  019B6C  0EFF               	movlw	-1
  5282  019B6E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5283  019B74                     l807:
  5284                           
  5285                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5286  019B74  0139               	movlb	57	; () banked
  5287  019B76  A9A2               	btfss	162,4,b	;volatile
  5288  019B78  D7FD               	goto	l807
  5289                           
  5290                           ; BSR set to: 57
  5291                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5292  019B7A  006F F440  F001    	movff	15632,btemp	;volatile
  5293                           
  5294                           ; BSR set to: 57
  5295                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5296  019B80  52E5               	movf	postdec1,f,c
  5297  019B82  0012               	return		;funcret
  5298  019B84                     __end_of_SPI1_Exchange8bit:
  5299                           	opt callstack 0
  5300                           
  5301 ;; *************** function _ringBufS_init *****************
  5302 ;; Defined at:
  5303 ;;		line 22 in file "ringbufs.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  _this           2  [STACK] PTR volatile struct ring
  5306 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1  [STACK] void 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:   16
  5325 ;; This function calls:
  5326 ;;		_memset
  5327 ;; This function is called by:
  5328 ;;		_init_display
  5329 ;; This function uses a reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text12
  5333  01975E                     __ptext12:
  5334                           	opt callstack 0
  5335  01975E                     _ringBufS_init:
  5336                           	opt callstack 13
  5337                           
  5338                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5339                           
  5340                           ; BSR set to: 57
  5341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5342                           ;incstack = 0
  5343  01975E  0E43               	movlw	67
  5344  019760  6EE6               	movwf	postinc1,c
  5345  019762  0E00               	movlw	0
  5346  019764  6EE6               	movwf	postinc1,c
  5347  019766  0E00               	movlw	0
  5348  019768  6EE6               	movwf	postinc1,c
  5349  01976A  0E00               	movlw	0
  5350  01976C  6EE6               	movwf	postinc1,c
  5351                           
  5352                           ;stkvar	__this @ sp[(-4)+-2]
  5353  01976E  0EFA               	movlw	-6
  5354  019770  006F FF8F FFE6     	movff	plusw1,postinc1
  5355  019776  006F FF8F FFE6     	movff	plusw1,postinc1
  5356  01977C  EC8F  F0A9         	call	_memset	;wreg free
  5357                           
  5358                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5359  019780  52E5               	movf	postdec1,f,c
  5360  019782  52E5               	movf	postdec1,f,c
  5361  019784  0012               	return		;funcret
  5362  019786                     __end_of_ringBufS_init:
  5363                           	opt callstack 0
  5364                           
  5365 ;; *************** function _init_bsoc *****************
  5366 ;; Defined at:
  5367 ;;		line 86 in file "bsoc.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1  [STACK] void 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5376 ;; Tracked objects:
  5377 ;;		On entry : 3F/1
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:   18
  5388 ;; This function calls:
  5389 ;;		_TMR3_SetInterruptHandler
  5390 ;;		_Volts_to_SOC
  5391 ;;		___fldiv
  5392 ;;		___flmul
  5393 ;;		___fltol
  5394 ;;		___xxtofl
  5395 ;;		_conv_raw_result
  5396 ;; This function is called by:
  5397 ;;		_main
  5398 ;; This function uses a reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text13
  5402  016F7C                     __ptext13:
  5403                           	opt callstack 0
  5404  016F7C                     _init_bsoc:
  5405                           	opt callstack 12
  5406                           
  5407                           ;bsoc.c: 91:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5408                           
  5409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5410                           ;incstack = 0
  5411  016F7C  0E00               	movlw	0
  5412  016F7E  6EE6               	movwf	postinc1,c
  5413  016F80  0E00               	movlw	0
  5414  016F82  6EE6               	movwf	postinc1,c
  5415  016F84  0E7A               	movlw	122
  5416  016F86  6EE6               	movwf	postinc1,c
  5417  016F88  0E44               	movlw	68
  5418  016F8A  6EE6               	movwf	postinc1,c
  5419  016F8C  0E00               	movlw	0
  5420  016F8E  6EE6               	movwf	postinc1,c
  5421  016F90  0E04               	movlw	4
  5422  016F92  6EE6               	movwf	postinc1,c
  5423  016F94  EC66  F0A1         	call	_conv_raw_result	;wreg free
  5424  016F98  0060  F007  FFE6   	movff	btemp,postinc1
  5425  016F9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5426  016FA4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5427  016FAA  0060  F013  FFE6   	movff	btemp+3,postinc1
  5428  016FB0  EC05  F0B7         	call	___fltol	;wreg free
  5429  016FB4  0060  F007  FFE6   	movff	btemp,postinc1
  5430  016FBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5431  016FC0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5432  016FC6  0060  F013  FFE6   	movff	btemp+3,postinc1
  5433  016FCC  0E00               	movlw	0
  5434  016FCE  6EE6               	movwf	postinc1,c
  5435  016FD0  EC74  F0B2         	call	___xxtofl	;wreg free
  5436  016FD4  0060  F007  FFE6   	movff	btemp,postinc1
  5437  016FDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5438  016FE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5439  016FE6  0060  F013  FFE6   	movff	btemp+3,postinc1
  5440  016FEC  EC1C  F093         	call	___flmul	;wreg free
  5441  016FF0  0060  F007  FFE6   	movff	btemp,postinc1
  5442  016FF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5443  016FFC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5444  017002  0060  F013  FFE6   	movff	btemp+3,postinc1
  5445  017008  EC05  F0B7         	call	___fltol	;wreg free
  5446  01700C  0060  F007  FFE6   	movff	btemp,postinc1
  5447  017012  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5448  017018  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5449  01701E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5450  017024  EC6B  F0C3         	call	_Volts_to_SOC	;wreg free
  5451  017028  0060  F004  F19E   	movff	btemp,_C+158	;volatile
  5452  01702E  0060  F008  F19F   	movff	btemp+1,_C+159	;volatile
  5453                           
  5454                           ;bsoc.c: 92:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5455  017034  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5456  01703A  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5457  017040  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5458  017046  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5459  01704C  0E00               	movlw	0
  5460  01704E  6EE6               	movwf	postinc1,c
  5461  017050  0E00               	movlw	0
  5462  017052  6EE6               	movwf	postinc1,c
  5463  017054  0EC8               	movlw	200
  5464  017056  6EE6               	movwf	postinc1,c
  5465  017058  0E42               	movlw	66
  5466  01705A  6EE6               	movwf	postinc1,c
  5467  01705C  0101               	movlb	1	; () banked
  5468  01705E  519E               	movf	(_C+158)& (0+255),w,b	;volatile
  5469  017060  6E09               	movwf	(btemp+8)^0,c
  5470  017062  519F               	movf	(_C+159)& (0+255),w,b	;volatile
  5471  017064  6E0A               	movwf	(btemp+9)^0,c
  5472  017066  6A0B               	clrf	(btemp+10)^0,c
  5473  017068  6A0C               	clrf	(btemp+11)^0,c
  5474  01706A  0060  F027  FFE6   	movff	btemp+8,postinc1
  5475  017070  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5476  017076  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5477  01707C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5478  017082  0E00               	movlw	0
  5479  017084  6EE6               	movwf	postinc1,c
  5480  017086  EC74  F0B2         	call	___xxtofl	;wreg free
  5481  01708A  0060  F007  FFE6   	movff	btemp,postinc1
  5482  017090  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5483  017096  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5484  01709C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5485  0170A2  ECA9  F09E         	call	___fldiv	;wreg free
  5486  0170A6  0060  F007  FFE6   	movff	btemp,postinc1
  5487  0170AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5488  0170B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5489  0170B8  0060  F013  FFE6   	movff	btemp+3,postinc1
  5490  0170BE  EC1C  F093         	call	___flmul	;wreg free
  5491  0170C2  0060  F004  F180   	movff	btemp,_C+128	;volatile
  5492  0170C8  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
  5493  0170CE  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
  5494  0170D4  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
  5495                           
  5496                           ;bsoc.c: 93:  TMR3_SetInterruptHandler(calc_bsoc);
  5497  0170DA  0E1E               	movlw	low _calc_bsoc
  5498  0170DC  6EE6               	movwf	postinc1,c
  5499  0170DE  0E36               	movlw	high _calc_bsoc
  5500  0170E0  6EE6               	movwf	postinc1,c
  5501  0170E2  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5502  0170E4  6EE6               	movwf	postinc1,c
  5503  0170E6  EC4F  F0CC         	call	_TMR3_SetInterruptHandler	;wreg free
  5504                           
  5505                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5506  0170EA  0012               	return		;funcret
  5507  0170EC                     __end_of_init_bsoc:
  5508                           	opt callstack 0
  5509                           
  5510 ;; *************** function _Volts_to_SOC *****************
  5511 ;; Defined at:
  5512 ;;		line 150 in file "bsoc.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  cvoltage        4  [STACK] unsigned long 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  2  [STACK] unsigned short 
  5519 ;; Registers used:
  5520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/1
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:   15
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_calc_bsoc
  5537 ;;		_init_bsoc
  5538 ;; This function uses a reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text14
  5542  0186D6                     __ptext14:
  5543                           	opt callstack 0
  5544  0186D6                     _Volts_to_SOC:
  5545                           	opt callstack 0
  5546                           
  5547                           ;bsoc.c: 150: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 151: {;bsoc.c: 152:  stat
      +                          ic uint8_t slot;;bsoc.c: 154:  C.soc = 0;
  5548                           
  5549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5550                           ;incstack = 0
  5551 ;; hardware stack exceeded
  5552  0186D6  0101               	movlb	1	; () banked
  5553  0186D8  6B9E               	clrf	(_C+158)& (0+255),b	;volatile
  5554  0186DA  6B9F               	clrf	(_C+159)& (0+255),b	;volatile
  5555                           
  5556                           ;bsoc.c: 155:  for (slot = 0; slot < 26; slot++) {
  5557  0186DC  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5558  0186DE                     l8848:
  5559  0186DE  0E19               	movlw	25
  5560  0186E0  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  5561  0186E2  D001               	goto	l8852
  5562  0186E4  D036               	goto	l8860
  5563  0186E6                     l8852:
  5564                           
  5565                           ;bsoc.c: 156:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5566                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5567  0186E6  502D               	movf	Volts_to_SOC@slot^0,w,c
  5568  0186E8  0D08               	mullw	8
  5569  0186EA  0E81               	movlw	low _BVSOC_TABLE
  5570  0186EC  24F3               	addwf	243,w,c
  5571  0186EE  6EF6               	movwf	tblptrl,c
  5572  0186F0  0EFC               	movlw	high _BVSOC_TABLE
  5573  0186F2  20F4               	addwfc	244,w,c
  5574  0186F4  6EF7               	movwf	tblptrh,c
  5575  0186F6                     	if	1	;There are 3 active tblptr bytes
  5576  0186F6  6AF8               	clrf	tblptru,c
  5577  0186F8  0E00               	movlw	low (__mediumconst shr (0+16))
  5578  0186FA  22F8               	addwfc	tblptru,f,c
  5579  0186FC                     	endif
  5580  0186FC  0EFC               	movlw	-4
  5581  0186FE  50E3               	movf	plusw1,w,c
  5582  018700  0009               	tblrd		*+
  5583  018702  5CF5               	subwf	tablat,w,c
  5584  018704  0EFD               	movlw	-3
  5585  018706  50E3               	movf	plusw1,w,c
  5586  018708  0009               	tblrd		*+
  5587  01870A  58F5               	subwfb	tablat,w,c
  5588  01870C  0EFE               	movlw	-2
  5589  01870E  50E3               	movf	plusw1,w,c
  5590  018710  0009               	tblrd		*+
  5591  018712  58F5               	subwfb	tablat,w,c
  5592  018714  0EFF               	movlw	-1
  5593  018716  50E3               	movf	plusw1,w,c
  5594  018718  0009               	tblrd		*+
  5595  01871A  58F5               	subwfb	tablat,w,c
  5596  01871C  B0D8               	btfsc	status,0,c
  5597  01871E  D017               	goto	l8856
  5598                           
  5599                           ;bsoc.c: 157:    C.soc = BVSOC_TABLE[slot][1];
  5600  018720  502D               	movf	Volts_to_SOC@slot^0,w,c
  5601  018722  0D08               	mullw	8
  5602  018724  0E04               	movlw	4
  5603  018726  26F3               	addwf	243,f,c
  5604  018728  0E00               	movlw	0
  5605  01872A  22F4               	addwfc	244,f,c
  5606  01872C  0E81               	movlw	low _BVSOC_TABLE
  5607  01872E  24F3               	addwf	243,w,c
  5608  018730  6EF6               	movwf	tblptrl,c
  5609  018732  0EFC               	movlw	high _BVSOC_TABLE
  5610  018734  20F4               	addwfc	244,w,c
  5611  018736  6EF7               	movwf	tblptrh,c
  5612  018738                     	if	1	;There are 3 active tblptr bytes
  5613  018738  6AF8               	clrf	tblptru,c
  5614  01873A  0E00               	movlw	low (__mediumconst shr (0+16))
  5615  01873C  22F8               	addwfc	tblptru,f,c
  5616  01873E                     	endif
  5617  01873E  0009               	tblrd		*+
  5618  018740  006F FFD4  F19E    	movff	tablat,_C+158	;volatile
  5619  018746  000A               	tblrd		*-
  5620  018748  006F FFD4  F19F    	movff	tablat,_C+159	;volatile
  5621  01874E                     l8856:
  5622                           
  5623                           ;bsoc.c: 159:  }
  5624  01874E  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  5625  018750  D7C6               	goto	l8848
  5626  018752                     l8860:
  5627                           
  5628                           ;bsoc.c: 161:  return C.soc;
  5629  018752  EE20  F19E         	lfsr	2,_C+158	;volatile
  5630  018756  006F FF78  F001    	movff	postinc2,btemp
  5631  01875C  006F FF74  F002    	movff	postdec2,btemp+1
  5632                           
  5633                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  5634  018762  52E5               	movf	postdec1,f,c
  5635  018764  52E5               	movf	postdec1,f,c
  5636  018766  52E5               	movf	postdec1,f,c
  5637  018768  52E5               	movf	postdec1,f,c
  5638  01876A  0012               	return		;funcret
  5639  01876C                     __end_of_Volts_to_SOC:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _hid_display *****************
  5643 ;; Defined at:
  5644 ;;		line 17 in file "hid.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  h               1  [STACK] PTR struct H_data
  5647 ;;		 -> H(7), 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1  [STACK] PTR struct H_data
  5652 ;; Registers used:
  5653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5654 ;; Tracked objects:
  5655 ;;		On entry : 3F/1
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:   17
  5666 ;; This function calls:
  5667 ;;		_hid_input
  5668 ;; This function is called by:
  5669 ;;		_main
  5670 ;; This function uses a reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text15
  5674  017DCE                     __ptext15:
  5675                           	opt callstack 0
  5676  017DCE                     _hid_display:
  5677                           	opt callstack 13
  5678                           
  5679                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  5680                           ;stkvar	_h @ sp[(0)+-1]
  5681                           
  5682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5683                           ;incstack = 0
  5684  017DCE  0EFF               	movlw	-1
  5685  017DD0  50E3               	movf	plusw1,w,c
  5686  017DD2  6EE6               	movwf	postinc1,c
  5687  017DD4  EC48  F0C4         	call	_hid_input	;wreg free
  5688                           
  5689                           ;hid.c: 21:  switch (h->h_state) {
  5690  017DD8  D066               	goto	l9884
  5691  017DDA                     l9862:
  5692                           
  5693                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  5694                           ;stkvar	_h @ sp[(0)+-1]
  5695  017DDA  0EFF               	movlw	-1
  5696  017DDC  50E3               	movf	plusw1,w,c
  5697  017DDE  6ED9               	movwf	fsr2l,c
  5698  017DE0  6ADA               	clrf	fsr2h,c
  5699  017DE2  0E01               	movlw	1
  5700  017DE4  26D9               	addwf	fsr2l,f,c
  5701  017DE6  0E01               	movlw	1
  5702  017DE8  6EDF               	movwf	indf2,c
  5703                           
  5704                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  5705                           ;stkvar	_h @ sp[(0)+-1]
  5706  017DEA  0EFF               	movlw	-1
  5707  017DEC  50E3               	movf	plusw1,w,c
  5708  017DEE  6ED9               	movwf	fsr2l,c
  5709  017DF0  6ADA               	clrf	fsr2h,c
  5710  017DF2  0E00               	movlw	0
  5711  017DF4  6EDF               	movwf	indf2,c
  5712                           
  5713                           ;hid.c: 25:   h->wait_enter = 1;
  5714                           ;stkvar	_h @ sp[(0)+-1]
  5715  017DF6  0EFF               	movlw	-1
  5716  017DF8  50E3               	movf	plusw1,w,c
  5717  017DFA  6ED9               	movwf	fsr2l,c
  5718  017DFC  6ADA               	clrf	fsr2h,c
  5719  017DFE  0E04               	movlw	4
  5720  017E00  26D9               	addwf	fsr2l,f,c
  5721  017E02  0E01               	movlw	1
  5722  017E04  6EDF               	movwf	indf2,c
  5723                           
  5724                           ;hid.c: 26:   h->wait_select = 1;
  5725                           ;stkvar	_h @ sp[(0)+-1]
  5726  017E06  0EFF               	movlw	-1
  5727  017E08  50E3               	movf	plusw1,w,c
  5728  017E0A  6ED9               	movwf	fsr2l,c
  5729  017E0C  6ADA               	clrf	fsr2h,c
  5730  017E0E  0E02               	movlw	2
  5731  017E10  26D9               	addwf	fsr2l,f,c
  5732  017E12  0E01               	movlw	1
  5733  017E14  6EDF               	movwf	indf2,c
  5734                           
  5735                           ;hid.c: 27:   h->select_p = SW_OFF;
  5736                           ;stkvar	_h @ sp[(0)+-1]
  5737  017E16  0EFF               	movlw	-1
  5738  017E18  50E3               	movf	plusw1,w,c
  5739  017E1A  6ED9               	movwf	fsr2l,c
  5740  017E1C  6ADA               	clrf	fsr2h,c
  5741  017E1E  0E03               	movlw	3
  5742  017E20  26D9               	addwf	fsr2l,f,c
  5743  017E22  0E00               	movlw	0
  5744  017E24  6EDF               	movwf	indf2,c
  5745                           
  5746                           ;hid.c: 28:   h->enter_p = SW_OFF;
  5747                           ;stkvar	_h @ sp[(0)+-1]
  5748  017E26  0EFF               	movlw	-1
  5749  017E28  50E3               	movf	plusw1,w,c
  5750  017E2A  6ED9               	movwf	fsr2l,c
  5751  017E2C  6ADA               	clrf	fsr2h,c
  5752  017E2E  0E05               	movlw	5
  5753  017E30  26D9               	addwf	fsr2l,f,c
  5754  017E32  0E00               	movlw	0
  5755  017E34  D036               	goto	L1
  5756  017E36                     l9874:
  5757                           
  5758                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  5759                           ;stkvar	_h @ sp[(0)+-1]
  5760  017E36  0EFF               	movlw	-1
  5761  017E38  50E3               	movf	plusw1,w,c
  5762  017E3A  6ED9               	movwf	fsr2l,c
  5763  017E3C  6ADA               	clrf	fsr2h,c
  5764  017E3E  0E02               	movlw	2
  5765  017E40  26D9               	addwf	fsr2l,f,c
  5766  017E42  50DF               	movf	indf2,w,c
  5767  017E44  A4D8               	btfss	status,2,c
  5768  017E46  D042               	goto	l1866
  5769                           
  5770                           ;stkvar	_h @ sp[(0)+-1]
  5771  017E48  0EFF               	movlw	-1
  5772  017E4A  50E3               	movf	plusw1,w,c
  5773  017E4C  6ED9               	movwf	fsr2l,c
  5774  017E4E  6ADA               	clrf	fsr2h,c
  5775  017E50  0E03               	movlw	3
  5776  017E52  26D9               	addwf	fsr2l,f,c
  5777  017E54  50DF               	movf	indf2,w,c
  5778  017E56  A4D8               	btfss	status,2,c
  5779  017E58  D039               	goto	l1866
  5780                           
  5781                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  5782                           ;stkvar	_h @ sp[(0)+-1]
  5783  017E5A  0EFF               	movlw	-1
  5784  017E5C  50E3               	movf	plusw1,w,c
  5785  017E5E  6ED9               	movwf	fsr2l,c
  5786  017E60  6ADA               	clrf	fsr2h,c
  5787  017E62  0E06               	movlw	6
  5788  017E64  26D9               	addwf	fsr2l,f,c
  5789                           
  5790                           ;stkvar	_h @ sp[(0)+-1]
  5791  017E66  0EFF               	movlw	-1
  5792  017E68  50E3               	movf	plusw1,w,c
  5793  017E6A  6EE9               	movwf	fsr0l,c
  5794  017E6C  6AEA               	clrf	fsr0h,c
  5795  017E6E  0E06               	movlw	6
  5796  017E70  26E9               	addwf	fsr0l,f,c
  5797  017E72  2AEF               	incf	indf0,f,c
  5798  017E74  50EF               	movf	indf0,w,c
  5799  017E76  0B03               	andlw	3
  5800  017E78  6EDF               	movwf	indf2,c
  5801                           
  5802                           ;hid.c: 34:    h->hid_display = h->sequence;
  5803                           ;stkvar	_h @ sp[(0)+-1]
  5804  017E7A  0EFF               	movlw	-1
  5805  017E7C  50E3               	movf	plusw1,w,c
  5806  017E7E  6ED9               	movwf	fsr2l,c
  5807  017E80  6ADA               	clrf	fsr2h,c
  5808  017E82  0E06               	movlw	6
  5809  017E84  26D9               	addwf	fsr2l,f,c
  5810                           
  5811                           ;stkvar	_h @ sp[(0)+-1]
  5812  017E86  0EFF               	movlw	-1
  5813  017E88  50E3               	movf	plusw1,w,c
  5814  017E8A  6EE9               	movwf	fsr0l,c
  5815  017E8C  6AEA               	clrf	fsr0h,c
  5816  017E8E  006F FF7F FFEF     	movff	indf2,indf0
  5817                           
  5818                           ;hid.c: 35:    h->wait_select = 1;
  5819                           ;stkvar	_h @ sp[(0)+-1]
  5820  017E94  0EFF               	movlw	-1
  5821  017E96  50E3               	movf	plusw1,w,c
  5822  017E98  6ED9               	movwf	fsr2l,c
  5823  017E9A  6ADA               	clrf	fsr2h,c
  5824  017E9C  0E02               	movlw	2
  5825  017E9E  26D9               	addwf	fsr2l,f,c
  5826  017EA0  0E01               	movlw	1
  5827  017EA2                     L1:
  5828  017EA2  6EDF               	movwf	indf2,c
  5829  017EA4  D013               	goto	l1866
  5830  017EA6                     l9884:
  5831                           
  5832                           ;stkvar	_h @ sp[(0)+-1]
  5833  017EA6  0EFF               	movlw	-1
  5834  017EA8  50E3               	movf	plusw1,w,c
  5835  017EAA  6ED9               	movwf	fsr2l,c
  5836  017EAC  6ADA               	clrf	fsr2h,c
  5837  017EAE  0E01               	movlw	1
  5838  017EB0  26D9               	addwf	fsr2l,f,c
  5839  017EB2  50DF               	movf	indf2,w,c
  5840  017EB4  6E0B               	movwf	(btemp+10)^0,c
  5841  017EB6  6A0C               	clrf	(btemp+11)^0,c
  5842                           
  5843                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5844                           ; Switch size 1, requested type "simple"
  5845                           ; Number of cases is 1, Range of values is 0 to 0
  5846                           ; switch strategies available:
  5847                           ; Name         Instructions Cycles
  5848                           ; simple_byte            4     3 (average)
  5849                           ;	Chosen strategy is simple_byte
  5850  017EB8  500C               	movf	(btemp+11)^0,w,c
  5851  017EBA  0A00               	xorlw	0	; case 0
  5852  017EBC  A4D8               	btfss	status,2,c
  5853  017EBE  D7BB               	goto	l9874
  5854                           
  5855                           ; Switch size 1, requested type "simple"
  5856                           ; Number of cases is 2, Range of values is 0 to 1
  5857                           ; switch strategies available:
  5858                           ; Name         Instructions Cycles
  5859                           ; simple_byte            7     4 (average)
  5860                           ;	Chosen strategy is simple_byte
  5861  017EC0  500B               	movf	(btemp+10)^0,w,c
  5862  017EC2  0A00               	xorlw	0	; case 0
  5863  017EC4  B4D8               	btfsc	status,2,c
  5864  017EC6  D789               	goto	l9862
  5865  017EC8  0A01               	xorlw	1	; case 1
  5866  017ECA  D7B5               	goto	l9874
  5867  017ECC                     l1866:
  5868                           
  5869                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5870  017ECC  52E5               	movf	postdec1,f,c
  5871  017ECE  0012               	return		;funcret
  5872  017ED0                     __end_of_hid_display:
  5873                           	opt callstack 0
  5874                           
  5875 ;; *************** function _hid_input *****************
  5876 ;; Defined at:
  5877 ;;		line 3 in file "hid.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  h               1  [STACK] PTR struct H_data
  5880 ;;		 -> H(7), 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1  [STACK] PTR struct H_data
  5885 ;; Registers used:
  5886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/1
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5896 ;;Total ram usage:        0 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:   16
  5899 ;; This function calls:
  5900 ;;		_get_switch
  5901 ;; This function is called by:
  5902 ;;		_hid_display
  5903 ;; This function uses a reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text16
  5907  018890                     __ptext16:
  5908                           	opt callstack 0
  5909  018890                     _hid_input:
  5910                           	opt callstack 13
  5911                           
  5912                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  5913                           
  5914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5915                           ;incstack = 0
  5916  018890  0E02               	movlw	2
  5917  018892  6EE6               	movwf	postinc1,c
  5918  018894  ECC3  F0CB         	call	_get_switch	;wreg free
  5919  018898  5001               	movf	btemp^0,w,c
  5920  01889A  B4D8               	btfsc	status,2,c
  5921  01889C  D01C               	goto	l9542
  5922                           
  5923                           ;hid.c: 6:   h->wait_select = 0;
  5924                           ;stkvar	_h @ sp[(0)+-1]
  5925  01889E  0EFF               	movlw	-1
  5926  0188A0  50E3               	movf	plusw1,w,c
  5927  0188A2  6ED9               	movwf	fsr2l,c
  5928  0188A4  6ADA               	clrf	fsr2h,c
  5929  0188A6  0E02               	movlw	2
  5930  0188A8  26D9               	addwf	fsr2l,f,c
  5931  0188AA  0E00               	movlw	0
  5932  0188AC  6EDF               	movwf	indf2,c
  5933                           
  5934                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  5935  0188AE  0E02               	movlw	2
  5936  0188B0  6EE6               	movwf	postinc1,c
  5937  0188B2  ECC3  F0CB         	call	_get_switch	;wreg free
  5938  0188B6  5001               	movf	btemp^0,w,c
  5939  0188B8  B4D8               	btfsc	status,2,c
  5940  0188BA  D003               	goto	u8600
  5941  0188BC  6A0C               	clrf	(btemp+11)^0,c
  5942  0188BE  2A0C               	incf	(btemp+11)^0,f,c
  5943  0188C0  D001               	goto	u8618
  5944  0188C2                     u8600:
  5945  0188C2  6A0C               	clrf	(btemp+11)^0,c
  5946  0188C4                     u8618:
  5947                           
  5948                           ;stkvar	_h @ sp[(0)+-1]
  5949  0188C4  0EFF               	movlw	-1
  5950  0188C6  50E3               	movf	plusw1,w,c
  5951  0188C8  6ED9               	movwf	fsr2l,c
  5952  0188CA  6ADA               	clrf	fsr2h,c
  5953  0188CC  0E03               	movlw	3
  5954  0188CE  26D9               	addwf	fsr2l,f,c
  5955  0188D0  0060  F033  FFDF   	movff	btemp+11,indf2
  5956  0188D6                     l9542:
  5957                           
  5958                           ;hid.c: 10:  if (get_switch(SENTER)) {
  5959  0188D6  0E03               	movlw	3
  5960  0188D8  6EE6               	movwf	postinc1,c
  5961  0188DA  ECC3  F0CB         	call	_get_switch	;wreg free
  5962  0188DE  5001               	movf	btemp^0,w,c
  5963  0188E0  B4D8               	btfsc	status,2,c
  5964  0188E2  D01C               	goto	l1857
  5965                           
  5966                           ;hid.c: 11:   h->wait_enter = 0;
  5967                           ;stkvar	_h @ sp[(0)+-1]
  5968  0188E4  0EFF               	movlw	-1
  5969  0188E6  50E3               	movf	plusw1,w,c
  5970  0188E8  6ED9               	movwf	fsr2l,c
  5971  0188EA  6ADA               	clrf	fsr2h,c
  5972  0188EC  0E04               	movlw	4
  5973  0188EE  26D9               	addwf	fsr2l,f,c
  5974  0188F0  0E00               	movlw	0
  5975  0188F2  6EDF               	movwf	indf2,c
  5976                           
  5977                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  5978  0188F4  0E03               	movlw	3
  5979  0188F6  6EE6               	movwf	postinc1,c
  5980  0188F8  ECC3  F0CB         	call	_get_switch	;wreg free
  5981  0188FC  5001               	movf	btemp^0,w,c
  5982  0188FE  B4D8               	btfsc	status,2,c
  5983  018900  D003               	goto	u8630
  5984  018902  6A0C               	clrf	(btemp+11)^0,c
  5985  018904  2A0C               	incf	(btemp+11)^0,f,c
  5986  018906  D001               	goto	u8648
  5987  018908                     u8630:
  5988  018908  6A0C               	clrf	(btemp+11)^0,c
  5989  01890A                     u8648:
  5990                           
  5991                           ;stkvar	_h @ sp[(0)+-1]
  5992  01890A  0EFF               	movlw	-1
  5993  01890C  50E3               	movf	plusw1,w,c
  5994  01890E  6ED9               	movwf	fsr2l,c
  5995  018910  6ADA               	clrf	fsr2h,c
  5996  018912  0E05               	movlw	5
  5997  018914  26D9               	addwf	fsr2l,f,c
  5998  018916  0060  F033  FFDF   	movff	btemp+11,indf2
  5999  01891C                     l1857:
  6000                           
  6001                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6002  01891C  52E5               	movf	postdec1,f,c
  6003  01891E  0012               	return		;funcret
  6004  018920                     __end_of_hid_input:
  6005                           	opt callstack 0
  6006                           
  6007 ;; *************** function _get_switch *****************
  6008 ;; Defined at:
  6009 ;;		line 18 in file "dio.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  i               1  [STACK] unsigned char 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1  [STACK] enum E17021
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/2
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:   15
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_main
  6034 ;;		_hid_input
  6035 ;; This function uses a reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text17
  6039  019786                     __ptext17:
  6040                           	opt callstack 0
  6041  019786                     _get_switch:
  6042                           	opt callstack 13
  6043                           
  6044                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6045                           ;stkvar	_i @ sp[(0)+-1]
  6046                           
  6047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6048                           ;incstack = 0
  6049  019786  0EFF               	movlw	-1
  6050  019788  006F FF8C  F001    	movff	plusw1,btemp
  6051  01978E  0E03               	movlw	3
  6052  019790  6401               	cpfsgt	btemp^0,c
  6053  019792  D002               	goto	l8816
  6054                           
  6055                           ;dio.c: 21:   return SW_OFF;
  6056  019794  0E00               	movlw	0
  6057  019796  D008               	goto	L2
  6058  019798                     l8816:
  6059                           
  6060                           ;dio.c: 23:  return S.button[i].sw;
  6061                           ;stkvar	_i @ sp[(0)+-1]
  6062  019798  0EFF               	movlw	-1
  6063  01979A  50E3               	movf	plusw1,w,c
  6064  01979C  0D05               	mullw	5
  6065  01979E  50F3               	movf	243,w,c
  6066  0197A0  0F60               	addlw	low _S
  6067  0197A2  6ED9               	movwf	fsr2l,c
  6068  0197A4  6ADA               	clrf	fsr2h,c
  6069  0197A6  50DF               	movf	indf2,w,c
  6070  0197A8                     L2:
  6071  0197A8  6E01               	movwf	btemp^0,c
  6072                           
  6073                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6074  0197AA  52E5               	movf	postdec1,f,c
  6075  0197AC  0012               	return		;funcret
  6076  0197AE                     __end_of_get_switch:
  6077                           	opt callstack 0
  6078                           
  6079 ;; *************** function _eaDogM_WriteCommand *****************
  6080 ;; Defined at:
  6081 ;;		line 175 in file "eadog.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  cmd             1  [STACK] const unsigned char 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1  [STACK] void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6090 ;; Tracked objects:
  6091 ;;		On entry : 3F/3D
  6092 ;;		On exit  : 3F/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:   25
  6102 ;; This function calls:
  6103 ;;		_send_lcd_cmd_dma
  6104 ;; This function is called by:
  6105 ;;		_main
  6106 ;; This function uses a reentrant model
  6107 ;;
  6108                           
  6109                           	psect	text18
  6110  019CF6                     __ptext18:
  6111                           	opt callstack 0
  6112  019CF6                     _eaDogM_WriteCommand:
  6113                           	opt callstack 5
  6114                           
  6115                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6116                           ;stkvar	_cmd @ sp[(0)+-1]
  6117                           
  6118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6119                           ;incstack = 0
  6120  019CF6  0EFF               	movlw	-1
  6121  019CF8  50E3               	movf	plusw1,w,c
  6122  019CFA  6EE6               	movwf	postinc1,c
  6123  019CFC  ECB5  F0C7         	call	_send_lcd_cmd_dma	;wreg free
  6124                           
  6125                           ; BSR set to: 0
  6126                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6127  019D00  52E5               	movf	postdec1,f,c
  6128  019D02  0012               	return		;funcret
  6129  019D04                     __end_of_eaDogM_WriteCommand:
  6130                           	opt callstack 0
  6131                           
  6132 ;; *************** function _convert_adc_data *****************
  6133 ;; Defined at:
  6134 ;;		line 40 in file "mbmc.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  i               1  [STACK] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1  [STACK] void 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/1
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:   18
  6155 ;; This function calls:
  6156 ;;		_conv_raw_result
  6157 ;;		_lp_filter
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;; This function uses a reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text19
  6164  0182E8                     __ptext19:
  6165                           	opt callstack 0
  6166  0182E8                     _convert_adc_data:
  6167                           	opt callstack 0
  6168                           
  6169                           ; BSR set to: 0
  6170                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6171  0182E8  52E6               	movf	postinc1,f,c
  6172                           
  6173                           ;mbmc.c: 42:  uint8_t i = 0;
  6174                           ;stkvar	_i @ sp[(-1)+0]
  6175                           
  6176                           ;incstack = 0
  6177  0182EA  0EFF               	movlw	-1
  6178  0182EC  6AE3               	clrf	plusw1,c
  6179  0182EE                     l9834:
  6180                           
  6181                           ;mbmc.c: 45:   if (V.calib) {
  6182  0182EE  0102               	movlb	2	; () banked
  6183  0182F0  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6184  0182F2  B4D8               	btfsc	status,2,c
  6185  0182F4  D01B               	goto	l9838
  6186                           
  6187                           ; BSR set to: 2
  6188                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6189  0182F6  0E01               	movlw	1
  6190  0182F8  6EE6               	movwf	postinc1,c
  6191                           
  6192                           ;stkvar	_i @ sp[(-2)+0]
  6193  0182FA  0EFE               	movlw	-2
  6194  0182FC  50E3               	movf	plusw1,w,c
  6195  0182FE  6EE6               	movwf	postinc1,c
  6196  018300  0E01               	movlw	1
  6197  018302  6EE6               	movwf	postinc1,c
  6198                           
  6199                           ;stkvar	_i @ sp[(-4)+0]
  6200  018304  0EFC               	movlw	-4
  6201  018306  50E3               	movf	plusw1,w,c
  6202  018308  6EE6               	movwf	postinc1,c
  6203  01830A  EC66  F0A1         	call	_conv_raw_result	;wreg free
  6204  01830E  0060  F007  FFE6   	movff	btemp,postinc1
  6205  018314  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6206  01831A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6207  018320  0060  F013  FFE6   	movff	btemp+3,postinc1
  6208  018326  EC5A  F0B5         	call	_lp_filter	;wreg free
  6209  01832A  D01A               	goto	L3
  6210  01832C                     l9838:
  6211                           
  6212                           ; BSR set to: 2
  6213                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6214  01832C  0E00               	movlw	0
  6215  01832E  6EE6               	movwf	postinc1,c
  6216                           
  6217                           ;stkvar	_i @ sp[(-2)+0]
  6218  018330  0EFE               	movlw	-2
  6219  018332  50E3               	movf	plusw1,w,c
  6220  018334  6EE6               	movwf	postinc1,c
  6221  018336  0E00               	movlw	0
  6222  018338  6EE6               	movwf	postinc1,c
  6223                           
  6224                           ;stkvar	_i @ sp[(-4)+0]
  6225  01833A  0EFC               	movlw	-4
  6226  01833C  50E3               	movf	plusw1,w,c
  6227  01833E  6EE6               	movwf	postinc1,c
  6228  018340  EC66  F0A1         	call	_conv_raw_result	;wreg free
  6229  018344  0060  F007  FFE6   	movff	btemp,postinc1
  6230  01834A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6231  018350  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6232  018356  0060  F013  FFE6   	movff	btemp+3,postinc1
  6233  01835C  EC5A  F0B5         	call	_lp_filter	;wreg free
  6234  018360                     L3:
  6235                           
  6236                           ;stkvar	_i @ sp[(-1)+0]
  6237  018360  0EFF               	movlw	-1
  6238  018362  50E3               	movf	plusw1,w,c
  6239  018364  0D04               	mullw	4
  6240  018366  0E00               	movlw	low _C
  6241  018368  24F3               	addwf	243,w,c
  6242  01836A  6ED9               	movwf	fsr2l,c
  6243  01836C  0E01               	movlw	high _C
  6244  01836E  20F4               	addwfc	prodh,w,c
  6245  018370  6EDA               	movwf	fsr2h,c
  6246  018372  0060  F007  FFDE   	movff	btemp,postinc2
  6247  018378  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6248  01837E  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6249  018384  0060  F013  FFDE   	movff	btemp+3,postinc2
  6250                           
  6251                           ;mbmc.c: 50:  } while (++i < 16);
  6252                           ;stkvar	_i @ sp[(-1)+0]
  6253  01838A  0EFF               	movlw	-1
  6254  01838C  2AE3               	incf	plusw1,f,c
  6255  01838E  0EFF               	movlw	-1
  6256  018390  006F FF8C  F001    	movff	plusw1,btemp
  6257  018396  0E0F               	movlw	15
  6258  018398  6401               	cpfsgt	btemp^0,c
  6259  01839A  D7A9               	goto	l9834
  6260                           
  6261                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6262  01839C  52E5               	movf	postdec1,f,c
  6263  01839E  0012               	return		;funcret
  6264  0183A0                     __end_of_convert_adc_data:
  6265                           	opt callstack 0
  6266                           
  6267 ;; *************** function _conv_raw_result *****************
  6268 ;; Defined at:
  6269 ;;		line 80 in file "daq.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  chan            1  [STACK] const enum E16136
  6272 ;;  to_what         1  [STACK] const enum E16198
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  4  [STACK] float 
  6277 ;; Registers used:
  6278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/1
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:   17
  6291 ;; This function calls:
  6292 ;;		___fldiv
  6293 ;;		___flmul
  6294 ;;		___flsub
  6295 ;;		___xxtofl
  6296 ;;		_get_raw_result
  6297 ;;		_nanf
  6298 ;; This function is called by:
  6299 ;;		_convert_adc_data
  6300 ;;		_init_bsoc
  6301 ;; This function uses a reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text20
  6305  0142CC                     __ptext20:
  6306                           	opt callstack 0
  6307  0142CC                     _conv_raw_result:
  6308                           	opt callstack 12
  6309                           
  6310                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  6311                           
  6312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6313                           ;incstack = 0
  6314  0142CC  D242               	goto	l9476
  6315  0142CE                     l9422:
  6316                           
  6317                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  6318                           ;stkvar	_chan @ sp[(0)+-1]
  6319  0142CE  0EFF               	movlw	-1
  6320  0142D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  6321  0142D6  0E77               	movlw	119
  6322  0142D8  6E09               	movwf	(btemp+8)^0,c
  6323  0142DA  0E3C               	movlw	60
  6324  0142DC  6E0A               	movwf	(btemp+9)^0,c
  6325  0142DE  2A0C               	incf	(btemp+11)^0,f,c
  6326  0142E0  D003               	goto	u8374
  6327  0142E2                     u8375:
  6328  0142E2  340A               	rlcf	(btemp+9)^0,w,c
  6329  0142E4  320A               	rrcf	(btemp+9)^0,f,c
  6330  0142E6  3209               	rrcf	(btemp+8)^0,f,c
  6331  0142E8                     u8374:
  6332  0142E8  2E0C               	decfsz	(btemp+11)^0,f,c
  6333  0142EA  D7FB               	goto	u8375
  6334  0142EC  B009               	btfsc	(btemp+8)^0,0,c
  6335  0142EE  D007               	goto	l9428
  6336                           
  6337                           ;daq.c: 86:    return nanf("");
  6338  0142F0  0E3F               	movlw	low (STR_46+74)
  6339  0142F2  6EE6               	movwf	postinc1,c
  6340  0142F4  0EFE               	movlw	high (STR_46+74)
  6341  0142F6  6EE6               	movwf	postinc1,c
  6342  0142F8  EC9C  F0C6         	call	_nanf	;wreg free
  6343  0142FC  D23A               	goto	l1737
  6344  0142FE                     l9428:
  6345                           
  6346                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  6347                           ;stkvar	_chan @ sp[(0)+-1]
  6348  0142FE  0EFF               	movlw	-1
  6349  014300  006F FF8C  F00C    	movff	plusw1,btemp+11
  6350  014306  0E03               	movlw	3
  6351  014308  6E09               	movwf	(btemp+8)^0,c
  6352  01430A  0E00               	movlw	0
  6353  01430C  6E0A               	movwf	(btemp+9)^0,c
  6354  01430E  2A0C               	incf	(btemp+11)^0,f,c
  6355  014310  D003               	goto	u8394
  6356  014312                     u8395:
  6357  014312  340A               	rlcf	(btemp+9)^0,w,c
  6358  014314  320A               	rrcf	(btemp+9)^0,f,c
  6359  014316  3209               	rrcf	(btemp+8)^0,f,c
  6360  014318                     u8394:
  6361  014318  2E0C               	decfsz	(btemp+11)^0,f,c
  6362  01431A  D7FB               	goto	u8395
  6363  01431C  A009               	btfss	(btemp+8)^0,0,c
  6364  01431E  D0EB               	goto	l9442
  6365                           
  6366                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  6367                           ;stkvar	_chan @ sp[(0)+-1]
  6368  014320  0EFF               	movlw	-1
  6369  014322  006F FF8C  F00C    	movff	plusw1,btemp+11
  6370  014328  0E01               	movlw	1
  6371  01432A  6E09               	movwf	(btemp+8)^0,c
  6372  01432C  0E00               	movlw	0
  6373  01432E  6E0A               	movwf	(btemp+9)^0,c
  6374  014330  2A0C               	incf	(btemp+11)^0,f,c
  6375  014332  D003               	goto	u8414
  6376  014334                     u8415:
  6377  014334  340A               	rlcf	(btemp+9)^0,w,c
  6378  014336  320A               	rrcf	(btemp+9)^0,f,c
  6379  014338  3209               	rrcf	(btemp+8)^0,f,c
  6380  01433A                     u8414:
  6381  01433A  2E0C               	decfsz	(btemp+11)^0,f,c
  6382  01433C  D7FB               	goto	u8415
  6383  01433E  A009               	btfss	(btemp+8)^0,0,c
  6384  014340  D06D               	goto	l9438
  6385                           
  6386                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  6387  014342  0E7B               	movlw	123
  6388  014344  6EE6               	movwf	postinc1,c
  6389  014346  0E14               	movlw	20
  6390  014348  6EE6               	movwf	postinc1,c
  6391  01434A  0EAE               	movlw	174
  6392  01434C  6EE6               	movwf	postinc1,c
  6393  01434E  0E3D               	movlw	61
  6394  014350  6EE6               	movwf	postinc1,c
  6395  014352  0060  F3AC  F009   	movff	_R+32,btemp+8	;volatile
  6396  014358  0060  F3B0  F00A   	movff	_R+33,btemp+9	;volatile
  6397  01435E  0E00               	movlw	0
  6398  014360  BE0A               	btfsc	(btemp+9)^0,7,c
  6399  014362  0EFF               	movlw	255
  6400  014364  6E0B               	movwf	(btemp+10)^0,c
  6401  014366  6E0C               	movwf	(btemp+11)^0,c
  6402  014368  0060  F027  FFE6   	movff	btemp+8,postinc1
  6403  01436E  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6404  014374  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6405  01437A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6406  014380  0E01               	movlw	1
  6407  014382  6EE6               	movwf	postinc1,c
  6408  014384  EC74  F0B2         	call	___xxtofl	;wreg free
  6409  014388  0060  F007  FFE6   	movff	btemp,postinc1
  6410  01438E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6411  014394  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6412  01439A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6413                           
  6414                           ;stkvar	_chan @ sp[(-8)+-1]
  6415  0143A0  0EF7               	movlw	-9
  6416  0143A2  50E3               	movf	plusw1,w,c
  6417  0143A4  6EE6               	movwf	postinc1,c
  6418  0143A6  ECC2  F0CD         	call	_get_raw_result	;wreg free
  6419  0143AA  0060  F004  F00B   	movff	btemp,btemp+10
  6420  0143B0  0060  F008  F00C   	movff	btemp+1,btemp+11
  6421  0143B6  500B               	movf	(btemp+10)^0,w,c
  6422  0143B8  6E05               	movwf	(btemp+4)^0,c
  6423  0143BA  500C               	movf	(btemp+11)^0,w,c
  6424  0143BC  6E06               	movwf	(btemp+5)^0,c
  6425  0143BE  6A07               	clrf	(btemp+6)^0,c
  6426  0143C0  6A08               	clrf	(btemp+7)^0,c
  6427  0143C2  0060  F017  FFE6   	movff	btemp+4,postinc1
  6428  0143C8  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6429  0143CE  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6430  0143D4  0060  F023  FFE6   	movff	btemp+7,postinc1
  6431  0143DA  0E00               	movlw	0
  6432  0143DC  6EE6               	movwf	postinc1,c
  6433  0143DE  EC74  F0B2         	call	___xxtofl	;wreg free
  6434  0143E2  0060  F007  FFE6   	movff	btemp,postinc1
  6435  0143E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6436  0143EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6437  0143F4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6438  0143FA  ECC3  F0C8         	call	___flsub	;wreg free
  6439  0143FE  0060  F007  FFE6   	movff	btemp,postinc1
  6440  014404  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6441  01440A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6442  014410  0060  F013  FFE6   	movff	btemp+3,postinc1
  6443  014416  EC1C  F093         	call	___flmul	;wreg free
  6444  01441A  D1AB               	goto	l1737
  6445  01441C                     l9438:
  6446                           
  6447                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  6448  01441C  0E29               	movlw	41
  6449  01441E  6EE6               	movwf	postinc1,c
  6450  014420  0E5C               	movlw	92
  6451  014422  6EE6               	movwf	postinc1,c
  6452  014424  0E0F               	movlw	15
  6453  014426  6EE6               	movwf	postinc1,c
  6454  014428  0E3D               	movlw	61
  6455  01442A  6EE6               	movwf	postinc1,c
  6456  01442C  0060  F3B4  F009   	movff	_R+34,btemp+8	;volatile
  6457  014432  0060  F3B8  F00A   	movff	_R+35,btemp+9	;volatile
  6458  014438  0E00               	movlw	0
  6459  01443A  BE0A               	btfsc	(btemp+9)^0,7,c
  6460  01443C  0EFF               	movlw	255
  6461  01443E  6E0B               	movwf	(btemp+10)^0,c
  6462  014440  6E0C               	movwf	(btemp+11)^0,c
  6463  014442  0060  F027  FFE6   	movff	btemp+8,postinc1
  6464  014448  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6465  01444E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6466  014454  0060  F033  FFE6   	movff	btemp+11,postinc1
  6467  01445A  0E01               	movlw	1
  6468  01445C  6EE6               	movwf	postinc1,c
  6469  01445E  EC74  F0B2         	call	___xxtofl	;wreg free
  6470  014462  0060  F007  FFE6   	movff	btemp,postinc1
  6471  014468  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6472  01446E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6473  014474  0060  F013  FFE6   	movff	btemp+3,postinc1
  6474                           
  6475                           ;stkvar	_chan @ sp[(-8)+-1]
  6476  01447A  0EF7               	movlw	-9
  6477  01447C  50E3               	movf	plusw1,w,c
  6478  01447E  6EE6               	movwf	postinc1,c
  6479  014480  ECC2  F0CD         	call	_get_raw_result	;wreg free
  6480  014484  0060  F004  F00B   	movff	btemp,btemp+10
  6481  01448A  0060  F008  F00C   	movff	btemp+1,btemp+11
  6482  014490  500B               	movf	(btemp+10)^0,w,c
  6483  014492  6E05               	movwf	(btemp+4)^0,c
  6484  014494  500C               	movf	(btemp+11)^0,w,c
  6485  014496  6E06               	movwf	(btemp+5)^0,c
  6486  014498  6A07               	clrf	(btemp+6)^0,c
  6487  01449A  6A08               	clrf	(btemp+7)^0,c
  6488  01449C  0060  F017  FFE6   	movff	btemp+4,postinc1
  6489  0144A2  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6490  0144A8  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6491  0144AE  0060  F023  FFE6   	movff	btemp+7,postinc1
  6492  0144B4  0E00               	movlw	0
  6493  0144B6  6EE6               	movwf	postinc1,c
  6494  0144B8  EC74  F0B2         	call	___xxtofl	;wreg free
  6495  0144BC  0060  F007  FFE6   	movff	btemp,postinc1
  6496  0144C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6497  0144C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6498  0144CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  6499  0144D4  ECC3  F0C8         	call	___flsub	;wreg free
  6500  0144D8  0060  F007  FFE6   	movff	btemp,postinc1
  6501  0144DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6502  0144E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6503  0144EA  0060  F013  FFE6   	movff	btemp+3,postinc1
  6504  0144F0  EC1C  F093         	call	___flmul	;wreg free
  6505  0144F4  D13E               	goto	l1737
  6506  0144F6                     l9442:
  6507                           
  6508                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  6509                           ;stkvar	_chan @ sp[(0)+-1]
  6510  0144F6  0EFF               	movlw	-1
  6511  0144F8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6512  0144FE  0E00               	movlw	0
  6513  014500  6E09               	movwf	(btemp+8)^0,c
  6514  014502  0E08               	movlw	8
  6515  014504  6E0A               	movwf	(btemp+9)^0,c
  6516  014506  2A0C               	incf	(btemp+11)^0,f,c
  6517  014508  D003               	goto	u8434
  6518  01450A                     u8435:
  6519  01450A  340A               	rlcf	(btemp+9)^0,w,c
  6520  01450C  320A               	rrcf	(btemp+9)^0,f,c
  6521  01450E  3209               	rrcf	(btemp+8)^0,f,c
  6522  014510                     u8434:
  6523  014510  2E0C               	decfsz	(btemp+11)^0,f,c
  6524  014512  D7FB               	goto	u8435
  6525  014514  A009               	btfss	(btemp+8)^0,0,c
  6526  014516  D008               	goto	l9450
  6527                           
  6528                           ;daq.c: 96:     return 25.0;
  6529  014518  0E00               	movlw	0
  6530  01451A  6E01               	movwf	btemp^0,c
  6531  01451C  0E00               	movlw	0
  6532  01451E  6E02               	movwf	(btemp+1)^0,c
  6533  014520  0EC8               	movlw	200
  6534  014522  6E03               	movwf	(btemp+2)^0,c
  6535  014524  0E41               	movlw	65
  6536  014526  D113               	goto	L4
  6537  014528                     l9450:
  6538                           
  6539                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6540  014528  0E00               	movlw	0
  6541  01452A  6EE6               	movwf	postinc1,c
  6542  01452C  0E00               	movlw	0
  6543  01452E  6EE6               	movwf	postinc1,c
  6544  014530  0E7A               	movlw	122
  6545  014532  6EE6               	movwf	postinc1,c
  6546  014534  0E44               	movlw	68
  6547  014536  6EE6               	movwf	postinc1,c
  6548  014538  0E61               	movlw	97
  6549  01453A  6EE6               	movwf	postinc1,c
  6550  01453C  0E03               	movlw	3
  6551  01453E  6EE6               	movwf	postinc1,c
  6552  014540  0E84               	movlw	132
  6553  014542  6EE6               	movwf	postinc1,c
  6554  014544  0E40               	movlw	64
  6555  014546  6EE6               	movwf	postinc1,c
  6556                           
  6557                           ;stkvar	_chan @ sp[(-8)+-1]
  6558  014548  0EF7               	movlw	-9
  6559  01454A  50E3               	movf	plusw1,w,c
  6560  01454C  6EE6               	movwf	postinc1,c
  6561  01454E  ECC2  F0CD         	call	_get_raw_result	;wreg free
  6562  014552  0060  F004  F00B   	movff	btemp,btemp+10
  6563  014558  0060  F008  F00C   	movff	btemp+1,btemp+11
  6564  01455E  500B               	movf	(btemp+10)^0,w,c
  6565  014560  6E05               	movwf	(btemp+4)^0,c
  6566  014562  500C               	movf	(btemp+11)^0,w,c
  6567  014564  6E06               	movwf	(btemp+5)^0,c
  6568  014566  6A07               	clrf	(btemp+6)^0,c
  6569  014568  6A08               	clrf	(btemp+7)^0,c
  6570  01456A  0060  F017  FFE6   	movff	btemp+4,postinc1
  6571  014570  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6572  014576  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6573  01457C  0060  F023  FFE6   	movff	btemp+7,postinc1
  6574  014582  0E00               	movlw	0
  6575  014584  6EE6               	movwf	postinc1,c
  6576  014586  EC74  F0B2         	call	___xxtofl	;wreg free
  6577  01458A  0060  F007  FFE6   	movff	btemp,postinc1
  6578  014590  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6579  014596  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6580  01459C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6581  0145A2  EC1C  F093         	call	___flmul	;wreg free
  6582  0145A6  0060  F007  FFE6   	movff	btemp,postinc1
  6583  0145AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6584  0145B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6585  0145B8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6586  0145BE  ECA9  F09E         	call	___fldiv	;wreg free
  6587  0145C2  D0D7               	goto	l1737
  6588  0145C4                     l9454:
  6589                           
  6590                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  6591                           ;stkvar	_chan @ sp[(0)+-1]
  6592  0145C4  0EFF               	movlw	-1
  6593  0145C6  006F FF8C  F00C    	movff	plusw1,btemp+11
  6594  0145CC  0E03               	movlw	3
  6595  0145CE  6E09               	movwf	(btemp+8)^0,c
  6596  0145D0  0E00               	movlw	0
  6597  0145D2  6E0A               	movwf	(btemp+9)^0,c
  6598  0145D4  2A0C               	incf	(btemp+11)^0,f,c
  6599  0145D6  D003               	goto	u8454
  6600  0145D8                     u8455:
  6601  0145D8  340A               	rlcf	(btemp+9)^0,w,c
  6602  0145DA  320A               	rrcf	(btemp+9)^0,f,c
  6603  0145DC  3209               	rrcf	(btemp+8)^0,f,c
  6604  0145DE                     u8454:
  6605  0145DE  2E0C               	decfsz	(btemp+11)^0,f,c
  6606  0145E0  D7FB               	goto	u8455
  6607  0145E2  B009               	btfsc	(btemp+8)^0,0,c
  6608  0145E4  D011               	goto	u8480
  6609                           
  6610                           ;stkvar	_chan @ sp[(0)+-1]
  6611  0145E6  0EFF               	movlw	-1
  6612  0145E8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6613  0145EE  0E00               	movlw	0
  6614  0145F0  6E09               	movwf	(btemp+8)^0,c
  6615  0145F2  0E08               	movlw	8
  6616  0145F4  6E0A               	movwf	(btemp+9)^0,c
  6617  0145F6  2A0C               	incf	(btemp+11)^0,f,c
  6618  0145F8  D003               	goto	u8474
  6619  0145FA                     u8475:
  6620  0145FA  340A               	rlcf	(btemp+9)^0,w,c
  6621  0145FC  320A               	rrcf	(btemp+9)^0,f,c
  6622  0145FE  3209               	rrcf	(btemp+8)^0,f,c
  6623  014600                     u8474:
  6624  014600  2E0C               	decfsz	(btemp+11)^0,f,c
  6625  014602  D7FB               	goto	u8475
  6626  014604  A009               	btfss	(btemp+8)^0,0,c
  6627  014606  D04E               	goto	l9462
  6628  014608                     u8480:
  6629                           
  6630                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  6631  014608  0E00               	movlw	0
  6632  01460A  6EE6               	movwf	postinc1,c
  6633  01460C  0E00               	movlw	0
  6634  01460E  6EE6               	movwf	postinc1,c
  6635  014610  0E7A               	movlw	122
  6636  014612  6EE6               	movwf	postinc1,c
  6637  014614  0E44               	movlw	68
  6638  014616  6EE6               	movwf	postinc1,c
  6639  014618  0E00               	movlw	0
  6640  01461A  6EE6               	movwf	postinc1,c
  6641  01461C  0E00               	movlw	0
  6642  01461E  6EE6               	movwf	postinc1,c
  6643  014620  0E20               	movlw	32
  6644  014622  6EE6               	movwf	postinc1,c
  6645  014624  0E3F               	movlw	63
  6646  014626  6EE6               	movwf	postinc1,c
  6647                           
  6648                           ;stkvar	_chan @ sp[(-8)+-1]
  6649  014628  0EF7               	movlw	-9
  6650  01462A  50E3               	movf	plusw1,w,c
  6651  01462C  6EE6               	movwf	postinc1,c
  6652  01462E  ECC2  F0CD         	call	_get_raw_result	;wreg free
  6653  014632  0060  F004  F00B   	movff	btemp,btemp+10
  6654  014638  0060  F008  F00C   	movff	btemp+1,btemp+11
  6655  01463E  500B               	movf	(btemp+10)^0,w,c
  6656  014640  6E05               	movwf	(btemp+4)^0,c
  6657  014642  500C               	movf	(btemp+11)^0,w,c
  6658  014644  6E06               	movwf	(btemp+5)^0,c
  6659  014646  6A07               	clrf	(btemp+6)^0,c
  6660  014648  6A08               	clrf	(btemp+7)^0,c
  6661  01464A  0060  F017  FFE6   	movff	btemp+4,postinc1
  6662  014650  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6663  014656  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6664  01465C  0060  F023  FFE6   	movff	btemp+7,postinc1
  6665  014662  0E00               	movlw	0
  6666  014664  6EE6               	movwf	postinc1,c
  6667  014666  EC74  F0B2         	call	___xxtofl	;wreg free
  6668  01466A  0060  F007  FFE6   	movff	btemp,postinc1
  6669  014670  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6670  014676  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6671  01467C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6672  014682  EC1C  F093         	call	___flmul	;wreg free
  6673  014686  0060  F007  FFE6   	movff	btemp,postinc1
  6674  01468C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6675  014692  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6676  014698  0060  F013  FFE6   	movff	btemp+3,postinc1
  6677  01469E  ECA9  F09E         	call	___fldiv	;wreg free
  6678  0146A2  D067               	goto	l1737
  6679  0146A4                     l9462:
  6680                           
  6681                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6682  0146A4  0E00               	movlw	0
  6683  0146A6  6EE6               	movwf	postinc1,c
  6684  0146A8  0E00               	movlw	0
  6685  0146AA  6EE6               	movwf	postinc1,c
  6686  0146AC  0E7A               	movlw	122
  6687  0146AE  6EE6               	movwf	postinc1,c
  6688  0146B0  0E44               	movlw	68
  6689  0146B2  6EE6               	movwf	postinc1,c
  6690  0146B4  0E61               	movlw	97
  6691  0146B6  6EE6               	movwf	postinc1,c
  6692  0146B8  0E03               	movlw	3
  6693  0146BA  6EE6               	movwf	postinc1,c
  6694  0146BC  0E84               	movlw	132
  6695  0146BE  6EE6               	movwf	postinc1,c
  6696  0146C0  0E40               	movlw	64
  6697  0146C2  6EE6               	movwf	postinc1,c
  6698                           
  6699                           ;stkvar	_chan @ sp[(-8)+-1]
  6700  0146C4  0EF7               	movlw	-9
  6701  0146C6  50E3               	movf	plusw1,w,c
  6702  0146C8  6EE6               	movwf	postinc1,c
  6703  0146CA  ECC2  F0CD         	call	_get_raw_result	;wreg free
  6704  0146CE  0060  F004  F00B   	movff	btemp,btemp+10
  6705  0146D4  0060  F008  F00C   	movff	btemp+1,btemp+11
  6706  0146DA  500B               	movf	(btemp+10)^0,w,c
  6707  0146DC  6E05               	movwf	(btemp+4)^0,c
  6708  0146DE  500C               	movf	(btemp+11)^0,w,c
  6709  0146E0  6E06               	movwf	(btemp+5)^0,c
  6710  0146E2  6A07               	clrf	(btemp+6)^0,c
  6711  0146E4  6A08               	clrf	(btemp+7)^0,c
  6712  0146E6  0060  F017  FFE6   	movff	btemp+4,postinc1
  6713  0146EC  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6714  0146F2  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6715  0146F8  0060  F023  FFE6   	movff	btemp+7,postinc1
  6716  0146FE  0E00               	movlw	0
  6717  014700  6EE6               	movwf	postinc1,c
  6718  014702  EC74  F0B2         	call	___xxtofl	;wreg free
  6719  014706  0060  F007  FFE6   	movff	btemp,postinc1
  6720  01470C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6721  014712  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6722  014718  0060  F013  FFE6   	movff	btemp+3,postinc1
  6723  01471E  EC1C  F093         	call	___flmul	;wreg free
  6724  014722  0060  F007  FFE6   	movff	btemp,postinc1
  6725  014728  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6726  01472E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6727  014734  0060  F013  FFE6   	movff	btemp+3,postinc1
  6728  01473A  ECA9  F09E         	call	___fldiv	;wreg free
  6729  01473E  D019               	goto	l1737
  6730  014740                     l9468:
  6731                           
  6732                           ;daq.c: 109:   return 0.0;
  6733  014740  0E00               	movlw	0
  6734  014742  6E01               	movwf	btemp^0,c
  6735  014744  0E00               	movlw	0
  6736  014746  6E02               	movwf	(btemp+1)^0,c
  6737  014748  0E00               	movlw	0
  6738  01474A  6E03               	movwf	(btemp+2)^0,c
  6739  01474C  0E00               	movlw	0
  6740  01474E                     L4:
  6741  01474E  6E04               	movwf	(btemp+3)^0,c
  6742  014750  D010               	goto	l1737
  6743  014752                     l9476:
  6744                           
  6745                           ;stkvar	_to_what @ sp[(0)+-2]
  6746  014752  0EFE               	movlw	-2
  6747  014754  50E3               	movf	plusw1,w,c
  6748  014756  6E0B               	movwf	(btemp+10)^0,c
  6749  014758  6A0C               	clrf	(btemp+11)^0,c
  6750                           
  6751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6752                           ; Switch size 1, requested type "simple"
  6753                           ; Number of cases is 1, Range of values is 0 to 0
  6754                           ; switch strategies available:
  6755                           ; Name         Instructions Cycles
  6756                           ; simple_byte            4     3 (average)
  6757                           ;	Chosen strategy is simple_byte
  6758  01475A  500C               	movf	(btemp+11)^0,w,c
  6759  01475C  0A00               	xorlw	0	; case 0
  6760  01475E  A4D8               	btfss	status,2,c
  6761  014760  D7EF               	goto	l9468
  6762                           
  6763                           ; Switch size 1, requested type "simple"
  6764                           ; Number of cases is 2, Range of values is 0 to 1
  6765                           ; switch strategies available:
  6766                           ; Name         Instructions Cycles
  6767                           ; simple_byte            7     4 (average)
  6768                           ;	Chosen strategy is simple_byte
  6769  014762  500B               	movf	(btemp+10)^0,w,c
  6770  014764  0A00               	xorlw	0	; case 0
  6771  014766  B4D8               	btfsc	status,2,c
  6772  014768  D5B2               	goto	l9422
  6773  01476A  0A01               	xorlw	1	; case 1
  6774  01476C  B4D8               	btfsc	status,2,c
  6775  01476E  D72A               	goto	l9454
  6776  014770  D7E7               	goto	l9468
  6777  014772                     l1737:
  6778                           
  6779                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  6780  014772  52E5               	movf	postdec1,f,c
  6781  014774  52E5               	movf	postdec1,f,c
  6782  014776  0012               	return		;funcret
  6783  014778                     __end_of_conv_raw_result:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function _nanf *****************
  6787 ;; Defined at:
  6788 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  s               2  [STACK] PTR const unsigned char 
  6791 ;;		 -> STR_60(1), STR_45(1), 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  u               4  [STACK] struct .
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  4  [STACK] float 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/1
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:   15
  6810 ;; This function calls:
  6811 ;;		Nothing
  6812 ;; This function is called by:
  6813 ;;		_conv_raw_result
  6814 ;; This function uses a reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text21
  6818  018D38                     __ptext21:
  6819                           	opt callstack 0
  6820  018D38                     _nanf:
  6821                           	opt callstack 0
  6822                           
  6823                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6824  018D38  52E6               	movf	postinc1,f,c
  6825  018D3A  52E6               	movf	postinc1,f,c
  6826  018D3C  52E6               	movf	postinc1,f,c
  6827  018D3E  52E6               	movf	postinc1,f,c
  6828                           
  6829                           ;incstack = 0
  6830  018D40  0EFF               	movlw	255
  6831  018D42  6E09               	movwf	(btemp+8)^0,c
  6832  018D44  0EFF               	movlw	255
  6833  018D46  6E0A               	movwf	(btemp+9)^0,c
  6834  018D48  0EFF               	movlw	255
  6835  018D4A  6E0B               	movwf	(btemp+10)^0,c
  6836  018D4C  0E7F               	movlw	127
  6837  018D4E  6E0C               	movwf	(btemp+11)^0,c
  6838                           
  6839                           ;stkvar	_u @ sp[(-4)+0]
  6840  018D50  0EFC               	movlw	-4
  6841  018D52  0060  F027  FFE3   	movff	btemp+8,plusw1
  6842  018D58  0EFD               	movlw	-3
  6843  018D5A  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6844  018D60  0EFE               	movlw	-2
  6845  018D62  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6846  018D68  0EFF               	movlw	-1
  6847  018D6A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6848                           
  6849                           ;stkvar	_u @ sp[(-4)+0]
  6850  018D70  0EFC               	movlw	-4
  6851  018D72  006F FF8C  F001    	movff	plusw1,btemp
  6852  018D78  0EFD               	movlw	-3
  6853  018D7A  006F FF8C  F002    	movff	plusw1,btemp+1
  6854  018D80  0EFE               	movlw	-2
  6855  018D82  006F FF8C  F003    	movff	plusw1,btemp+2
  6856  018D88  0EFF               	movlw	-1
  6857  018D8A  006F FF8C  F004    	movff	plusw1,btemp+3
  6858                           
  6859                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  6860  018D90  0EFA               	movlw	250
  6861  018D92  26E1               	addwf	fsr1l,f,c
  6862  018D94  0EFF               	movlw	255
  6863  018D96  22E2               	addwfc	fsr1h,f,c
  6864  018D98  0012               	return		;funcret
  6865  018D9A                     __end_of_nanf:
  6866                           	opt callstack 0
  6867                           
  6868 ;; *************** function _get_raw_result *****************
  6869 ;; Defined at:
  6870 ;;		line 72 in file "daq.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  index           1  [STACK] const enum E16136
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2  [STACK] unsigned short 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/2
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6888 ;;Total ram usage:        0 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:   15
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_main
  6895 ;;		_conv_raw_result
  6896 ;; This function uses a reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text22
  6900  019B84                     __ptext22:
  6901                           	opt callstack 0
  6902  019B84                     _get_raw_result:
  6903                           	opt callstack 13
  6904                           
  6905                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  6906                           ;stkvar	_index @ sp[(0)+-1]
  6907                           
  6908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6909                           ;incstack = 0
  6910  019B84  0EFF               	movlw	-1
  6911  019B86  50E3               	movf	plusw1,w,c
  6912  019B88  0D02               	mullw	2
  6913  019B8A  50F3               	movf	243,w,c
  6914  019B8C  0FCB               	addlw	low _R
  6915  019B8E  6ED9               	movwf	fsr2l,c
  6916  019B90  6ADA               	clrf	fsr2h,c
  6917  019B92  006F FF78  F001    	movff	postinc2,btemp
  6918  019B98  006F FF74  F002    	movff	postdec2,btemp+1
  6919                           
  6920                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  6921  019B9E  52E5               	movf	postdec1,f,c
  6922  019BA0  0012               	return		;funcret
  6923  019BA2                     __end_of_get_raw_result:
  6924                           	opt callstack 0
  6925                           
  6926 ;; *************** function ___xxtofl *****************
  6927 ;; Defined at:
  6928 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  sign            1  [STACK] unsigned char 
  6931 ;;  val             4  [STACK] long 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  arg             4  [STACK] unsigned long 
  6934 ;;  exp             1  [STACK] unsigned char 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  4  [STACK] unsigned char 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/1
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:   15
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_conv_raw_result
  6955 ;;		_calc_bsoc
  6956 ;;		_init_bsoc
  6957 ;; This function uses a reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text23
  6961  0164E8                     __ptext23:
  6962                           	opt callstack 0
  6963  0164E8                     ___xxtofl:
  6964                           	opt callstack 0
  6965                           
  6966                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6967  0164E8  0E05               	movlw	5
  6968  0164EA  26E1               	addwf	fsr1l,f,c
  6969  0164EC  0E00               	movlw	0
  6970  0164EE  22E2               	addwfc	fsr1h,f,c
  6971                           
  6972                           ;stkvar	_sign @ sp[(-5)+-1]
  6973                           
  6974                           ;incstack = 0
  6975 ;; hardware stack exceeded
  6976  0164F0  0EFA               	movlw	-6
  6977  0164F2  50E3               	movf	plusw1,w,c
  6978  0164F4  B4D8               	btfsc	status,2,c
  6979  0164F6  D01D               	goto	l8870
  6980                           
  6981                           ;stkvar	_val @ sp[(-5)+-5]
  6982  0164F8  0EF9               	movlw	-7
  6983  0164FA  AEE3               	btfss	plusw1,7,c
  6984  0164FC  D01A               	goto	l8870
  6985                           
  6986                           ;stkvar	_val @ sp[(-5)+-5]
  6987  0164FE  0EF6               	movlw	-10
  6988  016500  006F FF8C  F009    	movff	plusw1,btemp+8
  6989  016506  0EF7               	movlw	-9
  6990  016508  006F FF8C  F00A    	movff	plusw1,btemp+9
  6991  01650E  0EF8               	movlw	-8
  6992  016510  006F FF8C  F00B    	movff	plusw1,btemp+10
  6993  016516  0EF9               	movlw	-7
  6994  016518  006F FF8C  F00C    	movff	plusw1,btemp+11
  6995  01651E  1E09               	comf	(btemp+8)^0,f,c
  6996  016520  1E0A               	comf	(btemp+9)^0,f,c
  6997  016522  1E0B               	comf	(btemp+10)^0,f,c
  6998  016524  1E0C               	comf	(btemp+11)^0,f,c
  6999  016526  2A09               	incf	(btemp+8)^0,f,c
  7000  016528  0E00               	movlw	0
  7001  01652A  220A               	addwfc	(btemp+9)^0,f,c
  7002  01652C  220B               	addwfc	(btemp+10)^0,f,c
  7003  01652E  220C               	addwfc	(btemp+11)^0,f,c
  7004  016530  D010               	goto	L5
  7005  016532                     l8870:
  7006                           
  7007                           ;stkvar	_val @ sp[(-5)+-5]
  7008  016532  0EF6               	movlw	-10
  7009  016534  006F FF8C  F009    	movff	plusw1,btemp+8
  7010  01653A  0EF7               	movlw	-9
  7011  01653C  006F FF8C  F00A    	movff	plusw1,btemp+9
  7012  016542  0EF8               	movlw	-8
  7013  016544  006F FF8C  F00B    	movff	plusw1,btemp+10
  7014  01654A  0EF9               	movlw	-7
  7015  01654C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7016  016552                     L5:
  7017                           
  7018                           ;stkvar	_arg @ sp[(-5)+0]
  7019  016552  0EFB               	movlw	-5
  7020  016554  0060  F027  FFE3   	movff	btemp+8,plusw1
  7021  01655A  0EFC               	movlw	-4
  7022  01655C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7023  016562  0EFD               	movlw	-3
  7024  016564  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7025  01656A  0EFE               	movlw	-2
  7026  01656C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7027                           
  7028                           ;stkvar	_val @ sp[(-5)+-5]
  7029  016572  0EF6               	movlw	-10
  7030  016574  50E3               	movf	plusw1,w,c
  7031  016576  E113               	bnz	l8878
  7032  016578  0EF7               	movlw	-9
  7033  01657A  50E3               	movf	plusw1,w,c
  7034  01657C  E110               	bnz	l8878
  7035  01657E  0EF8               	movlw	-8
  7036  016580  50E3               	movf	plusw1,w,c
  7037  016582  E10D               	bnz	l8878
  7038  016584  0EF9               	movlw	-7
  7039  016586  50E3               	movf	plusw1,w,c
  7040  016588  A4D8               	btfss	status,2,c
  7041  01658A  D009               	goto	l8878
  7042  01658C  0E00               	movlw	0
  7043  01658E  6E01               	movwf	btemp^0,c
  7044  016590  0E00               	movlw	0
  7045  016592  6E02               	movwf	(btemp+1)^0,c
  7046  016594  0E00               	movlw	0
  7047  016596  6E03               	movwf	(btemp+2)^0,c
  7048  016598  0E00               	movlw	0
  7049  01659A  6E04               	movwf	(btemp+3)^0,c
  7050  01659C  D0A2               	goto	l2891
  7051  01659E                     l8878:
  7052  01659E  0E96               	movlw	150
  7053  0165A0  6E0C               	movwf	(btemp+11)^0,c
  7054                           
  7055                           ;stkvar	_exp @ sp[(-5)+4]
  7056  0165A2  0EFF               	movlw	-1
  7057  0165A4  0060  F033  FFE3   	movff	btemp+11,plusw1
  7058  0165AA  D00B               	goto	l8882
  7059  0165AC                     l8880:
  7060                           
  7061                           ;stkvar	_exp @ sp[(-5)+4]
  7062  0165AC  0EFF               	movlw	-1
  7063  0165AE  2AE3               	incf	plusw1,f,c
  7064                           
  7065                           ;stkvar	_arg @ sp[(-5)+0]
  7066  0165B0  90D8               	bcf	status,0,c
  7067  0165B2  0EFE               	movlw	-2
  7068  0165B4  32E3               	rrcf	plusw1,f,c
  7069  0165B6  0EFD               	movlw	-3
  7070  0165B8  32E3               	rrcf	plusw1,f,c
  7071  0165BA  0EFC               	movlw	-4
  7072  0165BC  32E3               	rrcf	plusw1,f,c
  7073  0165BE  0EFB               	movlw	-5
  7074  0165C0  32E3               	rrcf	plusw1,f,c
  7075  0165C2                     l8882:
  7076                           
  7077                           ;stkvar	_arg @ sp[(-5)+0]
  7078  0165C2  50E1               	movf	fsr1l,w,c
  7079  0165C4  0FFB               	addlw	-5
  7080  0165C6  6ED9               	movwf	fsr2l,c
  7081  0165C8  50E2               	movf	fsr1h,w,c
  7082  0165CA  6EDA               	movwf	fsr2h,c
  7083  0165CC  0EFF               	movlw	255
  7084  0165CE  22DA               	addwfc	fsr2h,f,c
  7085  0165D0  52DE               	movf	postinc2,f,c
  7086  0165D2  52DE               	movf	postinc2,f,c
  7087  0165D4  52DE               	movf	postinc2,f,c
  7088  0165D6  0EFE               	movlw	254
  7089  0165D8  14DD               	andwf	postdec2,w,c
  7090  0165DA  B4D8               	btfsc	status,2,c
  7091  0165DC  D018               	goto	l8890
  7092  0165DE  D7E6               	goto	l8880
  7093  0165E0                     l8884:
  7094                           
  7095                           ;stkvar	_exp @ sp[(-5)+4]
  7096  0165E0  0EFF               	movlw	-1
  7097  0165E2  2AE3               	incf	plusw1,f,c
  7098                           
  7099                           ;stkvar	_arg @ sp[(-5)+0]
  7100  0165E4  50E1               	movf	fsr1l,w,c
  7101  0165E6  0FFB               	addlw	-5
  7102  0165E8  6ED9               	movwf	fsr2l,c
  7103  0165EA  50E2               	movf	fsr1h,w,c
  7104  0165EC  6EDA               	movwf	fsr2h,c
  7105  0165EE  0EFF               	movlw	255
  7106  0165F0  22DA               	addwfc	fsr2h,f,c
  7107  0165F2  2ADE               	incf	postinc2,f,c
  7108  0165F4  0E00               	movlw	0
  7109  0165F6  22DE               	addwfc	postinc2,f,c
  7110  0165F8  22DE               	addwfc	postinc2,f,c
  7111  0165FA  22DE               	addwfc	postinc2,f,c
  7112                           
  7113                           ;stkvar	_arg @ sp[(-5)+0]
  7114  0165FC  90D8               	bcf	status,0,c
  7115  0165FE  0EFE               	movlw	-2
  7116  016600  32E3               	rrcf	plusw1,f,c
  7117  016602  0EFD               	movlw	-3
  7118  016604  32E3               	rrcf	plusw1,f,c
  7119  016606  0EFC               	movlw	-4
  7120  016608  32E3               	rrcf	plusw1,f,c
  7121  01660A  0EFB               	movlw	-5
  7122  01660C  32E3               	rrcf	plusw1,f,c
  7123  01660E                     l8890:
  7124                           
  7125                           ;stkvar	_arg @ sp[(-5)+0]
  7126  01660E  50E1               	movf	fsr1l,w,c
  7127  016610  0FFB               	addlw	-5
  7128  016612  6ED9               	movwf	fsr2l,c
  7129  016614  50E2               	movf	fsr1h,w,c
  7130  016616  6EDA               	movwf	fsr2h,c
  7131  016618  0EFF               	movlw	255
  7132  01661A  22DA               	addwfc	fsr2h,f,c
  7133  01661C  52DE               	movf	postinc2,f,c
  7134  01661E  52DE               	movf	postinc2,f,c
  7135  016620  52DE               	movf	postinc2,f,c
  7136  016622  0EFF               	movlw	255
  7137  016624  14DD               	andwf	postdec2,w,c
  7138  016626  B4D8               	btfsc	status,2,c
  7139  016628  D00C               	goto	l8894
  7140  01662A  D7DA               	goto	l8884
  7141  01662C                     l8892:
  7142                           
  7143                           ;stkvar	_exp @ sp[(-5)+4]
  7144  01662C  0EFF               	movlw	-1
  7145  01662E  06E3               	decf	plusw1,f,c
  7146                           
  7147                           ;stkvar	_arg @ sp[(-5)+0]
  7148  016630  90D8               	bcf	status,0,c
  7149  016632  0EFB               	movlw	-5
  7150  016634  36E3               	rlcf	plusw1,f,c
  7151  016636  0EFC               	movlw	-4
  7152  016638  36E3               	rlcf	plusw1,f,c
  7153  01663A  0EFD               	movlw	-3
  7154  01663C  36E3               	rlcf	plusw1,f,c
  7155  01663E  0EFE               	movlw	-2
  7156  016640  36E3               	rlcf	plusw1,f,c
  7157  016642                     l8894:
  7158                           
  7159                           ;stkvar	_arg @ sp[(-5)+0]
  7160  016642  0EFD               	movlw	-3
  7161  016644  BEE3               	btfsc	plusw1,7,c
  7162  016646  D007               	goto	u8170
  7163                           
  7164                           ;stkvar	_exp @ sp[(-5)+4]
  7165  016648  0EFF               	movlw	-1
  7166  01664A  006F FF8C  F001    	movff	plusw1,btemp
  7167  016650  0E02               	movlw	2
  7168  016652  6001               	cpfslt	btemp^0,c
  7169  016654  D7EB               	goto	l8892
  7170  016656                     u8170:
  7171                           
  7172                           ;stkvar	_exp @ sp[(-5)+4]
  7173  016656  0EFF               	movlw	-1
  7174  016658  B0E3               	btfsc	plusw1,0,c
  7175  01665A  D002               	goto	l8902
  7176                           
  7177                           ;stkvar	_arg @ sp[(-5)+0]
  7178  01665C  0EFD               	movlw	-3
  7179  01665E  9EE3               	bcf	plusw1,7,c
  7180  016660                     l8902:
  7181                           
  7182                           ;stkvar	_exp @ sp[(-5)+4]
  7183  016660  50E1               	movf	fsr1l,w,c
  7184  016662  0FFF               	addlw	-1
  7185  016664  6ED9               	movwf	fsr2l,c
  7186  016666  50E2               	movf	fsr1h,w,c
  7187  016668  6EDA               	movwf	fsr2h,c
  7188  01666A  0EFF               	movlw	255
  7189  01666C  22DA               	addwfc	fsr2h,f,c
  7190  01666E  90D8               	bcf	status,0,c
  7191  016670  32DF               	rrcf	indf2,f,c
  7192                           
  7193                           ;stkvar	_exp @ sp[(-5)+4]
  7194  016672  0EFF               	movlw	-1
  7195  016674  006F FF8C  F00C    	movff	plusw1,btemp+11
  7196  01667A  0060  F030  F005   	movff	btemp+11,btemp+4
  7197  016680  6A06               	clrf	(btemp+5)^0,c
  7198  016682  6A07               	clrf	(btemp+6)^0,c
  7199  016684  6A08               	clrf	(btemp+7)^0,c
  7200  016686  0060  F014  F008   	movff	btemp+4,btemp+7
  7201  01668C  6A07               	clrf	(btemp+6)^0,c
  7202  01668E  6A06               	clrf	(btemp+5)^0,c
  7203  016690  6A05               	clrf	(btemp+4)^0,c
  7204                           
  7205                           ;stkvar	_arg @ sp[(-5)+0]
  7206  016692  50E1               	movf	fsr1l,w,c
  7207  016694  0FFB               	addlw	-5
  7208  016696  6ED9               	movwf	fsr2l,c
  7209  016698  50E2               	movf	fsr1h,w,c
  7210  01669A  6EDA               	movwf	fsr2h,c
  7211  01669C  0EFF               	movlw	255
  7212  01669E  22DA               	addwfc	fsr2h,f,c
  7213  0166A0  5005               	movf	(btemp+4)^0,w,c
  7214  0166A2  12DE               	iorwf	postinc2,f,c
  7215  0166A4  5006               	movf	(btemp+5)^0,w,c
  7216  0166A6  12DE               	iorwf	postinc2,f,c
  7217  0166A8  5007               	movf	(btemp+6)^0,w,c
  7218  0166AA  12DE               	iorwf	postinc2,f,c
  7219  0166AC  5008               	movf	(btemp+7)^0,w,c
  7220  0166AE  12DE               	iorwf	postinc2,f,c
  7221                           
  7222                           ;stkvar	_sign @ sp[(-5)+-1]
  7223  0166B0  0EFA               	movlw	-6
  7224  0166B2  50E3               	movf	plusw1,w,c
  7225  0166B4  B4D8               	btfsc	status,2,c
  7226  0166B6  D005               	goto	l8912
  7227                           
  7228                           ;stkvar	_val @ sp[(-5)+-5]
  7229  0166B8  0EF9               	movlw	-7
  7230  0166BA  AEE3               	btfss	plusw1,7,c
  7231  0166BC  D002               	goto	l8912
  7232                           
  7233                           ;stkvar	_arg @ sp[(-5)+0]
  7234  0166BE  0EFE               	movlw	-2
  7235  0166C0  8EE3               	bsf	plusw1,7,c
  7236  0166C2                     l8912:
  7237                           
  7238                           ;stkvar	_arg @ sp[(-5)+0]
  7239  0166C2  0EFB               	movlw	-5
  7240  0166C4  006F FF8C  F001    	movff	plusw1,btemp
  7241  0166CA  0EFC               	movlw	-4
  7242  0166CC  006F FF8C  F002    	movff	plusw1,btemp+1
  7243  0166D2  0EFD               	movlw	-3
  7244  0166D4  006F FF8C  F003    	movff	plusw1,btemp+2
  7245  0166DA  0EFE               	movlw	-2
  7246  0166DC  006F FF8C  F004    	movff	plusw1,btemp+3
  7247  0166E2                     l2891:
  7248                           
  7249                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  7250  0166E2  0EF6               	movlw	246
  7251  0166E4  26E1               	addwf	fsr1l,f,c
  7252  0166E6  0EFF               	movlw	255
  7253  0166E8  22E2               	addwfc	fsr1h,f,c
  7254  0166EA  0012               	return		;funcret
  7255  0166EC                     __end_of___xxtofl:
  7256                           	opt callstack 0
  7257                           
  7258 ;; *************** function _clear_hid_pflags *****************
  7259 ;; Defined at:
  7260 ;;		line 51 in file "hid.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  h               1  [STACK] PTR struct H_data
  7263 ;;		 -> H(7), 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;		None
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1  [STACK] void 
  7268 ;; Registers used:
  7269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7270 ;; Tracked objects:
  7271 ;;		On entry : 3F/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7279 ;;Total ram usage:        0 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:   15
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_main
  7286 ;; This function uses a reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text24
  7290  019A2C                     __ptext24:
  7291                           	opt callstack 0
  7292  019A2C                     _clear_hid_pflags:
  7293                           	opt callstack 15
  7294                           
  7295                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7296                           ;stkvar	_h @ sp[(0)+-1]
  7297                           
  7298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7299                           ;incstack = 0
  7300  019A2C  0EFF               	movlw	-1
  7301  019A2E  50E3               	movf	plusw1,w,c
  7302  019A30  6ED9               	movwf	fsr2l,c
  7303  019A32  6ADA               	clrf	fsr2h,c
  7304  019A34  0E03               	movlw	3
  7305  019A36  26D9               	addwf	fsr2l,f,c
  7306  019A38  0E00               	movlw	0
  7307  019A3A  6EDF               	movwf	indf2,c
  7308                           
  7309                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7310                           ;stkvar	_h @ sp[(0)+-1]
  7311  019A3C  0EFF               	movlw	-1
  7312  019A3E  50E3               	movf	plusw1,w,c
  7313  019A40  6ED9               	movwf	fsr2l,c
  7314  019A42  6ADA               	clrf	fsr2h,c
  7315  019A44  0E05               	movlw	5
  7316  019A46  26D9               	addwf	fsr2l,f,c
  7317  019A48  0E00               	movlw	0
  7318  019A4A  6EDF               	movwf	indf2,c
  7319                           
  7320                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7321  019A4C  52E5               	movf	postdec1,f,c
  7322  019A4E  0012               	return		;funcret
  7323  019A50                     __end_of_clear_hid_pflags:
  7324                           	opt callstack 0
  7325                           
  7326 ;; *************** function _clear_adc_scan *****************
  7327 ;; Defined at:
  7328 ;;		line 64 in file "daq.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1  [STACK] void 
  7335 ;; Registers used:
  7336 ;;		None
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/1
  7339 ;;		On exit  : 3F/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:   15
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_main
  7353 ;; This function uses a reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text25
  7357  019D92                     __ptext25:
  7358                           	opt callstack 0
  7359  019D92                     _clear_adc_scan:
  7360                           	opt callstack 15
  7361                           
  7362                           ;daq.c: 66:  R.done = 0;
  7363                           
  7364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7365                           ;incstack = 0
  7366  019D92  0100               	movlb	0	; () banked
  7367  019D94  6BF2               	clrf	(_R+39)& (0+255),b	;volatile
  7368                           
  7369                           ; BSR set to: 0
  7370                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7371  019D96  0012               	return		;funcret
  7372  019D98                     __end_of_clear_adc_scan:
  7373                           	opt callstack 0
  7374                           
  7375 ;; *************** function _check_help *****************
  7376 ;; Defined at:
  7377 ;;		line 40 in file "mconfig.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  flipper         1  [STACK] const _Bool 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  estatus         1    0        _Bool 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1  [STACK] _Bool 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7386 ;; Tracked objects:
  7387 ;;		On entry : 3F/2
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7395 ;;Total ram usage:        0 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:   27
  7398 ;; This function calls:
  7399 ;;		_StartTimer
  7400 ;;		_TimerDone
  7401 ;;		_display_help
  7402 ;;		_display_info
  7403 ;;		_get_vterm_ptr
  7404 ;;		_help_button
  7405 ;;		_mode_lamp_bright
  7406 ;;		_mode_lamp_dim
  7407 ;;		_set_display_info
  7408 ;;		_set_temp_display_help
  7409 ;;		_set_vterm
  7410 ;;		_sprintf
  7411 ;;		_update_lcd
  7412 ;;		_vterm_dump
  7413 ;; This function is called by:
  7414 ;;		_main
  7415 ;; This function uses a reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text26
  7419  0162D6                     __ptext26:
  7420                           	opt callstack 0
  7421  0162D6                     _check_help:
  7422                           	opt callstack 3
  7423                           
  7424                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7425                           
  7426                           ; BSR set to: 0
  7427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7428                           ;incstack = 0
  7429  0162D6  EC31  F0CA         	call	_help_button	;wreg free
  7430  0162DA  5001               	movf	btemp^0,w,c
  7431  0162DC  B4D8               	btfsc	status,2,c
  7432  0162DE  D0D0               	goto	l11664
  7433  0162E0  ECB9  F0CE         	call	_display_info	;wreg free
  7434  0162E4  0401               	decf	btemp^0,w,c
  7435  0162E6  B4D8               	btfsc	status,2,c
  7436  0162E8  D0CB               	goto	l11664
  7437                           
  7438                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7439  0162EA  0EDC               	movlw	220
  7440  0162EC  6EE6               	movwf	postinc1,c
  7441  0162EE  0E05               	movlw	5
  7442  0162F0  6EE6               	movwf	postinc1,c
  7443  0162F2  0E0B               	movlw	11
  7444  0162F4  6EE6               	movwf	postinc1,c
  7445  0162F6  EC92  F0C9         	call	_StartTimer	;wreg free
  7446                           
  7447                           ;mconfig.c: 48:   if (V.debug)
  7448  0162FA  0102               	movlb	2	; () banked
  7449  0162FC  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7450                           
  7451                           ; BSR set to: 2
  7452                           ;mconfig.c: 49:    vterm_dump();
  7453  0162FE  EC80  F0BA         	call	_vterm_dump	;wreg free
  7454                           
  7455                           ;mconfig.c: 51:   set_vterm(1);
  7456  016302  0E01               	movlw	1
  7457  016304  6EE6               	movwf	postinc1,c
  7458  016306  ECD1  F0CD         	call	_set_vterm	;wreg free
  7459                           
  7460                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7461  01630A  ECB9  F0CE         	call	_display_info	;wreg free
  7462  01630E  5001               	movf	btemp^0,w,c
  7463  016310  6EE6               	movwf	postinc1,c
  7464  016312  EC73  F0CE         	call	_set_temp_display_help	;wreg free
  7465                           
  7466                           ; BSR set to: 2
  7467                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7468  016316  0E01               	movlw	1
  7469  016318  6EE6               	movwf	postinc1,c
  7470  01631A  ECE0  F0CD         	call	_set_display_info	;wreg free
  7471                           
  7472                           ;mconfig.c: 54:   if (flipper) {
  7473                           ;stkvar	_flipper @ sp[(0)+-1]
  7474  01631E  0EFF               	movlw	-1
  7475  016320  50E3               	movf	plusw1,w,c
  7476  016322  B4D8               	btfsc	status,2,c
  7477  016324  D019               	goto	l11650
  7478                           
  7479                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7480  016326  0EC0               	movlw	low STR_27
  7481  016328  6EE6               	movwf	postinc1,c
  7482  01632A  0EFF               	movlw	high STR_27
  7483  01632C  6EE6               	movwf	postinc1,c
  7484  01632E  0E7F               	movlw	low STR_29
  7485  016330  6EE6               	movwf	postinc1,c
  7486  016332  0EFE               	movlw	high STR_29
  7487  016334  6EE6               	movwf	postinc1,c
  7488  016336  0E01               	movlw	1
  7489  016338  6EE6               	movwf	postinc1,c
  7490  01633A  0E00               	movlw	0
  7491  01633C  6EE6               	movwf	postinc1,c
  7492  01633E  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7493  016342  0060  F007  FFE6   	movff	btemp,postinc1
  7494  016348  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7495  01634E  0E06               	movlw	6
  7496  016350  6EE6               	movwf	postinc1,c
  7497  016352  EC62  F0BE         	call	_sprintf	;wreg free
  7498                           
  7499                           ;mconfig.c: 56:   } else {
  7500  016356  D018               	goto	l1641
  7501  016358                     l11650:
  7502                           
  7503                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7504  016358  0ED6               	movlw	low STR_28
  7505  01635A  6EE6               	movwf	postinc1,c
  7506  01635C  0EFF               	movlw	high STR_28
  7507  01635E  6EE6               	movwf	postinc1,c
  7508  016360  0E7F               	movlw	low STR_29
  7509  016362  6EE6               	movwf	postinc1,c
  7510  016364  0EFE               	movlw	high STR_29
  7511  016366  6EE6               	movwf	postinc1,c
  7512  016368  0E01               	movlw	1
  7513  01636A  6EE6               	movwf	postinc1,c
  7514  01636C  0E00               	movlw	0
  7515  01636E  6EE6               	movwf	postinc1,c
  7516  016370  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7517  016374  0060  F007  FFE6   	movff	btemp,postinc1
  7518  01637A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7519  016380  0E06               	movlw	6
  7520  016382  6EE6               	movwf	postinc1,c
  7521  016384  EC62  F0BE         	call	_sprintf	;wreg free
  7522  016388                     l1641:
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7526  016388  0102               	movlb	2	; () banked
  7527  01638A  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7528  01638C  32E8               	rrcf	wreg,f,c
  7529  01638E  32E8               	rrcf	wreg,f,c
  7530  016390  0B03               	andlw	3
  7531  016392  0D24               	mullw	36
  7532  016394  0E12               	movlw	18
  7533  016396  26F3               	addwf	243,f,c
  7534  016398  0E00               	movlw	0
  7535  01639A  22F4               	addwfc	244,f,c
  7536  01639C  0E51               	movlw	low _T
  7537  01639E  6E0B               	movwf	(btemp+10)^0,c
  7538  0163A0  0EFD               	movlw	high _T
  7539  0163A2  6E0C               	movwf	(btemp+11)^0,c
  7540  0163A4  50F3               	movf	243,w,c
  7541  0163A6  260B               	addwf	(btemp+10)^0,f,c
  7542  0163A8  50F4               	movf	244,w,c
  7543  0163AA  220C               	addwfc	(btemp+11)^0,f,c
  7544  0163AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7545  0163B2  0060  F033  FFE6   	movff	btemp+11,postinc1
  7546  0163B8  0ECC               	movlw	low STR_31
  7547  0163BA  6EE6               	movwf	postinc1,c
  7548  0163BC  0EFF               	movlw	high STR_31
  7549  0163BE  6EE6               	movwf	postinc1,c
  7550  0163C0  0E01               	movlw	1
  7551  0163C2  6EE6               	movwf	postinc1,c
  7552  0163C4  0E01               	movlw	1
  7553  0163C6  6EE6               	movwf	postinc1,c
  7554  0163C8  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7555  0163CC  0060  F007  FFE6   	movff	btemp,postinc1
  7556  0163D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7557  0163D8  0E06               	movlw	6
  7558  0163DA  6EE6               	movwf	postinc1,c
  7559  0163DC  EC62  F0BE         	call	_sprintf	;wreg free
  7560                           
  7561                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7562  0163E0  0102               	movlb	2	; () banked
  7563  0163E2  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7564  0163E4  32E8               	rrcf	wreg,f,c
  7565  0163E6  32E8               	rrcf	wreg,f,c
  7566  0163E8  0B03               	andlw	3
  7567  0163EA  0D24               	mullw	36
  7568  0163EC  0E51               	movlw	low _T
  7569  0163EE  6E0B               	movwf	(btemp+10)^0,c
  7570  0163F0  0EFD               	movlw	high _T
  7571  0163F2  6E0C               	movwf	(btemp+11)^0,c
  7572  0163F4  50F3               	movf	243,w,c
  7573  0163F6  260B               	addwf	(btemp+10)^0,f,c
  7574  0163F8  50F4               	movf	244,w,c
  7575  0163FA  220C               	addwfc	(btemp+11)^0,f,c
  7576  0163FC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7577  016402  0060  F033  FFE6   	movff	btemp+11,postinc1
  7578  016408  0ECC               	movlw	low STR_31
  7579  01640A  6EE6               	movwf	postinc1,c
  7580  01640C  0EFF               	movlw	high STR_31
  7581  01640E  6EE6               	movwf	postinc1,c
  7582  016410  0E01               	movlw	1
  7583  016412  6EE6               	movwf	postinc1,c
  7584  016414  0E02               	movlw	2
  7585  016416  6EE6               	movwf	postinc1,c
  7586  016418  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7587  01641C  0060  F007  FFE6   	movff	btemp,postinc1
  7588  016422  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7589  016428  0E06               	movlw	6
  7590  01642A  6EE6               	movwf	postinc1,c
  7591  01642C  EC62  F0BE         	call	_sprintf	;wreg free
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;mconfig.c: 61:   V.help_id++;
  7595  016430  EE20  F29B         	lfsr	2,_V+155	;volatile
  7596  016434  38DF               	swapf	223,w,c
  7597  016436  6E0C               	movwf	(btemp+11)^0,c
  7598  016438  320C               	rrcf	(btemp+11)^0,f,c
  7599  01643A  300C               	rrcf	(btemp+11)^0,w,c
  7600  01643C  0B03               	andlw	3
  7601  01643E  6E0C               	movwf	(btemp+11)^0,c
  7602  016440  2A0C               	incf	(btemp+11)^0,f,c
  7603  016442  3A0C               	swapf	(btemp+11)^0,f,c
  7604  016444  360C               	rlcf	(btemp+11)^0,f,c
  7605  016446  360C               	rlcf	(btemp+11)^0,f,c
  7606  016448  50DF               	movf	223,w,c
  7607  01644A  180C               	xorwf	(btemp+11)^0,w,c
  7608  01644C  0B3F               	andlw	-193
  7609  01644E  180C               	xorwf	(btemp+11)^0,w,c
  7610  016450  6EDF               	movwf	223,c
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7614  016452  0EB8               	movlw	184
  7615  016454  6EE6               	movwf	postinc1,c
  7616  016456  0E0B               	movlw	11
  7617  016458  6EE6               	movwf	postinc1,c
  7618  01645A  0E09               	movlw	9
  7619  01645C  6EE6               	movwf	postinc1,c
  7620  01645E  EC92  F0C9         	call	_StartTimer	;wreg free
  7621                           
  7622                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7623  016462  0EB8               	movlw	184
  7624  016464  6EE6               	movwf	postinc1,c
  7625  016466  0E0B               	movlw	11
  7626  016468  6EE6               	movwf	postinc1,c
  7627  01646A  0E07               	movlw	7
  7628  01646C  6EE6               	movwf	postinc1,c
  7629  01646E  EC92  F0C9         	call	_StartTimer	;wreg free
  7630                           
  7631                           ;mconfig.c: 64:   mode_lamp_bright();
  7632  016472  EC82  F0CE         	call	_mode_lamp_bright	;wreg free
  7633                           
  7634                           ;mconfig.c: 65:   update_lcd(1);
  7635  016476  0E01               	movlw	1
  7636  016478  6EE6               	movwf	postinc1,c
  7637  01647A  EC53  F0BD         	call	_update_lcd	;wreg free
  7638                           
  7639                           ;mconfig.c: 67:  } else {
  7640  01647E  D032               	goto	l1642
  7641  016480                     l11664:
  7642                           
  7643                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7644  016480  0E09               	movlw	9
  7645  016482  6EE6               	movwf	postinc1,c
  7646  016484  ECD7  F0CB         	call	_TimerDone	;wreg free
  7647  016488  5001               	movf	btemp^0,w,c
  7648  01648A  B4D8               	btfsc	status,2,c
  7649  01648C  D02B               	goto	l1642
  7650                           
  7651                           ;mconfig.c: 69:    set_vterm(0);
  7652  01648E  0E00               	movlw	0
  7653  016490  6EE6               	movwf	postinc1,c
  7654  016492  ECD1  F0CD         	call	_set_vterm	;wreg free
  7655                           
  7656                           ;mconfig.c: 70:    V.help = 0;
  7657  016496  0102               	movlb	2	; () banked
  7658  016498  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7659                           
  7660                           ; BSR set to: 2
  7661                           ;mconfig.c: 71:    set_display_info(display_help());
  7662  01649A  ECBD  F0CE         	call	_display_help	;wreg free
  7663  01649E  5001               	movf	btemp^0,w,c
  7664  0164A0  6EE6               	movwf	postinc1,c
  7665  0164A2  ECE0  F0CD         	call	_set_display_info	;wreg free
  7666                           
  7667                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7668  0164A6  0060  FA57  FFE6   	movff	_V+149,postinc1
  7669  0164AC  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7670  0164B2  EC27  F0CE         	call	_mode_lamp_dim	;wreg free
  7671                           
  7672                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  7673  0164B6  0E0B               	movlw	11
  7674  0164B8  6EE6               	movwf	postinc1,c
  7675  0164BA  ECD7  F0CB         	call	_TimerDone	;wreg free
  7676  0164BE  5001               	movf	btemp^0,w,c
  7677  0164C0  B4D8               	btfsc	status,2,c
  7678  0164C2  D010               	goto	l1642
  7679                           
  7680                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  7681  0164C4  0102               	movlb	2	; () banked
  7682  0164C6  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  7683  0164C8  A4D8               	btfss	status,2,c
  7684  0164CA  D002               	goto	u10970
  7685  0164CC  0E01               	movlw	1
  7686  0164CE  D001               	goto	u10980
  7687  0164D0                     u10970:
  7688  0164D0  0E00               	movlw	0
  7689  0164D2                     u10980:
  7690  0164D2  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  7691                           
  7692                           ; BSR set to: 2
  7693                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  7694  0164D4  0EDC               	movlw	220
  7695  0164D6  6EE6               	movwf	postinc1,c
  7696  0164D8  0E05               	movlw	5
  7697  0164DA  6EE6               	movwf	postinc1,c
  7698  0164DC  0E0B               	movlw	11
  7699  0164DE  6EE6               	movwf	postinc1,c
  7700  0164E0  EC92  F0C9         	call	_StartTimer	;wreg free
  7701  0164E4                     l1642:
  7702                           
  7703                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7704  0164E4  52E5               	movf	postdec1,f,c
  7705  0164E6  0012               	return		;funcret
  7706  0164E8                     __end_of_check_help:
  7707                           	opt callstack 0
  7708                           
  7709 ;; *************** function _vterm_dump *****************
  7710 ;; Defined at:
  7711 ;;		line 121 in file "mconfig.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  1  [STACK] void 
  7718 ;; Registers used:
  7719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7720 ;; Tracked objects:
  7721 ;;		On entry : 3F/2
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7729 ;;Total ram usage:        0 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:   26
  7732 ;; This function calls:
  7733 ;;		_WaitMs
  7734 ;;		_eaDogM_WriteStringAtPos
  7735 ;;		_get_vterm_ptr
  7736 ;;		_sprintf
  7737 ;;		_wait_lcd_done
  7738 ;; This function is called by:
  7739 ;;		_check_help
  7740 ;; This function uses a reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text27
  7744  017500                     __ptext27:
  7745                           	opt callstack 0
  7746  017500                     _vterm_dump:
  7747                           	opt callstack 3
  7748                           
  7749                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  7750                           
  7751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7752                           ;incstack = 0
  7753  017500  0E01               	movlw	1
  7754  017502  6EE6               	movwf	postinc1,c
  7755  017504  0E00               	movlw	0
  7756  017506  6EE6               	movwf	postinc1,c
  7757  017508  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7758  01750C  0060  F007  FFE6   	movff	btemp,postinc1
  7759  017512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7760  017518  0E00               	movlw	0
  7761  01751A  6EE6               	movwf	postinc1,c
  7762  01751C  0E00               	movlw	0
  7763  01751E  6EE6               	movwf	postinc1,c
  7764  017520  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7765  017524  0060  F007  FFE6   	movff	btemp,postinc1
  7766  01752A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7767  017530  0EA2               	movlw	low STR_33
  7768  017532  6EE6               	movwf	postinc1,c
  7769  017534  0EFF               	movlw	high STR_33
  7770  017536  6EE6               	movwf	postinc1,c
  7771  017538  0E01               	movlw	low (_V+1)
  7772  01753A  6EE6               	movwf	postinc1,c
  7773  01753C  0E02               	movlw	high (_V+1)
  7774  01753E  6EE6               	movwf	postinc1,c
  7775  017540  0E08               	movlw	8
  7776  017542  6EE6               	movwf	postinc1,c
  7777  017544  EC62  F0BE         	call	_sprintf	;wreg free
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;mconfig.c: 124:  wait_lcd_done();
  7781  017548  ECFE  F0CD         	call	_wait_lcd_done	;wreg free
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  7785  01754C  0E01               	movlw	low (_V+1)
  7786  01754E  6EE6               	movwf	postinc1,c
  7787  017550  0E02               	movlw	high (_V+1)
  7788  017552  6EE6               	movwf	postinc1,c
  7789  017554  0E00               	movlw	0
  7790  017556  6EE6               	movwf	postinc1,c
  7791  017558  0E00               	movlw	0
  7792  01755A  6EE6               	movwf	postinc1,c
  7793  01755C  EC68  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7794                           
  7795                           ; BSR set to: 59
  7796                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  7797  017560  0E01               	movlw	1
  7798  017562  6EE6               	movwf	postinc1,c
  7799  017564  0E01               	movlw	1
  7800  017566  6EE6               	movwf	postinc1,c
  7801  017568  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7802  01756C  0060  F007  FFE6   	movff	btemp,postinc1
  7803  017572  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7804  017578  0E00               	movlw	0
  7805  01757A  6EE6               	movwf	postinc1,c
  7806  01757C  0E01               	movlw	1
  7807  01757E  6EE6               	movwf	postinc1,c
  7808  017580  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7809  017584  0060  F007  FFE6   	movff	btemp,postinc1
  7810  01758A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7811  017590  0EA2               	movlw	low STR_33
  7812  017592  6EE6               	movwf	postinc1,c
  7813  017594  0EFF               	movlw	high STR_33
  7814  017596  6EE6               	movwf	postinc1,c
  7815  017598  0E01               	movlw	low (_V+1)
  7816  01759A  6EE6               	movwf	postinc1,c
  7817  01759C  0E02               	movlw	high (_V+1)
  7818  01759E  6EE6               	movwf	postinc1,c
  7819  0175A0  0E08               	movlw	8
  7820  0175A2  6EE6               	movwf	postinc1,c
  7821  0175A4  EC62  F0BE         	call	_sprintf	;wreg free
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;mconfig.c: 127:  wait_lcd_done();
  7825  0175A8  ECFE  F0CD         	call	_wait_lcd_done	;wreg free
  7826                           
  7827                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  7828  0175AC  0E01               	movlw	low (_V+1)
  7829  0175AE  6EE6               	movwf	postinc1,c
  7830  0175B0  0E02               	movlw	high (_V+1)
  7831  0175B2  6EE6               	movwf	postinc1,c
  7832  0175B4  0E00               	movlw	0
  7833  0175B6  6EE6               	movwf	postinc1,c
  7834  0175B8  0E01               	movlw	1
  7835  0175BA  6EE6               	movwf	postinc1,c
  7836  0175BC  EC68  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7837                           
  7838                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  7839  0175C0  0E01               	movlw	1
  7840  0175C2  6EE6               	movwf	postinc1,c
  7841  0175C4  0E02               	movlw	2
  7842  0175C6  6EE6               	movwf	postinc1,c
  7843  0175C8  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7844  0175CC  0060  F007  FFE6   	movff	btemp,postinc1
  7845  0175D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7846  0175D8  0E00               	movlw	0
  7847  0175DA  6EE6               	movwf	postinc1,c
  7848  0175DC  0E02               	movlw	2
  7849  0175DE  6EE6               	movwf	postinc1,c
  7850  0175E0  EC2F  F0CB         	call	_get_vterm_ptr	;wreg free
  7851  0175E4  0060  F007  FFE6   	movff	btemp,postinc1
  7852  0175EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7853  0175F0  0EA2               	movlw	low STR_33
  7854  0175F2  6EE6               	movwf	postinc1,c
  7855  0175F4  0EFF               	movlw	high STR_33
  7856  0175F6  6EE6               	movwf	postinc1,c
  7857  0175F8  0E01               	movlw	low (_V+1)
  7858  0175FA  6EE6               	movwf	postinc1,c
  7859  0175FC  0E02               	movlw	high (_V+1)
  7860  0175FE  6EE6               	movwf	postinc1,c
  7861  017600  0E08               	movlw	8
  7862  017602  6EE6               	movwf	postinc1,c
  7863  017604  EC62  F0BE         	call	_sprintf	;wreg free
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;mconfig.c: 130:  wait_lcd_done();
  7867  017608  ECFE  F0CD         	call	_wait_lcd_done	;wreg free
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  7871  01760C  0E01               	movlw	low (_V+1)
  7872  01760E  6EE6               	movwf	postinc1,c
  7873  017610  0E02               	movlw	high (_V+1)
  7874  017612  6EE6               	movwf	postinc1,c
  7875  017614  0E00               	movlw	0
  7876  017616  6EE6               	movwf	postinc1,c
  7877  017618  0E02               	movlw	2
  7878  01761A  6EE6               	movwf	postinc1,c
  7879  01761C  EC68  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  7880                           
  7881                           ; BSR set to: 59
  7882                           ;mconfig.c: 132:  WaitMs(3000);
  7883  017620  0EB8               	movlw	184
  7884  017622  6EE6               	movwf	postinc1,c
  7885  017624  0E0B               	movlw	11
  7886  017626  6EE6               	movwf	postinc1,c
  7887  017628  EC4D  F0CA         	call	_WaitMs	;wreg free
  7888                           
  7889                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7890  01762C  0012               	return		;funcret
  7891  01762E                     __end_of_vterm_dump:
  7892                           	opt callstack 0
  7893                           
  7894 ;; *************** function _sprintf *****************
  7895 ;; Defined at:
  7896 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  s               2  [STACK] PTR unsigned char 
  7899 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  7900 ;;  fmt             2  [STACK] PTR const unsigned char 
  7901 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
  7902 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  7903 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  7904 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  7905 ;;		 -> STR_29(19), STR_23(17), STR_22(16), STR_21(16), 
  7906 ;;		 -> STR_20(19), STR_19(20), STR_18(19), STR_17(19), 
  7907 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  7908 ;;		 -> STR_12(19), STR_11(17), STR_10(16), STR_9(16), 
  7909 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  7910 ;;		 -> STR_2(15), STR_1(17), 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  f               6  [STACK] struct _IO_FILE
  7913 ;;  ap              2  [STACK] PTR void [1]
  7914 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7915 ;;  ret             2    0        int 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  2  [STACK] int 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/2
  7922 ;;		On exit  : 3F/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7929 ;;Total ram usage:        0 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:   23
  7932 ;; This function calls:
  7933 ;;		_vfprintf
  7934 ;; This function is called by:
  7935 ;;		_main
  7936 ;;		_check_help
  7937 ;;		_vterm_dump
  7938 ;;		_calc_bsoc
  7939 ;; This function uses a reentrant model
  7940 ;;
  7941                           
  7942                           	psect	text28
  7943  017CC4                     __ptext28:
  7944                           	opt callstack 0
  7945  017CC4                     _sprintf:
  7946                           	opt callstack 0
  7947                           
  7948                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 48, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7949  017CC4  0E08               	movlw	8
  7950  017CC6  26E1               	addwf	fsr1l,f,c
  7951  017CC8  0E00               	movlw	0
  7952  017CCA  22E2               	addwfc	fsr1h,f,c
  7953                           
  7954                           ;incstack = 0
  7955 ;; hardware stack exceeded
  7956  017CCC  0EFE               	movlw	254
  7957  017CCE  6E0B               	movwf	(btemp+10)^0,c
  7958  017CD0  0EFF               	movlw	255
  7959  017CD2  6E0C               	movwf	(btemp+11)^0,c
  7960                           
  7961                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  7962  017CD4  0EF5               	movlw	245
  7963  017CD6  24E1               	addwf	fsr1l,w,c
  7964  017CD8  6E09               	movwf	(btemp+8)^0,c
  7965  017CDA  0EFF               	movlw	255
  7966  017CDC  20E2               	addwfc	fsr1h,w,c
  7967  017CDE  6E0A               	movwf	(btemp+9)^0,c
  7968  017CE0  500B               	movf	(btemp+10)^0,w,c
  7969  017CE2  2609               	addwf	(btemp+8)^0,f,c
  7970  017CE4  500C               	movf	(btemp+11)^0,w,c
  7971  017CE6  220A               	addwfc	(btemp+9)^0,f,c
  7972                           
  7973                           ;stkvar	_ap @ sp[(-8)+6]
  7974  017CE8  0EFF               	movlw	-1
  7975  017CEA  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7976  017CF0  0EFE               	movlw	-2
  7977  017CF2  0060  F027  FFE3   	movff	btemp+8,plusw1
  7978                           
  7979                           ;stkvar	_s @ sp[(-8)+-3]
  7980  017CF8  0EF5               	movlw	-11
  7981  017CFA  006F FF8C  F00B    	movff	plusw1,btemp+10
  7982  017D00  0EF6               	movlw	-10
  7983  017D02  006F FF8C  F00C    	movff	plusw1,btemp+11
  7984                           
  7985                           ;stkvar	_f @ sp[(-8)+0]
  7986  017D08  0EF9               	movlw	-7
  7987  017D0A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7988  017D10  0EF8               	movlw	-8
  7989  017D12  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7990                           
  7991                           ;stkvar	_f @ sp[(-8)+0]
  7992  017D18  0EFA               	movlw	250
  7993  017D1A  24E1               	addwf	fsr1l,w,c
  7994  017D1C  6ED9               	movwf	fsr2l,c
  7995  017D1E  0EFF               	movlw	255
  7996  017D20  20E2               	addwfc	fsr1h,w,c
  7997  017D22  6EDA               	movwf	fsr2h,c
  7998  017D24  0E00               	movlw	0
  7999  017D26  6EDE               	movwf	postinc2,c
  8000  017D28  0E00               	movlw	0
  8001  017D2A  6EDD               	movwf	postdec2,c
  8002                           
  8003                           ;stkvar	_f @ sp[(-8)+0]
  8004  017D2C  0EFC               	movlw	252
  8005  017D2E  24E1               	addwf	fsr1l,w,c
  8006  017D30  6ED9               	movwf	fsr2l,c
  8007  017D32  0EFF               	movlw	255
  8008  017D34  20E2               	addwfc	fsr1h,w,c
  8009  017D36  6EDA               	movwf	fsr2h,c
  8010  017D38  0E00               	movlw	0
  8011  017D3A  6EDE               	movwf	postinc2,c
  8012  017D3C  0E00               	movlw	0
  8013  017D3E  6EDD               	movwf	postdec2,c
  8014                           
  8015                           ;stkvar	_ap @ sp[(-8)+6]
  8016  017D40  0EFE               	movlw	254
  8017  017D42  24E1               	addwf	fsr1l,w,c
  8018  017D44  6E01               	movwf	btemp^0,c
  8019  017D46  0EFF               	movlw	255
  8020  017D48  20E2               	addwfc	fsr1h,w,c
  8021  017D4A  6E02               	movwf	(btemp+1)^0,c
  8022  017D4C  0060  F007  FFE6   	movff	btemp,postinc1
  8023  017D52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8024                           
  8025                           ;stkvar	_fmt @ sp[(-10)+-5]
  8026  017D58  0EF1               	movlw	-15
  8027  017D5A  006F FF8F FFE6     	movff	plusw1,postinc1
  8028  017D60  006F FF8F FFE6     	movff	plusw1,postinc1
  8029                           
  8030                           ;stkvar	_f @ sp[(-12)+0]
  8031  017D66  0EF4               	movlw	244
  8032  017D68  24E1               	addwf	fsr1l,w,c
  8033  017D6A  6E01               	movwf	btemp^0,c
  8034  017D6C  0EFF               	movlw	255
  8035  017D6E  20E2               	addwfc	fsr1h,w,c
  8036  017D70  6E02               	movwf	(btemp+1)^0,c
  8037  017D72  0060  F007  FFE6   	movff	btemp,postinc1
  8038  017D78  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8039  017D7E  ECD0  F0C1         	call	_vfprintf	;wreg free
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;stkvar	_f @ sp[(-8)+0]
  8043  017D82  0EFA               	movlw	250
  8044  017D84  24E1               	addwf	fsr1l,w,c
  8045  017D86  6ED9               	movwf	fsr2l,c
  8046  017D88  0EFF               	movlw	255
  8047  017D8A  20E2               	addwfc	fsr1h,w,c
  8048  017D8C  6EDA               	movwf	fsr2h,c
  8049  017D8E  006F FF78  F00B    	movff	postinc2,btemp+10
  8050  017D94  006F FF74  F00C    	movff	postdec2,btemp+11
  8051                           
  8052                           ;stkvar	_s @ sp[(-8)+-3]
  8053  017D9A  0EF5               	movlw	-11
  8054  017D9C  006F FF8C  F009    	movff	plusw1,btemp+8
  8055  017DA2  0EF6               	movlw	-10
  8056  017DA4  006F FF8C  F00A    	movff	plusw1,btemp+9
  8057  017DAA  500B               	movf	(btemp+10)^0,w,c
  8058  017DAC  2409               	addwf	(btemp+8)^0,w,c
  8059  017DAE  6ED9               	movwf	fsr2l,c
  8060  017DB0  500C               	movf	(btemp+11)^0,w,c
  8061  017DB2  200A               	addwfc	(btemp+9)^0,w,c
  8062  017DB4  6EDA               	movwf	fsr2h,c
  8063  017DB6  0E00               	movlw	0
  8064  017DB8  6EDF               	movwf	indf2,c
  8065                           
  8066                           ; BSR set to: 0
  8067                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 48, args
      +                          ize = 4, vargsize = 0
  8068  017DBA  0EF8               	movlw	248
  8069  017DBC  26E1               	addwf	fsr1l,f,c
  8070  017DBE  0EFF               	movlw	255
  8071  017DC0  22E2               	addwfc	fsr1h,f,c
  8072  017DC2  52E5               	movf	postdec1,f,c
  8073  017DC4  50E7               	movf	indf1,w,c
  8074  017DC6  5EE1               	subwf	fsr1l,f,c
  8075  017DC8  0E00               	movlw	0
  8076  017DCA  5AE2               	subwfb	fsr1h,f,c
  8077  017DCC  0012               	return		;funcret
  8078  017DCE                     __end_of_sprintf:
  8079                           	opt callstack 0
  8080                           
  8081 ;; *************** function _get_vterm_ptr *****************
  8082 ;; Defined at:
  8083 ;;		line 116 in file "mconfig.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  line            1  [STACK] const unsigned char 
  8086 ;;  vterm           1  [STACK] const unsigned char 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  2  [STACK] PTR unsigned char 
  8091 ;; Registers used:
  8092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/2
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8102 ;;Total ram usage:        0 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:   15
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_main
  8109 ;;		_check_help
  8110 ;;		_vterm_dump
  8111 ;; This function uses a reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text29
  8115  01965E                     __ptext29:
  8116                           	opt callstack 0
  8117  01965E                     _get_vterm_ptr:
  8118                           	opt callstack 15
  8119                           
  8120                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8121                           ;stkvar	_vterm @ sp[(0)+-2]
  8122                           
  8123                           ; BSR set to: 0
  8124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8125                           ;incstack = 0
  8126  01965E  0EFE               	movlw	-2
  8127  019660  50E3               	movf	plusw1,w,c
  8128  019662  0B03               	andlw	3
  8129  019664  0D48               	mullw	72
  8130  019666  0EFF               	movlw	low _D
  8131  019668  6E01               	movwf	btemp^0,c
  8132  01966A  0E07               	movlw	high _D
  8133  01966C  6E02               	movwf	(btemp+1)^0,c
  8134  01966E  50F3               	movf	243,w,c
  8135  019670  2601               	addwf	btemp^0,f,c
  8136  019672  50F4               	movf	244,w,c
  8137  019674  2202               	addwfc	(btemp+1)^0,f,c
  8138                           
  8139                           ;stkvar	_line @ sp[(0)+-1]
  8140  019676  0EFF               	movlw	-1
  8141  019678  50E3               	movf	plusw1,w,c
  8142  01967A  0B03               	andlw	3
  8143  01967C  0D18               	mullw	24
  8144  01967E  50F3               	movf	243,w,c
  8145  019680  2601               	addwf	btemp^0,f,c
  8146  019682  50F4               	movf	244,w,c
  8147  019684  2202               	addwfc	(btemp+1)^0,f,c
  8148                           
  8149                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8150  019686  52E5               	movf	postdec1,f,c
  8151  019688  52E5               	movf	postdec1,f,c
  8152  01968A  0012               	return		;funcret
  8153  01968C                     __end_of_get_vterm_ptr:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function _WaitMs *****************
  8157 ;; Defined at:
  8158 ;;		line 32 in file "timers.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  numMilliseco    2  [STACK] const unsigned short 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1  [STACK] void 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/2
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:   16
  8179 ;; This function calls:
  8180 ;;		_StartTimer
  8181 ;;		_TimerDone
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;;		_vterm_dump
  8185 ;; This function uses a reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text30
  8189  01949A                     __ptext30:
  8190                           	opt callstack 0
  8191  01949A                     _WaitMs:
  8192                           	opt callstack 12
  8193                           
  8194                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8195                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8196                           
  8197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8198                           ;incstack = 0
  8199  01949A  0EFE               	movlw	-2
  8200  01949C  006F FF8F FFE6     	movff	plusw1,postinc1
  8201  0194A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8202  0194A8  0E00               	movlw	0
  8203  0194AA  6EE6               	movwf	postinc1,c
  8204  0194AC  EC92  F0C9         	call	_StartTimer	;wreg free
  8205                           
  8206                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8207  0194B0  D005               	goto	l8786
  8208  0194B2                     l1573:
  8209                           
  8210                           ;timers.c: 36:   __nop();
  8211  0194B2  F000               	nop	
  8212                           
  8213                           ;timers.c: 37:   __nop();
  8214  0194B4  F000               	nop	
  8215                           
  8216                           ;timers.c: 38:   __nop();
  8217  0194B6  F000               	nop	
  8218                           
  8219                           ;timers.c: 39:   __nop();
  8220  0194B8  F000               	nop	
  8221  0194BA  0004               	clrwdt		;# 
  8222  0194BC                     l8786:
  8223                           
  8224                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8225  0194BC  0E00               	movlw	0
  8226  0194BE  6EE6               	movwf	postinc1,c
  8227  0194C0  ECD7  F0CB         	call	_TimerDone	;wreg free
  8228  0194C4  5001               	movf	btemp^0,w,c
  8229  0194C6  B4D8               	btfsc	status,2,c
  8230  0194C8  D7F4               	goto	l1573
  8231                           
  8232                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8233  0194CA  52E5               	movf	postdec1,f,c
  8234  0194CC  52E5               	movf	postdec1,f,c
  8235  0194CE  0012               	return		;funcret
  8236  0194D0                     __end_of_WaitMs:
  8237                           	opt callstack 0
  8238                           
  8239 ;; *************** function _update_lcd *****************
  8240 ;; Defined at:
  8241 ;;		line 85 in file "mconfig.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  vterm           1  [STACK] unsigned char 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1  [STACK] unsigned char 
  8248 ;; Registers used:
  8249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:   26
  8262 ;; This function calls:
  8263 ;;		_eaDogM_WriteStringAtPos
  8264 ;;		_wait_lcd_done
  8265 ;; This function is called by:
  8266 ;;		_main
  8267 ;;		_check_help
  8268 ;; This function uses a reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text31
  8272  017AA6                     __ptext31:
  8273                           	opt callstack 0
  8274  017AA6                     _update_lcd:
  8275                           	opt callstack 4
  8276                           
  8277                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8278                           ;stkvar	_vterm @ sp[(0)+-1]
  8279                           
  8280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8281                           ;incstack = 0
  8282  017AA6  0EFF               	movlw	-1
  8283  017AA8  006F FF8C  F001    	movff	plusw1,btemp
  8284  017AAE  0E03               	movlw	3
  8285  017AB0  1601               	andwf	btemp^0,f,c
  8286  017AB2  0EFF               	movlw	-1
  8287  017AB4  0060  F007  FFE3   	movff	btemp,plusw1
  8288                           
  8289                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8290  017ABA  EE22  F11F         	lfsr	2,_D+288
  8291  017ABE  A0DF               	btfss	indf2,0,c
  8292  017AC0  D004               	goto	l11396
  8293                           
  8294                           ;stkvar	_vterm @ sp[(0)+-1]
  8295  017AC2  0EFF               	movlw	-1
  8296  017AC4  50E3               	movf	plusw1,w,c
  8297  017AC6  B4D8               	btfsc	status,2,c
  8298  017AC8  D074               	goto	l1649
  8299  017ACA                     l11396:
  8300                           
  8301                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8302                           ;stkvar	_vterm @ sp[(0)+-1]
  8303  017ACA  0EFF               	movlw	-1
  8304  017ACC  50E3               	movf	plusw1,w,c
  8305  017ACE  0D48               	mullw	72
  8306  017AD0  0E0F               	movlw	low (_D+16)
  8307  017AD2  24F3               	addwf	243,w,c
  8308  017AD4  6ED9               	movwf	fsr2l,c
  8309  017AD6  0E08               	movlw	high (_D+16)
  8310  017AD8  20F4               	addwfc	prodh,w,c
  8311  017ADA  6EDA               	movwf	fsr2h,c
  8312  017ADC  0E00               	movlw	0
  8313  017ADE  6EDF               	movwf	indf2,c
  8314                           
  8315                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8316                           ;stkvar	_vterm @ sp[(0)+-1]
  8317  017AE0  0EFF               	movlw	-1
  8318  017AE2  50E3               	movf	plusw1,w,c
  8319  017AE4  0D48               	mullw	72
  8320  017AE6  0E27               	movlw	low (_D+40)
  8321  017AE8  24F3               	addwf	243,w,c
  8322  017AEA  6ED9               	movwf	fsr2l,c
  8323  017AEC  0E08               	movlw	high (_D+40)
  8324  017AEE  20F4               	addwfc	prodh,w,c
  8325  017AF0  6EDA               	movwf	fsr2h,c
  8326  017AF2  0E00               	movlw	0
  8327  017AF4  6EDF               	movwf	indf2,c
  8328                           
  8329                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8330                           ;stkvar	_vterm @ sp[(0)+-1]
  8331  017AF6  0EFF               	movlw	-1
  8332  017AF8  50E3               	movf	plusw1,w,c
  8333  017AFA  0D48               	mullw	72
  8334  017AFC  0E3F               	movlw	low (_D+64)
  8335  017AFE  24F3               	addwf	243,w,c
  8336  017B00  6ED9               	movwf	fsr2l,c
  8337  017B02  0E08               	movlw	high (_D+64)
  8338  017B04  20F4               	addwfc	prodh,w,c
  8339  017B06  6EDA               	movwf	fsr2h,c
  8340  017B08  0E00               	movlw	0
  8341  017B0A  6EDF               	movwf	indf2,c
  8342                           
  8343                           ;mconfig.c: 95:  wait_lcd_done();
  8344  017B0C  ECFE  F0CD         	call	_wait_lcd_done	;wreg free
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8348                           ;stkvar	_vterm @ sp[(0)+-1]
  8349  017B10  0EFF               	movlw	-1
  8350  017B12  50E3               	movf	plusw1,w,c
  8351  017B14  0D48               	mullw	72
  8352  017B16  0EFF               	movlw	low _D
  8353  017B18  6E0B               	movwf	(btemp+10)^0,c
  8354  017B1A  0E07               	movlw	high _D
  8355  017B1C  6E0C               	movwf	(btemp+11)^0,c
  8356  017B1E  50F3               	movf	243,w,c
  8357  017B20  260B               	addwf	(btemp+10)^0,f,c
  8358  017B22  50F4               	movf	244,w,c
  8359  017B24  220C               	addwfc	(btemp+11)^0,f,c
  8360  017B26  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8361  017B2C  0060  F033  FFE6   	movff	btemp+11,postinc1
  8362  017B32  0E00               	movlw	0
  8363  017B34  6EE6               	movwf	postinc1,c
  8364  017B36  0E00               	movlw	0
  8365  017B38  6EE6               	movwf	postinc1,c
  8366  017B3A  EC68  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8367                           
  8368                           ; BSR set to: 59
  8369                           ;mconfig.c: 97:  wait_lcd_done();
  8370  017B3E  ECFE  F0CD         	call	_wait_lcd_done	;wreg free
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8374                           ;stkvar	_vterm @ sp[(0)+-1]
  8375  017B42  0EFF               	movlw	-1
  8376  017B44  50E3               	movf	plusw1,w,c
  8377  017B46  0D48               	mullw	72
  8378  017B48  0EFF               	movlw	low _D
  8379  017B4A  6E0B               	movwf	(btemp+10)^0,c
  8380  017B4C  0E07               	movlw	high _D
  8381  017B4E  6E0C               	movwf	(btemp+11)^0,c
  8382  017B50  0E18               	movlw	24
  8383  017B52  260B               	addwf	(btemp+10)^0,f,c
  8384  017B54  0E00               	movlw	0
  8385  017B56  220C               	addwfc	(btemp+11)^0,f,c
  8386  017B58  50F3               	movf	243,w,c
  8387  017B5A  260B               	addwf	(btemp+10)^0,f,c
  8388  017B5C  50F4               	movf	244,w,c
  8389  017B5E  220C               	addwfc	(btemp+11)^0,f,c
  8390  017B60  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8391  017B66  0060  F033  FFE6   	movff	btemp+11,postinc1
  8392  017B6C  0E00               	movlw	0
  8393  017B6E  6EE6               	movwf	postinc1,c
  8394  017B70  0E01               	movlw	1
  8395  017B72  6EE6               	movwf	postinc1,c
  8396  017B74  EC68  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8397                           
  8398                           ; BSR set to: 59
  8399                           ;mconfig.c: 99:  wait_lcd_done();
  8400  017B78  ECFE  F0CD         	call	_wait_lcd_done	;wreg free
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8404                           ;stkvar	_vterm @ sp[(0)+-1]
  8405  017B7C  0EFF               	movlw	-1
  8406  017B7E  50E3               	movf	plusw1,w,c
  8407  017B80  0D48               	mullw	72
  8408  017B82  0EFF               	movlw	low _D
  8409  017B84  6E0B               	movwf	(btemp+10)^0,c
  8410  017B86  0E07               	movlw	high _D
  8411  017B88  6E0C               	movwf	(btemp+11)^0,c
  8412  017B8A  0E30               	movlw	48
  8413  017B8C  260B               	addwf	(btemp+10)^0,f,c
  8414  017B8E  0E00               	movlw	0
  8415  017B90  220C               	addwfc	(btemp+11)^0,f,c
  8416  017B92  50F3               	movf	243,w,c
  8417  017B94  260B               	addwf	(btemp+10)^0,f,c
  8418  017B96  50F4               	movf	244,w,c
  8419  017B98  220C               	addwfc	(btemp+11)^0,f,c
  8420  017B9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8421  017BA0  0060  F033  FFE6   	movff	btemp+11,postinc1
  8422  017BA6  0E00               	movlw	0
  8423  017BA8  6EE6               	movwf	postinc1,c
  8424  017BAA  0E02               	movlw	2
  8425  017BAC  6EE6               	movwf	postinc1,c
  8426  017BAE  EC68  F0CA         	call	_eaDogM_WriteStringAtPos	;wreg free
  8427  017BB2                     l1649:
  8428                           
  8429                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8430  017BB2  52E5               	movf	postdec1,f,c
  8431  017BB4  0012               	return		;funcret
  8432  017BB6                     __end_of_update_lcd:
  8433                           	opt callstack 0
  8434                           
  8435 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8436 ;; Defined at:
  8437 ;;		line 278 in file "eadog.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  r               1  [STACK] const unsigned char 
  8440 ;;  c               1  [STACK] const unsigned char 
  8441 ;;  strPtr          2  [STACK] PTR unsigned char 
  8442 ;;		 -> D.lcd(288), D(290), V(188), 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1  [STACK] void 
  8447 ;; Registers used:
  8448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8449 ;; Tracked objects:
  8450 ;;		On entry : 3F/0
  8451 ;;		On exit  : 3F/3B
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8458 ;;Total ram usage:        0 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; Hardware stack levels required when called:   25
  8461 ;; This function calls:
  8462 ;;		_eaDogM_WriteString
  8463 ;;		_send_lcd_cmd_dma
  8464 ;; This function is called by:
  8465 ;;		_update_lcd
  8466 ;;		_vterm_dump
  8467 ;; This function uses a reentrant model
  8468 ;;
  8469                           
  8470                           	psect	text32
  8471  0194D0                     __ptext32:
  8472                           	opt callstack 0
  8473  0194D0                     _eaDogM_WriteStringAtPos:
  8474                           	opt callstack 4
  8475                           
  8476                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8477                           ;stkvar	_c @ sp[(0)+-2]
  8478                           
  8479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8480                           ;incstack = 0
  8481  0194D0  0EFE               	movlw	-2
  8482  0194D2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8483                           
  8484                           ;stkvar	_r @ sp[(0)+-1]
  8485  0194D8  0EFF               	movlw	-1
  8486  0194DA  50E3               	movf	plusw1,w,c
  8487  0194DC  0D10               	mullw	16
  8488  0194DE  50F3               	movf	243,w,c
  8489  0194E0  240C               	addwf	(btemp+11)^0,w,c
  8490  0194E2  0F80               	addlw	128
  8491  0194E4  6EE6               	movwf	postinc1,c
  8492  0194E6  ECB5  F0C7         	call	_send_lcd_cmd_dma	;wreg free
  8493                           
  8494                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8495                           ;stkvar	_strPtr @ sp[(0)+-4]
  8496  0194EA  0EFC               	movlw	-4
  8497  0194EC  006F FF8F FFE6     	movff	plusw1,postinc1
  8498  0194F2  006F FF8F FFE6     	movff	plusw1,postinc1
  8499  0194F8  EC7B  F0C2         	call	_eaDogM_WriteString	;wreg free
  8500                           
  8501                           ; BSR set to: 59
  8502                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8503  0194FC  52E5               	movf	postdec1,f,c
  8504  0194FE  52E5               	movf	postdec1,f,c
  8505  019500  52E5               	movf	postdec1,f,c
  8506  019502  52E5               	movf	postdec1,f,c
  8507  019504  0012               	return		;funcret
  8508  019506                     __end_of_eaDogM_WriteStringAtPos:
  8509                           	opt callstack 0
  8510                           
  8511 ;; *************** function _send_lcd_cmd_dma *****************
  8512 ;; Defined at:
  8513 ;;		line 220 in file "eadog.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  strPtr          1  [STACK] unsigned char 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1  [STACK] void 
  8520 ;; Registers used:
  8521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/3D
  8524 ;;		On exit  : 3F/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:   24
  8534 ;; This function calls:
  8535 ;;		_printf
  8536 ;;		_ringBufS_flush
  8537 ;;		_start_lcd
  8538 ;;		_wait_lcd_done
  8539 ;;		_wait_lcd_set
  8540 ;; This function is called by:
  8541 ;;		_eaDogM_WriteCommand
  8542 ;;		_eaDogM_WriteStringAtPos
  8543 ;; This function uses a reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text33
  8547  018F6A                     __ptext33:
  8548                           	opt callstack 0
  8549  018F6A                     _send_lcd_cmd_dma:
  8550                           	opt callstack 4
  8551                           
  8552                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8553                           
  8554                           ; BSR set to: 59
  8555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8556                           ;incstack = 0
  8557  018F6A  ECCC  F0CE         	call	_wait_lcd_set	;wreg free
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8561  018F6E  0E00               	movlw	0
  8562  018F70  6EE6               	movwf	postinc1,c
  8563  018F72  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8564  018F78  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8565  018F7E  ECB6  F0C3         	call	_ringBufS_flush	;wreg free
  8566  018F82  92BC               	bcf	188,1,c	;volatile
  8567  018F84  94BC               	bcf	188,2,c	;volatile
  8568                           
  8569                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8570  018F86  013B               	movlb	59	; () banked
  8571  018F88  9FFC               	bcf	252,7,b	;volatile
  8572                           
  8573                           ; BSR set to: 59
  8574                           ;eadog.c: 229:  DMA1SSZ = 1;
  8575  018F8A  0E00               	movlw	0
  8576  018F8C  6FF8               	movwf	248,b	;volatile
  8577  018F8E  0E01               	movlw	1
  8578  018F90  6FF7               	movwf	247,b	;volatile
  8579                           
  8580                           ; BSR set to: 59
  8581                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8582  018F92  8FFC               	bsf	252,7,b	;volatile
  8583                           
  8584                           ; BSR set to: 59
  8585                           ;eadog.c: 231:  printf("%c", strPtr);
  8586                           ;stkvar	_strPtr @ sp[(0)+-1]
  8587  018F94  0EFF               	movlw	-1
  8588  018F96  50E3               	movf	plusw1,w,c
  8589  018F98  6EE6               	movwf	postinc1,c
  8590  018F9A  0E00               	movlw	0
  8591  018F9C  6EE6               	movwf	postinc1,c
  8592  018F9E  0EF8               	movlw	low STR_25
  8593  018FA0  6EE6               	movwf	postinc1,c
  8594  018FA2  0EFF               	movlw	high STR_25
  8595  018FA4  6EE6               	movwf	postinc1,c
  8596  018FA6  0E04               	movlw	4
  8597  018FA8  6EE6               	movwf	postinc1,c
  8598  018FAA  ECCD  F0C6         	call	_printf	;wreg free
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;eadog.c: 232:  start_lcd();
  8602  018FAE  ECCF  F0CE         	call	_start_lcd	;wreg free
  8603                           
  8604                           ; BSR set to: 59
  8605                           ;eadog.c: 233:  wait_lcd_done();
  8606  018FB2  ECFE  F0CD         	call	_wait_lcd_done	;wreg free
  8607                           
  8608                           ; BSR set to: 0
  8609  018FB6  82BC               	bsf	188,1,c	;volatile
  8610                           
  8611                           ; BSR set to: 0
  8612                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8613  018FB8  52E5               	movf	postdec1,f,c
  8614  018FBA  0012               	return		;funcret
  8615  018FBC                     __end_of_send_lcd_cmd_dma:
  8616                           	opt callstack 0
  8617                           
  8618 ;; *************** function _wait_lcd_done *****************
  8619 ;; Defined at:
  8620 ;;		line 156 in file "eadog.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1  [STACK] void 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 3F/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:   16
  8641 ;; This function calls:
  8642 ;;		_wdtdelay
  8643 ;; This function is called by:
  8644 ;;		_send_lcd_cmd_dma
  8645 ;;		_update_lcd
  8646 ;;		_vterm_dump
  8647 ;; This function uses a reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text34
  8651  019BFC                     __ptext34:
  8652                           	opt callstack 0
  8653  019BFC                     _wait_lcd_done:
  8654                           	opt callstack 13
  8655                           
  8656                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8657                           
  8658                           ; BSR set to: 0
  8659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8660                           ;incstack = 0
  8661  019BFC  0100               	movlb	0	; () banked
  8662  019BFE  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  8663  019C00  D7FD               	goto	_wait_lcd_done
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;eadog.c: 159:  wdtdelay(50);
  8667  019C02  0E32               	movlw	50
  8668  019C04  6EE6               	movwf	postinc1,c
  8669  019C06  0E00               	movlw	0
  8670  019C08  6EE6               	movwf	postinc1,c
  8671  019C0A  0E00               	movlw	0
  8672  019C0C  6EE6               	movwf	postinc1,c
  8673  019C0E  0E00               	movlw	0
  8674  019C10  6EE6               	movwf	postinc1,c
  8675  019C12  EC2D  F0C7         	call	_wdtdelay	;wreg free
  8676                           
  8677                           ; BSR set to: 0
  8678                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8679  019C16  0012               	return		;funcret
  8680  019C18                     __end_of_wait_lcd_done:
  8681                           	opt callstack 0
  8682                           
  8683 ;; *************** function _wdtdelay *****************
  8684 ;; Defined at:
  8685 ;;		line 23 in file "eadog.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  delay           4  [STACK] const unsigned long 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1  [STACK] void 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 3F/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:   15
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_init_display
  8710 ;;		_send_lcd_cmd
  8711 ;;		_send_lcd_cmd_long
  8712 ;;		_wait_lcd_done
  8713 ;; This function uses a reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text35
  8717  018E5A                     __ptext35:
  8718                           	opt callstack 0
  8719  018E5A                     _wdtdelay:
  8720                           	opt callstack 13
  8721                           
  8722                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  8723                           
  8724                           ; BSR set to: 0
  8725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8726                           ;incstack = 0
  8727  018E5A  0100               	movlb	0	; () banked
  8728  018E5C  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  8729  018E5E  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8730  018E60  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8731  018E62  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8732  018E64                     l1414:
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;eadog.c: 28:   __nop();
  8736  018E64  F000               	nop	
  8737  018E66  0004               	clrwdt		;# 
  8738                           
  8739                           ;eadog.c: 30:  };
  8740  018E68  0E01               	movlw	1
  8741  018E6A  0100               	movlb	0	; () banked
  8742  018E6C  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  8743  018E6E  0E00               	movlw	0
  8744  018E70  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8745  018E72  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8746  018E74  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;stkvar	_delay @ sp[(0)+-4]
  8750  018E76  0EFC               	movlw	-4
  8751  018E78  006F FF8C  F001    	movff	plusw1,btemp
  8752  018E7E  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  8753  018E80  5C01               	subwf	btemp^0,w,c
  8754  018E82  0EFD               	movlw	-3
  8755  018E84  006F FF8C  F001    	movff	plusw1,btemp
  8756  018E8A  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8757  018E8C  5801               	subwfb	btemp^0,w,c
  8758  018E8E  0EFE               	movlw	-2
  8759  018E90  006F FF8C  F001    	movff	plusw1,btemp
  8760  018E96  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8761  018E98  5801               	subwfb	btemp^0,w,c
  8762  018E9A  0EFF               	movlw	-1
  8763  018E9C  006F FF8C  F001    	movff	plusw1,btemp
  8764  018EA2  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8765  018EA4  5801               	subwfb	btemp^0,w,c
  8766  018EA6  B0D8               	btfsc	status,0,c
  8767  018EA8  D7DD               	goto	l1414
  8768                           
  8769                           ; BSR set to: 0
  8770                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8771  018EAA  52E5               	movf	postdec1,f,c
  8772  018EAC  52E5               	movf	postdec1,f,c
  8773  018EAE  52E5               	movf	postdec1,f,c
  8774  018EB0  52E5               	movf	postdec1,f,c
  8775  018EB2  0012               	return		;funcret
  8776  018EB4                     __end_of_wdtdelay:
  8777                           	opt callstack 0
  8778                           
  8779 ;; *************** function _eaDogM_WriteString *****************
  8780 ;; Defined at:
  8781 ;;		line 199 in file "eadog.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  strPtr          2  [STACK] PTR unsigned char 
  8784 ;;		 -> D.lcd(288), D(290), V(188), 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1  [STACK] void 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8791 ;; Tracked objects:
  8792 ;;		On entry : 3F/0
  8793 ;;		On exit  : 3F/3B
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;Total ram usage:        0 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:   24
  8803 ;; This function calls:
  8804 ;;		_printf
  8805 ;;		_ringBufS_flush
  8806 ;;		_start_lcd
  8807 ;;		_strlen
  8808 ;;		_wait_lcd_set
  8809 ;; This function is called by:
  8810 ;;		_eaDogM_WriteStringAtPos
  8811 ;; This function uses a reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text36
  8815  0184F6                     __ptext36:
  8816                           	opt callstack 0
  8817  0184F6                     _eaDogM_WriteString:
  8818                           	opt callstack 4
  8819                           
  8820                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  8821                           
  8822                           ; BSR set to: 0
  8823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8824                           ;incstack = 0
  8825  0184F6  ECCC  F0CE         	call	_wait_lcd_set	;wreg free
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  8829  0184FA  0E00               	movlw	0
  8830  0184FC  6EE6               	movwf	postinc1,c
  8831  0184FE  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  8832  018504  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  8833  01850A  ECB6  F0C3         	call	_ringBufS_flush	;wreg free
  8834  01850E  94BC               	bcf	188,2,c	;volatile
  8835                           
  8836                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8837                           ;stkvar	_strPtr @ sp[(0)+-2]
  8838  018510  0EFE               	movlw	-2
  8839  018512  006F FF8F FFE6     	movff	plusw1,postinc1
  8840  018518  006F FF8F FFE6     	movff	plusw1,postinc1
  8841  01851E  ECCE  F0C2         	call	_strlen	;wreg free
  8842  018522  5002               	movf	(btemp+1)^0,w,c
  8843  018524  E104               	bnz	u10740
  8844  018526  0E41               	movlw	65
  8845  018528  5C01               	subwf	btemp^0,w,c
  8846  01852A  A0D8               	btfss	status,0,c
  8847  01852C  D010               	goto	l11256
  8848  01852E                     u10740:
  8849                           
  8850                           ;stkvar	_strPtr @ sp[(0)+-2]
  8851  01852E  0EFE               	movlw	-2
  8852  018530  006F FF8C  F00B    	movff	plusw1,btemp+10
  8853  018536  0EFF               	movlw	-1
  8854  018538  006F FF8C  F00C    	movff	plusw1,btemp+11
  8855  01853E  0E40               	movlw	64
  8856  018540  240B               	addwf	(btemp+10)^0,w,c
  8857  018542  6ED9               	movwf	fsr2l,c
  8858  018544  0E00               	movlw	0
  8859  018546  200C               	addwfc	(btemp+11)^0,w,c
  8860  018548  6EDA               	movwf	fsr2h,c
  8861  01854A  0E00               	movlw	0
  8862  01854C  6EDF               	movwf	indf2,c
  8863  01854E                     l11256:
  8864                           
  8865                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  8866  01854E  013B               	movlb	59	; () banked
  8867  018550  9FFC               	bcf	252,7,b	;volatile
  8868                           
  8869                           ; BSR set to: 59
  8870                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  8871                           ;stkvar	_strPtr @ sp[(0)+-2]
  8872  018552  0EFE               	movlw	-2
  8873  018554  006F FF8F FFE6     	movff	plusw1,postinc1
  8874  01855A  006F FF8F FFE6     	movff	plusw1,postinc1
  8875  018560  ECCE  F0C2         	call	_strlen	;wreg free
  8876  018564  0060  F007  FBF7   	movff	btemp,15351	;volatile
  8877  01856A  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  8878                           
  8879                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  8880  018570  013B               	movlb	59	; () banked
  8881  018572  8FFC               	bsf	252,7,b	;volatile
  8882                           
  8883                           ; BSR set to: 59
  8884                           ;eadog.c: 210:  printf("%s", strPtr);
  8885                           ;stkvar	_strPtr @ sp[(0)+-2]
  8886  018574  0EFE               	movlw	-2
  8887  018576  006F FF8F FFE6     	movff	plusw1,postinc1
  8888  01857C  006F FF8F FFE6     	movff	plusw1,postinc1
  8889  018582  0EFB               	movlw	low STR_24
  8890  018584  6EE6               	movwf	postinc1,c
  8891  018586  0EFF               	movlw	high STR_24
  8892  018588  6EE6               	movwf	postinc1,c
  8893  01858A  0E04               	movlw	4
  8894  01858C  6EE6               	movwf	postinc1,c
  8895  01858E  ECCD  F0C6         	call	_printf	;wreg free
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;eadog.c: 211:  start_lcd();
  8899  018592  ECCF  F0CE         	call	_start_lcd	;wreg free
  8900                           
  8901                           ; BSR set to: 59
  8902                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8903  018596  52E5               	movf	postdec1,f,c
  8904  018598  52E5               	movf	postdec1,f,c
  8905  01859A  0012               	return		;funcret
  8906  01859C                     __end_of_eaDogM_WriteString:
  8907                           	opt callstack 0
  8908                           
  8909 ;; *************** function _wait_lcd_set *****************
  8910 ;; Defined at:
  8911 ;;		line 146 in file "eadog.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1  [STACK] void 
  8918 ;; Registers used:
  8919 ;;		None
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/3D
  8922 ;;		On exit  : 3F/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8929 ;;Total ram usage:        0 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:   15
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_eaDogM_WriteString
  8936 ;;		_send_lcd_cmd_dma
  8937 ;; This function uses a reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text37
  8941  019D98                     __ptext37:
  8942                           	opt callstack 0
  8943  019D98                     _wait_lcd_set:
  8944                           	opt callstack 12
  8945                           
  8946                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  8947                           
  8948                           ; BSR set to: 59
  8949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8950                           ;incstack = 0
  8951  019D98  0100               	movlb	0	; () banked
  8952  019D9A  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  8953                           
  8954                           ; BSR set to: 0
  8955                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8956  019D9C  0012               	return		;funcret
  8957  019D9E                     __end_of_wait_lcd_set:
  8958                           	opt callstack 0
  8959                           
  8960 ;; *************** function _start_lcd *****************
  8961 ;; Defined at:
  8962 ;;		line 141 in file "eadog.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1  [STACK] void 
  8969 ;; Registers used:
  8970 ;;		None
  8971 ;; Tracked objects:
  8972 ;;		On entry : 3F/0
  8973 ;;		On exit  : 3F/3B
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8980 ;;Total ram usage:        0 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:   15
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_eaDogM_WriteString
  8987 ;;		_send_lcd_cmd_dma
  8988 ;; This function uses a reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text38
  8992  019D9E                     __ptext38:
  8993                           	opt callstack 0
  8994  019D9E                     _start_lcd:
  8995                           	opt callstack 12
  8996                           
  8997                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  8998                           
  8999                           ; BSR set to: 0
  9000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9001                           ;incstack = 0
  9002  019D9E  013B               	movlb	59	; () banked
  9003  019DA0  8DFC               	bsf	252,6,b	;volatile
  9004                           
  9005                           ; BSR set to: 59
  9006                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9007  019DA2  0012               	return		;funcret
  9008  019DA4                     __end_of_start_lcd:
  9009                           	opt callstack 0
  9010                           
  9011 ;; *************** function _ringBufS_flush *****************
  9012 ;; Defined at:
  9013 ;;		line 76 in file "ringbufs.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9016 ;;		 -> ring_buf1(67), 
  9017 ;;  clearBuffer     1  [STACK] const char 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1  [STACK] void 
  9022 ;; Registers used:
  9023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9024 ;; Tracked objects:
  9025 ;;		On entry : 3F/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;Total ram usage:        0 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; Hardware stack levels required when called:   16
  9036 ;; This function calls:
  9037 ;;		_memset
  9038 ;; This function is called by:
  9039 ;;		_eaDogM_WriteString
  9040 ;;		_send_lcd_cmd_dma
  9041 ;; This function uses a reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text39
  9045  01876C                     __ptext39:
  9046                           	opt callstack 0
  9047  01876C                     _ringBufS_flush:
  9048                           	opt callstack 11
  9049                           
  9050                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9051                           ;stkvar	__this @ sp[(0)+-2]
  9052                           
  9053                           ; BSR set to: 59
  9054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9055                           ;incstack = 0
  9056  01876C  0EFE               	movlw	-2
  9057  01876E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9058  018774  0EFF               	movlw	-1
  9059  018776  006F FF8C  F00C    	movff	plusw1,btemp+11
  9060  01877C  0E42               	movlw	66
  9061  01877E  240B               	addwf	(btemp+10)^0,w,c
  9062  018780  6ED9               	movwf	fsr2l,c
  9063  018782  0E00               	movlw	0
  9064  018784  200C               	addwfc	(btemp+11)^0,w,c
  9065  018786  6EDA               	movwf	fsr2h,c
  9066  018788  0E00               	movlw	0
  9067  01878A  6EDF               	movwf	indf2,c
  9068                           
  9069                           ;ringbufs.c: 79:  _this->head = 0;
  9070                           ;stkvar	__this @ sp[(0)+-2]
  9071  01878C  0EFE               	movlw	-2
  9072  01878E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9073  018794  0EFF               	movlw	-1
  9074  018796  006F FF8C  F00C    	movff	plusw1,btemp+11
  9075  01879C  0E40               	movlw	64
  9076  01879E  240B               	addwf	(btemp+10)^0,w,c
  9077  0187A0  6ED9               	movwf	fsr2l,c
  9078  0187A2  0E00               	movlw	0
  9079  0187A4  200C               	addwfc	(btemp+11)^0,w,c
  9080  0187A6  6EDA               	movwf	fsr2h,c
  9081  0187A8  0E00               	movlw	0
  9082  0187AA  6EDF               	movwf	indf2,c
  9083                           
  9084                           ;ringbufs.c: 80:  _this->tail = 0;
  9085                           ;stkvar	__this @ sp[(0)+-2]
  9086  0187AC  0EFE               	movlw	-2
  9087  0187AE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9088  0187B4  0EFF               	movlw	-1
  9089  0187B6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9090  0187BC  0E41               	movlw	65
  9091  0187BE  240B               	addwf	(btemp+10)^0,w,c
  9092  0187C0  6ED9               	movwf	fsr2l,c
  9093  0187C2  0E00               	movlw	0
  9094  0187C4  200C               	addwfc	(btemp+11)^0,w,c
  9095  0187C6  6EDA               	movwf	fsr2h,c
  9096  0187C8  0E00               	movlw	0
  9097  0187CA  6EDF               	movwf	indf2,c
  9098                           
  9099                           ;ringbufs.c: 81:  if (clearBuffer) {
  9100                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9101  0187CC  0EFD               	movlw	-3
  9102  0187CE  50E3               	movf	plusw1,w,c
  9103  0187D0  B4D8               	btfsc	status,2,c
  9104  0187D2  D011               	goto	l1558
  9105                           
  9106                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9107  0187D4  0E40               	movlw	64
  9108  0187D6  6EE6               	movwf	postinc1,c
  9109  0187D8  0E00               	movlw	0
  9110  0187DA  6EE6               	movwf	postinc1,c
  9111  0187DC  0E00               	movlw	0
  9112  0187DE  6EE6               	movwf	postinc1,c
  9113  0187E0  0E00               	movlw	0
  9114  0187E2  6EE6               	movwf	postinc1,c
  9115                           
  9116                           ;stkvar	__this @ sp[(-4)+-2]
  9117  0187E4  0EFA               	movlw	-6
  9118  0187E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9119  0187EC  006F FF8F FFE6     	movff	plusw1,postinc1
  9120  0187F2  EC8F  F0A9         	call	_memset	;wreg free
  9121  0187F6                     l1558:
  9122                           
  9123                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9124  0187F6  52E5               	movf	postdec1,f,c
  9125  0187F8  52E5               	movf	postdec1,f,c
  9126  0187FA  52E5               	movf	postdec1,f,c
  9127  0187FC  0012               	return		;funcret
  9128  0187FE                     __end_of_ringBufS_flush:
  9129                           	opt callstack 0
  9130                           
  9131 ;; *************** function _memset *****************
  9132 ;; Defined at:
  9133 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  dest            2  [STACK] PTR void 
  9136 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9137 ;;  c               2  [STACK] int 
  9138 ;;  n               2  [STACK] unsigned int 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  s               2  [STACK] PTR unsigned char 
  9141 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9142 ;;  k               2  [STACK] unsigned int 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  2  [STACK] PTR void 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9156 ;;Total ram usage:        0 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:   15
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_ringBufS_init
  9163 ;;		_ringBufS_flush
  9164 ;; This function uses a reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text40
  9168  01531E                     __ptext40:
  9169                           	opt callstack 0
  9170  01531E                     _memset:
  9171                           	opt callstack 0
  9172                           
  9173                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9174  01531E  52E6               	movf	postinc1,f,c
  9175  015320  52E6               	movf	postinc1,f,c
  9176  015322  52E6               	movf	postinc1,f,c
  9177  015324  52E6               	movf	postinc1,f,c
  9178                           
  9179                           ;stkvar	_dest @ sp[(-4)+-2]
  9180                           
  9181                           ;incstack = 0
  9182  015326  0EFA               	movlw	-6
  9183  015328  006F FF8C  F00B    	movff	plusw1,btemp+10
  9184  01532E  0EFB               	movlw	-5
  9185  015330  006F FF8C  F00C    	movff	plusw1,btemp+11
  9186                           
  9187                           ;stkvar	_s @ sp[(-4)+0]
  9188  015336  0EFD               	movlw	-3
  9189  015338  0060  F033  FFE3   	movff	btemp+11,plusw1
  9190  01533E  0EFC               	movlw	-4
  9191  015340  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9192                           
  9193                           ;stkvar	_n @ sp[(-4)+-6]
  9194  015346  0EF6               	movlw	-10
  9195  015348  006F FF8C  F001    	movff	plusw1,btemp
  9196  01534E  0EF7               	movlw	-9
  9197  015350  50E3               	movf	plusw1,w,c
  9198  015352  1001               	iorwf	btemp^0,w,c
  9199  015354  B4D8               	btfsc	status,2,c
  9200  015356  D154               	goto	u9480
  9201                           
  9202                           ;stkvar	_c @ sp[(-4)+-4]
  9203                           ;stkvar	_s @ sp[(-4)+0]
  9204  015358  0EFC               	movlw	-4
  9205  01535A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9206  015360  0EFD               	movlw	-3
  9207  015362  006F FF8F FFDA     	movff	plusw1,fsr2h
  9208  015368  0EF8               	movlw	-8
  9209  01536A  006F FF8F FFDF     	movff	plusw1,indf2
  9210                           
  9211                           ;stkvar	_c @ sp[(-4)+-4]
  9212                           ;stkvar	_n @ sp[(-4)+-6]
  9213                           ;stkvar	_s @ sp[(-4)+0]
  9214  015370  0EFC               	movlw	-4
  9215  015372  006F FF8C  F00B    	movff	plusw1,btemp+10
  9216  015378  0EFD               	movlw	-3
  9217  01537A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9218  015380  0EF6               	movlw	-10
  9219  015382  50E3               	movf	plusw1,w,c
  9220  015384  260B               	addwf	(btemp+10)^0,f,c
  9221  015386  0EF7               	movlw	-9
  9222  015388  50E3               	movf	plusw1,w,c
  9223  01538A  220C               	addwfc	(btemp+11)^0,f,c
  9224  01538C  0EFF               	movlw	255
  9225  01538E  240B               	addwf	(btemp+10)^0,w,c
  9226  015390  6ED9               	movwf	fsr2l,c
  9227  015392  0EFF               	movlw	255
  9228  015394  200C               	addwfc	(btemp+11)^0,w,c
  9229  015396  6EDA               	movwf	fsr2h,c
  9230  015398  0EF8               	movlw	-8
  9231  01539A  006F FF8F FFDF     	movff	plusw1,indf2
  9232                           
  9233                           ;stkvar	_n @ sp[(-4)+-6]
  9234  0153A0  0EF7               	movlw	-9
  9235  0153A2  50E3               	movf	plusw1,w,c
  9236  0153A4  E108               	bnz	l10510
  9237  0153A6  0EF6               	movlw	-10
  9238  0153A8  006F FF8C  F001    	movff	plusw1,btemp
  9239  0153AE  0E03               	movlw	3
  9240  0153B0  5E01               	subwf	btemp^0,f,c
  9241  0153B2  A0D8               	btfss	status,0,c
  9242  0153B4  D125               	goto	u9480
  9243  0153B6                     l10510:
  9244                           
  9245                           ;stkvar	_c @ sp[(-4)+-4]
  9246                           ;stkvar	_s @ sp[(-4)+0]
  9247  0153B6  0EFC               	movlw	-4
  9248  0153B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9249  0153BE  0EFD               	movlw	-3
  9250  0153C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9251  0153C6  0E01               	movlw	1
  9252  0153C8  240B               	addwf	(btemp+10)^0,w,c
  9253  0153CA  6ED9               	movwf	fsr2l,c
  9254  0153CC  0E00               	movlw	0
  9255  0153CE  200C               	addwfc	(btemp+11)^0,w,c
  9256  0153D0  6EDA               	movwf	fsr2h,c
  9257  0153D2  0EF8               	movlw	-8
  9258  0153D4  006F FF8F FFDF     	movff	plusw1,indf2
  9259                           
  9260                           ;stkvar	_c @ sp[(-4)+-4]
  9261                           ;stkvar	_s @ sp[(-4)+0]
  9262  0153DA  0EFC               	movlw	-4
  9263  0153DC  006F FF8C  F00B    	movff	plusw1,btemp+10
  9264  0153E2  0EFD               	movlw	-3
  9265  0153E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  9266  0153EA  0E02               	movlw	2
  9267  0153EC  240B               	addwf	(btemp+10)^0,w,c
  9268  0153EE  6ED9               	movwf	fsr2l,c
  9269  0153F0  0E00               	movlw	0
  9270  0153F2  200C               	addwfc	(btemp+11)^0,w,c
  9271  0153F4  6EDA               	movwf	fsr2h,c
  9272  0153F6  0EF8               	movlw	-8
  9273  0153F8  006F FF8F FFDF     	movff	plusw1,indf2
  9274                           
  9275                           ;stkvar	_c @ sp[(-4)+-4]
  9276                           ;stkvar	_n @ sp[(-4)+-6]
  9277                           ;stkvar	_s @ sp[(-4)+0]
  9278  0153FE  0EFC               	movlw	-4
  9279  015400  006F FF8C  F00B    	movff	plusw1,btemp+10
  9280  015406  0EFD               	movlw	-3
  9281  015408  006F FF8C  F00C    	movff	plusw1,btemp+11
  9282  01540E  0EF6               	movlw	-10
  9283  015410  50E3               	movf	plusw1,w,c
  9284  015412  260B               	addwf	(btemp+10)^0,f,c
  9285  015414  0EF7               	movlw	-9
  9286  015416  50E3               	movf	plusw1,w,c
  9287  015418  220C               	addwfc	(btemp+11)^0,f,c
  9288  01541A  0EFE               	movlw	254
  9289  01541C  240B               	addwf	(btemp+10)^0,w,c
  9290  01541E  6ED9               	movwf	fsr2l,c
  9291  015420  0EFF               	movlw	255
  9292  015422  200C               	addwfc	(btemp+11)^0,w,c
  9293  015424  6EDA               	movwf	fsr2h,c
  9294  015426  0EF8               	movlw	-8
  9295  015428  006F FF8F FFDF     	movff	plusw1,indf2
  9296                           
  9297                           ;stkvar	_c @ sp[(-4)+-4]
  9298                           ;stkvar	_n @ sp[(-4)+-6]
  9299                           ;stkvar	_s @ sp[(-4)+0]
  9300  01542E  0EFC               	movlw	-4
  9301  015430  006F FF8C  F00B    	movff	plusw1,btemp+10
  9302  015436  0EFD               	movlw	-3
  9303  015438  006F FF8C  F00C    	movff	plusw1,btemp+11
  9304  01543E  0EF6               	movlw	-10
  9305  015440  50E3               	movf	plusw1,w,c
  9306  015442  260B               	addwf	(btemp+10)^0,f,c
  9307  015444  0EF7               	movlw	-9
  9308  015446  50E3               	movf	plusw1,w,c
  9309  015448  220C               	addwfc	(btemp+11)^0,f,c
  9310  01544A  0EFD               	movlw	253
  9311  01544C  240B               	addwf	(btemp+10)^0,w,c
  9312  01544E  6ED9               	movwf	fsr2l,c
  9313  015450  0EFF               	movlw	255
  9314  015452  200C               	addwfc	(btemp+11)^0,w,c
  9315  015454  6EDA               	movwf	fsr2h,c
  9316  015456  0EF8               	movlw	-8
  9317  015458  006F FF8F FFDF     	movff	plusw1,indf2
  9318                           
  9319                           ;stkvar	_n @ sp[(-4)+-6]
  9320  01545E  0EF7               	movlw	-9
  9321  015460  50E3               	movf	plusw1,w,c
  9322  015462  E108               	bnz	l10516
  9323  015464  0EF6               	movlw	-10
  9324  015466  006F FF8C  F001    	movff	plusw1,btemp
  9325  01546C  0E07               	movlw	7
  9326  01546E  5E01               	subwf	btemp^0,f,c
  9327  015470  A0D8               	btfss	status,0,c
  9328  015472  D0C6               	goto	u9480
  9329  015474                     l10516:
  9330                           
  9331                           ;stkvar	_c @ sp[(-4)+-4]
  9332                           ;stkvar	_s @ sp[(-4)+0]
  9333  015474  0EFC               	movlw	-4
  9334  015476  006F FF8C  F00B    	movff	plusw1,btemp+10
  9335  01547C  0EFD               	movlw	-3
  9336  01547E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9337  015484  0E03               	movlw	3
  9338  015486  240B               	addwf	(btemp+10)^0,w,c
  9339  015488  6ED9               	movwf	fsr2l,c
  9340  01548A  0E00               	movlw	0
  9341  01548C  200C               	addwfc	(btemp+11)^0,w,c
  9342  01548E  6EDA               	movwf	fsr2h,c
  9343  015490  0EF8               	movlw	-8
  9344  015492  006F FF8F FFDF     	movff	plusw1,indf2
  9345                           
  9346                           ;stkvar	_c @ sp[(-4)+-4]
  9347                           ;stkvar	_n @ sp[(-4)+-6]
  9348                           ;stkvar	_s @ sp[(-4)+0]
  9349  015498  0EFC               	movlw	-4
  9350  01549A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9351  0154A0  0EFD               	movlw	-3
  9352  0154A2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9353  0154A8  0EF6               	movlw	-10
  9354  0154AA  50E3               	movf	plusw1,w,c
  9355  0154AC  260B               	addwf	(btemp+10)^0,f,c
  9356  0154AE  0EF7               	movlw	-9
  9357  0154B0  50E3               	movf	plusw1,w,c
  9358  0154B2  220C               	addwfc	(btemp+11)^0,f,c
  9359  0154B4  0EFC               	movlw	252
  9360  0154B6  240B               	addwf	(btemp+10)^0,w,c
  9361  0154B8  6ED9               	movwf	fsr2l,c
  9362  0154BA  0EFF               	movlw	255
  9363  0154BC  200C               	addwfc	(btemp+11)^0,w,c
  9364  0154BE  6EDA               	movwf	fsr2h,c
  9365  0154C0  0EF8               	movlw	-8
  9366  0154C2  006F FF8F FFDF     	movff	plusw1,indf2
  9367                           
  9368                           ;stkvar	_n @ sp[(-4)+-6]
  9369  0154C8  0EF7               	movlw	-9
  9370  0154CA  50E3               	movf	plusw1,w,c
  9371  0154CC  E108               	bnz	l10522
  9372  0154CE  0EF6               	movlw	-10
  9373  0154D0  006F FF8C  F001    	movff	plusw1,btemp
  9374  0154D6  0E09               	movlw	9
  9375  0154D8  5E01               	subwf	btemp^0,f,c
  9376  0154DA  A0D8               	btfss	status,0,c
  9377  0154DC  D091               	goto	u9480
  9378  0154DE                     l10522:
  9379                           
  9380                           ;stkvar	_s @ sp[(-4)+0]
  9381  0154DE  0EFC               	movlw	-4
  9382  0154E0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9383  0154E6  1E0B               	comf	(btemp+10)^0,f,c
  9384  0154E8  0EFD               	movlw	-3
  9385  0154EA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9386  0154F0  1E0C               	comf	(btemp+11)^0,f,c
  9387  0154F2  2A0B               	incf	(btemp+10)^0,f,c
  9388  0154F4  B4D8               	btfsc	status,2,c
  9389  0154F6  2A0C               	incf	(btemp+11)^0,f,c
  9390  0154F8  0E03               	movlw	3
  9391  0154FA  160B               	andwf	(btemp+10)^0,f,c
  9392  0154FC  0E00               	movlw	0
  9393  0154FE  160C               	andwf	(btemp+11)^0,f,c
  9394                           
  9395                           ;stkvar	_k @ sp[(-4)+2]
  9396  015500  0EFE               	movlw	-2
  9397  015502  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9398  015508  0EFF               	movlw	-1
  9399  01550A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9400                           
  9401                           ;stkvar	_k @ sp[(-4)+2]
  9402                           ;stkvar	_s @ sp[(-4)+0]
  9403  015510  0EFC               	movlw	-4
  9404  015512  50E3               	movf	plusw1,w,c
  9405  015514  6E01               	movwf	btemp^0,c
  9406  015516  0EFE               	movlw	-2
  9407  015518  50E3               	movf	plusw1,w,c
  9408  01551A  2601               	addwf	btemp^0,f,c
  9409  01551C  0EFC               	movlw	-4
  9410  01551E  0060  F007  FFE3   	movff	btemp,plusw1
  9411  015524  0EFD               	movlw	-3
  9412  015526  50E3               	movf	plusw1,w,c
  9413  015528  6E01               	movwf	btemp^0,c
  9414  01552A  0EFF               	movlw	-1
  9415  01552C  50E3               	movf	plusw1,w,c
  9416  01552E  2201               	addwfc	btemp^0,f,c
  9417  015530  0EFD               	movlw	-3
  9418  015532  0060  F007  FFE3   	movff	btemp,plusw1
  9419                           
  9420                           ;stkvar	_k @ sp[(-4)+2]
  9421                           ;stkvar	_n @ sp[(-4)+-6]
  9422  015538  0EF6               	movlw	-10
  9423  01553A  50E3               	movf	plusw1,w,c
  9424  01553C  6E01               	movwf	btemp^0,c
  9425  01553E  0EFE               	movlw	-2
  9426  015540  50E3               	movf	plusw1,w,c
  9427  015542  5E01               	subwf	btemp^0,f,c
  9428  015544  0EF6               	movlw	-10
  9429  015546  0060  F007  FFE3   	movff	btemp,plusw1
  9430  01554C  0EF7               	movlw	-9
  9431  01554E  50E3               	movf	plusw1,w,c
  9432  015550  6E01               	movwf	btemp^0,c
  9433  015552  0EFF               	movlw	-1
  9434  015554  50E3               	movf	plusw1,w,c
  9435  015556  5A01               	subwfb	btemp^0,f,c
  9436  015558  0EF7               	movlw	-9
  9437  01555A  0060  F007  FFE3   	movff	btemp,plusw1
  9438  015560  0EFC               	movlw	252
  9439  015562  6E0B               	movwf	(btemp+10)^0,c
  9440  015564  0EFF               	movlw	255
  9441  015566  6E0C               	movwf	(btemp+11)^0,c
  9442                           
  9443                           ;stkvar	_n @ sp[(-4)+-6]
  9444  015568  0EF6               	movlw	-10
  9445  01556A  006F FF8C  F001    	movff	plusw1,btemp
  9446  015570  500B               	movf	(btemp+10)^0,w,c
  9447  015572  1601               	andwf	btemp^0,f,c
  9448  015574  0EF6               	movlw	-10
  9449  015576  0060  F007  FFE3   	movff	btemp,plusw1
  9450  01557C  0EF7               	movlw	-9
  9451  01557E  006F FF8C  F001    	movff	plusw1,btemp
  9452  015584  500C               	movf	(btemp+11)^0,w,c
  9453  015586  1601               	andwf	btemp^0,f,c
  9454  015588  0EF7               	movlw	-9
  9455  01558A  D02E               	goto	L6
  9456  01558C                     l10530:
  9457                           
  9458                           ;stkvar	_c @ sp[(-4)+-4]
  9459                           ;stkvar	_s @ sp[(-4)+0]
  9460  01558C  0EFC               	movlw	-4
  9461  01558E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9462  015594  0EFD               	movlw	-3
  9463  015596  006F FF8F FFDA     	movff	plusw1,fsr2h
  9464  01559C  0EF8               	movlw	-8
  9465  01559E  006F FF8F FFDF     	movff	plusw1,indf2
  9466                           
  9467                           ;stkvar	_n @ sp[(-4)+-6]
  9468  0155A4  0EF6               	movlw	-10
  9469  0155A6  006F FF8C  F001    	movff	plusw1,btemp
  9470  0155AC  0E01               	movlw	1
  9471  0155AE  5E01               	subwf	btemp^0,f,c
  9472  0155B0  0EF6               	movlw	-10
  9473  0155B2  0060  F007  FFE3   	movff	btemp,plusw1
  9474  0155B8  0EF7               	movlw	-9
  9475  0155BA  006F FF8C  F001    	movff	plusw1,btemp
  9476  0155C0  0E00               	movlw	0
  9477  0155C2  5A01               	subwfb	btemp^0,f,c
  9478  0155C4  0EF7               	movlw	-9
  9479  0155C6  0060  F007  FFE3   	movff	btemp,plusw1
  9480                           
  9481                           ;stkvar	_s @ sp[(-4)+0]
  9482  0155CC  0EFC               	movlw	-4
  9483  0155CE  50E3               	movf	plusw1,w,c
  9484  0155D0  0F01               	addlw	1
  9485  0155D2  6E01               	movwf	btemp^0,c
  9486  0155D4  0EFC               	movlw	-4
  9487  0155D6  0060  F007  FFE3   	movff	btemp,plusw1
  9488  0155DC  6A01               	clrf	btemp^0,c
  9489  0155DE  0EFD               	movlw	-3
  9490  0155E0  50E3               	movf	plusw1,w,c
  9491  0155E2  2001               	addwfc	btemp^0,w,c
  9492  0155E4  6E01               	movwf	btemp^0,c
  9493  0155E6  0EFD               	movlw	-3
  9494  0155E8                     L6:
  9495  0155E8  0060  F007  FFE3   	movff	btemp,plusw1
  9496                           
  9497                           ;stkvar	_n @ sp[(-4)+-6]
  9498  0155EE  0EF6               	movlw	-10
  9499  0155F0  006F FF8C  F001    	movff	plusw1,btemp
  9500  0155F6  0EF7               	movlw	-9
  9501  0155F8  50E3               	movf	plusw1,w,c
  9502  0155FA  1001               	iorwf	btemp^0,w,c
  9503  0155FC  A4D8               	btfss	status,2,c
  9504  0155FE  D7C6               	goto	l10530
  9505  015600                     u9480:
  9506                           
  9507                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9508  015600  0EF6               	movlw	246
  9509  015602  26E1               	addwf	fsr1l,f,c
  9510  015604  0EFF               	movlw	255
  9511  015606  22E2               	addwfc	fsr1h,f,c
  9512  015608  0012               	return		;funcret
  9513  01560A                     __end_of_memset:
  9514                           	opt callstack 0
  9515                           
  9516 ;; *************** function _printf *****************
  9517 ;; Defined at:
  9518 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  fmt             2  [STACK] PTR const unsigned char 
  9521 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;  ap              2  [STACK] PTR void [1]
  9524 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9525 ;;  ret             2    0        int 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  2  [STACK] int 
  9528 ;; Registers used:
  9529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9530 ;; Tracked objects:
  9531 ;;		On entry : 3F/3B
  9532 ;;		On exit  : 3F/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;Total ram usage:        0 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:   23
  9542 ;; This function calls:
  9543 ;;		_vfprintf
  9544 ;; This function is called by:
  9545 ;;		_eaDogM_WriteString
  9546 ;;		_send_lcd_cmd_dma
  9547 ;; This function uses a reentrant model
  9548 ;;
  9549                           
  9550                           	psect	text41
  9551  018D9A                     __ptext41:
  9552                           	opt callstack 0
  9553  018D9A                     _printf:
  9554                           	opt callstack 0
  9555                           
  9556                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9557  018D9A  52E6               	movf	postinc1,f,c
  9558  018D9C  52E6               	movf	postinc1,f,c
  9559                           
  9560                           ;stkvar	?_printf @ sp[(-2)+-3]
  9561                           
  9562                           ;incstack = 0
  9563  018D9E  0EFB               	movlw	251
  9564  018DA0  24E1               	addwf	fsr1l,w,c
  9565  018DA2  6E0B               	movwf	(btemp+10)^0,c
  9566  018DA4  0EFF               	movlw	255
  9567  018DA6  20E2               	addwfc	fsr1h,w,c
  9568  018DA8  6E0C               	movwf	(btemp+11)^0,c
  9569                           
  9570                           ;stkvar	_ap @ sp[(-2)+0]
  9571  018DAA  0EFF               	movlw	-1
  9572  018DAC  0060  F033  FFE3   	movff	btemp+11,plusw1
  9573  018DB2  0EFE               	movlw	-2
  9574  018DB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9575                           
  9576                           ;stkvar	_ap @ sp[(-2)+0]
  9577  018DBA  0EFE               	movlw	254
  9578  018DBC  24E1               	addwf	fsr1l,w,c
  9579  018DBE  6E01               	movwf	btemp^0,c
  9580  018DC0  0EFF               	movlw	255
  9581  018DC2  20E2               	addwfc	fsr1h,w,c
  9582  018DC4  6E02               	movwf	(btemp+1)^0,c
  9583  018DC6  0060  F007  FFE6   	movff	btemp,postinc1
  9584  018DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9585                           
  9586                           ;stkvar	_fmt @ sp[(-4)+-3]
  9587  018DD2  0EF9               	movlw	-7
  9588  018DD4  006F FF8F FFE6     	movff	plusw1,postinc1
  9589  018DDA  006F FF8F FFE6     	movff	plusw1,postinc1
  9590  018DE0  0E00               	movlw	0
  9591  018DE2  6EE6               	movwf	postinc1,c
  9592  018DE4  0E00               	movlw	0
  9593  018DE6  6EE6               	movwf	postinc1,c
  9594  018DE8  ECD0  F0C1         	call	_vfprintf	;wreg free
  9595                           
  9596                           ; BSR set to: 0
  9597                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9598  018DEC  52E5               	movf	postdec1,f,c
  9599  018DEE  52E5               	movf	postdec1,f,c
  9600  018DF0  52E5               	movf	postdec1,f,c
  9601  018DF2  50E7               	movf	indf1,w,c
  9602  018DF4  5EE1               	subwf	fsr1l,f,c
  9603  018DF6  0E00               	movlw	0
  9604  018DF8  5AE2               	subwfb	fsr1h,f,c
  9605  018DFA  0012               	return		;funcret
  9606  018DFC                     __end_of_printf:
  9607                           	opt callstack 0
  9608                           
  9609 ;; *************** function _vfprintf *****************
  9610 ;; Defined at:
  9611 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9614 ;;		 -> f(6), NULL(0), 
  9615 ;;  fmt             2  [STACK] PTR const unsigned char 
  9616 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
  9617 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9618 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9619 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9620 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9621 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9622 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9623 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9624 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9625 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9626 ;;		 -> STR_1(17), 
  9627 ;;  ap              2  [STACK] PTR PTR void 
  9628 ;;		 -> ap(2), ap(2), 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  cfmt            2  [STACK] PTR unsigned char 
  9631 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
  9632 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
  9633 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
  9634 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
  9635 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
  9636 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  9637 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  9638 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  9639 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  9640 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  9641 ;;		 -> STR_1(17), 
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  2  [STACK] int 
  9644 ;; Registers used:
  9645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/2
  9648 ;;		On exit  : 3F/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9655 ;;Total ram usage:        0 bytes
  9656 ;; Hardware stack levels used:    1
  9657 ;; Hardware stack levels required when called:   22
  9658 ;; This function calls:
  9659 ;;		_vfpfcnvrt
  9660 ;; This function is called by:
  9661 ;;		_sprintf
  9662 ;;		_printf
  9663 ;; This function uses a reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text42
  9667  0183A0                     __ptext42:
  9668                           	opt callstack 0
  9669  0183A0                     _vfprintf:
  9670                           	opt callstack 0
  9671                           
  9672                           ; BSR set to: 0
  9673                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9674  0183A0  52E6               	movf	postinc1,f,c
  9675  0183A2  52E6               	movf	postinc1,f,c
  9676                           
  9677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9678                           ;stkvar	_fmt @ sp[(-2)+-4]
  9679                           
  9680                           ;incstack = 0
  9681 ;; hardware stack exceeded
  9682  0183A4  0EFA               	movlw	-6
  9683  0183A6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9684  0183AC  0EFB               	movlw	-5
  9685  0183AE  006F FF8C  F00C    	movff	plusw1,btemp+11
  9686                           
  9687                           ;stkvar	_cfmt @ sp[(-2)+0]
  9688  0183B4  0EFF               	movlw	-1
  9689  0183B6  0060  F033  FFE3   	movff	btemp+11,plusw1
  9690  0183BC  0EFE               	movlw	-2
  9691  0183BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9692                           
  9693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9694  0183C4  0100               	movlb	0	; () banked
  9695  0183C6  6BC7               	clrf	_nout& (0+255),b
  9696  0183C8  6BC8               	clrf	(_nout+1)& (0+255),b
  9697                           
  9698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9699  0183CA  D021               	goto	l11272
  9700  0183CC                     l11270:
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9704                           ;stkvar	_ap @ sp[(-2)+-6]
  9705  0183CC  0EF8               	movlw	-8
  9706  0183CE  006F FF8F FFE6     	movff	plusw1,postinc1
  9707  0183D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9708                           
  9709                           ;stkvar	_cfmt @ sp[(-4)+0]
  9710  0183DA  0EFC               	movlw	252
  9711  0183DC  24E1               	addwf	fsr1l,w,c
  9712  0183DE  6E01               	movwf	btemp^0,c
  9713  0183E0  0EFF               	movlw	255
  9714  0183E2  20E2               	addwfc	fsr1h,w,c
  9715  0183E4  6E02               	movwf	(btemp+1)^0,c
  9716  0183E6  0060  F007  FFE6   	movff	btemp,postinc1
  9717  0183EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9718                           
  9719                           ;stkvar	_fp @ sp[(-6)+-2]
  9720  0183F2  0EF8               	movlw	-8
  9721  0183F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9722  0183FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9723  018400  EC22  F089         	call	_vfpfcnvrt	;wreg free
  9724  018404  5001               	movf	btemp^0,w,c
  9725  018406  0100               	movlb	0	; () banked
  9726  018408  27C7               	addwf	_nout& (0+255),f,b
  9727  01840A  5002               	movf	(btemp+1)^0,w,c
  9728  01840C  23C8               	addwfc	(_nout+1)& (0+255),f,b
  9729  01840E                     l11272:
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9733                           ;stkvar	_cfmt @ sp[(-2)+0]
  9734  01840E  50E1               	movf	fsr1l,w,c
  9735  018410  0FFE               	addlw	-2
  9736  018412  6ED9               	movwf	fsr2l,c
  9737  018414  50E2               	movf	fsr1h,w,c
  9738  018416  6EDA               	movwf	fsr2h,c
  9739  018418  0EFF               	movlw	255
  9740  01841A  22DA               	addwfc	fsr2h,f,c
  9741  01841C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9742  018422  006F FF77 FFF7     	movff	postdec2,tblptrh
  9743  018428                     	if	0	;tblptru may be non-zero
  9744  018428                     	endif
  9745  018428                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9746  018428  0E00               	movlw	low (__mediumconst shr (0+16))
  9747  01842A  6EF8               	movwf	tblptru,c
  9748  01842C                     	endif
  9749  01842C  0008               	tblrd		*
  9750  01842E  50F5               	movf	tablat,w,c
  9751  018430  0900               	iorlw	0
  9752  018432  A4D8               	btfss	status,2,c
  9753  018434  D7CB               	goto	l11270
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9757  018436  0060  F31C  F001   	movff	_nout,btemp
  9758  01843C  0060  F320  F002   	movff	_nout+1,btemp+1
  9759                           
  9760                           ; BSR set to: 0
  9761                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  9762  018442  0EF8               	movlw	248
  9763  018444  26E1               	addwf	fsr1l,f,c
  9764  018446  0EFF               	movlw	255
  9765  018448  22E2               	addwfc	fsr1h,f,c
  9766  01844A  0012               	return		;funcret
  9767  01844C                     __end_of_vfprintf:
  9768                           	opt callstack 0
  9769                           
  9770 ;; *************** function _vfpfcnvrt *****************
  9771 ;; Defined at:
  9772 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9775 ;;		 -> f(6), NULL(0), 
  9776 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9777 ;;		 -> cfmt(2), 
  9778 ;;  ap              2  [STACK] PTR PTR void 
  9779 ;;		 -> ap(2), ap(2), 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  llu             8  [STACK] unsigned long long 
  9782 ;;  ll              8  [STACK] long long 
  9783 ;;  f               4  [STACK] long long 
  9784 ;;  ct              3  [STACK] unsigned char [3]
  9785 ;;  vp              3    0        PTR void 
  9786 ;;  cp              2  [STACK] PTR unsigned char 
  9787 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  9788 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  9789 ;;		 -> STR_3(6), V(188), 
  9790 ;;  i               2    0        int 
  9791 ;;  done            2    0        int 
  9792 ;;  c               1  [STACK] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  2  [STACK] int 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9806 ;;Total ram usage:        0 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:   21
  9809 ;; This function calls:
  9810 ;;		_atoi
  9811 ;;		_ctoa
  9812 ;;		_dtoa
  9813 ;;		_efgtoa
  9814 ;;		_fputc
  9815 ;;		_isdigit
  9816 ;;		_isupper
  9817 ;;		_stoa
  9818 ;;		_strncmp
  9819 ;;		_tolower
  9820 ;;		_xtoa
  9821 ;; This function is called by:
  9822 ;;		_vfprintf
  9823 ;; This function uses a reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text43
  9827  011244                     __ptext43:
  9828                           	opt callstack 0
  9829  011244                     _vfpfcnvrt:
  9830                           	opt callstack 0
  9831                           
  9832                           ; BSR set to: 0
  9833                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9834  011244  0E20               	movlw	32
  9835  011246  26E1               	addwf	fsr1l,f,c
  9836  011248  0E00               	movlw	0
  9837  01124A  22E2               	addwfc	fsr1h,f,c
  9838                           
  9839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9840                           ;stkvar	_fmt @ sp[(-32)+-4]
  9841                           
  9842                           ;incstack = 0
  9843 ;; hardware stack exceeded
  9844  01124C  0EDC               	movlw	-36
  9845  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9846  011254  0EDD               	movlw	-35
  9847  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  9848  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9849  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  9850  011268                     	if	0	;tblptru may be non-zero
  9851  011268                     	endif
  9852  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9853  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  9854  01126A  6EF8               	movwf	tblptru,c
  9855  01126C                     	endif
  9856  01126C  0008               	tblrd		*
  9857  01126E  50F5               	movf	tablat,w,c
  9858  011270  0A25               	xorlw	37
  9859  011272  A4D8               	btfss	status,2,c
  9860  011274  EF92  F08E         	goto	l11216
  9861                           
  9862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9863                           ;stkvar	_fmt @ sp[(-32)+-4]
  9864  011278  0EDC               	movlw	-36
  9865  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9866  011280  0EDD               	movlw	-35
  9867  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  9868  011288  2ADE               	incf	postinc2,f,c
  9869  01128A  0E00               	movlw	0
  9870  01128C  22DD               	addwfc	postdec2,f,c
  9871                           
  9872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9873  01128E  6A21               	clrf	_width^0,c
  9874  011290  6A22               	clrf	(_width+1)^0,c
  9875  011292  6A25               	clrf	_flags^0,c
  9876  011294  6A26               	clrf	(_flags+1)^0,c
  9877                           
  9878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9879  011296  6823               	setf	_prec^0,c
  9880  011298  6824               	setf	(_prec+1)^0,c
  9881                           
  9882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  9883                           ;stkvar	_fmt @ sp[(-32)+-4]
  9884  01129A  0EDC               	movlw	-36
  9885  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9886  0112A2  0EDD               	movlw	-35
  9887  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9888  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9889  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9890  0112B6                     	if	0	;tblptru may be non-zero
  9891  0112B6                     	endif
  9892  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9893  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9894  0112B8  6EF8               	movwf	tblptru,c
  9895  0112BA                     	endif
  9896  0112BA  0008               	tblrd		*
  9897  0112BC  50F5               	movf	tablat,w,c
  9898  0112BE  0A2A               	xorlw	42
  9899  0112C0  A4D8               	btfss	status,2,c
  9900  0112C2  D031               	goto	l11080
  9901                           
  9902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9903                           ;stkvar	_fmt @ sp[(-32)+-4]
  9904  0112C4  0EDC               	movlw	-36
  9905  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9906  0112CC  0EDD               	movlw	-35
  9907  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9908  0112D4  2ADE               	incf	postinc2,f,c
  9909  0112D6  0E00               	movlw	0
  9910  0112D8  22DD               	addwfc	postdec2,f,c
  9911                           
  9912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9913                           ;stkvar	_ap @ sp[(-32)+-6]
  9914  0112DA  0EDA               	movlw	-38
  9915  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9916  0112E2  0EDB               	movlw	-37
  9917  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9918  0112EA  0E02               	movlw	2
  9919  0112EC  5EDE               	subwf	postinc2,f,c
  9920  0112EE  0E00               	movlw	0
  9921  0112F0  5ADD               	subwfb	postdec2,f,c
  9922  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9923  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9924  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9925  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9926  01130A  006F FF78  F021    	movff	postinc2,_width
  9927  011310  006F FF74  F022    	movff	postdec2,_width+1
  9928                           
  9929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9930  011316  AE22               	btfss	(_width+1)^0,7,c
  9931  011318  D066               	goto	u10540
  9932                           
  9933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9934  01131A  8025               	bsf	_flags^0,0,c
  9935                           
  9936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  9937  01131C  6C21               	negf	_width^0,c
  9938  01131E  1E22               	comf	(_width+1)^0,f,c
  9939  011320  B0D8               	btfsc	status,0,c
  9940  011322  2A22               	incf	(_width+1)^0,f,c
  9941  011324  D060               	goto	u10540
  9942  011326                     l11080:
  9943                           
  9944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  9945                           ;stkvar	_fmt @ sp[(-32)+-4]
  9946  011326  0EDC               	movlw	-36
  9947  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  9948  01132E  0EDD               	movlw	-35
  9949  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  9950  011336  006F FF78  F00B    	movff	postinc2,btemp+10
  9951  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
  9952  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9953  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
  9954  01134E  EC11  F0AF         	call	_atoi	;wreg free
  9955  011352  0060  F004  F021   	movff	btemp,_width
  9956  011358  0060  F008  F022   	movff	btemp+1,_width+1
  9957                           
  9958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9959  01135E  D00B               	goto	l11084
  9960  011360                     l11082:
  9961                           
  9962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  9963                           ;stkvar	_fmt @ sp[(-32)+-4]
  9964  011360  0EDC               	movlw	-36
  9965  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  9966  011368  0EDD               	movlw	-35
  9967  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9968  011370  2ADE               	incf	postinc2,f,c
  9969  011372  0E00               	movlw	0
  9970  011374  22DD               	addwfc	postdec2,f,c
  9971  011376                     l11084:
  9972  011376  0ED0               	movlw	208
  9973  011378  6E0B               	movwf	(btemp+10)^0,c
  9974  01137A  0EFF               	movlw	255
  9975  01137C  6E0C               	movwf	(btemp+11)^0,c
  9976                           
  9977                           ;stkvar	_fmt @ sp[(-32)+-4]
  9978  01137E  0EDC               	movlw	-36
  9979  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9980  011386  0EDD               	movlw	-35
  9981  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9982  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9983  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  9984  01139A                     	if	0	;tblptru may be non-zero
  9985  01139A                     	endif
  9986  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9987  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  9988  01139C  6EF8               	movwf	tblptru,c
  9989  01139E                     	endif
  9990  01139E  0008               	tblrd		*
  9991  0113A0  50F5               	movf	tablat,w,c
  9992  0113A2  6E09               	movwf	(btemp+8)^0,c
  9993  0113A4  6A0A               	clrf	(btemp+9)^0,c
  9994  0113A6  500B               	movf	(btemp+10)^0,w,c
  9995  0113A8  2609               	addwf	(btemp+8)^0,f,c
  9996  0113AA  500C               	movf	(btemp+11)^0,w,c
  9997  0113AC  220A               	addwfc	(btemp+9)^0,f,c
  9998  0113AE  500A               	movf	(btemp+9)^0,w,c
  9999  0113B0  E106               	bnz	u10520
 10000  0113B2  0E0A               	movlw	10
 10001  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10002  0113B6  B0D8               	btfsc	status,0,c
 10003  0113B8  D002               	goto	u10520
 10004  0113BA  0E01               	movlw	1
 10005  0113BC  D001               	goto	u10530
 10006  0113BE                     u10520:
 10007  0113BE  0E00               	movlw	0
 10008  0113C0                     u10530:
 10009  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10010  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10011                           
 10012                           ;stkvar	_vfpfcnvrt$5189 @ sp[(-32)+4]
 10013  0113C4  0EE4               	movlw	-28
 10014  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10015  0113CC  0EE5               	movlw	-27
 10016  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10017                           
 10018                           ;stkvar	_vfpfcnvrt$5189 @ sp[(-32)+4]
 10019  0113D4  0EE4               	movlw	-28
 10020  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10021  0113DC  0EE5               	movlw	-27
 10022  0113DE  50E3               	movf	plusw1,w,c
 10023  0113E0  1001               	iorwf	btemp^0,w,c
 10024  0113E2  A4D8               	btfss	status,2,c
 10025  0113E4  D7BD               	goto	l11082
 10026  0113E6                     u10540:
 10027                           
 10028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10029                           ;stkvar	_fmt @ sp[(-32)+-4]
 10030  0113E6  0EDC               	movlw	-36
 10031  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10032  0113EE  0EDD               	movlw	-35
 10033  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10034  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10035  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10036  011402                     	if	0	;tblptru may be non-zero
 10037  011402                     	endif
 10038  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10039  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10040  011404  6EF8               	movwf	tblptru,c
 10041  011406                     	endif
 10042  011406  0008               	tblrd		*
 10043  011408  50F5               	movf	tablat,w,c
 10044  01140A  0A2E               	xorlw	46
 10045  01140C  A4D8               	btfss	status,2,c
 10046  01140E  D0AC               	goto	u10590
 10047                           
 10048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10049  011410  6A23               	clrf	_prec^0,c
 10050  011412  6A24               	clrf	(_prec+1)^0,c
 10051                           
 10052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10053                           ;stkvar	_fmt @ sp[(-32)+-4]
 10054  011414  0EDC               	movlw	-36
 10055  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10056  01141C  0EDD               	movlw	-35
 10057  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10058  011424  2ADE               	incf	postinc2,f,c
 10059  011426  0E00               	movlw	0
 10060  011428  22DD               	addwfc	postdec2,f,c
 10061                           
 10062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10063                           ;stkvar	_fmt @ sp[(-32)+-4]
 10064  01142A  0EDC               	movlw	-36
 10065  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10066  011432  0EDD               	movlw	-35
 10067  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10068  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10069  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10070  011446                     	if	0	;tblptru may be non-zero
 10071  011446                     	endif
 10072  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10073  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10074  011448  6EF8               	movwf	tblptru,c
 10075  01144A                     	endif
 10076  01144A  0008               	tblrd		*
 10077  01144C  50F5               	movf	tablat,w,c
 10078  01144E  0A2A               	xorlw	42
 10079  011450  A4D8               	btfss	status,2,c
 10080  011452  D02A               	goto	l11102
 10081                           
 10082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10083                           ;stkvar	_fmt @ sp[(-32)+-4]
 10084  011454  0EDC               	movlw	-36
 10085  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10086  01145C  0EDD               	movlw	-35
 10087  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10088  011464  2ADE               	incf	postinc2,f,c
 10089  011466  0E00               	movlw	0
 10090  011468  22DD               	addwfc	postdec2,f,c
 10091                           
 10092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10093                           ;stkvar	_ap @ sp[(-32)+-6]
 10094  01146A  0EDA               	movlw	-38
 10095  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10096  011472  0EDB               	movlw	-37
 10097  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10098  01147A  0E02               	movlw	2
 10099  01147C  5EDE               	subwf	postinc2,f,c
 10100  01147E  0E00               	movlw	0
 10101  011480  5ADD               	subwfb	postdec2,f,c
 10102  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10103  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10104  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10105  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10106  01149A  006F FF78  F023    	movff	postinc2,_prec
 10107  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10108                           
 10109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10110  0114A6  D060               	goto	u10590
 10111  0114A8                     l11102:
 10112                           
 10113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10114                           ;stkvar	_fmt @ sp[(-32)+-4]
 10115  0114A8  0EDC               	movlw	-36
 10116  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10117  0114B0  0EDD               	movlw	-35
 10118  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10119  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10120  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10121  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10122  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10123  0114D0  EC11  F0AF         	call	_atoi	;wreg free
 10124  0114D4  0060  F004  F023   	movff	btemp,_prec
 10125  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10126                           
 10127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10128  0114E0  D00B               	goto	l11106
 10129  0114E2                     l11104:
 10130                           
 10131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10132                           ;stkvar	_fmt @ sp[(-32)+-4]
 10133  0114E2  0EDC               	movlw	-36
 10134  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10135  0114EA  0EDD               	movlw	-35
 10136  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10137  0114F2  2ADE               	incf	postinc2,f,c
 10138  0114F4  0E00               	movlw	0
 10139  0114F6  22DD               	addwfc	postdec2,f,c
 10140  0114F8                     l11106:
 10141  0114F8  0ED0               	movlw	208
 10142  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10143  0114FC  0EFF               	movlw	255
 10144  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10145                           
 10146                           ;stkvar	_fmt @ sp[(-32)+-4]
 10147  011500  0EDC               	movlw	-36
 10148  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10149  011508  0EDD               	movlw	-35
 10150  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10151  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10152  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10153  01151C                     	if	0	;tblptru may be non-zero
 10154  01151C                     	endif
 10155  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10156  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10157  01151E  6EF8               	movwf	tblptru,c
 10158  011520                     	endif
 10159  011520  0008               	tblrd		*
 10160  011522  50F5               	movf	tablat,w,c
 10161  011524  6E09               	movwf	(btemp+8)^0,c
 10162  011526  6A0A               	clrf	(btemp+9)^0,c
 10163  011528  500B               	movf	(btemp+10)^0,w,c
 10164  01152A  2609               	addwf	(btemp+8)^0,f,c
 10165  01152C  500C               	movf	(btemp+11)^0,w,c
 10166  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10167  011530  500A               	movf	(btemp+9)^0,w,c
 10168  011532  E106               	bnz	u10570
 10169  011534  0E0A               	movlw	10
 10170  011536  5C09               	subwf	(btemp+8)^0,w,c
 10171  011538  B0D8               	btfsc	status,0,c
 10172  01153A  D002               	goto	u10570
 10173  01153C  0E01               	movlw	1
 10174  01153E  D001               	goto	u10580
 10175  011540                     u10570:
 10176  011540  0E00               	movlw	0
 10177  011542                     u10580:
 10178  011542  6E0B               	movwf	(btemp+10)^0,c
 10179  011544  6A0C               	clrf	(btemp+11)^0,c
 10180                           
 10181                           ;stkvar	_vfpfcnvrt$5190 @ sp[(-32)+0]
 10182  011546  0EE0               	movlw	-32
 10183  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10184  01154E  0EE1               	movlw	-31
 10185  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10186                           
 10187                           ;stkvar	_vfpfcnvrt$5190 @ sp[(-32)+0]
 10188  011556  0EE0               	movlw	-32
 10189  011558  006F FF8C  F001    	movff	plusw1,btemp
 10190  01155E  0EE1               	movlw	-31
 10191  011560  50E3               	movf	plusw1,w,c
 10192  011562  1001               	iorwf	btemp^0,w,c
 10193  011564  A4D8               	btfss	status,2,c
 10194  011566  D7BD               	goto	l11104
 10195  011568                     u10590:
 10196                           
 10197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10198                           ;stkvar	_fmt @ sp[(-32)+-4]
 10199  011568  0EDC               	movlw	-36
 10200  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10201  011570  0EDD               	movlw	-35
 10202  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10203  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10204  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10205  011584                     	if	0	;tblptru may be non-zero
 10206  011584                     	endif
 10207  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10208  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10209  011586  6EF8               	movwf	tblptru,c
 10210  011588                     	endif
 10211  011588  0008               	tblrd		*
 10212  01158A  50F5               	movf	tablat,w,c
 10213  01158C  6EE6               	movwf	postinc1,c
 10214  01158E  0E00               	movlw	0
 10215  011590  6EE6               	movwf	postinc1,c
 10216  011592  EC16  F0C5         	call	_tolower	;wreg free
 10217                           
 10218                           ;stkvar	_ct @ sp[(-32)+26]
 10219  011596  0EFA               	movlw	-6
 10220  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10221                           
 10222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10223                           ;stkvar	_ct @ sp[(-32)+26]
 10224  01159E  0EFA               	movlw	-6
 10225  0115A0  50E3               	movf	plusw1,w,c
 10226  0115A2  B4D8               	btfsc	status,2,c
 10227  0115A4  D05B               	goto	l11122
 10228                           
 10229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10230                           ;stkvar	_ct @ sp[(-32)+26]
 10231  0115A6  0EFB               	movlw	251
 10232  0115A8  24E1               	addwf	fsr1l,w,c
 10233  0115AA  6ED9               	movwf	fsr2l,c
 10234  0115AC  0EFF               	movlw	255
 10235  0115AE  20E2               	addwfc	fsr1h,w,c
 10236  0115B0  6EDA               	movwf	fsr2h,c
 10237                           
 10238                           ;stkvar	_fmt @ sp[(-32)+-4]
 10239  0115B2  0EDC               	movlw	-36
 10240  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10241  0115BA  0EDD               	movlw	-35
 10242  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10243  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10244  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10245  0115CE  0E01               	movlw	1
 10246  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10247  0115D2  0E00               	movlw	0
 10248  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10249  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10250  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10251  0115E2                     	if	0	;tblptru may be non-zero
 10252  0115E2                     	endif
 10253  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10254  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10255  0115E4  6EF8               	movwf	tblptru,c
 10256  0115E6                     	endif
 10257  0115E6  0008               	tblrd		*
 10258  0115E8  50F5               	movf	tablat,w,c
 10259  0115EA  6EE6               	movwf	postinc1,c
 10260  0115EC  0E00               	movlw	0
 10261  0115EE  6EE6               	movwf	postinc1,c
 10262  0115F0  EC16  F0C5         	call	_tolower	;wreg free
 10263  0115F4  5001               	movf	btemp^0,w,c
 10264  0115F6  6EDF               	movwf	indf2,c
 10265                           
 10266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10267                           ;stkvar	_ct @ sp[(-32)+26]
 10268  0115F8  0EFB               	movlw	251
 10269  0115FA  24E1               	addwf	fsr1l,w,c
 10270  0115FC  6ED9               	movwf	fsr2l,c
 10271  0115FE  0EFF               	movlw	255
 10272  011600  20E2               	addwfc	fsr1h,w,c
 10273  011602  6EDA               	movwf	fsr2h,c
 10274  011604  50DF               	movf	indf2,w,c
 10275  011606  B4D8               	btfsc	status,2,c
 10276  011608  D029               	goto	l11122
 10277                           
 10278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10279                           ;stkvar	_ct @ sp[(-32)+26]
 10280  01160A  0EFC               	movlw	252
 10281  01160C  24E1               	addwf	fsr1l,w,c
 10282  01160E  6ED9               	movwf	fsr2l,c
 10283  011610  0EFF               	movlw	255
 10284  011612  20E2               	addwfc	fsr1h,w,c
 10285  011614  6EDA               	movwf	fsr2h,c
 10286                           
 10287                           ;stkvar	_fmt @ sp[(-32)+-4]
 10288  011616  0EDC               	movlw	-36
 10289  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10290  01161E  0EDD               	movlw	-35
 10291  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10292  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10293  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10294  011632  0E02               	movlw	2
 10295  011634  260B               	addwf	(btemp+10)^0,f,c
 10296  011636  0E00               	movlw	0
 10297  011638  220C               	addwfc	(btemp+11)^0,f,c
 10298  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10299  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10300  011646                     	if	0	;tblptru may be non-zero
 10301  011646                     	endif
 10302  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10303  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10304  011648  6EF8               	movwf	tblptru,c
 10305  01164A                     	endif
 10306  01164A  0008               	tblrd		*
 10307  01164C  50F5               	movf	tablat,w,c
 10308  01164E  6EE6               	movwf	postinc1,c
 10309  011650  0E00               	movlw	0
 10310  011652  6EE6               	movwf	postinc1,c
 10311  011654  EC16  F0C5         	call	_tolower	;wreg free
 10312  011658  5001               	movf	btemp^0,w,c
 10313  01165A  6EDF               	movwf	indf2,c
 10314  01165C                     l11122:
 10315                           
 10316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10317                           ;stkvar	_fmt @ sp[(-32)+-4]
 10318  01165C  0EDC               	movlw	-36
 10319  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10320  011664  0EDD               	movlw	-35
 10321  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10322  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10323  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10324  011678                     	if	0	;tblptru may be non-zero
 10325  011678                     	endif
 10326  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10327  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10328  01167A  6EF8               	movwf	tblptru,c
 10329  01167C                     	endif
 10330  01167C  0008               	tblrd		*
 10331  01167E  50F5               	movf	tablat,w,c
 10332  011680  0A63               	xorlw	99
 10333  011682  A4D8               	btfss	status,2,c
 10334  011684  D036               	goto	l11132
 10335                           
 10336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10337                           ;stkvar	_fmt @ sp[(-32)+-4]
 10338  011686  0EDC               	movlw	-36
 10339  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10340  01168E  0EDD               	movlw	-35
 10341  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10342  011696  2ADE               	incf	postinc2,f,c
 10343  011698  0E00               	movlw	0
 10344  01169A  22DD               	addwfc	postdec2,f,c
 10345                           
 10346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10347                           ;stkvar	_ap @ sp[(-32)+-6]
 10348  01169C  0EDA               	movlw	-38
 10349  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10350  0116A4  0EDB               	movlw	-37
 10351  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10352  0116AC  0E02               	movlw	2
 10353  0116AE  5EDE               	subwf	postinc2,f,c
 10354  0116B0  0E00               	movlw	0
 10355  0116B2  5ADD               	subwfb	postdec2,f,c
 10356  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10357  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10358  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10359  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10360  0116CC  50DF               	movf	indf2,w,c
 10361  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10362                           
 10363                           ;stkvar	_c @ sp[(-32)+31]
 10364  0116D0  0EFF               	movlw	-1
 10365  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10366                           
 10367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10368                           ;stkvar	_c @ sp[(-32)+31]
 10369  0116D8  0EFF               	movlw	-1
 10370  0116DA  50E3               	movf	plusw1,w,c
 10371  0116DC  6EE6               	movwf	postinc1,c
 10372                           
 10373                           ;stkvar	_fp @ sp[(-33)+-2]
 10374  0116DE  0EDD               	movlw	-35
 10375  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10376  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10377  0116EC  EC90  F0C4         	call	_ctoa	;wreg free
 10378  0116F0  D343               	goto	l2208
 10379  0116F2                     l11132:
 10380                           
 10381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10382                           ;stkvar	_fmt @ sp[(-32)+-4]
 10383  0116F2  0EDC               	movlw	-36
 10384  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10385  0116FA  0EDD               	movlw	-35
 10386  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10387  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
 10388  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
 10389  01170E                     	if	0	;tblptru may be non-zero
 10390  01170E                     	endif
 10391  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10392  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
 10393  011710  6EF8               	movwf	tblptru,c
 10394  011712                     	endif
 10395  011712  0008               	tblrd		*
 10396  011714  50F5               	movf	tablat,w,c
 10397  011716  0A64               	xorlw	100
 10398  011718  B4D8               	btfsc	status,2,c
 10399  01171A  D015               	goto	u10640
 10400                           
 10401                           ;stkvar	_fmt @ sp[(-32)+-4]
 10402  01171C  0EDC               	movlw	-36
 10403  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10404  011724  0EDD               	movlw	-35
 10405  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
 10406  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10407  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
 10408  011738                     	if	0	;tblptru may be non-zero
 10409  011738                     	endif
 10410  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10411  011738  0E00               	movlw	low (__mediumconst shr (0+16))
 10412  01173A  6EF8               	movwf	tblptru,c
 10413  01173C                     	endif
 10414  01173C  0008               	tblrd		*
 10415  01173E  50F5               	movf	tablat,w,c
 10416  011740  0A69               	xorlw	105
 10417  011742  A4D8               	btfss	status,2,c
 10418  011744  D075               	goto	l11144
 10419  011746                     u10640:
 10420                           
 10421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10422                           ;stkvar	_fmt @ sp[(-32)+-4]
 10423  011746  0EDC               	movlw	-36
 10424  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
 10425  01174E  0EDD               	movlw	-35
 10426  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
 10427  011756  2ADE               	incf	postinc2,f,c
 10428  011758  0E00               	movlw	0
 10429  01175A  22DD               	addwfc	postdec2,f,c
 10430                           
 10431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10432                           ;stkvar	_ap @ sp[(-32)+-6]
 10433  01175C  0EDA               	movlw	-38
 10434  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10435  011764  0EDB               	movlw	-37
 10436  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
 10437  01176C  0E02               	movlw	2
 10438  01176E  5EDE               	subwf	postinc2,f,c
 10439  011770  0E00               	movlw	0
 10440  011772  5ADD               	subwfb	postdec2,f,c
 10441  011774  006F FF78  F00B    	movff	postinc2,btemp+10
 10442  01177A  006F FF74  F00C    	movff	postdec2,btemp+11
 10443  011780  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10444  011786  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10445  01178C  006F FF78  F00B    	movff	postinc2,btemp+10
 10446  011792  006F FF74  F00C    	movff	postdec2,btemp+11
 10447                           
 10448                           ;stkvar	_ll @ sp[(-32)+14]
 10449  011798  0EEE               	movlw	-18
 10450  01179A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10451  0117A0  0EEF               	movlw	-17
 10452  0117A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10453  0117A8  6A01               	clrf	btemp^0,c
 10454  0117AA  BEE3               	btfsc	plusw1,7,c
 10455  0117AC  6801               	setf	btemp^0,c
 10456  0117AE  0EF0               	movlw	-16
 10457  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
 10458  0117B6  0EF1               	movlw	-15
 10459  0117B8  0060  F007  FFE3   	movff	btemp,plusw1
 10460  0117BE  0EF2               	movlw	-14
 10461  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
 10462  0117C6  0EF3               	movlw	-13
 10463  0117C8  0060  F007  FFE3   	movff	btemp,plusw1
 10464  0117CE  0EF4               	movlw	-12
 10465  0117D0  0060  F007  FFE3   	movff	btemp,plusw1
 10466  0117D6  0EF5               	movlw	-11
 10467  0117D8  0060  F007  FFE3   	movff	btemp,plusw1
 10468                           
 10469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10470                           ;stkvar	_ll @ sp[(-32)+14]
 10471  0117DE  50E1               	movf	fsr1l,w,c
 10472  0117E0  0FEE               	addlw	-18
 10473  0117E2  6ED9               	movwf	fsr2l,c
 10474  0117E4  50E2               	movf	fsr1h,w,c
 10475  0117E6  6EDA               	movwf	fsr2h,c
 10476  0117E8  0EFF               	movlw	255
 10477  0117EA  22DA               	addwfc	fsr2h,f,c
 10478  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
 10479  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
 10480  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
 10481  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
 10482  011804  006F FF7B FFE6     	movff	postinc2,postinc1
 10483  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
 10484  011810  006F FF7B FFE6     	movff	postinc2,postinc1
 10485  011816  006F FF7B FFE6     	movff	postinc2,postinc1
 10486                           
 10487                           ;stkvar	_fp @ sp[(-40)+-2]
 10488  01181C  0ED6               	movlw	-42
 10489  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
 10490  011824  006F FF8F FFE6     	movff	plusw1,postinc1
 10491  01182A  ECBC  F0A3         	call	_dtoa	;wreg free
 10492  01182E  D2A4               	goto	l2208
 10493  011830                     l11144:
 10494                           
 10495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10496                           ;stkvar	_ct @ sp[(-32)+26]
 10497  011830  0EFA               	movlw	-6
 10498  011832  006F FF8C  F001    	movff	plusw1,btemp
 10499  011838  0E66               	movlw	102
 10500  01183A  1801               	xorwf	btemp^0,w,c
 10501  01183C  A4D8               	btfss	status,2,c
 10502  01183E  D06E               	goto	l11156
 10503                           
 10504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10505                           ;stkvar	_fmt @ sp[(-32)+-4]
 10506  011840  0EDC               	movlw	-36
 10507  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
 10508  011848  0EDD               	movlw	-35
 10509  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10510  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
 10511  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
 10512  01185C                     	if	0	;tblptru may be non-zero
 10513  01185C                     	endif
 10514  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10515  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
 10516  01185E  6EF8               	movwf	tblptru,c
 10517  011860                     	endif
 10518                           
 10519                           ;stkvar	_c @ sp[(-32)+31]
 10520  011860  0008               	tblrd		*
 10521  011862  0EFF               	movlw	-1
 10522  011864  006F FFD7 FFE3     	movff	tablat,plusw1
 10523                           
 10524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10525                           ;stkvar	_fmt @ sp[(-32)+-4]
 10526  01186A  0EDC               	movlw	-36
 10527  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10528  011872  0EDD               	movlw	-35
 10529  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
 10530  01187A  2ADE               	incf	postinc2,f,c
 10531  01187C  0E00               	movlw	0
 10532  01187E  22DD               	addwfc	postdec2,f,c
 10533                           
 10534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10535                           ;stkvar	_ap @ sp[(-32)+-6]
 10536  011880  0EDA               	movlw	-38
 10537  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
 10538  011888  0EDB               	movlw	-37
 10539  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10540  011890  0E04               	movlw	4
 10541  011892  5EDE               	subwf	postinc2,f,c
 10542  011894  0E00               	movlw	0
 10543  011896  5ADD               	subwfb	postdec2,f,c
 10544  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10545  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10546  0118A4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10547  0118AA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10548  0118B0  006F FF78  F009    	movff	postinc2,btemp+8
 10549  0118B6  006F FF78  F00A    	movff	postinc2,btemp+9
 10550  0118BC  006F FF78  F00B    	movff	postinc2,btemp+10
 10551  0118C2  006F FF78  F00C    	movff	postinc2,btemp+11
 10552                           
 10553                           ;stkvar	_f @ sp[(-32)+22]
 10554  0118C8  0EF6               	movlw	-10
 10555  0118CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 10556  0118D0  0EF7               	movlw	-9
 10557  0118D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10558  0118D8  0EF8               	movlw	-8
 10559  0118DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10560  0118E0  0EF9               	movlw	-7
 10561  0118E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10562  0118E8                     l11152:
 10563                           
 10564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 10565                           ;stkvar	_c @ sp[(-32)+31]
 10566  0118E8  0EFF               	movlw	-1
 10567  0118EA  50E3               	movf	plusw1,w,c
 10568  0118EC  6EE6               	movwf	postinc1,c
 10569                           
 10570                           ;stkvar	_f @ sp[(-33)+22]
 10571  0118EE  0EF5               	movlw	-11
 10572  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10573  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10574  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10575  011902  006F FF8F FFE6     	movff	plusw1,postinc1
 10576                           
 10577                           ;stkvar	_fp @ sp[(-37)+-2]
 10578  011908  0ED9               	movlw	-39
 10579  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
 10580  011910  006F FF8F FFE6     	movff	plusw1,postinc1
 10581  011916  EC00  F080         	call	_efgtoa	;wreg free
 10582  01191A  D22E               	goto	l2208
 10583  01191C                     l11156:
 10584                           
 10585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10586  01191C  0E02               	movlw	2
 10587  01191E  6EE6               	movwf	postinc1,c
 10588  011920  0E00               	movlw	0
 10589  011922  6EE6               	movwf	postinc1,c
 10590  011924  0EF5               	movlw	low STR_55
 10591  011926  6EE6               	movwf	postinc1,c
 10592  011928  0EFF               	movlw	high STR_55
 10593  01192A  6EE6               	movwf	postinc1,c
 10594                           
 10595                           ;stkvar	_ct @ sp[(-36)+26]
 10596  01192C  0EF6               	movlw	246
 10597  01192E  24E1               	addwf	fsr1l,w,c
 10598  011930  6E01               	movwf	btemp^0,c
 10599  011932  0EFF               	movlw	255
 10600  011934  20E2               	addwfc	fsr1h,w,c
 10601  011936  6E02               	movwf	(btemp+1)^0,c
 10602  011938  0060  F007  FFE6   	movff	btemp,postinc1
 10603  01193E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10604  011944  EC76  F0B4         	call	_strncmp	;wreg free
 10605  011948  5001               	movf	btemp^0,w,c
 10606  01194A  1002               	iorwf	(btemp+1)^0,w,c
 10607  01194C  A4D8               	btfss	status,2,c
 10608  01194E  D096               	goto	l11176
 10609                           
 10610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10611                           ;stkvar	_fmt @ sp[(-32)+-4]
 10612  011950  0EDC               	movlw	-36
 10613  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
 10614  011958  0EDD               	movlw	-35
 10615  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10616  011960  006F FF78  F00B    	movff	postinc2,btemp+10
 10617  011966  006F FF74  F00C    	movff	postdec2,btemp+11
 10618  01196C  0E01               	movlw	1
 10619  01196E  260B               	addwf	(btemp+10)^0,f,c
 10620  011970  0E00               	movlw	0
 10621  011972  220C               	addwfc	(btemp+11)^0,f,c
 10622  011974  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10623  01197A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10624  011980                     	if	0	;tblptru may be non-zero
 10625  011980                     	endif
 10626  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10627  011980  0E00               	movlw	low (__mediumconst shr (0+16))
 10628  011982  6EF8               	movwf	tblptru,c
 10629  011984                     	endif
 10630                           
 10631                           ;stkvar	_c @ sp[(-32)+31]
 10632  011984  0008               	tblrd		*
 10633  011986  0EFF               	movlw	-1
 10634  011988  006F FFD7 FFE3     	movff	tablat,plusw1
 10635  01198E  0EBF               	movlw	191
 10636  011990  6E0B               	movwf	(btemp+10)^0,c
 10637  011992  0EFF               	movlw	255
 10638  011994  6E0C               	movwf	(btemp+11)^0,c
 10639                           
 10640                           ;stkvar	_fmt @ sp[(-32)+-4]
 10641  011996  0EDC               	movlw	-36
 10642  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
 10643  01199E  0EDD               	movlw	-35
 10644  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10645  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10646  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10647  0119B2                     	if	0	;tblptru may be non-zero
 10648  0119B2                     	endif
 10649  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10650  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
 10651  0119B4  6EF8               	movwf	tblptru,c
 10652  0119B6                     	endif
 10653  0119B6  0008               	tblrd		*
 10654  0119B8  50F5               	movf	tablat,w,c
 10655  0119BA  6E09               	movwf	(btemp+8)^0,c
 10656  0119BC  6A0A               	clrf	(btemp+9)^0,c
 10657  0119BE  500B               	movf	(btemp+10)^0,w,c
 10658  0119C0  2609               	addwf	(btemp+8)^0,f,c
 10659  0119C2  500C               	movf	(btemp+11)^0,w,c
 10660  0119C4  220A               	addwfc	(btemp+9)^0,f,c
 10661  0119C6  500A               	movf	(btemp+9)^0,w,c
 10662  0119C8  E106               	bnz	u10670
 10663  0119CA  0E1A               	movlw	26
 10664  0119CC  5C09               	subwf	(btemp+8)^0,w,c
 10665  0119CE  B0D8               	btfsc	status,0,c
 10666  0119D0  D002               	goto	u10670
 10667  0119D2  0E01               	movlw	1
 10668  0119D4  D001               	goto	u10680
 10669  0119D6                     u10670:
 10670  0119D6  0E00               	movlw	0
 10671  0119D8                     u10680:
 10672  0119D8  6E0B               	movwf	(btemp+10)^0,c
 10673  0119DA  6A0C               	clrf	(btemp+11)^0,c
 10674                           
 10675                           ;stkvar	_vfpfcnvrt$5196 @ sp[(-32)+2]
 10676  0119DC  0EE2               	movlw	-30
 10677  0119DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10678  0119E4  0EE3               	movlw	-29
 10679  0119E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 10680                           
 10681                           ;stkvar	_vfpfcnvrt$5196 @ sp[(-32)+2]
 10682  0119EC  0EE2               	movlw	-30
 10683  0119EE  006F FF8C  F001    	movff	plusw1,btemp
 10684  0119F4  0EE3               	movlw	-29
 10685  0119F6  50E3               	movf	plusw1,w,c
 10686  0119F8  1001               	iorwf	btemp^0,w,c
 10687                           
 10688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10689                           ;stkvar	_ap @ sp[(-32)+-6]
 10690                           
 10691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 10692                           
 10693                           ;stkvar	_f @ sp[(-32)+22]
 10694                           
 10695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 10696                           ;stkvar	_ap @ sp[(-32)+-6]
 10697  0119FA  0EDA               	movlw	-38
 10698  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10699  011A02  0EDB               	movlw	-37
 10700  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
 10701  011A0A  0E04               	movlw	4
 10702  011A0C  5EDE               	subwf	postinc2,f,c
 10703  011A0E  0E00               	movlw	0
 10704  011A10  5ADD               	subwfb	postdec2,f,c
 10705  011A12  006F FF78  F00B    	movff	postinc2,btemp+10
 10706  011A18  006F FF74  F00C    	movff	postdec2,btemp+11
 10707  011A1E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10708  011A24  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10709  011A2A  006F FF78  F009    	movff	postinc2,btemp+8
 10710  011A30  006F FF78  F00A    	movff	postinc2,btemp+9
 10711  011A36  006F FF78  F00B    	movff	postinc2,btemp+10
 10712  011A3C  006F FF78  F00C    	movff	postinc2,btemp+11
 10713                           
 10714                           ;stkvar	_f @ sp[(-32)+22]
 10715  011A42  0EF6               	movlw	-10
 10716  011A44  0060  F027  FFE3   	movff	btemp+8,plusw1
 10717  011A4A  0EF7               	movlw	-9
 10718  011A4C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10719  011A52  0EF8               	movlw	-8
 10720  011A54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10721  011A5A  0EF9               	movlw	-7
 10722  011A5C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10723                           
 10724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 10725                           ;stkvar	_fmt @ sp[(-32)+-4]
 10726  011A62  0EDC               	movlw	-36
 10727  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
 10728  011A6A  0EDD               	movlw	-35
 10729  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10730  011A72  0E02               	movlw	2
 10731  011A74  26DE               	addwf	postinc2,f,c
 10732  011A76  0E00               	movlw	0
 10733  011A78  22DD               	addwfc	postdec2,f,c
 10734  011A7A  D736               	goto	l11152
 10735  011A7C                     l11176:
 10736                           
 10737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 10738                           ;stkvar	_fmt @ sp[(-32)+-4]
 10739  011A7C  0EDC               	movlw	-36
 10740  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10741  011A84  0EDD               	movlw	-35
 10742  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 10743  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10744  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
 10745  011A98                     	if	0	;tblptru may be non-zero
 10746  011A98                     	endif
 10747  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10748  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
 10749  011A9A  6EF8               	movwf	tblptru,c
 10750  011A9C                     	endif
 10751  011A9C  0008               	tblrd		*
 10752  011A9E  50F5               	movf	tablat,w,c
 10753  011AA0  0A73               	xorlw	115
 10754  011AA2  A4D8               	btfss	status,2,c
 10755  011AA4  D042               	goto	l11186
 10756                           
 10757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 10758                           ;stkvar	_fmt @ sp[(-32)+-4]
 10759  011AA6  0EDC               	movlw	-36
 10760  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10761  011AAE  0EDD               	movlw	-35
 10762  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10763  011AB6  2ADE               	incf	postinc2,f,c
 10764  011AB8  0E00               	movlw	0
 10765  011ABA  22DD               	addwfc	postdec2,f,c
 10766                           
 10767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 10768                           ;stkvar	_ap @ sp[(-32)+-6]
 10769  011ABC  0EDA               	movlw	-38
 10770  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10771  011AC4  0EDB               	movlw	-37
 10772  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10773  011ACC  0E02               	movlw	2
 10774  011ACE  5EDE               	subwf	postinc2,f,c
 10775  011AD0  0E00               	movlw	0
 10776  011AD2  5ADD               	subwfb	postdec2,f,c
 10777  011AD4  006F FF78  F00B    	movff	postinc2,btemp+10
 10778  011ADA  006F FF74  F00C    	movff	postdec2,btemp+11
 10779  011AE0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10780  011AE6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10781  011AEC  006F FF78  F00B    	movff	postinc2,btemp+10
 10782  011AF2  006F FF74  F00C    	movff	postdec2,btemp+11
 10783                           
 10784                           ;stkvar	_cp @ sp[(-32)+29]
 10785  011AF8  0EFE               	movlw	-2
 10786  011AFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10787  011B00  0EFD               	movlw	-3
 10788  011B02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10789                           
 10790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 10791                           ;stkvar	_cp @ sp[(-32)+29]
 10792  011B08  0EFD               	movlw	-3
 10793  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10794  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
 10795                           
 10796                           ;stkvar	_fp @ sp[(-34)+-2]
 10797  011B16  0EDC               	movlw	-36
 10798  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
 10799  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 10800  011B24  EC72  F0AC         	call	_stoa	;wreg free
 10801  011B28  D127               	goto	l2208
 10802  011B2A                     l11186:
 10803                           
 10804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 10805                           ;stkvar	_fmt @ sp[(-32)+-4]
 10806  011B2A  0EDC               	movlw	-36
 10807  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10808  011B32  0EDD               	movlw	-35
 10809  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
 10810  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10811  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
 10812  011B46                     	if	0	;tblptru may be non-zero
 10813  011B46                     	endif
 10814  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10815  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
 10816  011B48  6EF8               	movwf	tblptru,c
 10817  011B4A                     	endif
 10818  011B4A  0008               	tblrd		*
 10819  011B4C  50F5               	movf	tablat,w,c
 10820  011B4E  0A78               	xorlw	120
 10821  011B50  B4D8               	btfsc	status,2,c
 10822  011B52  D015               	goto	u10720
 10823                           
 10824                           ;stkvar	_fmt @ sp[(-32)+-4]
 10825  011B54  0EDC               	movlw	-36
 10826  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
 10827  011B5C  0EDD               	movlw	-35
 10828  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10829  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
 10830  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10831  011B70                     	if	0	;tblptru may be non-zero
 10832  011B70                     	endif
 10833  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10834  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
 10835  011B72  6EF8               	movwf	tblptru,c
 10836  011B74                     	endif
 10837  011B74  0008               	tblrd		*
 10838  011B76  50F5               	movf	tablat,w,c
 10839  011B78  0A58               	xorlw	88
 10840  011B7A  A4D8               	btfss	status,2,c
 10841  011B7C  D094               	goto	l11200
 10842  011B7E                     u10720:
 10843                           
 10844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 10845                           ;stkvar	_fmt @ sp[(-32)+-4]
 10846  011B7E  0EDC               	movlw	-36
 10847  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
 10848  011B86  0EDD               	movlw	-35
 10849  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
 10850  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10851  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
 10852  011B9A                     	if	0	;tblptru may be non-zero
 10853  011B9A                     	endif
 10854  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10855  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 10856  011B9C  6EF8               	movwf	tblptru,c
 10857  011B9E                     	endif
 10858                           
 10859                           ;stkvar	_c @ sp[(-32)+31]
 10860  011B9E  0008               	tblrd		*
 10861  011BA0  0EFF               	movlw	-1
 10862  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
 10863                           
 10864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 10865                           ;stkvar	_fmt @ sp[(-32)+-4]
 10866  011BA8  0EDC               	movlw	-36
 10867  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10868  011BB0  0EDD               	movlw	-35
 10869  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10870  011BB8  2ADE               	incf	postinc2,f,c
 10871  011BBA  0E00               	movlw	0
 10872  011BBC  22DD               	addwfc	postdec2,f,c
 10873                           
 10874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 10875                           ;stkvar	_ap @ sp[(-32)+-6]
 10876  011BBE  0EDA               	movlw	-38
 10877  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10878  011BC6  0EDB               	movlw	-37
 10879  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10880  011BCE  0E02               	movlw	2
 10881  011BD0  5EDE               	subwf	postinc2,f,c
 10882  011BD2  0E00               	movlw	0
 10883  011BD4  5ADD               	subwfb	postdec2,f,c
 10884  011BD6  006F FF78  F00B    	movff	postinc2,btemp+10
 10885  011BDC  006F FF74  F00C    	movff	postdec2,btemp+11
 10886  011BE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10887  011BE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10888  011BEE  006F FF78  F00B    	movff	postinc2,btemp+10
 10889  011BF4  006F FF74  F00C    	movff	postdec2,btemp+11
 10890  011BFA  500B               	movf	(btemp+10)^0,w,c
 10891  011BFC  6E11               	movwf	(btemp+16)^0,c
 10892  011BFE  500C               	movf	(btemp+11)^0,w,c
 10893  011C00  6E12               	movwf	(btemp+17)^0,c
 10894  011C02  6A13               	clrf	(btemp+18)^0,c
 10895  011C04  6A14               	clrf	(btemp+19)^0,c
 10896  011C06  6A15               	clrf	(btemp+20)^0,c
 10897  011C08  6A16               	clrf	(btemp+21)^0,c
 10898  011C0A  6A17               	clrf	(btemp+22)^0,c
 10899  011C0C  6A18               	clrf	(btemp+23)^0,c
 10900                           
 10901                           ;stkvar	_llu @ sp[(-32)+6]
 10902  011C0E  0EE6               	movlw	-26
 10903  011C10  0060  F047  FFE3   	movff	btemp+16,plusw1
 10904  011C16  0EE7               	movlw	-25
 10905  011C18  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10906  011C1E  0EE8               	movlw	-24
 10907  011C20  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10908  011C26  0EE9               	movlw	-23
 10909  011C28  0060  F053  FFE3   	movff	btemp+19,plusw1
 10910  011C2E  0EEA               	movlw	-22
 10911  011C30  0060  F057  FFE3   	movff	btemp+20,plusw1
 10912  011C36  0EEB               	movlw	-21
 10913  011C38  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10914  011C3E  0EEC               	movlw	-20
 10915  011C40  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10916  011C46  0EED               	movlw	-19
 10917  011C48  0060  F063  FFE3   	movff	btemp+23,plusw1
 10918                           
 10919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 10920                           ;stkvar	_c @ sp[(-32)+31]
 10921  011C4E  0EFF               	movlw	-1
 10922  011C50  50E3               	movf	plusw1,w,c
 10923  011C52  6EE6               	movwf	postinc1,c
 10924                           
 10925                           ;stkvar	_llu @ sp[(-33)+6]
 10926  011C54  50E1               	movf	fsr1l,w,c
 10927  011C56  0FE5               	addlw	-27
 10928  011C58  6ED9               	movwf	fsr2l,c
 10929  011C5A  50E2               	movf	fsr1h,w,c
 10930  011C5C  6EDA               	movwf	fsr2h,c
 10931  011C5E  0EFF               	movlw	255
 10932  011C60  22DA               	addwfc	fsr2h,f,c
 10933  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
 10934  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
 10935  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 10936  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
 10937  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 10938  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
 10939  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
 10940  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 10941                           
 10942                           ;stkvar	_fp @ sp[(-41)+-2]
 10943  011C92  0ED5               	movlw	-43
 10944  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
 10945  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 10946  011CA0  ECFC  F0A5         	call	_xtoa	;wreg free
 10947  011CA4  D069               	goto	l2208
 10948  011CA6                     l11200:
 10949                           
 10950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10951                           ;stkvar	_fmt @ sp[(-32)+-4]
 10952  011CA6  0EDC               	movlw	-36
 10953  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10954  011CAE  0EDD               	movlw	-35
 10955  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10956  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10957  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10958  011CC2                     	if	0	;tblptru may be non-zero
 10959  011CC2                     	endif
 10960  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10961  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 10962  011CC4  6EF8               	movwf	tblptru,c
 10963  011CC6                     	endif
 10964  011CC6  0008               	tblrd		*
 10965  011CC8  50F5               	movf	tablat,w,c
 10966  011CCA  0A25               	xorlw	37
 10967  011CCC  A4D8               	btfss	status,2,c
 10968  011CCE  D01A               	goto	l11210
 10969                           
 10970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10971                           ;stkvar	_fmt @ sp[(-32)+-4]
 10972  011CD0  0EDC               	movlw	-36
 10973  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10974  011CD8  0EDD               	movlw	-35
 10975  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10976  011CE0  2ADE               	incf	postinc2,f,c
 10977  011CE2  0E00               	movlw	0
 10978  011CE4  22DD               	addwfc	postdec2,f,c
 10979                           
 10980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10981                           ;stkvar	_fp @ sp[(-32)+-2]
 10982  011CE6  0EDE               	movlw	-34
 10983  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10984  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10985  011CF4  0E25               	movlw	37
 10986  011CF6  6EE6               	movwf	postinc1,c
 10987  011CF8  0E00               	movlw	0
 10988  011CFA  6EE6               	movwf	postinc1,c
 10989  011CFC  ECAB  F0BB         	call	_fputc	;wreg free
 10990  011D00                     l11206:
 10991                           
 10992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10993  011D00  0E01               	movlw	1
 10994  011D02  D00C               	goto	L7
 10995  011D04                     l11210:
 10996                           
 10997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10998                           ;stkvar	_fmt @ sp[(-32)+-4]
 10999  011D04  0EDC               	movlw	-36
 11000  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11001  011D0C  0EDD               	movlw	-35
 11002  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11003  011D14  2ADE               	incf	postinc2,f,c
 11004  011D16  0E00               	movlw	0
 11005  011D18  22DD               	addwfc	postdec2,f,c
 11006                           
 11007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11008  011D1A  0E00               	movlw	0
 11009  011D1C                     L7:
 11010  011D1C  6E01               	movwf	btemp^0,c
 11011  011D1E  0E00               	movlw	0
 11012  011D20  6E02               	movwf	(btemp+1)^0,c
 11013  011D22  D02A               	goto	l2208
 11014  011D24                     l11216:
 11015                           
 11016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11017                           ;stkvar	_fp @ sp[(-32)+-2]
 11018  011D24  0EDE               	movlw	-34
 11019  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
 11020  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 11021                           
 11022                           ;stkvar	_fmt @ sp[(-34)+-4]
 11023  011D32  0EDA               	movlw	-38
 11024  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
 11025  011D3A  0EDB               	movlw	-37
 11026  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11027  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
 11028  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
 11029  011D4E                     	if	0	;tblptru may be non-zero
 11030  011D4E                     	endif
 11031  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11032  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 11033  011D50  6EF8               	movwf	tblptru,c
 11034  011D52                     	endif
 11035  011D52  0008               	tblrd		*
 11036  011D54  50F5               	movf	tablat,w,c
 11037  011D56  6EE6               	movwf	postinc1,c
 11038  011D58  0E00               	movlw	0
 11039  011D5A  6EE6               	movwf	postinc1,c
 11040  011D5C  ECAB  F0BB         	call	_fputc	;wreg free
 11041                           
 11042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11043                           ;stkvar	_fmt @ sp[(-32)+-4]
 11044  011D60  0EDC               	movlw	-36
 11045  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11046  011D68  0EDD               	movlw	-35
 11047  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11048  011D70  2ADE               	incf	postinc2,f,c
 11049  011D72  0E00               	movlw	0
 11050  011D74  22DD               	addwfc	postdec2,f,c
 11051  011D76  D7C4               	goto	l11206
 11052  011D78                     l2208:
 11053                           
 11054                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11055  011D78  0EDA               	movlw	218
 11056  011D7A  26E1               	addwf	fsr1l,f,c
 11057  011D7C  0EFF               	movlw	255
 11058  011D7E  22E2               	addwfc	fsr1h,f,c
 11059  011D80  0012               	return		;funcret
 11060  011D82                     __end_of_vfpfcnvrt:
 11061                           	opt callstack 0
 11062                           
 11063 ;; *************** function _xtoa *****************
 11064 ;; Defined at:
 11065 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11068 ;;		 -> f(6), NULL(0), 
 11069 ;;  d               8  [STACK] unsigned long long 
 11070 ;;  x               1  [STACK] unsigned char 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;  n               8  [STACK] unsigned long long 
 11073 ;;  c               2  [STACK] int 
 11074 ;;  i               2  [STACK] int 
 11075 ;;  w               2  [STACK] int 
 11076 ;;  p               2  [STACK] int 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  2  [STACK] int 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:   20
 11093 ;; This function calls:
 11094 ;;		_isalpha
 11095 ;;		_isupper
 11096 ;;		_pad
 11097 ;;		_toupper
 11098 ;; This function is called by:
 11099 ;;		_vfpfcnvrt
 11100 ;; This function uses a reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text44
 11104  014BF8                     __ptext44:
 11105                           	opt callstack 0
 11106  014BF8                     _xtoa:
 11107                           	opt callstack 0
 11108                           
 11109                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11110  014BF8  0E14               	movlw	20
 11111  014BFA  26E1               	addwf	fsr1l,f,c
 11112  014BFC  0E00               	movlw	0
 11113  014BFE  22E2               	addwfc	fsr1h,f,c
 11114                           
 11115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11116                           
 11117                           ;incstack = 0
 11118 ;; hardware stack exceeded
 11119  014C00  AE24               	btfss	(_prec+1)^0,7,c
 11120                           
 11121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11122  014C02  9225               	bcf	_flags^0,1,c
 11123                           
 11124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11125  014C04  BE24               	btfsc	(_prec+1)^0,7,c
 11126  014C06  D005               	goto	u10300
 11127  014C08  5024               	movf	(_prec+1)^0,w,c
 11128  014C0A  E110               	bnz	l10982
 11129  014C0C  0423               	decf	_prec^0,w,c
 11130  014C0E  B0D8               	btfsc	status,0,c
 11131  014C10  D00D               	goto	l10982
 11132  014C12                     u10300:
 11133  014C12  0E01               	movlw	1
 11134  014C14  6E0B               	movwf	(btemp+10)^0,c
 11135  014C16  0E00               	movlw	0
 11136  014C18  6E0C               	movwf	(btemp+11)^0,c
 11137                           
 11138                           ;stkvar	_p @ sp[(-20)+18]
 11139  014C1A  0EFE               	movlw	-2
 11140  014C1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11141  014C22  0EFF               	movlw	-1
 11142  014C24  0060  F033  FFE3   	movff	btemp+11,plusw1
 11143  014C2A  D008               	goto	l2158
 11144  014C2C                     l10982:
 11145                           
 11146                           ;stkvar	_p @ sp[(-20)+18]
 11147  014C2C  0EFE               	movlw	-2
 11148  014C2E  0060  F08F  FFE3   	movff	_prec,plusw1
 11149  014C34  0EFF               	movlw	-1
 11150  014C36  0060  F093  FFE3   	movff	_prec+1,plusw1
 11151  014C3C                     l2158:
 11152                           
 11153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11154                           ;stkvar	_w @ sp[(-20)+16]
 11155  014C3C  0EFC               	movlw	-4
 11156  014C3E  0060  F087  FFE3   	movff	_width,plusw1
 11157  014C44  0EFD               	movlw	-3
 11158  014C46  0060  F08B  FFE3   	movff	_width+1,plusw1
 11159                           
 11160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11161  014C4C  A825               	btfss	_flags^0,4,c
 11162  014C4E  D00B               	goto	l10988
 11163                           
 11164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11165                           ;stkvar	_w @ sp[(-20)+16]
 11166  014C50  50E1               	movf	fsr1l,w,c
 11167  014C52  0FFC               	addlw	-4
 11168  014C54  6ED9               	movwf	fsr2l,c
 11169  014C56  50E2               	movf	fsr1h,w,c
 11170  014C58  6EDA               	movwf	fsr2h,c
 11171  014C5A  0EFF               	movlw	255
 11172  014C5C  22DA               	addwfc	fsr2h,f,c
 11173  014C5E  0EFE               	movlw	254
 11174  014C60  26DE               	addwf	postinc2,f,c
 11175  014C62  0EFF               	movlw	255
 11176  014C64  22DD               	addwfc	postdec2,f,c
 11177  014C66                     l10988:
 11178                           
 11179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11180                           ;stkvar	_d @ sp[(-20)+-10]
 11181  014C66  0EE2               	movlw	226
 11182  014C68  24E1               	addwf	fsr1l,w,c
 11183  014C6A  6ED9               	movwf	fsr2l,c
 11184  014C6C  0EFF               	movlw	255
 11185  014C6E  20E2               	addwfc	fsr1h,w,c
 11186  014C70  6EDA               	movwf	fsr2h,c
 11187                           
 11188                           ;stkvar	_n @ sp[(-20)+4]
 11189  014C72  0E08               	movlw	8
 11190  014C74  6E01               	movwf	btemp^0,c
 11191  014C76  0EF0               	movlw	-16
 11192  014C78                     us1032999:
 11193  014C78  006F FF7B FFE3     	movff	postinc2,plusw1
 11194  014C7E  28E8               	incf	wreg,w,c
 11195  014C80  2E01               	decfsz	btemp^0,f,c
 11196  014C82  D7FA               	bra	us1032999
 11197                           
 11198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11199  014C84  0E4F               	movlw	79
 11200  014C86  6E0B               	movwf	(btemp+10)^0,c
 11201  014C88  0E00               	movlw	0
 11202  014C8A  6E0C               	movwf	(btemp+11)^0,c
 11203                           
 11204                           ;stkvar	_i @ sp[(-20)+14]
 11205  014C8C  0EFA               	movlw	-6
 11206  014C8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11207  014C94  0EFB               	movlw	-5
 11208  014C96  0060  F033  FFE3   	movff	btemp+11,plusw1
 11209                           
 11210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11211  014C9C  0103               	movlb	3	; () banked
 11212  014C9E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11213                           
 11214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11215  014CA0  D0EE               	goto	l11026
 11216  014CA2                     l10994:
 11217                           
 11218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11219                           ;stkvar	_i @ sp[(-20)+14]
 11220  014CA2  50E1               	movf	fsr1l,w,c
 11221  014CA4  0FFA               	addlw	-6
 11222  014CA6  6ED9               	movwf	fsr2l,c
 11223  014CA8  50E2               	movf	fsr1h,w,c
 11224  014CAA  6EDA               	movwf	fsr2h,c
 11225  014CAC  0EFF               	movlw	255
 11226  014CAE  22DA               	addwfc	fsr2h,f,c
 11227  014CB0  06DE               	decf	postinc2,f,c
 11228  014CB2  0E00               	movlw	0
 11229  014CB4  5ADD               	subwfb	postdec2,f,c
 11230                           
 11231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11232                           ;stkvar	_n @ sp[(-20)+4]
 11233  014CB6  0EF0               	movlw	-16
 11234  014CB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11235  014CBE  0EF1               	movlw	-15
 11236  014CC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11237  014CC6  0E0F               	movlw	15
 11238  014CC8  160B               	andwf	(btemp+10)^0,f,c
 11239  014CCA  0E00               	movlw	0
 11240  014CCC  160C               	andwf	(btemp+11)^0,f,c
 11241                           
 11242                           ;stkvar	_c @ sp[(-20)+12]
 11243  014CCE  0EF8               	movlw	-8
 11244  014CD0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11245  014CD6  0EF9               	movlw	-7
 11246  014CD8  0060  F033  FFE3   	movff	btemp+11,plusw1
 11247                           
 11248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11249                           ;stkvar	_c @ sp[(-20)+12]
 11250  014CDE  0EF9               	movlw	-7
 11251  014CE0  BEE3               	btfsc	plusw1,7,c
 11252  014CE2  D00F               	goto	l11002
 11253  014CE4  0EF9               	movlw	-7
 11254  014CE6  50E3               	movf	plusw1,w,c
 11255  014CE8  E108               	bnz	u10330
 11256  014CEA  0EF8               	movlw	-8
 11257  014CEC  006F FF8C  F001    	movff	plusw1,btemp
 11258  014CF2  0E0A               	movlw	10
 11259  014CF4  5E01               	subwf	btemp^0,f,c
 11260  014CF6  A0D8               	btfss	status,0,c
 11261  014CF8  D004               	goto	l11002
 11262  014CFA                     u10330:
 11263                           
 11264                           ;stkvar	_c @ sp[(-20)+12]
 11265  014CFA  0EF8               	movlw	-8
 11266  014CFC  50E3               	movf	plusw1,w,c
 11267  014CFE  0F57               	addlw	87
 11268  014D00  D003               	goto	L8
 11269  014D02                     l11002:
 11270                           
 11271                           ;stkvar	_c @ sp[(-20)+12]
 11272  014D02  0EF8               	movlw	-8
 11273  014D04  50E3               	movf	plusw1,w,c
 11274  014D06  0F30               	addlw	48
 11275  014D08                     L8:
 11276  014D08  6E0B               	movwf	(btemp+10)^0,c
 11277  014D0A  0EF9               	movlw	-7
 11278  014D0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11279  014D12  0E00               	movlw	0
 11280  014D14  220C               	addwfc	(btemp+11)^0,f,c
 11281                           
 11282                           ;stkvar	_c @ sp[(-20)+12]
 11283  014D16  0EF8               	movlw	-8
 11284  014D18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11285  014D1E  0EF9               	movlw	-7
 11286  014D20  0060  F033  FFE3   	movff	btemp+11,plusw1
 11287  014D26  0EBF               	movlw	191
 11288  014D28  6E0B               	movwf	(btemp+10)^0,c
 11289  014D2A  0EFF               	movlw	255
 11290  014D2C  6E0C               	movwf	(btemp+11)^0,c
 11291                           
 11292                           ;stkvar	_x @ sp[(-20)+-11]
 11293  014D2E  0EE1               	movlw	-31
 11294  014D30  50E3               	movf	plusw1,w,c
 11295  014D32  6E09               	movwf	(btemp+8)^0,c
 11296  014D34  6A0A               	clrf	(btemp+9)^0,c
 11297  014D36  500B               	movf	(btemp+10)^0,w,c
 11298  014D38  2609               	addwf	(btemp+8)^0,f,c
 11299  014D3A  500C               	movf	(btemp+11)^0,w,c
 11300  014D3C  220A               	addwfc	(btemp+9)^0,f,c
 11301  014D3E  500A               	movf	(btemp+9)^0,w,c
 11302  014D40  E106               	bnz	u10340
 11303  014D42  0E1A               	movlw	26
 11304  014D44  5C09               	subwf	(btemp+8)^0,w,c
 11305  014D46  B0D8               	btfsc	status,0,c
 11306  014D48  D002               	goto	u10340
 11307  014D4A  0E01               	movlw	1
 11308  014D4C  D001               	goto	u10350
 11309  014D4E                     u10340:
 11310  014D4E  0E00               	movlw	0
 11311  014D50                     u10350:
 11312  014D50  6E0B               	movwf	(btemp+10)^0,c
 11313  014D52  6A0C               	clrf	(btemp+11)^0,c
 11314                           
 11315                           ;stkvar	_xtoa$5174 @ sp[(-20)+2]
 11316  014D54  0EEE               	movlw	-18
 11317  014D56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11318  014D5C  0EEF               	movlw	-17
 11319  014D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11320                           
 11321                           ;stkvar	_xtoa$5174 @ sp[(-20)+2]
 11322  014D64  0EEE               	movlw	-18
 11323  014D66  006F FF8C  F001    	movff	plusw1,btemp
 11324  014D6C  0EEF               	movlw	-17
 11325  014D6E  50E3               	movf	plusw1,w,c
 11326  014D70  1001               	iorwf	btemp^0,w,c
 11327  014D72  B4D8               	btfsc	status,2,c
 11328  014D74  D041               	goto	l11018
 11329  014D76  0E9F               	movlw	159
 11330  014D78  6E0B               	movwf	(btemp+10)^0,c
 11331  014D7A  0EFF               	movlw	255
 11332  014D7C  6E0C               	movwf	(btemp+11)^0,c
 11333                           
 11334                           ;stkvar	_c @ sp[(-20)+12]
 11335  014D7E  0EF8               	movlw	-8
 11336  014D80  006F FF8C  F009    	movff	plusw1,btemp+8
 11337  014D86  0EF9               	movlw	-7
 11338  014D88  006F FF8C  F00A    	movff	plusw1,btemp+9
 11339  014D8E  0E20               	movlw	32
 11340  014D90  1209               	iorwf	(btemp+8)^0,f,c
 11341  014D92  0E00               	movlw	0
 11342  014D94  120A               	iorwf	(btemp+9)^0,f,c
 11343  014D96  500B               	movf	(btemp+10)^0,w,c
 11344  014D98  2609               	addwf	(btemp+8)^0,f,c
 11345  014D9A  500C               	movf	(btemp+11)^0,w,c
 11346  014D9C  220A               	addwfc	(btemp+9)^0,f,c
 11347  014D9E  500A               	movf	(btemp+9)^0,w,c
 11348  014DA0  E106               	bnz	u10370
 11349  014DA2  0E1A               	movlw	26
 11350  014DA4  5C09               	subwf	(btemp+8)^0,w,c
 11351  014DA6  B0D8               	btfsc	status,0,c
 11352  014DA8  D002               	goto	u10370
 11353  014DAA  0E01               	movlw	1
 11354  014DAC  D001               	goto	u10380
 11355  014DAE                     u10370:
 11356  014DAE  0E00               	movlw	0
 11357  014DB0                     u10380:
 11358  014DB0  6E0B               	movwf	(btemp+10)^0,c
 11359  014DB2  6A0C               	clrf	(btemp+11)^0,c
 11360                           
 11361                           ;stkvar	_xtoa$5175 @ sp[(-20)+0]
 11362  014DB4  0EEC               	movlw	-20
 11363  014DB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11364  014DBC  0EED               	movlw	-19
 11365  014DBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 11366                           
 11367                           ;stkvar	_xtoa$5175 @ sp[(-20)+0]
 11368  014DC4  0EEC               	movlw	-20
 11369  014DC6  006F FF8C  F001    	movff	plusw1,btemp
 11370  014DCC  0EED               	movlw	-19
 11371  014DCE  50E3               	movf	plusw1,w,c
 11372  014DD0  1001               	iorwf	btemp^0,w,c
 11373  014DD2  B4D8               	btfsc	status,2,c
 11374  014DD4  D011               	goto	l11018
 11375                           
 11376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 11377                           ;stkvar	_c @ sp[(-20)+12]
 11378  014DD6  0EF8               	movlw	-8
 11379  014DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 11380  014DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 11381  014DE4  ECD4  F0C4         	call	_toupper	;wreg free
 11382                           
 11383                           ;stkvar	_c @ sp[(-20)+12]
 11384  014DE8  0EF8               	movlw	-8
 11385  014DEA  0060  F007  FFE3   	movff	btemp,plusw1
 11386  014DF0  0EF9               	movlw	-7
 11387  014DF2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11388  014DF8                     l11018:
 11389                           
 11390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 11391                           ;stkvar	_c @ sp[(-20)+12]
 11392                           ;stkvar	_i @ sp[(-20)+14]
 11393  014DF8  0EFA               	movlw	-6
 11394  014DFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11395  014E00  0EFB               	movlw	-5
 11396  014E02  006F FF8C  F00C    	movff	plusw1,btemp+11
 11397  014E08  0E94               	movlw	low _dbuf
 11398  014E0A  240B               	addwf	(btemp+10)^0,w,c
 11399  014E0C  6ED9               	movwf	fsr2l,c
 11400  014E0E  0E03               	movlw	high _dbuf
 11401  014E10  200C               	addwfc	(btemp+11)^0,w,c
 11402  014E12  6EDA               	movwf	fsr2h,c
 11403  014E14  0EF8               	movlw	-8
 11404  014E16  006F FF8F FFDF     	movff	plusw1,indf2
 11405                           
 11406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 11407                           ;stkvar	_p @ sp[(-20)+18]
 11408  014E1C  50E1               	movf	fsr1l,w,c
 11409  014E1E  0FFE               	addlw	-2
 11410  014E20  6ED9               	movwf	fsr2l,c
 11411  014E22  50E2               	movf	fsr1h,w,c
 11412  014E24  6EDA               	movwf	fsr2h,c
 11413  014E26  0EFF               	movlw	255
 11414  014E28  22DA               	addwfc	fsr2h,f,c
 11415  014E2A  06DE               	decf	postinc2,f,c
 11416  014E2C  0E00               	movlw	0
 11417  014E2E  5ADD               	subwfb	postdec2,f,c
 11418                           
 11419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 11420                           ;stkvar	_w @ sp[(-20)+16]
 11421  014E30  50E1               	movf	fsr1l,w,c
 11422  014E32  0FFC               	addlw	-4
 11423  014E34  6ED9               	movwf	fsr2l,c
 11424  014E36  50E2               	movf	fsr1h,w,c
 11425  014E38  6EDA               	movwf	fsr2h,c
 11426  014E3A  0EFF               	movlw	255
 11427  014E3C  22DA               	addwfc	fsr2h,f,c
 11428  014E3E  06DE               	decf	postinc2,f,c
 11429  014E40  0E00               	movlw	0
 11430  014E42  5ADD               	subwfb	postdec2,f,c
 11431                           
 11432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 11433  014E44  0E04               	movlw	4
 11434  014E46  6E0C               	movwf	(btemp+11)^0,c
 11435                           
 11436                           ;stkvar	_n @ sp[(-20)+4]
 11437  014E48  50E1               	movf	fsr1l,w,c
 11438  014E4A  0FF0               	addlw	-16
 11439  014E4C  6ED9               	movwf	fsr2l,c
 11440  014E4E  50E2               	movf	fsr1h,w,c
 11441  014E50  6EDA               	movwf	fsr2h,c
 11442  014E52  0EFF               	movlw	255
 11443  014E54  22DA               	addwfc	fsr2h,f,c
 11444  014E56  280C               	incf	(btemp+11)^0,w,c
 11445  014E58  52DE               	movf	postinc2,f,c
 11446  014E5A  D00F               	goto	u10400
 11447  014E5C                     u10405:
 11448  014E5C  52DE               	movf	postinc2,f,c
 11449  014E5E  52DE               	movf	postinc2,f,c
 11450  014E60  52DE               	movf	postinc2,f,c
 11451  014E62  52DE               	movf	postinc2,f,c
 11452  014E64  52DE               	movf	postinc2,f,c
 11453  014E66  52DE               	movf	postinc2,f,c
 11454  014E68  90D8               	bcf	status,0,c
 11455  014E6A  32DD               	rrcf	postdec2,f,c
 11456  014E6C  32DD               	rrcf	postdec2,f,c
 11457  014E6E  32DD               	rrcf	postdec2,f,c
 11458  014E70  32DD               	rrcf	postdec2,f,c
 11459  014E72  32DD               	rrcf	postdec2,f,c
 11460  014E74  32DD               	rrcf	postdec2,f,c
 11461  014E76  32DD               	rrcf	postdec2,f,c
 11462  014E78  32DE               	rrcf	postinc2,f,c
 11463  014E7A                     u10400:
 11464  014E7A  2EE8               	decfsz	wreg,f,c
 11465  014E7C  D7EF               	goto	u10405
 11466  014E7E                     l11026:
 11467                           
 11468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11469                           ;stkvar	_i @ sp[(-20)+14]
 11470  014E7E  0EFB               	movlw	-5
 11471  014E80  BEE3               	btfsc	plusw1,7,c
 11472  014E82  D03A               	goto	u10450
 11473  014E84  0EFB               	movlw	-5
 11474  014E86  50E3               	movf	plusw1,w,c
 11475  014E88  E108               	bnz	u10410
 11476  014E8A  0EFA               	movlw	-6
 11477  014E8C  006F FF8C  F001    	movff	plusw1,btemp
 11478  014E92  0E02               	movlw	2
 11479  014E94  5E01               	subwf	btemp^0,f,c
 11480  014E96  A0D8               	btfss	status,0,c
 11481  014E98  D02F               	goto	u10450
 11482  014E9A                     u10410:
 11483                           
 11484                           ;stkvar	_n @ sp[(-20)+4]
 11485  014E9A  0EF0               	movlw	-16
 11486  014E9C  50E3               	movf	plusw1,w,c
 11487  014E9E  E115               	bnz	u10421
 11488  014EA0  0EF1               	movlw	-15
 11489  014EA2  50E3               	movf	plusw1,w,c
 11490  014EA4  E112               	bnz	u10421
 11491  014EA6  0EF2               	movlw	-14
 11492  014EA8  50E3               	movf	plusw1,w,c
 11493  014EAA  E10F               	bnz	u10421
 11494  014EAC  0EF3               	movlw	-13
 11495  014EAE  50E3               	movf	plusw1,w,c
 11496  014EB0  E10C               	bnz	u10421
 11497  014EB2  0EF4               	movlw	-12
 11498  014EB4  50E3               	movf	plusw1,w,c
 11499  014EB6  E109               	bnz	u10421
 11500  014EB8  0EF5               	movlw	-11
 11501  014EBA  50E3               	movf	plusw1,w,c
 11502  014EBC  E106               	bnz	u10421
 11503  014EBE  0EF6               	movlw	-10
 11504  014EC0  50E3               	movf	plusw1,w,c
 11505  014EC2  E103               	bnz	u10421
 11506  014EC4  0EF7               	movlw	-9
 11507  014EC6  50E3               	movf	plusw1,w,c
 11508  014EC8  A4D8               	btfss	status,2,c
 11509  014ECA                     u10421:
 11510  014ECA  D6EB               	goto	l10994
 11511                           
 11512                           ;stkvar	_p @ sp[(-20)+18]
 11513  014ECC  0EFF               	movlw	-1
 11514  014ECE  BEE3               	btfsc	plusw1,7,c
 11515  014ED0  D007               	goto	u10430
 11516  014ED2  0EFF               	movlw	-1
 11517  014ED4  50E3               	movf	plusw1,w,c
 11518  014ED6  E103               	bnz	u10431
 11519  014ED8  0EFE               	movlw	-2
 11520  014EDA  04E3               	decf	plusw1,w,c
 11521  014EDC  B0D8               	btfsc	status,0,c
 11522  014EDE                     u10431:
 11523  014EDE  D6E1               	goto	l10994
 11524  014EE0                     u10430:
 11525                           
 11526                           ;stkvar	_w @ sp[(-20)+16]
 11527  014EE0  0EFD               	movlw	-3
 11528  014EE2  BEE3               	btfsc	plusw1,7,c
 11529  014EE4  D009               	goto	u10450
 11530  014EE6  0EFD               	movlw	-3
 11531  014EE8  50E3               	movf	plusw1,w,c
 11532  014EEA  E104               	bnz	u10440
 11533  014EEC  0EFC               	movlw	-4
 11534  014EEE  04E3               	decf	plusw1,w,c
 11535  014EF0  A0D8               	btfss	status,0,c
 11536  014EF2  D002               	goto	u10450
 11537  014EF4                     u10440:
 11538  014EF4  B225               	btfsc	_flags^0,1,c
 11539  014EF6  D6D5               	goto	l10994
 11540  014EF8                     u10450:
 11541                           
 11542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 11543  014EF8  A825               	btfss	_flags^0,4,c
 11544  014EFA  D036               	goto	l11042
 11545                           
 11546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 11547                           ;stkvar	_i @ sp[(-20)+14]
 11548  014EFC  50E1               	movf	fsr1l,w,c
 11549  014EFE  0FFA               	addlw	-6
 11550  014F00  6ED9               	movwf	fsr2l,c
 11551  014F02  50E2               	movf	fsr1h,w,c
 11552  014F04  6EDA               	movwf	fsr2h,c
 11553  014F06  0EFF               	movlw	255
 11554  014F08  22DA               	addwfc	fsr2h,f,c
 11555  014F0A  06DE               	decf	postinc2,f,c
 11556  014F0C  0E00               	movlw	0
 11557  014F0E  5ADD               	subwfb	postdec2,f,c
 11558                           
 11559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 11560                           ;stkvar	_x @ sp[(-20)+-11]
 11561                           ;stkvar	_i @ sp[(-20)+14]
 11562  014F10  0EFA               	movlw	-6
 11563  014F12  006F FF8C  F00B    	movff	plusw1,btemp+10
 11564  014F18  0EFB               	movlw	-5
 11565  014F1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11566  014F20  0E94               	movlw	low _dbuf
 11567  014F22  240B               	addwf	(btemp+10)^0,w,c
 11568  014F24  6ED9               	movwf	fsr2l,c
 11569  014F26  0E03               	movlw	high _dbuf
 11570  014F28  200C               	addwfc	(btemp+11)^0,w,c
 11571  014F2A  6EDA               	movwf	fsr2h,c
 11572  014F2C  0EE1               	movlw	-31
 11573  014F2E  006F FF8F FFDF     	movff	plusw1,indf2
 11574                           
 11575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 11576                           ;stkvar	_i @ sp[(-20)+14]
 11577  014F34  50E1               	movf	fsr1l,w,c
 11578  014F36  0FFA               	addlw	-6
 11579  014F38  6ED9               	movwf	fsr2l,c
 11580  014F3A  50E2               	movf	fsr1h,w,c
 11581  014F3C  6EDA               	movwf	fsr2h,c
 11582  014F3E  0EFF               	movlw	255
 11583  014F40  22DA               	addwfc	fsr2h,f,c
 11584  014F42  06DE               	decf	postinc2,f,c
 11585  014F44  0E00               	movlw	0
 11586  014F46  5ADD               	subwfb	postdec2,f,c
 11587                           
 11588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 11589                           ;stkvar	_i @ sp[(-20)+14]
 11590  014F48  0EFA               	movlw	-6
 11591  014F4A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11592  014F50  0EFB               	movlw	-5
 11593  014F52  006F FF8C  F00C    	movff	plusw1,btemp+11
 11594  014F58  0E94               	movlw	low _dbuf
 11595  014F5A  240B               	addwf	(btemp+10)^0,w,c
 11596  014F5C  6ED9               	movwf	fsr2l,c
 11597  014F5E  0E03               	movlw	high _dbuf
 11598  014F60  200C               	addwfc	(btemp+11)^0,w,c
 11599  014F62  6EDA               	movwf	fsr2h,c
 11600  014F64  0E30               	movlw	48
 11601  014F66  6EDF               	movwf	indf2,c
 11602  014F68                     l11042:
 11603                           
 11604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 11605                           ;stkvar	_w @ sp[(-20)+16]
 11606  014F68  0EFC               	movlw	-4
 11607  014F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11608  014F70  006F FF8F FFE6     	movff	plusw1,postinc1
 11609                           
 11610                           ;stkvar	_i @ sp[(-22)+14]
 11611  014F76  0E94               	movlw	low _dbuf
 11612  014F78  6E0B               	movwf	(btemp+10)^0,c
 11613  014F7A  0E03               	movlw	high _dbuf
 11614  014F7C  6E0C               	movwf	(btemp+11)^0,c
 11615  014F7E  0EF8               	movlw	-8
 11616  014F80  50E3               	movf	plusw1,w,c
 11617  014F82  260B               	addwf	(btemp+10)^0,f,c
 11618  014F84  0EF9               	movlw	-7
 11619  014F86  50E3               	movf	plusw1,w,c
 11620  014F88  220C               	addwfc	(btemp+11)^0,f,c
 11621  014F8A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11622  014F90  0060  F033  FFE6   	movff	btemp+11,postinc1
 11623                           
 11624                           ;stkvar	_fp @ sp[(-24)+-2]
 11625  014F96  0EE6               	movlw	-26
 11626  014F98  006F FF8F FFE6     	movff	plusw1,postinc1
 11627  014F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11628  014FA4  ECC9  F0BC         	call	_pad	;wreg free
 11629                           
 11630                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 11631  014FA8  0EE1               	movlw	225
 11632  014FAA  26E1               	addwf	fsr1l,f,c
 11633  014FAC  0EFF               	movlw	255
 11634  014FAE  22E2               	addwfc	fsr1h,f,c
 11635  014FB0  0012               	return		;funcret
 11636  014FB2                     __end_of_xtoa:
 11637                           	opt callstack 0
 11638                           
 11639 ;; *************** function _toupper *****************
 11640 ;; Defined at:
 11641 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  c               2  [STACK] int 
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;		None
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  2  [STACK] int 
 11648 ;; Registers used:
 11649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/3
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11659 ;;Total ram usage:        0 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:   16
 11662 ;; This function calls:
 11663 ;;		_islower
 11664 ;; This function is called by:
 11665 ;;		_xtoa
 11666 ;; This function uses a reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text45
 11670  0189A8                     __ptext45:
 11671                           	opt callstack 0
 11672  0189A8                     _toupper:
 11673                           	opt callstack 0
 11674                           
 11675                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11676  0189A8  52E6               	movf	postinc1,f,c
 11677  0189AA  52E6               	movf	postinc1,f,c
 11678                           
 11679                           ;stkvar	_c @ sp[(-2)+-2]
 11680                           
 11681                           ;incstack = 0
 11682 ;; hardware stack exceeded
 11683  0189AC  0EFC               	movlw	-4
 11684  0189AE  50E3               	movf	plusw1,w,c
 11685  0189B0  0F9F               	addlw	159
 11686  0189B2  6E0B               	movwf	(btemp+10)^0,c
 11687  0189B4  0EFD               	movlw	-3
 11688  0189B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11689  0189BC  0EFF               	movlw	255
 11690  0189BE  220C               	addwfc	(btemp+11)^0,f,c
 11691  0189C0  500C               	movf	(btemp+11)^0,w,c
 11692  0189C2  E106               	bnz	u5490
 11693  0189C4  0E1A               	movlw	26
 11694  0189C6  5C0B               	subwf	(btemp+10)^0,w,c
 11695  0189C8  B0D8               	btfsc	status,0,c
 11696  0189CA  D002               	goto	u5490
 11697  0189CC  0E01               	movlw	1
 11698  0189CE  D001               	goto	u5500
 11699  0189D0                     u5490:
 11700  0189D0  0E00               	movlw	0
 11701  0189D2                     u5500:
 11702  0189D2  6E0B               	movwf	(btemp+10)^0,c
 11703  0189D4  6A0C               	clrf	(btemp+11)^0,c
 11704                           
 11705                           ;stkvar	_toupper$5950 @ sp[(-2)+0]
 11706  0189D6  0EFE               	movlw	-2
 11707  0189D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11708  0189DE  0EFF               	movlw	-1
 11709  0189E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 11710                           
 11711                           ;stkvar	_toupper$5950 @ sp[(-2)+0]
 11712  0189E6  0EFE               	movlw	-2
 11713  0189E8  006F FF8C  F001    	movff	plusw1,btemp
 11714  0189EE  0EFF               	movlw	-1
 11715  0189F0  50E3               	movf	plusw1,w,c
 11716  0189F2  1001               	iorwf	btemp^0,w,c
 11717  0189F4  B4D8               	btfsc	status,2,c
 11718  0189F6  D00D               	goto	l7280
 11719                           
 11720                           ;stkvar	_c @ sp[(-2)+-2]
 11721  0189F8  0EFC               	movlw	-4
 11722  0189FA  006F FF8C  F001    	movff	plusw1,btemp
 11723  018A00  0EFD               	movlw	-3
 11724  018A02  006F FF8C  F002    	movff	plusw1,btemp+1
 11725  018A08  0E5F               	movlw	95
 11726  018A0A  1601               	andwf	btemp^0,f,c
 11727  018A0C  0E00               	movlw	0
 11728  018A0E  1602               	andwf	(btemp+1)^0,f,c
 11729  018A10  D008               	goto	l3312
 11730  018A12                     l7280:
 11731                           
 11732                           ;stkvar	_c @ sp[(-2)+-2]
 11733  018A12  0EFC               	movlw	-4
 11734  018A14  006F FF8C  F001    	movff	plusw1,btemp
 11735  018A1A  0EFD               	movlw	-3
 11736  018A1C  006F FF8C  F002    	movff	plusw1,btemp+1
 11737  018A22                     l3312:
 11738                           
 11739                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11740  018A22  52E5               	movf	postdec1,f,c
 11741  018A24  52E5               	movf	postdec1,f,c
 11742  018A26  52E5               	movf	postdec1,f,c
 11743  018A28  52E5               	movf	postdec1,f,c
 11744  018A2A  0012               	return		;funcret
 11745  018A2C                     __end_of_toupper:
 11746                           	opt callstack 0
 11747                           
 11748 ;; *************** function _islower *****************
 11749 ;; Defined at:
 11750 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  c               2  [STACK] int 
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;		None
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  2  [STACK] int 
 11757 ;; Registers used:
 11758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11768 ;;Total ram usage:        0 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:   15
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_toupper
 11775 ;; This function uses a reentrant model
 11776 ;;
 11777                           
 11778                           	psect	text46
 11779  01959E                     __ptext46:
 11780                           	opt callstack 0
 11781  01959E                     _islower:
 11782                           	opt callstack 0
 11783                           
 11784                           ;stkvar	_c @ sp[(0)+-2]
 11785                           
 11786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11787                           ;incstack = 0
 11788 ;; hardware stack exceeded
 11789  01959E  0EFE               	movlw	-2
 11790  0195A0  50E3               	movf	plusw1,w,c
 11791  0195A2  0F9F               	addlw	159
 11792  0195A4  6E0B               	movwf	(btemp+10)^0,c
 11793  0195A6  0EFF               	movlw	-1
 11794  0195A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11795  0195AE  0EFF               	movlw	255
 11796  0195B0  220C               	addwfc	(btemp+11)^0,f,c
 11797  0195B2  500C               	movf	(btemp+11)^0,w,c
 11798  0195B4  E106               	bnz	u5180
 11799  0195B6  0E1A               	movlw	26
 11800  0195B8  5C0B               	subwf	(btemp+10)^0,w,c
 11801  0195BA  B0D8               	btfsc	status,0,c
 11802  0195BC  D002               	goto	u5180
 11803  0195BE  0E01               	movlw	1
 11804  0195C0  D001               	goto	u5190
 11805  0195C2                     u5180:
 11806  0195C2  0E00               	movlw	0
 11807  0195C4                     u5190:
 11808  0195C4  6E01               	movwf	btemp^0,c
 11809  0195C6  6A02               	clrf	(btemp+1)^0,c
 11810                           
 11811                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11812  0195C8  52E5               	movf	postdec1,f,c
 11813  0195CA  52E5               	movf	postdec1,f,c
 11814  0195CC  0012               	return		;funcret
 11815  0195CE                     __end_of_islower:
 11816                           	opt callstack 0
 11817                           
 11818 ;; *************** function _isalpha *****************
 11819 ;; Defined at:
 11820 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;  c               2  [STACK] int 
 11823 ;; Auto vars:     Size  Location     Type
 11824 ;;		None
 11825 ;; Return value:  Size  Location     Type
 11826 ;;                  2  [STACK] int 
 11827 ;; Registers used:
 11828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 11829 ;; Tracked objects:
 11830 ;;		On entry : 0/0
 11831 ;;		On exit  : 0/0
 11832 ;;		Unchanged: 0/0
 11833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;Total ram usage:        0 bytes
 11839 ;; Hardware stack levels used:    1
 11840 ;; Hardware stack levels required when called:   15
 11841 ;; This function calls:
 11842 ;;		Nothing
 11843 ;; This function is called by:
 11844 ;;		_xtoa
 11845 ;; This function uses a reentrant model
 11846 ;;
 11847                           
 11848                           	psect	text47
 11849  01929E                     __ptext47:
 11850                           	opt callstack 0
 11851  01929E                     _isalpha:
 11852                           	opt callstack 0
 11853                           
 11854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11855                           ;incstack = 0
 11856 ;; hardware stack exceeded
 11857  01929E  0E9F               	movlw	159
 11858  0192A0  6E0B               	movwf	(btemp+10)^0,c
 11859  0192A2  0EFF               	movlw	255
 11860  0192A4  6E0C               	movwf	(btemp+11)^0,c
 11861                           
 11862                           ;stkvar	_c @ sp[(0)+-2]
 11863  0192A6  0EFE               	movlw	-2
 11864  0192A8  006F FF8C  F009    	movff	plusw1,btemp+8
 11865  0192AE  0EFF               	movlw	-1
 11866  0192B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 11867  0192B6  0E20               	movlw	32
 11868  0192B8  1209               	iorwf	(btemp+8)^0,f,c
 11869  0192BA  0E00               	movlw	0
 11870  0192BC  120A               	iorwf	(btemp+9)^0,f,c
 11871  0192BE  500B               	movf	(btemp+10)^0,w,c
 11872  0192C0  2609               	addwf	(btemp+8)^0,f,c
 11873  0192C2  500C               	movf	(btemp+11)^0,w,c
 11874  0192C4  220A               	addwfc	(btemp+9)^0,f,c
 11875  0192C6  500A               	movf	(btemp+9)^0,w,c
 11876  0192C8  E106               	bnz	u5470
 11877  0192CA  0E1A               	movlw	26
 11878  0192CC  5C09               	subwf	(btemp+8)^0,w,c
 11879  0192CE  B0D8               	btfsc	status,0,c
 11880  0192D0  D002               	goto	u5470
 11881  0192D2  0E01               	movlw	1
 11882  0192D4  D001               	goto	u5480
 11883  0192D6                     u5470:
 11884  0192D6  0E00               	movlw	0
 11885  0192D8                     u5480:
 11886  0192D8  6E01               	movwf	btemp^0,c
 11887  0192DA  6A02               	clrf	(btemp+1)^0,c
 11888                           
 11889                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11890  0192DC  52E5               	movf	postdec1,f,c
 11891  0192DE  52E5               	movf	postdec1,f,c
 11892  0192E0  0012               	return		;funcret
 11893  0192E2                     __end_of_isalpha:
 11894                           	opt callstack 0
 11895                           
 11896 ;; *************** function _strncmp *****************
 11897 ;; Defined at:
 11898 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  _l              2  [STACK] PTR const unsigned char 
 11901 ;;		 -> ct(3), 
 11902 ;;  _r              2  [STACK] PTR const unsigned char 
 11903 ;;		 -> STR_57(3), 
 11904 ;;  n               2  [STACK] unsigned int 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;  r               2  [STACK] PTR const unsigned char 
 11907 ;;		 -> STR_57(3), 
 11908 ;;  l               2  [STACK] PTR const unsigned char 
 11909 ;;		 -> ct(3), 
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  2  [STACK] int 
 11912 ;; Registers used:
 11913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 11914 ;; Tracked objects:
 11915 ;;		On entry : 0/0
 11916 ;;		On exit  : 0/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11923 ;;Total ram usage:        0 bytes
 11924 ;; Hardware stack levels used:    1
 11925 ;; Hardware stack levels required when called:   15
 11926 ;; This function calls:
 11927 ;;		Nothing
 11928 ;; This function is called by:
 11929 ;;		_vfpfcnvrt
 11930 ;; This function uses a reentrant model
 11931 ;;
 11932                           
 11933                           	psect	text48
 11934  0168EC                     __ptext48:
 11935                           	opt callstack 0
 11936  0168EC                     _strncmp:
 11937                           	opt callstack 0
 11938                           
 11939                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11940  0168EC  52E6               	movf	postinc1,f,c
 11941  0168EE  52E6               	movf	postinc1,f,c
 11942  0168F0  52E6               	movf	postinc1,f,c
 11943  0168F2  52E6               	movf	postinc1,f,c
 11944                           
 11945                           ;stkvar	__l @ sp[(-4)+-2]
 11946                           
 11947                           ;incstack = 0
 11948 ;; hardware stack exceeded
 11949  0168F4  0EFA               	movlw	-6
 11950  0168F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11951  0168FC  0EFB               	movlw	-5
 11952  0168FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11953                           
 11954                           ;stkvar	_l @ sp[(-4)+2]
 11955  016904  0EFF               	movlw	-1
 11956  016906  0060  F033  FFE3   	movff	btemp+11,plusw1
 11957  01690C  0EFE               	movlw	-2
 11958  01690E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11959                           
 11960                           ;stkvar	__r @ sp[(-4)+-4]
 11961  016914  0EF8               	movlw	-8
 11962  016916  006F FF8C  F00B    	movff	plusw1,btemp+10
 11963  01691C  0EF9               	movlw	-7
 11964  01691E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11965                           
 11966                           ;stkvar	_r @ sp[(-4)+0]
 11967  016924  0EFD               	movlw	-3
 11968  016926  0060  F033  FFE3   	movff	btemp+11,plusw1
 11969  01692C  0EFC               	movlw	-4
 11970  01692E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11971                           
 11972                           ;stkvar	_n @ sp[(-4)+-6]
 11973  016934  0EF6               	movlw	-10
 11974  016936  006F FF8C  F001    	movff	plusw1,btemp
 11975  01693C  0E01               	movlw	1
 11976  01693E  5E01               	subwf	btemp^0,f,c
 11977  016940  0EF6               	movlw	-10
 11978  016942  0060  F007  FFE3   	movff	btemp,plusw1
 11979  016948  0EF7               	movlw	-9
 11980  01694A  006F FF8C  F001    	movff	plusw1,btemp
 11981  016950  0E00               	movlw	0
 11982  016952  5A01               	subwfb	btemp^0,f,c
 11983  016954  0EF7               	movlw	-9
 11984  016956  0060  F007  FFE3   	movff	btemp,plusw1
 11985  01695C  0EF6               	movlw	-10
 11986  01695E  28E3               	incf	plusw1,w,c
 11987  016960  E13F               	bnz	l8490
 11988  016962  0EF7               	movlw	-9
 11989  016964  28E3               	incf	plusw1,w,c
 11990  016966  A4D8               	btfss	status,2,c
 11991  016968  D03B               	goto	l8490
 11992  01696A  0E00               	movlw	0
 11993  01696C  6E01               	movwf	btemp^0,c
 11994  01696E  0E00               	movlw	0
 11995  016970  6E02               	movwf	(btemp+1)^0,c
 11996  016972  D09B               	goto	l3284
 11997  016974                     l8488:
 11998                           
 11999                           ;stkvar	_l @ sp[(-4)+2]
 12000  016974  0EFE               	movlw	-2
 12001  016976  50E3               	movf	plusw1,w,c
 12002  016978  0F01               	addlw	1
 12003  01697A  6E01               	movwf	btemp^0,c
 12004  01697C  0EFE               	movlw	-2
 12005  01697E  0060  F007  FFE3   	movff	btemp,plusw1
 12006  016984  6A01               	clrf	btemp^0,c
 12007  016986  0EFF               	movlw	-1
 12008  016988  50E3               	movf	plusw1,w,c
 12009  01698A  2001               	addwfc	btemp^0,w,c
 12010  01698C  6E01               	movwf	btemp^0,c
 12011  01698E  0EFF               	movlw	-1
 12012  016990  0060  F007  FFE3   	movff	btemp,plusw1
 12013                           
 12014                           ;stkvar	_r @ sp[(-4)+0]
 12015  016996  0EFC               	movlw	-4
 12016  016998  50E3               	movf	plusw1,w,c
 12017  01699A  0F01               	addlw	1
 12018  01699C  6E01               	movwf	btemp^0,c
 12019  01699E  0EFC               	movlw	-4
 12020  0169A0  0060  F007  FFE3   	movff	btemp,plusw1
 12021  0169A6  6A01               	clrf	btemp^0,c
 12022  0169A8  0EFD               	movlw	-3
 12023  0169AA  50E3               	movf	plusw1,w,c
 12024  0169AC  2001               	addwfc	btemp^0,w,c
 12025  0169AE  6E01               	movwf	btemp^0,c
 12026  0169B0  0EFD               	movlw	-3
 12027  0169B2  0060  F007  FFE3   	movff	btemp,plusw1
 12028                           
 12029                           ;stkvar	_n @ sp[(-4)+-6]
 12030  0169B8  0EF6               	movlw	-10
 12031  0169BA  006F FF8C  F001    	movff	plusw1,btemp
 12032  0169C0  0E01               	movlw	1
 12033  0169C2  5E01               	subwf	btemp^0,f,c
 12034  0169C4  0EF6               	movlw	-10
 12035  0169C6  0060  F007  FFE3   	movff	btemp,plusw1
 12036  0169CC  0EF7               	movlw	-9
 12037  0169CE  006F FF8C  F001    	movff	plusw1,btemp
 12038  0169D4  0E00               	movlw	0
 12039  0169D6  5A01               	subwfb	btemp^0,f,c
 12040  0169D8  0EF7               	movlw	-9
 12041  0169DA  0060  F007  FFE3   	movff	btemp,plusw1
 12042  0169E0                     l8490:
 12043                           
 12044                           ;stkvar	_l @ sp[(-4)+2]
 12045  0169E0  0EFE               	movlw	-2
 12046  0169E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12047  0169E8  0EFF               	movlw	-1
 12048  0169EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12049  0169F0  50DF               	movf	indf2,w,c
 12050  0169F2  B4D8               	btfsc	status,2,c
 12051  0169F4  D03B               	goto	u7730
 12052                           
 12053                           ;stkvar	_r @ sp[(-4)+0]
 12054  0169F6  50E1               	movf	fsr1l,w,c
 12055  0169F8  0FFC               	addlw	-4
 12056  0169FA  6ED9               	movwf	fsr2l,c
 12057  0169FC  50E2               	movf	fsr1h,w,c
 12058  0169FE  6EDA               	movwf	fsr2h,c
 12059  016A00  0EFF               	movlw	255
 12060  016A02  22DA               	addwfc	fsr2h,f,c
 12061  016A04  006F FF7B FFF6     	movff	postinc2,tblptrl
 12062  016A0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12063  016A10                     	if	0	;tblptru may be non-zero
 12064  016A10                     	endif
 12065  016A10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12066  016A10  0E00               	movlw	low (__mediumconst shr (0+16))
 12067  016A12  6EF8               	movwf	tblptru,c
 12068  016A14                     	endif
 12069  016A14  0008               	tblrd		*
 12070  016A16  50F5               	movf	tablat,w,c
 12071  016A18  0900               	iorlw	0
 12072  016A1A  B4D8               	btfsc	status,2,c
 12073  016A1C  D027               	goto	u7730
 12074                           
 12075                           ;stkvar	_n @ sp[(-4)+-6]
 12076  016A1E  0EF6               	movlw	-10
 12077  016A20  006F FF8C  F001    	movff	plusw1,btemp
 12078  016A26  0EF7               	movlw	-9
 12079  016A28  50E3               	movf	plusw1,w,c
 12080  016A2A  1001               	iorwf	btemp^0,w,c
 12081  016A2C  B4D8               	btfsc	status,2,c
 12082  016A2E  D01E               	goto	u7730
 12083                           
 12084                           ;stkvar	_l @ sp[(-4)+2]
 12085  016A30  0EFE               	movlw	-2
 12086  016A32  006F FF8F FFD9     	movff	plusw1,fsr2l
 12087  016A38  0EFF               	movlw	-1
 12088  016A3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12089  016A40  50DF               	movf	indf2,w,c
 12090  016A42  6E0C               	movwf	(btemp+11)^0,c
 12091                           
 12092                           ;stkvar	_r @ sp[(-4)+0]
 12093  016A44  50E1               	movf	fsr1l,w,c
 12094  016A46  0FFC               	addlw	-4
 12095  016A48  6ED9               	movwf	fsr2l,c
 12096  016A4A  50E2               	movf	fsr1h,w,c
 12097  016A4C  6EDA               	movwf	fsr2h,c
 12098  016A4E  0EFF               	movlw	255
 12099  016A50  22DA               	addwfc	fsr2h,f,c
 12100  016A52  006F FF7B FFF6     	movff	postinc2,tblptrl
 12101  016A58  006F FF77 FFF7     	movff	postdec2,tblptrh
 12102  016A5E                     	if	0	;tblptru may be non-zero
 12103  016A5E                     	endif
 12104  016A5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12105  016A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 12106  016A60  6EF8               	movwf	tblptru,c
 12107  016A62                     	endif
 12108  016A62  0008               	tblrd		*
 12109  016A64  50F5               	movf	tablat,w,c
 12110  016A66  180C               	xorwf	(btemp+11)^0,w,c
 12111  016A68  B4D8               	btfsc	status,2,c
 12112  016A6A  D784               	goto	l8488
 12113  016A6C                     u7730:
 12114                           
 12115                           ;stkvar	_l @ sp[(-4)+2]
 12116  016A6C  0EFE               	movlw	-2
 12117  016A6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12118  016A74  0EFF               	movlw	-1
 12119  016A76  006F FF8F FFDA     	movff	plusw1,fsr2h
 12120  016A7C  50DF               	movf	indf2,w,c
 12121  016A7E  6E01               	movwf	btemp^0,c
 12122  016A80  6A02               	clrf	(btemp+1)^0,c
 12123                           
 12124                           ;stkvar	_r @ sp[(-4)+0]
 12125  016A82  50E1               	movf	fsr1l,w,c
 12126  016A84  0FFC               	addlw	-4
 12127  016A86  6ED9               	movwf	fsr2l,c
 12128  016A88  50E2               	movf	fsr1h,w,c
 12129  016A8A  6EDA               	movwf	fsr2h,c
 12130  016A8C  0EFF               	movlw	255
 12131  016A8E  22DA               	addwfc	fsr2h,f,c
 12132  016A90  006F FF7B FFF6     	movff	postinc2,tblptrl
 12133  016A96  006F FF77 FFF7     	movff	postdec2,tblptrh
 12134  016A9C                     	if	0	;tblptru may be non-zero
 12135  016A9C                     	endif
 12136  016A9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12137  016A9C  0E00               	movlw	low (__mediumconst shr (0+16))
 12138  016A9E  6EF8               	movwf	tblptru,c
 12139  016AA0                     	endif
 12140  016AA0  0008               	tblrd		*
 12141  016AA2  50F5               	movf	tablat,w,c
 12142  016AA4  5E01               	subwf	btemp^0,f,c
 12143  016AA6  0E00               	movlw	0
 12144  016AA8  5A02               	subwfb	(btemp+1)^0,f,c
 12145  016AAA                     l3284:
 12146                           
 12147                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 12148  016AAA  0EF6               	movlw	246
 12149  016AAC  26E1               	addwf	fsr1l,f,c
 12150  016AAE  0EFF               	movlw	255
 12151  016AB0  22E2               	addwfc	fsr1h,f,c
 12152  016AB2  0012               	return		;funcret
 12153  016AB4                     __end_of_strncmp:
 12154                           	opt callstack 0
 12155                           
 12156 ;; *************** function _stoa *****************
 12157 ;; Defined at:
 12158 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12161 ;;		 -> f(6), NULL(0), 
 12162 ;;  s               2  [STACK] PTR unsigned char 
 12163 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 12164 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 12165 ;;		 -> STR_3(6), V(188), 
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;  nuls            7  [STACK] unsigned char [7]
 12168 ;;  l               2  [STACK] int 
 12169 ;;  p               2  [STACK] int 
 12170 ;;  cp              2  [STACK] PTR unsigned char 
 12171 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 12172 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 12173 ;;		 -> STR_7(6), STR_3(6), V(188), 
 12174 ;;  w               2  [STACK] int 
 12175 ;;  i               2  [STACK] int 
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  2  [STACK] int 
 12178 ;; Registers used:
 12179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12189 ;;Total ram usage:        0 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; Hardware stack levels required when called:   18
 12192 ;; This function calls:
 12193 ;;		_fputc
 12194 ;;		_strlen
 12195 ;; This function is called by:
 12196 ;;		_vfpfcnvrt
 12197 ;; This function uses a reentrant model
 12198 ;;
 12199                           
 12200                           	psect	text49
 12201  0158E4                     __ptext49:
 12202                           	opt callstack 0
 12203  0158E4                     _stoa:
 12204                           	opt callstack 0
 12205                           
 12206                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12207  0158E4  0E11               	movlw	17
 12208  0158E6  26E1               	addwf	fsr1l,f,c
 12209  0158E8  0E00               	movlw	0
 12210  0158EA  22E2               	addwfc	fsr1h,f,c
 12211                           
 12212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 12213                           
 12214                           ;incstack = 0
 12215 ;; hardware stack exceeded
 12216  0158EC  EE20  F1D3         	lfsr	2,stoa@F1166
 12217                           
 12218                           ;stkvar	_nuls @ sp[(-17)+0]
 12219  0158F0  0E07               	movlw	7
 12220  0158F2  6E01               	movwf	btemp^0,c
 12221  0158F4  0EEF               	movlw	-17
 12222  0158F6                     us1019999:
 12223  0158F6  006F FF7B FFE3     	movff	postinc2,plusw1
 12224  0158FC  28E8               	incf	wreg,w,c
 12225  0158FE  2E01               	decfsz	btemp^0,f,c
 12226  015900  D7FA               	bra	us1019999
 12227                           
 12228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 12229                           ;stkvar	_s @ sp[(-17)+-4]
 12230  015902  0EEB               	movlw	-21
 12231  015904  006F FF8C  F00B    	movff	plusw1,btemp+10
 12232  01590A  0EEC               	movlw	-20
 12233  01590C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12234                           
 12235                           ;stkvar	_cp @ sp[(-17)+11]
 12236  015912  0EFB               	movlw	-5
 12237  015914  0060  F033  FFE3   	movff	btemp+11,plusw1
 12238  01591A  0EFA               	movlw	-6
 12239  01591C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12240                           
 12241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 12242                           ;stkvar	_cp @ sp[(-17)+11]
 12243  015922  0EFA               	movlw	-6
 12244  015924  006F FF8C  F001    	movff	plusw1,btemp
 12245  01592A  0EFB               	movlw	-5
 12246  01592C  50E3               	movf	plusw1,w,c
 12247  01592E  1001               	iorwf	btemp^0,w,c
 12248  015930  A4D8               	btfss	status,2,c
 12249  015932  D00E               	goto	l10930
 12250                           
 12251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 12252                           ;stkvar	_nuls @ sp[(-17)+0]
 12253  015934  0EEF               	movlw	239
 12254  015936  24E1               	addwf	fsr1l,w,c
 12255  015938  6E0B               	movwf	(btemp+10)^0,c
 12256  01593A  0EFF               	movlw	255
 12257  01593C  20E2               	addwfc	fsr1h,w,c
 12258  01593E  6E0C               	movwf	(btemp+11)^0,c
 12259                           
 12260                           ;stkvar	_cp @ sp[(-17)+11]
 12261  015940  0EFB               	movlw	-5
 12262  015942  0060  F033  FFE3   	movff	btemp+11,plusw1
 12263  015948  0EFA               	movlw	-6
 12264  01594A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12265  015950                     l10930:
 12266                           
 12267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 12268                           ;stkvar	_cp @ sp[(-17)+11]
 12269  015950  0EFA               	movlw	-6
 12270  015952  006F FF8F FFE6     	movff	plusw1,postinc1
 12271  015958  006F FF8F FFE6     	movff	plusw1,postinc1
 12272  01595E  ECCE  F0C2         	call	_strlen	;wreg free
 12273                           
 12274                           ;stkvar	_l @ sp[(-17)+7]
 12275  015962  0EF6               	movlw	-10
 12276  015964  0060  F007  FFE3   	movff	btemp,plusw1
 12277  01596A  0EF7               	movlw	-9
 12278  01596C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12279                           
 12280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 12281                           ;stkvar	_p @ sp[(-17)+9]
 12282  015972  0EF8               	movlw	-8
 12283  015974  0060  F08F  FFE3   	movff	_prec,plusw1
 12284  01597A  0EF9               	movlw	-7
 12285  01597C  0060  F093  FFE3   	movff	_prec+1,plusw1
 12286                           
 12287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 12288                           ;stkvar	_p @ sp[(-17)+9]
 12289  015982  0EF9               	movlw	-7
 12290  015984  BEE3               	btfsc	plusw1,7,c
 12291  015986  D023               	goto	l2137
 12292                           
 12293                           ;stkvar	_l @ sp[(-17)+7]
 12294                           ;stkvar	_p @ sp[(-17)+9]
 12295  015988  50E1               	movf	fsr1l,w,c
 12296  01598A  0FF8               	addlw	-8
 12297  01598C  6ED9               	movwf	fsr2l,c
 12298  01598E  50E2               	movf	fsr1h,w,c
 12299  015990  6EDA               	movwf	fsr2h,c
 12300  015992  0EFF               	movlw	255
 12301  015994  22DA               	addwfc	fsr2h,f,c
 12302  015996  0EF6               	movlw	-10
 12303  015998  50E3               	movf	plusw1,w,c
 12304  01599A  5CDE               	subwf	postinc2,w,c
 12305  01599C  50DE               	movf	postinc2,w,c
 12306  01599E  0A80               	xorlw	128
 12307  0159A0  6E01               	movwf	btemp^0,c
 12308  0159A2  0EF7               	movlw	-9
 12309  0159A4  50E3               	movf	plusw1,w,c
 12310  0159A6  0A80               	xorlw	128
 12311  0159A8  5801               	subwfb	btemp^0,w,c
 12312  0159AA  B0D8               	btfsc	status,0,c
 12313  0159AC  D010               	goto	l2137
 12314                           
 12315                           ;stkvar	_p @ sp[(-17)+9]
 12316                           ;stkvar	_l @ sp[(-17)+7]
 12317  0159AE  0EF8               	movlw	-8
 12318  0159B0  006F FF8C  F001    	movff	plusw1,btemp
 12319  0159B6  0EF6               	movlw	-10
 12320  0159B8  0060  F007  FFE3   	movff	btemp,plusw1
 12321  0159BE  0EF9               	movlw	-7
 12322  0159C0  006F FF8C  F001    	movff	plusw1,btemp
 12323  0159C6  0EF7               	movlw	-9
 12324  0159C8  0060  F007  FFE3   	movff	btemp,plusw1
 12325  0159CE                     l2137:
 12326                           
 12327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 12328                           ;stkvar	_l @ sp[(-17)+7]
 12329                           ;stkvar	_p @ sp[(-17)+9]
 12330  0159CE  0EF6               	movlw	-10
 12331  0159D0  006F FF8C  F001    	movff	plusw1,btemp
 12332  0159D6  0EF8               	movlw	-8
 12333  0159D8  0060  F007  FFE3   	movff	btemp,plusw1
 12334  0159DE  0EF7               	movlw	-9
 12335  0159E0  006F FF8C  F001    	movff	plusw1,btemp
 12336  0159E6  0EF9               	movlw	-7
 12337  0159E8  0060  F007  FFE3   	movff	btemp,plusw1
 12338                           
 12339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 12340                           ;stkvar	_w @ sp[(-17)+13]
 12341  0159EE  0EFC               	movlw	-4
 12342  0159F0  0060  F087  FFE3   	movff	_width,plusw1
 12343  0159F6  0EFD               	movlw	-3
 12344  0159F8  0060  F08B  FFE3   	movff	_width+1,plusw1
 12345                           
 12346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 12347  0159FE  A025               	btfss	_flags^0,0,c
 12348  015A00  D01F               	goto	l10950
 12349  015A02  D031               	goto	u10240
 12350  015A04                     l10946:
 12351                           
 12352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 12353                           ;stkvar	_fp @ sp[(-17)+-2]
 12354  015A04  0EED               	movlw	-19
 12355  015A06  006F FF8F FFE6     	movff	plusw1,postinc1
 12356  015A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 12357  015A12  0E20               	movlw	32
 12358  015A14  6EE6               	movwf	postinc1,c
 12359  015A16  0E00               	movlw	0
 12360  015A18  6EE6               	movwf	postinc1,c
 12361  015A1A  ECAB  F0BB         	call	_fputc	;wreg free
 12362                           
 12363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 12364                           ;stkvar	_l @ sp[(-17)+7]
 12365  015A1E  0EF6               	movlw	-10
 12366  015A20  50E3               	movf	plusw1,w,c
 12367  015A22  0F01               	addlw	1
 12368  015A24  6E01               	movwf	btemp^0,c
 12369  015A26  0EF6               	movlw	-10
 12370  015A28  0060  F007  FFE3   	movff	btemp,plusw1
 12371  015A2E  6A01               	clrf	btemp^0,c
 12372  015A30  0EF7               	movlw	-9
 12373  015A32  50E3               	movf	plusw1,w,c
 12374  015A34  2001               	addwfc	btemp^0,w,c
 12375  015A36  6E01               	movwf	btemp^0,c
 12376  015A38  0EF7               	movlw	-9
 12377  015A3A  0060  F007  FFE3   	movff	btemp,plusw1
 12378  015A40                     l10950:
 12379                           
 12380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 12381                           ;stkvar	_w @ sp[(-17)+13]
 12382                           ;stkvar	_l @ sp[(-17)+7]
 12383  015A40  50E1               	movf	fsr1l,w,c
 12384  015A42  0FF6               	addlw	-10
 12385  015A44  6ED9               	movwf	fsr2l,c
 12386  015A46  50E2               	movf	fsr1h,w,c
 12387  015A48  6EDA               	movwf	fsr2h,c
 12388  015A4A  0EFF               	movlw	255
 12389  015A4C  22DA               	addwfc	fsr2h,f,c
 12390  015A4E  0EFC               	movlw	-4
 12391  015A50  50E3               	movf	plusw1,w,c
 12392  015A52  5CDE               	subwf	postinc2,w,c
 12393  015A54  50DE               	movf	postinc2,w,c
 12394  015A56  0A80               	xorlw	128
 12395  015A58  6E01               	movwf	btemp^0,c
 12396  015A5A  0EFD               	movlw	-3
 12397  015A5C  50E3               	movf	plusw1,w,c
 12398  015A5E  0A80               	xorlw	128
 12399  015A60  5801               	subwfb	btemp^0,w,c
 12400  015A62  A0D8               	btfss	status,0,c
 12401  015A64  D7CF               	goto	l10946
 12402  015A66                     u10240:
 12403                           
 12404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 12405                           ;stkvar	_i @ sp[(-17)+15]
 12406  015A66  0EFE               	movlw	-2
 12407  015A68  6AE3               	clrf	plusw1,c
 12408  015A6A  0EFF               	movlw	-1
 12409  015A6C  6AE3               	clrf	plusw1,c
 12410                           
 12411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 12412  015A6E  D045               	goto	l10960
 12413  015A70                     l10954:
 12414                           
 12415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 12416                           ;stkvar	_fp @ sp[(-17)+-2]
 12417  015A70  0EED               	movlw	-19
 12418  015A72  006F FF8F FFE6     	movff	plusw1,postinc1
 12419  015A78  006F FF8F FFE6     	movff	plusw1,postinc1
 12420                           
 12421                           ;stkvar	_cp @ sp[(-19)+11]
 12422  015A7E  0EF8               	movlw	-8
 12423  015A80  006F FF8F FFF6     	movff	plusw1,tblptrl
 12424  015A86  0EF9               	movlw	-7
 12425  015A88  006F FF8F FFF7     	movff	plusw1,tblptrh
 12426  015A8E  0E00               	movlw	low (__mediumconst shr (0+16))
 12427  015A90  6EF8               	movwf	tblptru,c
 12428  015A92  0E1F               	movlw	(high __ramtop+-1)
 12429  015A94  64F7               	cpfsgt	tblptrh,c
 12430  015A96  D003               	bra	u10257
 12431  015A98  0008               	tblrd		*
 12432  015A9A  50F5               	movf	tablat,w,c
 12433  015A9C  D007               	bra	u10250
 12434  015A9E                     u10257:
 12435  015A9E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12436  015AA4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12437  015AAA  50EF               	movf	indf0,w,c
 12438  015AAC                     u10250:
 12439  015AAC  6EE6               	movwf	postinc1,c
 12440  015AAE  0E00               	movlw	0
 12441  015AB0  6EE6               	movwf	postinc1,c
 12442  015AB2  ECAB  F0BB         	call	_fputc	;wreg free
 12443                           
 12444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 12445                           ;stkvar	_cp @ sp[(-17)+11]
 12446  015AB6  0EFA               	movlw	-6
 12447  015AB8  50E3               	movf	plusw1,w,c
 12448  015ABA  0F01               	addlw	1
 12449  015ABC  6E01               	movwf	btemp^0,c
 12450  015ABE  0EFA               	movlw	-6
 12451  015AC0  0060  F007  FFE3   	movff	btemp,plusw1
 12452  015AC6  6A01               	clrf	btemp^0,c
 12453  015AC8  0EFB               	movlw	-5
 12454  015ACA  50E3               	movf	plusw1,w,c
 12455  015ACC  2001               	addwfc	btemp^0,w,c
 12456  015ACE  6E01               	movwf	btemp^0,c
 12457  015AD0  0EFB               	movlw	-5
 12458  015AD2  0060  F007  FFE3   	movff	btemp,plusw1
 12459                           
 12460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 12461                           ;stkvar	_i @ sp[(-17)+15]
 12462  015AD8  0EFE               	movlw	-2
 12463  015ADA  50E3               	movf	plusw1,w,c
 12464  015ADC  0F01               	addlw	1
 12465  015ADE  6E01               	movwf	btemp^0,c
 12466  015AE0  0EFE               	movlw	-2
 12467  015AE2  0060  F007  FFE3   	movff	btemp,plusw1
 12468  015AE8  6A01               	clrf	btemp^0,c
 12469  015AEA  0EFF               	movlw	-1
 12470  015AEC  50E3               	movf	plusw1,w,c
 12471  015AEE  2001               	addwfc	btemp^0,w,c
 12472  015AF0  6E01               	movwf	btemp^0,c
 12473  015AF2  0EFF               	movlw	-1
 12474  015AF4  0060  F007  FFE3   	movff	btemp,plusw1
 12475  015AFA                     l10960:
 12476                           
 12477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 12478                           ;stkvar	_p @ sp[(-17)+9]
 12479                           ;stkvar	_i @ sp[(-17)+15]
 12480  015AFA  50E1               	movf	fsr1l,w,c
 12481  015AFC  0FFE               	addlw	-2
 12482  015AFE  6ED9               	movwf	fsr2l,c
 12483  015B00  50E2               	movf	fsr1h,w,c
 12484  015B02  6EDA               	movwf	fsr2h,c
 12485  015B04  0EFF               	movlw	255
 12486  015B06  22DA               	addwfc	fsr2h,f,c
 12487  015B08  0EF8               	movlw	-8
 12488  015B0A  50E3               	movf	plusw1,w,c
 12489  015B0C  5CDE               	subwf	postinc2,w,c
 12490  015B0E  50DE               	movf	postinc2,w,c
 12491  015B10  0A80               	xorlw	128
 12492  015B12  6E01               	movwf	btemp^0,c
 12493  015B14  0EF9               	movlw	-7
 12494  015B16  50E3               	movf	plusw1,w,c
 12495  015B18  0A80               	xorlw	128
 12496  015B1A  5801               	subwfb	btemp^0,w,c
 12497  015B1C  A0D8               	btfss	status,0,c
 12498  015B1E  D7A8               	goto	l10954
 12499                           
 12500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 12501  015B20  B025               	btfsc	_flags^0,0,c
 12502  015B22  D01F               	goto	l10968
 12503  015B24  D031               	goto	u10280
 12504  015B26                     l10964:
 12505                           
 12506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 12507                           ;stkvar	_fp @ sp[(-17)+-2]
 12508  015B26  0EED               	movlw	-19
 12509  015B28  006F FF8F FFE6     	movff	plusw1,postinc1
 12510  015B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 12511  015B34  0E20               	movlw	32
 12512  015B36  6EE6               	movwf	postinc1,c
 12513  015B38  0E00               	movlw	0
 12514  015B3A  6EE6               	movwf	postinc1,c
 12515  015B3C  ECAB  F0BB         	call	_fputc	;wreg free
 12516                           
 12517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 12518                           ;stkvar	_l @ sp[(-17)+7]
 12519  015B40  0EF6               	movlw	-10
 12520  015B42  50E3               	movf	plusw1,w,c
 12521  015B44  0F01               	addlw	1
 12522  015B46  6E01               	movwf	btemp^0,c
 12523  015B48  0EF6               	movlw	-10
 12524  015B4A  0060  F007  FFE3   	movff	btemp,plusw1
 12525  015B50  6A01               	clrf	btemp^0,c
 12526  015B52  0EF7               	movlw	-9
 12527  015B54  50E3               	movf	plusw1,w,c
 12528  015B56  2001               	addwfc	btemp^0,w,c
 12529  015B58  6E01               	movwf	btemp^0,c
 12530  015B5A  0EF7               	movlw	-9
 12531  015B5C  0060  F007  FFE3   	movff	btemp,plusw1
 12532  015B62                     l10968:
 12533                           
 12534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 12535                           ;stkvar	_w @ sp[(-17)+13]
 12536                           ;stkvar	_l @ sp[(-17)+7]
 12537  015B62  50E1               	movf	fsr1l,w,c
 12538  015B64  0FF6               	addlw	-10
 12539  015B66  6ED9               	movwf	fsr2l,c
 12540  015B68  50E2               	movf	fsr1h,w,c
 12541  015B6A  6EDA               	movwf	fsr2h,c
 12542  015B6C  0EFF               	movlw	255
 12543  015B6E  22DA               	addwfc	fsr2h,f,c
 12544  015B70  0EFC               	movlw	-4
 12545  015B72  50E3               	movf	plusw1,w,c
 12546  015B74  5CDE               	subwf	postinc2,w,c
 12547  015B76  50DE               	movf	postinc2,w,c
 12548  015B78  0A80               	xorlw	128
 12549  015B7A  6E01               	movwf	btemp^0,c
 12550  015B7C  0EFD               	movlw	-3
 12551  015B7E  50E3               	movf	plusw1,w,c
 12552  015B80  0A80               	xorlw	128
 12553  015B82  5801               	subwfb	btemp^0,w,c
 12554  015B84  A0D8               	btfss	status,0,c
 12555  015B86  D7CF               	goto	l10964
 12556  015B88                     u10280:
 12557                           
 12558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 12559                           ;stkvar	_l @ sp[(-17)+7]
 12560  015B88  0EF6               	movlw	-10
 12561  015B8A  006F FF8C  F001    	movff	plusw1,btemp
 12562  015B90  0EF7               	movlw	-9
 12563  015B92  006F FF8C  F002    	movff	plusw1,btemp+1
 12564                           
 12565                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12566  015B98  0EEB               	movlw	235
 12567  015B9A  26E1               	addwf	fsr1l,f,c
 12568  015B9C  0EFF               	movlw	255
 12569  015B9E  22E2               	addwfc	fsr1h,f,c
 12570  015BA0  0012               	return		;funcret
 12571  015BA2                     __end_of_stoa:
 12572                           	opt callstack 0
 12573                           
 12574 ;; *************** function _efgtoa *****************
 12575 ;; Defined at:
 12576 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12579 ;;		 -> f(6), NULL(0), 
 12580 ;;  f               4  [STACK] PTR struct _IO_FILE
 12581 ;;  c               1  [STACK] unsigned char 
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;  u               4  [STACK] unsigned char 
 12584 ;;  g               4  [STACK] unsigned char 
 12585 ;;  l               4  [STACK] unsigned char 
 12586 ;;  h               4  [STACK] unsigned char 
 12587 ;;  ou              4  [STACK] unsigned char 
 12588 ;;  n               2  [STACK] int 
 12589 ;;  e               2  [STACK] int 
 12590 ;;  i               2  [STACK] int 
 12591 ;;  w               2  [STACK] int 
 12592 ;;  p               2  [STACK] int 
 12593 ;;  sign            2  [STACK] int 
 12594 ;;  d               2  [STACK] int 
 12595 ;;  ne              2  [STACK] int 
 12596 ;;  m               2  [STACK] int 
 12597 ;;  pp              2  [STACK] int 
 12598 ;;  t               2  [STACK] int 
 12599 ;;  mode            1  [STACK] unsigned char 
 12600 ;;  nmode           1  [STACK] unsigned char 
 12601 ;; Return value:  Size  Location     Type
 12602 ;;                  2  [STACK] int 
 12603 ;; Registers used:
 12604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 12605 ;; Tracked objects:
 12606 ;;		On entry : 0/0
 12607 ;;		On exit  : 0/0
 12608 ;;		Unchanged: 0/0
 12609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12614 ;;Total ram usage:        0 bytes
 12615 ;; Hardware stack levels used:    1
 12616 ;; Hardware stack levels required when called:   20
 12617 ;; This function calls:
 12618 ;;		___awdiv
 12619 ;;		___awmod
 12620 ;;		___fladd
 12621 ;;		___fldiv
 12622 ;;		___fleq
 12623 ;;		___flge
 12624 ;;		___flmul
 12625 ;;		___flneg
 12626 ;;		___flsub
 12627 ;;		___fltol
 12628 ;;		___fpclassifyf
 12629 ;;		_floorf
 12630 ;;		_isupper
 12631 ;;		_pad
 12632 ;;		_strcpy
 12633 ;;		_tolower
 12634 ;; This function is called by:
 12635 ;;		_vfpfcnvrt
 12636 ;; This function uses a reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text50
 12640  010000                     __ptext50:
 12641                           	opt callstack 0
 12642  010000                     _efgtoa:
 12643                           	opt callstack 0
 12644                           
 12645                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12646  010000  0E38               	movlw	56
 12647  010002  26E1               	addwf	fsr1l,f,c
 12648  010004  0E00               	movlw	0
 12649  010006  22E2               	addwfc	fsr1h,f,c
 12650                           
 12651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 12652                           ;stkvar	_sign @ sp[(-56)+42]
 12653                           
 12654                           ;incstack = 0
 12655 ;; hardware stack exceeded
 12656  010008  0EF2               	movlw	-14
 12657  01000A  6AE3               	clrf	plusw1,c
 12658  01000C  0EF3               	movlw	-13
 12659  01000E  6AE3               	clrf	plusw1,c
 12660                           
 12661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 12662                           ;stkvar	_f @ sp[(-56)+-6]
 12663  010010  0EC2               	movlw	-62
 12664  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 12665  010018  0EC3               	movlw	-61
 12666  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 12667  010020  0EC4               	movlw	-60
 12668  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 12669  010028  0EC5               	movlw	-59
 12670  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12671                           
 12672                           ;stkvar	_g @ sp[(-56)+16]
 12673  010030  0ED8               	movlw	-40
 12674  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 12675  010038  0ED9               	movlw	-39
 12676  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12677  010040  0EDA               	movlw	-38
 12678  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12679  010048  0EDB               	movlw	-37
 12680  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12681                           
 12682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 12683                           ;stkvar	_g @ sp[(-56)+16]
 12684  010050  0EDB               	movlw	-37
 12685  010052  AEE3               	btfss	plusw1,7,c
 12686  010054  D02B               	goto	l10628
 12687                           
 12688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 12689  010056  0E01               	movlw	1
 12690  010058  6E0B               	movwf	(btemp+10)^0,c
 12691  01005A  0E00               	movlw	0
 12692  01005C  6E0C               	movwf	(btemp+11)^0,c
 12693                           
 12694                           ;stkvar	_sign @ sp[(-56)+42]
 12695  01005E  0EF2               	movlw	-14
 12696  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12697  010066  0EF3               	movlw	-13
 12698  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 12699                           
 12700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 12701                           ;stkvar	_g @ sp[(-56)+16]
 12702  01006E  0ED8               	movlw	-40
 12703  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 12704  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 12705  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 12706  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 12707  010088  EC7C  F0C8         	call	___flneg	;wreg free
 12708                           
 12709                           ;stkvar	_g @ sp[(-56)+16]
 12710  01008C  0ED8               	movlw	-40
 12711  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 12712  010094  0ED9               	movlw	-39
 12713  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12714  01009C  0EDA               	movlw	-38
 12715  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12716  0100A4  0EDB               	movlw	-37
 12717  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 12718  0100AC                     l10628:
 12719                           
 12720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 12721                           ;stkvar	_n @ sp[(-56)+32]
 12722  0100AC  0EE8               	movlw	-24
 12723  0100AE  6AE3               	clrf	plusw1,c
 12724  0100B0  0EE9               	movlw	-23
 12725  0100B2  6AE3               	clrf	plusw1,c
 12726                           
 12727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 12728                           ;stkvar	_w @ sp[(-56)+38]
 12729  0100B4  0EEE               	movlw	-18
 12730  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 12731  0100BC  0EEF               	movlw	-17
 12732  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 12733                           
 12734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 12735                           ;stkvar	_sign @ sp[(-56)+42]
 12736  0100C4  0EF2               	movlw	-14
 12737  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 12738  0100CC  0EF3               	movlw	-13
 12739  0100CE  50E3               	movf	plusw1,w,c
 12740  0100D0  1001               	iorwf	btemp^0,w,c
 12741  0100D2  A4D8               	btfss	status,2,c
 12742  0100D4  D002               	goto	u9690
 12743  0100D6  A425               	btfss	_flags^0,2,c
 12744  0100D8  D036               	goto	l10648
 12745  0100DA                     u9690:
 12746                           
 12747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 12748                           ;stkvar	_sign @ sp[(-56)+42]
 12749  0100DA  0EF2               	movlw	-14
 12750  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 12751  0100E2  0EF3               	movlw	-13
 12752  0100E4  50E3               	movf	plusw1,w,c
 12753  0100E6  1001               	iorwf	btemp^0,w,c
 12754  0100E8  A4D8               	btfss	status,2,c
 12755  0100EA  D002               	goto	l10640
 12756  0100EC  0E2B               	movlw	43
 12757  0100EE  D001               	goto	L9
 12758  0100F0                     l10640:
 12759  0100F0  0E2D               	movlw	45
 12760  0100F2                     L9:
 12761  0100F2  6E0B               	movwf	(btemp+10)^0,c
 12762  0100F4  0E00               	movlw	0
 12763  0100F6  6E0C               	movwf	(btemp+11)^0,c
 12764                           
 12765                           ;stkvar	_efgtoa$5143 @ sp[(-56)+10]
 12766  0100F8  0ED2               	movlw	-46
 12767  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12768  010100  0ED3               	movlw	-45
 12769  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 12770                           
 12771                           ;stkvar	_efgtoa$5143 @ sp[(-56)+10]
 12772  010108  0ED2               	movlw	-46
 12773  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 12774                           
 12775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 12776                           ;stkvar	_n @ sp[(-56)+32]
 12777  010110  0EE8               	movlw	-24
 12778  010112  50E3               	movf	plusw1,w,c
 12779  010114  0F01               	addlw	1
 12780  010116  6E01               	movwf	btemp^0,c
 12781  010118  0EE8               	movlw	-24
 12782  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 12783  010120  6A01               	clrf	btemp^0,c
 12784  010122  0EE9               	movlw	-23
 12785  010124  50E3               	movf	plusw1,w,c
 12786  010126  2001               	addwfc	btemp^0,w,c
 12787  010128  6E01               	movwf	btemp^0,c
 12788  01012A  0EE9               	movlw	-23
 12789  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 12790                           
 12791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 12792                           ;stkvar	_w @ sp[(-56)+38]
 12793  010132  50E1               	movf	fsr1l,w,c
 12794  010134  0FEE               	addlw	-18
 12795  010136  6ED9               	movwf	fsr2l,c
 12796  010138  50E2               	movf	fsr1h,w,c
 12797  01013A  6EDA               	movwf	fsr2h,c
 12798  01013C  0EFF               	movlw	255
 12799  01013E  22DA               	addwfc	fsr2h,f,c
 12800  010140  06DE               	decf	postinc2,f,c
 12801  010142  0E00               	movlw	0
 12802  010144  5ADD               	subwfb	postdec2,f,c
 12803  010146                     l10648:
 12804                           
 12805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12806                           ;stkvar	_g @ sp[(-56)+16]
 12807  010146  0ED8               	movlw	-40
 12808  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 12809  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 12810  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 12811  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 12812  010160  EC3A  F0B6         	call	___fpclassifyf	;wreg free
 12813  010164  0401               	decf	btemp^0,w,c
 12814  010166  1002               	iorwf	(btemp+1)^0,w,c
 12815  010168  A4D8               	btfss	status,2,c
 12816  01016A  D076               	goto	l10666
 12817  01016C  0EBF               	movlw	191
 12818  01016E  6E0B               	movwf	(btemp+10)^0,c
 12819  010170  0EFF               	movlw	255
 12820  010172  6E0C               	movwf	(btemp+11)^0,c
 12821                           
 12822                           ;stkvar	_c @ sp[(-56)+-7]
 12823  010174  0EC1               	movlw	-63
 12824  010176  50E3               	movf	plusw1,w,c
 12825  010178  6E09               	movwf	(btemp+8)^0,c
 12826  01017A  6A0A               	clrf	(btemp+9)^0,c
 12827  01017C  500B               	movf	(btemp+10)^0,w,c
 12828  01017E  2609               	addwf	(btemp+8)^0,f,c
 12829  010180  500C               	movf	(btemp+11)^0,w,c
 12830  010182  220A               	addwfc	(btemp+9)^0,f,c
 12831  010184  500A               	movf	(btemp+9)^0,w,c
 12832  010186  E106               	bnz	u9720
 12833  010188  0E1A               	movlw	26
 12834  01018A  5C09               	subwf	(btemp+8)^0,w,c
 12835  01018C  B0D8               	btfsc	status,0,c
 12836  01018E  D002               	goto	u9720
 12837  010190  0E01               	movlw	1
 12838  010192  D001               	goto	u9730
 12839  010194                     u9720:
 12840  010194  0E00               	movlw	0
 12841  010196                     u9730:
 12842  010196  6E0B               	movwf	(btemp+10)^0,c
 12843  010198  6A0C               	clrf	(btemp+11)^0,c
 12844                           
 12845                           ;stkvar	_efgtoa$5144 @ sp[(-56)+8]
 12846  01019A  0ED0               	movlw	-48
 12847  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12848  0101A2  0ED1               	movlw	-47
 12849  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12850                           
 12851                           ;stkvar	_efgtoa$5144 @ sp[(-56)+8]
 12852  0101AA  0ED0               	movlw	-48
 12853  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 12854  0101B2  0ED1               	movlw	-47
 12855  0101B4  50E3               	movf	plusw1,w,c
 12856  0101B6  1001               	iorwf	btemp^0,w,c
 12857  0101B8  B4D8               	btfsc	status,2,c
 12858  0101BA  D017               	goto	l10658
 12859                           
 12860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 12861  0101BC  0EE5               	movlw	low STR_47
 12862  0101BE  6EE6               	movwf	postinc1,c
 12863  0101C0  0EFF               	movlw	high STR_47
 12864  0101C2  6EE6               	movwf	postinc1,c
 12865                           
 12866                           ;stkvar	_n @ sp[(-58)+32]
 12867  0101C4  0E94               	movlw	low _dbuf
 12868  0101C6  6E0B               	movwf	(btemp+10)^0,c
 12869  0101C8  0E03               	movlw	high _dbuf
 12870  0101CA  6E0C               	movwf	(btemp+11)^0,c
 12871  0101CC  0EE6               	movlw	-26
 12872  0101CE  50E3               	movf	plusw1,w,c
 12873  0101D0  260B               	addwf	(btemp+10)^0,f,c
 12874  0101D2  0EE7               	movlw	-25
 12875  0101D4  50E3               	movf	plusw1,w,c
 12876  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 12877  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12878  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12879  0101E4  EC4A  F0C0         	call	_strcpy	;wreg free
 12880                           
 12881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 12882  0101E8  D016               	goto	l10660
 12883  0101EA                     l10658:
 12884                           
 12885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 12886  0101EA  0EED               	movlw	low STR_48
 12887  0101EC  6EE6               	movwf	postinc1,c
 12888  0101EE  0EFF               	movlw	high STR_48
 12889  0101F0  6EE6               	movwf	postinc1,c
 12890                           
 12891                           ;stkvar	_n @ sp[(-58)+32]
 12892  0101F2  0E94               	movlw	low _dbuf
 12893  0101F4  6E0B               	movwf	(btemp+10)^0,c
 12894  0101F6  0E03               	movlw	high _dbuf
 12895  0101F8  6E0C               	movwf	(btemp+11)^0,c
 12896  0101FA  0EE6               	movlw	-26
 12897  0101FC  50E3               	movf	plusw1,w,c
 12898  0101FE  260B               	addwf	(btemp+10)^0,f,c
 12899  010200  0EE7               	movlw	-25
 12900  010202  50E3               	movf	plusw1,w,c
 12901  010204  220C               	addwfc	(btemp+11)^0,f,c
 12902  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12903  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12904  010212  EC4A  F0C0         	call	_strcpy	;wreg free
 12905  010216                     l10660:
 12906                           
 12907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 12908                           ;stkvar	_w @ sp[(-56)+38]
 12909  010216  50E1               	movf	fsr1l,w,c
 12910  010218  0FEE               	addlw	-18
 12911  01021A  6ED9               	movwf	fsr2l,c
 12912  01021C  50E2               	movf	fsr1h,w,c
 12913  01021E  6EDA               	movwf	fsr2h,c
 12914  010220  0EFF               	movlw	255
 12915  010222  22DA               	addwfc	fsr2h,f,c
 12916  010224  0EFD               	movlw	253
 12917  010226  26DE               	addwf	postinc2,f,c
 12918  010228  0EFF               	movlw	255
 12919  01022A  22DD               	addwfc	postdec2,f,c
 12920  01022C                     l10662:
 12921                           
 12922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 12923                           ;stkvar	_w @ sp[(-56)+38]
 12924  01022C  0EEE               	movlw	-18
 12925  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 12926  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 12927  01023A  0E94               	movlw	low _dbuf
 12928  01023C  6EE6               	movwf	postinc1,c
 12929  01023E  0E03               	movlw	high _dbuf
 12930  010240  6EE6               	movwf	postinc1,c
 12931                           
 12932                           ;stkvar	_fp @ sp[(-60)+-2]
 12933  010242  0EC2               	movlw	-62
 12934  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 12935  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 12936  010250  ECC9  F0BC         	call	_pad	;wreg free
 12937  010254  EF1D  F089         	goto	l2055
 12938  010258                     l10666:
 12939                           
 12940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12941                           ;stkvar	_g @ sp[(-56)+16]
 12942  010258  0ED8               	movlw	-40
 12943  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 12944  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 12945  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 12946  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 12947  010272  EC3A  F0B6         	call	___fpclassifyf	;wreg free
 12948  010276  5001               	movf	btemp^0,w,c
 12949  010278  1002               	iorwf	(btemp+1)^0,w,c
 12950  01027A  A4D8               	btfss	status,2,c
 12951  01027C  D056               	goto	l10684
 12952  01027E  0EBF               	movlw	191
 12953  010280  6E0B               	movwf	(btemp+10)^0,c
 12954  010282  0EFF               	movlw	255
 12955  010284  6E0C               	movwf	(btemp+11)^0,c
 12956                           
 12957                           ;stkvar	_c @ sp[(-56)+-7]
 12958  010286  0EC1               	movlw	-63
 12959  010288  50E3               	movf	plusw1,w,c
 12960  01028A  6E09               	movwf	(btemp+8)^0,c
 12961  01028C  6A0A               	clrf	(btemp+9)^0,c
 12962  01028E  500B               	movf	(btemp+10)^0,w,c
 12963  010290  2609               	addwf	(btemp+8)^0,f,c
 12964  010292  500C               	movf	(btemp+11)^0,w,c
 12965  010294  220A               	addwfc	(btemp+9)^0,f,c
 12966  010296  500A               	movf	(btemp+9)^0,w,c
 12967  010298  E106               	bnz	u9760
 12968  01029A  0E1A               	movlw	26
 12969  01029C  5C09               	subwf	(btemp+8)^0,w,c
 12970  01029E  B0D8               	btfsc	status,0,c
 12971  0102A0  D002               	goto	u9760
 12972  0102A2  0E01               	movlw	1
 12973  0102A4  D001               	goto	u9770
 12974  0102A6                     u9760:
 12975  0102A6  0E00               	movlw	0
 12976  0102A8                     u9770:
 12977  0102A8  6E0B               	movwf	(btemp+10)^0,c
 12978  0102AA  6A0C               	clrf	(btemp+11)^0,c
 12979                           
 12980                           ;stkvar	_efgtoa$5148 @ sp[(-56)+6]
 12981  0102AC  0ECE               	movlw	-50
 12982  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12983  0102B4  0ECF               	movlw	-49
 12984  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12985                           
 12986                           ;stkvar	_efgtoa$5148 @ sp[(-56)+6]
 12987  0102BC  0ECE               	movlw	-50
 12988  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 12989  0102C4  0ECF               	movlw	-49
 12990  0102C6  50E3               	movf	plusw1,w,c
 12991  0102C8  1001               	iorwf	btemp^0,w,c
 12992  0102CA  B4D8               	btfsc	status,2,c
 12993  0102CC  D017               	goto	l10676
 12994                           
 12995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 12996  0102CE  0EE9               	movlw	low STR_51
 12997  0102D0  6EE6               	movwf	postinc1,c
 12998  0102D2  0EFF               	movlw	high STR_51
 12999  0102D4  6EE6               	movwf	postinc1,c
 13000                           
 13001                           ;stkvar	_n @ sp[(-58)+32]
 13002  0102D6  0E94               	movlw	low _dbuf
 13003  0102D8  6E0B               	movwf	(btemp+10)^0,c
 13004  0102DA  0E03               	movlw	high _dbuf
 13005  0102DC  6E0C               	movwf	(btemp+11)^0,c
 13006  0102DE  0EE6               	movlw	-26
 13007  0102E0  50E3               	movf	plusw1,w,c
 13008  0102E2  260B               	addwf	(btemp+10)^0,f,c
 13009  0102E4  0EE7               	movlw	-25
 13010  0102E6  50E3               	movf	plusw1,w,c
 13011  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 13012  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13013  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 13014  0102F6  EC4A  F0C0         	call	_strcpy	;wreg free
 13015                           
 13016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 13017  0102FA  D78D               	goto	l10660
 13018  0102FC                     l10676:
 13019                           
 13020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 13021  0102FC  0EF1               	movlw	low STR_52
 13022  0102FE  6EE6               	movwf	postinc1,c
 13023  010300  0EFF               	movlw	high STR_52
 13024  010302  6EE6               	movwf	postinc1,c
 13025                           
 13026                           ;stkvar	_n @ sp[(-58)+32]
 13027  010304  0E94               	movlw	low _dbuf
 13028  010306  6E0B               	movwf	(btemp+10)^0,c
 13029  010308  0E03               	movlw	high _dbuf
 13030  01030A  6E0C               	movwf	(btemp+11)^0,c
 13031  01030C  0EE6               	movlw	-26
 13032  01030E  50E3               	movf	plusw1,w,c
 13033  010310  260B               	addwf	(btemp+10)^0,f,c
 13034  010312  0EE7               	movlw	-25
 13035  010314  50E3               	movf	plusw1,w,c
 13036  010316  220C               	addwfc	(btemp+11)^0,f,c
 13037  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13038  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13039  010324  EC4A  F0C0         	call	_strcpy	;wreg free
 13040  010328  D776               	goto	l10660
 13041  01032A                     l10684:
 13042                           
 13043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 13044  01032A  0E00               	movlw	0
 13045  01032C  6E09               	movwf	(btemp+8)^0,c
 13046  01032E  0E00               	movlw	0
 13047  010330  6E0A               	movwf	(btemp+9)^0,c
 13048  010332  0E80               	movlw	128
 13049  010334  6E0B               	movwf	(btemp+10)^0,c
 13050  010336  0E3F               	movlw	63
 13051  010338  6E0C               	movwf	(btemp+11)^0,c
 13052                           
 13053                           ;stkvar	_u @ sp[(-56)+12]
 13054  01033A  0ED4               	movlw	-44
 13055  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 13056  010342  0ED5               	movlw	-43
 13057  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13058  01034A  0ED6               	movlw	-42
 13059  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13060  010352  0ED7               	movlw	-41
 13061  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 13062                           
 13063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 13064                           ;stkvar	_e @ sp[(-56)+34]
 13065  01035A  0EEA               	movlw	-22
 13066  01035C  6AE3               	clrf	plusw1,c
 13067  01035E  0EEB               	movlw	-21
 13068  010360  6AE3               	clrf	plusw1,c
 13069                           
 13070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 13071  010362  0E00               	movlw	0
 13072  010364  6EE6               	movwf	postinc1,c
 13073  010366  0E00               	movlw	0
 13074  010368  6EE6               	movwf	postinc1,c
 13075  01036A  0E00               	movlw	0
 13076  01036C  6EE6               	movwf	postinc1,c
 13077  01036E  0E00               	movlw	0
 13078  010370  6EE6               	movwf	postinc1,c
 13079                           
 13080                           ;stkvar	_g @ sp[(-60)+16]
 13081  010372  0ED4               	movlw	-44
 13082  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 13083  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 13084  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 13085  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 13086  01038C  ECB4  F0C0         	call	___fleq	;wreg free
 13087  010390  A001               	btfss	btemp& (0+255),0,c
 13088  010392  D039               	goto	l10696
 13089  010394  D0BC               	goto	u9810
 13090  010396                     l10692:
 13091                           
 13092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 13093  010396  0E00               	movlw	0
 13094  010398  6EE6               	movwf	postinc1,c
 13095  01039A  0E00               	movlw	0
 13096  01039C  6EE6               	movwf	postinc1,c
 13097  01039E  0E20               	movlw	32
 13098  0103A0  6EE6               	movwf	postinc1,c
 13099  0103A2  0E41               	movlw	65
 13100  0103A4  6EE6               	movwf	postinc1,c
 13101                           
 13102                           ;stkvar	_u @ sp[(-60)+12]
 13103  0103A6  0ED0               	movlw	-48
 13104  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13105  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13106  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 13107  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 13108  0103C0  EC1C  F093         	call	___flmul	;wreg free
 13109                           
 13110                           ;stkvar	_u @ sp[(-56)+12]
 13111  0103C4  0ED4               	movlw	-44
 13112  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 13113  0103CC  0ED5               	movlw	-43
 13114  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13115  0103D4  0ED6               	movlw	-42
 13116  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13117  0103DC  0ED7               	movlw	-41
 13118  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13119                           
 13120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 13121                           ;stkvar	_e @ sp[(-56)+34]
 13122  0103E4  0EEA               	movlw	-22
 13123  0103E6  50E3               	movf	plusw1,w,c
 13124  0103E8  0F01               	addlw	1
 13125  0103EA  6E01               	movwf	btemp^0,c
 13126  0103EC  0EEA               	movlw	-22
 13127  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 13128  0103F4  6A01               	clrf	btemp^0,c
 13129  0103F6  0EEB               	movlw	-21
 13130  0103F8  50E3               	movf	plusw1,w,c
 13131  0103FA  2001               	addwfc	btemp^0,w,c
 13132  0103FC  6E01               	movwf	btemp^0,c
 13133  0103FE  0EEB               	movlw	-21
 13134  010400  0060  F007  FFE3   	movff	btemp,plusw1
 13135  010406                     l10696:
 13136                           
 13137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 13138  010406  0E00               	movlw	0
 13139  010408  6EE6               	movwf	postinc1,c
 13140  01040A  0E00               	movlw	0
 13141  01040C  6EE6               	movwf	postinc1,c
 13142  01040E  0E20               	movlw	32
 13143  010410  6EE6               	movwf	postinc1,c
 13144  010412  0E41               	movlw	65
 13145  010414  6EE6               	movwf	postinc1,c
 13146                           
 13147                           ;stkvar	_u @ sp[(-60)+12]
 13148  010416  0ED0               	movlw	-48
 13149  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 13150  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 13151  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 13152  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 13153  010430  EC1C  F093         	call	___flmul	;wreg free
 13154  010434  0060  F007  FFE6   	movff	btemp,postinc1
 13155  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13156  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13157  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 13158                           
 13159                           ;stkvar	_g @ sp[(-60)+16]
 13160  01044C  0ED4               	movlw	-44
 13161  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 13162  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 13163  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 13164  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 13165  010466  EC76  F0B8         	call	___flge	;wreg free
 13166  01046A  A001               	btfss	btemp& (0+255),0,c
 13167  01046C  D032               	goto	l10702
 13168  01046E  D793               	goto	l10692
 13169  010470                     l10698:
 13170                           
 13171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 13172  010470  0E00               	movlw	0
 13173  010472  6EE6               	movwf	postinc1,c
 13174  010474  0E00               	movlw	0
 13175  010476  6EE6               	movwf	postinc1,c
 13176  010478  0E20               	movlw	32
 13177  01047A  6EE6               	movwf	postinc1,c
 13178  01047C  0E41               	movlw	65
 13179  01047E  6EE6               	movwf	postinc1,c
 13180                           
 13181                           ;stkvar	_u @ sp[(-60)+12]
 13182  010480  0ED0               	movlw	-48
 13183  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 13184  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 13185  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 13186  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 13187  01049A  ECA9  F09E         	call	___fldiv	;wreg free
 13188                           
 13189                           ;stkvar	_u @ sp[(-56)+12]
 13190  01049E  0ED4               	movlw	-44
 13191  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 13192  0104A6  0ED5               	movlw	-43
 13193  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13194  0104AE  0ED6               	movlw	-42
 13195  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13196  0104B6  0ED7               	movlw	-41
 13197  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13198                           
 13199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 13200                           ;stkvar	_e @ sp[(-56)+34]
 13201  0104BE  50E1               	movf	fsr1l,w,c
 13202  0104C0  0FEA               	addlw	-22
 13203  0104C2  6ED9               	movwf	fsr2l,c
 13204  0104C4  50E2               	movf	fsr1h,w,c
 13205  0104C6  6EDA               	movwf	fsr2h,c
 13206  0104C8  0EFF               	movlw	255
 13207  0104CA  22DA               	addwfc	fsr2h,f,c
 13208  0104CC  06DE               	decf	postinc2,f,c
 13209  0104CE  0E00               	movlw	0
 13210  0104D0  5ADD               	subwfb	postdec2,f,c
 13211  0104D2                     l10702:
 13212                           
 13213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 13214                           ;stkvar	_u @ sp[(-56)+12]
 13215  0104D2  0ED4               	movlw	-44
 13216  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13217  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13218  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13219  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 13220                           
 13221                           ;stkvar	_g @ sp[(-60)+16]
 13222  0104EC  0ED4               	movlw	-44
 13223  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 13224  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 13225  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 13226  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 13227  010506  EC76  F0B8         	call	___flge	;wreg free
 13228  01050A  A001               	btfss	btemp& (0+255),0,c
 13229  01050C  D7B1               	goto	l10698
 13230  01050E                     u9810:
 13231                           
 13232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 13233                           ;stkvar	_c @ sp[(-56)+-7]
 13234  01050E  0EC1               	movlw	-63
 13235  010510  50E3               	movf	plusw1,w,c
 13236  010512  6EE6               	movwf	postinc1,c
 13237  010514  0E00               	movlw	0
 13238  010516  6EE6               	movwf	postinc1,c
 13239  010518  EC16  F0C5         	call	_tolower	;wreg free
 13240                           
 13241                           ;stkvar	_mode @ sp[(-56)+54]
 13242  01051C  0EFE               	movlw	-2
 13243  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 13244                           
 13245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 13246                           ;stkvar	_mode @ sp[(-56)+54]
 13247                           ;stkvar	_nmode @ sp[(-56)+55]
 13248  010524  0EFE               	movlw	-2
 13249  010526  006F FF8C  F001    	movff	plusw1,btemp
 13250  01052C  0EFF               	movlw	-1
 13251  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 13252                           
 13253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 13254                           ;stkvar	_mode @ sp[(-56)+54]
 13255  010534  0EFE               	movlw	-2
 13256  010536  006F FF8C  F001    	movff	plusw1,btemp
 13257  01053C  0E67               	movlw	103
 13258  01053E  1801               	xorwf	btemp^0,w,c
 13259  010540  A4D8               	btfss	status,2,c
 13260  010542  D025               	goto	l10720
 13261                           
 13262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 13263  010544  5023               	movf	_prec^0,w,c
 13264  010546  1024               	iorwf	(_prec+1)^0,w,c
 13265  010548  A4D8               	btfss	status,2,c
 13266  01054A  D004               	goto	l10714
 13267                           
 13268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 13269  01054C  0E00               	movlw	0
 13270  01054E  6E24               	movwf	(_prec+1)^0,c
 13271  010550  0E01               	movlw	1
 13272  010552  6E23               	movwf	_prec^0,c
 13273  010554                     l10714:
 13274                           
 13275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 13276  010554  BE24               	btfsc	(_prec+1)^0,7,c
 13277  010556  D005               	goto	u9840
 13278  010558  5024               	movf	(_prec+1)^0,w,c
 13279  01055A  E110               	bnz	l10718
 13280  01055C  0423               	decf	_prec^0,w,c
 13281  01055E  B0D8               	btfsc	status,0,c
 13282  010560  D00D               	goto	l10718
 13283  010562                     u9840:
 13284  010562  0E06               	movlw	6
 13285  010564  6E0B               	movwf	(btemp+10)^0,c
 13286  010566  0E00               	movlw	0
 13287  010568  6E0C               	movwf	(btemp+11)^0,c
 13288                           
 13289                           ;stkvar	_p @ sp[(-56)+40]
 13290  01056A  0EF0               	movlw	-16
 13291  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13292  010572  0EF1               	movlw	-15
 13293  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 13294  01057A  D00C               	goto	l10726
 13295  01057C                     l10718:
 13296                           
 13297                           ;stkvar	_p @ sp[(-56)+40]
 13298  01057C  0EF0               	movlw	-16
 13299  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 13300  010584  0EF1               	movlw	-15
 13301  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 13302  01058C  D003               	goto	l10726
 13303  01058E                     l10720:
 13304                           
 13305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 13306  01058E  AE24               	btfss	(_prec+1)^0,7,c
 13307  010590  D7F5               	goto	l10718
 13308  010592  D7E7               	goto	u9840
 13309  010594                     l10726:
 13310                           
 13311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 13312                           ;stkvar	_mode @ sp[(-56)+54]
 13313  010594  0EFE               	movlw	-2
 13314  010596  006F FF8C  F001    	movff	plusw1,btemp
 13315  01059C  0E67               	movlw	103
 13316  01059E  1801               	xorwf	btemp^0,w,c
 13317  0105A0  A4D8               	btfss	status,2,c
 13318  0105A2  D02F               	goto	l10736
 13319                           
 13320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 13321                           ;stkvar	_e @ sp[(-56)+34]
 13322  0105A4  0EEB               	movlw	-21
 13323  0105A6  AEE3               	btfss	plusw1,7,c
 13324  0105A8  D00E               	goto	u9870
 13325  0105AA  0EEA               	movlw	-22
 13326  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 13327  0105B2  0EFC               	movlw	252
 13328  0105B4  5E01               	subwf	btemp^0,f,c
 13329  0105B6  0EEB               	movlw	-21
 13330  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 13331  0105BE  0EFF               	movlw	255
 13332  0105C0  5A01               	subwfb	btemp^0,f,c
 13333  0105C2  A0D8               	btfss	status,0,c
 13334  0105C4  D018               	goto	l10734
 13335  0105C6                     u9870:
 13336                           
 13337                           ;stkvar	_e @ sp[(-56)+34]
 13338                           ;stkvar	_p @ sp[(-56)+40]
 13339  0105C6  0EF0               	movlw	-16
 13340  0105C8  50E3               	movf	plusw1,w,c
 13341  0105CA  0FFF               	addlw	255
 13342  0105CC  6E0B               	movwf	(btemp+10)^0,c
 13343  0105CE  0EF1               	movlw	-15
 13344  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13345  0105D6  0EFF               	movlw	255
 13346  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 13347  0105DA  0EEA               	movlw	-22
 13348  0105DC  50E3               	movf	plusw1,w,c
 13349  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 13350  0105E0  500C               	movf	(btemp+11)^0,w,c
 13351  0105E2  0A80               	xorlw	128
 13352  0105E4  6E01               	movwf	btemp^0,c
 13353  0105E6  0EEB               	movlw	-21
 13354  0105E8  50E3               	movf	plusw1,w,c
 13355  0105EA  0A80               	xorlw	128
 13356  0105EC  5801               	subwfb	btemp^0,w,c
 13357  0105EE  A0D8               	btfss	status,0,c
 13358  0105F0  D002               	goto	l10734
 13359                           
 13360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 13361  0105F2  0E66               	movlw	102
 13362  0105F4  D001               	goto	L10
 13363  0105F6                     l10734:
 13364                           
 13365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 13366  0105F6  0E65               	movlw	101
 13367  0105F8                     L10:
 13368  0105F8  6E0C               	movwf	(btemp+11)^0,c
 13369                           
 13370                           ;stkvar	_nmode @ sp[(-56)+55]
 13371  0105FA  0EFF               	movlw	-1
 13372  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13373  010602                     l10736:
 13374                           
 13375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 13376                           ;stkvar	_p @ sp[(-56)+40]
 13377                           ;stkvar	_m @ sp[(-56)+48]
 13378  010602  0EF0               	movlw	-16
 13379  010604  006F FF8C  F001    	movff	plusw1,btemp
 13380  01060A  0EF8               	movlw	-8
 13381  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 13382  010612  0EF1               	movlw	-15
 13383  010614  006F FF8C  F001    	movff	plusw1,btemp
 13384  01061A  0EF9               	movlw	-7
 13385  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 13386                           
 13387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 13388                           ;stkvar	_mode @ sp[(-56)+54]
 13389  010622  0EFE               	movlw	-2
 13390  010624  006F FF8C  F001    	movff	plusw1,btemp
 13391  01062A  0E67               	movlw	103
 13392  01062C  1801               	xorwf	btemp^0,w,c
 13393  01062E  A4D8               	btfss	status,2,c
 13394  010630  D00B               	goto	u9910
 13395                           
 13396                           ;stkvar	_nmode @ sp[(-56)+55]
 13397  010632  0EFF               	movlw	-1
 13398  010634  006F FF8C  F001    	movff	plusw1,btemp
 13399  01063A  0E66               	movlw	102
 13400  01063C  1801               	xorwf	btemp^0,w,c
 13401  01063E  A4D8               	btfss	status,2,c
 13402  010640  D014               	goto	l2084
 13403                           
 13404                           ;stkvar	_e @ sp[(-56)+34]
 13405  010642  0EEB               	movlw	-21
 13406  010644  AEE3               	btfss	plusw1,7,c
 13407  010646  D011               	goto	l2084
 13408  010648                     u9910:
 13409                           
 13410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 13411                           ;stkvar	_m @ sp[(-56)+48]
 13412  010648  0EF8               	movlw	-8
 13413  01064A  50E3               	movf	plusw1,w,c
 13414  01064C  0F01               	addlw	1
 13415  01064E  6E01               	movwf	btemp^0,c
 13416  010650  0EF8               	movlw	-8
 13417  010652  0060  F007  FFE3   	movff	btemp,plusw1
 13418  010658  6A01               	clrf	btemp^0,c
 13419  01065A  0EF9               	movlw	-7
 13420  01065C  50E3               	movf	plusw1,w,c
 13421  01065E  2001               	addwfc	btemp^0,w,c
 13422  010660  6E01               	movwf	btemp^0,c
 13423  010662  0EF9               	movlw	-7
 13424  010664  0060  F007  FFE3   	movff	btemp,plusw1
 13425  01066A                     l2084:
 13426                           
 13427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 13428                           ;stkvar	_nmode @ sp[(-56)+55]
 13429  01066A  0EFF               	movlw	-1
 13430  01066C  006F FF8C  F001    	movff	plusw1,btemp
 13431  010672  0E66               	movlw	102
 13432  010674  1801               	xorwf	btemp^0,w,c
 13433  010676  A4D8               	btfss	status,2,c
 13434  010678  D03B               	goto	l10756
 13435                           
 13436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 13437                           ;stkvar	_e @ sp[(-56)+34]
 13438  01067A  0EEB               	movlw	-21
 13439  01067C  AEE3               	btfss	plusw1,7,c
 13440  01067E  D01C               	goto	l10752
 13441                           
 13442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 13443  010680  0E00               	movlw	0
 13444  010682  6E09               	movwf	(btemp+8)^0,c
 13445  010684  0E00               	movlw	0
 13446  010686  6E0A               	movwf	(btemp+9)^0,c
 13447  010688  0E80               	movlw	128
 13448  01068A  6E0B               	movwf	(btemp+10)^0,c
 13449  01068C  0E3F               	movlw	63
 13450  01068E  6E0C               	movwf	(btemp+11)^0,c
 13451                           
 13452                           ;stkvar	_u @ sp[(-56)+12]
 13453  010690  0ED4               	movlw	-44
 13454  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 13455  010698  0ED5               	movlw	-43
 13456  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13457  0106A0  0ED6               	movlw	-42
 13458  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13459  0106A8  0ED7               	movlw	-41
 13460  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13461                           
 13462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 13463                           ;stkvar	_e @ sp[(-56)+34]
 13464  0106B0  0EEA               	movlw	-22
 13465  0106B2  6AE3               	clrf	plusw1,c
 13466  0106B4  0EEB               	movlw	-21
 13467  0106B6  6AE3               	clrf	plusw1,c
 13468  0106B8                     l10752:
 13469                           
 13470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 13471                           ;stkvar	_mode @ sp[(-56)+54]
 13472  0106B8  0EFE               	movlw	-2
 13473  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 13474  0106C0  0E67               	movlw	103
 13475  0106C2  1801               	xorwf	btemp^0,w,c
 13476  0106C4  B4D8               	btfsc	status,2,c
 13477  0106C6  D014               	goto	l10756
 13478                           
 13479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 13480                           ;stkvar	_e @ sp[(-56)+34]
 13481                           ;stkvar	_m @ sp[(-56)+48]
 13482  0106C8  0EF8               	movlw	-8
 13483  0106CA  50E3               	movf	plusw1,w,c
 13484  0106CC  6E01               	movwf	btemp^0,c
 13485  0106CE  0EEA               	movlw	-22
 13486  0106D0  50E3               	movf	plusw1,w,c
 13487  0106D2  2601               	addwf	btemp^0,f,c
 13488  0106D4  0EF8               	movlw	-8
 13489  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 13490  0106DC  0EF9               	movlw	-7
 13491  0106DE  50E3               	movf	plusw1,w,c
 13492  0106E0  6E01               	movwf	btemp^0,c
 13493  0106E2  0EEB               	movlw	-21
 13494  0106E4  50E3               	movf	plusw1,w,c
 13495  0106E6  2201               	addwfc	btemp^0,f,c
 13496  0106E8  0EF9               	movlw	-7
 13497  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 13498  0106F0                     l10756:
 13499                           
 13500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 13501                           ;stkvar	_i @ sp[(-56)+36]
 13502  0106F0  0EEC               	movlw	-20
 13503  0106F2  6AE3               	clrf	plusw1,c
 13504  0106F4  0EED               	movlw	-19
 13505  0106F6  6AE3               	clrf	plusw1,c
 13506                           
 13507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 13508                           ;stkvar	_g @ sp[(-56)+16]
 13509  0106F8  0ED8               	movlw	-40
 13510  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 13511  010700  0ED9               	movlw	-39
 13512  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 13513  010708  0EDA               	movlw	-38
 13514  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13515  010710  0EDB               	movlw	-37
 13516  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 13517                           
 13518                           ;stkvar	_h @ sp[(-56)+24]
 13519  010718  0EE0               	movlw	-32
 13520  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13521  010720  0EE1               	movlw	-31
 13522  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13523  010728  0EE2               	movlw	-30
 13524  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13525  010730  0EE3               	movlw	-29
 13526  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13527                           
 13528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 13529                           ;stkvar	_u @ sp[(-56)+12]
 13530  010738  0ED4               	movlw	-44
 13531  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 13532  010740  0ED5               	movlw	-43
 13533  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 13534  010748  0ED6               	movlw	-42
 13535  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13536  010750  0ED7               	movlw	-41
 13537  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 13538                           
 13539                           ;stkvar	_ou @ sp[(-56)+28]
 13540  010758  0EE4               	movlw	-28
 13541  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13542  010760  0EE5               	movlw	-27
 13543  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13544  010768  0EE6               	movlw	-26
 13545  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13546  010770  0EE7               	movlw	-25
 13547  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 13548                           
 13549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 13550  010778  D0D6               	goto	l10772
 13551  01077A                     l10762:
 13552                           
 13553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 13554                           ;stkvar	_u @ sp[(-56)+12]
 13555  01077A  0ED4               	movlw	-44
 13556  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 13557  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 13558  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 13559  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 13560                           
 13561                           ;stkvar	_h @ sp[(-60)+24]
 13562  010794  0EDC               	movlw	-36
 13563  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 13564  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 13565  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13566  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13567  0107AE  ECA9  F09E         	call	___fldiv	;wreg free
 13568  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 13569  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13570  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13571  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 13572  0107CA  ECD9  F0A7         	call	_floorf	;wreg free
 13573                           
 13574                           ;stkvar	_l @ sp[(-56)+20]
 13575  0107CE  0EDC               	movlw	-36
 13576  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 13577  0107D6  0EDD               	movlw	-35
 13578  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13579  0107DE  0EDE               	movlw	-34
 13580  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13581  0107E6  0EDF               	movlw	-33
 13582  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 13583                           
 13584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 13585                           ;stkvar	_l @ sp[(-56)+20]
 13586  0107EE  0EDC               	movlw	-36
 13587  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13588  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13589  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 13590  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 13591  010808  EC05  F0B7         	call	___fltol	;wreg free
 13592  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 13593  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 13594                           
 13595                           ;stkvar	_d @ sp[(-56)+44]
 13596  010818  0EF4               	movlw	-12
 13597  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13598  010820  0EF5               	movlw	-11
 13599  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 13600                           
 13601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 13602                           ;stkvar	_u @ sp[(-56)+12]
 13603  010828  0ED4               	movlw	-44
 13604  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 13605  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 13606  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 13607  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 13608                           
 13609                           ;stkvar	_l @ sp[(-60)+20]
 13610  010842  0ED8               	movlw	-40
 13611  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 13612  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 13613  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 13614  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 13615  01085C  EC1C  F093         	call	___flmul	;wreg free
 13616  010860  0060  F007  FFE6   	movff	btemp,postinc1
 13617  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13618  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13619  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 13620                           
 13621                           ;stkvar	_h @ sp[(-60)+24]
 13622  010878  0EDC               	movlw	-36
 13623  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 13624  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 13625  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 13626  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 13627  010892  ECC3  F0C8         	call	___flsub	;wreg free
 13628                           
 13629                           ;stkvar	_h @ sp[(-56)+24]
 13630  010896  0EE0               	movlw	-32
 13631  010898  0060  F007  FFE3   	movff	btemp,plusw1
 13632  01089E  0EE1               	movlw	-31
 13633  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13634  0108A6  0EE2               	movlw	-30
 13635  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13636  0108AE  0EE3               	movlw	-29
 13637  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 13638                           
 13639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 13640  0108B6  0E00               	movlw	0
 13641  0108B8  6EE6               	movwf	postinc1,c
 13642  0108BA  0E00               	movlw	0
 13643  0108BC  6EE6               	movwf	postinc1,c
 13644  0108BE  0E20               	movlw	32
 13645  0108C0  6EE6               	movwf	postinc1,c
 13646  0108C2  0E41               	movlw	65
 13647  0108C4  6EE6               	movwf	postinc1,c
 13648                           
 13649                           ;stkvar	_u @ sp[(-60)+12]
 13650  0108C6  0ED0               	movlw	-48
 13651  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13652  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13653  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13654  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13655  0108E0  ECA9  F09E         	call	___fldiv	;wreg free
 13656                           
 13657                           ;stkvar	_u @ sp[(-56)+12]
 13658  0108E4  0ED4               	movlw	-44
 13659  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 13660  0108EC  0ED5               	movlw	-43
 13661  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13662  0108F4  0ED6               	movlw	-42
 13663  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13664  0108FC  0ED7               	movlw	-41
 13665  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 13666                           
 13667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 13668                           ;stkvar	_i @ sp[(-56)+36]
 13669  010904  0EEC               	movlw	-20
 13670  010906  50E3               	movf	plusw1,w,c
 13671  010908  0F01               	addlw	1
 13672  01090A  6E01               	movwf	btemp^0,c
 13673  01090C  0EEC               	movlw	-20
 13674  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 13675  010914  6A01               	clrf	btemp^0,c
 13676  010916  0EED               	movlw	-19
 13677  010918  50E3               	movf	plusw1,w,c
 13678  01091A  2001               	addwfc	btemp^0,w,c
 13679  01091C  6E01               	movwf	btemp^0,c
 13680  01091E  0EED               	movlw	-19
 13681  010920  0060  F007  FFE3   	movff	btemp,plusw1
 13682  010926                     l10772:
 13683                           
 13684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 13685                           ;stkvar	_m @ sp[(-56)+48]
 13686                           ;stkvar	_i @ sp[(-56)+36]
 13687  010926  50E1               	movf	fsr1l,w,c
 13688  010928  0FEC               	addlw	-20
 13689  01092A  6ED9               	movwf	fsr2l,c
 13690  01092C  50E2               	movf	fsr1h,w,c
 13691  01092E  6EDA               	movwf	fsr2h,c
 13692  010930  0EFF               	movlw	255
 13693  010932  22DA               	addwfc	fsr2h,f,c
 13694  010934  0EF8               	movlw	-8
 13695  010936  50E3               	movf	plusw1,w,c
 13696  010938  5CDE               	subwf	postinc2,w,c
 13697  01093A  50DE               	movf	postinc2,w,c
 13698  01093C  0A80               	xorlw	128
 13699  01093E  6E01               	movwf	btemp^0,c
 13700  010940  0EF9               	movlw	-7
 13701  010942  50E3               	movf	plusw1,w,c
 13702  010944  0A80               	xorlw	128
 13703  010946  5801               	subwfb	btemp^0,w,c
 13704  010948  A0D8               	btfss	status,0,c
 13705  01094A  D717               	goto	l10762
 13706                           
 13707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 13708  01094C  0E00               	movlw	0
 13709  01094E  6EE6               	movwf	postinc1,c
 13710  010950  0E00               	movlw	0
 13711  010952  6EE6               	movwf	postinc1,c
 13712  010954  0EA0               	movlw	160
 13713  010956  6EE6               	movwf	postinc1,c
 13714  010958  0E40               	movlw	64
 13715  01095A  6EE6               	movwf	postinc1,c
 13716                           
 13717                           ;stkvar	_u @ sp[(-60)+12]
 13718  01095C  0ED0               	movlw	-48
 13719  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 13720  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 13721  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 13722  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 13723  010976  EC1C  F093         	call	___flmul	;wreg free
 13724                           
 13725                           ;stkvar	_l @ sp[(-56)+20]
 13726  01097A  0EDC               	movlw	-36
 13727  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 13728  010982  0EDD               	movlw	-35
 13729  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13730  01098A  0EDE               	movlw	-34
 13731  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13732  010992  0EDF               	movlw	-33
 13733  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 13734                           
 13735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 13736                           ;stkvar	_l @ sp[(-56)+20]
 13737  01099A  0EDC               	movlw	-36
 13738  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 13739  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13740  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13741  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 13742                           
 13743                           ;stkvar	_h @ sp[(-60)+24]
 13744  0109B4  0EDC               	movlw	-36
 13745  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 13746  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 13747  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13748  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13749  0109CE  EC76  F0B8         	call	___flge	;wreg free
 13750  0109D2  A001               	btfss	btemp& (0+255),0,c
 13751  0109D4  D021               	goto	u9980
 13752                           
 13753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 13754                           ;stkvar	_l @ sp[(-56)+20]
 13755                           
 13756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 13757                           
 13758                           ;stkvar	_l @ sp[(-56)+20]
 13759                           
 13760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 13761  0109D6  0EDC               	movlw	-36
 13762  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 13763  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13764  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13765  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 13766                           
 13767                           ;stkvar	_h @ sp[(-60)+24]
 13768  0109F0  0EDC               	movlw	-36
 13769  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 13770  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 13771  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13772  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 13773  010A0A  ECB4  F0C0         	call	___fleq	;wreg free
 13774  010A0E  A001               	btfss	btemp& (0+255),0,c
 13775  010A10  D01B               	goto	l10786
 13776                           
 13777                           ;stkvar	_d @ sp[(-56)+44]
 13778  010A12  0EF4               	movlw	-12
 13779  010A14  B0E3               	btfsc	plusw1,0,c
 13780  010A16  D018               	goto	l10786
 13781  010A18                     u9980:
 13782                           
 13783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 13784  010A18  0E00               	movlw	0
 13785  010A1A  6E09               	movwf	(btemp+8)^0,c
 13786  010A1C  0E00               	movlw	0
 13787  010A1E  6E0A               	movwf	(btemp+9)^0,c
 13788  010A20  0E00               	movlw	0
 13789  010A22  6E0B               	movwf	(btemp+10)^0,c
 13790  010A24  0E00               	movlw	0
 13791  010A26  6E0C               	movwf	(btemp+11)^0,c
 13792                           
 13793                           ;stkvar	_l @ sp[(-56)+20]
 13794  010A28  0EDC               	movlw	-36
 13795  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13796  010A30  0EDD               	movlw	-35
 13797  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13798  010A38  0EDE               	movlw	-34
 13799  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13800  010A40  0EDF               	movlw	-33
 13801  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 13802  010A48                     l10786:
 13803                           
 13804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 13805                           ;stkvar	_l @ sp[(-56)+20]
 13806  010A48  0EDC               	movlw	-36
 13807  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 13808  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 13809  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 13810  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13811                           
 13812                           ;stkvar	_g @ sp[(-60)+16]
 13813  010A62  0ED4               	movlw	-44
 13814  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 13815  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 13816  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 13817  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 13818  010A7C  EC31  F097         	call	___fladd	;wreg free
 13819                           
 13820                           ;stkvar	_h @ sp[(-56)+24]
 13821  010A80  0EE0               	movlw	-32
 13822  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 13823  010A88  0EE1               	movlw	-31
 13824  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13825  010A90  0EE2               	movlw	-30
 13826  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13827  010A98  0EE3               	movlw	-29
 13828  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 13829                           
 13830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 13831                           ;stkvar	_ou @ sp[(-56)+28]
 13832  010AA0  0EE4               	movlw	-28
 13833  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 13834  010AA8  0EE5               	movlw	-27
 13835  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 13836  010AB0  0EE6               	movlw	-26
 13837  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13838  010AB8  0EE7               	movlw	-25
 13839  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13840                           
 13841                           ;stkvar	_u @ sp[(-56)+12]
 13842  010AC0  0ED4               	movlw	-44
 13843  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 13844  010AC8  0ED5               	movlw	-43
 13845  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13846  010AD0  0ED6               	movlw	-42
 13847  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13848  010AD8  0ED7               	movlw	-41
 13849  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13850                           
 13851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 13852                           ;stkvar	_nmode @ sp[(-56)+55]
 13853  010AE0  0EFF               	movlw	-1
 13854  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 13855  010AE8  0E65               	movlw	101
 13856  010AEA  1801               	xorwf	btemp^0,w,c
 13857  010AEC  B4D8               	btfsc	status,2,c
 13858  010AEE  D011               	goto	l10794
 13859                           
 13860                           ;stkvar	_e @ sp[(-56)+34]
 13861                           ;stkvar	_ne @ sp[(-56)+46]
 13862  010AF0  0EEA               	movlw	-22
 13863  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 13864  010AF8  0EF6               	movlw	-10
 13865  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 13866  010B00  0EEB               	movlw	-21
 13867  010B02  006F FF8C  F001    	movff	plusw1,btemp
 13868  010B08  0EF7               	movlw	-9
 13869  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 13870  010B10  D004               	goto	l2099
 13871  010B12                     l10794:
 13872                           
 13873                           ;stkvar	_ne @ sp[(-56)+46]
 13874  010B12  0EF6               	movlw	-10
 13875  010B14  6AE3               	clrf	plusw1,c
 13876  010B16  0EF7               	movlw	-9
 13877  010B18  6AE3               	clrf	plusw1,c
 13878  010B1A                     l2099:
 13879                           
 13880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 13881                           ;stkvar	_pp @ sp[(-56)+50]
 13882  010B1A  0EFA               	movlw	-6
 13883  010B1C  6AE3               	clrf	plusw1,c
 13884  010B1E  0EFB               	movlw	-5
 13885  010B20  6AE3               	clrf	plusw1,c
 13886                           
 13887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 13888                           ;stkvar	_t @ sp[(-56)+52]
 13889  010B22  0EFC               	movlw	-4
 13890  010B24  6AE3               	clrf	plusw1,c
 13891  010B26  0EFD               	movlw	-3
 13892  010B28  6AE3               	clrf	plusw1,c
 13893                           
 13894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 13895                           ;stkvar	_i @ sp[(-56)+36]
 13896  010B2A  0EEC               	movlw	-20
 13897  010B2C  6AE3               	clrf	plusw1,c
 13898  010B2E  0EED               	movlw	-19
 13899  010B30  6AE3               	clrf	plusw1,c
 13900                           
 13901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13902  010B32  D1B7               	goto	l10846
 13903  010B34                     l10796:
 13904                           
 13905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 13906                           ;stkvar	_u @ sp[(-56)+12]
 13907  010B34  0ED4               	movlw	-44
 13908  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 13909  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13910  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 13911  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 13912                           
 13913                           ;stkvar	_h @ sp[(-60)+24]
 13914  010B4E  0EDC               	movlw	-36
 13915  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 13916  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 13917  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13918  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 13919  010B68  ECA9  F09E         	call	___fldiv	;wreg free
 13920  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 13921  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13922  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13923  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 13924  010B84  ECD9  F0A7         	call	_floorf	;wreg free
 13925                           
 13926                           ;stkvar	_l @ sp[(-56)+20]
 13927  010B88  0EDC               	movlw	-36
 13928  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 13929  010B90  0EDD               	movlw	-35
 13930  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13931  010B98  0EDE               	movlw	-34
 13932  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13933  010BA0  0EDF               	movlw	-33
 13934  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 13935                           
 13936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 13937                           ;stkvar	_l @ sp[(-56)+20]
 13938  010BA8  0EDC               	movlw	-36
 13939  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13940  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 13941  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 13942  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 13943  010BC2  EC05  F0B7         	call	___fltol	;wreg free
 13944  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 13945  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 13946                           
 13947                           ;stkvar	_d @ sp[(-56)+44]
 13948  010BD2  0EF4               	movlw	-12
 13949  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13950  010BDA  0EF5               	movlw	-11
 13951  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13952                           
 13953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 13954  010BE2  B825               	btfsc	_flags^0,4,c
 13955  010BE4  D026               	goto	l10810
 13956                           
 13957                           ;stkvar	_d @ sp[(-56)+44]
 13958  010BE6  0EF4               	movlw	-12
 13959  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 13960  010BEE  0EF5               	movlw	-11
 13961  010BF0  50E3               	movf	plusw1,w,c
 13962  010BF2  1001               	iorwf	btemp^0,w,c
 13963  010BF4  A4D8               	btfss	status,2,c
 13964  010BF6  D01D               	goto	l10810
 13965                           
 13966                           ;stkvar	_mode @ sp[(-56)+54]
 13967  010BF8  0EFE               	movlw	-2
 13968  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 13969  010C00  0E67               	movlw	103
 13970  010C02  1801               	xorwf	btemp^0,w,c
 13971  010C04  A4D8               	btfss	status,2,c
 13972  010C06  D015               	goto	l10810
 13973                           
 13974                           ;stkvar	_ne @ sp[(-56)+46]
 13975  010C08  0EF7               	movlw	-9
 13976  010C0A  AEE3               	btfss	plusw1,7,c
 13977  010C0C  D012               	goto	l10810
 13978                           
 13979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 13980                           ;stkvar	_t @ sp[(-56)+52]
 13981  010C0E  0EFC               	movlw	-4
 13982  010C10  50E3               	movf	plusw1,w,c
 13983  010C12  0F01               	addlw	1
 13984  010C14  6E01               	movwf	btemp^0,c
 13985  010C16  0EFC               	movlw	-4
 13986  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 13987  010C1E  6A01               	clrf	btemp^0,c
 13988  010C20  0EFD               	movlw	-3
 13989  010C22  50E3               	movf	plusw1,w,c
 13990  010C24  2001               	addwfc	btemp^0,w,c
 13991  010C26  6E01               	movwf	btemp^0,c
 13992  010C28  0EFD               	movlw	-3
 13993  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 13994                           
 13995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 13996  010C30  D0AF               	goto	l10838
 13997  010C32                     l10810:
 13998                           
 13999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 14000                           ;stkvar	_pp @ sp[(-56)+50]
 14001  010C32  0EFA               	movlw	-6
 14002  010C34  006F FF8C  F001    	movff	plusw1,btemp
 14003  010C3A  0EFB               	movlw	-5
 14004  010C3C  50E3               	movf	plusw1,w,c
 14005  010C3E  1001               	iorwf	btemp^0,w,c
 14006  010C40  A4D8               	btfss	status,2,c
 14007  010C42  D070               	goto	l10830
 14008                           
 14009                           ;stkvar	_ne @ sp[(-56)+46]
 14010  010C44  0EF7               	movlw	-9
 14011  010C46  AEE3               	btfss	plusw1,7,c
 14012  010C48  D06D               	goto	l10830
 14013                           
 14014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 14015                           ;stkvar	_n @ sp[(-56)+32]
 14016  010C4A  0EE8               	movlw	-24
 14017  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14018  010C52  0EE9               	movlw	-23
 14019  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 14020  010C5A  0E94               	movlw	low _dbuf
 14021  010C5C  240B               	addwf	(btemp+10)^0,w,c
 14022  010C5E  6ED9               	movwf	fsr2l,c
 14023  010C60  0E03               	movlw	high _dbuf
 14024  010C62  200C               	addwfc	(btemp+11)^0,w,c
 14025  010C64  6EDA               	movwf	fsr2h,c
 14026  010C66  0E2E               	movlw	46
 14027  010C68  6EDF               	movwf	indf2,c
 14028                           
 14029                           ;stkvar	_n @ sp[(-56)+32]
 14030  010C6A  0EE8               	movlw	-24
 14031  010C6C  50E3               	movf	plusw1,w,c
 14032  010C6E  0F01               	addlw	1
 14033  010C70  6E01               	movwf	btemp^0,c
 14034  010C72  0EE8               	movlw	-24
 14035  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 14036  010C7A  6A01               	clrf	btemp^0,c
 14037  010C7C  0EE9               	movlw	-23
 14038  010C7E  50E3               	movf	plusw1,w,c
 14039  010C80  2001               	addwfc	btemp^0,w,c
 14040  010C82  6E01               	movwf	btemp^0,c
 14041  010C84  0EE9               	movlw	-23
 14042  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 14043                           
 14044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 14045                           ;stkvar	_w @ sp[(-56)+38]
 14046  010C8C  50E1               	movf	fsr1l,w,c
 14047  010C8E  0FEE               	addlw	-18
 14048  010C90  6ED9               	movwf	fsr2l,c
 14049  010C92  50E2               	movf	fsr1h,w,c
 14050  010C94  6EDA               	movwf	fsr2h,c
 14051  010C96  0EFF               	movlw	255
 14052  010C98  22DA               	addwfc	fsr2h,f,c
 14053  010C9A  06DE               	decf	postinc2,f,c
 14054  010C9C  0E00               	movlw	0
 14055  010C9E  5ADD               	subwfb	postdec2,f,c
 14056                           
 14057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 14058  010CA0  0E01               	movlw	1
 14059  010CA2  6E0B               	movwf	(btemp+10)^0,c
 14060  010CA4  0E00               	movlw	0
 14061  010CA6  6E0C               	movwf	(btemp+11)^0,c
 14062                           
 14063                           ;stkvar	_pp @ sp[(-56)+50]
 14064  010CA8  0EFA               	movlw	-6
 14065  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14066  010CB0  0EFB               	movlw	-5
 14067  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 14068  010CB8  D035               	goto	l10830
 14069  010CBA                     l10822:
 14070                           
 14071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 14072                           ;stkvar	_n @ sp[(-56)+32]
 14073  010CBA  0EE8               	movlw	-24
 14074  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14075  010CC2  0EE9               	movlw	-23
 14076  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14077  010CCA  0E94               	movlw	low _dbuf
 14078  010CCC  240B               	addwf	(btemp+10)^0,w,c
 14079  010CCE  6ED9               	movwf	fsr2l,c
 14080  010CD0  0E03               	movlw	high _dbuf
 14081  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 14082  010CD4  6EDA               	movwf	fsr2h,c
 14083  010CD6  0E30               	movlw	48
 14084  010CD8  6EDF               	movwf	indf2,c
 14085                           
 14086                           ;stkvar	_n @ sp[(-56)+32]
 14087  010CDA  0EE8               	movlw	-24
 14088  010CDC  50E3               	movf	plusw1,w,c
 14089  010CDE  0F01               	addlw	1
 14090  010CE0  6E01               	movwf	btemp^0,c
 14091  010CE2  0EE8               	movlw	-24
 14092  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 14093  010CEA  6A01               	clrf	btemp^0,c
 14094  010CEC  0EE9               	movlw	-23
 14095  010CEE  50E3               	movf	plusw1,w,c
 14096  010CF0  2001               	addwfc	btemp^0,w,c
 14097  010CF2  6E01               	movwf	btemp^0,c
 14098  010CF4  0EE9               	movlw	-23
 14099  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 14100                           
 14101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 14102                           ;stkvar	_w @ sp[(-56)+38]
 14103  010CFC  50E1               	movf	fsr1l,w,c
 14104  010CFE  0FEE               	addlw	-18
 14105  010D00  6ED9               	movwf	fsr2l,c
 14106  010D02  50E2               	movf	fsr1h,w,c
 14107  010D04  6EDA               	movwf	fsr2h,c
 14108  010D06  0EFF               	movlw	255
 14109  010D08  22DA               	addwfc	fsr2h,f,c
 14110  010D0A  06DE               	decf	postinc2,f,c
 14111  010D0C  0E00               	movlw	0
 14112  010D0E  5ADD               	subwfb	postdec2,f,c
 14113                           
 14114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 14115                           ;stkvar	_t @ sp[(-56)+52]
 14116  010D10  50E1               	movf	fsr1l,w,c
 14117  010D12  0FFC               	addlw	-4
 14118  010D14  6ED9               	movwf	fsr2l,c
 14119  010D16  50E2               	movf	fsr1h,w,c
 14120  010D18  6EDA               	movwf	fsr2h,c
 14121  010D1A  0EFF               	movlw	255
 14122  010D1C  22DA               	addwfc	fsr2h,f,c
 14123  010D1E  06DE               	decf	postinc2,f,c
 14124  010D20  0E00               	movlw	0
 14125  010D22  5ADD               	subwfb	postdec2,f,c
 14126  010D24                     l10830:
 14127                           
 14128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 14129                           ;stkvar	_t @ sp[(-56)+52]
 14130  010D24  0EFC               	movlw	-4
 14131  010D26  006F FF8C  F001    	movff	plusw1,btemp
 14132  010D2C  0EFD               	movlw	-3
 14133  010D2E  50E3               	movf	plusw1,w,c
 14134  010D30  1001               	iorwf	btemp^0,w,c
 14135  010D32  A4D8               	btfss	status,2,c
 14136  010D34  D7C2               	goto	l10822
 14137                           
 14138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 14139                           ;stkvar	_n @ sp[(-56)+32]
 14140  010D36  0EE8               	movlw	-24
 14141  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 14142  010D3E  0EE9               	movlw	-23
 14143  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 14144  010D46  0E94               	movlw	low _dbuf
 14145  010D48  240B               	addwf	(btemp+10)^0,w,c
 14146  010D4A  6ED9               	movwf	fsr2l,c
 14147  010D4C  0E03               	movlw	high _dbuf
 14148  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 14149  010D50  6EDA               	movwf	fsr2h,c
 14150                           
 14151                           ;stkvar	_d @ sp[(-56)+44]
 14152  010D52  0EF4               	movlw	-12
 14153  010D54  50E3               	movf	plusw1,w,c
 14154  010D56  0F30               	addlw	48
 14155  010D58  6EDF               	movwf	indf2,c
 14156                           
 14157                           ;stkvar	_n @ sp[(-56)+32]
 14158  010D5A  0EE8               	movlw	-24
 14159  010D5C  50E3               	movf	plusw1,w,c
 14160  010D5E  0F01               	addlw	1
 14161  010D60  6E01               	movwf	btemp^0,c
 14162  010D62  0EE8               	movlw	-24
 14163  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 14164  010D6A  6A01               	clrf	btemp^0,c
 14165  010D6C  0EE9               	movlw	-23
 14166  010D6E  50E3               	movf	plusw1,w,c
 14167  010D70  2001               	addwfc	btemp^0,w,c
 14168  010D72  6E01               	movwf	btemp^0,c
 14169  010D74  0EE9               	movlw	-23
 14170  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 14171                           
 14172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 14173                           ;stkvar	_w @ sp[(-56)+38]
 14174  010D7C  50E1               	movf	fsr1l,w,c
 14175  010D7E  0FEE               	addlw	-18
 14176  010D80  6ED9               	movwf	fsr2l,c
 14177  010D82  50E2               	movf	fsr1h,w,c
 14178  010D84  6EDA               	movwf	fsr2h,c
 14179  010D86  0EFF               	movlw	255
 14180  010D88  22DA               	addwfc	fsr2h,f,c
 14181  010D8A  06DE               	decf	postinc2,f,c
 14182  010D8C  0E00               	movlw	0
 14183  010D8E  5ADD               	subwfb	postdec2,f,c
 14184  010D90                     l10838:
 14185                           
 14186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 14187                           ;stkvar	_u @ sp[(-56)+12]
 14188  010D90  0ED4               	movlw	-44
 14189  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 14190  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 14191  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 14192  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 14193                           
 14194                           ;stkvar	_l @ sp[(-60)+20]
 14195  010DAA  0ED8               	movlw	-40
 14196  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 14197  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14198  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14199  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 14200  010DC4  EC1C  F093         	call	___flmul	;wreg free
 14201  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 14202  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14203  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14204  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 14205                           
 14206                           ;stkvar	_h @ sp[(-60)+24]
 14207  010DE0  0EDC               	movlw	-36
 14208  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 14209  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 14210  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 14211  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 14212  010DFA  ECC3  F0C8         	call	___flsub	;wreg free
 14213                           
 14214                           ;stkvar	_h @ sp[(-56)+24]
 14215  010DFE  0EE0               	movlw	-32
 14216  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 14217  010E06  0EE1               	movlw	-31
 14218  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14219  010E0E  0EE2               	movlw	-30
 14220  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14221  010E16  0EE3               	movlw	-29
 14222  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 14223                           
 14224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 14225  010E1E  0E00               	movlw	0
 14226  010E20  6EE6               	movwf	postinc1,c
 14227  010E22  0E00               	movlw	0
 14228  010E24  6EE6               	movwf	postinc1,c
 14229  010E26  0E20               	movlw	32
 14230  010E28  6EE6               	movwf	postinc1,c
 14231  010E2A  0E41               	movlw	65
 14232  010E2C  6EE6               	movwf	postinc1,c
 14233                           
 14234                           ;stkvar	_u @ sp[(-60)+12]
 14235  010E2E  0ED0               	movlw	-48
 14236  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 14237  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 14238  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14239  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 14240  010E48  ECA9  F09E         	call	___fldiv	;wreg free
 14241                           
 14242                           ;stkvar	_u @ sp[(-56)+12]
 14243  010E4C  0ED4               	movlw	-44
 14244  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 14245  010E54  0ED5               	movlw	-43
 14246  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14247  010E5C  0ED6               	movlw	-42
 14248  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14249  010E64  0ED7               	movlw	-41
 14250  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 14251                           
 14252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 14253                           ;stkvar	_ne @ sp[(-56)+46]
 14254  010E6C  50E1               	movf	fsr1l,w,c
 14255  010E6E  0FF6               	addlw	-10
 14256  010E70  6ED9               	movwf	fsr2l,c
 14257  010E72  50E2               	movf	fsr1h,w,c
 14258  010E74  6EDA               	movwf	fsr2h,c
 14259  010E76  0EFF               	movlw	255
 14260  010E78  22DA               	addwfc	fsr2h,f,c
 14261  010E7A  06DE               	decf	postinc2,f,c
 14262  010E7C  0E00               	movlw	0
 14263  010E7E  5ADD               	subwfb	postdec2,f,c
 14264                           
 14265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 14266                           ;stkvar	_i @ sp[(-56)+36]
 14267  010E80  0EEC               	movlw	-20
 14268  010E82  50E3               	movf	plusw1,w,c
 14269  010E84  0F01               	addlw	1
 14270  010E86  6E01               	movwf	btemp^0,c
 14271  010E88  0EEC               	movlw	-20
 14272  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 14273  010E90  6A01               	clrf	btemp^0,c
 14274  010E92  0EED               	movlw	-19
 14275  010E94  50E3               	movf	plusw1,w,c
 14276  010E96  2001               	addwfc	btemp^0,w,c
 14277  010E98  6E01               	movwf	btemp^0,c
 14278  010E9A  0EED               	movlw	-19
 14279  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 14280  010EA2                     l10846:
 14281                           
 14282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 14283                           ;stkvar	_m @ sp[(-56)+48]
 14284                           ;stkvar	_i @ sp[(-56)+36]
 14285  010EA2  50E1               	movf	fsr1l,w,c
 14286  010EA4  0FEC               	addlw	-20
 14287  010EA6  6ED9               	movwf	fsr2l,c
 14288  010EA8  50E2               	movf	fsr1h,w,c
 14289  010EAA  6EDA               	movwf	fsr2h,c
 14290  010EAC  0EFF               	movlw	255
 14291  010EAE  22DA               	addwfc	fsr2h,f,c
 14292  010EB0  0EF8               	movlw	-8
 14293  010EB2  50E3               	movf	plusw1,w,c
 14294  010EB4  5CDE               	subwf	postinc2,w,c
 14295  010EB6  50DE               	movf	postinc2,w,c
 14296  010EB8  0A80               	xorlw	128
 14297  010EBA  6E01               	movwf	btemp^0,c
 14298  010EBC  0EF9               	movlw	-7
 14299  010EBE  50E3               	movf	plusw1,w,c
 14300  010EC0  0A80               	xorlw	128
 14301  010EC2  5801               	subwfb	btemp^0,w,c
 14302  010EC4  B0D8               	btfsc	status,0,c
 14303  010EC6  D00E               	goto	u10080
 14304                           
 14305                           ;stkvar	_n @ sp[(-56)+32]
 14306  010EC8  0EE9               	movlw	-23
 14307  010ECA  BEE3               	btfsc	plusw1,7,c
 14308  010ECC  D633               	goto	l10796
 14309  010ECE  0EE9               	movlw	-23
 14310  010ED0  50E3               	movf	plusw1,w,c
 14311  010ED2  E108               	bnz	u10080
 14312  010ED4  0EE8               	movlw	-24
 14313  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 14314  010EDC  0E4B               	movlw	75
 14315  010EDE  5E01               	subwf	btemp^0,f,c
 14316  010EE0  A0D8               	btfss	status,0,c
 14317  010EE2  D628               	goto	l10796
 14318  010EE4                     u10080:
 14319                           
 14320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 14321                           ;stkvar	_pp @ sp[(-56)+50]
 14322  010EE4  0EFA               	movlw	-6
 14323  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 14324  010EEC  0EFB               	movlw	-5
 14325  010EEE  50E3               	movf	plusw1,w,c
 14326  010EF0  1001               	iorwf	btemp^0,w,c
 14327  010EF2  B4D8               	btfsc	status,2,c
 14328  010EF4  A825               	btfss	_flags^0,4,c
 14329  010EF6  D021               	goto	l10858
 14330                           
 14331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 14332                           ;stkvar	_n @ sp[(-56)+32]
 14333  010EF8  0EE8               	movlw	-24
 14334  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14335  010F00  0EE9               	movlw	-23
 14336  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 14337  010F08  0E94               	movlw	low _dbuf
 14338  010F0A  240B               	addwf	(btemp+10)^0,w,c
 14339  010F0C  6ED9               	movwf	fsr2l,c
 14340  010F0E  0E03               	movlw	high _dbuf
 14341  010F10  200C               	addwfc	(btemp+11)^0,w,c
 14342  010F12  6EDA               	movwf	fsr2h,c
 14343  010F14  0E2E               	movlw	46
 14344  010F16  6EDF               	movwf	indf2,c
 14345                           
 14346                           ;stkvar	_n @ sp[(-56)+32]
 14347  010F18  0EE8               	movlw	-24
 14348  010F1A  50E3               	movf	plusw1,w,c
 14349  010F1C  0F01               	addlw	1
 14350  010F1E  6E01               	movwf	btemp^0,c
 14351  010F20  0EE8               	movlw	-24
 14352  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 14353  010F28  6A01               	clrf	btemp^0,c
 14354  010F2A  0EE9               	movlw	-23
 14355  010F2C  50E3               	movf	plusw1,w,c
 14356  010F2E  2001               	addwfc	btemp^0,w,c
 14357  010F30  6E01               	movwf	btemp^0,c
 14358  010F32  0EE9               	movlw	-23
 14359  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 14360  010F3A                     l10858:
 14361                           
 14362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 14363                           ;stkvar	_n @ sp[(-56)+32]
 14364  010F3A  0EE8               	movlw	-24
 14365  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14366  010F42  0EE9               	movlw	-23
 14367  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 14368  010F4A  0E94               	movlw	low _dbuf
 14369  010F4C  240B               	addwf	(btemp+10)^0,w,c
 14370  010F4E  6ED9               	movwf	fsr2l,c
 14371  010F50  0E03               	movlw	high _dbuf
 14372  010F52  200C               	addwfc	(btemp+11)^0,w,c
 14373  010F54  6EDA               	movwf	fsr2h,c
 14374  010F56  0E00               	movlw	0
 14375  010F58  6EDF               	movwf	indf2,c
 14376                           
 14377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 14378                           ;stkvar	_nmode @ sp[(-56)+55]
 14379  010F5A  0EFF               	movlw	-1
 14380  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 14381  010F62  0E65               	movlw	101
 14382  010F64  1801               	xorwf	btemp^0,w,c
 14383  010F66  A4D8               	btfss	status,2,c
 14384  010F68  EF16  F081         	goto	l10662
 14385                           
 14386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 14387  010F6C  0E4F               	movlw	79
 14388  010F6E  6E0B               	movwf	(btemp+10)^0,c
 14389  010F70  0E00               	movlw	0
 14390  010F72  6E0C               	movwf	(btemp+11)^0,c
 14391                           
 14392                           ;stkvar	_i @ sp[(-56)+36]
 14393  010F74  0EEC               	movlw	-20
 14394  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14395  010F7C  0EED               	movlw	-19
 14396  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14397                           
 14398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 14399                           ;stkvar	_i @ sp[(-56)+36]
 14400  010F84  0EEC               	movlw	-20
 14401  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 14402  010F8C  0EED               	movlw	-19
 14403  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14404  010F94  0E94               	movlw	low _dbuf
 14405  010F96  240B               	addwf	(btemp+10)^0,w,c
 14406  010F98  6ED9               	movwf	fsr2l,c
 14407  010F9A  0E03               	movlw	high _dbuf
 14408  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 14409  010F9E  6EDA               	movwf	fsr2h,c
 14410  010FA0  0E00               	movlw	0
 14411  010FA2  6EDF               	movwf	indf2,c
 14412                           
 14413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 14414                           ;stkvar	_sign @ sp[(-56)+42]
 14415  010FA4  0EF2               	movlw	-14
 14416  010FA6  6AE3               	clrf	plusw1,c
 14417  010FA8  0EF3               	movlw	-13
 14418  010FAA  6AE3               	clrf	plusw1,c
 14419                           
 14420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 14421                           ;stkvar	_e @ sp[(-56)+34]
 14422  010FAC  0EEB               	movlw	-21
 14423  010FAE  AEE3               	btfss	plusw1,7,c
 14424  010FB0  D012               	goto	l10872
 14425                           
 14426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 14427  010FB2  0E01               	movlw	1
 14428  010FB4  6E0B               	movwf	(btemp+10)^0,c
 14429  010FB6  0E00               	movlw	0
 14430  010FB8  6E0C               	movwf	(btemp+11)^0,c
 14431                           
 14432                           ;stkvar	_sign @ sp[(-56)+42]
 14433  010FBA  0EF2               	movlw	-14
 14434  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14435  010FC2  0EF3               	movlw	-13
 14436  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14437                           
 14438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 14439                           ;stkvar	_e @ sp[(-56)+34]
 14440                           ;stkvar	_e @ sp[(-56)+34]
 14441  010FCA  0EEA               	movlw	-22
 14442  010FCC  6CE3               	negf	plusw1,c
 14443  010FCE  0EEB               	movlw	-21
 14444  010FD0  1EE3               	comf	plusw1,f,c
 14445  010FD2  B0D8               	btfsc	status,0,c
 14446  010FD4  2AE3               	incf	plusw1,f,c
 14447  010FD6                     l10872:
 14448                           
 14449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 14450  010FD6  0E02               	movlw	2
 14451  010FD8  6E0B               	movwf	(btemp+10)^0,c
 14452  010FDA  0E00               	movlw	0
 14453  010FDC  6E0C               	movwf	(btemp+11)^0,c
 14454                           
 14455                           ;stkvar	_p @ sp[(-56)+40]
 14456  010FDE  0EF0               	movlw	-16
 14457  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14458  010FE6  0EF1               	movlw	-15
 14459  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14460                           
 14461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 14462  010FEE  D051               	goto	l10884
 14463  010FF0                     l10874:
 14464                           
 14465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 14466                           ;stkvar	_i @ sp[(-56)+36]
 14467  010FF0  50E1               	movf	fsr1l,w,c
 14468  010FF2  0FEC               	addlw	-20
 14469  010FF4  6ED9               	movwf	fsr2l,c
 14470  010FF6  50E2               	movf	fsr1h,w,c
 14471  010FF8  6EDA               	movwf	fsr2h,c
 14472  010FFA  0EFF               	movlw	255
 14473  010FFC  22DA               	addwfc	fsr2h,f,c
 14474  010FFE  06DE               	decf	postinc2,f,c
 14475  011000  0E00               	movlw	0
 14476  011002  5ADD               	subwfb	postdec2,f,c
 14477                           
 14478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 14479                           ;stkvar	_i @ sp[(-56)+36]
 14480  011004  0EEC               	movlw	-20
 14481  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 14482  01100C  0EED               	movlw	-19
 14483  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14484  011014  0E94               	movlw	low _dbuf
 14485  011016  240B               	addwf	(btemp+10)^0,w,c
 14486  011018  6ED9               	movwf	fsr2l,c
 14487  01101A  0E03               	movlw	high _dbuf
 14488  01101C  200C               	addwfc	(btemp+11)^0,w,c
 14489  01101E  6EDA               	movwf	fsr2h,c
 14490  011020  0E0A               	movlw	10
 14491  011022  6EE6               	movwf	postinc1,c
 14492  011024  0E00               	movlw	0
 14493  011026  6EE6               	movwf	postinc1,c
 14494                           
 14495                           ;stkvar	_e @ sp[(-58)+34]
 14496  011028  0EE8               	movlw	-24
 14497  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 14498  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 14499  011036  EC3D  F0BC         	call	___awmod	;wreg free
 14500  01103A  5001               	movf	btemp^0,w,c
 14501  01103C  0F30               	addlw	48
 14502  01103E  6EDF               	movwf	indf2,c
 14503                           
 14504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 14505  011040  0E0A               	movlw	10
 14506  011042  6EE6               	movwf	postinc1,c
 14507  011044  0E00               	movlw	0
 14508  011046  6EE6               	movwf	postinc1,c
 14509                           
 14510                           ;stkvar	_e @ sp[(-58)+34]
 14511  011048  0EE8               	movlw	-24
 14512  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 14513  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 14514  011056  ECD9  F0B9         	call	___awdiv	;wreg free
 14515                           
 14516                           ;stkvar	_e @ sp[(-56)+34]
 14517  01105A  0EEA               	movlw	-22
 14518  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 14519  011062  0EEB               	movlw	-21
 14520  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14521                           
 14522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 14523                           ;stkvar	_p @ sp[(-56)+40]
 14524  01106A  50E1               	movf	fsr1l,w,c
 14525  01106C  0FF0               	addlw	-16
 14526  01106E  6ED9               	movwf	fsr2l,c
 14527  011070  50E2               	movf	fsr1h,w,c
 14528  011072  6EDA               	movwf	fsr2h,c
 14529  011074  0EFF               	movlw	255
 14530  011076  22DA               	addwfc	fsr2h,f,c
 14531  011078  06DE               	decf	postinc2,f,c
 14532  01107A  0E00               	movlw	0
 14533  01107C  5ADD               	subwfb	postdec2,f,c
 14534                           
 14535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 14536                           ;stkvar	_w @ sp[(-56)+38]
 14537  01107E  50E1               	movf	fsr1l,w,c
 14538  011080  0FEE               	addlw	-18
 14539  011082  6ED9               	movwf	fsr2l,c
 14540  011084  50E2               	movf	fsr1h,w,c
 14541  011086  6EDA               	movwf	fsr2h,c
 14542  011088  0EFF               	movlw	255
 14543  01108A  22DA               	addwfc	fsr2h,f,c
 14544  01108C  06DE               	decf	postinc2,f,c
 14545  01108E  0E00               	movlw	0
 14546  011090  5ADD               	subwfb	postdec2,f,c
 14547  011092                     l10884:
 14548                           
 14549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 14550                           ;stkvar	_e @ sp[(-56)+34]
 14551  011092  0EEA               	movlw	-22
 14552  011094  006F FF8C  F001    	movff	plusw1,btemp
 14553  01109A  0EEB               	movlw	-21
 14554  01109C  50E3               	movf	plusw1,w,c
 14555  01109E  1001               	iorwf	btemp^0,w,c
 14556  0110A0  A4D8               	btfss	status,2,c
 14557  0110A2  D7A6               	goto	l10874
 14558                           
 14559                           ;stkvar	_p @ sp[(-56)+40]
 14560  0110A4  0EF1               	movlw	-15
 14561  0110A6  BEE3               	btfsc	plusw1,7,c
 14562  0110A8  D007               	goto	u10140
 14563  0110AA  0EF1               	movlw	-15
 14564  0110AC  50E3               	movf	plusw1,w,c
 14565  0110AE  E1A0               	bnz	l10874
 14566  0110B0  0EF0               	movlw	-16
 14567  0110B2  04E3               	decf	plusw1,w,c
 14568  0110B4  B0D8               	btfsc	status,0,c
 14569  0110B6  D79C               	goto	l10874
 14570  0110B8                     u10140:
 14571                           
 14572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 14573                           ;stkvar	_i @ sp[(-56)+36]
 14574  0110B8  50E1               	movf	fsr1l,w,c
 14575  0110BA  0FEC               	addlw	-20
 14576  0110BC  6ED9               	movwf	fsr2l,c
 14577  0110BE  50E2               	movf	fsr1h,w,c
 14578  0110C0  6EDA               	movwf	fsr2h,c
 14579  0110C2  0EFF               	movlw	255
 14580  0110C4  22DA               	addwfc	fsr2h,f,c
 14581  0110C6  06DE               	decf	postinc2,f,c
 14582  0110C8  0E00               	movlw	0
 14583  0110CA  5ADD               	subwfb	postdec2,f,c
 14584                           
 14585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 14586                           ;stkvar	_sign @ sp[(-56)+42]
 14587  0110CC  0EF2               	movlw	-14
 14588  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 14589  0110D4  0EF3               	movlw	-13
 14590  0110D6  50E3               	movf	plusw1,w,c
 14591  0110D8  1001               	iorwf	btemp^0,w,c
 14592  0110DA  A4D8               	btfss	status,2,c
 14593  0110DC  D002               	goto	l10894
 14594  0110DE  0E2B               	movlw	43
 14595  0110E0  D001               	goto	L11
 14596  0110E2                     l10894:
 14597  0110E2  0E2D               	movlw	45
 14598  0110E4                     L11:
 14599  0110E4  6E0B               	movwf	(btemp+10)^0,c
 14600  0110E6  0E00               	movlw	0
 14601  0110E8  6E0C               	movwf	(btemp+11)^0,c
 14602                           
 14603                           ;stkvar	_efgtoa$5152 @ sp[(-56)+4]
 14604  0110EA  0ECC               	movlw	-52
 14605  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14606  0110F2  0ECD               	movlw	-51
 14607  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14608                           
 14609                           ;stkvar	_efgtoa$5152 @ sp[(-56)+4]
 14610                           ;stkvar	_i @ sp[(-56)+36]
 14611  0110FA  0EEC               	movlw	-20
 14612  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14613  011102  0EED               	movlw	-19
 14614  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 14615  01110A  0E94               	movlw	low _dbuf
 14616  01110C  240B               	addwf	(btemp+10)^0,w,c
 14617  01110E  6ED9               	movwf	fsr2l,c
 14618  011110  0E03               	movlw	high _dbuf
 14619  011112  200C               	addwfc	(btemp+11)^0,w,c
 14620  011114  6EDA               	movwf	fsr2h,c
 14621  011116  0ECC               	movlw	-52
 14622  011118  006F FF8F FFDF     	movff	plusw1,indf2
 14623                           
 14624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 14625                           ;stkvar	_w @ sp[(-56)+38]
 14626  01111E  50E1               	movf	fsr1l,w,c
 14627  011120  0FEE               	addlw	-18
 14628  011122  6ED9               	movwf	fsr2l,c
 14629  011124  50E2               	movf	fsr1h,w,c
 14630  011126  6EDA               	movwf	fsr2h,c
 14631  011128  0EFF               	movlw	255
 14632  01112A  22DA               	addwfc	fsr2h,f,c
 14633  01112C  06DE               	decf	postinc2,f,c
 14634  01112E  0E00               	movlw	0
 14635  011130  5ADD               	subwfb	postdec2,f,c
 14636                           
 14637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 14638                           ;stkvar	_i @ sp[(-56)+36]
 14639  011132  50E1               	movf	fsr1l,w,c
 14640  011134  0FEC               	addlw	-20
 14641  011136  6ED9               	movwf	fsr2l,c
 14642  011138  50E2               	movf	fsr1h,w,c
 14643  01113A  6EDA               	movwf	fsr2h,c
 14644  01113C  0EFF               	movlw	255
 14645  01113E  22DA               	addwfc	fsr2h,f,c
 14646  011140  06DE               	decf	postinc2,f,c
 14647  011142  0E00               	movlw	0
 14648  011144  5ADD               	subwfb	postdec2,f,c
 14649  011146  0EBF               	movlw	191
 14650  011148  6E0B               	movwf	(btemp+10)^0,c
 14651  01114A  0EFF               	movlw	255
 14652  01114C  6E0C               	movwf	(btemp+11)^0,c
 14653                           
 14654                           ;stkvar	_c @ sp[(-56)+-7]
 14655  01114E  0EC1               	movlw	-63
 14656  011150  50E3               	movf	plusw1,w,c
 14657  011152  6E09               	movwf	(btemp+8)^0,c
 14658  011154  6A0A               	clrf	(btemp+9)^0,c
 14659  011156  500B               	movf	(btemp+10)^0,w,c
 14660  011158  2609               	addwf	(btemp+8)^0,f,c
 14661  01115A  500C               	movf	(btemp+11)^0,w,c
 14662  01115C  220A               	addwfc	(btemp+9)^0,f,c
 14663  01115E  500A               	movf	(btemp+9)^0,w,c
 14664  011160  E106               	bnz	u10160
 14665  011162  0E1A               	movlw	26
 14666  011164  5C09               	subwf	(btemp+8)^0,w,c
 14667  011166  B0D8               	btfsc	status,0,c
 14668  011168  D002               	goto	u10160
 14669  01116A  0E01               	movlw	1
 14670  01116C  D001               	goto	u10170
 14671  01116E                     u10160:
 14672  01116E  0E00               	movlw	0
 14673  011170                     u10170:
 14674  011170  6E0B               	movwf	(btemp+10)^0,c
 14675  011172  6A0C               	clrf	(btemp+11)^0,c
 14676                           
 14677                           ;stkvar	_efgtoa$5154 @ sp[(-56)+0]
 14678  011174  0EC8               	movlw	-56
 14679  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14680  01117C  0EC9               	movlw	-55
 14681  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 14682                           
 14683                           ;stkvar	_efgtoa$5154 @ sp[(-56)+0]
 14684  011184  0EC8               	movlw	-56
 14685  011186  006F FF8C  F001    	movff	plusw1,btemp
 14686  01118C  0EC9               	movlw	-55
 14687  01118E  50E3               	movf	plusw1,w,c
 14688  011190  1001               	iorwf	btemp^0,w,c
 14689  011192  A4D8               	btfss	status,2,c
 14690  011194  D002               	goto	l10910
 14691  011196  0E65               	movlw	101
 14692  011198  D001               	goto	L12
 14693  01119A                     l10910:
 14694  01119A  0E45               	movlw	69
 14695  01119C                     L12:
 14696  01119C  6E0B               	movwf	(btemp+10)^0,c
 14697  01119E  0E00               	movlw	0
 14698  0111A0  6E0C               	movwf	(btemp+11)^0,c
 14699                           
 14700                           ;stkvar	_efgtoa$5153 @ sp[(-56)+2]
 14701  0111A2  0ECA               	movlw	-54
 14702  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14703  0111AA  0ECB               	movlw	-53
 14704  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14705                           
 14706                           ;stkvar	_efgtoa$5153 @ sp[(-56)+2]
 14707                           ;stkvar	_i @ sp[(-56)+36]
 14708  0111B2  0EEC               	movlw	-20
 14709  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 14710  0111BA  0EED               	movlw	-19
 14711  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14712  0111C2  0E94               	movlw	low _dbuf
 14713  0111C4  240B               	addwf	(btemp+10)^0,w,c
 14714  0111C6  6ED9               	movwf	fsr2l,c
 14715  0111C8  0E03               	movlw	high _dbuf
 14716  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 14717  0111CC  6EDA               	movwf	fsr2h,c
 14718  0111CE  0ECA               	movlw	-54
 14719  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 14720                           
 14721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 14722                           ;stkvar	_w @ sp[(-56)+38]
 14723  0111D6  50E1               	movf	fsr1l,w,c
 14724  0111D8  0FEE               	addlw	-18
 14725  0111DA  6ED9               	movwf	fsr2l,c
 14726  0111DC  50E2               	movf	fsr1h,w,c
 14727  0111DE  6EDA               	movwf	fsr2h,c
 14728  0111E0  0EFF               	movlw	255
 14729  0111E2  22DA               	addwfc	fsr2h,f,c
 14730  0111E4  06DE               	decf	postinc2,f,c
 14731  0111E6  0E00               	movlw	0
 14732  0111E8  5ADD               	subwfb	postdec2,f,c
 14733                           
 14734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 14735                           ;stkvar	_i @ sp[(-56)+36]
 14736  0111EA  0EEC               	movlw	-20
 14737  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14738  0111F2  0EED               	movlw	-19
 14739  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14740  0111FA  0E94               	movlw	low _dbuf
 14741  0111FC  240B               	addwf	(btemp+10)^0,w,c
 14742  0111FE  6E09               	movwf	(btemp+8)^0,c
 14743  011200  0E03               	movlw	high _dbuf
 14744  011202  200C               	addwfc	(btemp+11)^0,w,c
 14745  011204  6E0A               	movwf	(btemp+9)^0,c
 14746  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 14747  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 14748                           
 14749                           ;stkvar	_n @ sp[(-58)+32]
 14750  011212  0E94               	movlw	low _dbuf
 14751  011214  6E0B               	movwf	(btemp+10)^0,c
 14752  011216  0E03               	movlw	high _dbuf
 14753  011218  6E0C               	movwf	(btemp+11)^0,c
 14754  01121A  0EE6               	movlw	-26
 14755  01121C  50E3               	movf	plusw1,w,c
 14756  01121E  260B               	addwf	(btemp+10)^0,f,c
 14757  011220  0EE7               	movlw	-25
 14758  011222  50E3               	movf	plusw1,w,c
 14759  011224  220C               	addwfc	(btemp+11)^0,f,c
 14760  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14761  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14762  011232  EC4A  F0C0         	call	_strcpy	;wreg free
 14763  011236  EF16  F081         	goto	l10662
 14764  01123A                     l2055:
 14765                           
 14766                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 14767  01123A  0EC1               	movlw	193
 14768  01123C  26E1               	addwf	fsr1l,f,c
 14769  01123E  0EFF               	movlw	255
 14770  011240  22E2               	addwfc	fsr1h,f,c
 14771  011242  0012               	return		;funcret
 14772  011244                     __end_of_efgtoa:
 14773                           	opt callstack 0
 14774                           
 14775 ;; *************** function _tolower *****************
 14776 ;; Defined at:
 14777 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  c               2  [STACK] int 
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;		None
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  2  [STACK] int 
 14784 ;; Registers used:
 14785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;Total ram usage:        0 bytes
 14796 ;; Hardware stack levels used:    1
 14797 ;; Hardware stack levels required when called:   16
 14798 ;; This function calls:
 14799 ;;		_isupper
 14800 ;; This function is called by:
 14801 ;;		_efgtoa
 14802 ;;		_vfpfcnvrt
 14803 ;; This function uses a reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text51
 14807  018A2C                     __ptext51:
 14808                           	opt callstack 0
 14809  018A2C                     _tolower:
 14810                           	opt callstack 0
 14811                           
 14812                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14813  018A2C  52E6               	movf	postinc1,f,c
 14814  018A2E  52E6               	movf	postinc1,f,c
 14815                           
 14816                           ;stkvar	_c @ sp[(-2)+-2]
 14817                           
 14818                           ;incstack = 0
 14819 ;; hardware stack exceeded
 14820  018A30  0EFC               	movlw	-4
 14821  018A32  50E3               	movf	plusw1,w,c
 14822  018A34  0FBF               	addlw	191
 14823  018A36  6E0B               	movwf	(btemp+10)^0,c
 14824  018A38  0EFD               	movlw	-3
 14825  018A3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14826  018A40  0EFF               	movlw	255
 14827  018A42  220C               	addwfc	(btemp+11)^0,f,c
 14828  018A44  500C               	movf	(btemp+11)^0,w,c
 14829  018A46  E106               	bnz	u5340
 14830  018A48  0E1A               	movlw	26
 14831  018A4A  5C0B               	subwf	(btemp+10)^0,w,c
 14832  018A4C  B0D8               	btfsc	status,0,c
 14833  018A4E  D002               	goto	u5340
 14834  018A50  0E01               	movlw	1
 14835  018A52  D001               	goto	u5350
 14836  018A54                     u5340:
 14837  018A54  0E00               	movlw	0
 14838  018A56                     u5350:
 14839  018A56  6E0B               	movwf	(btemp+10)^0,c
 14840  018A58  6A0C               	clrf	(btemp+11)^0,c
 14841                           
 14842                           ;stkvar	_tolower$5935 @ sp[(-2)+0]
 14843  018A5A  0EFE               	movlw	-2
 14844  018A5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14845  018A62  0EFF               	movlw	-1
 14846  018A64  0060  F033  FFE3   	movff	btemp+11,plusw1
 14847                           
 14848                           ;stkvar	_tolower$5935 @ sp[(-2)+0]
 14849  018A6A  0EFE               	movlw	-2
 14850  018A6C  006F FF8C  F001    	movff	plusw1,btemp
 14851  018A72  0EFF               	movlw	-1
 14852  018A74  50E3               	movf	plusw1,w,c
 14853  018A76  1001               	iorwf	btemp^0,w,c
 14854  018A78  B4D8               	btfsc	status,2,c
 14855  018A7A  D00D               	goto	l7224
 14856                           
 14857                           ;stkvar	_c @ sp[(-2)+-2]
 14858  018A7C  0EFC               	movlw	-4
 14859  018A7E  006F FF8C  F001    	movff	plusw1,btemp
 14860  018A84  0EFD               	movlw	-3
 14861  018A86  006F FF8C  F002    	movff	plusw1,btemp+1
 14862  018A8C  0E20               	movlw	32
 14863  018A8E  1201               	iorwf	btemp^0,f,c
 14864  018A90  0E00               	movlw	0
 14865  018A92  1202               	iorwf	(btemp+1)^0,f,c
 14866  018A94  D008               	goto	l3299
 14867  018A96                     l7224:
 14868                           
 14869                           ;stkvar	_c @ sp[(-2)+-2]
 14870  018A96  0EFC               	movlw	-4
 14871  018A98  006F FF8C  F001    	movff	plusw1,btemp
 14872  018A9E  0EFD               	movlw	-3
 14873  018AA0  006F FF8C  F002    	movff	plusw1,btemp+1
 14874  018AA6                     l3299:
 14875                           
 14876                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14877  018AA6  52E5               	movf	postdec1,f,c
 14878  018AA8  52E5               	movf	postdec1,f,c
 14879  018AAA  52E5               	movf	postdec1,f,c
 14880  018AAC  52E5               	movf	postdec1,f,c
 14881  018AAE  0012               	return		;funcret
 14882  018AB0                     __end_of_tolower:
 14883                           	opt callstack 0
 14884                           
 14885 ;; *************** function _isupper *****************
 14886 ;; Defined at:
 14887 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;  c               2  [STACK] int 
 14890 ;; Auto vars:     Size  Location     Type
 14891 ;;		None
 14892 ;; Return value:  Size  Location     Type
 14893 ;;                  2  [STACK] int 
 14894 ;; Registers used:
 14895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14896 ;; Tracked objects:
 14897 ;;		On entry : 0/0
 14898 ;;		On exit  : 0/0
 14899 ;;		Unchanged: 0/0
 14900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14905 ;;Total ram usage:        0 bytes
 14906 ;; Hardware stack levels used:    1
 14907 ;; Hardware stack levels required when called:   15
 14908 ;; This function calls:
 14909 ;;		Nothing
 14910 ;; This function is called by:
 14911 ;;		_efgtoa
 14912 ;;		_xtoa
 14913 ;;		_vfpfcnvrt
 14914 ;;		_tolower
 14915 ;; This function uses a reentrant model
 14916 ;;
 14917                           
 14918                           	psect	text52
 14919  0195CE                     __ptext52:
 14920                           	opt callstack 0
 14921  0195CE                     _isupper:
 14922                           	opt callstack 0
 14923                           
 14924                           ;stkvar	_c @ sp[(0)+-2]
 14925                           
 14926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14927                           ;incstack = 0
 14928 ;; hardware stack exceeded
 14929  0195CE  0EFE               	movlw	-2
 14930  0195D0  50E3               	movf	plusw1,w,c
 14931  0195D2  0FBF               	addlw	191
 14932  0195D4  6E0B               	movwf	(btemp+10)^0,c
 14933  0195D6  0EFF               	movlw	-1
 14934  0195D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14935  0195DE  0EFF               	movlw	255
 14936  0195E0  220C               	addwfc	(btemp+11)^0,f,c
 14937  0195E2  500C               	movf	(btemp+11)^0,w,c
 14938  0195E4  E106               	bnz	u4740
 14939  0195E6  0E1A               	movlw	26
 14940  0195E8  5C0B               	subwf	(btemp+10)^0,w,c
 14941  0195EA  B0D8               	btfsc	status,0,c
 14942  0195EC  D002               	goto	u4740
 14943  0195EE  0E01               	movlw	1
 14944  0195F0  D001               	goto	u4750
 14945  0195F2                     u4740:
 14946  0195F2  0E00               	movlw	0
 14947  0195F4                     u4750:
 14948  0195F4  6E01               	movwf	btemp^0,c
 14949  0195F6  6A02               	clrf	(btemp+1)^0,c
 14950                           
 14951                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14952  0195F8  52E5               	movf	postdec1,f,c
 14953  0195FA  52E5               	movf	postdec1,f,c
 14954  0195FC  0012               	return		;funcret
 14955  0195FE                     __end_of_isupper:
 14956                           	opt callstack 0
 14957                           
 14958 ;; *************** function _strcpy *****************
 14959 ;; Defined at:
 14960 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  dest            2  [STACK] PTR unsigned char 
 14963 ;;		 -> dbuf(80), 
 14964 ;;  src             2  [STACK] PTR const unsigned char 
 14965 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 14966 ;;		 -> dbuf(80), 
 14967 ;; Auto vars:     Size  Location     Type
 14968 ;;  d               2  [STACK] PTR unsigned char 
 14969 ;;		 -> dbuf(80), 
 14970 ;;  s               2  [STACK] PTR const unsigned char 
 14971 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 14972 ;;		 -> dbuf(80), 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  2  [STACK] PTR unsigned char 
 14975 ;; Registers used:
 14976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14986 ;;Total ram usage:        0 bytes
 14987 ;; Hardware stack levels used:    1
 14988 ;; Hardware stack levels required when called:   15
 14989 ;; This function calls:
 14990 ;;		Nothing
 14991 ;; This function is called by:
 14992 ;;		_efgtoa
 14993 ;; This function uses a reentrant model
 14994 ;;
 14995                           
 14996                           	psect	text53
 14997  018094                     __ptext53:
 14998                           	opt callstack 0
 14999  018094                     _strcpy:
 15000                           	opt callstack 0
 15001                           
 15002                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15003  018094  52E6               	movf	postinc1,f,c
 15004  018096  52E6               	movf	postinc1,f,c
 15005  018098  52E6               	movf	postinc1,f,c
 15006  01809A  52E6               	movf	postinc1,f,c
 15007                           
 15008                           ;stkvar	_src @ sp[(-4)+-4]
 15009                           
 15010                           ;incstack = 0
 15011 ;; hardware stack exceeded
 15012  01809C  0EF8               	movlw	-8
 15013  01809E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15014  0180A4  0EF9               	movlw	-7
 15015  0180A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15016                           
 15017                           ;stkvar	_s @ sp[(-4)+2]
 15018  0180AC  0EFF               	movlw	-1
 15019  0180AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15020  0180B4  0EFE               	movlw	-2
 15021  0180B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15022                           
 15023                           ;stkvar	_dest @ sp[(-4)+-2]
 15024  0180BC  0EFA               	movlw	-6
 15025  0180BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 15026  0180C4  0EFB               	movlw	-5
 15027  0180C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15028                           
 15029                           ;stkvar	_d @ sp[(-4)+0]
 15030  0180CC  0EFD               	movlw	-3
 15031  0180CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15032  0180D4  0EFC               	movlw	-4
 15033  0180D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15034  0180DC                     l10484:
 15035                           
 15036                           ;stkvar	_s @ sp[(-4)+2]
 15037  0180DC  50E1               	movf	fsr1l,w,c
 15038  0180DE  0FFE               	addlw	-2
 15039  0180E0  6ED9               	movwf	fsr2l,c
 15040  0180E2  50E2               	movf	fsr1h,w,c
 15041  0180E4  6EDA               	movwf	fsr2h,c
 15042  0180E6  0EFF               	movlw	255
 15043  0180E8  22DA               	addwfc	fsr2h,f,c
 15044  0180EA  006F FF7C  F00B    	movff	indf2,btemp+10
 15045  0180F0  0E01               	movlw	1
 15046  0180F2  26DE               	addwf	postinc2,f,c
 15047  0180F4  006F FF7C  F00C    	movff	indf2,btemp+11
 15048  0180FA  0E00               	movlw	0
 15049  0180FC  22DD               	addwfc	postdec2,f,c
 15050  0180FE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15051  018104  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15052  01810A  0E00               	movlw	low (__mediumconst shr (0+16))
 15053  01810C  6EF8               	movwf	tblptru,c
 15054                           
 15055                           ;stkvar	_d @ sp[(-4)+0]
 15056  01810E  50E1               	movf	fsr1l,w,c
 15057  018110  0FFC               	addlw	-4
 15058  018112  6ED9               	movwf	fsr2l,c
 15059  018114  50E2               	movf	fsr1h,w,c
 15060  018116  6EDA               	movwf	fsr2h,c
 15061  018118  0EFF               	movlw	255
 15062  01811A  22DA               	addwfc	fsr2h,f,c
 15063  01811C  006F FF7C  F00B    	movff	indf2,btemp+10
 15064  018122  0E01               	movlw	1
 15065  018124  26DE               	addwf	postinc2,f,c
 15066  018126  006F FF7C  F00C    	movff	indf2,btemp+11
 15067  01812C  0E00               	movlw	0
 15068  01812E  22DD               	addwfc	postdec2,f,c
 15069  018130  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15070  018136  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15071  01813C  0E1F               	movlw	(high __ramtop+-1)
 15072  01813E  64F7               	cpfsgt	tblptrh,c
 15073  018140  D003               	bra	u9417
 15074  018142  0008               	tblrd		*
 15075  018144  50F5               	movf	tablat,w,c
 15076  018146  D007               	bra	u9410
 15077  018148                     u9417:
 15078  018148  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15079  01814E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15080  018154  50EF               	movf	indf0,w,c
 15081  018156                     u9410:
 15082  018156  6EDF               	movwf	indf2,c
 15083  018158  50DF               	movf	indf2,w,c
 15084  01815A  A4D8               	btfss	status,2,c
 15085  01815C  D7BF               	goto	l10484
 15086                           
 15087                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 15088  01815E  0EF8               	movlw	248
 15089  018160  26E1               	addwf	fsr1l,f,c
 15090  018162  0EFF               	movlw	255
 15091  018164  22E2               	addwfc	fsr1h,f,c
 15092  018166  0012               	return		;funcret
 15093  018168                     __end_of_strcpy:
 15094                           	opt callstack 0
 15095                           
 15096 ;; *************** function _floorf *****************
 15097 ;; Defined at:
 15098 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;  x               4  [STACK] float 
 15101 ;; Auto vars:     Size  Location     Type
 15102 ;;  u               4  [STACK] struct .
 15103 ;;  m               4  [STACK] unsigned long 
 15104 ;;  e               2  [STACK] int 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  4  [STACK] float 
 15107 ;; Registers used:
 15108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;Total ram usage:        0 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; Hardware stack levels required when called:   15
 15121 ;; This function calls:
 15122 ;;		Nothing
 15123 ;; This function is called by:
 15124 ;;		_efgtoa
 15125 ;; This function uses a reentrant model
 15126 ;;
 15127                           
 15128                           	psect	text54
 15129  014FB2                     __ptext54:
 15130                           	opt callstack 0
 15131  014FB2                     _floorf:
 15132                           	opt callstack 0
 15133                           
 15134                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15135  014FB2  0E0A               	movlw	10
 15136  014FB4  26E1               	addwf	fsr1l,f,c
 15137  014FB6  0E00               	movlw	0
 15138  014FB8  22E2               	addwfc	fsr1h,f,c
 15139                           
 15140                           ;incstack = 0
 15141 ;; hardware stack exceeded
 15142  014FBA  0060  F254  F009   	movff	floorf@F524,btemp+8
 15143  014FC0  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 15144  014FC6  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 15145  014FCC  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 15146                           
 15147                           ;stkvar	_u @ sp[(-10)+0]
 15148  014FD2  0EF6               	movlw	-10
 15149  014FD4  0060  F027  FFE3   	movff	btemp+8,plusw1
 15150  014FDA  0EF7               	movlw	-9
 15151  014FDC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15152  014FE2  0EF8               	movlw	-8
 15153  014FE4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15154  014FEA  0EF9               	movlw	-7
 15155  014FEC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15156                           
 15157                           ;stkvar	_x @ sp[(-10)+-4]
 15158  014FF2  0EF2               	movlw	-14
 15159  014FF4  006F FF8C  F009    	movff	plusw1,btemp+8
 15160  014FFA  0EF3               	movlw	-13
 15161  014FFC  006F FF8C  F00A    	movff	plusw1,btemp+9
 15162  015002  0EF4               	movlw	-12
 15163  015004  006F FF8C  F00B    	movff	plusw1,btemp+10
 15164  01500A  0EF5               	movlw	-11
 15165  01500C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15166                           
 15167                           ;stkvar	_u @ sp[(-10)+0]
 15168  015012  0EF6               	movlw	-10
 15169  015014  0060  F027  FFE3   	movff	btemp+8,plusw1
 15170  01501A  0EF7               	movlw	-9
 15171  01501C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15172  015022  0EF8               	movlw	-8
 15173  015024  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15174  01502A  0EF9               	movlw	-7
 15175  01502C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15176  015032  0E81               	movlw	129
 15177  015034  6E0B               	movwf	(btemp+10)^0,c
 15178  015036  0EFF               	movlw	255
 15179  015038  6E0C               	movwf	(btemp+11)^0,c
 15180                           
 15181                           ;stkvar	_u @ sp[(-10)+0]
 15182  01503A  0EF6               	movlw	-10
 15183  01503C  006F FF8C  F005    	movff	plusw1,btemp+4
 15184  015042  0EF7               	movlw	-9
 15185  015044  006F FF8C  F006    	movff	plusw1,btemp+5
 15186  01504A  0EF8               	movlw	-8
 15187  01504C  006F FF8C  F007    	movff	plusw1,btemp+6
 15188  015052  0EF9               	movlw	-7
 15189  015054  006F FF8C  F008    	movff	plusw1,btemp+7
 15190  01505A  0E18               	movlw	24
 15191  01505C  D005               	goto	u5370
 15192  01505E                     u5375:
 15193  01505E  90D8               	bcf	status,0,c
 15194  015060  3208               	rrcf	(btemp+7)^0,f,c
 15195  015062  3207               	rrcf	(btemp+6)^0,f,c
 15196  015064  3206               	rrcf	(btemp+5)^0,f,c
 15197  015066  3205               	rrcf	(btemp+4)^0,f,c
 15198  015068                     u5370:
 15199  015068  2EE8               	decfsz	wreg,f,c
 15200  01506A  D7F9               	goto	u5375
 15201  01506C  0060  F014  F009   	movff	btemp+4,btemp+8
 15202  015072  0060  F018  F00A   	movff	btemp+5,btemp+9
 15203  015078  0EFF               	movlw	255
 15204  01507A  1609               	andwf	(btemp+8)^0,f,c
 15205  01507C  0E00               	movlw	0
 15206  01507E  160A               	andwf	(btemp+9)^0,f,c
 15207  015080  500B               	movf	(btemp+10)^0,w,c
 15208  015082  2609               	addwf	(btemp+8)^0,f,c
 15209  015084  500C               	movf	(btemp+11)^0,w,c
 15210  015086  220A               	addwfc	(btemp+9)^0,f,c
 15211                           
 15212                           ;stkvar	_e @ sp[(-10)+8]
 15213  015088  0EFE               	movlw	-2
 15214  01508A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15215  015090  0EFF               	movlw	-1
 15216  015092  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15217                           
 15218                           ;stkvar	_e @ sp[(-10)+8]
 15219  015098  0EFF               	movlw	-1
 15220  01509A  BEE3               	btfsc	plusw1,7,c
 15221  01509C  D019               	goto	l7238
 15222  01509E  0EFF               	movlw	-1
 15223  0150A0  50E3               	movf	plusw1,w,c
 15224  0150A2  E108               	bnz	u5380
 15225  0150A4  0EFE               	movlw	-2
 15226  0150A6  006F FF8C  F001    	movff	plusw1,btemp
 15227  0150AC  0E17               	movlw	23
 15228  0150AE  5E01               	subwf	btemp^0,f,c
 15229  0150B0  A0D8               	btfss	status,0,c
 15230  0150B2  D00E               	goto	l7238
 15231  0150B4                     u5380:
 15232                           
 15233                           ;stkvar	_x @ sp[(-10)+-4]
 15234  0150B4  0EF2               	movlw	-14
 15235  0150B6  006F FF8C  F001    	movff	plusw1,btemp
 15236  0150BC  0EF3               	movlw	-13
 15237  0150BE  006F FF8C  F002    	movff	plusw1,btemp+1
 15238  0150C4  0EF4               	movlw	-12
 15239  0150C6  006F FF8C  F003    	movff	plusw1,btemp+2
 15240  0150CC  0EF5               	movlw	-11
 15241  0150CE  D11F               	goto	L13
 15242  0150D0                     l7238:
 15243                           
 15244                           ;stkvar	_e @ sp[(-10)+8]
 15245  0150D0  0EFF               	movlw	-1
 15246  0150D2  BEE3               	btfsc	plusw1,7,c
 15247  0150D4  D0B4               	goto	l7254
 15248                           
 15249                           ;stkvar	_e @ sp[(-10)+8]
 15250  0150D6  0EFE               	movlw	-2
 15251  0150D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 15252  0150DE  0EFF               	movlw	255
 15253  0150E0  6E05               	movwf	(btemp+4)^0,c
 15254  0150E2  0EFF               	movlw	255
 15255  0150E4  6E06               	movwf	(btemp+5)^0,c
 15256  0150E6  0E7F               	movlw	127
 15257  0150E8  6E07               	movwf	(btemp+6)^0,c
 15258  0150EA  0E00               	movlw	0
 15259  0150EC  6E08               	movwf	(btemp+7)^0,c
 15260  0150EE                     u5405:
 15261  0150EE  660C               	tstfsz	(btemp+11)^0,c
 15262  0150F0  D001               	goto	u5406
 15263  0150F2  D007               	goto	u5407
 15264  0150F4                     u5406:
 15265  0150F4  3408               	rlcf	(btemp+7)^0,w,c
 15266  0150F6  3208               	rrcf	(btemp+7)^0,f,c
 15267  0150F8  3207               	rrcf	(btemp+6)^0,f,c
 15268  0150FA  3206               	rrcf	(btemp+5)^0,f,c
 15269  0150FC  3205               	rrcf	(btemp+4)^0,f,c
 15270  0150FE  2E0C               	decfsz	(btemp+11)^0,f,c
 15271  015100  D7F6               	goto	u5405
 15272  015102                     u5407:
 15273                           
 15274                           ;stkvar	_m @ sp[(-10)+4]
 15275  015102  0EFA               	movlw	-6
 15276  015104  0060  F017  FFE3   	movff	btemp+4,plusw1
 15277  01510A  0EFB               	movlw	-5
 15278  01510C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 15279  015112  0EFC               	movlw	-4
 15280  015114  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15281  01511A  0EFD               	movlw	-3
 15282  01511C  0060  F023  FFE3   	movff	btemp+7,plusw1
 15283                           
 15284                           ;stkvar	_m @ sp[(-10)+4]
 15285                           ;stkvar	_u @ sp[(-10)+0]
 15286  015122  0EF6               	movlw	-10
 15287  015124  006F FF8C  F009    	movff	plusw1,btemp+8
 15288  01512A  0EF7               	movlw	-9
 15289  01512C  006F FF8C  F00A    	movff	plusw1,btemp+9
 15290  015132  0EF8               	movlw	-8
 15291  015134  006F FF8C  F00B    	movff	plusw1,btemp+10
 15292  01513A  0EF9               	movlw	-7
 15293  01513C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15294  015142  0EFA               	movlw	-6
 15295  015144  50E3               	movf	plusw1,w,c
 15296  015146  1609               	andwf	(btemp+8)^0,f,c
 15297  015148  0EFB               	movlw	-5
 15298  01514A  50E3               	movf	plusw1,w,c
 15299  01514C  160A               	andwf	(btemp+9)^0,f,c
 15300  01514E  0EFC               	movlw	-4
 15301  015150  50E3               	movf	plusw1,w,c
 15302  015152  160B               	andwf	(btemp+10)^0,f,c
 15303  015154  0EFD               	movlw	-3
 15304  015156  50E3               	movf	plusw1,w,c
 15305  015158  160C               	andwf	(btemp+11)^0,f,c
 15306  01515A  5009               	movf	(btemp+8)^0,w,c
 15307  01515C  100A               	iorwf	(btemp+9)^0,w,c
 15308  01515E  100B               	iorwf	(btemp+10)^0,w,c
 15309  015160  100C               	iorwf	(btemp+11)^0,w,c
 15310  015162  B4D8               	btfsc	status,2,c
 15311  015164  D7A7               	goto	u5380
 15312                           
 15313                           ;stkvar	_u @ sp[(-10)+0]
 15314  015166  0EF6               	movlw	-10
 15315  015168  006F FF8C  F009    	movff	plusw1,btemp+8
 15316  01516E  0EF7               	movlw	-9
 15317  015170  006F FF8C  F00A    	movff	plusw1,btemp+9
 15318  015176  0EF8               	movlw	-8
 15319  015178  006F FF8C  F00B    	movff	plusw1,btemp+10
 15320  01517E  0EF9               	movlw	-7
 15321  015180  006F FF8C  F00C    	movff	plusw1,btemp+11
 15322  015186  0E20               	movlw	32
 15323  015188  D005               	goto	u5420
 15324  01518A                     u5425:
 15325  01518A  90D8               	bcf	status,0,c
 15326  01518C  320C               	rrcf	(btemp+11)^0,f,c
 15327  01518E  320B               	rrcf	(btemp+10)^0,f,c
 15328  015190  320A               	rrcf	(btemp+9)^0,f,c
 15329  015192  3209               	rrcf	(btemp+8)^0,f,c
 15330  015194                     u5420:
 15331  015194  2EE8               	decfsz	wreg,f,c
 15332  015196  D7F9               	goto	u5425
 15333  015198  5009               	movf	(btemp+8)^0,w,c
 15334  01519A  B4D8               	btfsc	status,2,c
 15335  01519C  D028               	goto	l7252
 15336                           
 15337                           ;stkvar	_m @ sp[(-10)+4]
 15338                           ;stkvar	_u @ sp[(-10)+0]
 15339  01519E  0EF6               	movlw	-10
 15340  0151A0  50E3               	movf	plusw1,w,c
 15341  0151A2  6E01               	movwf	btemp^0,c
 15342  0151A4  0EFA               	movlw	-6
 15343  0151A6  50E3               	movf	plusw1,w,c
 15344  0151A8  2601               	addwf	btemp^0,f,c
 15345  0151AA  0EF6               	movlw	-10
 15346  0151AC  0060  F007  FFE3   	movff	btemp,plusw1
 15347  0151B2  0EF7               	movlw	-9
 15348  0151B4  50E3               	movf	plusw1,w,c
 15349  0151B6  6E01               	movwf	btemp^0,c
 15350  0151B8  0EFB               	movlw	-5
 15351  0151BA  50E3               	movf	plusw1,w,c
 15352  0151BC  2201               	addwfc	btemp^0,f,c
 15353  0151BE  0EF7               	movlw	-9
 15354  0151C0  0060  F007  FFE3   	movff	btemp,plusw1
 15355  0151C6  0EF8               	movlw	-8
 15356  0151C8  50E3               	movf	plusw1,w,c
 15357  0151CA  6E01               	movwf	btemp^0,c
 15358  0151CC  0EFC               	movlw	-4
 15359  0151CE  50E3               	movf	plusw1,w,c
 15360  0151D0  2201               	addwfc	btemp^0,f,c
 15361  0151D2  0EF8               	movlw	-8
 15362  0151D4  0060  F007  FFE3   	movff	btemp,plusw1
 15363  0151DA  0EF9               	movlw	-7
 15364  0151DC  50E3               	movf	plusw1,w,c
 15365  0151DE  6E01               	movwf	btemp^0,c
 15366  0151E0  0EFD               	movlw	-3
 15367  0151E2  50E3               	movf	plusw1,w,c
 15368  0151E4  2201               	addwfc	btemp^0,f,c
 15369  0151E6  0EF9               	movlw	-7
 15370  0151E8  0060  F007  FFE3   	movff	btemp,plusw1
 15371  0151EE                     l7252:
 15372                           
 15373                           ;stkvar	_m @ sp[(-10)+4]
 15374  0151EE  0EFA               	movlw	-6
 15375  0151F0  006F FF8C  F009    	movff	plusw1,btemp+8
 15376  0151F6  0EFB               	movlw	-5
 15377  0151F8  006F FF8C  F00A    	movff	plusw1,btemp+9
 15378  0151FE  0EFC               	movlw	-4
 15379  015200  006F FF8C  F00B    	movff	plusw1,btemp+10
 15380  015206  0EFD               	movlw	-3
 15381  015208  006F FF8C  F00C    	movff	plusw1,btemp+11
 15382  01520E  1C09               	comf	(btemp+8)^0,w,c
 15383  015210  6E05               	movwf	(btemp+4)^0,c
 15384  015212  1C0A               	comf	(btemp+9)^0,w,c
 15385  015214  6E06               	movwf	(btemp+5)^0,c
 15386  015216  1C0B               	comf	(btemp+10)^0,w,c
 15387  015218  6E07               	movwf	(btemp+6)^0,c
 15388  01521A  1C0C               	comf	(btemp+11)^0,w,c
 15389  01521C  6E08               	movwf	(btemp+7)^0,c
 15390                           
 15391                           ;stkvar	_u @ sp[(-10)+0]
 15392  01521E  50E1               	movf	fsr1l,w,c
 15393  015220  0FF6               	addlw	-10
 15394  015222  6ED9               	movwf	fsr2l,c
 15395  015224  50E2               	movf	fsr1h,w,c
 15396  015226  6EDA               	movwf	fsr2h,c
 15397  015228  0EFF               	movlw	255
 15398  01522A  22DA               	addwfc	fsr2h,f,c
 15399  01522C  5005               	movf	(btemp+4)^0,w,c
 15400  01522E  16DE               	andwf	postinc2,f,c
 15401  015230  5006               	movf	(btemp+5)^0,w,c
 15402  015232  16DE               	andwf	postinc2,f,c
 15403  015234  5007               	movf	(btemp+6)^0,w,c
 15404  015236  16DE               	andwf	postinc2,f,c
 15405  015238  5008               	movf	(btemp+7)^0,w,c
 15406  01523A  16DE               	andwf	postinc2,f,c
 15407  01523C  D05B               	goto	l7262
 15408  01523E                     l7254:
 15409                           
 15410                           ;stkvar	_u @ sp[(-10)+0]
 15411  01523E  0EF6               	movlw	-10
 15412  015240  006F FF8C  F009    	movff	plusw1,btemp+8
 15413  015246  0EF7               	movlw	-9
 15414  015248  006F FF8C  F00A    	movff	plusw1,btemp+9
 15415  01524E  0EF8               	movlw	-8
 15416  015250  006F FF8C  F00B    	movff	plusw1,btemp+10
 15417  015256  0EF9               	movlw	-7
 15418  015258  006F FF8C  F00C    	movff	plusw1,btemp+11
 15419  01525E  0E20               	movlw	32
 15420  015260  D005               	goto	u5440
 15421  015262                     u5445:
 15422  015262  90D8               	bcf	status,0,c
 15423  015264  320C               	rrcf	(btemp+11)^0,f,c
 15424  015266  320B               	rrcf	(btemp+10)^0,f,c
 15425  015268  320A               	rrcf	(btemp+9)^0,f,c
 15426  01526A  3209               	rrcf	(btemp+8)^0,f,c
 15427  01526C                     u5440:
 15428  01526C  2EE8               	decfsz	wreg,f,c
 15429  01526E  D7F9               	goto	u5445
 15430  015270  6609               	tstfsz	(btemp+8)^0,c
 15431  015272  D009               	goto	l7258
 15432                           
 15433                           ;stkvar	_u @ sp[(-10)+0]
 15434  015274  0EF6               	movlw	-10
 15435  015276  6AE3               	clrf	plusw1,c
 15436  015278  0EF7               	movlw	-9
 15437  01527A  6AE3               	clrf	plusw1,c
 15438  01527C  0EF8               	movlw	-8
 15439  01527E  6AE3               	clrf	plusw1,c
 15440  015280  0EF9               	movlw	-7
 15441  015282  6AE3               	clrf	plusw1,c
 15442  015284  D037               	goto	l7262
 15443  015286                     l7258:
 15444                           
 15445                           ;stkvar	_u @ sp[(-10)+0]
 15446  015286  0EF6               	movlw	-10
 15447  015288  006F FF8C  F009    	movff	plusw1,btemp+8
 15448  01528E  0EF7               	movlw	-9
 15449  015290  006F FF8C  F00A    	movff	plusw1,btemp+9
 15450  015296  0EF8               	movlw	-8
 15451  015298  006F FF8C  F00B    	movff	plusw1,btemp+10
 15452  01529E  0EF9               	movlw	-7
 15453  0152A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15454  0152A6  90D8               	bcf	status,0,c
 15455  0152A8  3409               	rlcf	(btemp+8)^0,w,c
 15456  0152AA  6E05               	movwf	(btemp+4)^0,c
 15457  0152AC  340A               	rlcf	(btemp+9)^0,w,c
 15458  0152AE  6E06               	movwf	(btemp+5)^0,c
 15459  0152B0  340B               	rlcf	(btemp+10)^0,w,c
 15460  0152B2  6E07               	movwf	(btemp+6)^0,c
 15461  0152B4  340C               	rlcf	(btemp+11)^0,w,c
 15462  0152B6  6E08               	movwf	(btemp+7)^0,c
 15463  0152B8  5005               	movf	(btemp+4)^0,w,c
 15464  0152BA  1006               	iorwf	(btemp+5)^0,w,c
 15465  0152BC  1007               	iorwf	(btemp+6)^0,w,c
 15466  0152BE  1008               	iorwf	(btemp+7)^0,w,c
 15467  0152C0  B4D8               	btfsc	status,2,c
 15468  0152C2  D018               	goto	l7262
 15469  0152C4  0E00               	movlw	0
 15470  0152C6  6E09               	movwf	(btemp+8)^0,c
 15471  0152C8  0E00               	movlw	0
 15472  0152CA  6E0A               	movwf	(btemp+9)^0,c
 15473  0152CC  0E80               	movlw	128
 15474  0152CE  6E0B               	movwf	(btemp+10)^0,c
 15475  0152D0  0EBF               	movlw	191
 15476  0152D2  6E0C               	movwf	(btemp+11)^0,c
 15477                           
 15478                           ;stkvar	_u @ sp[(-10)+0]
 15479  0152D4  0EF6               	movlw	-10
 15480  0152D6  0060  F027  FFE3   	movff	btemp+8,plusw1
 15481  0152DC  0EF7               	movlw	-9
 15482  0152DE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15483  0152E4  0EF8               	movlw	-8
 15484  0152E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15485  0152EC  0EF9               	movlw	-7
 15486  0152EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15487  0152F4                     l7262:
 15488                           
 15489                           ;stkvar	_u @ sp[(-10)+0]
 15490  0152F4  0EF6               	movlw	-10
 15491  0152F6  006F FF8C  F001    	movff	plusw1,btemp
 15492  0152FC  0EF7               	movlw	-9
 15493  0152FE  006F FF8C  F002    	movff	plusw1,btemp+1
 15494  015304  0EF8               	movlw	-8
 15495  015306  006F FF8C  F003    	movff	plusw1,btemp+2
 15496  01530C  0EF9               	movlw	-7
 15497  01530E                     L13:
 15498  01530E  006F FF8C  F004    	movff	plusw1,btemp+3
 15499                           
 15500                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15501  015314  0EF2               	movlw	242
 15502  015316  26E1               	addwf	fsr1l,f,c
 15503  015318  0EFF               	movlw	255
 15504  01531A  22E2               	addwfc	fsr1h,f,c
 15505  01531C  0012               	return		;funcret
 15506  01531E                     __end_of_floorf:
 15507                           	opt callstack 0
 15508                           
 15509 ;; *************** function ___fpclassifyf *****************
 15510 ;; Defined at:
 15511 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 15512 ;; Parameters:    Size  Location     Type
 15513 ;;  x               4  [STACK] float 
 15514 ;; Auto vars:     Size  Location     Type
 15515 ;;  u               4  [STACK] struct .
 15516 ;;  e               2  [STACK] int 
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  2  [STACK] int 
 15519 ;; Registers used:
 15520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15530 ;;Total ram usage:        0 bytes
 15531 ;; Hardware stack levels used:    1
 15532 ;; Hardware stack levels required when called:   15
 15533 ;; This function calls:
 15534 ;;		Nothing
 15535 ;; This function is called by:
 15536 ;;		_efgtoa
 15537 ;; This function uses a reentrant model
 15538 ;;
 15539                           
 15540                           	psect	text55
 15541  016C74                     __ptext55:
 15542                           	opt callstack 0
 15543  016C74                     ___fpclassifyf:
 15544                           	opt callstack 0
 15545                           
 15546                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15547  016C74  0E06               	movlw	6
 15548  016C76  26E1               	addwf	fsr1l,f,c
 15549  016C78  0E00               	movlw	0
 15550  016C7A  22E2               	addwfc	fsr1h,f,c
 15551                           
 15552                           ;incstack = 0
 15553 ;; hardware stack exceeded
 15554  016C7C  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 15555  016C82  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 15556  016C88  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 15557  016C8E  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 15558                           
 15559                           ;stkvar	_u @ sp[(-6)+0]
 15560  016C94  0EFA               	movlw	-6
 15561  016C96  0060  F027  FFE3   	movff	btemp+8,plusw1
 15562  016C9C  0EFB               	movlw	-5
 15563  016C9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15564  016CA4  0EFC               	movlw	-4
 15565  016CA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15566  016CAC  0EFD               	movlw	-3
 15567  016CAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15568                           
 15569                           ;stkvar	_x @ sp[(-6)+-4]
 15570  016CB4  0EF6               	movlw	-10
 15571  016CB6  006F FF8C  F009    	movff	plusw1,btemp+8
 15572  016CBC  0EF7               	movlw	-9
 15573  016CBE  006F FF8C  F00A    	movff	plusw1,btemp+9
 15574  016CC4  0EF8               	movlw	-8
 15575  016CC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 15576  016CCC  0EF9               	movlw	-7
 15577  016CCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15578                           
 15579                           ;stkvar	_u @ sp[(-6)+0]
 15580  016CD4  0EFA               	movlw	-6
 15581  016CD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 15582  016CDC  0EFB               	movlw	-5
 15583  016CDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15584  016CE4  0EFC               	movlw	-4
 15585  016CE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15586  016CEC  0EFD               	movlw	-3
 15587  016CEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15588                           
 15589                           ;stkvar	_u @ sp[(-6)+0]
 15590  016CF4  0EFA               	movlw	-6
 15591  016CF6  006F FF8C  F009    	movff	plusw1,btemp+8
 15592  016CFC  0EFB               	movlw	-5
 15593  016CFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 15594  016D04  0EFC               	movlw	-4
 15595  016D06  006F FF8C  F00B    	movff	plusw1,btemp+10
 15596  016D0C  0EFD               	movlw	-3
 15597  016D0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15598  016D14  0E18               	movlw	24
 15599  016D16  D005               	goto	u5250
 15600  016D18                     u5255:
 15601  016D18  90D8               	bcf	status,0,c
 15602  016D1A  320C               	rrcf	(btemp+11)^0,f,c
 15603  016D1C  320B               	rrcf	(btemp+10)^0,f,c
 15604  016D1E  320A               	rrcf	(btemp+9)^0,f,c
 15605  016D20  3209               	rrcf	(btemp+8)^0,f,c
 15606  016D22                     u5250:
 15607  016D22  2EE8               	decfsz	wreg,f,c
 15608  016D24  D7F9               	goto	u5255
 15609  016D26  0060  F024  F007   	movff	btemp+8,btemp+6
 15610  016D2C  0060  F028  F008   	movff	btemp+9,btemp+7
 15611  016D32  0EFF               	movlw	255
 15612  016D34  1607               	andwf	(btemp+6)^0,f,c
 15613  016D36  0E00               	movlw	0
 15614  016D38  1608               	andwf	(btemp+7)^0,f,c
 15615                           
 15616                           ;stkvar	_e @ sp[(-6)+4]
 15617  016D3A  0EFE               	movlw	-2
 15618  016D3C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15619  016D42  0EFF               	movlw	-1
 15620  016D44  0060  F023  FFE3   	movff	btemp+7,plusw1
 15621                           
 15622                           ;stkvar	_e @ sp[(-6)+4]
 15623  016D4A  0EFE               	movlw	-2
 15624  016D4C  006F FF8C  F001    	movff	plusw1,btemp
 15625  016D52  0EFF               	movlw	-1
 15626  016D54  50E3               	movf	plusw1,w,c
 15627  016D56  1001               	iorwf	btemp^0,w,c
 15628  016D58  A4D8               	btfss	status,2,c
 15629  016D5A  D023               	goto	l7200
 15630                           
 15631                           ;stkvar	_u @ sp[(-6)+0]
 15632  016D5C  0EFA               	movlw	-6
 15633  016D5E  006F FF8C  F009    	movff	plusw1,btemp+8
 15634  016D64  0EFB               	movlw	-5
 15635  016D66  006F FF8C  F00A    	movff	plusw1,btemp+9
 15636  016D6C  0EFC               	movlw	-4
 15637  016D6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15638  016D74  0EFD               	movlw	-3
 15639  016D76  006F FF8C  F00C    	movff	plusw1,btemp+11
 15640  016D7C  90D8               	bcf	status,0,c
 15641  016D7E  3409               	rlcf	(btemp+8)^0,w,c
 15642  016D80  6E05               	movwf	(btemp+4)^0,c
 15643  016D82  340A               	rlcf	(btemp+9)^0,w,c
 15644  016D84  6E06               	movwf	(btemp+5)^0,c
 15645  016D86  340B               	rlcf	(btemp+10)^0,w,c
 15646  016D88  6E07               	movwf	(btemp+6)^0,c
 15647  016D8A  340C               	rlcf	(btemp+11)^0,w,c
 15648  016D8C  6E08               	movwf	(btemp+7)^0,c
 15649  016D8E  5005               	movf	(btemp+4)^0,w,c
 15650  016D90  1006               	iorwf	(btemp+5)^0,w,c
 15651  016D92  1007               	iorwf	(btemp+6)^0,w,c
 15652  016D94  1008               	iorwf	(btemp+7)^0,w,c
 15653  016D96  A4D8               	btfss	status,2,c
 15654  016D98  D002               	goto	l7196
 15655  016D9A  0E02               	movlw	2
 15656  016D9C  D02E               	goto	L14
 15657  016D9E                     l7196:
 15658  016D9E  0E03               	movlw	3
 15659  016DA0  D02C               	goto	L14
 15660  016DA2                     l7200:
 15661                           
 15662                           ;stkvar	_e @ sp[(-6)+4]
 15663  016DA2  0EFE               	movlw	-2
 15664  016DA4  28E3               	incf	plusw1,w,c
 15665  016DA6  E128               	bnz	l7206
 15666  016DA8  0EFF               	movlw	-1
 15667  016DAA  50E3               	movf	plusw1,w,c
 15668  016DAC  A4D8               	btfss	status,2,c
 15669  016DAE  D024               	goto	l7206
 15670                           
 15671                           ;stkvar	_u @ sp[(-6)+0]
 15672  016DB0  0EFA               	movlw	-6
 15673  016DB2  006F FF8C  F009    	movff	plusw1,btemp+8
 15674  016DB8  0EFB               	movlw	-5
 15675  016DBA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15676  016DC0  0EFC               	movlw	-4
 15677  016DC2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15678  016DC8  0EFD               	movlw	-3
 15679  016DCA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15680  016DD0  0E09               	movlw	9
 15681  016DD2                     u5295:
 15682  016DD2  90D8               	bcf	status,0,c
 15683  016DD4  3609               	rlcf	(btemp+8)^0,f,c
 15684  016DD6  360A               	rlcf	(btemp+9)^0,f,c
 15685  016DD8  360B               	rlcf	(btemp+10)^0,f,c
 15686  016DDA  360C               	rlcf	(btemp+11)^0,f,c
 15687  016DDC  2EE8               	decfsz	wreg,f,c
 15688  016DDE  D7F9               	goto	u5295
 15689  016DE0  5009               	movf	(btemp+8)^0,w,c
 15690  016DE2  100A               	iorwf	(btemp+9)^0,w,c
 15691  016DE4  100B               	iorwf	(btemp+10)^0,w,c
 15692  016DE6  100C               	iorwf	(btemp+11)^0,w,c
 15693  016DE8  A4D8               	btfss	status,2,c
 15694  016DEA  D002               	goto	u5300
 15695  016DEC  0E01               	movlw	1
 15696  016DEE  D001               	goto	u5310
 15697  016DF0                     u5300:
 15698  016DF0  0E00               	movlw	0
 15699  016DF2                     u5310:
 15700  016DF2  6E01               	movwf	btemp^0,c
 15701  016DF4  6A02               	clrf	(btemp+1)^0,c
 15702  016DF6  D004               	goto	l2914
 15703  016DF8                     l7206:
 15704  016DF8  0E04               	movlw	4
 15705  016DFA                     L14:
 15706  016DFA  6E01               	movwf	btemp^0,c
 15707  016DFC  0E00               	movlw	0
 15708  016DFE  6E02               	movwf	(btemp+1)^0,c
 15709  016E00                     l2914:
 15710                           
 15711                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 15712  016E00  0EF6               	movlw	246
 15713  016E02  26E1               	addwf	fsr1l,f,c
 15714  016E04  0EFF               	movlw	255
 15715  016E06  22E2               	addwfc	fsr1h,f,c
 15716  016E08  0012               	return		;funcret
 15717  016E0A                     __end_of___fpclassifyf:
 15718                           	opt callstack 0
 15719                           
 15720 ;; *************** function ___fltol *****************
 15721 ;; Defined at:
 15722 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 15723 ;; Parameters:    Size  Location     Type
 15724 ;;  f1              4  [STACK] int 
 15725 ;; Auto vars:     Size  Location     Type
 15726 ;;  exp1            1  [STACK] unsigned char 
 15727 ;;  sign1           1  [STACK] unsigned char 
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  4  [STACK] long 
 15730 ;; Registers used:
 15731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/1
 15734 ;;		On exit  : 0/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15741 ;;Total ram usage:        0 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:   15
 15744 ;; This function calls:
 15745 ;;		Nothing
 15746 ;; This function is called by:
 15747 ;;		_calc_bsoc
 15748 ;;		_init_bsoc
 15749 ;;		_efgtoa
 15750 ;; This function uses a reentrant model
 15751 ;;
 15752                           
 15753                           	psect	text56
 15754  016E0A                     __ptext56:
 15755                           	opt callstack 0
 15756  016E0A                     ___fltol:
 15757                           	opt callstack 0
 15758                           
 15759                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15760  016E0A  52E6               	movf	postinc1,f,c
 15761  016E0C  52E6               	movf	postinc1,f,c
 15762                           
 15763                           ;stkvar	_f1 @ sp[(-2)+-4]
 15764                           
 15765                           ;incstack = 0
 15766 ;; hardware stack exceeded
 15767  016E0E  0EFA               	movlw	-6
 15768  016E10  006F FF8C  F009    	movff	plusw1,btemp+8
 15769  016E16  0EFB               	movlw	-5
 15770  016E18  006F FF8C  F00A    	movff	plusw1,btemp+9
 15771  016E1E  0EFC               	movlw	-4
 15772  016E20  006F FF8C  F00B    	movff	plusw1,btemp+10
 15773  016E26  0EFD               	movlw	-3
 15774  016E28  006F FF8C  F00C    	movff	plusw1,btemp+11
 15775  016E2E  0E18               	movlw	24
 15776  016E30  D005               	goto	u6460
 15777  016E32                     u6465:
 15778  016E32  90D8               	bcf	status,0,c
 15779  016E34  320C               	rrcf	(btemp+11)^0,f,c
 15780  016E36  320B               	rrcf	(btemp+10)^0,f,c
 15781  016E38  320A               	rrcf	(btemp+9)^0,f,c
 15782  016E3A  3209               	rrcf	(btemp+8)^0,f,c
 15783  016E3C                     u6460:
 15784  016E3C  2EE8               	decfsz	wreg,f,c
 15785  016E3E  D7F9               	goto	u6465
 15786                           
 15787                           ;stkvar	_exp1 @ sp[(-2)+0]
 15788  016E40  0EFE               	movlw	-2
 15789  016E42  0060  F027  FFE3   	movff	btemp+8,plusw1
 15790  016E48  0EFE               	movlw	-2
 15791  016E4A  50E3               	movf	plusw1,w,c
 15792  016E4C  A4D8               	btfss	status,2,c
 15793  016E4E  D006               	goto	l7826
 15794  016E50                     u6470:
 15795  016E50  0E00               	movlw	0
 15796  016E52  6E01               	movwf	btemp^0,c
 15797  016E54  6A02               	clrf	(btemp+1)^0,c
 15798  016E56  6A03               	clrf	(btemp+2)^0,c
 15799  016E58  6A04               	clrf	(btemp+3)^0,c
 15800  016E5A  D08B               	goto	l2530
 15801  016E5C                     l7826:
 15802                           
 15803                           ;stkvar	_f1 @ sp[(-2)+-4]
 15804  016E5C  0EFA               	movlw	-6
 15805  016E5E  006F FF8C  F009    	movff	plusw1,btemp+8
 15806  016E64  0EFB               	movlw	-5
 15807  016E66  006F FF8C  F00A    	movff	plusw1,btemp+9
 15808  016E6C  0EFC               	movlw	-4
 15809  016E6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15810  016E74  0EFD               	movlw	-3
 15811  016E76  006F FF8C  F00C    	movff	plusw1,btemp+11
 15812  016E7C  0E20               	movlw	32
 15813  016E7E  D005               	goto	u6480
 15814  016E80                     u6485:
 15815  016E80  90D8               	bcf	status,0,c
 15816  016E82  320C               	rrcf	(btemp+11)^0,f,c
 15817  016E84  320B               	rrcf	(btemp+10)^0,f,c
 15818  016E86  320A               	rrcf	(btemp+9)^0,f,c
 15819  016E88  3209               	rrcf	(btemp+8)^0,f,c
 15820  016E8A                     u6480:
 15821  016E8A  2EE8               	decfsz	wreg,f,c
 15822  016E8C  D7F9               	goto	u6485
 15823                           
 15824                           ;stkvar	_sign1 @ sp[(-2)+1]
 15825  016E8E  0EFF               	movlw	-1
 15826  016E90  0060  F027  FFE3   	movff	btemp+8,plusw1
 15827                           
 15828                           ;stkvar	_f1 @ sp[(-2)+-4]
 15829  016E96  0EFC               	movlw	-4
 15830  016E98  8EE3               	bsf	plusw1,7,c
 15831                           
 15832                           ;stkvar	_f1 @ sp[(-2)+-4]
 15833  016E9A  50E1               	movf	fsr1l,w,c
 15834  016E9C  0FFA               	addlw	-6
 15835  016E9E  6ED9               	movwf	fsr2l,c
 15836  016EA0  50E2               	movf	fsr1h,w,c
 15837  016EA2  6EDA               	movwf	fsr2h,c
 15838  016EA4  0EFF               	movlw	255
 15839  016EA6  22DA               	addwfc	fsr2h,f,c
 15840  016EA8  0EFF               	movlw	255
 15841  016EAA  16DE               	andwf	postinc2,f,c
 15842  016EAC  0EFF               	movlw	255
 15843  016EAE  16DE               	andwf	postinc2,f,c
 15844  016EB0  0EFF               	movlw	255
 15845  016EB2  16DE               	andwf	postinc2,f,c
 15846  016EB4  0E00               	movlw	0
 15847  016EB6  16DE               	andwf	postinc2,f,c
 15848                           
 15849                           ;stkvar	_exp1 @ sp[(-2)+0]
 15850  016EB8  0EFE               	movlw	-2
 15851  016EBA  006F FF8C  F001    	movff	plusw1,btemp
 15852  016EC0  0E96               	movlw	150
 15853  016EC2  5E01               	subwf	btemp^0,f,c
 15854  016EC4  0EFE               	movlw	-2
 15855  016EC6  0060  F007  FFE3   	movff	btemp,plusw1
 15856                           
 15857                           ;stkvar	_exp1 @ sp[(-2)+0]
 15858  016ECC  0EFE               	movlw	-2
 15859  016ECE  AEE3               	btfss	plusw1,7,c
 15860  016ED0  D014               	goto	l7844
 15861                           
 15862                           ;stkvar	_exp1 @ sp[(-2)+0]
 15863  016ED2  0EFE               	movlw	-2
 15864  016ED4  50E3               	movf	plusw1,w,c
 15865  016ED6  0A80               	xorlw	128
 15866  016ED8  0F97               	addlw	151
 15867  016EDA  A0D8               	btfss	status,0,c
 15868  016EDC  D7B9               	goto	u6470
 15869  016EDE                     l7842:
 15870                           
 15871                           ;stkvar	_f1 @ sp[(-2)+-4]
 15872  016EDE  90D8               	bcf	status,0,c
 15873  016EE0  0EFD               	movlw	-3
 15874  016EE2  32E3               	rrcf	plusw1,f,c
 15875  016EE4  0EFC               	movlw	-4
 15876  016EE6  32E3               	rrcf	plusw1,f,c
 15877  016EE8  0EFB               	movlw	-5
 15878  016EEA  32E3               	rrcf	plusw1,f,c
 15879  016EEC  0EFA               	movlw	-6
 15880  016EEE  32E3               	rrcf	plusw1,f,c
 15881                           
 15882                           ;stkvar	_exp1 @ sp[(-2)+0]
 15883  016EF0  0EFE               	movlw	-2
 15884  016EF2  2AE3               	incf	plusw1,f,c
 15885  016EF4  B4D8               	btfsc	status,2,c
 15886  016EF6  D018               	goto	u6530
 15887  016EF8  D7F2               	goto	l7842
 15888  016EFA                     l7844:
 15889                           
 15890                           ;stkvar	_exp1 @ sp[(-2)+0]
 15891  016EFA  0EFE               	movlw	-2
 15892  016EFC  006F FF8C  F001    	movff	plusw1,btemp
 15893  016F02  0E1F               	movlw	31
 15894  016F04  6401               	cpfsgt	btemp^0,c
 15895  016F06  D00C               	goto	l7852
 15896  016F08  D7A3               	goto	u6470
 15897  016F0A                     l7850:
 15898                           
 15899                           ;stkvar	_f1 @ sp[(-2)+-4]
 15900  016F0A  90D8               	bcf	status,0,c
 15901  016F0C  0EFA               	movlw	-6
 15902  016F0E  36E3               	rlcf	plusw1,f,c
 15903  016F10  0EFB               	movlw	-5
 15904  016F12  36E3               	rlcf	plusw1,f,c
 15905  016F14  0EFC               	movlw	-4
 15906  016F16  36E3               	rlcf	plusw1,f,c
 15907  016F18  0EFD               	movlw	-3
 15908  016F1A  36E3               	rlcf	plusw1,f,c
 15909                           
 15910                           ;stkvar	_exp1 @ sp[(-2)+0]
 15911  016F1C  0EFE               	movlw	-2
 15912  016F1E  06E3               	decf	plusw1,f,c
 15913  016F20                     l7852:
 15914                           
 15915                           ;stkvar	_exp1 @ sp[(-2)+0]
 15916  016F20  0EFE               	movlw	-2
 15917  016F22  50E3               	movf	plusw1,w,c
 15918  016F24  A4D8               	btfss	status,2,c
 15919  016F26  D7F1               	goto	l7850
 15920  016F28                     u6530:
 15921                           
 15922                           ;stkvar	_sign1 @ sp[(-2)+1]
 15923  016F28  0EFF               	movlw	-1
 15924  016F2A  50E3               	movf	plusw1,w,c
 15925  016F2C  B4D8               	btfsc	status,2,c
 15926  016F2E  D011               	goto	u6550
 15927                           
 15928                           ;stkvar	_f1 @ sp[(-2)+-4]
 15929                           ;stkvar	_f1 @ sp[(-2)+-4]
 15930  016F30  0EFA               	movlw	-6
 15931  016F32  6CE3               	negf	plusw1,c
 15932  016F34  0EFB               	movlw	-5
 15933  016F36  1EE3               	comf	plusw1,f,c
 15934  016F38  0EFC               	movlw	-4
 15935  016F3A  1EE3               	comf	plusw1,f,c
 15936  016F3C  0EFD               	movlw	-3
 15937  016F3E  1EE3               	comf	plusw1,f,c
 15938  016F40  E308               	bnc	u6550
 15939  016F42  0EFB               	movlw	-5
 15940  016F44  2AE3               	incf	plusw1,f,c
 15941  016F46  E305               	bnc	u6550
 15942  016F48  0EFC               	movlw	-4
 15943  016F4A  2AE3               	incf	plusw1,f,c
 15944  016F4C  E302               	bnc	u6550
 15945  016F4E  0EFD               	movlw	-3
 15946  016F50  2AE3               	incf	plusw1,f,c
 15947  016F52                     u6550:
 15948                           
 15949                           ;stkvar	_f1 @ sp[(-2)+-4]
 15950  016F52  0EFA               	movlw	-6
 15951  016F54  006F FF8C  F001    	movff	plusw1,btemp
 15952  016F5A  0EFB               	movlw	-5
 15953  016F5C  006F FF8C  F002    	movff	plusw1,btemp+1
 15954  016F62  0EFC               	movlw	-4
 15955  016F64  006F FF8C  F003    	movff	plusw1,btemp+2
 15956  016F6A  0EFD               	movlw	-3
 15957  016F6C  006F FF8C  F004    	movff	plusw1,btemp+3
 15958  016F72                     l2530:
 15959                           
 15960                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15961  016F72  0EFA               	movlw	250
 15962  016F74  26E1               	addwf	fsr1l,f,c
 15963  016F76  0EFF               	movlw	255
 15964  016F78  22E2               	addwfc	fsr1h,f,c
 15965  016F7A  0012               	return		;funcret
 15966  016F7C                     __end_of___fltol:
 15967                           	opt callstack 0
 15968                           
 15969 ;; *************** function ___flneg *****************
 15970 ;; Defined at:
 15971 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15972 ;; Parameters:    Size  Location     Type
 15973 ;;  f1              4  [STACK] long 
 15974 ;; Auto vars:     Size  Location     Type
 15975 ;;		None
 15976 ;; Return value:  Size  Location     Type
 15977 ;;                  4  [STACK] long 
 15978 ;; Registers used:
 15979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15980 ;; Tracked objects:
 15981 ;;		On entry : 0/0
 15982 ;;		On exit  : 0/0
 15983 ;;		Unchanged: 0/0
 15984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15989 ;;Total ram usage:        0 bytes
 15990 ;; Hardware stack levels used:    1
 15991 ;; Hardware stack levels required when called:   15
 15992 ;; This function calls:
 15993 ;;		Nothing
 15994 ;; This function is called by:
 15995 ;;		_calc_bsoc
 15996 ;;		_efgtoa
 15997 ;; This function uses a reentrant model
 15998 ;;
 15999                           
 16000                           	psect	text57
 16001  0190F8                     __ptext57:
 16002                           	opt callstack 0
 16003  0190F8                     ___flneg:
 16004                           	opt callstack 0
 16005                           
 16006                           ;stkvar	_f1 @ sp[(0)+-4]
 16007                           
 16008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16009                           ;incstack = 0
 16010 ;; hardware stack exceeded
 16011  0190F8  0EFC               	movlw	-4
 16012  0190FA  50E3               	movf	plusw1,w,c
 16013  0190FC  E10A               	bnz	u6450
 16014  0190FE  0EFD               	movlw	-3
 16015  019100  50E3               	movf	plusw1,w,c
 16016  019102  E107               	bnz	u6450
 16017  019104  0EFE               	movlw	-2
 16018  019106  50E3               	movf	plusw1,w,c
 16019  019108  E104               	bnz	u6450
 16020  01910A  0EFF               	movlw	-1
 16021  01910C  50E3               	movf	plusw1,w,c
 16022  01910E  B4D8               	btfsc	status,2,c
 16023  019110  D002               	goto	l7816
 16024  019112                     u6450:
 16025                           
 16026                           ;stkvar	_f1 @ sp[(0)+-4]
 16027  019112  0EFF               	movlw	-1
 16028  019114  7EE3               	btg	plusw1,7,c
 16029  019116                     l7816:
 16030                           
 16031                           ;stkvar	_f1 @ sp[(0)+-4]
 16032  019116  0EFC               	movlw	-4
 16033  019118  006F FF8C  F001    	movff	plusw1,btemp
 16034  01911E  0EFD               	movlw	-3
 16035  019120  006F FF8C  F002    	movff	plusw1,btemp+1
 16036  019126  0EFE               	movlw	-2
 16037  019128  006F FF8C  F003    	movff	plusw1,btemp+2
 16038  01912E  0EFF               	movlw	-1
 16039  019130  006F FF8C  F004    	movff	plusw1,btemp+3
 16040                           
 16041                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16042  019136  52E5               	movf	postdec1,f,c
 16043  019138  52E5               	movf	postdec1,f,c
 16044  01913A  52E5               	movf	postdec1,f,c
 16045  01913C  52E5               	movf	postdec1,f,c
 16046  01913E  0012               	return		;funcret
 16047  019140                     __end_of___flneg:
 16048                           	opt callstack 0
 16049                           
 16050 ;; *************** function ___flge *****************
 16051 ;; Defined at:
 16052 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 16053 ;; Parameters:    Size  Location     Type
 16054 ;;  ff1             4  [STACK] long 
 16055 ;;  ff2             4  [STACK] long 
 16056 ;; Auto vars:     Size  Location     Type
 16057 ;;		None
 16058 ;; Return value:  Size  Location     Type
 16059 ;;		None               void
 16060 ;; Registers used:
 16061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16062 ;; Tracked objects:
 16063 ;;		On entry : 0/0
 16064 ;;		On exit  : 0/0
 16065 ;;		Unchanged: 0/0
 16066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16071 ;;Total ram usage:        0 bytes
 16072 ;; Hardware stack levels used:    1
 16073 ;; Hardware stack levels required when called:   15
 16074 ;; This function calls:
 16075 ;;		Nothing
 16076 ;; This function is called by:
 16077 ;;		_calc_bsoc
 16078 ;;		_efgtoa
 16079 ;; This function uses a reentrant model
 16080 ;;
 16081                           
 16082                           	psect	text58
 16083  0170EC                     __ptext58:
 16084                           	opt callstack 0
 16085  0170EC                     ___flge:
 16086                           	opt callstack 0
 16087                           
 16088                           ;stkvar	_ff1 @ sp[(0)+-4]
 16089                           
 16090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16091                           ;incstack = 0
 16092 ;; hardware stack exceeded
 16093  0170EC  50E1               	movf	fsr1l,w,c
 16094  0170EE  0FFC               	addlw	-4
 16095  0170F0  6ED9               	movwf	fsr2l,c
 16096  0170F2  50E2               	movf	fsr1h,w,c
 16097  0170F4  6EDA               	movwf	fsr2h,c
 16098  0170F6  0EFF               	movlw	255
 16099  0170F8  22DA               	addwfc	fsr2h,f,c
 16100  0170FA  0E00               	movlw	0
 16101  0170FC  14DE               	andwf	postinc2,w,c
 16102  0170FE  6E09               	movwf	(btemp+8)^0,c
 16103  017100  0E00               	movlw	0
 16104  017102  14DE               	andwf	postinc2,w,c
 16105  017104  6E0A               	movwf	(btemp+9)^0,c
 16106  017106  0E80               	movlw	128
 16107  017108  14DE               	andwf	postinc2,w,c
 16108  01710A  6E0B               	movwf	(btemp+10)^0,c
 16109  01710C  0E7F               	movlw	127
 16110  01710E  14DE               	andwf	postinc2,w,c
 16111  017110  6E0C               	movwf	(btemp+11)^0,c
 16112  017112  5009               	movf	(btemp+8)^0,w,c
 16113  017114  100A               	iorwf	(btemp+9)^0,w,c
 16114  017116  100B               	iorwf	(btemp+10)^0,w,c
 16115  017118  100C               	iorwf	(btemp+11)^0,w,c
 16116  01711A  A4D8               	btfss	status,2,c
 16117  01711C  D008               	goto	l7790
 16118                           
 16119                           ;stkvar	_ff1 @ sp[(0)+-4]
 16120  01711E  0EFC               	movlw	-4
 16121  017120  6AE3               	clrf	plusw1,c
 16122  017122  0EFD               	movlw	-3
 16123  017124  6AE3               	clrf	plusw1,c
 16124  017126  0EFE               	movlw	-2
 16125  017128  6AE3               	clrf	plusw1,c
 16126  01712A  0EFF               	movlw	-1
 16127  01712C  6AE3               	clrf	plusw1,c
 16128  01712E                     l7790:
 16129                           
 16130                           ;stkvar	_ff2 @ sp[(0)+-8]
 16131  01712E  50E1               	movf	fsr1l,w,c
 16132  017130  0FF8               	addlw	-8
 16133  017132  6ED9               	movwf	fsr2l,c
 16134  017134  50E2               	movf	fsr1h,w,c
 16135  017136  6EDA               	movwf	fsr2h,c
 16136  017138  0EFF               	movlw	255
 16137  01713A  22DA               	addwfc	fsr2h,f,c
 16138  01713C  0E00               	movlw	0
 16139  01713E  14DE               	andwf	postinc2,w,c
 16140  017140  6E09               	movwf	(btemp+8)^0,c
 16141  017142  0E00               	movlw	0
 16142  017144  14DE               	andwf	postinc2,w,c
 16143  017146  6E0A               	movwf	(btemp+9)^0,c
 16144  017148  0E80               	movlw	128
 16145  01714A  14DE               	andwf	postinc2,w,c
 16146  01714C  6E0B               	movwf	(btemp+10)^0,c
 16147  01714E  0E7F               	movlw	127
 16148  017150  14DE               	andwf	postinc2,w,c
 16149  017152  6E0C               	movwf	(btemp+11)^0,c
 16150  017154  5009               	movf	(btemp+8)^0,w,c
 16151  017156  100A               	iorwf	(btemp+9)^0,w,c
 16152  017158  100B               	iorwf	(btemp+10)^0,w,c
 16153  01715A  100C               	iorwf	(btemp+11)^0,w,c
 16154  01715C  A4D8               	btfss	status,2,c
 16155  01715E  D008               	goto	l2496
 16156                           
 16157                           ;stkvar	_ff2 @ sp[(0)+-8]
 16158  017160  0EF8               	movlw	-8
 16159  017162  6AE3               	clrf	plusw1,c
 16160  017164  0EF9               	movlw	-7
 16161  017166  6AE3               	clrf	plusw1,c
 16162  017168  0EFA               	movlw	-6
 16163  01716A  6AE3               	clrf	plusw1,c
 16164  01716C  0EFB               	movlw	-5
 16165  01716E  6AE3               	clrf	plusw1,c
 16166  017170                     l2496:
 16167                           
 16168                           ;stkvar	_ff1 @ sp[(0)+-4]
 16169  017170  0EFF               	movlw	-1
 16170  017172  AEE3               	btfss	plusw1,7,c
 16171  017174  D024               	goto	l7796
 16172                           
 16173                           ;stkvar	_ff1 @ sp[(0)+-4]
 16174  017176  0E00               	movlw	0
 16175  017178  6E09               	movwf	(btemp+8)^0,c
 16176  01717A  0E00               	movlw	0
 16177  01717C  6E0A               	movwf	(btemp+9)^0,c
 16178  01717E  0E00               	movlw	0
 16179  017180  6E0B               	movwf	(btemp+10)^0,c
 16180  017182  0E80               	movlw	128
 16181  017184  6E0C               	movwf	(btemp+11)^0,c
 16182  017186  0EFC               	movlw	-4
 16183  017188  50E3               	movf	plusw1,w,c
 16184  01718A  5E09               	subwf	(btemp+8)^0,f,c
 16185  01718C  0EFD               	movlw	-3
 16186  01718E  50E3               	movf	plusw1,w,c
 16187  017190  5A0A               	subwfb	(btemp+9)^0,f,c
 16188  017192  0EFE               	movlw	-2
 16189  017194  50E3               	movf	plusw1,w,c
 16190  017196  5A0B               	subwfb	(btemp+10)^0,f,c
 16191  017198  0EFF               	movlw	-1
 16192  01719A  50E3               	movf	plusw1,w,c
 16193  01719C  5A0C               	subwfb	(btemp+11)^0,f,c
 16194                           
 16195                           ;stkvar	_ff1 @ sp[(0)+-4]
 16196  01719E  0EFC               	movlw	-4
 16197  0171A0  0060  F027  FFE3   	movff	btemp+8,plusw1
 16198  0171A6  0EFD               	movlw	-3
 16199  0171A8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16200  0171AE  0EFE               	movlw	-2
 16201  0171B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16202  0171B6  0EFF               	movlw	-1
 16203  0171B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16204  0171BE                     l7796:
 16205                           
 16206                           ;stkvar	_ff2 @ sp[(0)+-8]
 16207  0171BE  0EFB               	movlw	-5
 16208  0171C0  AEE3               	btfss	plusw1,7,c
 16209  0171C2  D024               	goto	l7800
 16210                           
 16211                           ;stkvar	_ff2 @ sp[(0)+-8]
 16212  0171C4  0E00               	movlw	0
 16213  0171C6  6E09               	movwf	(btemp+8)^0,c
 16214  0171C8  0E00               	movlw	0
 16215  0171CA  6E0A               	movwf	(btemp+9)^0,c
 16216  0171CC  0E00               	movlw	0
 16217  0171CE  6E0B               	movwf	(btemp+10)^0,c
 16218  0171D0  0E80               	movlw	128
 16219  0171D2  6E0C               	movwf	(btemp+11)^0,c
 16220  0171D4  0EF8               	movlw	-8
 16221  0171D6  50E3               	movf	plusw1,w,c
 16222  0171D8  5E09               	subwf	(btemp+8)^0,f,c
 16223  0171DA  0EF9               	movlw	-7
 16224  0171DC  50E3               	movf	plusw1,w,c
 16225  0171DE  5A0A               	subwfb	(btemp+9)^0,f,c
 16226  0171E0  0EFA               	movlw	-6
 16227  0171E2  50E3               	movf	plusw1,w,c
 16228  0171E4  5A0B               	subwfb	(btemp+10)^0,f,c
 16229  0171E6  0EFB               	movlw	-5
 16230  0171E8  50E3               	movf	plusw1,w,c
 16231  0171EA  5A0C               	subwfb	(btemp+11)^0,f,c
 16232                           
 16233                           ;stkvar	_ff2 @ sp[(0)+-8]
 16234  0171EC  0EF8               	movlw	-8
 16235  0171EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 16236  0171F4  0EF9               	movlw	-7
 16237  0171F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16238  0171FC  0EFA               	movlw	-6
 16239  0171FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16240  017204  0EFB               	movlw	-5
 16241  017206  0060  F033  FFE3   	movff	btemp+11,plusw1
 16242  01720C                     l7800:
 16243                           
 16244                           ;stkvar	_ff1 @ sp[(0)+-4]
 16245  01720C  0EFF               	movlw	-1
 16246  01720E  7EE3               	btg	plusw1,7,c
 16247                           
 16248                           ;stkvar	_ff2 @ sp[(0)+-8]
 16249  017210  0EFB               	movlw	-5
 16250  017212  7EE3               	btg	plusw1,7,c
 16251                           
 16252                           ;stkvar	_ff2 @ sp[(0)+-8]
 16253                           ;stkvar	_ff1 @ sp[(0)+-4]
 16254  017214  50E1               	movf	fsr1l,w,c
 16255  017216  0FFC               	addlw	-4
 16256  017218  6ED9               	movwf	fsr2l,c
 16257  01721A  50E2               	movf	fsr1h,w,c
 16258  01721C  6EDA               	movwf	fsr2h,c
 16259  01721E  0EFF               	movlw	255
 16260  017220  22DA               	addwfc	fsr2h,f,c
 16261  017222  0EF8               	movlw	-8
 16262  017224  50E3               	movf	plusw1,w,c
 16263  017226  5CDE               	subwf	postinc2,w,c
 16264  017228  0EF9               	movlw	-7
 16265  01722A  50E3               	movf	plusw1,w,c
 16266  01722C  58DE               	subwfb	postinc2,w,c
 16267  01722E  0EFA               	movlw	-6
 16268  017230  50E3               	movf	plusw1,w,c
 16269  017232  58DE               	subwfb	postinc2,w,c
 16270  017234  0EFB               	movlw	-5
 16271  017236  50E3               	movf	plusw1,w,c
 16272  017238  58DE               	subwfb	postinc2,w,c
 16273  01723A  B0D8               	btfsc	status,0,c
 16274  01723C  D002               	goto	l7808
 16275  01723E  9001               	bcf	btemp& (0+255),0,c
 16276  017240  D001               	goto	l2503
 16277  017242                     l7808:
 16278  017242  8001               	bsf	btemp& (0+255),0,c
 16279  017244                     l2503:
 16280                           
 16281                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16282  017244  0EF8               	movlw	248
 16283  017246  26E1               	addwf	fsr1l,f,c
 16284  017248  0EFF               	movlw	255
 16285  01724A  22E2               	addwfc	fsr1h,f,c
 16286  01724C  0012               	return		;funcret
 16287  01724E                     __end_of___flge:
 16288                           	opt callstack 0
 16289                           
 16290 ;; *************** function ___fleq *****************
 16291 ;; Defined at:
 16292 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;  ff1             4  [STACK] long 
 16295 ;;  ff2             4  [STACK] long 
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;		None
 16298 ;; Return value:  Size  Location     Type
 16299 ;;		None               void
 16300 ;; Registers used:
 16301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16311 ;;Total ram usage:        0 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:   15
 16314 ;; This function calls:
 16315 ;;		Nothing
 16316 ;; This function is called by:
 16317 ;;		_efgtoa
 16318 ;; This function uses a reentrant model
 16319 ;;
 16320                           
 16321                           	psect	text59
 16322  018168                     __ptext59:
 16323                           	opt callstack 0
 16324  018168                     ___fleq:
 16325                           	opt callstack 0
 16326                           
 16327                           ;stkvar	_ff1 @ sp[(0)+-4]
 16328                           
 16329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16330                           ;incstack = 0
 16331 ;; hardware stack exceeded
 16332  018168  50E1               	movf	fsr1l,w,c
 16333  01816A  0FFC               	addlw	-4
 16334  01816C  6ED9               	movwf	fsr2l,c
 16335  01816E  50E2               	movf	fsr1h,w,c
 16336  018170  6EDA               	movwf	fsr2h,c
 16337  018172  0EFF               	movlw	255
 16338  018174  22DA               	addwfc	fsr2h,f,c
 16339  018176  0E00               	movlw	0
 16340  018178  14DE               	andwf	postinc2,w,c
 16341  01817A  6E09               	movwf	(btemp+8)^0,c
 16342  01817C  0E00               	movlw	0
 16343  01817E  14DE               	andwf	postinc2,w,c
 16344  018180  6E0A               	movwf	(btemp+9)^0,c
 16345  018182  0E80               	movlw	128
 16346  018184  14DE               	andwf	postinc2,w,c
 16347  018186  6E0B               	movwf	(btemp+10)^0,c
 16348  018188  0E7F               	movlw	127
 16349  01818A  14DE               	andwf	postinc2,w,c
 16350  01818C  6E0C               	movwf	(btemp+11)^0,c
 16351  01818E  5009               	movf	(btemp+8)^0,w,c
 16352  018190  100A               	iorwf	(btemp+9)^0,w,c
 16353  018192  100B               	iorwf	(btemp+10)^0,w,c
 16354  018194  100C               	iorwf	(btemp+11)^0,w,c
 16355  018196  A4D8               	btfss	status,2,c
 16356  018198  D008               	goto	l7774
 16357                           
 16358                           ;stkvar	_ff1 @ sp[(0)+-4]
 16359  01819A  0EFC               	movlw	-4
 16360  01819C  6AE3               	clrf	plusw1,c
 16361  01819E  0EFD               	movlw	-3
 16362  0181A0  6AE3               	clrf	plusw1,c
 16363  0181A2  0EFE               	movlw	-2
 16364  0181A4  6AE3               	clrf	plusw1,c
 16365  0181A6  0EFF               	movlw	-1
 16366  0181A8  6AE3               	clrf	plusw1,c
 16367  0181AA                     l7774:
 16368                           
 16369                           ;stkvar	_ff2 @ sp[(0)+-8]
 16370  0181AA  50E1               	movf	fsr1l,w,c
 16371  0181AC  0FF8               	addlw	-8
 16372  0181AE  6ED9               	movwf	fsr2l,c
 16373  0181B0  50E2               	movf	fsr1h,w,c
 16374  0181B2  6EDA               	movwf	fsr2h,c
 16375  0181B4  0EFF               	movlw	255
 16376  0181B6  22DA               	addwfc	fsr2h,f,c
 16377  0181B8  0E00               	movlw	0
 16378  0181BA  14DE               	andwf	postinc2,w,c
 16379  0181BC  6E09               	movwf	(btemp+8)^0,c
 16380  0181BE  0E00               	movlw	0
 16381  0181C0  14DE               	andwf	postinc2,w,c
 16382  0181C2  6E0A               	movwf	(btemp+9)^0,c
 16383  0181C4  0E80               	movlw	128
 16384  0181C6  14DE               	andwf	postinc2,w,c
 16385  0181C8  6E0B               	movwf	(btemp+10)^0,c
 16386  0181CA  0E7F               	movlw	127
 16387  0181CC  14DE               	andwf	postinc2,w,c
 16388  0181CE  6E0C               	movwf	(btemp+11)^0,c
 16389  0181D0  5009               	movf	(btemp+8)^0,w,c
 16390  0181D2  100A               	iorwf	(btemp+9)^0,w,c
 16391  0181D4  100B               	iorwf	(btemp+10)^0,w,c
 16392  0181D6  100C               	iorwf	(btemp+11)^0,w,c
 16393  0181D8  A4D8               	btfss	status,2,c
 16394  0181DA  D008               	goto	l7778
 16395                           
 16396                           ;stkvar	_ff2 @ sp[(0)+-8]
 16397  0181DC  0EF8               	movlw	-8
 16398  0181DE  6AE3               	clrf	plusw1,c
 16399  0181E0  0EF9               	movlw	-7
 16400  0181E2  6AE3               	clrf	plusw1,c
 16401  0181E4  0EFA               	movlw	-6
 16402  0181E6  6AE3               	clrf	plusw1,c
 16403  0181E8  0EFB               	movlw	-5
 16404  0181EA  6AE3               	clrf	plusw1,c
 16405  0181EC                     l7778:
 16406                           
 16407                           ;stkvar	_ff2 @ sp[(0)+-8]
 16408                           ;stkvar	_ff1 @ sp[(0)+-4]
 16409  0181EC  50E1               	movf	fsr1l,w,c
 16410  0181EE  0FFC               	addlw	-4
 16411  0181F0  6ED9               	movwf	fsr2l,c
 16412  0181F2  50E2               	movf	fsr1h,w,c
 16413  0181F4  6EDA               	movwf	fsr2h,c
 16414  0181F6  0EFF               	movlw	255
 16415  0181F8  22DA               	addwfc	fsr2h,f,c
 16416  0181FA  0EF8               	movlw	-8
 16417  0181FC  50E3               	movf	plusw1,w,c
 16418  0181FE  18DE               	xorwf	postinc2,w,c
 16419  018200  E10D               	bnz	u6390
 16420  018202  0EF9               	movlw	-7
 16421  018204  50E3               	movf	plusw1,w,c
 16422  018206  18DE               	xorwf	postinc2,w,c
 16423  018208  E109               	bnz	u6390
 16424  01820A  0EFA               	movlw	-6
 16425  01820C  50E3               	movf	plusw1,w,c
 16426  01820E  18DE               	xorwf	postinc2,w,c
 16427  018210  E105               	bnz	u6390
 16428  018212  0EFB               	movlw	-5
 16429  018214  50E3               	movf	plusw1,w,c
 16430  018216  18DE               	xorwf	postinc2,w,c
 16431  018218  B4D8               	btfsc	status,2,c
 16432  01821A  D002               	goto	l7782
 16433  01821C                     u6390:
 16434  01821C  9001               	bcf	btemp& (0+255),0,c
 16435  01821E  D001               	goto	l2492
 16436  018220                     l7782:
 16437  018220  8001               	bsf	btemp& (0+255),0,c
 16438  018222                     l2492:
 16439                           
 16440                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16441  018222  0EF8               	movlw	248
 16442  018224  26E1               	addwf	fsr1l,f,c
 16443  018226  0EFF               	movlw	255
 16444  018228  22E2               	addwfc	fsr1h,f,c
 16445  01822A  0012               	return		;funcret
 16446  01822C                     __end_of___fleq:
 16447                           	opt callstack 0
 16448                           
 16449 ;; *************** function ___fldiv *****************
 16450 ;; Defined at:
 16451 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16452 ;; Parameters:    Size  Location     Type
 16453 ;;  b               4  [STACK] long 
 16454 ;;  a               4  [STACK] long 
 16455 ;; Auto vars:     Size  Location     Type
 16456 ;;  grs             4  [STACK] unsigned long 
 16457 ;;  rem             4  [STACK] unsigned long 
 16458 ;;  new_exp         2  [STACK] short 
 16459 ;;  aexp            1  [STACK] unsigned char 
 16460 ;;  bexp            1  [STACK] unsigned char 
 16461 ;;  sign            1  [STACK] unsigned char 
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  4  [STACK] unsigned char 
 16464 ;; Registers used:
 16465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/1
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16475 ;;Total ram usage:        0 bytes
 16476 ;; Hardware stack levels used:    1
 16477 ;; Hardware stack levels required when called:   15
 16478 ;; This function calls:
 16479 ;;		Nothing
 16480 ;; This function is called by:
 16481 ;;		_conv_raw_result
 16482 ;;		_calc_bsoc
 16483 ;;		_init_bsoc
 16484 ;;		_efgtoa
 16485 ;; This function uses a reentrant model
 16486 ;;
 16487                           
 16488                           	psect	text60
 16489  013D52                     __ptext60:
 16490                           	opt callstack 0
 16491  013D52                     ___fldiv:
 16492                           	opt callstack 0
 16493                           
 16494                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16495  013D52  0E0D               	movlw	13
 16496  013D54  26E1               	addwf	fsr1l,f,c
 16497  013D56  0E00               	movlw	0
 16498  013D58  22E2               	addwfc	fsr1h,f,c
 16499                           
 16500                           ;stkvar	_b @ sp[(-13)+-4]
 16501                           
 16502                           ;incstack = 0
 16503 ;; hardware stack exceeded
 16504  013D5A  0EF2               	movlw	242
 16505  013D5C  24E1               	addwf	fsr1l,w,c
 16506  013D5E  6ED9               	movwf	fsr2l,c
 16507  013D60  0EFF               	movlw	255
 16508  013D62  20E2               	addwfc	fsr1h,w,c
 16509  013D64  6EDA               	movwf	fsr2h,c
 16510  013D66  50DF               	movf	indf2,w,c
 16511  013D68  6E0C               	movwf	(btemp+11)^0,c
 16512  013D6A  0E80               	movlw	128
 16513  013D6C  160C               	andwf	(btemp+11)^0,f,c
 16514                           
 16515                           ;stkvar	_sign @ sp[(-13)+12]
 16516  013D6E  0EFF               	movlw	-1
 16517  013D70  0060  F033  FFE3   	movff	btemp+11,plusw1
 16518                           
 16519                           ;stkvar	_b @ sp[(-13)+-4]
 16520  013D76  0EF2               	movlw	242
 16521  013D78  24E1               	addwf	fsr1l,w,c
 16522  013D7A  6ED9               	movwf	fsr2l,c
 16523  013D7C  0EFF               	movlw	255
 16524  013D7E  20E2               	addwfc	fsr1h,w,c
 16525  013D80  6EDA               	movwf	fsr2h,c
 16526  013D82  50DF               	movf	indf2,w,c
 16527  013D84  6E0C               	movwf	(btemp+11)^0,c
 16528  013D86  90D8               	bcf	status,0,c
 16529  013D88  340C               	rlcf	(btemp+11)^0,w,c
 16530  013D8A  6E0B               	movwf	(btemp+10)^0,c
 16531                           
 16532                           ;stkvar	_bexp @ sp[(-13)+11]
 16533  013D8C  0EFE               	movlw	-2
 16534  013D8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16535                           
 16536                           ;stkvar	_b @ sp[(-13)+-4]
 16537  013D94  0EF1               	movlw	241
 16538  013D96  24E1               	addwf	fsr1l,w,c
 16539  013D98  6ED9               	movwf	fsr2l,c
 16540  013D9A  0EFF               	movlw	255
 16541  013D9C  20E2               	addwfc	fsr1h,w,c
 16542  013D9E  6EDA               	movwf	fsr2h,c
 16543  013DA0  AEDF               	btfss	indf2,7,c
 16544  013DA2  D002               	goto	l7376
 16545                           
 16546                           ;stkvar	_bexp @ sp[(-13)+11]
 16547  013DA4  0EFE               	movlw	-2
 16548  013DA6  80E3               	bsf	plusw1,0,c
 16549  013DA8                     l7376:
 16550                           
 16551                           ;stkvar	_bexp @ sp[(-13)+11]
 16552  013DA8  0EFE               	movlw	-2
 16553  013DAA  50E3               	movf	plusw1,w,c
 16554  013DAC  B4D8               	btfsc	status,2,c
 16555  013DAE  D027               	goto	l7386
 16556                           
 16557                           ;stkvar	_bexp @ sp[(-13)+11]
 16558  013DB0  0EFE               	movlw	-2
 16559  013DB2  28E3               	incf	plusw1,w,c
 16560  013DB4  A4D8               	btfss	status,2,c
 16561  013DB6  D018               	goto	l7382
 16562  013DB8  0E00               	movlw	0
 16563  013DBA  6E09               	movwf	(btemp+8)^0,c
 16564  013DBC  0E00               	movlw	0
 16565  013DBE  6E0A               	movwf	(btemp+9)^0,c
 16566  013DC0  0E00               	movlw	0
 16567  013DC2  6E0B               	movwf	(btemp+10)^0,c
 16568  013DC4  0E00               	movlw	0
 16569  013DC6  6E0C               	movwf	(btemp+11)^0,c
 16570                           
 16571                           ;stkvar	_b @ sp[(-13)+-4]
 16572  013DC8  0EEF               	movlw	-17
 16573  013DCA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16574  013DD0  0EF0               	movlw	-16
 16575  013DD2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16576  013DD8  0EF1               	movlw	-15
 16577  013DDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16578  013DE0  0EF2               	movlw	-14
 16579  013DE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16580  013DE8                     l7382:
 16581                           
 16582                           ;stkvar	_b @ sp[(-13)+-4]
 16583  013DE8  0EF1               	movlw	-15
 16584  013DEA  8EE3               	bsf	plusw1,7,c
 16585                           
 16586                           ;stkvar	_b @ sp[(-13)+-4]
 16587  013DEC  0EF2               	movlw	242
 16588  013DEE  24E1               	addwf	fsr1l,w,c
 16589  013DF0  6ED9               	movwf	fsr2l,c
 16590  013DF2  0EFF               	movlw	255
 16591  013DF4  20E2               	addwfc	fsr1h,w,c
 16592  013DF6  6EDA               	movwf	fsr2h,c
 16593  013DF8  0E00               	movlw	0
 16594  013DFA  6EDF               	movwf	indf2,c
 16595  013DFC  D018               	goto	l7388
 16596  013DFE                     l7386:
 16597  013DFE  0E00               	movlw	0
 16598  013E00  6E09               	movwf	(btemp+8)^0,c
 16599  013E02  0E00               	movlw	0
 16600  013E04  6E0A               	movwf	(btemp+9)^0,c
 16601  013E06  0E00               	movlw	0
 16602  013E08  6E0B               	movwf	(btemp+10)^0,c
 16603  013E0A  0E00               	movlw	0
 16604  013E0C  6E0C               	movwf	(btemp+11)^0,c
 16605                           
 16606                           ;stkvar	_b @ sp[(-13)+-4]
 16607  013E0E  0EEF               	movlw	-17
 16608  013E10  0060  F027  FFE3   	movff	btemp+8,plusw1
 16609  013E16  0EF0               	movlw	-16
 16610  013E18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16611  013E1E  0EF1               	movlw	-15
 16612  013E20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16613  013E26  0EF2               	movlw	-14
 16614  013E28  0060  F033  FFE3   	movff	btemp+11,plusw1
 16615  013E2E                     l7388:
 16616                           
 16617                           ;stkvar	_a @ sp[(-13)+-8]
 16618  013E2E  0EEE               	movlw	238
 16619  013E30  24E1               	addwf	fsr1l,w,c
 16620  013E32  6ED9               	movwf	fsr2l,c
 16621  013E34  0EFF               	movlw	255
 16622  013E36  20E2               	addwfc	fsr1h,w,c
 16623  013E38  6EDA               	movwf	fsr2h,c
 16624  013E3A  50DF               	movf	indf2,w,c
 16625  013E3C  6E0C               	movwf	(btemp+11)^0,c
 16626  013E3E  0E80               	movlw	128
 16627  013E40  160C               	andwf	(btemp+11)^0,f,c
 16628                           
 16629                           ;stkvar	_sign @ sp[(-13)+12]
 16630  013E42  50E1               	movf	fsr1l,w,c
 16631  013E44  0FFF               	addlw	-1
 16632  013E46  6ED9               	movwf	fsr2l,c
 16633  013E48  50E2               	movf	fsr1h,w,c
 16634  013E4A  6EDA               	movwf	fsr2h,c
 16635  013E4C  0EFF               	movlw	255
 16636  013E4E  22DA               	addwfc	fsr2h,f,c
 16637  013E50  500C               	movf	(btemp+11)^0,w,c
 16638  013E52  1ADF               	xorwf	indf2,f,c
 16639                           
 16640                           ;stkvar	_a @ sp[(-13)+-8]
 16641  013E54  0EEE               	movlw	238
 16642  013E56  24E1               	addwf	fsr1l,w,c
 16643  013E58  6ED9               	movwf	fsr2l,c
 16644  013E5A  0EFF               	movlw	255
 16645  013E5C  20E2               	addwfc	fsr1h,w,c
 16646  013E5E  6EDA               	movwf	fsr2h,c
 16647  013E60  50DF               	movf	indf2,w,c
 16648  013E62  6E0C               	movwf	(btemp+11)^0,c
 16649  013E64  90D8               	bcf	status,0,c
 16650  013E66  340C               	rlcf	(btemp+11)^0,w,c
 16651  013E68  6E0B               	movwf	(btemp+10)^0,c
 16652                           
 16653                           ;stkvar	_aexp @ sp[(-13)+10]
 16654  013E6A  0EFD               	movlw	-3
 16655  013E6C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16656                           
 16657                           ;stkvar	_a @ sp[(-13)+-8]
 16658  013E72  0EED               	movlw	237
 16659  013E74  24E1               	addwf	fsr1l,w,c
 16660  013E76  6ED9               	movwf	fsr2l,c
 16661  013E78  0EFF               	movlw	255
 16662  013E7A  20E2               	addwfc	fsr1h,w,c
 16663  013E7C  6EDA               	movwf	fsr2h,c
 16664  013E7E  AEDF               	btfss	indf2,7,c
 16665  013E80  D002               	goto	l7396
 16666                           
 16667                           ;stkvar	_aexp @ sp[(-13)+10]
 16668  013E82  0EFD               	movlw	-3
 16669  013E84  80E3               	bsf	plusw1,0,c
 16670  013E86                     l7396:
 16671                           
 16672                           ;stkvar	_aexp @ sp[(-13)+10]
 16673  013E86  0EFD               	movlw	-3
 16674  013E88  50E3               	movf	plusw1,w,c
 16675  013E8A  B4D8               	btfsc	status,2,c
 16676  013E8C  D027               	goto	l7406
 16677                           
 16678                           ;stkvar	_aexp @ sp[(-13)+10]
 16679  013E8E  0EFD               	movlw	-3
 16680  013E90  28E3               	incf	plusw1,w,c
 16681  013E92  A4D8               	btfss	status,2,c
 16682  013E94  D018               	goto	l7402
 16683  013E96  0E00               	movlw	0
 16684  013E98  6E09               	movwf	(btemp+8)^0,c
 16685  013E9A  0E00               	movlw	0
 16686  013E9C  6E0A               	movwf	(btemp+9)^0,c
 16687  013E9E  0E00               	movlw	0
 16688  013EA0  6E0B               	movwf	(btemp+10)^0,c
 16689  013EA2  0E00               	movlw	0
 16690  013EA4  6E0C               	movwf	(btemp+11)^0,c
 16691                           
 16692                           ;stkvar	_a @ sp[(-13)+-8]
 16693  013EA6  0EEB               	movlw	-21
 16694  013EA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 16695  013EAE  0EEC               	movlw	-20
 16696  013EB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16697  013EB6  0EED               	movlw	-19
 16698  013EB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16699  013EBE  0EEE               	movlw	-18
 16700  013EC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16701  013EC6                     l7402:
 16702                           
 16703                           ;stkvar	_a @ sp[(-13)+-8]
 16704  013EC6  0EED               	movlw	-19
 16705  013EC8  8EE3               	bsf	plusw1,7,c
 16706                           
 16707                           ;stkvar	_a @ sp[(-13)+-8]
 16708  013ECA  0EEE               	movlw	238
 16709  013ECC  24E1               	addwf	fsr1l,w,c
 16710  013ECE  6ED9               	movwf	fsr2l,c
 16711  013ED0  0EFF               	movlw	255
 16712  013ED2  20E2               	addwfc	fsr1h,w,c
 16713  013ED4  6EDA               	movwf	fsr2h,c
 16714  013ED6  0E00               	movlw	0
 16715  013ED8  6EDF               	movwf	indf2,c
 16716  013EDA  D018               	goto	l7408
 16717  013EDC                     l7406:
 16718  013EDC  0E00               	movlw	0
 16719  013EDE  6E09               	movwf	(btemp+8)^0,c
 16720  013EE0  0E00               	movlw	0
 16721  013EE2  6E0A               	movwf	(btemp+9)^0,c
 16722  013EE4  0E00               	movlw	0
 16723  013EE6  6E0B               	movwf	(btemp+10)^0,c
 16724  013EE8  0E00               	movlw	0
 16725  013EEA  6E0C               	movwf	(btemp+11)^0,c
 16726                           
 16727                           ;stkvar	_a @ sp[(-13)+-8]
 16728  013EEC  0EEB               	movlw	-21
 16729  013EEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 16730  013EF4  0EEC               	movlw	-20
 16731  013EF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16732  013EFC  0EED               	movlw	-19
 16733  013EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16734  013F04  0EEE               	movlw	-18
 16735  013F06  0060  F033  FFE3   	movff	btemp+11,plusw1
 16736  013F0C                     l7408:
 16737                           
 16738                           ;stkvar	_a @ sp[(-13)+-8]
 16739  013F0C  0EEB               	movlw	-21
 16740  013F0E  50E3               	movf	plusw1,w,c
 16741  013F10  E139               	bnz	l7420
 16742  013F12  0EEC               	movlw	-20
 16743  013F14  50E3               	movf	plusw1,w,c
 16744  013F16  E136               	bnz	l7420
 16745  013F18  0EED               	movlw	-19
 16746  013F1A  50E3               	movf	plusw1,w,c
 16747  013F1C  E133               	bnz	l7420
 16748  013F1E  0EEE               	movlw	-18
 16749  013F20  50E3               	movf	plusw1,w,c
 16750  013F22  A4D8               	btfss	status,2,c
 16751  013F24  D02F               	goto	l7420
 16752                           
 16753                           ;stkvar	_b @ sp[(-13)+-4]
 16754  013F26  0EEF               	movlw	-17
 16755  013F28  6AE3               	clrf	plusw1,c
 16756  013F2A  0EF0               	movlw	-16
 16757  013F2C  6AE3               	clrf	plusw1,c
 16758  013F2E  0EF1               	movlw	-15
 16759  013F30  6AE3               	clrf	plusw1,c
 16760  013F32  0EF2               	movlw	-14
 16761  013F34  6AE3               	clrf	plusw1,c
 16762                           
 16763                           ;stkvar	_b @ sp[(-13)+-4]
 16764  013F36  0EF1               	movlw	241
 16765  013F38  24E1               	addwf	fsr1l,w,c
 16766  013F3A  6ED9               	movwf	fsr2l,c
 16767  013F3C  0EFF               	movlw	255
 16768  013F3E  20E2               	addwfc	fsr1h,w,c
 16769  013F40  6EDA               	movwf	fsr2h,c
 16770  013F42  0E80               	movlw	128
 16771  013F44  12DE               	iorwf	postinc2,f,c
 16772  013F46  0E7F               	movlw	127
 16773  013F48  12DD               	iorwf	postdec2,f,c
 16774  013F4A                     l7414:
 16775                           
 16776                           ;stkvar	_sign @ sp[(-13)+12]
 16777  013F4A  0EFF               	movlw	-1
 16778  013F4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16779                           
 16780                           ;stkvar	_b @ sp[(-13)+-4]
 16781  013F52  0EF2               	movlw	242
 16782  013F54  24E1               	addwf	fsr1l,w,c
 16783  013F56  6ED9               	movwf	fsr2l,c
 16784  013F58  0EFF               	movlw	255
 16785  013F5A  20E2               	addwfc	fsr1h,w,c
 16786  013F5C  6EDA               	movwf	fsr2h,c
 16787  013F5E  500C               	movf	(btemp+11)^0,w,c
 16788  013F60  12DF               	iorwf	indf2,f,c
 16789                           
 16790                           ;stkvar	_b @ sp[(-13)+-4]
 16791  013F62  0EEF               	movlw	-17
 16792  013F64  006F FF8C  F001    	movff	plusw1,btemp
 16793  013F6A  0EF0               	movlw	-16
 16794  013F6C  006F FF8C  F002    	movff	plusw1,btemp+1
 16795  013F72  0EF1               	movlw	-15
 16796  013F74  006F FF8C  F003    	movff	plusw1,btemp+2
 16797  013F7A  0EF2               	movlw	-14
 16798  013F7C  006F FF8C  F004    	movff	plusw1,btemp+3
 16799  013F82  D19F               	goto	l2815
 16800  013F84                     l7420:
 16801                           
 16802                           ;stkvar	_bexp @ sp[(-13)+11]
 16803  013F84  0EFE               	movlw	-2
 16804  013F86  50E3               	movf	plusw1,w,c
 16805  013F88  A4D8               	btfss	status,2,c
 16806  013F8A  D009               	goto	l7428
 16807  013F8C  0E00               	movlw	0
 16808  013F8E  6E01               	movwf	btemp^0,c
 16809  013F90  0E00               	movlw	0
 16810  013F92  6E02               	movwf	(btemp+1)^0,c
 16811  013F94  0E00               	movlw	0
 16812  013F96  6E03               	movwf	(btemp+2)^0,c
 16813  013F98  0E00               	movlw	0
 16814  013F9A  6E04               	movwf	(btemp+3)^0,c
 16815  013F9C  D192               	goto	l2815
 16816  013F9E                     l7428:
 16817                           
 16818                           ;stkvar	_bexp @ sp[(-13)+11]
 16819  013F9E  0EFE               	movlw	-2
 16820  013FA0  50E3               	movf	plusw1,w,c
 16821  013FA2  6E0B               	movwf	(btemp+10)^0,c
 16822  013FA4  6A0C               	clrf	(btemp+11)^0,c
 16823                           
 16824                           ;stkvar	_aexp @ sp[(-13)+10]
 16825  013FA6  0EFD               	movlw	-3
 16826  013FA8  50E3               	movf	plusw1,w,c
 16827  013FAA  5E0B               	subwf	(btemp+10)^0,f,c
 16828  013FAC  0E00               	movlw	0
 16829  013FAE  5A0C               	subwfb	(btemp+11)^0,f,c
 16830  013FB0  0E7F               	movlw	127
 16831  013FB2  260B               	addwf	(btemp+10)^0,f,c
 16832  013FB4  0E00               	movlw	0
 16833  013FB6  220C               	addwfc	(btemp+11)^0,f,c
 16834                           
 16835                           ;stkvar	_new_exp @ sp[(-13)+8]
 16836  013FB8  0EFB               	movlw	-5
 16837  013FBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16838  013FC0  0EFC               	movlw	-4
 16839  013FC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16840                           
 16841                           ;stkvar	_b @ sp[(-13)+-4]
 16842  013FC8  0EEF               	movlw	-17
 16843  013FCA  006F FF8C  F009    	movff	plusw1,btemp+8
 16844  013FD0  0EF0               	movlw	-16
 16845  013FD2  006F FF8C  F00A    	movff	plusw1,btemp+9
 16846  013FD8  0EF1               	movlw	-15
 16847  013FDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16848  013FE0  0EF2               	movlw	-14
 16849  013FE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16850                           
 16851                           ;stkvar	_rem @ sp[(-13)+4]
 16852  013FE8  0EF7               	movlw	-9
 16853  013FEA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16854  013FF0  0EF8               	movlw	-8
 16855  013FF2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16856  013FF8  0EF9               	movlw	-7
 16857  013FFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16858  014000  0EFA               	movlw	-6
 16859  014002  0060  F033  FFE3   	movff	btemp+11,plusw1
 16860                           
 16861                           ;stkvar	_b @ sp[(-13)+-4]
 16862  014008  0EEF               	movlw	-17
 16863  01400A  6AE3               	clrf	plusw1,c
 16864  01400C  0EF0               	movlw	-16
 16865  01400E  6AE3               	clrf	plusw1,c
 16866  014010  0EF1               	movlw	-15
 16867  014012  6AE3               	clrf	plusw1,c
 16868  014014  0EF2               	movlw	-14
 16869  014016  6AE3               	clrf	plusw1,c
 16870                           
 16871                           ;stkvar	_grs @ sp[(-13)+0]
 16872  014018  0EF3               	movlw	-13
 16873  01401A  6AE3               	clrf	plusw1,c
 16874  01401C  0EF4               	movlw	-12
 16875  01401E  6AE3               	clrf	plusw1,c
 16876  014020  0EF5               	movlw	-11
 16877  014022  6AE3               	clrf	plusw1,c
 16878  014024  0EF6               	movlw	-10
 16879  014026  6AE3               	clrf	plusw1,c
 16880                           
 16881                           ;stkvar	_aexp @ sp[(-13)+10]
 16882  014028  0EFD               	movlw	-3
 16883  01402A  6AE3               	clrf	plusw1,c
 16884  01402C  D050               	goto	l7456
 16885  01402E                     l7438:
 16886                           
 16887                           ;stkvar	_aexp @ sp[(-13)+10]
 16888  01402E  0EFD               	movlw	-3
 16889  014030  50E3               	movf	plusw1,w,c
 16890  014032  B4D8               	btfsc	status,2,c
 16891  014034  D020               	goto	l7448
 16892                           
 16893                           ;stkvar	_rem @ sp[(-13)+4]
 16894  014036  90D8               	bcf	status,0,c
 16895  014038  0EF7               	movlw	-9
 16896  01403A  36E3               	rlcf	plusw1,f,c
 16897  01403C  0EF8               	movlw	-8
 16898  01403E  36E3               	rlcf	plusw1,f,c
 16899  014040  0EF9               	movlw	-7
 16900  014042  36E3               	rlcf	plusw1,f,c
 16901  014044  0EFA               	movlw	-6
 16902  014046  36E3               	rlcf	plusw1,f,c
 16903                           
 16904                           ;stkvar	_b @ sp[(-13)+-4]
 16905  014048  90D8               	bcf	status,0,c
 16906  01404A  0EEF               	movlw	-17
 16907  01404C  36E3               	rlcf	plusw1,f,c
 16908  01404E  0EF0               	movlw	-16
 16909  014050  36E3               	rlcf	plusw1,f,c
 16910  014052  0EF1               	movlw	-15
 16911  014054  36E3               	rlcf	plusw1,f,c
 16912  014056  0EF2               	movlw	-14
 16913  014058  36E3               	rlcf	plusw1,f,c
 16914                           
 16915                           ;stkvar	_grs @ sp[(-13)+0]
 16916  01405A  0EF6               	movlw	-10
 16917  01405C  AEE3               	btfss	plusw1,7,c
 16918  01405E  D002               	goto	l7446
 16919                           
 16920                           ;stkvar	_b @ sp[(-13)+-4]
 16921  014060  0EEF               	movlw	-17
 16922  014062  80E3               	bsf	plusw1,0,c
 16923  014064                     l7446:
 16924                           
 16925                           ;stkvar	_grs @ sp[(-13)+0]
 16926  014064  90D8               	bcf	status,0,c
 16927  014066  0EF3               	movlw	-13
 16928  014068  36E3               	rlcf	plusw1,f,c
 16929  01406A  0EF4               	movlw	-12
 16930  01406C  36E3               	rlcf	plusw1,f,c
 16931  01406E  0EF5               	movlw	-11
 16932  014070  36E3               	rlcf	plusw1,f,c
 16933  014072  0EF6               	movlw	-10
 16934  014074  36E3               	rlcf	plusw1,f,c
 16935  014076                     l7448:
 16936                           
 16937                           ;stkvar	_a @ sp[(-13)+-8]
 16938                           ;stkvar	_rem @ sp[(-13)+4]
 16939  014076  50E1               	movf	fsr1l,w,c
 16940  014078  0FF7               	addlw	-9
 16941  01407A  6ED9               	movwf	fsr2l,c
 16942  01407C  50E2               	movf	fsr1h,w,c
 16943  01407E  6EDA               	movwf	fsr2h,c
 16944  014080  0EFF               	movlw	255
 16945  014082  22DA               	addwfc	fsr2h,f,c
 16946  014084  0EEB               	movlw	-21
 16947  014086  50E3               	movf	plusw1,w,c
 16948  014088  5CDE               	subwf	postinc2,w,c
 16949  01408A  0EEC               	movlw	-20
 16950  01408C  50E3               	movf	plusw1,w,c
 16951  01408E  58DE               	subwfb	postinc2,w,c
 16952  014090  0EED               	movlw	-19
 16953  014092  50E3               	movf	plusw1,w,c
 16954  014094  58DE               	subwfb	postinc2,w,c
 16955  014096  0EEE               	movlw	-18
 16956  014098  50E3               	movf	plusw1,w,c
 16957  01409A  58DE               	subwfb	postinc2,w,c
 16958  01409C  A0D8               	btfss	status,0,c
 16959  01409E  D015               	goto	l7454
 16960                           
 16961                           ;stkvar	_grs @ sp[(-13)+0]
 16962  0140A0  0EF6               	movlw	-10
 16963  0140A2  8CE3               	bsf	plusw1,6,c
 16964                           
 16965                           ;stkvar	_a @ sp[(-13)+-8]
 16966                           ;stkvar	_rem @ sp[(-13)+4]
 16967  0140A4  50E1               	movf	fsr1l,w,c
 16968  0140A6  0FF7               	addlw	-9
 16969  0140A8  6ED9               	movwf	fsr2l,c
 16970  0140AA  50E2               	movf	fsr1h,w,c
 16971  0140AC  6EDA               	movwf	fsr2h,c
 16972  0140AE  0EFF               	movlw	255
 16973  0140B0  22DA               	addwfc	fsr2h,f,c
 16974  0140B2  0EEB               	movlw	-21
 16975  0140B4  50E3               	movf	plusw1,w,c
 16976  0140B6  5EDE               	subwf	postinc2,f,c
 16977  0140B8  0EEC               	movlw	-20
 16978  0140BA  50E3               	movf	plusw1,w,c
 16979  0140BC  5ADE               	subwfb	postinc2,f,c
 16980  0140BE  0EED               	movlw	-19
 16981  0140C0  50E3               	movf	plusw1,w,c
 16982  0140C2  5ADE               	subwfb	postinc2,f,c
 16983  0140C4  0EEE               	movlw	-18
 16984  0140C6  50E3               	movf	plusw1,w,c
 16985  0140C8  5ADE               	subwfb	postinc2,f,c
 16986  0140CA                     l7454:
 16987                           
 16988                           ;stkvar	_aexp @ sp[(-13)+10]
 16989  0140CA  0EFD               	movlw	-3
 16990  0140CC  2AE3               	incf	plusw1,f,c
 16991  0140CE                     l7456:
 16992                           
 16993                           ;stkvar	_aexp @ sp[(-13)+10]
 16994  0140CE  0EFD               	movlw	-3
 16995  0140D0  006F FF8C  F001    	movff	plusw1,btemp
 16996  0140D6  0E19               	movlw	25
 16997  0140D8  6401               	cpfsgt	btemp^0,c
 16998  0140DA  D7A9               	goto	l7438
 16999                           
 17000                           ;stkvar	_rem @ sp[(-13)+4]
 17001  0140DC  0EF7               	movlw	-9
 17002  0140DE  50E3               	movf	plusw1,w,c
 17003  0140E0  E10A               	bnz	u5890
 17004  0140E2  0EF8               	movlw	-8
 17005  0140E4  50E3               	movf	plusw1,w,c
 17006  0140E6  E107               	bnz	u5890
 17007  0140E8  0EF9               	movlw	-7
 17008  0140EA  50E3               	movf	plusw1,w,c
 17009  0140EC  E104               	bnz	u5890
 17010  0140EE  0EFA               	movlw	-6
 17011  0140F0  50E3               	movf	plusw1,w,c
 17012  0140F2  B4D8               	btfsc	status,2,c
 17013  0140F4  D024               	goto	l7472
 17014  0140F6                     u5890:
 17015                           
 17016                           ;stkvar	_grs @ sp[(-13)+0]
 17017  0140F6  0EF3               	movlw	-13
 17018  0140F8  80E3               	bsf	plusw1,0,c
 17019  0140FA  D021               	goto	l7472
 17020  0140FC                     l7462:
 17021                           
 17022                           ;stkvar	_b @ sp[(-13)+-4]
 17023  0140FC  90D8               	bcf	status,0,c
 17024  0140FE  0EEF               	movlw	-17
 17025  014100  36E3               	rlcf	plusw1,f,c
 17026  014102  0EF0               	movlw	-16
 17027  014104  36E3               	rlcf	plusw1,f,c
 17028  014106  0EF1               	movlw	-15
 17029  014108  36E3               	rlcf	plusw1,f,c
 17030  01410A  0EF2               	movlw	-14
 17031  01410C  36E3               	rlcf	plusw1,f,c
 17032                           
 17033                           ;stkvar	_grs @ sp[(-13)+0]
 17034  01410E  0EF6               	movlw	-10
 17035  014110  AEE3               	btfss	plusw1,7,c
 17036  014112  D002               	goto	l7468
 17037                           
 17038                           ;stkvar	_b @ sp[(-13)+-4]
 17039  014114  0EEF               	movlw	-17
 17040  014116  80E3               	bsf	plusw1,0,c
 17041  014118                     l7468:
 17042                           
 17043                           ;stkvar	_grs @ sp[(-13)+0]
 17044  014118  90D8               	bcf	status,0,c
 17045  01411A  0EF3               	movlw	-13
 17046  01411C  36E3               	rlcf	plusw1,f,c
 17047  01411E  0EF4               	movlw	-12
 17048  014120  36E3               	rlcf	plusw1,f,c
 17049  014122  0EF5               	movlw	-11
 17050  014124  36E3               	rlcf	plusw1,f,c
 17051  014126  0EF6               	movlw	-10
 17052  014128  36E3               	rlcf	plusw1,f,c
 17053                           
 17054                           ;stkvar	_new_exp @ sp[(-13)+8]
 17055  01412A  50E1               	movf	fsr1l,w,c
 17056  01412C  0FFB               	addlw	-5
 17057  01412E  6ED9               	movwf	fsr2l,c
 17058  014130  50E2               	movf	fsr1h,w,c
 17059  014132  6EDA               	movwf	fsr2h,c
 17060  014134  0EFF               	movlw	255
 17061  014136  22DA               	addwfc	fsr2h,f,c
 17062  014138  06DE               	decf	postinc2,f,c
 17063  01413A  0E00               	movlw	0
 17064  01413C  5ADD               	subwfb	postdec2,f,c
 17065  01413E                     l7472:
 17066                           
 17067                           ;stkvar	_b @ sp[(-13)+-4]
 17068  01413E  0EF1               	movlw	-15
 17069  014140  AEE3               	btfss	plusw1,7,c
 17070  014142  D7DC               	goto	l7462
 17071                           
 17072                           ;stkvar	_aexp @ sp[(-13)+10]
 17073  014144  0EFD               	movlw	-3
 17074  014146  6AE3               	clrf	plusw1,c
 17075                           
 17076                           ;stkvar	_grs @ sp[(-13)+0]
 17077  014148  0EF6               	movlw	-10
 17078  01414A  AEE3               	btfss	plusw1,7,c
 17079  01414C  D020               	goto	l7486
 17080                           
 17081                           ;stkvar	_grs @ sp[(-13)+0]
 17082  01414E  50E1               	movf	fsr1l,w,c
 17083  014150  0FF3               	addlw	-13
 17084  014152  6ED9               	movwf	fsr2l,c
 17085  014154  50E2               	movf	fsr1h,w,c
 17086  014156  6EDA               	movwf	fsr2h,c
 17087  014158  0EFF               	movlw	255
 17088  01415A  22DA               	addwfc	fsr2h,f,c
 17089  01415C  0EFF               	movlw	255
 17090  01415E  14DE               	andwf	postinc2,w,c
 17091  014160  6E09               	movwf	(btemp+8)^0,c
 17092  014162  0EFF               	movlw	255
 17093  014164  14DE               	andwf	postinc2,w,c
 17094  014166  6E0A               	movwf	(btemp+9)^0,c
 17095  014168  0EFF               	movlw	255
 17096  01416A  14DE               	andwf	postinc2,w,c
 17097  01416C  6E0B               	movwf	(btemp+10)^0,c
 17098  01416E  0E7F               	movlw	127
 17099  014170  14DE               	andwf	postinc2,w,c
 17100  014172  6E0C               	movwf	(btemp+11)^0,c
 17101  014174  5009               	movf	(btemp+8)^0,w,c
 17102  014176  100A               	iorwf	(btemp+9)^0,w,c
 17103  014178  100B               	iorwf	(btemp+10)^0,w,c
 17104  01417A  100C               	iorwf	(btemp+11)^0,w,c
 17105  01417C  B4D8               	btfsc	status,2,c
 17106  01417E  D004               	goto	l7482
 17107  014180                     u5930:
 17108                           
 17109                           ;stkvar	_aexp @ sp[(-13)+10]
 17110  014180  0EFD               	movlw	-3
 17111  014182  6AE3               	clrf	plusw1,c
 17112  014184  2AE3               	incf	plusw1,f,c
 17113  014186  D003               	goto	l7486
 17114  014188                     l7482:
 17115                           
 17116                           ;stkvar	_b @ sp[(-13)+-4]
 17117  014188  0EEF               	movlw	-17
 17118  01418A  B0E3               	btfsc	plusw1,0,c
 17119  01418C  D7F9               	goto	u5930
 17120  01418E                     l7486:
 17121                           
 17122                           ;stkvar	_aexp @ sp[(-13)+10]
 17123  01418E  0EFD               	movlw	-3
 17124  014190  50E3               	movf	plusw1,w,c
 17125  014192  B4D8               	btfsc	status,2,c
 17126  014194  D036               	goto	l7496
 17127                           
 17128                           ;stkvar	_b @ sp[(-13)+-4]
 17129  014196  50E1               	movf	fsr1l,w,c
 17130  014198  0FEF               	addlw	-17
 17131  01419A  6ED9               	movwf	fsr2l,c
 17132  01419C  50E2               	movf	fsr1h,w,c
 17133  01419E  6EDA               	movwf	fsr2h,c
 17134  0141A0  0EFF               	movlw	255
 17135  0141A2  22DA               	addwfc	fsr2h,f,c
 17136  0141A4  2ADE               	incf	postinc2,f,c
 17137  0141A6  0E00               	movlw	0
 17138  0141A8  22DE               	addwfc	postinc2,f,c
 17139  0141AA  22DE               	addwfc	postinc2,f,c
 17140  0141AC  22DE               	addwfc	postinc2,f,c
 17141                           
 17142                           ;stkvar	_b @ sp[(-13)+-4]
 17143  0141AE  0EF2               	movlw	-14
 17144  0141B0  A0E3               	btfss	plusw1,0,c
 17145  0141B2  D027               	goto	l7496
 17146  0141B4  0E01               	movlw	1
 17147  0141B6  6E0C               	movwf	(btemp+11)^0,c
 17148                           
 17149                           ;stkvar	_b @ sp[(-13)+-4]
 17150  0141B8  50E1               	movf	fsr1l,w,c
 17151  0141BA  0FEF               	addlw	-17
 17152  0141BC  6ED9               	movwf	fsr2l,c
 17153  0141BE  50E2               	movf	fsr1h,w,c
 17154  0141C0  6EDA               	movwf	fsr2h,c
 17155  0141C2  0EFF               	movlw	255
 17156  0141C4  22DA               	addwfc	fsr2h,f,c
 17157  0141C6  280C               	incf	(btemp+11)^0,w,c
 17158  0141C8  52DE               	movf	postinc2,f,c
 17159  0141CA  D008               	goto	u5970
 17160  0141CC                     u5975:
 17161  0141CC  52DE               	movf	postinc2,f,c
 17162  0141CE  90D8               	bcf	status,0,c
 17163  0141D0  BEDC               	btfsc	preinc2,7,c
 17164  0141D2  80D8               	bsf	status,0,c
 17165  0141D4  32DD               	rrcf	postdec2,f,c
 17166  0141D6  32DD               	rrcf	postdec2,f,c
 17167  0141D8  32DD               	rrcf	postdec2,f,c
 17168  0141DA  32DE               	rrcf	postinc2,f,c
 17169  0141DC                     u5970:
 17170  0141DC  2EE8               	decfsz	wreg,f,c
 17171  0141DE  D7F6               	goto	u5975
 17172                           
 17173                           ;stkvar	_new_exp @ sp[(-13)+8]
 17174  0141E0  0EFB               	movlw	-5
 17175  0141E2  50E3               	movf	plusw1,w,c
 17176  0141E4  0F01               	addlw	1
 17177  0141E6  6E01               	movwf	btemp^0,c
 17178  0141E8  0EFB               	movlw	-5
 17179  0141EA  0060  F007  FFE3   	movff	btemp,plusw1
 17180  0141F0  6A01               	clrf	btemp^0,c
 17181  0141F2  0EFC               	movlw	-4
 17182  0141F4  50E3               	movf	plusw1,w,c
 17183  0141F6  2001               	addwfc	btemp^0,w,c
 17184  0141F8  6E01               	movwf	btemp^0,c
 17185  0141FA  0EFC               	movlw	-4
 17186  0141FC  0060  F007  FFE3   	movff	btemp,plusw1
 17187  014202                     l7496:
 17188                           
 17189                           ;stkvar	_new_exp @ sp[(-13)+8]
 17190  014202  0EFC               	movlw	-4
 17191  014204  BEE3               	btfsc	plusw1,7,c
 17192  014206  D01B               	goto	l7502
 17193  014208  0EFC               	movlw	-4
 17194  01420A  50E3               	movf	plusw1,w,c
 17195  01420C  E104               	bnz	u5980
 17196  01420E  0EFB               	movlw	-5
 17197  014210  28E3               	incf	plusw1,w,c
 17198  014212  A0D8               	btfss	status,0,c
 17199  014214  D014               	goto	l7502
 17200  014216                     u5980:
 17201  014216  0EFF               	movlw	255
 17202  014218  6E0B               	movwf	(btemp+10)^0,c
 17203  01421A  0E00               	movlw	0
 17204  01421C  6E0C               	movwf	(btemp+11)^0,c
 17205                           
 17206                           ;stkvar	_new_exp @ sp[(-13)+8]
 17207  01421E  0EFB               	movlw	-5
 17208  014220  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17209  014226  0EFC               	movlw	-4
 17210  014228  0060  F033  FFE3   	movff	btemp+11,plusw1
 17211                           
 17212                           ;stkvar	_b @ sp[(-13)+-4]
 17213  01422E  0EEF               	movlw	-17
 17214  014230  6AE3               	clrf	plusw1,c
 17215  014232  0EF0               	movlw	-16
 17216  014234  6AE3               	clrf	plusw1,c
 17217  014236  0EF1               	movlw	-15
 17218  014238  6AE3               	clrf	plusw1,c
 17219  01423A  0EF2               	movlw	-14
 17220  01423C  6AE3               	clrf	plusw1,c
 17221  01423E                     l7502:
 17222                           
 17223                           ;stkvar	_new_exp @ sp[(-13)+8]
 17224  01423E  0EFC               	movlw	-4
 17225  014240  BEE3               	btfsc	plusw1,7,c
 17226  014242  D007               	goto	u5990
 17227  014244  0EFC               	movlw	-4
 17228  014246  50E3               	movf	plusw1,w,c
 17229  014248  E112               	bnz	l7508
 17230  01424A  0EFB               	movlw	-5
 17231  01424C  04E3               	decf	plusw1,w,c
 17232  01424E  B0D8               	btfsc	status,0,c
 17233  014250  D00E               	goto	l7508
 17234  014252                     u5990:
 17235                           
 17236                           ;stkvar	_new_exp @ sp[(-13)+8]
 17237  014252  0EFB               	movlw	-5
 17238  014254  6AE3               	clrf	plusw1,c
 17239  014256  0EFC               	movlw	-4
 17240  014258  6AE3               	clrf	plusw1,c
 17241                           
 17242                           ;stkvar	_b @ sp[(-13)+-4]
 17243  01425A  0EEF               	movlw	-17
 17244  01425C  6AE3               	clrf	plusw1,c
 17245  01425E  0EF0               	movlw	-16
 17246  014260  6AE3               	clrf	plusw1,c
 17247  014262  0EF1               	movlw	-15
 17248  014264  6AE3               	clrf	plusw1,c
 17249  014266  0EF2               	movlw	-14
 17250  014268  6AE3               	clrf	plusw1,c
 17251                           
 17252                           ;stkvar	_sign @ sp[(-13)+12]
 17253  01426A  0EFF               	movlw	-1
 17254  01426C  6AE3               	clrf	plusw1,c
 17255  01426E                     l7508:
 17256                           
 17257                           ;stkvar	_new_exp @ sp[(-13)+8]
 17258                           ;stkvar	_bexp @ sp[(-13)+11]
 17259  01426E  0EFB               	movlw	-5
 17260  014270  006F FF8C  F001    	movff	plusw1,btemp
 17261  014276  0EFE               	movlw	-2
 17262  014278  0060  F007  FFE3   	movff	btemp,plusw1
 17263                           
 17264                           ;stkvar	_bexp @ sp[(-13)+11]
 17265  01427E  0EFE               	movlw	-2
 17266  014280  A0E3               	btfss	plusw1,0,c
 17267  014282  D009               	goto	l7514
 17268                           
 17269                           ;stkvar	_b @ sp[(-13)+-4]
 17270  014284  0EF1               	movlw	241
 17271  014286  24E1               	addwf	fsr1l,w,c
 17272  014288  6ED9               	movwf	fsr2l,c
 17273  01428A  0EFF               	movlw	255
 17274  01428C  20E2               	addwfc	fsr1h,w,c
 17275  01428E  6EDA               	movwf	fsr2h,c
 17276  014290  0E00               	movlw	0
 17277  014292  8EDB               	bsf	plusw2,7,c
 17278  014294  D008               	goto	l7516
 17279  014296                     l7514:
 17280                           
 17281                           ;stkvar	_b @ sp[(-13)+-4]
 17282  014296  0EF1               	movlw	241
 17283  014298  24E1               	addwf	fsr1l,w,c
 17284  01429A  6ED9               	movwf	fsr2l,c
 17285  01429C  0EFF               	movlw	255
 17286  01429E  20E2               	addwfc	fsr1h,w,c
 17287  0142A0  6EDA               	movwf	fsr2h,c
 17288  0142A2  0E7F               	movlw	127
 17289  0142A4  16DF               	andwf	indf2,f,c
 17290  0142A6                     l7516:
 17291                           
 17292                           ;stkvar	_b @ sp[(-13)+-4]
 17293  0142A6  0EF2               	movlw	242
 17294  0142A8  24E1               	addwf	fsr1l,w,c
 17295  0142AA  6ED9               	movwf	fsr2l,c
 17296  0142AC  0EFF               	movlw	255
 17297  0142AE  20E2               	addwfc	fsr1h,w,c
 17298  0142B0  6EDA               	movwf	fsr2h,c
 17299                           
 17300                           ;stkvar	_bexp @ sp[(-13)+11]
 17301  0142B2  0EFE               	movlw	-2
 17302  0142B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17303  0142BA  90D8               	bcf	status,0,c
 17304  0142BC  300C               	rrcf	(btemp+11)^0,w,c
 17305  0142BE  6EDF               	movwf	indf2,c
 17306  0142C0  D644               	goto	l7414
 17307  0142C2                     l2815:
 17308                           
 17309                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17310  0142C2  0EEB               	movlw	235
 17311  0142C4  26E1               	addwf	fsr1l,f,c
 17312  0142C6  0EFF               	movlw	255
 17313  0142C8  22E2               	addwfc	fsr1h,f,c
 17314  0142CA  0012               	return		;funcret
 17315  0142CC                     __end_of___fldiv:
 17316                           	opt callstack 0
 17317                           
 17318 ;; *************** function ___awmod *****************
 17319 ;; Defined at:
 17320 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17321 ;; Parameters:    Size  Location     Type
 17322 ;;  dividend        2  [STACK] int 
 17323 ;;  divisor         2  [STACK] int 
 17324 ;; Auto vars:     Size  Location     Type
 17325 ;;  sign            1  [STACK] unsigned char 
 17326 ;;  counter         1  [STACK] unsigned char 
 17327 ;; Return value:  Size  Location     Type
 17328 ;;                  2  [STACK] int 
 17329 ;; Registers used:
 17330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17331 ;; Tracked objects:
 17332 ;;		On entry : 0/0
 17333 ;;		On exit  : 0/0
 17334 ;;		Unchanged: 0/0
 17335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17340 ;;Total ram usage:        0 bytes
 17341 ;; Hardware stack levels used:    1
 17342 ;; Hardware stack levels required when called:   15
 17343 ;; This function calls:
 17344 ;;		Nothing
 17345 ;; This function is called by:
 17346 ;;		_efgtoa
 17347 ;; This function uses a reentrant model
 17348 ;;
 17349                           
 17350                           	psect	text61
 17351  01787A                     __ptext61:
 17352                           	opt callstack 0
 17353  01787A                     ___awmod:
 17354                           	opt callstack 0
 17355                           
 17356                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17357  01787A  52E6               	movf	postinc1,f,c
 17358  01787C  52E6               	movf	postinc1,f,c
 17359                           
 17360                           ;stkvar	_sign @ sp[(-2)+0]
 17361                           
 17362                           ;incstack = 0
 17363 ;; hardware stack exceeded
 17364  01787E  0EFE               	movlw	-2
 17365  017880  6AE3               	clrf	plusw1,c
 17366                           
 17367                           ;stkvar	_dividend @ sp[(-2)+-2]
 17368  017882  0EFD               	movlw	-3
 17369  017884  AEE3               	btfss	plusw1,7,c
 17370  017886  D009               	goto	l7740
 17371                           
 17372                           ;stkvar	_dividend @ sp[(-2)+-2]
 17373                           ;stkvar	_dividend @ sp[(-2)+-2]
 17374  017888  0EFC               	movlw	-4
 17375  01788A  6CE3               	negf	plusw1,c
 17376  01788C  0EFD               	movlw	-3
 17377  01788E  1EE3               	comf	plusw1,f,c
 17378  017890  B0D8               	btfsc	status,0,c
 17379  017892  2AE3               	incf	plusw1,f,c
 17380                           
 17381                           ;stkvar	_sign @ sp[(-2)+0]
 17382  017894  0EFE               	movlw	-2
 17383  017896  6AE3               	clrf	plusw1,c
 17384  017898  2AE3               	incf	plusw1,f,c
 17385  01789A                     l7740:
 17386                           
 17387                           ;stkvar	_divisor @ sp[(-2)+-4]
 17388  01789A  0EFB               	movlw	-5
 17389  01789C  AEE3               	btfss	plusw1,7,c
 17390  01789E  D006               	goto	l7744
 17391                           
 17392                           ;stkvar	_divisor @ sp[(-2)+-4]
 17393                           ;stkvar	_divisor @ sp[(-2)+-4]
 17394  0178A0  0EFA               	movlw	-6
 17395  0178A2  6CE3               	negf	plusw1,c
 17396  0178A4  0EFB               	movlw	-5
 17397  0178A6  1EE3               	comf	plusw1,f,c
 17398  0178A8  B0D8               	btfsc	status,0,c
 17399  0178AA  2AE3               	incf	plusw1,f,c
 17400  0178AC                     l7744:
 17401                           
 17402                           ;stkvar	_divisor @ sp[(-2)+-4]
 17403  0178AC  0EFA               	movlw	-6
 17404  0178AE  006F FF8C  F001    	movff	plusw1,btemp
 17405  0178B4  0EFB               	movlw	-5
 17406  0178B6  50E3               	movf	plusw1,w,c
 17407  0178B8  1001               	iorwf	btemp^0,w,c
 17408  0178BA  B4D8               	btfsc	status,2,c
 17409  0178BC  D053               	goto	u6350
 17410                           
 17411                           ;stkvar	_counter @ sp[(-2)+1]
 17412  0178BE  0EFF               	movlw	-1
 17413  0178C0  6AE3               	clrf	plusw1,c
 17414  0178C2  D012               	goto	L15
 17415  0178C4                     l7748:
 17416                           
 17417                           ;stkvar	_divisor @ sp[(-2)+-4]
 17418  0178C4  0EFA               	movlw	-6
 17419  0178C6  50E3               	movf	plusw1,w,c
 17420  0178C8  90D8               	bcf	status,0,c
 17421  0178CA  34E8               	rlcf	wreg,w,c
 17422  0178CC  6E01               	movwf	btemp^0,c
 17423  0178CE  0EFA               	movlw	-6
 17424  0178D0  0060  F007  FFE3   	movff	btemp,plusw1
 17425  0178D6  0EFB               	movlw	-5
 17426  0178D8  50E3               	movf	plusw1,w,c
 17427  0178DA  34E8               	rlcf	wreg,w,c
 17428  0178DC  6E01               	movwf	btemp^0,c
 17429  0178DE  0EFB               	movlw	-5
 17430  0178E0  0060  F007  FFE3   	movff	btemp,plusw1
 17431                           
 17432                           ;stkvar	_counter @ sp[(-2)+1]
 17433  0178E6  0EFF               	movlw	-1
 17434  0178E8                     L15:
 17435  0178E8  2AE3               	incf	plusw1,f,c
 17436                           
 17437                           ;stkvar	_divisor @ sp[(-2)+-4]
 17438  0178EA  0EFB               	movlw	-5
 17439  0178EC  AEE3               	btfss	plusw1,7,c
 17440  0178EE  D7EA               	goto	l7748
 17441  0178F0                     u6330:
 17442                           
 17443                           ;stkvar	_divisor @ sp[(-2)+-4]
 17444  0178F0  0EFA               	movlw	-6
 17445  0178F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17446  0178F8  0EFB               	movlw	-5
 17447  0178FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17448                           
 17449                           ;stkvar	_dividend @ sp[(-2)+-2]
 17450  017900  0EFC               	movlw	-4
 17451  017902  006F FF8C  F009    	movff	plusw1,btemp+8
 17452  017908  0EFD               	movlw	-3
 17453  01790A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17454  017910  500B               	movf	(btemp+10)^0,w,c
 17455  017912  5C09               	subwf	(btemp+8)^0,w,c
 17456  017914  500C               	movf	(btemp+11)^0,w,c
 17457  017916  580A               	subwfb	(btemp+9)^0,w,c
 17458  017918  A0D8               	btfss	status,0,c
 17459  01791A  D014               	goto	l7758
 17460                           
 17461                           ;stkvar	_divisor @ sp[(-2)+-4]
 17462                           ;stkvar	_dividend @ sp[(-2)+-2]
 17463  01791C  0EFC               	movlw	-4
 17464  01791E  50E3               	movf	plusw1,w,c
 17465  017920  6E01               	movwf	btemp^0,c
 17466  017922  0EFA               	movlw	-6
 17467  017924  50E3               	movf	plusw1,w,c
 17468  017926  5E01               	subwf	btemp^0,f,c
 17469  017928  0EFC               	movlw	-4
 17470  01792A  0060  F007  FFE3   	movff	btemp,plusw1
 17471  017930  0EFD               	movlw	-3
 17472  017932  50E3               	movf	plusw1,w,c
 17473  017934  6E01               	movwf	btemp^0,c
 17474  017936  0EFB               	movlw	-5
 17475  017938  50E3               	movf	plusw1,w,c
 17476  01793A  5A01               	subwfb	btemp^0,f,c
 17477  01793C  0EFD               	movlw	-3
 17478  01793E  0060  F007  FFE3   	movff	btemp,plusw1
 17479  017944                     l7758:
 17480                           
 17481                           ;stkvar	_divisor @ sp[(-2)+-4]
 17482  017944  90D8               	bcf	status,0,c
 17483  017946  0EFB               	movlw	-5
 17484  017948  32E3               	rrcf	plusw1,f,c
 17485  01794A  0EFA               	movlw	-6
 17486  01794C  32E3               	rrcf	plusw1,f,c
 17487                           
 17488                           ;stkvar	_counter @ sp[(-2)+1]
 17489  01794E  0EFF               	movlw	-1
 17490  017950  50E3               	movf	plusw1,w,c
 17491  017952  6E01               	movwf	btemp^0,c
 17492  017954  0E01               	movlw	1
 17493  017956  5E01               	subwf	btemp^0,f,c
 17494  017958  0EFF               	movlw	-1
 17495  01795A  0060  F007  FFE3   	movff	btemp,plusw1
 17496  017960  A4D8               	btfss	status,2,c
 17497  017962  D7C6               	goto	u6330
 17498  017964                     u6350:
 17499                           
 17500                           ;stkvar	_sign @ sp[(-2)+0]
 17501  017964  0EFE               	movlw	-2
 17502  017966  50E3               	movf	plusw1,w,c
 17503  017968  B4D8               	btfsc	status,2,c
 17504  01796A  D006               	goto	l7766
 17505                           
 17506                           ;stkvar	_dividend @ sp[(-2)+-2]
 17507                           ;stkvar	_dividend @ sp[(-2)+-2]
 17508  01796C  0EFC               	movlw	-4
 17509  01796E  6CE3               	negf	plusw1,c
 17510  017970  0EFD               	movlw	-3
 17511  017972  1EE3               	comf	plusw1,f,c
 17512  017974  B0D8               	btfsc	status,0,c
 17513  017976  2AE3               	incf	plusw1,f,c
 17514  017978                     l7766:
 17515                           
 17516                           ;stkvar	_dividend @ sp[(-2)+-2]
 17517  017978  0EFC               	movlw	-4
 17518  01797A  006F FF8C  F001    	movff	plusw1,btemp
 17519  017980  0EFD               	movlw	-3
 17520  017982  006F FF8C  F002    	movff	plusw1,btemp+1
 17521                           
 17522                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17523  017988  0EFA               	movlw	250
 17524  01798A  26E1               	addwf	fsr1l,f,c
 17525  01798C  0EFF               	movlw	255
 17526  01798E  22E2               	addwfc	fsr1h,f,c
 17527  017990  0012               	return		;funcret
 17528  017992                     __end_of___awmod:
 17529                           	opt callstack 0
 17530                           
 17531 ;; *************** function ___awdiv *****************
 17532 ;; Defined at:
 17533 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;  dividend        2  [STACK] int 
 17536 ;;  divisor         2  [STACK] int 
 17537 ;; Auto vars:     Size  Location     Type
 17538 ;;  quotient        2  [STACK] int 
 17539 ;;  sign            1  [STACK] unsigned char 
 17540 ;;  counter         1  [STACK] unsigned char 
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  2  [STACK] int 
 17543 ;; Registers used:
 17544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;Total ram usage:        0 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:   15
 17557 ;; This function calls:
 17558 ;;		Nothing
 17559 ;; This function is called by:
 17560 ;;		_efgtoa
 17561 ;; This function uses a reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text62
 17565  0173B2                     __ptext62:
 17566                           	opt callstack 0
 17567  0173B2                     ___awdiv:
 17568                           	opt callstack 0
 17569                           
 17570                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17571  0173B2  52E6               	movf	postinc1,f,c
 17572  0173B4  52E6               	movf	postinc1,f,c
 17573  0173B6  52E6               	movf	postinc1,f,c
 17574  0173B8  52E6               	movf	postinc1,f,c
 17575                           
 17576                           ;stkvar	_sign @ sp[(-4)+2]
 17577                           
 17578                           ;incstack = 0
 17579 ;; hardware stack exceeded
 17580  0173BA  0EFE               	movlw	-2
 17581  0173BC  6AE3               	clrf	plusw1,c
 17582                           
 17583                           ;stkvar	_divisor @ sp[(-4)+-4]
 17584  0173BE  0EF9               	movlw	-7
 17585  0173C0  AEE3               	btfss	plusw1,7,c
 17586  0173C2  D009               	goto	l7694
 17587                           
 17588                           ;stkvar	_divisor @ sp[(-4)+-4]
 17589                           ;stkvar	_divisor @ sp[(-4)+-4]
 17590  0173C4  0EF8               	movlw	-8
 17591  0173C6  6CE3               	negf	plusw1,c
 17592  0173C8  0EF9               	movlw	-7
 17593  0173CA  1EE3               	comf	plusw1,f,c
 17594  0173CC  B0D8               	btfsc	status,0,c
 17595  0173CE  2AE3               	incf	plusw1,f,c
 17596                           
 17597                           ;stkvar	_sign @ sp[(-4)+2]
 17598  0173D0  0EFE               	movlw	-2
 17599  0173D2  6AE3               	clrf	plusw1,c
 17600  0173D4  2AE3               	incf	plusw1,f,c
 17601  0173D6                     l7694:
 17602                           
 17603                           ;stkvar	_dividend @ sp[(-4)+-2]
 17604  0173D6  0EFB               	movlw	-5
 17605  0173D8  AEE3               	btfss	plusw1,7,c
 17606  0173DA  D008               	goto	l7700
 17607                           
 17608                           ;stkvar	_dividend @ sp[(-4)+-2]
 17609                           ;stkvar	_dividend @ sp[(-4)+-2]
 17610  0173DC  0EFA               	movlw	-6
 17611  0173DE  6CE3               	negf	plusw1,c
 17612  0173E0  0EFB               	movlw	-5
 17613  0173E2  1EE3               	comf	plusw1,f,c
 17614  0173E4  B0D8               	btfsc	status,0,c
 17615  0173E6  2AE3               	incf	plusw1,f,c
 17616                           
 17617                           ;stkvar	_sign @ sp[(-4)+2]
 17618  0173E8  0EFE               	movlw	-2
 17619  0173EA  70E3               	btg	plusw1,0,c
 17620  0173EC                     l7700:
 17621                           
 17622                           ;stkvar	_quotient @ sp[(-4)+0]
 17623  0173EC  0EFC               	movlw	-4
 17624  0173EE  6AE3               	clrf	plusw1,c
 17625  0173F0  0EFD               	movlw	-3
 17626  0173F2  6AE3               	clrf	plusw1,c
 17627                           
 17628                           ;stkvar	_divisor @ sp[(-4)+-4]
 17629  0173F4  0EF8               	movlw	-8
 17630  0173F6  006F FF8C  F001    	movff	plusw1,btemp
 17631  0173FC  0EF9               	movlw	-7
 17632  0173FE  50E3               	movf	plusw1,w,c
 17633  017400  1001               	iorwf	btemp^0,w,c
 17634  017402  B4D8               	btfsc	status,2,c
 17635  017404  D066               	goto	u6280
 17636                           
 17637                           ;stkvar	_counter @ sp[(-4)+3]
 17638  017406  0EFF               	movlw	-1
 17639  017408  6AE3               	clrf	plusw1,c
 17640  01740A  D012               	goto	L16
 17641  01740C                     l7706:
 17642                           
 17643                           ;stkvar	_divisor @ sp[(-4)+-4]
 17644  01740C  0EF8               	movlw	-8
 17645  01740E  50E3               	movf	plusw1,w,c
 17646  017410  90D8               	bcf	status,0,c
 17647  017412  34E8               	rlcf	wreg,w,c
 17648  017414  6E01               	movwf	btemp^0,c
 17649  017416  0EF8               	movlw	-8
 17650  017418  0060  F007  FFE3   	movff	btemp,plusw1
 17651  01741E  0EF9               	movlw	-7
 17652  017420  50E3               	movf	plusw1,w,c
 17653  017422  34E8               	rlcf	wreg,w,c
 17654  017424  6E01               	movwf	btemp^0,c
 17655  017426  0EF9               	movlw	-7
 17656  017428  0060  F007  FFE3   	movff	btemp,plusw1
 17657                           
 17658                           ;stkvar	_counter @ sp[(-4)+3]
 17659  01742E  0EFF               	movlw	-1
 17660  017430                     L16:
 17661  017430  2AE3               	incf	plusw1,f,c
 17662                           
 17663                           ;stkvar	_divisor @ sp[(-4)+-4]
 17664  017432  0EF9               	movlw	-7
 17665  017434  AEE3               	btfss	plusw1,7,c
 17666  017436  D7EA               	goto	l7706
 17667  017438                     u6260:
 17668                           
 17669                           ;stkvar	_quotient @ sp[(-4)+0]
 17670  017438  0EFC               	movlw	-4
 17671  01743A  50E3               	movf	plusw1,w,c
 17672  01743C  90D8               	bcf	status,0,c
 17673  01743E  34E8               	rlcf	wreg,w,c
 17674  017440  6E01               	movwf	btemp^0,c
 17675  017442  0EFC               	movlw	-4
 17676  017444  0060  F007  FFE3   	movff	btemp,plusw1
 17677  01744A  0EFD               	movlw	-3
 17678  01744C  50E3               	movf	plusw1,w,c
 17679  01744E  34E8               	rlcf	wreg,w,c
 17680  017450  6E01               	movwf	btemp^0,c
 17681  017452  0EFD               	movlw	-3
 17682  017454  0060  F007  FFE3   	movff	btemp,plusw1
 17683                           
 17684                           ;stkvar	_divisor @ sp[(-4)+-4]
 17685  01745A  0EF8               	movlw	-8
 17686  01745C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17687  017462  0EF9               	movlw	-7
 17688  017464  006F FF8C  F00C    	movff	plusw1,btemp+11
 17689                           
 17690                           ;stkvar	_dividend @ sp[(-4)+-2]
 17691  01746A  0EFA               	movlw	-6
 17692  01746C  006F FF8C  F009    	movff	plusw1,btemp+8
 17693  017472  0EFB               	movlw	-5
 17694  017474  006F FF8C  F00A    	movff	plusw1,btemp+9
 17695  01747A  500B               	movf	(btemp+10)^0,w,c
 17696  01747C  5C09               	subwf	(btemp+8)^0,w,c
 17697  01747E  500C               	movf	(btemp+11)^0,w,c
 17698  017480  580A               	subwfb	(btemp+9)^0,w,c
 17699  017482  A0D8               	btfss	status,0,c
 17700  017484  D016               	goto	l7720
 17701                           
 17702                           ;stkvar	_divisor @ sp[(-4)+-4]
 17703                           ;stkvar	_dividend @ sp[(-4)+-2]
 17704  017486  0EFA               	movlw	-6
 17705  017488  50E3               	movf	plusw1,w,c
 17706  01748A  6E01               	movwf	btemp^0,c
 17707  01748C  0EF8               	movlw	-8
 17708  01748E  50E3               	movf	plusw1,w,c
 17709  017490  5E01               	subwf	btemp^0,f,c
 17710  017492  0EFA               	movlw	-6
 17711  017494  0060  F007  FFE3   	movff	btemp,plusw1
 17712  01749A  0EFB               	movlw	-5
 17713  01749C  50E3               	movf	plusw1,w,c
 17714  01749E  6E01               	movwf	btemp^0,c
 17715  0174A0  0EF9               	movlw	-7
 17716  0174A2  50E3               	movf	plusw1,w,c
 17717  0174A4  5A01               	subwfb	btemp^0,f,c
 17718  0174A6  0EFB               	movlw	-5
 17719  0174A8  0060  F007  FFE3   	movff	btemp,plusw1
 17720                           
 17721                           ;stkvar	_quotient @ sp[(-4)+0]
 17722  0174AE  0EFC               	movlw	-4
 17723  0174B0  80E3               	bsf	plusw1,0,c
 17724  0174B2                     l7720:
 17725                           
 17726                           ;stkvar	_divisor @ sp[(-4)+-4]
 17727  0174B2  90D8               	bcf	status,0,c
 17728  0174B4  0EF9               	movlw	-7
 17729  0174B6  32E3               	rrcf	plusw1,f,c
 17730  0174B8  0EF8               	movlw	-8
 17731  0174BA  32E3               	rrcf	plusw1,f,c
 17732                           
 17733                           ;stkvar	_counter @ sp[(-4)+3]
 17734  0174BC  0EFF               	movlw	-1
 17735  0174BE  50E3               	movf	plusw1,w,c
 17736  0174C0  6E01               	movwf	btemp^0,c
 17737  0174C2  0E01               	movlw	1
 17738  0174C4  5E01               	subwf	btemp^0,f,c
 17739  0174C6  0EFF               	movlw	-1
 17740  0174C8  0060  F007  FFE3   	movff	btemp,plusw1
 17741  0174CE  A4D8               	btfss	status,2,c
 17742  0174D0  D7B3               	goto	u6260
 17743  0174D2                     u6280:
 17744                           
 17745                           ;stkvar	_sign @ sp[(-4)+2]
 17746  0174D2  0EFE               	movlw	-2
 17747  0174D4  50E3               	movf	plusw1,w,c
 17748  0174D6  B4D8               	btfsc	status,2,c
 17749  0174D8  D006               	goto	l7728
 17750                           
 17751                           ;stkvar	_quotient @ sp[(-4)+0]
 17752                           ;stkvar	_quotient @ sp[(-4)+0]
 17753  0174DA  0EFC               	movlw	-4
 17754  0174DC  6CE3               	negf	plusw1,c
 17755  0174DE  0EFD               	movlw	-3
 17756  0174E0  1EE3               	comf	plusw1,f,c
 17757  0174E2  B0D8               	btfsc	status,0,c
 17758  0174E4  2AE3               	incf	plusw1,f,c
 17759  0174E6                     l7728:
 17760                           
 17761                           ;stkvar	_quotient @ sp[(-4)+0]
 17762  0174E6  0EFC               	movlw	-4
 17763  0174E8  006F FF8C  F001    	movff	plusw1,btemp
 17764  0174EE  0EFD               	movlw	-3
 17765  0174F0  006F FF8C  F002    	movff	plusw1,btemp+1
 17766                           
 17767                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17768  0174F6  0EF8               	movlw	248
 17769  0174F8  26E1               	addwf	fsr1l,f,c
 17770  0174FA  0EFF               	movlw	255
 17771  0174FC  22E2               	addwfc	fsr1h,f,c
 17772  0174FE  0012               	return		;funcret
 17773  017500                     __end_of___awdiv:
 17774                           	opt callstack 0
 17775                           
 17776 ;; *************** function _dtoa *****************
 17777 ;; Defined at:
 17778 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17779 ;; Parameters:    Size  Location     Type
 17780 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17781 ;;		 -> f(6), NULL(0), 
 17782 ;;  d               8  [STACK] long long 
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;  n               8  [STACK] long long 
 17785 ;;  i               2  [STACK] int 
 17786 ;;  s               2  [STACK] int 
 17787 ;;  w               2  [STACK] int 
 17788 ;;  p               2  [STACK] int 
 17789 ;; Return value:  Size  Location     Type
 17790 ;;                  2  [STACK] int 
 17791 ;; Registers used:
 17792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17793 ;; Tracked objects:
 17794 ;;		On entry : 0/0
 17795 ;;		On exit  : 0/0
 17796 ;;		Unchanged: 0/0
 17797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;Total ram usage:        0 bytes
 17803 ;; Hardware stack levels used:    1
 17804 ;; Hardware stack levels required when called:   20
 17805 ;; This function calls:
 17806 ;;		___aodiv
 17807 ;;		___aomod
 17808 ;;		_abs
 17809 ;;		_pad
 17810 ;; This function is called by:
 17811 ;;		_vfpfcnvrt
 17812 ;; This function uses a reentrant model
 17813 ;;
 17814                           
 17815                           	psect	text63
 17816  014778                     __ptext63:
 17817                           	opt callstack 0
 17818  014778                     _dtoa:
 17819                           	opt callstack 0
 17820                           
 17821                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17822  014778  0E12               	movlw	18
 17823  01477A  26E1               	addwf	fsr1l,f,c
 17824  01477C  0E00               	movlw	0
 17825  01477E  22E2               	addwfc	fsr1h,f,c
 17826                           
 17827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17828                           ;stkvar	_d @ sp[(-18)+-10]
 17829                           
 17830                           ;incstack = 0
 17831 ;; hardware stack exceeded
 17832  014780  0EE4               	movlw	228
 17833  014782  24E1               	addwf	fsr1l,w,c
 17834  014784  6ED9               	movwf	fsr2l,c
 17835  014786  0EFF               	movlw	255
 17836  014788  20E2               	addwfc	fsr1h,w,c
 17837  01478A  6EDA               	movwf	fsr2h,c
 17838                           
 17839                           ;stkvar	_n @ sp[(-18)+2]
 17840  01478C  0E08               	movlw	8
 17841  01478E  6E01               	movwf	btemp^0,c
 17842  014790  0EF0               	movlw	-16
 17843  014792                     us950999:
 17844  014792  006F FF7B FFE3     	movff	postinc2,plusw1
 17845  014798  28E8               	incf	wreg,w,c
 17846  01479A  2E01               	decfsz	btemp^0,f,c
 17847  01479C  D7FA               	bra	us950999
 17848                           
 17849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17850                           ;stkvar	_n @ sp[(-18)+2]
 17851  01479E  0EF7               	movlw	-9
 17852  0147A0  AEE3               	btfss	plusw1,7,c
 17853  0147A2  D002               	goto	u9510
 17854  0147A4  0E01               	movlw	1
 17855  0147A6  D001               	goto	u9520
 17856  0147A8                     u9510:
 17857  0147A8  0E00               	movlw	0
 17858  0147AA                     u9520:
 17859  0147AA  6E0B               	movwf	(btemp+10)^0,c
 17860  0147AC  6A0C               	clrf	(btemp+11)^0,c
 17861                           
 17862                           ;stkvar	_s @ sp[(-18)+12]
 17863  0147AE  0EFA               	movlw	-6
 17864  0147B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17865  0147B6  0EFB               	movlw	-5
 17866  0147B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17867                           
 17868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17869                           ;stkvar	_s @ sp[(-18)+12]
 17870  0147BE  0EFA               	movlw	-6
 17871  0147C0  006F FF8C  F001    	movff	plusw1,btemp
 17872  0147C6  0EFB               	movlw	-5
 17873  0147C8  50E3               	movf	plusw1,w,c
 17874  0147CA  1001               	iorwf	btemp^0,w,c
 17875  0147CC  B4D8               	btfsc	status,2,c
 17876  0147CE  D025               	goto	u9540
 17877                           
 17878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17879                           ;stkvar	_n @ sp[(-18)+2]
 17880                           ;stkvar	_n @ sp[(-18)+2]
 17881  0147D0  0EF0               	movlw	-16
 17882  0147D2  6CE3               	negf	plusw1,c
 17883  0147D4  0EF1               	movlw	-15
 17884  0147D6  1EE3               	comf	plusw1,f,c
 17885  0147D8  0EF2               	movlw	-14
 17886  0147DA  1EE3               	comf	plusw1,f,c
 17887  0147DC  0EF3               	movlw	-13
 17888  0147DE  1EE3               	comf	plusw1,f,c
 17889  0147E0  0EF4               	movlw	-12
 17890  0147E2  1EE3               	comf	plusw1,f,c
 17891  0147E4  0EF5               	movlw	-11
 17892  0147E6  1EE3               	comf	plusw1,f,c
 17893  0147E8  0EF6               	movlw	-10
 17894  0147EA  1EE3               	comf	plusw1,f,c
 17895  0147EC  0EF7               	movlw	-9
 17896  0147EE  1EE3               	comf	plusw1,f,c
 17897  0147F0  E314               	bnc	u9540
 17898  0147F2  0EF1               	movlw	-15
 17899  0147F4  2AE3               	incf	plusw1,f,c
 17900  0147F6  E311               	bnc	u9540
 17901  0147F8  0EF2               	movlw	-14
 17902  0147FA  2AE3               	incf	plusw1,f,c
 17903  0147FC  E30E               	bnc	u9540
 17904  0147FE  0EF3               	movlw	-13
 17905  014800  2AE3               	incf	plusw1,f,c
 17906  014802  E30B               	bnc	u9540
 17907  014804  0EF4               	movlw	-12
 17908  014806  2AE3               	incf	plusw1,f,c
 17909  014808  E308               	bnc	u9540
 17910  01480A  0EF5               	movlw	-11
 17911  01480C  2AE3               	incf	plusw1,f,c
 17912  01480E  E305               	bnc	u9540
 17913  014810  0EF6               	movlw	-10
 17914  014812  2AE3               	incf	plusw1,f,c
 17915  014814  E302               	bnc	u9540
 17916  014816  0EF7               	movlw	-9
 17917  014818  2AE3               	incf	plusw1,f,c
 17918  01481A                     u9540:
 17919                           
 17920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17921  01481A  AE24               	btfss	(_prec+1)^0,7,c
 17922                           
 17923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17924  01481C  9225               	bcf	_flags^0,1,c
 17925                           
 17926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17927  01481E  BE24               	btfsc	(_prec+1)^0,7,c
 17928  014820  D005               	goto	u9560
 17929  014822  5024               	movf	(_prec+1)^0,w,c
 17930  014824  E110               	bnz	l10568
 17931  014826  0423               	decf	_prec^0,w,c
 17932  014828  B0D8               	btfsc	status,0,c
 17933  01482A  D00D               	goto	l10568
 17934  01482C                     u9560:
 17935  01482C  0E01               	movlw	1
 17936  01482E  6E0B               	movwf	(btemp+10)^0,c
 17937  014830  0E00               	movlw	0
 17938  014832  6E0C               	movwf	(btemp+11)^0,c
 17939                           
 17940                           ;stkvar	_p @ sp[(-18)+16]
 17941  014834  0EFE               	movlw	-2
 17942  014836  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17943  01483C  0EFF               	movlw	-1
 17944  01483E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17945  014844  D008               	goto	l2019
 17946  014846                     l10568:
 17947                           
 17948                           ;stkvar	_p @ sp[(-18)+16]
 17949  014846  0EFE               	movlw	-2
 17950  014848  0060  F08F  FFE3   	movff	_prec,plusw1
 17951  01484E  0EFF               	movlw	-1
 17952  014850  0060  F093  FFE3   	movff	_prec+1,plusw1
 17953  014856                     l2019:
 17954                           
 17955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17956                           ;stkvar	_w @ sp[(-18)+14]
 17957  014856  0EFC               	movlw	-4
 17958  014858  0060  F087  FFE3   	movff	_width,plusw1
 17959  01485E  0EFD               	movlw	-3
 17960  014860  0060  F08B  FFE3   	movff	_width+1,plusw1
 17961                           
 17962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17963                           ;stkvar	_s @ sp[(-18)+12]
 17964  014866  0EFA               	movlw	-6
 17965  014868  006F FF8C  F001    	movff	plusw1,btemp
 17966  01486E  0EFB               	movlw	-5
 17967  014870  50E3               	movf	plusw1,w,c
 17968  014872  1001               	iorwf	btemp^0,w,c
 17969  014874  A4D8               	btfss	status,2,c
 17970  014876  D002               	goto	u9580
 17971  014878  A425               	btfss	_flags^0,2,c
 17972  01487A  D00A               	goto	l10576
 17973  01487C                     u9580:
 17974                           
 17975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17976                           ;stkvar	_w @ sp[(-18)+14]
 17977  01487C  50E1               	movf	fsr1l,w,c
 17978  01487E  0FFC               	addlw	-4
 17979  014880  6ED9               	movwf	fsr2l,c
 17980  014882  50E2               	movf	fsr1h,w,c
 17981  014884  6EDA               	movwf	fsr2h,c
 17982  014886  0EFF               	movlw	255
 17983  014888  22DA               	addwfc	fsr2h,f,c
 17984  01488A  06DE               	decf	postinc2,f,c
 17985  01488C  0E00               	movlw	0
 17986  01488E  5ADD               	subwfb	postdec2,f,c
 17987  014890                     l10576:
 17988                           
 17989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17990  014890  0E4F               	movlw	79
 17991  014892  6E0B               	movwf	(btemp+10)^0,c
 17992  014894  0E00               	movlw	0
 17993  014896  6E0C               	movwf	(btemp+11)^0,c
 17994                           
 17995                           ;stkvar	_i @ sp[(-18)+10]
 17996  014898  0EF8               	movlw	-8
 17997  01489A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17998  0148A0  0EF9               	movlw	-7
 17999  0148A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18000                           
 18001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18002  0148A8  0103               	movlb	3	; () banked
 18003  0148AA  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18004                           
 18005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18006  0148AC  D109               	goto	l10590
 18007  0148AE                     l10580:
 18008                           
 18009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18010                           ;stkvar	_i @ sp[(-18)+10]
 18011  0148AE  50E1               	movf	fsr1l,w,c
 18012  0148B0  0FF8               	addlw	-8
 18013  0148B2  6ED9               	movwf	fsr2l,c
 18014  0148B4  50E2               	movf	fsr1h,w,c
 18015  0148B6  6EDA               	movwf	fsr2h,c
 18016  0148B8  0EFF               	movlw	255
 18017  0148BA  22DA               	addwfc	fsr2h,f,c
 18018  0148BC  06DE               	decf	postinc2,f,c
 18019  0148BE  0E00               	movlw	0
 18020  0148C0  5ADD               	subwfb	postdec2,f,c
 18021                           
 18022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18023  0148C2  0E0A               	movlw	10
 18024  0148C4  6EE6               	movwf	postinc1,c
 18025  0148C6  0E00               	movlw	0
 18026  0148C8  6EE6               	movwf	postinc1,c
 18027  0148CA  0E00               	movlw	0
 18028  0148CC  6EE6               	movwf	postinc1,c
 18029  0148CE  0E00               	movlw	0
 18030  0148D0  6EE6               	movwf	postinc1,c
 18031  0148D2  0E00               	movlw	0
 18032  0148D4  6EE6               	movwf	postinc1,c
 18033  0148D6  0E00               	movlw	0
 18034  0148D8  6EE6               	movwf	postinc1,c
 18035  0148DA  0E00               	movlw	0
 18036  0148DC  6EE6               	movwf	postinc1,c
 18037  0148DE  0E00               	movlw	0
 18038  0148E0  6EE6               	movwf	postinc1,c
 18039                           
 18040                           ;stkvar	_n @ sp[(-26)+2]
 18041  0148E2  50E1               	movf	fsr1l,w,c
 18042  0148E4  0FE8               	addlw	-24
 18043  0148E6  6ED9               	movwf	fsr2l,c
 18044  0148E8  50E2               	movf	fsr1h,w,c
 18045  0148EA  6EDA               	movwf	fsr2h,c
 18046  0148EC  0EFF               	movlw	255
 18047  0148EE  22DA               	addwfc	fsr2h,f,c
 18048  0148F0  006F FF7B FFE6     	movff	postinc2,postinc1
 18049  0148F6  006F FF7B FFE6     	movff	postinc2,postinc1
 18050  0148FC  006F FF7B FFE6     	movff	postinc2,postinc1
 18051  014902  006F FF7B FFE6     	movff	postinc2,postinc1
 18052  014908  006F FF7B FFE6     	movff	postinc2,postinc1
 18053  01490E  006F FF7B FFE6     	movff	postinc2,postinc1
 18054  014914  006F FF7B FFE6     	movff	postinc2,postinc1
 18055  01491A  006F FF7B FFE6     	movff	postinc2,postinc1
 18056  014920  EC4B  F0B0         	call	___aomod	;wreg free
 18057  014924  52E5               	movf	postdec1,f,c
 18058  014926  006F FF9C  F018    	movff	indf1,btemp+23
 18059  01492C  52E5               	movf	postdec1,f,c
 18060  01492E  006F FF9C  F017    	movff	indf1,btemp+22
 18061  014934  52E5               	movf	postdec1,f,c
 18062  014936  006F FF9C  F016    	movff	indf1,btemp+21
 18063  01493C  52E5               	movf	postdec1,f,c
 18064  01493E  006F FF9C  F015    	movff	indf1,btemp+20
 18065  014944  52E5               	movf	postdec1,f,c
 18066  014946  006F FF9C  F014    	movff	indf1,btemp+19
 18067  01494C  52E5               	movf	postdec1,f,c
 18068  01494E  006F FF9C  F013    	movff	indf1,btemp+18
 18069  014954  52E5               	movf	postdec1,f,c
 18070  014956  006F FF9C  F012    	movff	indf1,btemp+17
 18071  01495C  52E5               	movf	postdec1,f,c
 18072  01495E  006F FF9C  F011    	movff	indf1,btemp+16
 18073  014964  0EF8               	movlw	248
 18074  014966  26E1               	addwf	fsr1l,f,c
 18075  014968  0EFF               	movlw	255
 18076  01496A  22E2               	addwfc	fsr1h,f,c
 18077  01496C  0060  F044  F00B   	movff	btemp+16,btemp+10
 18078  014972  0060  F048  F00C   	movff	btemp+17,btemp+11
 18079  014978  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18080  01497E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18081  014984  ECA0  F0C8         	call	_abs	;wreg free
 18082  014988  0E30               	movlw	48
 18083  01498A  2601               	addwf	btemp^0,f,c
 18084                           
 18085                           ;stkvar	_i @ sp[(-18)+10]
 18086  01498C  0EF8               	movlw	-8
 18087  01498E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18088  014994  0EF9               	movlw	-7
 18089  014996  006F FF8C  F00C    	movff	plusw1,btemp+11
 18090  01499C  0E94               	movlw	low _dbuf
 18091  01499E  240B               	addwf	(btemp+10)^0,w,c
 18092  0149A0  6ED9               	movwf	fsr2l,c
 18093  0149A2  0E03               	movlw	high _dbuf
 18094  0149A4  200C               	addwfc	(btemp+11)^0,w,c
 18095  0149A6  6EDA               	movwf	fsr2h,c
 18096  0149A8  0060  F007  FFDF   	movff	btemp,indf2
 18097                           
 18098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18099                           ;stkvar	_p @ sp[(-18)+16]
 18100  0149AE  50E1               	movf	fsr1l,w,c
 18101  0149B0  0FFE               	addlw	-2
 18102  0149B2  6ED9               	movwf	fsr2l,c
 18103  0149B4  50E2               	movf	fsr1h,w,c
 18104  0149B6  6EDA               	movwf	fsr2h,c
 18105  0149B8  0EFF               	movlw	255
 18106  0149BA  22DA               	addwfc	fsr2h,f,c
 18107  0149BC  06DE               	decf	postinc2,f,c
 18108  0149BE  0E00               	movlw	0
 18109  0149C0  5ADD               	subwfb	postdec2,f,c
 18110                           
 18111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18112                           ;stkvar	_w @ sp[(-18)+14]
 18113  0149C2  50E1               	movf	fsr1l,w,c
 18114  0149C4  0FFC               	addlw	-4
 18115  0149C6  6ED9               	movwf	fsr2l,c
 18116  0149C8  50E2               	movf	fsr1h,w,c
 18117  0149CA  6EDA               	movwf	fsr2h,c
 18118  0149CC  0EFF               	movlw	255
 18119  0149CE  22DA               	addwfc	fsr2h,f,c
 18120  0149D0  06DE               	decf	postinc2,f,c
 18121  0149D2  0E00               	movlw	0
 18122  0149D4  5ADD               	subwfb	postdec2,f,c
 18123                           
 18124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18125  0149D6  0E0A               	movlw	10
 18126  0149D8  6EE6               	movwf	postinc1,c
 18127  0149DA  0E00               	movlw	0
 18128  0149DC  6EE6               	movwf	postinc1,c
 18129  0149DE  0E00               	movlw	0
 18130  0149E0  6EE6               	movwf	postinc1,c
 18131  0149E2  0E00               	movlw	0
 18132  0149E4  6EE6               	movwf	postinc1,c
 18133  0149E6  0E00               	movlw	0
 18134  0149E8  6EE6               	movwf	postinc1,c
 18135  0149EA  0E00               	movlw	0
 18136  0149EC  6EE6               	movwf	postinc1,c
 18137  0149EE  0E00               	movlw	0
 18138  0149F0  6EE6               	movwf	postinc1,c
 18139  0149F2  0E00               	movlw	0
 18140  0149F4  6EE6               	movwf	postinc1,c
 18141                           
 18142                           ;stkvar	_n @ sp[(-26)+2]
 18143  0149F6  50E1               	movf	fsr1l,w,c
 18144  0149F8  0FE8               	addlw	-24
 18145  0149FA  6ED9               	movwf	fsr2l,c
 18146  0149FC  50E2               	movf	fsr1h,w,c
 18147  0149FE  6EDA               	movwf	fsr2h,c
 18148  014A00  0EFF               	movlw	255
 18149  014A02  22DA               	addwfc	fsr2h,f,c
 18150  014A04  006F FF7B FFE6     	movff	postinc2,postinc1
 18151  014A0A  006F FF7B FFE6     	movff	postinc2,postinc1
 18152  014A10  006F FF7B FFE6     	movff	postinc2,postinc1
 18153  014A16  006F FF7B FFE6     	movff	postinc2,postinc1
 18154  014A1C  006F FF7B FFE6     	movff	postinc2,postinc1
 18155  014A22  006F FF7B FFE6     	movff	postinc2,postinc1
 18156  014A28  006F FF7B FFE6     	movff	postinc2,postinc1
 18157  014A2E  006F FF7B FFE6     	movff	postinc2,postinc1
 18158  014A34  ECD1  F0AD         	call	___aodiv	;wreg free
 18159  014A38  52E5               	movf	postdec1,f,c
 18160  014A3A  006F FF9C  F018    	movff	indf1,btemp+23
 18161  014A40  52E5               	movf	postdec1,f,c
 18162  014A42  006F FF9C  F017    	movff	indf1,btemp+22
 18163  014A48  52E5               	movf	postdec1,f,c
 18164  014A4A  006F FF9C  F016    	movff	indf1,btemp+21
 18165  014A50  52E5               	movf	postdec1,f,c
 18166  014A52  006F FF9C  F015    	movff	indf1,btemp+20
 18167  014A58  52E5               	movf	postdec1,f,c
 18168  014A5A  006F FF9C  F014    	movff	indf1,btemp+19
 18169  014A60  52E5               	movf	postdec1,f,c
 18170  014A62  006F FF9C  F013    	movff	indf1,btemp+18
 18171  014A68  52E5               	movf	postdec1,f,c
 18172  014A6A  006F FF9C  F012    	movff	indf1,btemp+17
 18173  014A70  52E5               	movf	postdec1,f,c
 18174  014A72  006F FF9C  F011    	movff	indf1,btemp+16
 18175  014A78  0EF8               	movlw	248
 18176  014A7A  26E1               	addwf	fsr1l,f,c
 18177  014A7C  0EFF               	movlw	255
 18178  014A7E  22E2               	addwfc	fsr1h,f,c
 18179                           
 18180                           ;stkvar	_n @ sp[(-18)+2]
 18181  014A80  0EF0               	movlw	-16
 18182  014A82  0060  F047  FFE3   	movff	btemp+16,plusw1
 18183  014A88  0EF1               	movlw	-15
 18184  014A8A  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18185  014A90  0EF2               	movlw	-14
 18186  014A92  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18187  014A98  0EF3               	movlw	-13
 18188  014A9A  0060  F053  FFE3   	movff	btemp+19,plusw1
 18189  014AA0  0EF4               	movlw	-12
 18190  014AA2  0060  F057  FFE3   	movff	btemp+20,plusw1
 18191  014AA8  0EF5               	movlw	-11
 18192  014AAA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18193  014AB0  0EF6               	movlw	-10
 18194  014AB2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18195  014AB8  0EF7               	movlw	-9
 18196  014ABA  0060  F063  FFE3   	movff	btemp+23,plusw1
 18197  014AC0                     l10590:
 18198                           
 18199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18200                           ;stkvar	_i @ sp[(-18)+10]
 18201  014AC0  0EF9               	movlw	-7
 18202  014AC2  BEE3               	btfsc	plusw1,7,c
 18203  014AC4  D036               	goto	u9630
 18204  014AC6  0EF9               	movlw	-7
 18205  014AC8  50E3               	movf	plusw1,w,c
 18206  014ACA  E104               	bnz	u9590
 18207  014ACC  0EF8               	movlw	-8
 18208  014ACE  04E3               	decf	plusw1,w,c
 18209  014AD0  A0D8               	btfss	status,0,c
 18210  014AD2  D02F               	goto	u9630
 18211  014AD4                     u9590:
 18212                           
 18213                           ;stkvar	_n @ sp[(-18)+2]
 18214  014AD4  0EF0               	movlw	-16
 18215  014AD6  50E3               	movf	plusw1,w,c
 18216  014AD8  E115               	bnz	u9601
 18217  014ADA  0EF1               	movlw	-15
 18218  014ADC  50E3               	movf	plusw1,w,c
 18219  014ADE  E112               	bnz	u9601
 18220  014AE0  0EF2               	movlw	-14
 18221  014AE2  50E3               	movf	plusw1,w,c
 18222  014AE4  E10F               	bnz	u9601
 18223  014AE6  0EF3               	movlw	-13
 18224  014AE8  50E3               	movf	plusw1,w,c
 18225  014AEA  E10C               	bnz	u9601
 18226  014AEC  0EF4               	movlw	-12
 18227  014AEE  50E3               	movf	plusw1,w,c
 18228  014AF0  E109               	bnz	u9601
 18229  014AF2  0EF5               	movlw	-11
 18230  014AF4  50E3               	movf	plusw1,w,c
 18231  014AF6  E106               	bnz	u9601
 18232  014AF8  0EF6               	movlw	-10
 18233  014AFA  50E3               	movf	plusw1,w,c
 18234  014AFC  E103               	bnz	u9601
 18235  014AFE  0EF7               	movlw	-9
 18236  014B00  50E3               	movf	plusw1,w,c
 18237  014B02  A4D8               	btfss	status,2,c
 18238  014B04                     u9601:
 18239  014B04  D6D4               	goto	l10580
 18240                           
 18241                           ;stkvar	_p @ sp[(-18)+16]
 18242  014B06  0EFF               	movlw	-1
 18243  014B08  BEE3               	btfsc	plusw1,7,c
 18244  014B0A  D007               	goto	u9610
 18245  014B0C  0EFF               	movlw	-1
 18246  014B0E  50E3               	movf	plusw1,w,c
 18247  014B10  E103               	bnz	u9611
 18248  014B12  0EFE               	movlw	-2
 18249  014B14  04E3               	decf	plusw1,w,c
 18250  014B16  B0D8               	btfsc	status,0,c
 18251  014B18                     u9611:
 18252  014B18  D6CA               	goto	l10580
 18253  014B1A                     u9610:
 18254                           
 18255                           ;stkvar	_w @ sp[(-18)+14]
 18256  014B1A  0EFD               	movlw	-3
 18257  014B1C  BEE3               	btfsc	plusw1,7,c
 18258  014B1E  D009               	goto	u9630
 18259  014B20  0EFD               	movlw	-3
 18260  014B22  50E3               	movf	plusw1,w,c
 18261  014B24  E104               	bnz	u9620
 18262  014B26  0EFC               	movlw	-4
 18263  014B28  04E3               	decf	plusw1,w,c
 18264  014B2A  A0D8               	btfss	status,0,c
 18265  014B2C  D002               	goto	u9630
 18266  014B2E                     u9620:
 18267  014B2E  B225               	btfsc	_flags^0,1,c
 18268  014B30  D6BE               	goto	l10580
 18269  014B32                     u9630:
 18270                           
 18271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18272                           ;stkvar	_s @ sp[(-18)+12]
 18273  014B32  0EFA               	movlw	-6
 18274  014B34  006F FF8C  F001    	movff	plusw1,btemp
 18275  014B3A  0EFB               	movlw	-5
 18276  014B3C  50E3               	movf	plusw1,w,c
 18277  014B3E  1001               	iorwf	btemp^0,w,c
 18278  014B40  A4D8               	btfss	status,2,c
 18279  014B42  D002               	goto	u9650
 18280  014B44  A425               	btfss	_flags^0,2,c
 18281  014B46  D033               	goto	l10614
 18282  014B48                     u9650:
 18283                           
 18284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18285                           ;stkvar	_i @ sp[(-18)+10]
 18286  014B48  50E1               	movf	fsr1l,w,c
 18287  014B4A  0FF8               	addlw	-8
 18288  014B4C  6ED9               	movwf	fsr2l,c
 18289  014B4E  50E2               	movf	fsr1h,w,c
 18290  014B50  6EDA               	movwf	fsr2h,c
 18291  014B52  0EFF               	movlw	255
 18292  014B54  22DA               	addwfc	fsr2h,f,c
 18293  014B56  06DE               	decf	postinc2,f,c
 18294  014B58  0E00               	movlw	0
 18295  014B5A  5ADD               	subwfb	postdec2,f,c
 18296                           
 18297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18298                           ;stkvar	_s @ sp[(-18)+12]
 18299  014B5C  0EFA               	movlw	-6
 18300  014B5E  006F FF8C  F001    	movff	plusw1,btemp
 18301  014B64  0EFB               	movlw	-5
 18302  014B66  50E3               	movf	plusw1,w,c
 18303  014B68  1001               	iorwf	btemp^0,w,c
 18304  014B6A  A4D8               	btfss	status,2,c
 18305  014B6C  D002               	goto	l10610
 18306  014B6E  0E2B               	movlw	43
 18307  014B70  D001               	goto	L17
 18308  014B72                     l10610:
 18309  014B72  0E2D               	movlw	45
 18310  014B74                     L17:
 18311  014B74  6E0B               	movwf	(btemp+10)^0,c
 18312  014B76  0E00               	movlw	0
 18313  014B78  6E0C               	movwf	(btemp+11)^0,c
 18314                           
 18315                           ;stkvar	_dtoa$5120 @ sp[(-18)+0]
 18316  014B7A  0EEE               	movlw	-18
 18317  014B7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18318  014B82  0EEF               	movlw	-17
 18319  014B84  0060  F033  FFE3   	movff	btemp+11,plusw1
 18320                           
 18321                           ;stkvar	_dtoa$5120 @ sp[(-18)+0]
 18322                           ;stkvar	_i @ sp[(-18)+10]
 18323  014B8A  0EF8               	movlw	-8
 18324  014B8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18325  014B92  0EF9               	movlw	-7
 18326  014B94  006F FF8C  F00C    	movff	plusw1,btemp+11
 18327  014B9A  0E94               	movlw	low _dbuf
 18328  014B9C  240B               	addwf	(btemp+10)^0,w,c
 18329  014B9E  6ED9               	movwf	fsr2l,c
 18330  014BA0  0E03               	movlw	high _dbuf
 18331  014BA2  200C               	addwfc	(btemp+11)^0,w,c
 18332  014BA4  6EDA               	movwf	fsr2h,c
 18333  014BA6  0EEE               	movlw	-18
 18334  014BA8  006F FF8F FFDF     	movff	plusw1,indf2
 18335  014BAE                     l10614:
 18336                           
 18337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18338                           ;stkvar	_w @ sp[(-18)+14]
 18339  014BAE  0EFC               	movlw	-4
 18340  014BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 18341  014BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 18342                           
 18343                           ;stkvar	_i @ sp[(-20)+10]
 18344  014BBC  0E94               	movlw	low _dbuf
 18345  014BBE  6E0B               	movwf	(btemp+10)^0,c
 18346  014BC0  0E03               	movlw	high _dbuf
 18347  014BC2  6E0C               	movwf	(btemp+11)^0,c
 18348  014BC4  0EF6               	movlw	-10
 18349  014BC6  50E3               	movf	plusw1,w,c
 18350  014BC8  260B               	addwf	(btemp+10)^0,f,c
 18351  014BCA  0EF7               	movlw	-9
 18352  014BCC  50E3               	movf	plusw1,w,c
 18353  014BCE  220C               	addwfc	(btemp+11)^0,f,c
 18354  014BD0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18355  014BD6  0060  F033  FFE6   	movff	btemp+11,postinc1
 18356                           
 18357                           ;stkvar	_fp @ sp[(-22)+-2]
 18358  014BDC  0EE8               	movlw	-24
 18359  014BDE  006F FF8F FFE6     	movff	plusw1,postinc1
 18360  014BE4  006F FF8F FFE6     	movff	plusw1,postinc1
 18361  014BEA  ECC9  F0BC         	call	_pad	;wreg free
 18362                           
 18363                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18364  014BEE  0EE4               	movlw	228
 18365  014BF0  26E1               	addwf	fsr1l,f,c
 18366  014BF2  0EFF               	movlw	255
 18367  014BF4  22E2               	addwfc	fsr1h,f,c
 18368  014BF6  0012               	return		;funcret
 18369  014BF8                     __end_of_dtoa:
 18370                           	opt callstack 0
 18371                           
 18372 ;; *************** function _abs *****************
 18373 ;; Defined at:
 18374 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18375 ;; Parameters:    Size  Location     Type
 18376 ;;  a               2  [STACK] int 
 18377 ;; Auto vars:     Size  Location     Type
 18378 ;;		None
 18379 ;; Return value:  Size  Location     Type
 18380 ;;                  2  [STACK] int 
 18381 ;; Registers used:
 18382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18383 ;; Tracked objects:
 18384 ;;		On entry : 0/3
 18385 ;;		On exit  : 0/0
 18386 ;;		Unchanged: 0/0
 18387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18392 ;;Total ram usage:        0 bytes
 18393 ;; Hardware stack levels used:    1
 18394 ;; Hardware stack levels required when called:   15
 18395 ;; This function calls:
 18396 ;;		Nothing
 18397 ;; This function is called by:
 18398 ;;		_dtoa
 18399 ;; This function uses a reentrant model
 18400 ;;
 18401                           
 18402                           	psect	text64
 18403  019140                     __ptext64:
 18404                           	opt callstack 0
 18405  019140                     _abs:
 18406                           	opt callstack 0
 18407                           
 18408                           ;stkvar	_a @ sp[(0)+-2]
 18409                           
 18410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18411                           ;incstack = 0
 18412 ;; hardware stack exceeded
 18413  019140  0EFF               	movlw	-1
 18414  019142  BEE3               	btfsc	plusw1,7,c
 18415  019144  D007               	goto	u5240
 18416  019146  0EFF               	movlw	-1
 18417  019148  50E3               	movf	plusw1,w,c
 18418  01914A  E112               	bnz	l7182
 18419  01914C  0EFE               	movlw	-2
 18420  01914E  04E3               	decf	plusw1,w,c
 18421  019150  B0D8               	btfsc	status,0,c
 18422  019152  D00E               	goto	l7182
 18423  019154                     u5240:
 18424                           
 18425                           ;stkvar	_a @ sp[(0)+-2]
 18426  019154  0EFE               	movlw	-2
 18427  019156  006F FF8C  F001    	movff	plusw1,btemp
 18428  01915C  1E01               	comf	btemp^0,f,c
 18429  01915E  0EFF               	movlw	-1
 18430  019160  006F FF8C  F002    	movff	plusw1,btemp+1
 18431  019166  1E02               	comf	(btemp+1)^0,f,c
 18432  019168  2A01               	incf	btemp^0,f,c
 18433  01916A  B4D8               	btfsc	status,2,c
 18434  01916C  2A02               	incf	(btemp+1)^0,f,c
 18435  01916E  D008               	goto	l2922
 18436  019170                     l7182:
 18437                           
 18438                           ;stkvar	_a @ sp[(0)+-2]
 18439  019170  0EFE               	movlw	-2
 18440  019172  006F FF8C  F001    	movff	plusw1,btemp
 18441  019178  0EFF               	movlw	-1
 18442  01917A  006F FF8C  F002    	movff	plusw1,btemp+1
 18443  019180                     l2922:
 18444                           
 18445                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18446  019180  52E5               	movf	postdec1,f,c
 18447  019182  52E5               	movf	postdec1,f,c
 18448  019184  0012               	return		;funcret
 18449  019186                     __end_of_abs:
 18450                           	opt callstack 0
 18451                           
 18452 ;; *************** function ___aomod *****************
 18453 ;; Defined at:
 18454 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18455 ;; Parameters:    Size  Location     Type
 18456 ;;  dividend        8  [STACK] long long 
 18457 ;;  divisor         8  [STACK] long long 
 18458 ;; Auto vars:     Size  Location     Type
 18459 ;;  sign            1  [STACK] unsigned char 
 18460 ;;  counter         1  [STACK] unsigned char 
 18461 ;; Return value:  Size  Location     Type
 18462 ;;                  8  [STACK] long long 
 18463 ;; Registers used:
 18464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18465 ;; Tracked objects:
 18466 ;;		On entry : 0/3
 18467 ;;		On exit  : 0/0
 18468 ;;		Unchanged: 0/0
 18469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18474 ;;Total ram usage:        0 bytes
 18475 ;; Hardware stack levels used:    1
 18476 ;; Hardware stack levels required when called:   15
 18477 ;; This function calls:
 18478 ;;		Nothing
 18479 ;; This function is called by:
 18480 ;;		_dtoa
 18481 ;; This function uses a reentrant model
 18482 ;;
 18483                           
 18484                           	psect	text65
 18485  016096                     __ptext65:
 18486                           	opt callstack 0
 18487  016096                     ___aomod:
 18488                           	opt callstack 0
 18489                           
 18490                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18491  016096  52E6               	movf	postinc1,f,c
 18492  016098  52E6               	movf	postinc1,f,c
 18493                           
 18494                           ;stkvar	_sign @ sp[(-2)+0]
 18495                           
 18496                           ;incstack = 0
 18497 ;; hardware stack exceeded
 18498  01609A  0EFE               	movlw	-2
 18499  01609C  6AE3               	clrf	plusw1,c
 18500                           
 18501                           ;stkvar	_dividend @ sp[(-2)+-8]
 18502  01609E  0EFD               	movlw	-3
 18503  0160A0  AEE3               	btfss	plusw1,7,c
 18504  0160A2  D028               	goto	l7340
 18505                           
 18506                           ;stkvar	_dividend @ sp[(-2)+-8]
 18507                           ;stkvar	_dividend @ sp[(-2)+-8]
 18508  0160A4  0EF6               	movlw	-10
 18509  0160A6  6CE3               	negf	plusw1,c
 18510  0160A8  0EF7               	movlw	-9
 18511  0160AA  1EE3               	comf	plusw1,f,c
 18512  0160AC  0EF8               	movlw	-8
 18513  0160AE  1EE3               	comf	plusw1,f,c
 18514  0160B0  0EF9               	movlw	-7
 18515  0160B2  1EE3               	comf	plusw1,f,c
 18516  0160B4  0EFA               	movlw	-6
 18517  0160B6  1EE3               	comf	plusw1,f,c
 18518  0160B8  0EFB               	movlw	-5
 18519  0160BA  1EE3               	comf	plusw1,f,c
 18520  0160BC  0EFC               	movlw	-4
 18521  0160BE  1EE3               	comf	plusw1,f,c
 18522  0160C0  0EFD               	movlw	-3
 18523  0160C2  1EE3               	comf	plusw1,f,c
 18524  0160C4  E314               	bnc	u5670
 18525  0160C6  0EF7               	movlw	-9
 18526  0160C8  2AE3               	incf	plusw1,f,c
 18527  0160CA  E311               	bnc	u5670
 18528  0160CC  0EF8               	movlw	-8
 18529  0160CE  2AE3               	incf	plusw1,f,c
 18530  0160D0  E30E               	bnc	u5670
 18531  0160D2  0EF9               	movlw	-7
 18532  0160D4  2AE3               	incf	plusw1,f,c
 18533  0160D6  E30B               	bnc	u5670
 18534  0160D8  0EFA               	movlw	-6
 18535  0160DA  2AE3               	incf	plusw1,f,c
 18536  0160DC  E308               	bnc	u5670
 18537  0160DE  0EFB               	movlw	-5
 18538  0160E0  2AE3               	incf	plusw1,f,c
 18539  0160E2  E305               	bnc	u5670
 18540  0160E4  0EFC               	movlw	-4
 18541  0160E6  2AE3               	incf	plusw1,f,c
 18542  0160E8  E302               	bnc	u5670
 18543  0160EA  0EFD               	movlw	-3
 18544  0160EC  2AE3               	incf	plusw1,f,c
 18545  0160EE                     u5670:
 18546                           
 18547                           ;stkvar	_sign @ sp[(-2)+0]
 18548  0160EE  0EFE               	movlw	-2
 18549  0160F0  6AE3               	clrf	plusw1,c
 18550  0160F2  2AE3               	incf	plusw1,f,c
 18551  0160F4                     l7340:
 18552                           
 18553                           ;stkvar	_divisor @ sp[(-2)+-16]
 18554  0160F4  0EF5               	movlw	-11
 18555  0160F6  AEE3               	btfss	plusw1,7,c
 18556  0160F8  D025               	goto	u5690
 18557                           
 18558                           ;stkvar	_divisor @ sp[(-2)+-16]
 18559                           ;stkvar	_divisor @ sp[(-2)+-16]
 18560  0160FA  0EEE               	movlw	-18
 18561  0160FC  6CE3               	negf	plusw1,c
 18562  0160FE  0EEF               	movlw	-17
 18563  016100  1EE3               	comf	plusw1,f,c
 18564  016102  0EF0               	movlw	-16
 18565  016104  1EE3               	comf	plusw1,f,c
 18566  016106  0EF1               	movlw	-15
 18567  016108  1EE3               	comf	plusw1,f,c
 18568  01610A  0EF2               	movlw	-14
 18569  01610C  1EE3               	comf	plusw1,f,c
 18570  01610E  0EF3               	movlw	-13
 18571  016110  1EE3               	comf	plusw1,f,c
 18572  016112  0EF4               	movlw	-12
 18573  016114  1EE3               	comf	plusw1,f,c
 18574  016116  0EF5               	movlw	-11
 18575  016118  1EE3               	comf	plusw1,f,c
 18576  01611A  E314               	bnc	u5690
 18577  01611C  0EEF               	movlw	-17
 18578  01611E  2AE3               	incf	plusw1,f,c
 18579  016120  E311               	bnc	u5690
 18580  016122  0EF0               	movlw	-16
 18581  016124  2AE3               	incf	plusw1,f,c
 18582  016126  E30E               	bnc	u5690
 18583  016128  0EF1               	movlw	-15
 18584  01612A  2AE3               	incf	plusw1,f,c
 18585  01612C  E30B               	bnc	u5690
 18586  01612E  0EF2               	movlw	-14
 18587  016130  2AE3               	incf	plusw1,f,c
 18588  016132  E308               	bnc	u5690
 18589  016134  0EF3               	movlw	-13
 18590  016136  2AE3               	incf	plusw1,f,c
 18591  016138  E305               	bnc	u5690
 18592  01613A  0EF4               	movlw	-12
 18593  01613C  2AE3               	incf	plusw1,f,c
 18594  01613E  E302               	bnc	u5690
 18595  016140  0EF5               	movlw	-11
 18596  016142  2AE3               	incf	plusw1,f,c
 18597  016144                     u5690:
 18598                           
 18599                           ;stkvar	_divisor @ sp[(-2)+-16]
 18600  016144  0EEE               	movlw	-18
 18601  016146  50E3               	movf	plusw1,w,c
 18602  016148  E116               	bnz	u5700
 18603  01614A  0EEF               	movlw	-17
 18604  01614C  50E3               	movf	plusw1,w,c
 18605  01614E  E113               	bnz	u5700
 18606  016150  0EF0               	movlw	-16
 18607  016152  50E3               	movf	plusw1,w,c
 18608  016154  E110               	bnz	u5700
 18609  016156  0EF1               	movlw	-15
 18610  016158  50E3               	movf	plusw1,w,c
 18611  01615A  E10D               	bnz	u5700
 18612  01615C  0EF2               	movlw	-14
 18613  01615E  50E3               	movf	plusw1,w,c
 18614  016160  E10A               	bnz	u5700
 18615  016162  0EF3               	movlw	-13
 18616  016164  50E3               	movf	plusw1,w,c
 18617  016166  E107               	bnz	u5700
 18618  016168  0EF4               	movlw	-12
 18619  01616A  50E3               	movf	plusw1,w,c
 18620  01616C  E104               	bnz	u5700
 18621  01616E  0EF5               	movlw	-11
 18622  016170  50E3               	movf	plusw1,w,c
 18623  016172  B4D8               	btfsc	status,2,c
 18624  016174  D075               	goto	u5730
 18625  016176                     u5700:
 18626                           
 18627                           ;stkvar	_counter @ sp[(-2)+1]
 18628  016176  0EFF               	movlw	-1
 18629  016178  6AE3               	clrf	plusw1,c
 18630  01617A  D012               	goto	L18
 18631  01617C                     l7348:
 18632                           
 18633                           ;stkvar	_divisor @ sp[(-2)+-16]
 18634  01617C  90D8               	bcf	status,0,c
 18635  01617E  0EEE               	movlw	-18
 18636  016180  36E3               	rlcf	plusw1,f,c
 18637  016182  0EEF               	movlw	-17
 18638  016184  36E3               	rlcf	plusw1,f,c
 18639  016186  0EF0               	movlw	-16
 18640  016188  36E3               	rlcf	plusw1,f,c
 18641  01618A  0EF1               	movlw	-15
 18642  01618C  36E3               	rlcf	plusw1,f,c
 18643  01618E  0EF2               	movlw	-14
 18644  016190  36E3               	rlcf	plusw1,f,c
 18645  016192  0EF3               	movlw	-13
 18646  016194  36E3               	rlcf	plusw1,f,c
 18647  016196  0EF4               	movlw	-12
 18648  016198  36E3               	rlcf	plusw1,f,c
 18649  01619A  0EF5               	movlw	-11
 18650  01619C  36E3               	rlcf	plusw1,f,c
 18651                           
 18652                           ;stkvar	_counter @ sp[(-2)+1]
 18653  01619E  0EFF               	movlw	-1
 18654  0161A0                     L18:
 18655  0161A0  2AE3               	incf	plusw1,f,c
 18656                           
 18657                           ;stkvar	_divisor @ sp[(-2)+-16]
 18658  0161A2  0EF5               	movlw	-11
 18659  0161A4  AEE3               	btfss	plusw1,7,c
 18660  0161A6  D7EA               	goto	l7348
 18661  0161A8                     u5710:
 18662                           
 18663                           ;stkvar	_divisor @ sp[(-2)+-16]
 18664                           ;stkvar	_dividend @ sp[(-2)+-8]
 18665  0161A8  50E1               	movf	fsr1l,w,c
 18666  0161AA  0FF6               	addlw	-10
 18667  0161AC  6ED9               	movwf	fsr2l,c
 18668  0161AE  50E2               	movf	fsr1h,w,c
 18669  0161B0  6EDA               	movwf	fsr2h,c
 18670  0161B2  0EFF               	movlw	255
 18671  0161B4  22DA               	addwfc	fsr2h,f,c
 18672  0161B6  0EEE               	movlw	-18
 18673  0161B8  50E3               	movf	plusw1,w,c
 18674  0161BA  5CDE               	subwf	postinc2,w,c
 18675  0161BC  0EEF               	movlw	-17
 18676  0161BE  50E3               	movf	plusw1,w,c
 18677  0161C0  58DE               	subwfb	postinc2,w,c
 18678  0161C2  0EF0               	movlw	-16
 18679  0161C4  50E3               	movf	plusw1,w,c
 18680  0161C6  58DE               	subwfb	postinc2,w,c
 18681  0161C8  0EF1               	movlw	-15
 18682  0161CA  50E3               	movf	plusw1,w,c
 18683  0161CC  58DE               	subwfb	postinc2,w,c
 18684  0161CE  0EF2               	movlw	-14
 18685  0161D0  50E3               	movf	plusw1,w,c
 18686  0161D2  58DE               	subwfb	postinc2,w,c
 18687  0161D4  0EF3               	movlw	-13
 18688  0161D6  50E3               	movf	plusw1,w,c
 18689  0161D8  58DE               	subwfb	postinc2,w,c
 18690  0161DA  0EF4               	movlw	-12
 18691  0161DC  50E3               	movf	plusw1,w,c
 18692  0161DE  58DE               	subwfb	postinc2,w,c
 18693  0161E0  0EF5               	movlw	-11
 18694  0161E2  50E3               	movf	plusw1,w,c
 18695  0161E4  58DE               	subwfb	postinc2,w,c
 18696  0161E6  A0D8               	btfss	status,0,c
 18697  0161E8  D01F               	goto	l7356
 18698                           
 18699                           ;stkvar	_divisor @ sp[(-2)+-16]
 18700                           ;stkvar	_dividend @ sp[(-2)+-8]
 18701  0161EA  50E1               	movf	fsr1l,w,c
 18702  0161EC  0FF6               	addlw	-10
 18703  0161EE  6ED9               	movwf	fsr2l,c
 18704  0161F0  50E2               	movf	fsr1h,w,c
 18705  0161F2  6EDA               	movwf	fsr2h,c
 18706  0161F4  0EFF               	movlw	255
 18707  0161F6  22DA               	addwfc	fsr2h,f,c
 18708  0161F8  0EEE               	movlw	-18
 18709  0161FA  50E3               	movf	plusw1,w,c
 18710  0161FC  5EDE               	subwf	postinc2,f,c
 18711  0161FE  0EEF               	movlw	-17
 18712  016200  50E3               	movf	plusw1,w,c
 18713  016202  5ADE               	subwfb	postinc2,f,c
 18714  016204  0EF0               	movlw	-16
 18715  016206  50E3               	movf	plusw1,w,c
 18716  016208  5ADE               	subwfb	postinc2,f,c
 18717  01620A  0EF1               	movlw	-15
 18718  01620C  50E3               	movf	plusw1,w,c
 18719  01620E  5ADE               	subwfb	postinc2,f,c
 18720  016210  0EF2               	movlw	-14
 18721  016212  50E3               	movf	plusw1,w,c
 18722  016214  5ADE               	subwfb	postinc2,f,c
 18723  016216  0EF3               	movlw	-13
 18724  016218  50E3               	movf	plusw1,w,c
 18725  01621A  5ADE               	subwfb	postinc2,f,c
 18726  01621C  0EF4               	movlw	-12
 18727  01621E  50E3               	movf	plusw1,w,c
 18728  016220  5ADE               	subwfb	postinc2,f,c
 18729  016222  0EF5               	movlw	-11
 18730  016224  50E3               	movf	plusw1,w,c
 18731  016226  5ADE               	subwfb	postinc2,f,c
 18732  016228                     l7356:
 18733                           
 18734                           ;stkvar	_divisor @ sp[(-2)+-16]
 18735  016228  90D8               	bcf	status,0,c
 18736  01622A  0EF5               	movlw	-11
 18737  01622C  32E3               	rrcf	plusw1,f,c
 18738  01622E  0EF4               	movlw	-12
 18739  016230  32E3               	rrcf	plusw1,f,c
 18740  016232  0EF3               	movlw	-13
 18741  016234  32E3               	rrcf	plusw1,f,c
 18742  016236  0EF2               	movlw	-14
 18743  016238  32E3               	rrcf	plusw1,f,c
 18744  01623A  0EF1               	movlw	-15
 18745  01623C  32E3               	rrcf	plusw1,f,c
 18746  01623E  0EF0               	movlw	-16
 18747  016240  32E3               	rrcf	plusw1,f,c
 18748  016242  0EEF               	movlw	-17
 18749  016244  32E3               	rrcf	plusw1,f,c
 18750  016246  0EEE               	movlw	-18
 18751  016248  32E3               	rrcf	plusw1,f,c
 18752                           
 18753                           ;stkvar	_counter @ sp[(-2)+1]
 18754  01624A  0EFF               	movlw	-1
 18755  01624C  50E3               	movf	plusw1,w,c
 18756  01624E  6E01               	movwf	btemp^0,c
 18757  016250  0E01               	movlw	1
 18758  016252  5E01               	subwf	btemp^0,f,c
 18759  016254  0EFF               	movlw	-1
 18760  016256  0060  F007  FFE3   	movff	btemp,plusw1
 18761  01625C  A4D8               	btfss	status,2,c
 18762  01625E  D7A4               	goto	u5710
 18763  016260                     u5730:
 18764                           
 18765                           ;stkvar	_sign @ sp[(-2)+0]
 18766  016260  0EFE               	movlw	-2
 18767  016262  50E3               	movf	plusw1,w,c
 18768  016264  B4D8               	btfsc	status,2,c
 18769  016266  D025               	goto	u5750
 18770                           
 18771                           ;stkvar	_dividend @ sp[(-2)+-8]
 18772                           ;stkvar	_dividend @ sp[(-2)+-8]
 18773  016268  0EF6               	movlw	-10
 18774  01626A  6CE3               	negf	plusw1,c
 18775  01626C  0EF7               	movlw	-9
 18776  01626E  1EE3               	comf	plusw1,f,c
 18777  016270  0EF8               	movlw	-8
 18778  016272  1EE3               	comf	plusw1,f,c
 18779  016274  0EF9               	movlw	-7
 18780  016276  1EE3               	comf	plusw1,f,c
 18781  016278  0EFA               	movlw	-6
 18782  01627A  1EE3               	comf	plusw1,f,c
 18783  01627C  0EFB               	movlw	-5
 18784  01627E  1EE3               	comf	plusw1,f,c
 18785  016280  0EFC               	movlw	-4
 18786  016282  1EE3               	comf	plusw1,f,c
 18787  016284  0EFD               	movlw	-3
 18788  016286  1EE3               	comf	plusw1,f,c
 18789  016288  E314               	bnc	u5750
 18790  01628A  0EF7               	movlw	-9
 18791  01628C  2AE3               	incf	plusw1,f,c
 18792  01628E  E311               	bnc	u5750
 18793  016290  0EF8               	movlw	-8
 18794  016292  2AE3               	incf	plusw1,f,c
 18795  016294  E30E               	bnc	u5750
 18796  016296  0EF9               	movlw	-7
 18797  016298  2AE3               	incf	plusw1,f,c
 18798  01629A  E30B               	bnc	u5750
 18799  01629C  0EFA               	movlw	-6
 18800  01629E  2AE3               	incf	plusw1,f,c
 18801  0162A0  E308               	bnc	u5750
 18802  0162A2  0EFB               	movlw	-5
 18803  0162A4  2AE3               	incf	plusw1,f,c
 18804  0162A6  E305               	bnc	u5750
 18805  0162A8  0EFC               	movlw	-4
 18806  0162AA  2AE3               	incf	plusw1,f,c
 18807  0162AC  E302               	bnc	u5750
 18808  0162AE  0EFD               	movlw	-3
 18809  0162B0  2AE3               	incf	plusw1,f,c
 18810  0162B2                     u5750:
 18811                           
 18812                           ;stkvar	_dividend @ sp[(-2)+-8]
 18813  0162B2  0EF6               	movlw	246
 18814  0162B4  24E1               	addwf	fsr1l,w,c
 18815  0162B6  6ED9               	movwf	fsr2l,c
 18816  0162B8  0EFF               	movlw	255
 18817  0162BA  20E2               	addwfc	fsr1h,w,c
 18818  0162BC  6EDA               	movwf	fsr2h,c
 18819                           
 18820                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18821  0162BE  0E08               	movlw	8
 18822  0162C0  6E01               	movwf	btemp^0,c
 18823  0162C2  0EF6               	movlw	-10
 18824  0162C4                     us576999:
 18825  0162C4  006F FF7B FFE3     	movff	postinc2,plusw1
 18826  0162CA  28E8               	incf	wreg,w,c
 18827  0162CC  2E01               	decfsz	btemp^0,f,c
 18828  0162CE  D7FA               	bra	us576999
 18829                           
 18830                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18831  0162D0  52E5               	movf	postdec1,f,c
 18832  0162D2  52E5               	movf	postdec1,f,c
 18833  0162D4  0012               	return		;funcret
 18834  0162D6                     __end_of___aomod:
 18835                           	opt callstack 0
 18836                           
 18837 ;; *************** function ___aodiv *****************
 18838 ;; Defined at:
 18839 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18840 ;; Parameters:    Size  Location     Type
 18841 ;;  dividend        8  [STACK] long long 
 18842 ;;  divisor         8  [STACK] long long 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;  quotient        8  [STACK] long long 
 18845 ;;  sign            1  [STACK] unsigned char 
 18846 ;;  counter         1  [STACK] unsigned char 
 18847 ;; Return value:  Size  Location     Type
 18848 ;;                  8  [STACK] long long 
 18849 ;; Registers used:
 18850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18851 ;; Tracked objects:
 18852 ;;		On entry : 0/3
 18853 ;;		On exit  : 0/0
 18854 ;;		Unchanged: 0/0
 18855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18860 ;;Total ram usage:        0 bytes
 18861 ;; Hardware stack levels used:    1
 18862 ;; Hardware stack levels required when called:   15
 18863 ;; This function calls:
 18864 ;;		Nothing
 18865 ;; This function is called by:
 18866 ;;		_dtoa
 18867 ;; This function uses a reentrant model
 18868 ;;
 18869                           
 18870                           	psect	text66
 18871  015BA2                     __ptext66:
 18872                           	opt callstack 0
 18873  015BA2                     ___aodiv:
 18874                           	opt callstack 0
 18875                           
 18876                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18877  015BA2  0E0A               	movlw	10
 18878  015BA4  26E1               	addwf	fsr1l,f,c
 18879  015BA6  0E00               	movlw	0
 18880  015BA8  22E2               	addwfc	fsr1h,f,c
 18881                           
 18882                           ;stkvar	_sign @ sp[(-10)+8]
 18883                           
 18884                           ;incstack = 0
 18885 ;; hardware stack exceeded
 18886  015BAA  0EFE               	movlw	-2
 18887  015BAC  6AE3               	clrf	plusw1,c
 18888                           
 18889                           ;stkvar	_divisor @ sp[(-10)+-16]
 18890  015BAE  0EED               	movlw	-19
 18891  015BB0  AEE3               	btfss	plusw1,7,c
 18892  015BB2  D028               	goto	l7296
 18893                           
 18894                           ;stkvar	_divisor @ sp[(-10)+-16]
 18895                           ;stkvar	_divisor @ sp[(-10)+-16]
 18896  015BB4  0EE6               	movlw	-26
 18897  015BB6  6CE3               	negf	plusw1,c
 18898  015BB8  0EE7               	movlw	-25
 18899  015BBA  1EE3               	comf	plusw1,f,c
 18900  015BBC  0EE8               	movlw	-24
 18901  015BBE  1EE3               	comf	plusw1,f,c
 18902  015BC0  0EE9               	movlw	-23
 18903  015BC2  1EE3               	comf	plusw1,f,c
 18904  015BC4  0EEA               	movlw	-22
 18905  015BC6  1EE3               	comf	plusw1,f,c
 18906  015BC8  0EEB               	movlw	-21
 18907  015BCA  1EE3               	comf	plusw1,f,c
 18908  015BCC  0EEC               	movlw	-20
 18909  015BCE  1EE3               	comf	plusw1,f,c
 18910  015BD0  0EED               	movlw	-19
 18911  015BD2  1EE3               	comf	plusw1,f,c
 18912  015BD4  E314               	bnc	u5550
 18913  015BD6  0EE7               	movlw	-25
 18914  015BD8  2AE3               	incf	plusw1,f,c
 18915  015BDA  E311               	bnc	u5550
 18916  015BDC  0EE8               	movlw	-24
 18917  015BDE  2AE3               	incf	plusw1,f,c
 18918  015BE0  E30E               	bnc	u5550
 18919  015BE2  0EE9               	movlw	-23
 18920  015BE4  2AE3               	incf	plusw1,f,c
 18921  015BE6  E30B               	bnc	u5550
 18922  015BE8  0EEA               	movlw	-22
 18923  015BEA  2AE3               	incf	plusw1,f,c
 18924  015BEC  E308               	bnc	u5550
 18925  015BEE  0EEB               	movlw	-21
 18926  015BF0  2AE3               	incf	plusw1,f,c
 18927  015BF2  E305               	bnc	u5550
 18928  015BF4  0EEC               	movlw	-20
 18929  015BF6  2AE3               	incf	plusw1,f,c
 18930  015BF8  E302               	bnc	u5550
 18931  015BFA  0EED               	movlw	-19
 18932  015BFC  2AE3               	incf	plusw1,f,c
 18933  015BFE                     u5550:
 18934                           
 18935                           ;stkvar	_sign @ sp[(-10)+8]
 18936  015BFE  0EFE               	movlw	-2
 18937  015C00  6AE3               	clrf	plusw1,c
 18938  015C02  2AE3               	incf	plusw1,f,c
 18939  015C04                     l7296:
 18940                           
 18941                           ;stkvar	_dividend @ sp[(-10)+-8]
 18942  015C04  0EF5               	movlw	-11
 18943  015C06  AEE3               	btfss	plusw1,7,c
 18944  015C08  D027               	goto	l7302
 18945                           
 18946                           ;stkvar	_dividend @ sp[(-10)+-8]
 18947                           ;stkvar	_dividend @ sp[(-10)+-8]
 18948  015C0A  0EEE               	movlw	-18
 18949  015C0C  6CE3               	negf	plusw1,c
 18950  015C0E  0EEF               	movlw	-17
 18951  015C10  1EE3               	comf	plusw1,f,c
 18952  015C12  0EF0               	movlw	-16
 18953  015C14  1EE3               	comf	plusw1,f,c
 18954  015C16  0EF1               	movlw	-15
 18955  015C18  1EE3               	comf	plusw1,f,c
 18956  015C1A  0EF2               	movlw	-14
 18957  015C1C  1EE3               	comf	plusw1,f,c
 18958  015C1E  0EF3               	movlw	-13
 18959  015C20  1EE3               	comf	plusw1,f,c
 18960  015C22  0EF4               	movlw	-12
 18961  015C24  1EE3               	comf	plusw1,f,c
 18962  015C26  0EF5               	movlw	-11
 18963  015C28  1EE3               	comf	plusw1,f,c
 18964  015C2A  E314               	bnc	u5570
 18965  015C2C  0EEF               	movlw	-17
 18966  015C2E  2AE3               	incf	plusw1,f,c
 18967  015C30  E311               	bnc	u5570
 18968  015C32  0EF0               	movlw	-16
 18969  015C34  2AE3               	incf	plusw1,f,c
 18970  015C36  E30E               	bnc	u5570
 18971  015C38  0EF1               	movlw	-15
 18972  015C3A  2AE3               	incf	plusw1,f,c
 18973  015C3C  E30B               	bnc	u5570
 18974  015C3E  0EF2               	movlw	-14
 18975  015C40  2AE3               	incf	plusw1,f,c
 18976  015C42  E308               	bnc	u5570
 18977  015C44  0EF3               	movlw	-13
 18978  015C46  2AE3               	incf	plusw1,f,c
 18979  015C48  E305               	bnc	u5570
 18980  015C4A  0EF4               	movlw	-12
 18981  015C4C  2AE3               	incf	plusw1,f,c
 18982  015C4E  E302               	bnc	u5570
 18983  015C50  0EF5               	movlw	-11
 18984  015C52  2AE3               	incf	plusw1,f,c
 18985  015C54                     u5570:
 18986                           
 18987                           ;stkvar	_sign @ sp[(-10)+8]
 18988  015C54  0EFE               	movlw	-2
 18989  015C56  70E3               	btg	plusw1,0,c
 18990  015C58                     l7302:
 18991                           
 18992                           ;stkvar	_quotient @ sp[(-10)+0]
 18993  015C58  0E07               	movlw	7
 18994  015C5A  6E01               	movwf	btemp^0,c
 18995  015C5C  0EF6               	movlw	-10
 18996  015C5E                     u5581:
 18997  015C5E  6AE3               	clrf	plusw1,c
 18998  015C60  2AE8               	incf	wreg,f,c
 18999  015C62  0601               	decf	btemp^0,f,c
 19000  015C64  E2FC               	bc	u5581
 19001                           
 19002                           ;stkvar	_divisor @ sp[(-10)+-16]
 19003  015C66  0EE6               	movlw	-26
 19004  015C68  50E3               	movf	plusw1,w,c
 19005  015C6A  E116               	bnz	u5590
 19006  015C6C  0EE7               	movlw	-25
 19007  015C6E  50E3               	movf	plusw1,w,c
 19008  015C70  E113               	bnz	u5590
 19009  015C72  0EE8               	movlw	-24
 19010  015C74  50E3               	movf	plusw1,w,c
 19011  015C76  E110               	bnz	u5590
 19012  015C78  0EE9               	movlw	-23
 19013  015C7A  50E3               	movf	plusw1,w,c
 19014  015C7C  E10D               	bnz	u5590
 19015  015C7E  0EEA               	movlw	-22
 19016  015C80  50E3               	movf	plusw1,w,c
 19017  015C82  E10A               	bnz	u5590
 19018  015C84  0EEB               	movlw	-21
 19019  015C86  50E3               	movf	plusw1,w,c
 19020  015C88  E107               	bnz	u5590
 19021  015C8A  0EEC               	movlw	-20
 19022  015C8C  50E3               	movf	plusw1,w,c
 19023  015C8E  E104               	bnz	u5590
 19024  015C90  0EED               	movlw	-19
 19025  015C92  50E3               	movf	plusw1,w,c
 19026  015C94  B4D8               	btfsc	status,2,c
 19027  015C96  D088               	goto	u5620
 19028  015C98                     u5590:
 19029                           
 19030                           ;stkvar	_counter @ sp[(-10)+9]
 19031  015C98  0EFF               	movlw	-1
 19032  015C9A  6AE3               	clrf	plusw1,c
 19033  015C9C  D012               	goto	L19
 19034  015C9E                     l7308:
 19035                           
 19036                           ;stkvar	_divisor @ sp[(-10)+-16]
 19037  015C9E  90D8               	bcf	status,0,c
 19038  015CA0  0EE6               	movlw	-26
 19039  015CA2  36E3               	rlcf	plusw1,f,c
 19040  015CA4  0EE7               	movlw	-25
 19041  015CA6  36E3               	rlcf	plusw1,f,c
 19042  015CA8  0EE8               	movlw	-24
 19043  015CAA  36E3               	rlcf	plusw1,f,c
 19044  015CAC  0EE9               	movlw	-23
 19045  015CAE  36E3               	rlcf	plusw1,f,c
 19046  015CB0  0EEA               	movlw	-22
 19047  015CB2  36E3               	rlcf	plusw1,f,c
 19048  015CB4  0EEB               	movlw	-21
 19049  015CB6  36E3               	rlcf	plusw1,f,c
 19050  015CB8  0EEC               	movlw	-20
 19051  015CBA  36E3               	rlcf	plusw1,f,c
 19052  015CBC  0EED               	movlw	-19
 19053  015CBE  36E3               	rlcf	plusw1,f,c
 19054                           
 19055                           ;stkvar	_counter @ sp[(-10)+9]
 19056  015CC0  0EFF               	movlw	-1
 19057  015CC2                     L19:
 19058  015CC2  2AE3               	incf	plusw1,f,c
 19059                           
 19060                           ;stkvar	_divisor @ sp[(-10)+-16]
 19061  015CC4  0EED               	movlw	-19
 19062  015CC6  AEE3               	btfss	plusw1,7,c
 19063  015CC8  D7EA               	goto	l7308
 19064  015CCA                     u5600:
 19065                           
 19066                           ;stkvar	_quotient @ sp[(-10)+0]
 19067  015CCA  90D8               	bcf	status,0,c
 19068  015CCC  0EF6               	movlw	-10
 19069  015CCE  36E3               	rlcf	plusw1,f,c
 19070  015CD0  0EF7               	movlw	-9
 19071  015CD2  36E3               	rlcf	plusw1,f,c
 19072  015CD4  0EF8               	movlw	-8
 19073  015CD6  36E3               	rlcf	plusw1,f,c
 19074  015CD8  0EF9               	movlw	-7
 19075  015CDA  36E3               	rlcf	plusw1,f,c
 19076  015CDC  0EFA               	movlw	-6
 19077  015CDE  36E3               	rlcf	plusw1,f,c
 19078  015CE0  0EFB               	movlw	-5
 19079  015CE2  36E3               	rlcf	plusw1,f,c
 19080  015CE4  0EFC               	movlw	-4
 19081  015CE6  36E3               	rlcf	plusw1,f,c
 19082  015CE8  0EFD               	movlw	-3
 19083  015CEA  36E3               	rlcf	plusw1,f,c
 19084                           
 19085                           ;stkvar	_divisor @ sp[(-10)+-16]
 19086                           ;stkvar	_dividend @ sp[(-10)+-8]
 19087  015CEC  50E1               	movf	fsr1l,w,c
 19088  015CEE  0FEE               	addlw	-18
 19089  015CF0  6ED9               	movwf	fsr2l,c
 19090  015CF2  50E2               	movf	fsr1h,w,c
 19091  015CF4  6EDA               	movwf	fsr2h,c
 19092  015CF6  0EFF               	movlw	255
 19093  015CF8  22DA               	addwfc	fsr2h,f,c
 19094  015CFA  0EE6               	movlw	-26
 19095  015CFC  50E3               	movf	plusw1,w,c
 19096  015CFE  5CDE               	subwf	postinc2,w,c
 19097  015D00  0EE7               	movlw	-25
 19098  015D02  50E3               	movf	plusw1,w,c
 19099  015D04  58DE               	subwfb	postinc2,w,c
 19100  015D06  0EE8               	movlw	-24
 19101  015D08  50E3               	movf	plusw1,w,c
 19102  015D0A  58DE               	subwfb	postinc2,w,c
 19103  015D0C  0EE9               	movlw	-23
 19104  015D0E  50E3               	movf	plusw1,w,c
 19105  015D10  58DE               	subwfb	postinc2,w,c
 19106  015D12  0EEA               	movlw	-22
 19107  015D14  50E3               	movf	plusw1,w,c
 19108  015D16  58DE               	subwfb	postinc2,w,c
 19109  015D18  0EEB               	movlw	-21
 19110  015D1A  50E3               	movf	plusw1,w,c
 19111  015D1C  58DE               	subwfb	postinc2,w,c
 19112  015D1E  0EEC               	movlw	-20
 19113  015D20  50E3               	movf	plusw1,w,c
 19114  015D22  58DE               	subwfb	postinc2,w,c
 19115  015D24  0EED               	movlw	-19
 19116  015D26  50E3               	movf	plusw1,w,c
 19117  015D28  58DE               	subwfb	postinc2,w,c
 19118  015D2A  A0D8               	btfss	status,0,c
 19119  015D2C  D021               	goto	l7320
 19120                           
 19121                           ;stkvar	_divisor @ sp[(-10)+-16]
 19122                           ;stkvar	_dividend @ sp[(-10)+-8]
 19123  015D2E  50E1               	movf	fsr1l,w,c
 19124  015D30  0FEE               	addlw	-18
 19125  015D32  6ED9               	movwf	fsr2l,c
 19126  015D34  50E2               	movf	fsr1h,w,c
 19127  015D36  6EDA               	movwf	fsr2h,c
 19128  015D38  0EFF               	movlw	255
 19129  015D3A  22DA               	addwfc	fsr2h,f,c
 19130  015D3C  0EE6               	movlw	-26
 19131  015D3E  50E3               	movf	plusw1,w,c
 19132  015D40  5EDE               	subwf	postinc2,f,c
 19133  015D42  0EE7               	movlw	-25
 19134  015D44  50E3               	movf	plusw1,w,c
 19135  015D46  5ADE               	subwfb	postinc2,f,c
 19136  015D48  0EE8               	movlw	-24
 19137  015D4A  50E3               	movf	plusw1,w,c
 19138  015D4C  5ADE               	subwfb	postinc2,f,c
 19139  015D4E  0EE9               	movlw	-23
 19140  015D50  50E3               	movf	plusw1,w,c
 19141  015D52  5ADE               	subwfb	postinc2,f,c
 19142  015D54  0EEA               	movlw	-22
 19143  015D56  50E3               	movf	plusw1,w,c
 19144  015D58  5ADE               	subwfb	postinc2,f,c
 19145  015D5A  0EEB               	movlw	-21
 19146  015D5C  50E3               	movf	plusw1,w,c
 19147  015D5E  5ADE               	subwfb	postinc2,f,c
 19148  015D60  0EEC               	movlw	-20
 19149  015D62  50E3               	movf	plusw1,w,c
 19150  015D64  5ADE               	subwfb	postinc2,f,c
 19151  015D66  0EED               	movlw	-19
 19152  015D68  50E3               	movf	plusw1,w,c
 19153  015D6A  5ADE               	subwfb	postinc2,f,c
 19154                           
 19155                           ;stkvar	_quotient @ sp[(-10)+0]
 19156  015D6C  0EF6               	movlw	-10
 19157  015D6E  80E3               	bsf	plusw1,0,c
 19158  015D70                     l7320:
 19159                           
 19160                           ;stkvar	_divisor @ sp[(-10)+-16]
 19161  015D70  90D8               	bcf	status,0,c
 19162  015D72  0EED               	movlw	-19
 19163  015D74  32E3               	rrcf	plusw1,f,c
 19164  015D76  0EEC               	movlw	-20
 19165  015D78  32E3               	rrcf	plusw1,f,c
 19166  015D7A  0EEB               	movlw	-21
 19167  015D7C  32E3               	rrcf	plusw1,f,c
 19168  015D7E  0EEA               	movlw	-22
 19169  015D80  32E3               	rrcf	plusw1,f,c
 19170  015D82  0EE9               	movlw	-23
 19171  015D84  32E3               	rrcf	plusw1,f,c
 19172  015D86  0EE8               	movlw	-24
 19173  015D88  32E3               	rrcf	plusw1,f,c
 19174  015D8A  0EE7               	movlw	-25
 19175  015D8C  32E3               	rrcf	plusw1,f,c
 19176  015D8E  0EE6               	movlw	-26
 19177  015D90  32E3               	rrcf	plusw1,f,c
 19178                           
 19179                           ;stkvar	_counter @ sp[(-10)+9]
 19180  015D92  0EFF               	movlw	-1
 19181  015D94  50E3               	movf	plusw1,w,c
 19182  015D96  6E01               	movwf	btemp^0,c
 19183  015D98  0E01               	movlw	1
 19184  015D9A  5E01               	subwf	btemp^0,f,c
 19185  015D9C  0EFF               	movlw	-1
 19186  015D9E  0060  F007  FFE3   	movff	btemp,plusw1
 19187  015DA4  A4D8               	btfss	status,2,c
 19188  015DA6  D791               	goto	u5600
 19189  015DA8                     u5620:
 19190                           
 19191                           ;stkvar	_sign @ sp[(-10)+8]
 19192  015DA8  0EFE               	movlw	-2
 19193  015DAA  50E3               	movf	plusw1,w,c
 19194  015DAC  B4D8               	btfsc	status,2,c
 19195  015DAE  D025               	goto	u5640
 19196                           
 19197                           ;stkvar	_quotient @ sp[(-10)+0]
 19198                           ;stkvar	_quotient @ sp[(-10)+0]
 19199  015DB0  0EF6               	movlw	-10
 19200  015DB2  6CE3               	negf	plusw1,c
 19201  015DB4  0EF7               	movlw	-9
 19202  015DB6  1EE3               	comf	plusw1,f,c
 19203  015DB8  0EF8               	movlw	-8
 19204  015DBA  1EE3               	comf	plusw1,f,c
 19205  015DBC  0EF9               	movlw	-7
 19206  015DBE  1EE3               	comf	plusw1,f,c
 19207  015DC0  0EFA               	movlw	-6
 19208  015DC2  1EE3               	comf	plusw1,f,c
 19209  015DC4  0EFB               	movlw	-5
 19210  015DC6  1EE3               	comf	plusw1,f,c
 19211  015DC8  0EFC               	movlw	-4
 19212  015DCA  1EE3               	comf	plusw1,f,c
 19213  015DCC  0EFD               	movlw	-3
 19214  015DCE  1EE3               	comf	plusw1,f,c
 19215  015DD0  E314               	bnc	u5640
 19216  015DD2  0EF7               	movlw	-9
 19217  015DD4  2AE3               	incf	plusw1,f,c
 19218  015DD6  E311               	bnc	u5640
 19219  015DD8  0EF8               	movlw	-8
 19220  015DDA  2AE3               	incf	plusw1,f,c
 19221  015DDC  E30E               	bnc	u5640
 19222  015DDE  0EF9               	movlw	-7
 19223  015DE0  2AE3               	incf	plusw1,f,c
 19224  015DE2  E30B               	bnc	u5640
 19225  015DE4  0EFA               	movlw	-6
 19226  015DE6  2AE3               	incf	plusw1,f,c
 19227  015DE8  E308               	bnc	u5640
 19228  015DEA  0EFB               	movlw	-5
 19229  015DEC  2AE3               	incf	plusw1,f,c
 19230  015DEE  E305               	bnc	u5640
 19231  015DF0  0EFC               	movlw	-4
 19232  015DF2  2AE3               	incf	plusw1,f,c
 19233  015DF4  E302               	bnc	u5640
 19234  015DF6  0EFD               	movlw	-3
 19235  015DF8  2AE3               	incf	plusw1,f,c
 19236  015DFA                     u5640:
 19237                           
 19238                           ;stkvar	_quotient @ sp[(-10)+0]
 19239  015DFA  0EF6               	movlw	246
 19240  015DFC  24E1               	addwf	fsr1l,w,c
 19241  015DFE  6ED9               	movwf	fsr2l,c
 19242  015E00  0EFF               	movlw	255
 19243  015E02  20E2               	addwfc	fsr1h,w,c
 19244  015E04  6EDA               	movwf	fsr2h,c
 19245                           
 19246                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19247  015E06  0E08               	movlw	8
 19248  015E08  6E01               	movwf	btemp^0,c
 19249  015E0A  0EEE               	movlw	-18
 19250  015E0C                     us565999:
 19251  015E0C  006F FF7B FFE3     	movff	postinc2,plusw1
 19252  015E12  28E8               	incf	wreg,w,c
 19253  015E14  2E01               	decfsz	btemp^0,f,c
 19254  015E16  D7FA               	bra	us565999
 19255                           
 19256                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19257  015E18  0EF6               	movlw	246
 19258  015E1A  26E1               	addwf	fsr1l,f,c
 19259  015E1C  0EFF               	movlw	255
 19260  015E1E  22E2               	addwfc	fsr1h,f,c
 19261  015E20  0012               	return		;funcret
 19262  015E22                     __end_of___aodiv:
 19263                           	opt callstack 0
 19264                           
 19265 ;; *************** function _ctoa *****************
 19266 ;; Defined at:
 19267 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19268 ;; Parameters:    Size  Location     Type
 19269 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19270 ;;		 -> f(6), NULL(0), 
 19271 ;;  c               1  [STACK] unsigned char 
 19272 ;; Auto vars:     Size  Location     Type
 19273 ;;  w               2  [STACK] int 
 19274 ;;  l               2    0        int 
 19275 ;; Return value:  Size  Location     Type
 19276 ;;                  2  [STACK] int 
 19277 ;; Registers used:
 19278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19279 ;; Tracked objects:
 19280 ;;		On entry : 0/0
 19281 ;;		On exit  : 0/0
 19282 ;;		Unchanged: 0/0
 19283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19288 ;;Total ram usage:        0 bytes
 19289 ;; Hardware stack levels used:    1
 19290 ;; Hardware stack levels required when called:   20
 19291 ;; This function calls:
 19292 ;;		_pad
 19293 ;; This function is called by:
 19294 ;;		_vfpfcnvrt
 19295 ;; This function uses a reentrant model
 19296 ;;
 19297                           
 19298                           	psect	text67
 19299  018920                     __ptext67:
 19300                           	opt callstack 0
 19301  018920                     _ctoa:
 19302                           	opt callstack 0
 19303                           
 19304                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19305  018920  52E6               	movf	postinc1,f,c
 19306  018922  52E6               	movf	postinc1,f,c
 19307                           
 19308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19309                           
 19310                           ;incstack = 0
 19311 ;; hardware stack exceeded
 19312  018924  5021               	movf	_width^0,w,c
 19313  018926  1022               	iorwf	(_width+1)^0,w,c
 19314  018928  A4D8               	btfss	status,2,c
 19315  01892A  D009               	goto	l10542
 19316                           
 19317                           ;stkvar	_w @ sp[(-2)+0]
 19318  01892C  0EFE               	movlw	-2
 19319  01892E  0060  F087  FFE3   	movff	_width,plusw1
 19320  018934  0EFF               	movlw	-1
 19321  018936  0060  F08B  FFE3   	movff	_width+1,plusw1
 19322  01893C  D016               	goto	l10544
 19323  01893E                     l10542:
 19324  01893E  0EFF               	movlw	255
 19325  018940  6E0B               	movwf	(btemp+10)^0,c
 19326  018942  0EFF               	movlw	255
 19327  018944  6E0C               	movwf	(btemp+11)^0,c
 19328  018946  0060  F084  F009   	movff	_width,btemp+8
 19329  01894C  0060  F088  F00A   	movff	_width+1,btemp+9
 19330  018952  500B               	movf	(btemp+10)^0,w,c
 19331  018954  2609               	addwf	(btemp+8)^0,f,c
 19332  018956  500C               	movf	(btemp+11)^0,w,c
 19333  018958  220A               	addwfc	(btemp+9)^0,f,c
 19334                           
 19335                           ;stkvar	_w @ sp[(-2)+0]
 19336  01895A  0EFE               	movlw	-2
 19337  01895C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19338  018962  0EFF               	movlw	-1
 19339  018964  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19340  01896A                     l10544:
 19341                           
 19342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19343                           ;stkvar	_c @ sp[(-2)+-3]
 19344  01896A  0EFB               	movlw	-5
 19345  01896C  006F FF8C  F394    	movff	plusw1,_dbuf
 19346                           
 19347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19348  018972  0103               	movlb	3	; () banked
 19349  018974  6B95               	clrf	(_dbuf+1)& (0+255),b
 19350                           
 19351                           ; BSR set to: 3
 19352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19353                           ;stkvar	_w @ sp[(-2)+0]
 19354  018976  0EFE               	movlw	-2
 19355  018978  006F FF8F FFE6     	movff	plusw1,postinc1
 19356  01897E  006F FF8F FFE6     	movff	plusw1,postinc1
 19357  018984  0E94               	movlw	low _dbuf
 19358  018986  6EE6               	movwf	postinc1,c
 19359  018988  0E03               	movlw	high _dbuf
 19360  01898A  6EE6               	movwf	postinc1,c
 19361                           
 19362                           ;stkvar	_fp @ sp[(-6)+-2]
 19363  01898C  0EF8               	movlw	-8
 19364  01898E  006F FF8F FFE6     	movff	plusw1,postinc1
 19365  018994  006F FF8F FFE6     	movff	plusw1,postinc1
 19366  01899A  ECC9  F0BC         	call	_pad	;wreg free
 19367                           
 19368                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19369  01899E  0EFB               	movlw	251
 19370  0189A0  26E1               	addwf	fsr1l,f,c
 19371  0189A2  0EFF               	movlw	255
 19372  0189A4  22E2               	addwfc	fsr1h,f,c
 19373  0189A6  0012               	return		;funcret
 19374  0189A8                     __end_of_ctoa:
 19375                           	opt callstack 0
 19376                           
 19377 ;; *************** function _pad *****************
 19378 ;; Defined at:
 19379 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19380 ;; Parameters:    Size  Location     Type
 19381 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19382 ;;		 -> f(6), NULL(0), 
 19383 ;;  buf             2  [STACK] PTR unsigned char 
 19384 ;;		 -> dbuf(80), 
 19385 ;;  p               2  [STACK] int 
 19386 ;; Auto vars:     Size  Location     Type
 19387 ;;  w               2  [STACK] int 
 19388 ;;  i               2  [STACK] int 
 19389 ;; Return value:  Size  Location     Type
 19390 ;;                  2  [STACK] int 
 19391 ;; Registers used:
 19392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19393 ;; Tracked objects:
 19394 ;;		On entry : 0/3
 19395 ;;		On exit  : 0/0
 19396 ;;		Unchanged: 0/0
 19397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19402 ;;Total ram usage:        0 bytes
 19403 ;; Hardware stack levels used:    1
 19404 ;; Hardware stack levels required when called:   19
 19405 ;; This function calls:
 19406 ;;		_fputc
 19407 ;;		_fputs
 19408 ;;		_strlen
 19409 ;; This function is called by:
 19410 ;;		_ctoa
 19411 ;;		_dtoa
 19412 ;;		_efgtoa
 19413 ;;		_xtoa
 19414 ;; This function uses a reentrant model
 19415 ;;
 19416                           
 19417                           	psect	text68
 19418  017992                     __ptext68:
 19419                           	opt callstack 0
 19420  017992                     _pad:
 19421                           	opt callstack 0
 19422                           
 19423                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19424  017992  52E6               	movf	postinc1,f,c
 19425  017994  52E6               	movf	postinc1,f,c
 19426  017996  52E6               	movf	postinc1,f,c
 19427  017998  52E6               	movf	postinc1,f,c
 19428                           
 19429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19430                           
 19431                           ;incstack = 0
 19432 ;; hardware stack exceeded
 19433  01799A  A025               	btfss	_flags^0,0,c
 19434  01799C  D010               	goto	l10464
 19435                           
 19436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19437                           ;stkvar	_fp @ sp[(-4)+-2]
 19438  01799E  0EFA               	movlw	-6
 19439  0179A0  006F FF8F FFE6     	movff	plusw1,postinc1
 19440  0179A6  006F FF8F FFE6     	movff	plusw1,postinc1
 19441                           
 19442                           ;stkvar	_buf @ sp[(-6)+-4]
 19443  0179AC  0EF6               	movlw	-10
 19444  0179AE  006F FF8F FFE6     	movff	plusw1,postinc1
 19445  0179B4  006F FF8F FFE6     	movff	plusw1,postinc1
 19446  0179BA  EC1F  F0C3         	call	_fputs	;wreg free
 19447  0179BE                     l10464:
 19448                           
 19449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19450                           ;stkvar	_p @ sp[(-4)+-6]
 19451  0179BE  0EF7               	movlw	-9
 19452  0179C0  BEE3               	btfsc	plusw1,7,c
 19453  0179C2  D011               	goto	l10468
 19454                           
 19455                           ;stkvar	_p @ sp[(-4)+-6]
 19456                           ;stkvar	_w @ sp[(-4)+0]
 19457  0179C4  0EF6               	movlw	-10
 19458  0179C6  006F FF8C  F001    	movff	plusw1,btemp
 19459  0179CC  0EFC               	movlw	-4
 19460  0179CE  0060  F007  FFE3   	movff	btemp,plusw1
 19461  0179D4  0EF7               	movlw	-9
 19462  0179D6  006F FF8C  F001    	movff	plusw1,btemp
 19463  0179DC  0EFD               	movlw	-3
 19464  0179DE  0060  F007  FFE3   	movff	btemp,plusw1
 19465  0179E4  D004               	goto	l1999
 19466  0179E6                     l10468:
 19467                           
 19468                           ;stkvar	_w @ sp[(-4)+0]
 19469  0179E6  0EFC               	movlw	-4
 19470  0179E8  6AE3               	clrf	plusw1,c
 19471  0179EA  0EFD               	movlw	-3
 19472  0179EC  6AE3               	clrf	plusw1,c
 19473  0179EE                     l1999:
 19474                           
 19475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19476                           ;stkvar	_i @ sp[(-4)+2]
 19477  0179EE  0EFE               	movlw	-2
 19478  0179F0  6AE3               	clrf	plusw1,c
 19479  0179F2  0EFF               	movlw	-1
 19480  0179F4  6AE3               	clrf	plusw1,c
 19481                           
 19482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19483  0179F6  D01E               	goto	l10474
 19484  0179F8                     l10470:
 19485                           
 19486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19487                           ;stkvar	_fp @ sp[(-4)+-2]
 19488  0179F8  0EFA               	movlw	-6
 19489  0179FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19490  017A00  006F FF8F FFE6     	movff	plusw1,postinc1
 19491  017A06  0E20               	movlw	32
 19492  017A08  6EE6               	movwf	postinc1,c
 19493  017A0A  0E00               	movlw	0
 19494  017A0C  6EE6               	movwf	postinc1,c
 19495  017A0E  ECAB  F0BB         	call	_fputc	;wreg free
 19496                           
 19497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19498                           ;stkvar	_i @ sp[(-4)+2]
 19499  017A12  0EFE               	movlw	-2
 19500  017A14  50E3               	movf	plusw1,w,c
 19501  017A16  0F01               	addlw	1
 19502  017A18  6E01               	movwf	btemp^0,c
 19503  017A1A  0EFE               	movlw	-2
 19504  017A1C  0060  F007  FFE3   	movff	btemp,plusw1
 19505  017A22  6A01               	clrf	btemp^0,c
 19506  017A24  0EFF               	movlw	-1
 19507  017A26  50E3               	movf	plusw1,w,c
 19508  017A28  2001               	addwfc	btemp^0,w,c
 19509  017A2A  6E01               	movwf	btemp^0,c
 19510  017A2C  0EFF               	movlw	-1
 19511  017A2E  0060  F007  FFE3   	movff	btemp,plusw1
 19512  017A34                     l10474:
 19513                           
 19514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19515                           ;stkvar	_w @ sp[(-4)+0]
 19516                           ;stkvar	_i @ sp[(-4)+2]
 19517  017A34  50E1               	movf	fsr1l,w,c
 19518  017A36  0FFE               	addlw	-2
 19519  017A38  6ED9               	movwf	fsr2l,c
 19520  017A3A  50E2               	movf	fsr1h,w,c
 19521  017A3C  6EDA               	movwf	fsr2h,c
 19522  017A3E  0EFF               	movlw	255
 19523  017A40  22DA               	addwfc	fsr2h,f,c
 19524  017A42  0EFC               	movlw	-4
 19525  017A44  50E3               	movf	plusw1,w,c
 19526  017A46  5CDE               	subwf	postinc2,w,c
 19527  017A48  50DE               	movf	postinc2,w,c
 19528  017A4A  0A80               	xorlw	128
 19529  017A4C  6E01               	movwf	btemp^0,c
 19530  017A4E  0EFD               	movlw	-3
 19531  017A50  50E3               	movf	plusw1,w,c
 19532  017A52  0A80               	xorlw	128
 19533  017A54  5801               	subwfb	btemp^0,w,c
 19534  017A56  A0D8               	btfss	status,0,c
 19535  017A58  D7CF               	goto	l10470
 19536                           
 19537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19538  017A5A  B025               	btfsc	_flags^0,0,c
 19539  017A5C  D010               	goto	l10478
 19540                           
 19541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19542                           ;stkvar	_fp @ sp[(-4)+-2]
 19543  017A5E  0EFA               	movlw	-6
 19544  017A60  006F FF8F FFE6     	movff	plusw1,postinc1
 19545  017A66  006F FF8F FFE6     	movff	plusw1,postinc1
 19546                           
 19547                           ;stkvar	_buf @ sp[(-6)+-4]
 19548  017A6C  0EF6               	movlw	-10
 19549  017A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 19550  017A74  006F FF8F FFE6     	movff	plusw1,postinc1
 19551  017A7A  EC1F  F0C3         	call	_fputs	;wreg free
 19552  017A7E                     l10478:
 19553                           
 19554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19555                           ;stkvar	_w @ sp[(-4)+0]
 19556                           ;stkvar	_buf @ sp[(-4)+-4]
 19557  017A7E  0EF8               	movlw	-8
 19558  017A80  006F FF8F FFE6     	movff	plusw1,postinc1
 19559  017A86  006F FF8F FFE6     	movff	plusw1,postinc1
 19560  017A8C  ECCE  F0C2         	call	_strlen	;wreg free
 19561  017A90  0EFC               	movlw	-4
 19562  017A92  50E3               	movf	plusw1,w,c
 19563  017A94  2601               	addwf	btemp^0,f,c
 19564  017A96  0EFD               	movlw	-3
 19565  017A98  50E3               	movf	plusw1,w,c
 19566  017A9A  2202               	addwfc	(btemp+1)^0,f,c
 19567                           
 19568                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19569  017A9C  0EF6               	movlw	246
 19570  017A9E  26E1               	addwf	fsr1l,f,c
 19571  017AA0  0EFF               	movlw	255
 19572  017AA2  22E2               	addwfc	fsr1h,f,c
 19573  017AA4  0012               	return		;funcret
 19574  017AA6                     __end_of_pad:
 19575                           	opt callstack 0
 19576                           
 19577 ;; *************** function _strlen *****************
 19578 ;; Defined at:
 19579 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19580 ;; Parameters:    Size  Location     Type
 19581 ;;  s               2  [STACK] PTR const unsigned char 
 19582 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19583 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 19584 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19585 ;;		 -> V(188), 
 19586 ;; Auto vars:     Size  Location     Type
 19587 ;;  a               2  [STACK] PTR const unsigned char 
 19588 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19589 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 19590 ;;		 -> T(144), port_data(512), STR_7(6), STR_3(6), 
 19591 ;;		 -> V(188), 
 19592 ;; Return value:  Size  Location     Type
 19593 ;;                  2  [STACK] unsigned int 
 19594 ;; Registers used:
 19595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19596 ;; Tracked objects:
 19597 ;;		On entry : 0/0
 19598 ;;		On exit  : 0/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19605 ;;Total ram usage:        0 bytes
 19606 ;; Hardware stack levels used:    1
 19607 ;; Hardware stack levels required when called:   15
 19608 ;; This function calls:
 19609 ;;		Nothing
 19610 ;; This function is called by:
 19611 ;;		_eaDogM_WriteString
 19612 ;;		_calc_bsoc
 19613 ;;		_pad
 19614 ;;		_stoa
 19615 ;; This function uses a reentrant model
 19616 ;;
 19617                           
 19618                           	psect	text69
 19619  01859C                     __ptext69:
 19620                           	opt callstack 0
 19621  01859C                     _strlen:
 19622                           	opt callstack 0
 19623                           
 19624                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19625  01859C  52E6               	movf	postinc1,f,c
 19626  01859E  52E6               	movf	postinc1,f,c
 19627                           
 19628                           ;stkvar	_s @ sp[(-2)+-2]
 19629                           
 19630                           ;incstack = 0
 19631 ;; hardware stack exceeded
 19632  0185A0  0EFC               	movlw	-4
 19633  0185A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19634  0185A8  0EFD               	movlw	-3
 19635  0185AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19636                           
 19637                           ;stkvar	_a @ sp[(-2)+0]
 19638  0185B0  0EFF               	movlw	-1
 19639  0185B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19640  0185B8  0EFE               	movlw	-2
 19641  0185BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19642  0185C0  D011               	goto	l6914
 19643  0185C2                     l6912:
 19644                           
 19645                           ;stkvar	_s @ sp[(-2)+-2]
 19646  0185C2  0EFC               	movlw	-4
 19647  0185C4  50E3               	movf	plusw1,w,c
 19648  0185C6  0F01               	addlw	1
 19649  0185C8  6E01               	movwf	btemp^0,c
 19650  0185CA  0EFC               	movlw	-4
 19651  0185CC  0060  F007  FFE3   	movff	btemp,plusw1
 19652  0185D2  6A01               	clrf	btemp^0,c
 19653  0185D4  0EFD               	movlw	-3
 19654  0185D6  50E3               	movf	plusw1,w,c
 19655  0185D8  2001               	addwfc	btemp^0,w,c
 19656  0185DA  6E01               	movwf	btemp^0,c
 19657  0185DC  0EFD               	movlw	-3
 19658  0185DE  0060  F007  FFE3   	movff	btemp,plusw1
 19659  0185E4                     l6914:
 19660                           
 19661                           ;stkvar	_s @ sp[(-2)+-2]
 19662  0185E4  0EFC               	movlw	-4
 19663  0185E6  006F FF8F FFF6     	movff	plusw1,tblptrl
 19664  0185EC  0EFD               	movlw	-3
 19665  0185EE  006F FF8F FFF7     	movff	plusw1,tblptrh
 19666  0185F4  0E00               	movlw	low (__mediumconst shr (0+16))
 19667  0185F6  6EF8               	movwf	tblptru,c
 19668  0185F8  0E1F               	movlw	(high __ramtop+-1)
 19669  0185FA  64F7               	cpfsgt	tblptrh,c
 19670  0185FC  D003               	bra	u4717
 19671  0185FE  0008               	tblrd		*
 19672  018600  50F5               	movf	tablat,w,c
 19673  018602  D007               	bra	u4710
 19674  018604                     u4717:
 19675  018604  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19676  01860A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19677  018610  50EF               	movf	indf0,w,c
 19678  018612                     u4710:
 19679  018612  0900               	iorlw	0
 19680  018614  A4D8               	btfss	status,2,c
 19681  018616  D7D5               	goto	l6912
 19682                           
 19683                           ;stkvar	_a @ sp[(-2)+0]
 19684                           ;stkvar	_s @ sp[(-2)+-2]
 19685  018618  0EFC               	movlw	-4
 19686  01861A  006F FF8C  F001    	movff	plusw1,btemp
 19687  018620  0EFD               	movlw	-3
 19688  018622  006F FF8C  F002    	movff	plusw1,btemp+1
 19689  018628  0EFE               	movlw	-2
 19690  01862A  50E3               	movf	plusw1,w,c
 19691  01862C  5E01               	subwf	btemp^0,f,c
 19692  01862E  0EFF               	movlw	-1
 19693  018630  50E3               	movf	plusw1,w,c
 19694  018632  5A02               	subwfb	(btemp+1)^0,f,c
 19695                           
 19696                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19697  018634  52E5               	movf	postdec1,f,c
 19698  018636  52E5               	movf	postdec1,f,c
 19699  018638  52E5               	movf	postdec1,f,c
 19700  01863A  52E5               	movf	postdec1,f,c
 19701  01863C  0012               	return		;funcret
 19702  01863E                     __end_of_strlen:
 19703                           	opt callstack 0
 19704                           
 19705 ;; *************** function _fputs *****************
 19706 ;; Defined at:
 19707 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19708 ;; Parameters:    Size  Location     Type
 19709 ;;  s               2  [STACK] PTR const unsigned char 
 19710 ;;		 -> dbuf(80), 
 19711 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19712 ;;		 -> f(6), NULL(0), 
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;  i               2  [STACK] int 
 19715 ;;  c               1  [STACK] unsigned char 
 19716 ;; Return value:  Size  Location     Type
 19717 ;;                  2  [STACK] int 
 19718 ;; Registers used:
 19719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19720 ;; Tracked objects:
 19721 ;;		On entry : 0/3
 19722 ;;		On exit  : 0/0
 19723 ;;		Unchanged: 0/0
 19724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19729 ;;Total ram usage:        0 bytes
 19730 ;; Hardware stack levels used:    1
 19731 ;; Hardware stack levels required when called:   18
 19732 ;; This function calls:
 19733 ;;		_fputc
 19734 ;; This function is called by:
 19735 ;;		_pad
 19736 ;; This function uses a reentrant model
 19737 ;;
 19738                           
 19739                           	psect	text70
 19740  01863E                     __ptext70:
 19741                           	opt callstack 0
 19742  01863E                     _fputs:
 19743                           	opt callstack 0
 19744                           
 19745                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19746  01863E  52E6               	movf	postinc1,f,c
 19747  018640  52E6               	movf	postinc1,f,c
 19748  018642  52E6               	movf	postinc1,f,c
 19749                           
 19750                           ;stkvar	_i @ sp[(-3)+0]
 19751                           
 19752                           ;incstack = 0
 19753 ;; hardware stack exceeded
 19754  018644  0EFD               	movlw	-3
 19755  018646  6AE3               	clrf	plusw1,c
 19756  018648  0EFE               	movlw	-2
 19757  01864A  6AE3               	clrf	plusw1,c
 19758  01864C  D01F               	goto	l10458
 19759  01864E                     l10454:
 19760                           
 19761                           ;stkvar	_fp @ sp[(-3)+-4]
 19762  01864E  0EF9               	movlw	-7
 19763  018650  006F FF8F FFE6     	movff	plusw1,postinc1
 19764  018656  006F FF8F FFE6     	movff	plusw1,postinc1
 19765                           
 19766                           ;stkvar	_c @ sp[(-5)+2]
 19767  01865C  0EFD               	movlw	-3
 19768  01865E  50E3               	movf	plusw1,w,c
 19769  018660  6EE6               	movwf	postinc1,c
 19770  018662  0E00               	movlw	0
 19771  018664  6EE6               	movwf	postinc1,c
 19772  018666  ECAB  F0BB         	call	_fputc	;wreg free
 19773                           
 19774                           ;stkvar	_i @ sp[(-3)+0]
 19775  01866A  0EFD               	movlw	-3
 19776  01866C  50E3               	movf	plusw1,w,c
 19777  01866E  0F01               	addlw	1
 19778  018670  6E01               	movwf	btemp^0,c
 19779  018672  0EFD               	movlw	-3
 19780  018674  0060  F007  FFE3   	movff	btemp,plusw1
 19781  01867A  6A01               	clrf	btemp^0,c
 19782  01867C  0EFE               	movlw	-2
 19783  01867E  50E3               	movf	plusw1,w,c
 19784  018680  2001               	addwfc	btemp^0,w,c
 19785  018682  6E01               	movwf	btemp^0,c
 19786  018684  0EFE               	movlw	-2
 19787  018686  0060  F007  FFE3   	movff	btemp,plusw1
 19788  01868C                     l10458:
 19789                           
 19790                           ;stkvar	_i @ sp[(-3)+0]
 19791  01868C  0EFD               	movlw	-3
 19792  01868E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19793  018694  0EFE               	movlw	-2
 19794  018696  006F FF8C  F00C    	movff	plusw1,btemp+11
 19795                           
 19796                           ;stkvar	_s @ sp[(-3)+-2]
 19797  01869C  0EFB               	movlw	-5
 19798  01869E  006F FF8C  F009    	movff	plusw1,btemp+8
 19799  0186A4  0EFC               	movlw	-4
 19800  0186A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 19801  0186AC  500B               	movf	(btemp+10)^0,w,c
 19802  0186AE  2409               	addwf	(btemp+8)^0,w,c
 19803  0186B0  6ED9               	movwf	fsr2l,c
 19804  0186B2  500C               	movf	(btemp+11)^0,w,c
 19805  0186B4  200A               	addwfc	(btemp+9)^0,w,c
 19806  0186B6  6EDA               	movwf	fsr2h,c
 19807  0186B8  50DF               	movf	indf2,w,c
 19808  0186BA  6E0C               	movwf	(btemp+11)^0,c
 19809                           
 19810                           ;stkvar	_c @ sp[(-3)+2]
 19811  0186BC  0EFF               	movlw	-1
 19812  0186BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19813  0186C4  0EFF               	movlw	-1
 19814  0186C6  50E3               	movf	plusw1,w,c
 19815  0186C8  A4D8               	btfss	status,2,c
 19816  0186CA  D7C1               	goto	l10454
 19817                           
 19818                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19819  0186CC  0EF9               	movlw	249
 19820  0186CE  26E1               	addwf	fsr1l,f,c
 19821  0186D0  0EFF               	movlw	255
 19822  0186D2  22E2               	addwfc	fsr1h,f,c
 19823  0186D4  0012               	return		;funcret
 19824  0186D6                     __end_of_fputs:
 19825                           	opt callstack 0
 19826                           
 19827 ;; *************** function _fputc *****************
 19828 ;; Defined at:
 19829 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19830 ;; Parameters:    Size  Location     Type
 19831 ;;  c               2  [STACK] int 
 19832 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19833 ;;		 -> f(6), NULL(0), 
 19834 ;; Auto vars:     Size  Location     Type
 19835 ;;		None
 19836 ;; Return value:  Size  Location     Type
 19837 ;;                  2  [STACK] int 
 19838 ;; Registers used:
 19839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19840 ;; Tracked objects:
 19841 ;;		On entry : 0/0
 19842 ;;		On exit  : 0/0
 19843 ;;		Unchanged: 0/0
 19844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19849 ;;Total ram usage:        0 bytes
 19850 ;; Hardware stack levels used:    1
 19851 ;; Hardware stack levels required when called:   17
 19852 ;; This function calls:
 19853 ;;		_putch
 19854 ;; This function is called by:
 19855 ;;		_pad
 19856 ;;		_stoa
 19857 ;;		_vfpfcnvrt
 19858 ;;		_fputs
 19859 ;; This function uses a reentrant model
 19860 ;;
 19861                           
 19862                           	psect	text71
 19863  017756                     __ptext71:
 19864                           	opt callstack 0
 19865  017756                     _fputc:
 19866                           	opt callstack 0
 19867                           
 19868                           ;stkvar	_fp @ sp[(0)+-4]
 19869                           
 19870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19871                           ;incstack = 0
 19872 ;; hardware stack exceeded
 19873  017756  0EFC               	movlw	-4
 19874  017758  006F FF8C  F001    	movff	plusw1,btemp
 19875  01775E  0EFD               	movlw	-3
 19876  017760  50E3               	movf	plusw1,w,c
 19877  017762  1001               	iorwf	btemp^0,w,c
 19878  017764  B4D8               	btfsc	status,2,c
 19879  017766  D009               	goto	u9330
 19880                           
 19881                           ;stkvar	_fp @ sp[(0)+-4]
 19882  017768  0EFC               	movlw	-4
 19883  01776A  006F FF8C  F001    	movff	plusw1,btemp
 19884  017770  0EFD               	movlw	-3
 19885  017772  50E3               	movf	plusw1,w,c
 19886  017774  1001               	iorwf	btemp^0,w,c
 19887  017776  A4D8               	btfss	status,2,c
 19888  017778  D006               	goto	l10442
 19889  01777A                     u9330:
 19890                           
 19891                           ;stkvar	_c @ sp[(0)+-2]
 19892  01777A  0EFE               	movlw	-2
 19893  01777C  50E3               	movf	plusw1,w,c
 19894  01777E  6EE6               	movwf	postinc1,c
 19895  017780  EC0C  F0CE         	call	_putch	;wreg free
 19896  017784  D075               	goto	l3017
 19897  017786                     l10442:
 19898                           
 19899                           ;stkvar	_fp @ sp[(0)+-4]
 19900  017786  0EFC               	movlw	-4
 19901  017788  006F FF8C  F00B    	movff	plusw1,btemp+10
 19902  01778E  0EFD               	movlw	-3
 19903  017790  006F FF8C  F00C    	movff	plusw1,btemp+11
 19904  017796  0E04               	movlw	4
 19905  017798  240B               	addwf	(btemp+10)^0,w,c
 19906  01779A  6ED9               	movwf	fsr2l,c
 19907  01779C  0E00               	movlw	0
 19908  01779E  200C               	addwfc	(btemp+11)^0,w,c
 19909  0177A0  6EDA               	movwf	fsr2h,c
 19910  0177A2  50DE               	movf	postinc2,w,c
 19911  0177A4  10DE               	iorwf	postinc2,w,c
 19912  0177A6  B4D8               	btfsc	status,2,c
 19913  0177A8  D026               	goto	u9350
 19914                           
 19915                           ;stkvar	_fp @ sp[(0)+-4]
 19916  0177AA  0EFC               	movlw	-4
 19917  0177AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19918  0177B2  0EFD               	movlw	-3
 19919  0177B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19920  0177BA  0E04               	movlw	4
 19921  0177BC  240B               	addwf	(btemp+10)^0,w,c
 19922  0177BE  6ED9               	movwf	fsr2l,c
 19923  0177C0  0E00               	movlw	0
 19924  0177C2  200C               	addwfc	(btemp+11)^0,w,c
 19925  0177C4  6EDA               	movwf	fsr2h,c
 19926                           
 19927                           ;stkvar	_fp @ sp[(0)+-4]
 19928  0177C6  0EFC               	movlw	-4
 19929  0177C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19930  0177CE  0EFD               	movlw	-3
 19931  0177D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19932  0177D6  0E02               	movlw	2
 19933  0177D8  240B               	addwf	(btemp+10)^0,w,c
 19934  0177DA  6EE9               	movwf	fsr0l,c
 19935  0177DC  0E00               	movlw	0
 19936  0177DE  200C               	addwfc	(btemp+11)^0,w,c
 19937  0177E0  6EEA               	movwf	fsr0h,c
 19938  0177E2  50DE               	movf	postinc2,w,c
 19939  0177E4  5CEE               	subwf	postinc0,w,c
 19940  0177E6  50EE               	movf	postinc0,w,c
 19941  0177E8  0A80               	xorlw	128
 19942  0177EA  6E01               	movwf	btemp^0,c
 19943  0177EC  50DE               	movf	postinc2,w,c
 19944  0177EE  0A80               	xorlw	128
 19945  0177F0  5801               	subwfb	btemp^0,w,c
 19946  0177F2  B0D8               	btfsc	status,0,c
 19947  0177F4  D03D               	goto	l3017
 19948  0177F6                     u9350:
 19949                           
 19950                           ;stkvar	_c @ sp[(0)+-2]
 19951                           ;stkvar	_fp @ sp[(0)+-4]
 19952  0177F6  0EFC               	movlw	-4
 19953  0177F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19954  0177FE  0EFD               	movlw	-3
 19955  017800  006F FF8C  F00C    	movff	plusw1,btemp+11
 19956  017806  0E02               	movlw	2
 19957  017808  240B               	addwf	(btemp+10)^0,w,c
 19958  01780A  6ED9               	movwf	fsr2l,c
 19959  01780C  0E00               	movlw	0
 19960  01780E  200C               	addwfc	(btemp+11)^0,w,c
 19961  017810  6EDA               	movwf	fsr2h,c
 19962  017812  006F FF78  F00B    	movff	postinc2,btemp+10
 19963  017818  006F FF74  F00C    	movff	postdec2,btemp+11
 19964                           
 19965                           ;stkvar	_fp @ sp[(0)+-4]
 19966  01781E  0EFC               	movlw	-4
 19967  017820  006F FF8F FFD9     	movff	plusw1,fsr2l
 19968  017826  0EFD               	movlw	-3
 19969  017828  006F FF8F FFDA     	movff	plusw1,fsr2h
 19970  01782E  006F FF78  F009    	movff	postinc2,btemp+8
 19971  017834  006F FF74  F00A    	movff	postdec2,btemp+9
 19972  01783A  500B               	movf	(btemp+10)^0,w,c
 19973  01783C  2409               	addwf	(btemp+8)^0,w,c
 19974  01783E  6ED9               	movwf	fsr2l,c
 19975  017840  500C               	movf	(btemp+11)^0,w,c
 19976  017842  200A               	addwfc	(btemp+9)^0,w,c
 19977  017844  6EDA               	movwf	fsr2h,c
 19978  017846  0EFE               	movlw	-2
 19979  017848  006F FF8F FFDF     	movff	plusw1,indf2
 19980                           
 19981                           ;stkvar	_fp @ sp[(0)+-4]
 19982  01784E  0EFC               	movlw	-4
 19983  017850  006F FF8C  F00B    	movff	plusw1,btemp+10
 19984  017856  0EFD               	movlw	-3
 19985  017858  006F FF8C  F00C    	movff	plusw1,btemp+11
 19986  01785E  0E02               	movlw	2
 19987  017860  240B               	addwf	(btemp+10)^0,w,c
 19988  017862  6ED9               	movwf	fsr2l,c
 19989  017864  0E00               	movlw	0
 19990  017866  200C               	addwfc	(btemp+11)^0,w,c
 19991  017868  6EDA               	movwf	fsr2h,c
 19992  01786A  2ADE               	incf	postinc2,f,c
 19993  01786C  0E00               	movlw	0
 19994  01786E  22DD               	addwfc	postdec2,f,c
 19995  017870                     l3017:
 19996                           
 19997                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19998  017870  52E5               	movf	postdec1,f,c
 19999  017872  52E5               	movf	postdec1,f,c
 20000  017874  52E5               	movf	postdec1,f,c
 20001  017876  52E5               	movf	postdec1,f,c
 20002  017878  0012               	return		;funcret
 20003  01787A                     __end_of_fputc:
 20004                           	opt callstack 0
 20005                           
 20006 ;; *************** function _putch *****************
 20007 ;; Defined at:
 20008 ;;		line 170 in file "eadog.c"
 20009 ;; Parameters:    Size  Location     Type
 20010 ;;  c               1  [STACK] unsigned char 
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;		None
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1  [STACK] void 
 20015 ;; Registers used:
 20016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20026 ;;Total ram usage:        0 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:   16
 20029 ;; This function calls:
 20030 ;;		_ringBufS_put_dma
 20031 ;; This function is called by:
 20032 ;;		_fputc
 20033 ;; This function uses a reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text72
 20037  019C18                     __ptext72:
 20038                           	opt callstack 0
 20039  019C18                     _putch:
 20040                           	opt callstack 0
 20041                           
 20042                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20043                           ;stkvar	_c @ sp[(0)+-1]
 20044                           
 20045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20046                           ;incstack = 0
 20047 ;; hardware stack exceeded
 20048  019C18  0EFF               	movlw	-1
 20049  019C1A  50E3               	movf	plusw1,w,c
 20050  019C1C  6EE6               	movwf	postinc1,c
 20051  019C1E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 20052  019C24  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 20053  019C2A  EC26  F0C2         	call	_ringBufS_put_dma	;wreg free
 20054                           
 20055                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20056  019C2E  52E5               	movf	postdec1,f,c
 20057  019C30  0012               	return		;funcret
 20058  019C32                     __end_of_putch:
 20059                           	opt callstack 0
 20060                           
 20061 ;; *************** function _ringBufS_put_dma *****************
 20062 ;; Defined at:
 20063 ;;		line 67 in file "ringbufs.c"
 20064 ;; Parameters:    Size  Location     Type
 20065 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20066 ;;		 -> ring_buf1(67), 
 20067 ;;  c               1  [STACK] const unsigned char 
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;		None
 20070 ;; Return value:  Size  Location     Type
 20071 ;;                  1  [STACK] void 
 20072 ;; Registers used:
 20073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20074 ;; Tracked objects:
 20075 ;;		On entry : 0/0
 20076 ;;		On exit  : 0/0
 20077 ;;		Unchanged: 0/0
 20078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20083 ;;Total ram usage:        0 bytes
 20084 ;; Hardware stack levels used:    1
 20085 ;; Hardware stack levels required when called:   15
 20086 ;; This function calls:
 20087 ;;		Nothing
 20088 ;; This function is called by:
 20089 ;;		_putch
 20090 ;; This function uses a reentrant model
 20091 ;;
 20092                           
 20093                           	psect	text73
 20094  01844C                     __ptext73:
 20095                           	opt callstack 0
 20096  01844C                     _ringBufS_put_dma:
 20097                           	opt callstack 0
 20098                           
 20099                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20100                           ;stkvar	__this @ sp[(0)+-2]
 20101                           
 20102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20103                           ;incstack = 0
 20104 ;; hardware stack exceeded
 20105  01844C  0EFE               	movlw	-2
 20106  01844E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20107  018454  0EFF               	movlw	-1
 20108  018456  006F FF8C  F00C    	movff	plusw1,btemp+11
 20109  01845C  0E42               	movlw	66
 20110  01845E  240B               	addwf	(btemp+10)^0,w,c
 20111  018460  6ED9               	movwf	fsr2l,c
 20112  018462  0E00               	movlw	0
 20113  018464  200C               	addwfc	(btemp+11)^0,w,c
 20114  018466  6EDA               	movwf	fsr2h,c
 20115  018468  0E40               	movlw	64
 20116  01846A  60DF               	cpfslt	indf2,c
 20117  01846C  D040               	goto	l1554
 20118                           
 20119                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20120                           ;stkvar	_c @ sp[(0)+-3]
 20121                           ;stkvar	__this @ sp[(0)+-2]
 20122  01846E  0EFE               	movlw	-2
 20123  018470  006F FF8C  F00B    	movff	plusw1,btemp+10
 20124  018476  0EFF               	movlw	-1
 20125  018478  006F FF8C  F00C    	movff	plusw1,btemp+11
 20126  01847E  0E40               	movlw	64
 20127  018480  240B               	addwf	(btemp+10)^0,w,c
 20128  018482  6ED9               	movwf	fsr2l,c
 20129  018484  0E00               	movlw	0
 20130  018486  200C               	addwfc	(btemp+11)^0,w,c
 20131  018488  6EDA               	movwf	fsr2h,c
 20132  01848A  50DF               	movf	indf2,w,c
 20133  01848C  6E0C               	movwf	(btemp+11)^0,c
 20134                           
 20135                           ;stkvar	__this @ sp[(0)+-2]
 20136  01848E  0EFE               	movlw	-2
 20137  018490  006F FF8C  F009    	movff	plusw1,btemp+8
 20138  018496  0EFF               	movlw	-1
 20139  018498  006F FF8C  F00A    	movff	plusw1,btemp+9
 20140  01849E  500C               	movf	(btemp+11)^0,w,c
 20141  0184A0  2409               	addwf	(btemp+8)^0,w,c
 20142  0184A2  6ED9               	movwf	fsr2l,c
 20143  0184A4  0E00               	movlw	0
 20144  0184A6  200A               	addwfc	(btemp+9)^0,w,c
 20145  0184A8  6EDA               	movwf	fsr2h,c
 20146  0184AA  0EFD               	movlw	-3
 20147  0184AC  006F FF8F FFDF     	movff	plusw1,indf2
 20148                           
 20149                           ;ringbufs.c: 71:   ++_this->head;
 20150                           ;stkvar	__this @ sp[(0)+-2]
 20151  0184B2  0EFE               	movlw	-2
 20152  0184B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20153  0184BA  0EFF               	movlw	-1
 20154  0184BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20155  0184C2  0E40               	movlw	64
 20156  0184C4  240B               	addwf	(btemp+10)^0,w,c
 20157  0184C6  6ED9               	movwf	fsr2l,c
 20158  0184C8  0E00               	movlw	0
 20159  0184CA  200C               	addwfc	(btemp+11)^0,w,c
 20160  0184CC  6EDA               	movwf	fsr2h,c
 20161  0184CE  2ADF               	incf	indf2,f,c
 20162                           
 20163                           ;ringbufs.c: 72:   ++_this->count;
 20164                           ;stkvar	__this @ sp[(0)+-2]
 20165  0184D0  0EFE               	movlw	-2
 20166  0184D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20167  0184D8  0EFF               	movlw	-1
 20168  0184DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20169  0184E0  0E42               	movlw	66
 20170  0184E2  240B               	addwf	(btemp+10)^0,w,c
 20171  0184E4  6ED9               	movwf	fsr2l,c
 20172  0184E6  0E00               	movlw	0
 20173  0184E8  200C               	addwfc	(btemp+11)^0,w,c
 20174  0184EA  6EDA               	movwf	fsr2h,c
 20175  0184EC  2ADF               	incf	indf2,f,c
 20176  0184EE                     l1554:
 20177                           
 20178                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20179  0184EE  52E5               	movf	postdec1,f,c
 20180  0184F0  52E5               	movf	postdec1,f,c
 20181  0184F2  52E5               	movf	postdec1,f,c
 20182  0184F4  0012               	return		;funcret
 20183  0184F6                     __end_of_ringBufS_put_dma:
 20184                           	opt callstack 0
 20185                           
 20186 ;; *************** function _atoi *****************
 20187 ;; Defined at:
 20188 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20189 ;; Parameters:    Size  Location     Type
 20190 ;;  s               2  [STACK] PTR const unsigned char 
 20191 ;;		 -> STR_46(75), STR_44(3), STR_43(3), STR_42(19), 
 20192 ;;		 -> STR_41(19), STR_40(19), STR_39(19), STR_38(19), 
 20193 ;;		 -> STR_37(19), STR_36(24), STR_35(15), STR_34(15), 
 20194 ;;		 -> STR_33(15), STR_32(10), STR_31(10), STR_30(19), 
 20195 ;;		 -> STR_29(19), STR_26(3), STR_25(3), STR_24(3), 
 20196 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
 20197 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
 20198 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
 20199 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
 20200 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 20201 ;;		 -> STR_1(17), 
 20202 ;; Auto vars:     Size  Location     Type
 20203 ;;  n               2  [STACK] int 
 20204 ;;  neg             2  [STACK] int 
 20205 ;; Return value:  Size  Location     Type
 20206 ;;                  2  [STACK] int 
 20207 ;; Registers used:
 20208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20209 ;; Tracked objects:
 20210 ;;		On entry : 0/0
 20211 ;;		On exit  : 0/0
 20212 ;;		Unchanged: 0/0
 20213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;Total ram usage:        0 bytes
 20219 ;; Hardware stack levels used:    1
 20220 ;; Hardware stack levels required when called:   16
 20221 ;; This function calls:
 20222 ;;		_isdigit
 20223 ;;		_isspace
 20224 ;; This function is called by:
 20225 ;;		_vfpfcnvrt
 20226 ;; This function uses a reentrant model
 20227 ;;
 20228                           
 20229                           	psect	text74
 20230  015E22                     __ptext74:
 20231                           	opt callstack 0
 20232  015E22                     _atoi:
 20233                           	opt callstack 0
 20234                           
 20235                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20236  015E22  0E09               	movlw	9
 20237  015E24  26E1               	addwf	fsr1l,f,c
 20238  015E26  0E00               	movlw	0
 20239  015E28  22E2               	addwfc	fsr1h,f,c
 20240                           
 20241                           ;stkvar	_n @ sp[(-9)+5]
 20242                           
 20243                           ;incstack = 0
 20244 ;; hardware stack exceeded
 20245  015E2A  0EFC               	movlw	-4
 20246  015E2C  6AE3               	clrf	plusw1,c
 20247  015E2E  0EFD               	movlw	-3
 20248  015E30  6AE3               	clrf	plusw1,c
 20249                           
 20250                           ;stkvar	_neg @ sp[(-9)+7]
 20251  015E32  0EFE               	movlw	-2
 20252  015E34  6AE3               	clrf	plusw1,c
 20253  015E36  0EFF               	movlw	-1
 20254  015E38  6AE3               	clrf	plusw1,c
 20255  015E3A  D011               	goto	l8438
 20256  015E3C                     l8436:
 20257                           
 20258                           ;stkvar	_s @ sp[(-9)+-2]
 20259  015E3C  0EF5               	movlw	-11
 20260  015E3E  50E3               	movf	plusw1,w,c
 20261  015E40  0F01               	addlw	1
 20262  015E42  6E01               	movwf	btemp^0,c
 20263  015E44  0EF5               	movlw	-11
 20264  015E46  0060  F007  FFE3   	movff	btemp,plusw1
 20265  015E4C  6A01               	clrf	btemp^0,c
 20266  015E4E  0EF6               	movlw	-10
 20267  015E50  50E3               	movf	plusw1,w,c
 20268  015E52  2001               	addwfc	btemp^0,w,c
 20269  015E54  6E01               	movwf	btemp^0,c
 20270  015E56  0EF6               	movlw	-10
 20271  015E58  0060  F007  FFE3   	movff	btemp,plusw1
 20272  015E5E                     l8438:
 20273                           
 20274                           ;stkvar	_atoi$5672 @ sp[(-9)+4]
 20275  015E5E  0EFB               	movlw	-5
 20276  015E60  6AE3               	clrf	plusw1,c
 20277  015E62  2AE3               	incf	plusw1,f,c
 20278                           
 20279                           ;stkvar	_s @ sp[(-9)+-2]
 20280  015E64  50E1               	movf	fsr1l,w,c
 20281  015E66  0FF5               	addlw	-11
 20282  015E68  6ED9               	movwf	fsr2l,c
 20283  015E6A  50E2               	movf	fsr1h,w,c
 20284  015E6C  6EDA               	movwf	fsr2h,c
 20285  015E6E  0EFF               	movlw	255
 20286  015E70  22DA               	addwfc	fsr2h,f,c
 20287  015E72  006F FF7B FFF6     	movff	postinc2,tblptrl
 20288  015E78  006F FF77 FFF7     	movff	postdec2,tblptrh
 20289  015E7E                     	if	0	;tblptru may be non-zero
 20290  015E7E                     	endif
 20291  015E7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20292  015E7E  0E00               	movlw	low (__mediumconst shr (0+16))
 20293  015E80  6EF8               	movwf	tblptru,c
 20294  015E82                     	endif
 20295  015E82  0008               	tblrd		*
 20296  015E84  50F5               	movf	tablat,w,c
 20297  015E86  0A20               	xorlw	32
 20298  015E88  B4D8               	btfsc	status,2,c
 20299  015E8A  D023               	goto	l8446
 20300  015E8C  0EF7               	movlw	247
 20301  015E8E  6E0B               	movwf	(btemp+10)^0,c
 20302  015E90  0EFF               	movlw	255
 20303  015E92  6E0C               	movwf	(btemp+11)^0,c
 20304                           
 20305                           ;stkvar	_s @ sp[(-9)+-2]
 20306  015E94  50E1               	movf	fsr1l,w,c
 20307  015E96  0FF5               	addlw	-11
 20308  015E98  6ED9               	movwf	fsr2l,c
 20309  015E9A  50E2               	movf	fsr1h,w,c
 20310  015E9C  6EDA               	movwf	fsr2h,c
 20311  015E9E  0EFF               	movlw	255
 20312  015EA0  22DA               	addwfc	fsr2h,f,c
 20313  015EA2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20314  015EA8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20315  015EAE                     	if	0	;tblptru may be non-zero
 20316  015EAE                     	endif
 20317  015EAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20318  015EAE  0E00               	movlw	low (__mediumconst shr (0+16))
 20319  015EB0  6EF8               	movwf	tblptru,c
 20320  015EB2                     	endif
 20321  015EB2  0008               	tblrd		*
 20322  015EB4  50F5               	movf	tablat,w,c
 20323  015EB6  6E09               	movwf	(btemp+8)^0,c
 20324  015EB8  6A0A               	clrf	(btemp+9)^0,c
 20325  015EBA  500B               	movf	(btemp+10)^0,w,c
 20326  015EBC  2609               	addwf	(btemp+8)^0,f,c
 20327  015EBE  500C               	movf	(btemp+11)^0,w,c
 20328  015EC0  220A               	addwfc	(btemp+9)^0,f,c
 20329  015EC2  500A               	movf	(btemp+9)^0,w,c
 20330  015EC4  E104               	bnz	u7630
 20331  015EC6  0E05               	movlw	5
 20332  015EC8  5C09               	subwf	(btemp+8)^0,w,c
 20333  015ECA  A0D8               	btfss	status,0,c
 20334  015ECC  D002               	goto	l8446
 20335  015ECE                     u7630:
 20336                           
 20337                           ;stkvar	_atoi$5672 @ sp[(-9)+4]
 20338  015ECE  0EFB               	movlw	-5
 20339  015ED0  6AE3               	clrf	plusw1,c
 20340  015ED2                     l8446:
 20341                           
 20342                           ;stkvar	_atoi$5672 @ sp[(-9)+4]
 20343  015ED2  0EFB               	movlw	-5
 20344  015ED4  50E3               	movf	plusw1,w,c
 20345  015ED6  6E0B               	movwf	(btemp+10)^0,c
 20346  015ED8  6A0C               	clrf	(btemp+11)^0,c
 20347                           
 20348                           ;stkvar	_atoi$5671 @ sp[(-9)+2]
 20349  015EDA  0EF9               	movlw	-7
 20350  015EDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20351  015EE2  0EFA               	movlw	-6
 20352  015EE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20353                           
 20354                           ;stkvar	_atoi$5671 @ sp[(-9)+2]
 20355  015EEA  0EF9               	movlw	-7
 20356  015EEC  006F FF8C  F001    	movff	plusw1,btemp
 20357  015EF2  0EFA               	movlw	-6
 20358  015EF4  50E3               	movf	plusw1,w,c
 20359  015EF6  1001               	iorwf	btemp^0,w,c
 20360  015EF8  B4D8               	btfsc	status,2,c
 20361  015EFA  D01F               	goto	l8456
 20362  015EFC  D79F               	goto	l8436
 20363  015EFE                     l8452:
 20364  015EFE  0E01               	movlw	1
 20365  015F00  6E0B               	movwf	(btemp+10)^0,c
 20366  015F02  0E00               	movlw	0
 20367  015F04  6E0C               	movwf	(btemp+11)^0,c
 20368                           
 20369                           ;stkvar	_neg @ sp[(-9)+7]
 20370  015F06  0EFE               	movlw	-2
 20371  015F08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20372  015F0E  0EFF               	movlw	-1
 20373  015F10  0060  F033  FFE3   	movff	btemp+11,plusw1
 20374  015F16                     l8454:
 20375                           
 20376                           ;stkvar	_s @ sp[(-9)+-2]
 20377  015F16  0EF5               	movlw	-11
 20378  015F18  50E3               	movf	plusw1,w,c
 20379  015F1A  0F01               	addlw	1
 20380  015F1C  6E01               	movwf	btemp^0,c
 20381  015F1E  0EF5               	movlw	-11
 20382  015F20  0060  F007  FFE3   	movff	btemp,plusw1
 20383  015F26  6A01               	clrf	btemp^0,c
 20384  015F28  0EF6               	movlw	-10
 20385  015F2A  50E3               	movf	plusw1,w,c
 20386  015F2C  2001               	addwfc	btemp^0,w,c
 20387  015F2E  6E01               	movwf	btemp^0,c
 20388  015F30  0EF6               	movlw	-10
 20389  015F32  0060  F007  FFE3   	movff	btemp,plusw1
 20390  015F38  D053               	goto	l8462
 20391  015F3A                     l8456:
 20392                           
 20393                           ;stkvar	_s @ sp[(-9)+-2]
 20394  015F3A  50E1               	movf	fsr1l,w,c
 20395  015F3C  0FF5               	addlw	-11
 20396  015F3E  6ED9               	movwf	fsr2l,c
 20397  015F40  50E2               	movf	fsr1h,w,c
 20398  015F42  6EDA               	movwf	fsr2h,c
 20399  015F44  0EFF               	movlw	255
 20400  015F46  22DA               	addwfc	fsr2h,f,c
 20401  015F48  006F FF7B FFF6     	movff	postinc2,tblptrl
 20402  015F4E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20403  015F54                     	if	0	;tblptru may be non-zero
 20404  015F54                     	endif
 20405  015F54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20406  015F54  0E00               	movlw	low (__mediumconst shr (0+16))
 20407  015F56  6EF8               	movwf	tblptru,c
 20408  015F58                     	endif
 20409  015F58  0008               	tblrd		*
 20410  015F5A  50F5               	movf	tablat,w,c
 20411  015F5C  6E0B               	movwf	(btemp+10)^0,c
 20412  015F5E  6A0C               	clrf	(btemp+11)^0,c
 20413                           
 20414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20415                           ; Switch size 1, requested type "simple"
 20416                           ; Number of cases is 1, Range of values is 0 to 0
 20417                           ; switch strategies available:
 20418                           ; Name         Instructions Cycles
 20419                           ; simple_byte            4     3 (average)
 20420                           ;	Chosen strategy is simple_byte
 20421  015F60  500C               	movf	(btemp+11)^0,w,c
 20422  015F62  0A00               	xorlw	0	; case 0
 20423  015F64  A4D8               	btfss	status,2,c
 20424  015F66  D03C               	goto	l8462
 20425                           
 20426                           ; Switch size 1, requested type "simple"
 20427                           ; Number of cases is 2, Range of values is 43 to 45
 20428                           ; switch strategies available:
 20429                           ; Name         Instructions Cycles
 20430                           ; simple_byte            7     4 (average)
 20431                           ;	Chosen strategy is simple_byte
 20432  015F68  500B               	movf	(btemp+10)^0,w,c
 20433  015F6A  0A2B               	xorlw	43	; case 43
 20434  015F6C  B4D8               	btfsc	status,2,c
 20435  015F6E  D7D3               	goto	l8454
 20436  015F70  0A06               	xorlw	6	; case 45
 20437  015F72  B4D8               	btfsc	status,2,c
 20438  015F74  D7C4               	goto	l8452
 20439  015F76  D034               	goto	l8462
 20440  015F78                     l8458:
 20441                           
 20442                           ;stkvar	_n @ sp[(-9)+5]
 20443  015F78  0EFC               	movlw	-4
 20444  015F7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20445  015F80  0EFD               	movlw	-3
 20446  015F82  006F FF8C  F00C    	movff	plusw1,btemp+11
 20447  015F88  0E0A               	movlw	10
 20448  015F8A  020B               	mulwf	(btemp+10)^0,c
 20449  015F8C  006F FFCC  F009    	movff	prodl,btemp+8
 20450  015F92  006F FFD0  F00A    	movff	prodh,btemp+9
 20451  015F98  020C               	mulwf	(btemp+11)^0,c
 20452  015F9A  50F3               	movf	prodl,w,c
 20453  015F9C  260A               	addwf	(btemp+9)^0,f,c
 20454                           
 20455                           ;stkvar	_s @ sp[(-9)+-2]
 20456  015F9E  50E1               	movf	fsr1l,w,c
 20457  015FA0  0FF5               	addlw	-11
 20458  015FA2  6ED9               	movwf	fsr2l,c
 20459  015FA4  50E2               	movf	fsr1h,w,c
 20460  015FA6  6EDA               	movwf	fsr2h,c
 20461  015FA8  0EFF               	movlw	255
 20462  015FAA  22DA               	addwfc	fsr2h,f,c
 20463  015FAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20464  015FB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20465  015FB8                     	if	0	;tblptru may be non-zero
 20466  015FB8                     	endif
 20467  015FB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20468  015FB8  0E00               	movlw	low (__mediumconst shr (0+16))
 20469  015FBA  6EF8               	movwf	tblptru,c
 20470  015FBC                     	endif
 20471  015FBC  0008               	tblrd		*
 20472  015FBE  50F5               	movf	tablat,w,c
 20473  015FC0  5E09               	subwf	(btemp+8)^0,f,c
 20474  015FC2  0E00               	movlw	0
 20475  015FC4  5A0A               	subwfb	(btemp+9)^0,f,c
 20476  015FC6  0E30               	movlw	48
 20477  015FC8  2609               	addwf	(btemp+8)^0,f,c
 20478  015FCA  0E00               	movlw	0
 20479  015FCC  220A               	addwfc	(btemp+9)^0,f,c
 20480                           
 20481                           ;stkvar	_n @ sp[(-9)+5]
 20482  015FCE  0EFC               	movlw	-4
 20483  015FD0  0060  F027  FFE3   	movff	btemp+8,plusw1
 20484  015FD6  0EFD               	movlw	-3
 20485  015FD8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20486  015FDE  D79B               	goto	l8454
 20487  015FE0                     l8462:
 20488  015FE0  0ED0               	movlw	208
 20489  015FE2  6E0B               	movwf	(btemp+10)^0,c
 20490  015FE4  0EFF               	movlw	255
 20491  015FE6  6E0C               	movwf	(btemp+11)^0,c
 20492                           
 20493                           ;stkvar	_s @ sp[(-9)+-2]
 20494  015FE8  50E1               	movf	fsr1l,w,c
 20495  015FEA  0FF5               	addlw	-11
 20496  015FEC  6ED9               	movwf	fsr2l,c
 20497  015FEE  50E2               	movf	fsr1h,w,c
 20498  015FF0  6EDA               	movwf	fsr2h,c
 20499  015FF2  0EFF               	movlw	255
 20500  015FF4  22DA               	addwfc	fsr2h,f,c
 20501  015FF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 20502  015FFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 20503  016002                     	if	0	;tblptru may be non-zero
 20504  016002                     	endif
 20505  016002                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20506  016002  0E00               	movlw	low (__mediumconst shr (0+16))
 20507  016004  6EF8               	movwf	tblptru,c
 20508  016006                     	endif
 20509  016006  0008               	tblrd		*
 20510  016008  50F5               	movf	tablat,w,c
 20511  01600A  6E09               	movwf	(btemp+8)^0,c
 20512  01600C  6A0A               	clrf	(btemp+9)^0,c
 20513  01600E  500B               	movf	(btemp+10)^0,w,c
 20514  016010  2609               	addwf	(btemp+8)^0,f,c
 20515  016012  500C               	movf	(btemp+11)^0,w,c
 20516  016014  220A               	addwfc	(btemp+9)^0,f,c
 20517  016016  500A               	movf	(btemp+9)^0,w,c
 20518  016018  E106               	bnz	u7650
 20519  01601A  0E0A               	movlw	10
 20520  01601C  5C09               	subwf	(btemp+8)^0,w,c
 20521  01601E  B0D8               	btfsc	status,0,c
 20522  016020  D002               	goto	u7650
 20523  016022  0E01               	movlw	1
 20524  016024  D001               	goto	u7660
 20525  016026                     u7650:
 20526  016026  0E00               	movlw	0
 20527  016028                     u7660:
 20528  016028  6E0B               	movwf	(btemp+10)^0,c
 20529  01602A  6A0C               	clrf	(btemp+11)^0,c
 20530                           
 20531                           ;stkvar	_atoi$5673 @ sp[(-9)+0]
 20532  01602C  0EF7               	movlw	-9
 20533  01602E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20534  016034  0EF8               	movlw	-8
 20535  016036  0060  F033  FFE3   	movff	btemp+11,plusw1
 20536                           
 20537                           ;stkvar	_atoi$5673 @ sp[(-9)+0]
 20538  01603C  0EF7               	movlw	-9
 20539  01603E  006F FF8C  F001    	movff	plusw1,btemp
 20540  016044  0EF8               	movlw	-8
 20541  016046  50E3               	movf	plusw1,w,c
 20542  016048  1001               	iorwf	btemp^0,w,c
 20543  01604A  A4D8               	btfss	status,2,c
 20544  01604C  D795               	goto	l8458
 20545                           
 20546                           ;stkvar	_neg @ sp[(-9)+7]
 20547  01604E  0EFE               	movlw	-2
 20548  016050  006F FF8C  F001    	movff	plusw1,btemp
 20549  016056  0EFF               	movlw	-1
 20550  016058  50E3               	movf	plusw1,w,c
 20551  01605A  1001               	iorwf	btemp^0,w,c
 20552  01605C  A4D8               	btfss	status,2,c
 20553  01605E  D00E               	goto	l8472
 20554                           
 20555                           ;stkvar	_n @ sp[(-9)+5]
 20556  016060  0EFC               	movlw	-4
 20557  016062  006F FF8C  F001    	movff	plusw1,btemp
 20558  016068  1E01               	comf	btemp^0,f,c
 20559  01606A  0EFD               	movlw	-3
 20560  01606C  006F FF8C  F002    	movff	plusw1,btemp+1
 20561  016072  1E02               	comf	(btemp+1)^0,f,c
 20562  016074  2A01               	incf	btemp^0,f,c
 20563  016076  B4D8               	btfsc	status,2,c
 20564  016078  2A02               	incf	(btemp+1)^0,f,c
 20565  01607A  D008               	goto	l2953
 20566  01607C                     l8472:
 20567                           
 20568                           ;stkvar	_n @ sp[(-9)+5]
 20569  01607C  0EFC               	movlw	-4
 20570  01607E  006F FF8C  F001    	movff	plusw1,btemp
 20571  016084  0EFD               	movlw	-3
 20572  016086  006F FF8C  F002    	movff	plusw1,btemp+1
 20573  01608C                     l2953:
 20574                           
 20575                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20576  01608C  0EF5               	movlw	245
 20577  01608E  26E1               	addwf	fsr1l,f,c
 20578  016090  0EFF               	movlw	255
 20579  016092  22E2               	addwfc	fsr1h,f,c
 20580  016094  0012               	return		;funcret
 20581  016096                     __end_of_atoi:
 20582                           	opt callstack 0
 20583                           
 20584 ;; *************** function _isspace *****************
 20585 ;; Defined at:
 20586 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20587 ;; Parameters:    Size  Location     Type
 20588 ;;  c               2  [STACK] int 
 20589 ;; Auto vars:     Size  Location     Type
 20590 ;;		None
 20591 ;; Return value:  Size  Location     Type
 20592 ;;                  2  [STACK] int 
 20593 ;; Registers used:
 20594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20595 ;; Tracked objects:
 20596 ;;		On entry : 0/0
 20597 ;;		On exit  : 0/0
 20598 ;;		Unchanged: 0/0
 20599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20604 ;;Total ram usage:        0 bytes
 20605 ;; Hardware stack levels used:    1
 20606 ;; Hardware stack levels required when called:   15
 20607 ;; This function calls:
 20608 ;;		Nothing
 20609 ;; This function is called by:
 20610 ;;		_atoi
 20611 ;; This function uses a reentrant model
 20612 ;;
 20613                           
 20614                           	psect	text75
 20615  018FBC                     __ptext75:
 20616                           	opt callstack 0
 20617  018FBC                     _isspace:
 20618                           	opt callstack 0
 20619                           
 20620                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20621  018FBC  52E6               	movf	postinc1,f,c
 20622                           
 20623                           ;stkvar	_isspace$5711 @ sp[(-1)+0]
 20624                           
 20625                           ;incstack = 0
 20626 ;; hardware stack exceeded
 20627  018FBE  0EFF               	movlw	-1
 20628  018FC0  6AE3               	clrf	plusw1,c
 20629  018FC2  2AE3               	incf	plusw1,f,c
 20630                           
 20631                           ;stkvar	_c @ sp[(-1)+-2]
 20632  018FC4  0EFD               	movlw	-3
 20633  018FC6  006F FF8C  F001    	movff	plusw1,btemp
 20634  018FCC  0E20               	movlw	32
 20635  018FCE  1801               	xorwf	btemp^0,w,c
 20636  018FD0  E104               	bnz	u6560
 20637  018FD2  0EFE               	movlw	-2
 20638  018FD4  50E3               	movf	plusw1,w,c
 20639  018FD6  B4D8               	btfsc	status,2,c
 20640  018FD8  D012               	goto	l7870
 20641  018FDA                     u6560:
 20642                           
 20643                           ;stkvar	_c @ sp[(-1)+-2]
 20644  018FDA  0EFD               	movlw	-3
 20645  018FDC  50E3               	movf	plusw1,w,c
 20646  018FDE  0FF7               	addlw	247
 20647  018FE0  6E0B               	movwf	(btemp+10)^0,c
 20648  018FE2  0EFE               	movlw	-2
 20649  018FE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20650  018FEA  0EFF               	movlw	255
 20651  018FEC  220C               	addwfc	(btemp+11)^0,f,c
 20652  018FEE  500C               	movf	(btemp+11)^0,w,c
 20653  018FF0  E104               	bnz	u6570
 20654  018FF2  0E05               	movlw	5
 20655  018FF4  5C0B               	subwf	(btemp+10)^0,w,c
 20656  018FF6  A0D8               	btfss	status,0,c
 20657  018FF8  D002               	goto	l7870
 20658  018FFA                     u6570:
 20659                           
 20660                           ;stkvar	_isspace$5711 @ sp[(-1)+0]
 20661  018FFA  0EFF               	movlw	-1
 20662  018FFC  6AE3               	clrf	plusw1,c
 20663  018FFE                     l7870:
 20664                           
 20665                           ;stkvar	_isspace$5711 @ sp[(-1)+0]
 20666  018FFE  0EFF               	movlw	-1
 20667  019000  50E3               	movf	plusw1,w,c
 20668  019002  6E01               	movwf	btemp^0,c
 20669  019004  6A02               	clrf	(btemp+1)^0,c
 20670                           
 20671                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20672  019006  52E5               	movf	postdec1,f,c
 20673  019008  52E5               	movf	postdec1,f,c
 20674  01900A  52E5               	movf	postdec1,f,c
 20675  01900C  0012               	return		;funcret
 20676  01900E                     __end_of_isspace:
 20677                           	opt callstack 0
 20678                           
 20679 ;; *************** function _isdigit *****************
 20680 ;; Defined at:
 20681 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20682 ;; Parameters:    Size  Location     Type
 20683 ;;  c               2  [STACK] int 
 20684 ;; Auto vars:     Size  Location     Type
 20685 ;;		None
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  2  [STACK] int 
 20688 ;; Registers used:
 20689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/0
 20692 ;;		On exit  : 0/0
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;Total ram usage:        0 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; Hardware stack levels required when called:   15
 20702 ;; This function calls:
 20703 ;;		Nothing
 20704 ;; This function is called by:
 20705 ;;		_vfpfcnvrt
 20706 ;;		_atoi
 20707 ;; This function uses a reentrant model
 20708 ;;
 20709                           
 20710                           	psect	text76
 20711  0195FE                     __ptext76:
 20712                           	opt callstack 0
 20713  0195FE                     _isdigit:
 20714                           	opt callstack 0
 20715                           
 20716                           ;stkvar	_c @ sp[(0)+-2]
 20717                           
 20718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20719                           ;incstack = 0
 20720 ;; hardware stack exceeded
 20721  0195FE  0EFE               	movlw	-2
 20722  019600  50E3               	movf	plusw1,w,c
 20723  019602  0FD0               	addlw	208
 20724  019604  6E0B               	movwf	(btemp+10)^0,c
 20725  019606  0EFF               	movlw	-1
 20726  019608  006F FF8C  F00C    	movff	plusw1,btemp+11
 20727  01960E  0EFF               	movlw	255
 20728  019610  220C               	addwfc	(btemp+11)^0,f,c
 20729  019612  500C               	movf	(btemp+11)^0,w,c
 20730  019614  E106               	bnz	u5520
 20731  019616  0E0A               	movlw	10
 20732  019618  5C0B               	subwf	(btemp+10)^0,w,c
 20733  01961A  B0D8               	btfsc	status,0,c
 20734  01961C  D002               	goto	u5520
 20735  01961E  0E01               	movlw	1
 20736  019620  D001               	goto	u5530
 20737  019622                     u5520:
 20738  019622  0E00               	movlw	0
 20739  019624                     u5530:
 20740  019624  6E01               	movwf	btemp^0,c
 20741  019626  6A02               	clrf	(btemp+1)^0,c
 20742                           
 20743                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20744  019628  52E5               	movf	postdec1,f,c
 20745  01962A  52E5               	movf	postdec1,f,c
 20746  01962C  0012               	return		;funcret
 20747  01962E                     __end_of_isdigit:
 20748                           	opt callstack 0
 20749                           
 20750 ;; *************** function _set_vterm *****************
 20751 ;; Defined at:
 20752 ;;		line 107 in file "mconfig.c"
 20753 ;; Parameters:    Size  Location     Type
 20754 ;;  vterm           1  [STACK] const unsigned char 
 20755 ;; Auto vars:     Size  Location     Type
 20756 ;;		None
 20757 ;; Return value:  Size  Location     Type
 20758 ;;                  1  [STACK] unsigned char 
 20759 ;; Registers used:
 20760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20761 ;; Tracked objects:
 20762 ;;		On entry : 0/2
 20763 ;;		On exit  : 0/0
 20764 ;;		Unchanged: 0/0
 20765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20770 ;;Total ram usage:        0 bytes
 20771 ;; Hardware stack levels used:    1
 20772 ;; Hardware stack levels required when called:   15
 20773 ;; This function calls:
 20774 ;;		Nothing
 20775 ;; This function is called by:
 20776 ;;		_main
 20777 ;;		_check_help
 20778 ;; This function uses a reentrant model
 20779 ;;
 20780                           
 20781                           	psect	text77
 20782  019BA2                     __ptext77:
 20783                           	opt callstack 0
 20784  019BA2                     _set_vterm:
 20785                           	opt callstack 15
 20786                           
 20787                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20788                           ;stkvar	_vterm @ sp[(0)+-1]
 20789                           
 20790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20791                           ;incstack = 0
 20792  019BA2  0EFF               	movlw	-1
 20793  019BA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20794  019BAA  0E03               	movlw	3
 20795  019BAC  160C               	andwf	(btemp+11)^0,f,c
 20796  019BAE  EE22  F11F         	lfsr	2,_D+288
 20797  019BB2  50DF               	movf	223,w,c
 20798  019BB4  180C               	xorwf	(btemp+11)^0,w,c
 20799  019BB6  0BFE               	andlw	-2
 20800  019BB8  180C               	xorwf	(btemp+11)^0,w,c
 20801  019BBA  6EDF               	movwf	223,c
 20802                           
 20803                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20804  019BBC  52E5               	movf	postdec1,f,c
 20805  019BBE  0012               	return		;funcret
 20806  019BC0                     __end_of_set_vterm:
 20807                           	opt callstack 0
 20808                           
 20809 ;; *************** function _set_temp_display_help *****************
 20810 ;; Defined at:
 20811 ;;		line 211 in file "mconfig.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;  new_response    1  [STACK] const enum E16509
 20814 ;; Auto vars:     Size  Location     Type
 20815 ;;		None
 20816 ;; Return value:  Size  Location     Type
 20817 ;;                  1  [STACK] enum E16509
 20818 ;; Registers used:
 20819 ;;		wreg, fsr1l, fsr1h
 20820 ;; Tracked objects:
 20821 ;;		On entry : 0/2
 20822 ;;		On exit  : 3F/2
 20823 ;;		Unchanged: 0/0
 20824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20829 ;;Total ram usage:        0 bytes
 20830 ;; Hardware stack levels used:    1
 20831 ;; Hardware stack levels required when called:   15
 20832 ;; This function calls:
 20833 ;;		Nothing
 20834 ;; This function is called by:
 20835 ;;		_check_help
 20836 ;; This function uses a reentrant model
 20837 ;;
 20838                           
 20839                           	psect	text78
 20840  019CE6                     __ptext78:
 20841                           	opt callstack 0
 20842  019CE6                     _set_temp_display_help:
 20843                           	opt callstack 14
 20844                           
 20845                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20846                           
 20847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20848                           ;incstack = 0
 20849  019CE6  0102               	movlb	2	; () banked
 20850  019CE8  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20851                           
 20852                           ; BSR set to: 2
 20853                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20854                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20855  019CEA  0EFF               	movlw	-1
 20856  019CEC  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 20857                           
 20858                           ; BSR set to: 2
 20859                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20860  019CF2  52E5               	movf	postdec1,f,c
 20861  019CF4  0012               	return		;funcret
 20862  019CF6                     __end_of_set_temp_display_help:
 20863                           	opt callstack 0
 20864                           
 20865 ;; *************** function _set_display_info *****************
 20866 ;; Defined at:
 20867 ;;		line 200 in file "mconfig.c"
 20868 ;; Parameters:    Size  Location     Type
 20869 ;;  new_response    1  [STACK] const enum E16509
 20870 ;; Auto vars:     Size  Location     Type
 20871 ;;		None
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  1  [STACK] enum E16994
 20874 ;; Registers used:
 20875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/1
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20885 ;;Total ram usage:        0 bytes
 20886 ;; Hardware stack levels used:    1
 20887 ;; Hardware stack levels required when called:   16
 20888 ;; This function calls:
 20889 ;;		_TimerDone
 20890 ;; This function is called by:
 20891 ;;		_main
 20892 ;;		_check_help
 20893 ;; This function uses a reentrant model
 20894 ;;
 20895                           
 20896                           	psect	text79
 20897  019BC0                     __ptext79:
 20898                           	opt callstack 0
 20899  019BC0                     _set_display_info:
 20900                           	opt callstack 14
 20901                           
 20902                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20903                           
 20904                           ; BSR set to: 2
 20905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20906                           ;incstack = 0
 20907  019BC0  0E07               	movlw	7
 20908  019BC2  6EE6               	movwf	postinc1,c
 20909  019BC4  ECD7  F0CB         	call	_TimerDone	;wreg free
 20910  019BC8  5001               	movf	btemp^0,w,c
 20911  019BCA  B4D8               	btfsc	status,2,c
 20912  019BCC  D006               	goto	l1689
 20913                           
 20914                           ;mconfig.c: 205:   old_info = V.response.info;
 20915  019BCE  0102               	movlb	2	; () banked
 20916  019BD0  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20917                           
 20918                           ; BSR set to: 2
 20919                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20920                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20921  019BD2  0EFF               	movlw	-1
 20922  019BD4  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 20923  019BDA                     l1689:
 20924                           
 20925                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20926  019BDA  52E5               	movf	postdec1,f,c
 20927  019BDC  0012               	return		;funcret
 20928  019BDE                     __end_of_set_display_info:
 20929                           	opt callstack 0
 20930                           
 20931 ;; *************** function _mode_lamp_dim *****************
 20932 ;; Defined at:
 20933 ;;		line 13 in file "mconfig.c"
 20934 ;; Parameters:    Size  Location     Type
 20935 ;;  level           2  [STACK] const unsigned short 
 20936 ;; Auto vars:     Size  Location     Type
 20937 ;;		None
 20938 ;; Return value:  Size  Location     Type
 20939 ;;                  1  [STACK] void 
 20940 ;; Registers used:
 20941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20942 ;; Tracked objects:
 20943 ;;		On entry : 0/2
 20944 ;;		On exit  : 0/0
 20945 ;;		Unchanged: 0/0
 20946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20951 ;;Total ram usage:        0 bytes
 20952 ;; Hardware stack levels used:    1
 20953 ;; Hardware stack levels required when called:   16
 20954 ;; This function calls:
 20955 ;;		_PWM8_LoadDutyValue
 20956 ;; This function is called by:
 20957 ;;		_main
 20958 ;;		_check_help
 20959 ;; This function uses a reentrant model
 20960 ;;
 20961                           
 20962                           	psect	text80
 20963  019C4E                     __ptext80:
 20964                           	opt callstack 0
 20965  019C4E                     _mode_lamp_dim:
 20966                           	opt callstack 14
 20967                           
 20968                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20969                           ;stkvar	_level @ sp[(0)+-2]
 20970                           
 20971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20972                           ;incstack = 0
 20973  019C4E  0EFE               	movlw	-2
 20974  019C50  006F FF8F FFE6     	movff	plusw1,postinc1
 20975  019C56  006F FF8F FFE6     	movff	plusw1,postinc1
 20976  019C5C  EC71  F0C9         	call	_PWM8_LoadDutyValue	;wreg free
 20977                           
 20978                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20979  019C60  52E5               	movf	postdec1,f,c
 20980  019C62  52E5               	movf	postdec1,f,c
 20981  019C64  0012               	return		;funcret
 20982  019C66                     __end_of_mode_lamp_dim:
 20983                           	opt callstack 0
 20984                           
 20985 ;; *************** function _mode_lamp_bright *****************
 20986 ;; Defined at:
 20987 ;;		line 18 in file "mconfig.c"
 20988 ;; Parameters:    Size  Location     Type
 20989 ;;		None
 20990 ;; Auto vars:     Size  Location     Type
 20991 ;;		None
 20992 ;; Return value:  Size  Location     Type
 20993 ;;                  1  [STACK] void 
 20994 ;; Registers used:
 20995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20996 ;; Tracked objects:
 20997 ;;		On entry : 0/0
 20998 ;;		On exit  : 0/0
 20999 ;;		Unchanged: 0/0
 21000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21005 ;;Total ram usage:        0 bytes
 21006 ;; Hardware stack levels used:    1
 21007 ;; Hardware stack levels required when called:   16
 21008 ;; This function calls:
 21009 ;;		_PWM8_LoadDutyValue
 21010 ;; This function is called by:
 21011 ;;		_check_help
 21012 ;; This function uses a reentrant model
 21013 ;;
 21014                           
 21015                           	psect	text81
 21016  019D04                     __ptext81:
 21017                           	opt callstack 0
 21018  019D04                     _mode_lamp_bright:
 21019                           	opt callstack 13
 21020                           
 21021                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21022                           
 21023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21024                           ;incstack = 0
 21025  019D04  0E2C               	movlw	44
 21026  019D06  6EE6               	movwf	postinc1,c
 21027  019D08  0E01               	movlw	1
 21028  019D0A  6EE6               	movwf	postinc1,c
 21029  019D0C  EC71  F0C9         	call	_PWM8_LoadDutyValue	;wreg free
 21030                           
 21031                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21032  019D10  0012               	return		;funcret
 21033  019D12                     __end_of_mode_lamp_bright:
 21034                           	opt callstack 0
 21035                           
 21036 ;; *************** function _PWM8_LoadDutyValue *****************
 21037 ;; Defined at:
 21038 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21039 ;; Parameters:    Size  Location     Type
 21040 ;;  dutyValue       2  [STACK] unsigned short 
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;		None
 21043 ;; Return value:  Size  Location     Type
 21044 ;;                  1  [STACK] void 
 21045 ;; Registers used:
 21046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21047 ;; Tracked objects:
 21048 ;;		On entry : 0/2
 21049 ;;		On exit  : 0/0
 21050 ;;		Unchanged: 0/0
 21051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21056 ;;Total ram usage:        0 bytes
 21057 ;; Hardware stack levels used:    1
 21058 ;; Hardware stack levels required when called:   15
 21059 ;; This function calls:
 21060 ;;		Nothing
 21061 ;; This function is called by:
 21062 ;;		_mode_lamp_dim
 21063 ;;		_mode_lamp_bright
 21064 ;; This function uses a reentrant model
 21065 ;;
 21066                           
 21067                           	psect	text82
 21068  0192E2                     __ptext82:
 21069                           	opt callstack 0
 21070  0192E2                     _PWM8_LoadDutyValue:
 21071                           	opt callstack 14
 21072                           
 21073                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21074                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21075                           
 21076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21077                           ;incstack = 0
 21078  0192E2  0EFE               	movlw	-2
 21079  0192E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21080  0192EA  0EFF               	movlw	-1
 21081  0192EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21082  0192F2  90D8               	bcf	status,0,c
 21083  0192F4  320C               	rrcf	(btemp+11)^0,f,c
 21084  0192F6  320B               	rrcf	(btemp+10)^0,f,c
 21085  0192F8  90D8               	bcf	status,0,c
 21086  0192FA  320C               	rrcf	(btemp+11)^0,f,c
 21087  0192FC  320B               	rrcf	(btemp+10)^0,f,c
 21088  0192FE  500B               	movf	(btemp+10)^0,w,c
 21089  019300  6E61               	movwf	97,c	;volatile
 21090                           
 21091                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21092                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21093  019302  0EFE               	movlw	-2
 21094  019304  006F FF8C  F00C    	movff	plusw1,btemp+11
 21095  01930A  0E03               	movlw	3
 21096  01930C  160C               	andwf	(btemp+11)^0,f,c
 21097  01930E  0E06               	movlw	6
 21098  019310  6E01               	movwf	btemp^0,c
 21099  019312                     u8055:
 21100  019312  90D8               	bcf	status,0,c
 21101  019314  360C               	rlcf	(btemp+11)^0,f,c
 21102  019316  2E01               	decfsz	btemp^0,f,c
 21103  019318  D7FC               	goto	u8055
 21104  01931A  500C               	movf	(btemp+11)^0,w,c
 21105  01931C  6E60               	movwf	96,c	;volatile
 21106                           
 21107                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21108  01931E  52E5               	movf	postdec1,f,c
 21109  019320  52E5               	movf	postdec1,f,c
 21110  019322  0012               	return		;funcret
 21111  019324                     __end_of_PWM8_LoadDutyValue:
 21112                           	opt callstack 0
 21113                           
 21114 ;; *************** function _help_button *****************
 21115 ;; Defined at:
 21116 ;;		line 26 in file "mconfig.c"
 21117 ;; Parameters:    Size  Location     Type
 21118 ;;		None
 21119 ;; Auto vars:     Size  Location     Type
 21120 ;;		None
 21121 ;; Return value:  Size  Location     Type
 21122 ;;                  1  [STACK] _Bool 
 21123 ;; Registers used:
 21124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21125 ;; Tracked objects:
 21126 ;;		On entry : 0/2
 21127 ;;		On exit  : 0/0
 21128 ;;		Unchanged: 0/0
 21129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;Total ram usage:        0 bytes
 21135 ;; Hardware stack levels used:    1
 21136 ;; Hardware stack levels required when called:   16
 21137 ;; This function calls:
 21138 ;;		_StartTimer
 21139 ;;		_TimerDone
 21140 ;; This function is called by:
 21141 ;;		_check_help
 21142 ;; This function uses a reentrant model
 21143 ;;
 21144                           
 21145                           	psect	text83
 21146  019462                     __ptext83:
 21147                           	opt callstack 0
 21148  019462                     _help_button:
 21149                           	opt callstack 13
 21150                           
 21151                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21152                           
 21153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21154                           ;incstack = 0
 21155  019462  B0CB               	btfsc	203,0,c	;volatile
 21156  019464  D00C               	goto	l1632
 21157                           
 21158                           ;mconfig.c: 29:   V.help = 1;
 21159  019466  0102               	movlb	2	; () banked
 21160  019468  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21161                           
 21162                           ; BSR set to: 2
 21163                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21164  01946A  0E08               	movlw	8
 21165  01946C  6EE6               	movwf	postinc1,c
 21166  01946E  ECD7  F0CB         	call	_TimerDone	;wreg free
 21167  019472  5001               	movf	btemp^0,w,c
 21168  019474  B4D8               	btfsc	status,2,c
 21169  019476  D003               	goto	l1632
 21170                           
 21171                           ;mconfig.c: 31:    return 1;
 21172  019478  0E01               	movlw	1
 21173  01947A  6E01               	movwf	btemp^0,c
 21174  01947C  0012               	return	
 21175  01947E                     l1632:
 21176                           
 21177                           ;mconfig.c: 34:  if (!V.help)
 21178  01947E  0102               	movlb	2	; () banked
 21179  019480  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21180  019482  D008               	goto	l9386
 21181                           
 21182                           ; BSR set to: 2
 21183                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21184  019484  0E2C               	movlw	44
 21185  019486  6EE6               	movwf	postinc1,c
 21186  019488  0E01               	movlw	1
 21187  01948A  6EE6               	movwf	postinc1,c
 21188  01948C  0E08               	movlw	8
 21189  01948E  6EE6               	movwf	postinc1,c
 21190  019490  EC92  F0C9         	call	_StartTimer	;wreg free
 21191  019494                     l9386:
 21192                           
 21193                           ;mconfig.c: 37:  return 0;
 21194  019494  0E00               	movlw	0
 21195  019496  6E01               	movwf	btemp^0,c
 21196                           
 21197                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21198  019498  0012               	return		;funcret
 21199  01949A                     __end_of_help_button:
 21200                           	opt callstack 0
 21201                           
 21202 ;; *************** function _TimerDone *****************
 21203 ;; Defined at:
 21204 ;;		line 20 in file "timers.c"
 21205 ;; Parameters:    Size  Location     Type
 21206 ;;  timer           1  [STACK] const unsigned char 
 21207 ;; Auto vars:     Size  Location     Type
 21208 ;;		None
 21209 ;; Return value:  Size  Location     Type
 21210 ;;                  1  [STACK] _Bool 
 21211 ;; Registers used:
 21212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21213 ;; Tracked objects:
 21214 ;;		On entry : 0/1
 21215 ;;		On exit  : 0/0
 21216 ;;		Unchanged: 0/0
 21217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21222 ;;Total ram usage:        0 bytes
 21223 ;; Hardware stack levels used:    1
 21224 ;; Hardware stack levels required when called:   15
 21225 ;; This function calls:
 21226 ;;		Nothing
 21227 ;; This function is called by:
 21228 ;;		_main
 21229 ;;		_WaitMs
 21230 ;;		_help_button
 21231 ;;		_check_help
 21232 ;;		_set_display_info
 21233 ;; This function uses a reentrant model
 21234 ;;
 21235                           
 21236                           	psect	text84
 21237  0197AE                     __ptext84:
 21238                           	opt callstack 0
 21239  0197AE                     _TimerDone:
 21240                           	opt callstack 14
 21241                           
 21242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21243                           ;incstack = 0
 21244  0197AE  0004               	clrwdt		;# 
 21245                           
 21246                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21247                           ;stkvar	_timer @ sp[(0)+-1]
 21248  0197B0  0EFF               	movlw	-1
 21249  0197B2  50E3               	movf	plusw1,w,c
 21250  0197B4  0D02               	mullw	2
 21251  0197B6  0EDA               	movlw	low _tickCount
 21252  0197B8  24F3               	addwf	243,w,c
 21253  0197BA  6ED9               	movwf	fsr2l,c
 21254  0197BC  0E01               	movlw	high _tickCount
 21255  0197BE  20F4               	addwfc	prodh,w,c
 21256  0197C0  6EDA               	movwf	fsr2h,c
 21257  0197C2  50DE               	movf	postinc2,w,c
 21258  0197C4  10DE               	iorwf	postinc2,w,c
 21259  0197C6  A4D8               	btfss	status,2,c
 21260  0197C8  D002               	goto	l8694
 21261                           
 21262                           ;timers.c: 24:   return 1;
 21263  0197CA  0E01               	movlw	1
 21264  0197CC  D001               	goto	L20
 21265  0197CE                     l8694:
 21266                           
 21267                           ;timers.c: 26:  return 0;
 21268  0197CE  0E00               	movlw	0
 21269  0197D0                     L20:
 21270  0197D0  6E01               	movwf	btemp^0,c
 21271                           
 21272                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21273  0197D2  52E5               	movf	postdec1,f,c
 21274  0197D4  0012               	return		;funcret
 21275  0197D6                     __end_of_TimerDone:
 21276                           	opt callstack 0
 21277                           
 21278 ;; *************** function _StartTimer *****************
 21279 ;; Defined at:
 21280 ;;		line 12 in file "timers.c"
 21281 ;; Parameters:    Size  Location     Type
 21282 ;;  timer           1  [STACK] const unsigned char 
 21283 ;;  count           2  [STACK] const unsigned short 
 21284 ;; Auto vars:     Size  Location     Type
 21285 ;;		None
 21286 ;; Return value:  Size  Location     Type
 21287 ;;                  1  [STACK] void 
 21288 ;; Registers used:
 21289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21290 ;; Tracked objects:
 21291 ;;		On entry : 0/0
 21292 ;;		On exit  : 0/0
 21293 ;;		Unchanged: 0/0
 21294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21299 ;;Total ram usage:        0 bytes
 21300 ;; Hardware stack levels used:    1
 21301 ;; Hardware stack levels required when called:   15
 21302 ;; This function calls:
 21303 ;;		Nothing
 21304 ;; This function is called by:
 21305 ;;		_main
 21306 ;;		_WaitMs
 21307 ;;		_help_button
 21308 ;;		_check_help
 21309 ;; This function uses a reentrant model
 21310 ;;
 21311                           
 21312                           	psect	text85
 21313  019324                     __ptext85:
 21314                           	opt callstack 0
 21315  019324                     _StartTimer:
 21316                           	opt callstack 12
 21317                           
 21318                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21319                           ;stkvar	_count @ sp[(0)+-3]
 21320                           
 21321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21322                           ;incstack = 0
 21323  019324  0EFD               	movlw	-3
 21324  019326  006F FF8C  F00B    	movff	plusw1,btemp+10
 21325  01932C  0EFE               	movlw	-2
 21326  01932E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21327  019334  90D8               	bcf	status,0,c
 21328  019336  340B               	rlcf	(btemp+10)^0,w,c
 21329  019338  6E09               	movwf	(btemp+8)^0,c
 21330  01933A  340C               	rlcf	(btemp+11)^0,w,c
 21331  01933C  6E0A               	movwf	(btemp+9)^0,c
 21332                           
 21333                           ;stkvar	_timer @ sp[(0)+-1]
 21334  01933E  0EFF               	movlw	-1
 21335  019340  50E3               	movf	plusw1,w,c
 21336  019342  0D02               	mullw	2
 21337  019344  0EDA               	movlw	low _tickCount
 21338  019346  24F3               	addwf	243,w,c
 21339  019348  6ED9               	movwf	fsr2l,c
 21340  01934A  0E01               	movlw	high _tickCount
 21341  01934C  20F4               	addwfc	prodh,w,c
 21342  01934E  6EDA               	movwf	fsr2h,c
 21343  019350  0060  F027  FFDE   	movff	btemp+8,postinc2
 21344  019356  0060  F02B  FFDD   	movff	btemp+9,postdec2
 21345                           
 21346                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21347  01935C  52E5               	movf	postdec1,f,c
 21348  01935E  52E5               	movf	postdec1,f,c
 21349  019360  52E5               	movf	postdec1,f,c
 21350  019362  0012               	return		;funcret
 21351  019364                     __end_of_StartTimer:
 21352                           	opt callstack 0
 21353                           
 21354 ;; *************** function _display_info *****************
 21355 ;; Defined at:
 21356 ;;		line 190 in file "mconfig.c"
 21357 ;; Parameters:    Size  Location     Type
 21358 ;;		None
 21359 ;; Auto vars:     Size  Location     Type
 21360 ;;		None
 21361 ;; Return value:  Size  Location     Type
 21362 ;;                  1  [STACK] enum E16509
 21363 ;; Registers used:
 21364 ;;		btemp
 21365 ;; Tracked objects:
 21366 ;;		On entry : 0/2
 21367 ;;		On exit  : 0/0
 21368 ;;		Unchanged: 0/0
 21369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21374 ;;Total ram usage:        0 bytes
 21375 ;; Hardware stack levels used:    1
 21376 ;; Hardware stack levels required when called:   15
 21377 ;; This function calls:
 21378 ;;		Nothing
 21379 ;; This function is called by:
 21380 ;;		_check_help
 21381 ;; This function uses a reentrant model
 21382 ;;
 21383                           
 21384                           	psect	text86
 21385  019D72                     __ptext86:
 21386                           	opt callstack 0
 21387  019D72                     _display_info:
 21388                           	opt callstack 14
 21389                           
 21390                           ;mconfig.c: 192:  return V.response.info;
 21391                           
 21392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21393                           ;incstack = 0
 21394  019D72  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 21395                           
 21396                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21397  019D78  0012               	return		;funcret
 21398  019D7A                     __end_of_display_info:
 21399                           	opt callstack 0
 21400                           
 21401 ;; *************** function _display_help *****************
 21402 ;; Defined at:
 21403 ;;		line 195 in file "mconfig.c"
 21404 ;; Parameters:    Size  Location     Type
 21405 ;;		None
 21406 ;; Auto vars:     Size  Location     Type
 21407 ;;		None
 21408 ;; Return value:  Size  Location     Type
 21409 ;;                  1  [STACK] enum E16509
 21410 ;; Registers used:
 21411 ;;		btemp
 21412 ;; Tracked objects:
 21413 ;;		On entry : 3F/2
 21414 ;;		On exit  : 0/0
 21415 ;;		Unchanged: 0/0
 21416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21421 ;;Total ram usage:        0 bytes
 21422 ;; Hardware stack levels used:    1
 21423 ;; Hardware stack levels required when called:   15
 21424 ;; This function calls:
 21425 ;;		Nothing
 21426 ;; This function is called by:
 21427 ;;		_check_help
 21428 ;; This function uses a reentrant model
 21429 ;;
 21430                           
 21431                           	psect	text87
 21432  019D7A                     __ptext87:
 21433                           	opt callstack 0
 21434  019D7A                     _display_help:
 21435                           	opt callstack 14
 21436                           
 21437                           ;mconfig.c: 197:  return V.response.help_temp;
 21438                           
 21439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21440                           ;incstack = 0
 21441  019D7A  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 21442                           
 21443                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21444  019D80  0012               	return		;funcret
 21445  019D82                     __end_of_display_help:
 21446                           	opt callstack 0
 21447                           
 21448 ;; *************** function _check_enter_button *****************
 21449 ;; Defined at:
 21450 ;;		line 42 in file "hid.c"
 21451 ;; Parameters:    Size  Location     Type
 21452 ;;  h               1  [STACK] PTR struct H_data
 21453 ;;		 -> H(7), 
 21454 ;; Auto vars:     Size  Location     Type
 21455 ;;		None
 21456 ;; Return value:  Size  Location     Type
 21457 ;;                  1  [STACK] _Bool 
 21458 ;; Registers used:
 21459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21460 ;; Tracked objects:
 21461 ;;		On entry : 0/1
 21462 ;;		On exit  : 0/0
 21463 ;;		Unchanged: 0/0
 21464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21469 ;;Total ram usage:        0 bytes
 21470 ;; Hardware stack levels used:    1
 21471 ;; Hardware stack levels required when called:   15
 21472 ;; This function calls:
 21473 ;;		Nothing
 21474 ;; This function is called by:
 21475 ;;		_main
 21476 ;; This function uses a reentrant model
 21477 ;;
 21478                           
 21479                           	psect	text88
 21480  019364                     __ptext88:
 21481                           	opt callstack 0
 21482  019364                     _check_enter_button:
 21483                           	opt callstack 15
 21484                           
 21485                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 21486                           ;stkvar	_h @ sp[(0)+-1]
 21487                           
 21488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21489                           ;incstack = 0
 21490  019364  0EFF               	movlw	-1
 21491  019366  50E3               	movf	plusw1,w,c
 21492  019368  6ED9               	movwf	fsr2l,c
 21493  01936A  6ADA               	clrf	fsr2h,c
 21494  01936C  0E04               	movlw	4
 21495  01936E  26D9               	addwf	fsr2l,f,c
 21496  019370  50DF               	movf	indf2,w,c
 21497  019372  A4D8               	btfss	status,2,c
 21498  019374  D013               	goto	l9956
 21499                           
 21500                           ;stkvar	_h @ sp[(0)+-1]
 21501  019376  0EFF               	movlw	-1
 21502  019378  50E3               	movf	plusw1,w,c
 21503  01937A  6ED9               	movwf	fsr2l,c
 21504  01937C  6ADA               	clrf	fsr2h,c
 21505  01937E  0E05               	movlw	5
 21506  019380  26D9               	addwf	fsr2l,f,c
 21507  019382  50DF               	movf	indf2,w,c
 21508  019384  A4D8               	btfss	status,2,c
 21509  019386  D00A               	goto	l9956
 21510                           
 21511                           ;hid.c: 45:   h->wait_enter = 1;
 21512                           ;stkvar	_h @ sp[(0)+-1]
 21513  019388  0EFF               	movlw	-1
 21514  01938A  50E3               	movf	plusw1,w,c
 21515  01938C  6ED9               	movwf	fsr2l,c
 21516  01938E  6ADA               	clrf	fsr2h,c
 21517  019390  0E04               	movlw	4
 21518  019392  26D9               	addwf	fsr2l,f,c
 21519  019394  0E01               	movlw	1
 21520  019396  6EDF               	movwf	indf2,c
 21521                           
 21522                           ;hid.c: 46:   return 1;
 21523  019398  0E01               	movlw	1
 21524  01939A  D001               	goto	L21
 21525  01939C                     l9956:
 21526                           
 21527                           ;hid.c: 48:  return 0;
 21528  01939C  0E00               	movlw	0
 21529  01939E                     L21:
 21530  01939E  6E01               	movwf	btemp^0,c
 21531                           
 21532                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 21533  0193A0  52E5               	movf	postdec1,f,c
 21534  0193A2  0012               	return		;funcret
 21535  0193A4                     __end_of_check_enter_button:
 21536                           	opt callstack 0
 21537                           
 21538 ;; *************** function _check_adc_scan *****************
 21539 ;; Defined at:
 21540 ;;		line 56 in file "daq.c"
 21541 ;; Parameters:    Size  Location     Type
 21542 ;;		None
 21543 ;; Auto vars:     Size  Location     Type
 21544 ;;		None
 21545 ;; Return value:  Size  Location     Type
 21546 ;;                  1  [STACK] _Bool 
 21547 ;; Registers used:
 21548 ;;		btemp
 21549 ;; Tracked objects:
 21550 ;;		On entry : 0/1
 21551 ;;		On exit  : 0/0
 21552 ;;		Unchanged: 0/0
 21553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21558 ;;Total ram usage:        0 bytes
 21559 ;; Hardware stack levels used:    1
 21560 ;; Hardware stack levels required when called:   15
 21561 ;; This function calls:
 21562 ;;		Nothing
 21563 ;; This function is called by:
 21564 ;;		_main
 21565 ;; This function uses a reentrant model
 21566 ;;
 21567                           
 21568                           	psect	text89
 21569  019D82                     __ptext89:
 21570                           	opt callstack 0
 21571  019D82                     _check_adc_scan:
 21572                           	opt callstack 15
 21573                           
 21574                           ;daq.c: 58:  return R.done;
 21575                           
 21576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21577                           ;incstack = 0
 21578  019D82  0060  F3C8  F001   	movff	_R+39,btemp	;volatile
 21579                           
 21580                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21581  019D88  0012               	return		;funcret
 21582  019D8A                     __end_of_check_adc_scan:
 21583                           	opt callstack 0
 21584                           
 21585 ;; *************** function _calc_model_data *****************
 21586 ;; Defined at:
 21587 ;;		line 56 in file "mbmc.c"
 21588 ;; Parameters:    Size  Location     Type
 21589 ;;		None
 21590 ;; Auto vars:     Size  Location     Type
 21591 ;;		None
 21592 ;; Return value:  Size  Location     Type
 21593 ;;                  1  [STACK] void 
 21594 ;; Registers used:
 21595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21596 ;; Tracked objects:
 21597 ;;		On entry : 0/1
 21598 ;;		On exit  : 3F/1
 21599 ;;		Unchanged: 0/0
 21600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21605 ;;Total ram usage:        0 bytes
 21606 ;; Hardware stack levels used:    1
 21607 ;; Hardware stack levels required when called:   18
 21608 ;; This function calls:
 21609 ;;		___fladd
 21610 ;;		___flmul
 21611 ;;		___flsub
 21612 ;;		_lp_filter
 21613 ;;		_start_bsoc
 21614 ;;		_stop_bsoc
 21615 ;; This function is called by:
 21616 ;;		_main
 21617 ;; This function uses a reentrant model
 21618 ;;
 21619                           
 21620                           	psect	text90
 21621  01560A                     __ptext90:
 21622                           	opt callstack 0
 21623  01560A                     _calc_model_data:
 21624                           	opt callstack 12
 21625                           
 21626                           ;mbmc.c: 58:  stop_bsoc();
 21627                           
 21628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21629                           ;incstack = 0
 21630  01560A  ECD2  F0CE         	call	_stop_bsoc	;wreg free
 21631                           
 21632                           ; BSR set to: 57
 21633                           ;mbmc.c: 60:  if (!V.calib) {
 21634  01560E  0102               	movlb	2	; () banked
 21635  015610  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 21636  015612  A4D8               	btfss	status,2,c
 21637  015614  D161               	goto	l9856
 21638                           
 21639                           ; BSR set to: 2
 21640                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 21641  015616  C100  F144         	movff	_C,_C+68	;volatile
 21642  01561A  C101  F145         	movff	_C+1,_C+69	;volatile
 21643  01561E  C102  F146         	movff	_C+2,_C+70	;volatile
 21644  015622  C103  F147         	movff	_C+3,_C+71	;volatile
 21645                           
 21646                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 21647  015626  C104  F148         	movff	_C+4,_C+72	;volatile
 21648  01562A  C105  F149         	movff	_C+5,_C+73	;volatile
 21649  01562E  C106  F14A         	movff	_C+6,_C+74	;volatile
 21650  015632  C107  F14B         	movff	_C+7,_C+75	;volatile
 21651                           
 21652                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 21653  015636  C110  F154         	movff	_C+16,_C+84	;volatile
 21654  01563A  C111  F155         	movff	_C+17,_C+85	;volatile
 21655  01563E  C112  F156         	movff	_C+18,_C+86	;volatile
 21656  015642  C113  F157         	movff	_C+19,_C+87	;volatile
 21657                           
 21658                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 21659  015646  C114  F150         	movff	_C+20,_C+80	;volatile
 21660  01564A  C115  F151         	movff	_C+21,_C+81	;volatile
 21661  01564E  C116  F152         	movff	_C+22,_C+82	;volatile
 21662  015652  C117  F153         	movff	_C+23,_C+83	;volatile
 21663                           
 21664                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 21665  015656  C130  F164         	movff	_C+48,_C+100	;volatile
 21666  01565A  C131  F165         	movff	_C+49,_C+101	;volatile
 21667  01565E  C132  F166         	movff	_C+50,_C+102	;volatile
 21668  015662  C133  F167         	movff	_C+51,_C+103	;volatile
 21669                           
 21670                           ; BSR set to: 2
 21671                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 21672  015666  0E01               	movlw	1
 21673  015668  6EE6               	movwf	postinc1,c
 21674  01566A  0E10               	movlw	16
 21675  01566C  6EE6               	movwf	postinc1,c
 21676  01566E  0060  F403  FFE6   	movff	_C,postinc1
 21677  015674  0060  F407  FFE6   	movff	_C+1,postinc1
 21678  01567A  0060  F40B  FFE6   	movff	_C+2,postinc1
 21679  015680  0060  F40F  FFE6   	movff	_C+3,postinc1
 21680  015686  0060  F413  FFE6   	movff	_C+4,postinc1
 21681  01568C  0060  F417  FFE6   	movff	_C+5,postinc1
 21682  015692  0060  F41B  FFE6   	movff	_C+6,postinc1
 21683  015698  0060  F41F  FFE6   	movff	_C+7,postinc1
 21684  01569E  ECC3  F0C8         	call	___flsub	;wreg free
 21685  0156A2  0060  F007  FFE6   	movff	btemp,postinc1
 21686  0156A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21687  0156AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21688  0156B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 21689  0156BA  EC5A  F0B5         	call	_lp_filter	;wreg free
 21690  0156BE  0060  F004  F140   	movff	btemp,_C+64	;volatile
 21691  0156C4  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 21692  0156CA  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 21693  0156D0  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 21694                           
 21695                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 21696  0156D6  0E01               	movlw	1
 21697  0156D8  6EE6               	movwf	postinc1,c
 21698  0156DA  0E11               	movlw	17
 21699  0156DC  6EE6               	movwf	postinc1,c
 21700  0156DE  0060  F553  FFE6   	movff	_C+84,postinc1
 21701  0156E4  0060  F557  FFE6   	movff	_C+85,postinc1
 21702  0156EA  0060  F55B  FFE6   	movff	_C+86,postinc1
 21703  0156F0  0060  F55F  FFE6   	movff	_C+87,postinc1
 21704  0156F6  0060  F503  FFE6   	movff	_C+64,postinc1
 21705  0156FC  0060  F507  FFE6   	movff	_C+65,postinc1
 21706  015702  0060  F50B  FFE6   	movff	_C+66,postinc1
 21707  015708  0060  F50F  FFE6   	movff	_C+67,postinc1
 21708  01570E  EC1C  F093         	call	___flmul	;wreg free
 21709  015712  0060  F007  FFE6   	movff	btemp,postinc1
 21710  015718  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21711  01571E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21712  015724  0060  F013  FFE6   	movff	btemp+3,postinc1
 21713  01572A  EC5A  F0B5         	call	_lp_filter	;wreg free
 21714  01572E  0060  F004  F168   	movff	btemp,_C+104	;volatile
 21715  015734  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 21716  01573A  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 21717  015740  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 21718                           
 21719                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 21720  015746  0E01               	movlw	1
 21721  015748  6EE6               	movwf	postinc1,c
 21722  01574A  0E12               	movlw	18
 21723  01574C  6EE6               	movwf	postinc1,c
 21724  01574E  0060  F543  FFE6   	movff	_C+80,postinc1
 21725  015754  0060  F547  FFE6   	movff	_C+81,postinc1
 21726  01575A  0060  F54B  FFE6   	movff	_C+82,postinc1
 21727  015760  0060  F54F  FFE6   	movff	_C+83,postinc1
 21728  015766  0060  F523  FFE6   	movff	_C+72,postinc1
 21729  01576C  0060  F527  FFE6   	movff	_C+73,postinc1
 21730  015772  0060  F52B  FFE6   	movff	_C+74,postinc1
 21731  015778  0060  F52F  FFE6   	movff	_C+75,postinc1
 21732  01577E  EC1C  F093         	call	___flmul	;wreg free
 21733  015782  0060  F007  FFE6   	movff	btemp,postinc1
 21734  015788  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21735  01578E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21736  015794  0060  F013  FFE6   	movff	btemp+3,postinc1
 21737  01579A  EC5A  F0B5         	call	_lp_filter	;wreg free
 21738  01579E  0060  F004  F170   	movff	btemp,_C+112	;volatile
 21739  0157A4  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 21740  0157AA  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 21741  0157B0  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 21742                           
 21743                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 21744  0157B6  0E01               	movlw	1
 21745  0157B8  6EE6               	movwf	postinc1,c
 21746  0157BA  0E13               	movlw	19
 21747  0157BC  6EE6               	movwf	postinc1,c
 21748  0157BE  0E00               	movlw	0
 21749  0157C0  6EE6               	movwf	postinc1,c
 21750  0157C2  0E00               	movlw	0
 21751  0157C4  6EE6               	movwf	postinc1,c
 21752  0157C6  0E60               	movlw	96
 21753  0157C8  6EE6               	movwf	postinc1,c
 21754  0157CA  0EC1               	movlw	193
 21755  0157CC  6EE6               	movwf	postinc1,c
 21756  0157CE  0060  F593  FFE6   	movff	_C+100,postinc1
 21757  0157D4  0060  F597  FFE6   	movff	_C+101,postinc1
 21758  0157DA  0060  F59B  FFE6   	movff	_C+102,postinc1
 21759  0157E0  0060  F59F  FFE6   	movff	_C+103,postinc1
 21760  0157E6  0060  F503  FFE6   	movff	_C+64,postinc1
 21761  0157EC  0060  F507  FFE6   	movff	_C+65,postinc1
 21762  0157F2  0060  F50B  FFE6   	movff	_C+66,postinc1
 21763  0157F8  0060  F50F  FFE6   	movff	_C+67,postinc1
 21764  0157FE  EC1C  F093         	call	___flmul	;wreg free
 21765  015802  0060  F007  FFE6   	movff	btemp,postinc1
 21766  015808  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21767  01580E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21768  015814  0060  F013  FFE6   	movff	btemp+3,postinc1
 21769  01581A  EC31  F097         	call	___fladd	;wreg free
 21770  01581E  0060  F007  FFE6   	movff	btemp,postinc1
 21771  015824  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21772  01582A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21773  015830  0060  F013  FFE6   	movff	btemp+3,postinc1
 21774  015836  EC5A  F0B5         	call	_lp_filter	;wreg free
 21775  01583A  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 21776  015840  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 21777  015846  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 21778  01584C  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 21779                           
 21780                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 21781  015852  0E01               	movlw	1
 21782  015854  6EE6               	movwf	postinc1,c
 21783  015856  0E14               	movlw	20
 21784  015858  6EE6               	movwf	postinc1,c
 21785  01585A  0060  F553  FFE6   	movff	_C+84,postinc1
 21786  015860  0060  F557  FFE6   	movff	_C+85,postinc1
 21787  015866  0060  F55B  FFE6   	movff	_C+86,postinc1
 21788  01586C  0060  F55F  FFE6   	movff	_C+87,postinc1
 21789  015872  0060  F513  FFE6   	movff	_C+68,postinc1
 21790  015878  0060  F517  FFE6   	movff	_C+69,postinc1
 21791  01587E  0060  F51B  FFE6   	movff	_C+70,postinc1
 21792  015884  0060  F51F  FFE6   	movff	_C+71,postinc1
 21793  01588A  EC1C  F093         	call	___flmul	;wreg free
 21794  01588E  0060  F007  FFE6   	movff	btemp,postinc1
 21795  015894  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21796  01589A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21797  0158A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 21798  0158A6  EC5A  F0B5         	call	_lp_filter	;wreg free
 21799  0158AA  0060  F004  F174   	movff	btemp,_C+116	;volatile
 21800  0158B0  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 21801  0158B6  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 21802  0158BC  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 21803                           
 21804                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 21805  0158C2  0101               	movlb	1	; () banked
 21806  0158C4  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 21807  0158C6  D008               	goto	l9856
 21808                           
 21809                           ; BSR set to: 1
 21810                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 21811  0158C8  0E17               	movlw	23
 21812  0158CA  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 21813  0158CC  0EB7               	movlw	183
 21814  0158CE  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 21815  0158D0  0ED1               	movlw	209
 21816  0158D2  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 21817  0158D4  0E38               	movlw	56
 21818  0158D6  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 21819  0158D8                     l9856:
 21820                           
 21821                           ;mbmc.c: 77:  start_bsoc();
 21822  0158D8  EC82  F0CD         	call	_start_bsoc	;wreg free
 21823                           
 21824                           ; BSR set to: 57
 21825                           ;mbmc.c: 78:  C.update = 1;
 21826  0158DC  0E01               	movlw	1
 21827  0158DE  0101               	movlb	1	; () banked
 21828  0158E0  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 21829                           
 21830                           ; BSR set to: 1
 21831                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21832  0158E2  0012               	return		;funcret
 21833  0158E4                     __end_of_calc_model_data:
 21834                           	opt callstack 0
 21835                           
 21836 ;; *************** function _stop_bsoc *****************
 21837 ;; Defined at:
 21838 ;;		line 105 in file "bsoc.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;		None
 21841 ;; Auto vars:     Size  Location     Type
 21842 ;;		None
 21843 ;; Return value:  Size  Location     Type
 21844 ;;                  1  [STACK] void 
 21845 ;; Registers used:
 21846 ;;		None
 21847 ;; Tracked objects:
 21848 ;;		On entry : 0/1
 21849 ;;		On exit  : 3F/39
 21850 ;;		Unchanged: 0/0
 21851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21856 ;;Total ram usage:        0 bytes
 21857 ;; Hardware stack levels used:    1
 21858 ;; Hardware stack levels required when called:   15
 21859 ;; This function calls:
 21860 ;;		Nothing
 21861 ;; This function is called by:
 21862 ;;		_calc_model_data
 21863 ;; This function uses a reentrant model
 21864 ;;
 21865                           
 21866                           	psect	text91
 21867  019DA4                     __ptext91:
 21868                           	opt callstack 0
 21869  019DA4                     _stop_bsoc:
 21870                           	opt callstack 14
 21871                           
 21872                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 0;
 21873                           
 21874                           ; BSR set to: 1
 21875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21876                           ;incstack = 0
 21877  019DA4  0139               	movlb	57	; () banked
 21878  019DA6  9D96               	bcf	150,6,b	;volatile
 21879                           
 21880                           ; BSR set to: 57
 21881                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21882  019DA8  0012               	return		;funcret
 21883  019DAA                     __end_of_stop_bsoc:
 21884                           	opt callstack 0
 21885                           
 21886 ;; *************** function _start_bsoc *****************
 21887 ;; Defined at:
 21888 ;;		line 96 in file "bsoc.c"
 21889 ;; Parameters:    Size  Location     Type
 21890 ;;		None
 21891 ;; Auto vars:     Size  Location     Type
 21892 ;;		None
 21893 ;; Return value:  Size  Location     Type
 21894 ;;                  1  [STACK] void 
 21895 ;; Registers used:
 21896 ;;		wreg, status,2, status,0, btemp+11
 21897 ;; Tracked objects:
 21898 ;;		On entry : 3C/2
 21899 ;;		On exit  : 3F/39
 21900 ;;		Unchanged: 0/0
 21901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21906 ;;Total ram usage:        0 bytes
 21907 ;; Hardware stack levels used:    1
 21908 ;; Hardware stack levels required when called:   15
 21909 ;; This function calls:
 21910 ;;		Nothing
 21911 ;; This function is called by:
 21912 ;;		_calc_model_data
 21913 ;; This function uses a reentrant model
 21914 ;;
 21915                           
 21916                           	psect	text92
 21917  019B04                     __ptext92:
 21918                           	opt callstack 0
 21919  019B04                     _start_bsoc:
 21920                           	opt callstack 14
 21921                           
 21922                           ;bsoc.c: 99:  PIE6bits.TMR3IE = 1;
 21923                           
 21924                           ; BSR set to: 57
 21925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21926                           ;incstack = 0
 21927  019B04  0139               	movlb	57	; () banked
 21928  019B06  8D96               	bsf	150,6,b	;volatile
 21929                           
 21930                           ; BSR set to: 57
 21931  019B08  A4BE               	btfss	190,2,c	;volatile
 21932  019B0A  D002               	goto	u8490
 21933  019B0C  0E01               	movlw	1
 21934  019B0E  D001               	goto	u8496
 21935  019B10                     u8490:
 21936  019B10  0E00               	movlw	0
 21937  019B12                     u8496:
 21938  019B12  0AFF               	xorlw	255
 21939  019B14  6E0C               	movwf	(btemp+11)^0,c
 21940  019B16  460C               	rlncf	(btemp+11)^0,f,c
 21941  019B18  460C               	rlncf	(btemp+11)^0,f,c
 21942  019B1A  50BE               	movf	190,w,c	;volatile
 21943  019B1C  180C               	xorwf	(btemp+11)^0,w,c
 21944  019B1E  0BFB               	andlw	-5
 21945  019B20  180C               	xorwf	(btemp+11)^0,w,c
 21946  019B22  6EBE               	movwf	190,c	;volatile
 21947                           
 21948                           ; BSR set to: 57
 21949                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21950  019B24  0012               	return		;funcret
 21951  019B26                     __end_of_start_bsoc:
 21952                           	opt callstack 0
 21953                           
 21954 ;; *************** function _lp_filter *****************
 21955 ;; Defined at:
 21956 ;;		line 18 in file "mbmc.c"
 21957 ;; Parameters:    Size  Location     Type
 21958 ;;  new             4  [STACK] const float 
 21959 ;;  bn              1  [STACK] const unsigned char 
 21960 ;;  slow            1  [STACK] const char 
 21961 ;; Auto vars:     Size  Location     Type
 21962 ;;  lp_speed        4  [STACK] float 
 21963 ;; Return value:  Size  Location     Type
 21964 ;;                  4  [STACK] float 
 21965 ;; Registers used:
 21966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21967 ;; Tracked objects:
 21968 ;;		On entry : 0/2
 21969 ;;		On exit  : 0/0
 21970 ;;		Unchanged: 0/0
 21971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21976 ;;Total ram usage:        0 bytes
 21977 ;; Hardware stack levels used:    1
 21978 ;; Hardware stack levels required when called:   17
 21979 ;; This function calls:
 21980 ;;		___fladd
 21981 ;;		___flmul
 21982 ;;		___flsub
 21983 ;; This function is called by:
 21984 ;;		_main
 21985 ;;		_convert_adc_data
 21986 ;;		_calc_model_data
 21987 ;; This function uses a reentrant model
 21988 ;;
 21989                           
 21990                           	psect	text93
 21991  016AB4                     __ptext93:
 21992                           	opt callstack 0
 21993  016AB4                     _lp_filter:
 21994                           	opt callstack 0
 21995                           
 21996                           ; BSR set to: 57
 21997                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21998  016AB4  52E6               	movf	postinc1,f,c
 21999  016AB6  52E6               	movf	postinc1,f,c
 22000  016AB8  52E6               	movf	postinc1,f,c
 22001  016ABA  52E6               	movf	postinc1,f,c
 22002                           
 22003                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 22004                           ;stkvar	_bn @ sp[(-4)+-5]
 22005                           
 22006                           ;incstack = 0
 22007  016ABC  0EF7               	movlw	-9
 22008  016ABE  006F FF8C  F001    	movff	plusw1,btemp
 22009  016AC4  0E14               	movlw	20
 22010  016AC6  6401               	cpfsgt	btemp^0,c
 22011  016AC8  D011               	goto	l9340
 22012  016ACA                     u8310:
 22013                           
 22014                           ;mbmc.c: 24:   return new;
 22015                           ;stkvar	_new @ sp[(-4)+-4]
 22016  016ACA  0EF8               	movlw	-8
 22017  016ACC  006F FF8C  F001    	movff	plusw1,btemp
 22018  016AD2  0EF9               	movlw	-7
 22019  016AD4  006F FF8C  F002    	movff	plusw1,btemp+1
 22020  016ADA  0EFA               	movlw	-6
 22021  016ADC  006F FF8C  F003    	movff	plusw1,btemp+2
 22022  016AE2  0EFB               	movlw	-5
 22023  016AE4  006F FF8C  F004    	movff	plusw1,btemp+3
 22024  016AEA  D0BF               	goto	l1780
 22025  016AEC                     l9340:
 22026                           
 22027                           ;mbmc.c: 26:  if (slow == (-1)) {
 22028                           ;stkvar	_slow @ sp[(-4)+-6]
 22029  016AEC  0EF6               	movlw	-10
 22030  016AEE  28E3               	incf	plusw1,w,c
 22031  016AF0  A4D8               	btfss	status,2,c
 22032  016AF2  D012               	goto	l9348
 22033                           
 22034                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 22035                           ;stkvar	_bn @ sp[(-4)+-5]
 22036  016AF4  0EF7               	movlw	-9
 22037  016AF6  50E3               	movf	plusw1,w,c
 22038  016AF8  0D04               	mullw	4
 22039  016AFA  0E00               	movlw	low lp_filter@smooth
 22040  016AFC  24F3               	addwf	243,w,c
 22041  016AFE  6ED9               	movwf	fsr2l,c
 22042  016B00  0E03               	movlw	high lp_filter@smooth
 22043  016B02  20F4               	addwfc	prodh,w,c
 22044  016B04  6EDA               	movwf	fsr2h,c
 22045  016B06  0E00               	movlw	0
 22046  016B08  6EDE               	movwf	postinc2,c
 22047  016B0A  0E00               	movlw	0
 22048  016B0C  6EDE               	movwf	postinc2,c
 22049  016B0E  0E00               	movlw	0
 22050  016B10  6EDE               	movwf	postinc2,c
 22051  016B12  0E00               	movlw	0
 22052  016B14  6EDD               	movwf	postdec2,c
 22053  016B16  D7D9               	goto	u8310
 22054  016B18                     l9348:
 22055                           
 22056                           ;mbmc.c: 31:  if (slow) {
 22057                           ;stkvar	_slow @ sp[(-4)+-6]
 22058  016B18  0EF6               	movlw	-10
 22059  016B1A  50E3               	movf	plusw1,w,c
 22060  016B1C  B4D8               	btfsc	status,2,c
 22061  016B1E  D008               	goto	l9352
 22062                           
 22063                           ;mbmc.c: 32:   lp_speed = 0.033;
 22064  016B20  0E02               	movlw	2
 22065  016B22  6E09               	movwf	(btemp+8)^0,c
 22066  016B24  0E2B               	movlw	43
 22067  016B26  6E0A               	movwf	(btemp+9)^0,c
 22068  016B28  0E07               	movlw	7
 22069  016B2A  6E0B               	movwf	(btemp+10)^0,c
 22070  016B2C  0E3D               	movlw	61
 22071  016B2E  D007               	goto	L22
 22072  016B30                     l9352:
 22073                           
 22074                           ;mbmc.c: 34:   lp_speed = 0.125;
 22075  016B30  0E00               	movlw	0
 22076  016B32  6E09               	movwf	(btemp+8)^0,c
 22077  016B34  0E00               	movlw	0
 22078  016B36  6E0A               	movwf	(btemp+9)^0,c
 22079  016B38  0E00               	movlw	0
 22080  016B3A  6E0B               	movwf	(btemp+10)^0,c
 22081  016B3C  0E3E               	movlw	62
 22082  016B3E                     L22:
 22083  016B3E  6E0C               	movwf	(btemp+11)^0,c
 22084                           
 22085                           ;stkvar	_lp_speed @ sp[(-4)+0]
 22086  016B40  0EFC               	movlw	-4
 22087  016B42  0060  F027  FFE3   	movff	btemp+8,plusw1
 22088  016B48  0EFD               	movlw	-3
 22089  016B4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22090  016B50  0EFE               	movlw	-2
 22091  016B52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22092  016B58  0EFF               	movlw	-1
 22093  016B5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22094                           
 22095                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 22096                           ;stkvar	_bn @ sp[(-4)+-5]
 22097  016B60  0EF7               	movlw	-9
 22098  016B62  50E3               	movf	plusw1,w,c
 22099  016B64  0D04               	mullw	4
 22100  016B66  0E00               	movlw	low lp_filter@smooth
 22101  016B68  24F3               	addwf	243,w,c
 22102  016B6A  6ED9               	movwf	fsr2l,c
 22103  016B6C  0E03               	movlw	high lp_filter@smooth
 22104  016B6E  20F4               	addwfc	prodh,w,c
 22105  016B70  6EDA               	movwf	fsr2h,c
 22106  016B72  006F FF7B FFE6     	movff	postinc2,postinc1
 22107  016B78  006F FF7B FFE6     	movff	postinc2,postinc1
 22108  016B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 22109  016B84  006F FF7B FFE6     	movff	postinc2,postinc1
 22110                           
 22111                           ;stkvar	_lp_speed @ sp[(-8)+0]
 22112  016B8A  0EF8               	movlw	-8
 22113  016B8C  006F FF8F FFE6     	movff	plusw1,postinc1
 22114  016B92  006F FF8F FFE6     	movff	plusw1,postinc1
 22115  016B98  006F FF8F FFE6     	movff	plusw1,postinc1
 22116  016B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 22117                           
 22118                           ;stkvar	_bn @ sp[(-12)+-5]
 22119  016BA4  0EEF               	movlw	-17
 22120  016BA6  50E3               	movf	plusw1,w,c
 22121  016BA8  0D04               	mullw	4
 22122  016BAA  0E00               	movlw	low lp_filter@smooth
 22123  016BAC  24F3               	addwf	243,w,c
 22124  016BAE  6ED9               	movwf	fsr2l,c
 22125  016BB0  0E03               	movlw	high lp_filter@smooth
 22126  016BB2  20F4               	addwfc	prodh,w,c
 22127  016BB4  6EDA               	movwf	fsr2h,c
 22128  016BB6  006F FF7B FFE6     	movff	postinc2,postinc1
 22129  016BBC  006F FF7B FFE6     	movff	postinc2,postinc1
 22130  016BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 22131  016BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 22132                           
 22133                           ;stkvar	_new @ sp[(-16)+-4]
 22134  016BCE  0EEC               	movlw	-20
 22135  016BD0  006F FF8F FFE6     	movff	plusw1,postinc1
 22136  016BD6  006F FF8F FFE6     	movff	plusw1,postinc1
 22137  016BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 22138  016BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 22139  016BE8  ECC3  F0C8         	call	___flsub	;wreg free
 22140  016BEC  0060  F007  FFE6   	movff	btemp,postinc1
 22141  016BF2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22142  016BF8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22143  016BFE  0060  F013  FFE6   	movff	btemp+3,postinc1
 22144  016C04  EC1C  F093         	call	___flmul	;wreg free
 22145  016C08  0060  F007  FFE6   	movff	btemp,postinc1
 22146  016C0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22147  016C14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22148  016C1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 22149  016C20  EC31  F097         	call	___fladd	;wreg free
 22150                           
 22151                           ;stkvar	_bn @ sp[(-4)+-5]
 22152  016C24  0EF7               	movlw	-9
 22153  016C26  50E3               	movf	plusw1,w,c
 22154  016C28  0D04               	mullw	4
 22155  016C2A  0E00               	movlw	low lp_filter@smooth
 22156  016C2C  24F3               	addwf	243,w,c
 22157  016C2E  6ED9               	movwf	fsr2l,c
 22158  016C30  0E03               	movlw	high lp_filter@smooth
 22159  016C32  20F4               	addwfc	prodh,w,c
 22160  016C34  6EDA               	movwf	fsr2h,c
 22161  016C36  0060  F007  FFDE   	movff	btemp,postinc2
 22162  016C3C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 22163  016C42  0060  F00F  FFDE   	movff	btemp+2,postinc2
 22164  016C48  0060  F013  FFDD   	movff	btemp+3,postdec2
 22165  016C4E  52DD               	movf	postdec2,f,c
 22166  016C50  52DD               	movf	postdec2,f,c
 22167  016C52  006F FF78  F001    	movff	postinc2,btemp
 22168  016C58  006F FF78  F002    	movff	postinc2,btemp+1
 22169  016C5E  006F FF78  F003    	movff	postinc2,btemp+2
 22170  016C64  006F FF78  F004    	movff	postinc2,btemp+3
 22171  016C6A                     l1780:
 22172                           
 22173                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 22174  016C6A  0EF6               	movlw	246
 22175  016C6C  26E1               	addwf	fsr1l,f,c
 22176  016C6E  0EFF               	movlw	255
 22177  016C70  22E2               	addwfc	fsr1h,f,c
 22178  016C72  0012               	return		;funcret
 22179  016C74                     __end_of_lp_filter:
 22180                           	opt callstack 0
 22181                           
 22182 ;; *************** function ___flsub *****************
 22183 ;; Defined at:
 22184 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 22185 ;; Parameters:    Size  Location     Type
 22186 ;;  b               4  [STACK] float 
 22187 ;;  a               4  [STACK] float 
 22188 ;; Auto vars:     Size  Location     Type
 22189 ;;		None
 22190 ;; Return value:  Size  Location     Type
 22191 ;;                  4  [STACK] float 
 22192 ;; Registers used:
 22193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22194 ;; Tracked objects:
 22195 ;;		On entry : 0/1
 22196 ;;		On exit  : 0/0
 22197 ;;		Unchanged: 0/0
 22198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22203 ;;Total ram usage:        0 bytes
 22204 ;; Hardware stack levels used:    1
 22205 ;; Hardware stack levels required when called:   16
 22206 ;; This function calls:
 22207 ;;		___fladd
 22208 ;; This function is called by:
 22209 ;;		_conv_raw_result
 22210 ;;		_lp_filter
 22211 ;;		_calc_model_data
 22212 ;;		_efgtoa
 22213 ;; This function uses a reentrant model
 22214 ;;
 22215                           
 22216                           	psect	text94
 22217  019186                     __ptext94:
 22218                           	opt callstack 0
 22219  019186                     ___flsub:
 22220                           	opt callstack 0
 22221                           
 22222                           ;stkvar	_a @ sp[(0)+-8]
 22223                           
 22224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22225                           ;incstack = 0
 22226 ;; hardware stack exceeded
 22227  019186  0EFB               	movlw	-5
 22228  019188  7EE3               	btg	plusw1,7,c
 22229                           
 22230                           ;stkvar	_a @ sp[(0)+-8]
 22231  01918A  0EF8               	movlw	-8
 22232  01918C  006F FF8F FFE6     	movff	plusw1,postinc1
 22233  019192  006F FF8F FFE6     	movff	plusw1,postinc1
 22234  019198  006F FF8F FFE6     	movff	plusw1,postinc1
 22235  01919E  006F FF8F FFE6     	movff	plusw1,postinc1
 22236                           
 22237                           ;stkvar	_b @ sp[(-4)+-4]
 22238  0191A4  0EF8               	movlw	-8
 22239  0191A6  006F FF8F FFE6     	movff	plusw1,postinc1
 22240  0191AC  006F FF8F FFE6     	movff	plusw1,postinc1
 22241  0191B2  006F FF8F FFE6     	movff	plusw1,postinc1
 22242  0191B8  006F FF8F FFE6     	movff	plusw1,postinc1
 22243  0191BE  EC31  F097         	call	___fladd	;wreg free
 22244                           
 22245                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22246  0191C2  0EF8               	movlw	248
 22247  0191C4  26E1               	addwf	fsr1l,f,c
 22248  0191C6  0EFF               	movlw	255
 22249  0191C8  22E2               	addwfc	fsr1h,f,c
 22250  0191CA  0012               	return		;funcret
 22251  0191CC                     __end_of___flsub:
 22252                           	opt callstack 0
 22253                           
 22254 ;; *************** function ___fladd *****************
 22255 ;; Defined at:
 22256 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 22257 ;; Parameters:    Size  Location     Type
 22258 ;;  b               4  [STACK] float 
 22259 ;;  a               4  [STACK] float 
 22260 ;; Auto vars:     Size  Location     Type
 22261 ;;  grs             1  [STACK] unsigned char 
 22262 ;;  bexp            1  [STACK] unsigned char 
 22263 ;;  aexp            1  [STACK] unsigned char 
 22264 ;;  signs           1  [STACK] unsigned char 
 22265 ;; Return value:  Size  Location     Type
 22266 ;;                  4  [STACK] unsigned char 
 22267 ;; Registers used:
 22268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 22269 ;; Tracked objects:
 22270 ;;		On entry : 0/0
 22271 ;;		On exit  : 0/0
 22272 ;;		Unchanged: 0/0
 22273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22278 ;;Total ram usage:        0 bytes
 22279 ;; Hardware stack levels used:    1
 22280 ;; Hardware stack levels required when called:   15
 22281 ;; This function calls:
 22282 ;;		Nothing
 22283 ;; This function is called by:
 22284 ;;		_lp_filter
 22285 ;;		_calc_model_data
 22286 ;;		_calc_bsoc
 22287 ;;		_efgtoa
 22288 ;;		___flsub
 22289 ;; This function uses a reentrant model
 22290 ;;
 22291                           
 22292                           	psect	text95
 22293  012E62                     __ptext95:
 22294                           	opt callstack 0
 22295  012E62                     ___fladd:
 22296                           	opt callstack 0
 22297                           
 22298                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22299  012E62  52E6               	movf	postinc1,f,c
 22300  012E64  52E6               	movf	postinc1,f,c
 22301  012E66  52E6               	movf	postinc1,f,c
 22302  012E68  52E6               	movf	postinc1,f,c
 22303                           
 22304                           ;stkvar	_b @ sp[(-4)+-4]
 22305                           
 22306                           ;incstack = 0
 22307 ;; hardware stack exceeded
 22308  012E6A  0EFB               	movlw	251
 22309  012E6C  24E1               	addwf	fsr1l,w,c
 22310  012E6E  6ED9               	movwf	fsr2l,c
 22311  012E70  0EFF               	movlw	255
 22312  012E72  20E2               	addwfc	fsr1h,w,c
 22313  012E74  6EDA               	movwf	fsr2h,c
 22314  012E76  50DF               	movf	indf2,w,c
 22315  012E78  6E0C               	movwf	(btemp+11)^0,c
 22316  012E7A  0E80               	movlw	128
 22317  012E7C  160C               	andwf	(btemp+11)^0,f,c
 22318                           
 22319                           ;stkvar	_signs @ sp[(-4)+3]
 22320  012E7E  0EFF               	movlw	-1
 22321  012E80  0060  F033  FFE3   	movff	btemp+11,plusw1
 22322                           
 22323                           ;stkvar	_b @ sp[(-4)+-4]
 22324  012E86  0EFB               	movlw	251
 22325  012E88  24E1               	addwf	fsr1l,w,c
 22326  012E8A  6ED9               	movwf	fsr2l,c
 22327  012E8C  0EFF               	movlw	255
 22328  012E8E  20E2               	addwfc	fsr1h,w,c
 22329  012E90  6EDA               	movwf	fsr2h,c
 22330  012E92  50DF               	movf	indf2,w,c
 22331  012E94  6E0C               	movwf	(btemp+11)^0,c
 22332  012E96  90D8               	bcf	status,0,c
 22333  012E98  340C               	rlcf	(btemp+11)^0,w,c
 22334  012E9A  6E0B               	movwf	(btemp+10)^0,c
 22335                           
 22336                           ;stkvar	_bexp @ sp[(-4)+1]
 22337  012E9C  0EFD               	movlw	-3
 22338  012E9E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22339                           
 22340                           ;stkvar	_b @ sp[(-4)+-4]
 22341  012EA4  0EFA               	movlw	250
 22342  012EA6  24E1               	addwf	fsr1l,w,c
 22343  012EA8  6ED9               	movwf	fsr2l,c
 22344  012EAA  0EFF               	movlw	255
 22345  012EAC  20E2               	addwfc	fsr1h,w,c
 22346  012EAE  6EDA               	movwf	fsr2h,c
 22347  012EB0  AEDF               	btfss	indf2,7,c
 22348  012EB2  D002               	goto	l6940
 22349                           
 22350                           ;stkvar	_bexp @ sp[(-4)+1]
 22351  012EB4  0EFD               	movlw	-3
 22352  012EB6  80E3               	bsf	plusw1,0,c
 22353  012EB8                     l6940:
 22354                           
 22355                           ;stkvar	_bexp @ sp[(-4)+1]
 22356  012EB8  0EFD               	movlw	-3
 22357  012EBA  50E3               	movf	plusw1,w,c
 22358  012EBC  B4D8               	btfsc	status,2,c
 22359  012EBE  D027               	goto	l6950
 22360                           
 22361                           ;stkvar	_bexp @ sp[(-4)+1]
 22362  012EC0  0EFD               	movlw	-3
 22363  012EC2  28E3               	incf	plusw1,w,c
 22364  012EC4  A4D8               	btfss	status,2,c
 22365  012EC6  D018               	goto	l6946
 22366  012EC8  0E00               	movlw	0
 22367  012ECA  6E09               	movwf	(btemp+8)^0,c
 22368  012ECC  0E00               	movlw	0
 22369  012ECE  6E0A               	movwf	(btemp+9)^0,c
 22370  012ED0  0E00               	movlw	0
 22371  012ED2  6E0B               	movwf	(btemp+10)^0,c
 22372  012ED4  0E00               	movlw	0
 22373  012ED6  6E0C               	movwf	(btemp+11)^0,c
 22374                           
 22375                           ;stkvar	_b @ sp[(-4)+-4]
 22376  012ED8  0EF8               	movlw	-8
 22377  012EDA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22378  012EE0  0EF9               	movlw	-7
 22379  012EE2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22380  012EE8  0EFA               	movlw	-6
 22381  012EEA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22382  012EF0  0EFB               	movlw	-5
 22383  012EF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22384  012EF8                     l6946:
 22385                           
 22386                           ;stkvar	_b @ sp[(-4)+-4]
 22387  012EF8  0EFA               	movlw	-6
 22388  012EFA  8EE3               	bsf	plusw1,7,c
 22389                           
 22390                           ;stkvar	_b @ sp[(-4)+-4]
 22391  012EFC  0EFB               	movlw	251
 22392  012EFE  24E1               	addwf	fsr1l,w,c
 22393  012F00  6ED9               	movwf	fsr2l,c
 22394  012F02  0EFF               	movlw	255
 22395  012F04  20E2               	addwfc	fsr1h,w,c
 22396  012F06  6EDA               	movwf	fsr2h,c
 22397  012F08  0E00               	movlw	0
 22398  012F0A  6EDF               	movwf	indf2,c
 22399  012F0C  D018               	goto	l6952
 22400  012F0E                     l6950:
 22401  012F0E  0E00               	movlw	0
 22402  012F10  6E09               	movwf	(btemp+8)^0,c
 22403  012F12  0E00               	movlw	0
 22404  012F14  6E0A               	movwf	(btemp+9)^0,c
 22405  012F16  0E00               	movlw	0
 22406  012F18  6E0B               	movwf	(btemp+10)^0,c
 22407  012F1A  0E00               	movlw	0
 22408  012F1C  6E0C               	movwf	(btemp+11)^0,c
 22409                           
 22410                           ;stkvar	_b @ sp[(-4)+-4]
 22411  012F1E  0EF8               	movlw	-8
 22412  012F20  0060  F027  FFE3   	movff	btemp+8,plusw1
 22413  012F26  0EF9               	movlw	-7
 22414  012F28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22415  012F2E  0EFA               	movlw	-6
 22416  012F30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22417  012F36  0EFB               	movlw	-5
 22418  012F38  0060  F033  FFE3   	movff	btemp+11,plusw1
 22419  012F3E                     l6952:
 22420                           
 22421                           ;stkvar	_a @ sp[(-4)+-8]
 22422  012F3E  0EF7               	movlw	247
 22423  012F40  24E1               	addwf	fsr1l,w,c
 22424  012F42  6ED9               	movwf	fsr2l,c
 22425  012F44  0EFF               	movlw	255
 22426  012F46  20E2               	addwfc	fsr1h,w,c
 22427  012F48  6EDA               	movwf	fsr2h,c
 22428  012F4A  50DF               	movf	indf2,w,c
 22429  012F4C  6E0C               	movwf	(btemp+11)^0,c
 22430  012F4E  0E80               	movlw	128
 22431  012F50  160C               	andwf	(btemp+11)^0,f,c
 22432                           
 22433                           ;stkvar	_aexp @ sp[(-4)+2]
 22434  012F52  0EFE               	movlw	-2
 22435  012F54  0060  F033  FFE3   	movff	btemp+11,plusw1
 22436                           
 22437                           ;stkvar	_signs @ sp[(-4)+3]
 22438                           ;stkvar	_aexp @ sp[(-4)+2]
 22439  012F5A  50E1               	movf	fsr1l,w,c
 22440  012F5C  0FFE               	addlw	-2
 22441  012F5E  6ED9               	movwf	fsr2l,c
 22442  012F60  50E2               	movf	fsr1h,w,c
 22443  012F62  6EDA               	movwf	fsr2h,c
 22444  012F64  0EFF               	movlw	255
 22445  012F66  22DA               	addwfc	fsr2h,f,c
 22446  012F68  0EFF               	movlw	-1
 22447  012F6A  50E3               	movf	plusw1,w,c
 22448  012F6C  18DE               	xorwf	postinc2,w,c
 22449  012F6E  B4D8               	btfsc	status,2,c
 22450  012F70  D002               	goto	l6958
 22451                           
 22452                           ;stkvar	_signs @ sp[(-4)+3]
 22453  012F72  0EFF               	movlw	-1
 22454  012F74  8CE3               	bsf	plusw1,6,c
 22455  012F76                     l6958:
 22456                           
 22457                           ;stkvar	_a @ sp[(-4)+-8]
 22458  012F76  0EF7               	movlw	247
 22459  012F78  24E1               	addwf	fsr1l,w,c
 22460  012F7A  6ED9               	movwf	fsr2l,c
 22461  012F7C  0EFF               	movlw	255
 22462  012F7E  20E2               	addwfc	fsr1h,w,c
 22463  012F80  6EDA               	movwf	fsr2h,c
 22464  012F82  50DF               	movf	indf2,w,c
 22465  012F84  6E0C               	movwf	(btemp+11)^0,c
 22466  012F86  90D8               	bcf	status,0,c
 22467  012F88  340C               	rlcf	(btemp+11)^0,w,c
 22468  012F8A  6E0B               	movwf	(btemp+10)^0,c
 22469                           
 22470                           ;stkvar	_aexp @ sp[(-4)+2]
 22471  012F8C  0EFE               	movlw	-2
 22472  012F8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22473                           
 22474                           ;stkvar	_a @ sp[(-4)+-8]
 22475  012F94  0EF6               	movlw	246
 22476  012F96  24E1               	addwf	fsr1l,w,c
 22477  012F98  6ED9               	movwf	fsr2l,c
 22478  012F9A  0EFF               	movlw	255
 22479  012F9C  20E2               	addwfc	fsr1h,w,c
 22480  012F9E  6EDA               	movwf	fsr2h,c
 22481  012FA0  AEDF               	btfss	indf2,7,c
 22482  012FA2  D002               	goto	l6964
 22483                           
 22484                           ;stkvar	_aexp @ sp[(-4)+2]
 22485  012FA4  0EFE               	movlw	-2
 22486  012FA6  80E3               	bsf	plusw1,0,c
 22487  012FA8                     l6964:
 22488                           
 22489                           ;stkvar	_aexp @ sp[(-4)+2]
 22490  012FA8  0EFE               	movlw	-2
 22491  012FAA  50E3               	movf	plusw1,w,c
 22492  012FAC  B4D8               	btfsc	status,2,c
 22493  012FAE  D027               	goto	l6974
 22494                           
 22495                           ;stkvar	_aexp @ sp[(-4)+2]
 22496  012FB0  0EFE               	movlw	-2
 22497  012FB2  28E3               	incf	plusw1,w,c
 22498  012FB4  A4D8               	btfss	status,2,c
 22499  012FB6  D018               	goto	l6970
 22500  012FB8  0E00               	movlw	0
 22501  012FBA  6E09               	movwf	(btemp+8)^0,c
 22502  012FBC  0E00               	movlw	0
 22503  012FBE  6E0A               	movwf	(btemp+9)^0,c
 22504  012FC0  0E00               	movlw	0
 22505  012FC2  6E0B               	movwf	(btemp+10)^0,c
 22506  012FC4  0E00               	movlw	0
 22507  012FC6  6E0C               	movwf	(btemp+11)^0,c
 22508                           
 22509                           ;stkvar	_a @ sp[(-4)+-8]
 22510  012FC8  0EF4               	movlw	-12
 22511  012FCA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22512  012FD0  0EF5               	movlw	-11
 22513  012FD2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22514  012FD8  0EF6               	movlw	-10
 22515  012FDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22516  012FE0  0EF7               	movlw	-9
 22517  012FE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22518  012FE8                     l6970:
 22519                           
 22520                           ;stkvar	_a @ sp[(-4)+-8]
 22521  012FE8  0EF6               	movlw	-10
 22522  012FEA  8EE3               	bsf	plusw1,7,c
 22523                           
 22524                           ;stkvar	_a @ sp[(-4)+-8]
 22525  012FEC  0EF7               	movlw	247
 22526  012FEE  24E1               	addwf	fsr1l,w,c
 22527  012FF0  6ED9               	movwf	fsr2l,c
 22528  012FF2  0EFF               	movlw	255
 22529  012FF4  20E2               	addwfc	fsr1h,w,c
 22530  012FF6  6EDA               	movwf	fsr2h,c
 22531  012FF8  0E00               	movlw	0
 22532  012FFA  6EDF               	movwf	indf2,c
 22533  012FFC  D018               	goto	l6976
 22534  012FFE                     l6974:
 22535  012FFE  0E00               	movlw	0
 22536  013000  6E09               	movwf	(btemp+8)^0,c
 22537  013002  0E00               	movlw	0
 22538  013004  6E0A               	movwf	(btemp+9)^0,c
 22539  013006  0E00               	movlw	0
 22540  013008  6E0B               	movwf	(btemp+10)^0,c
 22541  01300A  0E00               	movlw	0
 22542  01300C  6E0C               	movwf	(btemp+11)^0,c
 22543                           
 22544                           ;stkvar	_a @ sp[(-4)+-8]
 22545  01300E  0EF4               	movlw	-12
 22546  013010  0060  F027  FFE3   	movff	btemp+8,plusw1
 22547  013016  0EF5               	movlw	-11
 22548  013018  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22549  01301E  0EF6               	movlw	-10
 22550  013020  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22551  013026  0EF7               	movlw	-9
 22552  013028  0060  F033  FFE3   	movff	btemp+11,plusw1
 22553  01302E                     l6976:
 22554                           
 22555                           ;stkvar	_bexp @ sp[(-4)+1]
 22556                           ;stkvar	_aexp @ sp[(-4)+2]
 22557  01302E  50E1               	movf	fsr1l,w,c
 22558  013030  0FFE               	addlw	-2
 22559  013032  6ED9               	movwf	fsr2l,c
 22560  013034  50E2               	movf	fsr1h,w,c
 22561  013036  6EDA               	movwf	fsr2h,c
 22562  013038  0EFF               	movlw	255
 22563  01303A  22DA               	addwfc	fsr2h,f,c
 22564  01303C  0EFD               	movlw	-3
 22565  01303E  50E3               	movf	plusw1,w,c
 22566  013040  5CDE               	subwf	postinc2,w,c
 22567  013042  B0D8               	btfsc	status,0,c
 22568  013044  D0A4               	goto	l7012
 22569                           
 22570                           ;stkvar	_signs @ sp[(-4)+3]
 22571  013046  0EFF               	movlw	-1
 22572  013048  ACE3               	btfss	plusw1,6,c
 22573  01304A  D002               	goto	l6982
 22574                           
 22575                           ;stkvar	_signs @ sp[(-4)+3]
 22576  01304C  0EFF               	movlw	-1
 22577  01304E  7EE3               	btg	plusw1,7,c
 22578  013050                     l6982:
 22579                           
 22580                           ;stkvar	_bexp @ sp[(-4)+1]
 22581                           ;stkvar	_grs @ sp[(-4)+0]
 22582  013050  0EFD               	movlw	-3
 22583  013052  006F FF8C  F001    	movff	plusw1,btemp
 22584  013058  0EFC               	movlw	-4
 22585  01305A  0060  F007  FFE3   	movff	btemp,plusw1
 22586                           
 22587                           ;stkvar	_aexp @ sp[(-4)+2]
 22588                           ;stkvar	_bexp @ sp[(-4)+1]
 22589  013060  0EFE               	movlw	-2
 22590  013062  006F FF8C  F001    	movff	plusw1,btemp
 22591  013068  0EFD               	movlw	-3
 22592  01306A  0060  F007  FFE3   	movff	btemp,plusw1
 22593                           
 22594                           ;stkvar	_grs @ sp[(-4)+0]
 22595                           ;stkvar	_aexp @ sp[(-4)+2]
 22596  013070  0EFC               	movlw	-4
 22597  013072  006F FF8C  F001    	movff	plusw1,btemp
 22598  013078  0EFE               	movlw	-2
 22599  01307A  0060  F007  FFE3   	movff	btemp,plusw1
 22600                           
 22601                           ;stkvar	_b @ sp[(-4)+-4]
 22602                           ;stkvar	_grs @ sp[(-4)+0]
 22603  013080  0EF8               	movlw	-8
 22604  013082  006F FF8C  F001    	movff	plusw1,btemp
 22605  013088  0EFC               	movlw	-4
 22606  01308A  0060  F007  FFE3   	movff	btemp,plusw1
 22607                           
 22608                           ;stkvar	_a @ sp[(-4)+-8]
 22609                           ;stkvar	_b @ sp[(-4)+-4]
 22610  013090  0EF4               	movlw	-12
 22611  013092  006F FF8C  F001    	movff	plusw1,btemp
 22612  013098  0EF8               	movlw	-8
 22613  01309A  0060  F007  FFE3   	movff	btemp,plusw1
 22614                           
 22615                           ;stkvar	_grs @ sp[(-4)+0]
 22616                           ;stkvar	_a @ sp[(-4)+-8]
 22617  0130A0  0EFC               	movlw	-4
 22618  0130A2  006F FF8C  F001    	movff	plusw1,btemp
 22619  0130A8  0EF4               	movlw	-12
 22620  0130AA  0060  F007  FFE3   	movff	btemp,plusw1
 22621                           
 22622                           ;stkvar	_b @ sp[(-4)+-4]
 22623  0130B0  0EF9               	movlw	249
 22624  0130B2  24E1               	addwf	fsr1l,w,c
 22625  0130B4  6ED9               	movwf	fsr2l,c
 22626  0130B6  0EFF               	movlw	255
 22627  0130B8  20E2               	addwfc	fsr1h,w,c
 22628  0130BA  6EDA               	movwf	fsr2h,c
 22629  0130BC  50DF               	movf	indf2,w,c
 22630  0130BE  6E0C               	movwf	(btemp+11)^0,c
 22631                           
 22632                           ;stkvar	_grs @ sp[(-4)+0]
 22633  0130C0  0EFC               	movlw	-4
 22634  0130C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22635                           
 22636                           ;stkvar	_a @ sp[(-4)+-8]
 22637  0130C8  0EF5               	movlw	245
 22638  0130CA  24E1               	addwf	fsr1l,w,c
 22639  0130CC  6ED9               	movwf	fsr2l,c
 22640  0130CE  0EFF               	movlw	255
 22641  0130D0  20E2               	addwfc	fsr1h,w,c
 22642  0130D2  6EDA               	movwf	fsr2h,c
 22643                           
 22644                           ;stkvar	_b @ sp[(-4)+-4]
 22645  0130D4  0EF9               	movlw	249
 22646  0130D6  24E1               	addwf	fsr1l,w,c
 22647  0130D8  6EE9               	movwf	fsr0l,c
 22648  0130DA  0EFF               	movlw	255
 22649  0130DC  20E2               	addwfc	fsr1h,w,c
 22650  0130DE  6EEA               	movwf	fsr0h,c
 22651  0130E0  006F FF7F FFEF     	movff	indf2,indf0
 22652                           
 22653                           ;stkvar	_grs @ sp[(-4)+0]
 22654                           ;stkvar	_a @ sp[(-4)+-8]
 22655  0130E6  0EF5               	movlw	245
 22656  0130E8  24E1               	addwf	fsr1l,w,c
 22657  0130EA  6ED9               	movwf	fsr2l,c
 22658  0130EC  0EFF               	movlw	255
 22659  0130EE  20E2               	addwfc	fsr1h,w,c
 22660  0130F0  6EDA               	movwf	fsr2h,c
 22661  0130F2  0EFC               	movlw	-4
 22662  0130F4  006F FF8F FFDF     	movff	plusw1,indf2
 22663                           
 22664                           ;stkvar	_b @ sp[(-4)+-4]
 22665  0130FA  0EFA               	movlw	250
 22666  0130FC  24E1               	addwf	fsr1l,w,c
 22667  0130FE  6ED9               	movwf	fsr2l,c
 22668  013100  0EFF               	movlw	255
 22669  013102  20E2               	addwfc	fsr1h,w,c
 22670  013104  6EDA               	movwf	fsr2h,c
 22671  013106  50DF               	movf	indf2,w,c
 22672  013108  6E0C               	movwf	(btemp+11)^0,c
 22673                           
 22674                           ;stkvar	_grs @ sp[(-4)+0]
 22675  01310A  0EFC               	movlw	-4
 22676  01310C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22677                           
 22678                           ;stkvar	_a @ sp[(-4)+-8]
 22679  013112  0EF6               	movlw	246
 22680  013114  24E1               	addwf	fsr1l,w,c
 22681  013116  6ED9               	movwf	fsr2l,c
 22682  013118  0EFF               	movlw	255
 22683  01311A  20E2               	addwfc	fsr1h,w,c
 22684  01311C  6EDA               	movwf	fsr2h,c
 22685                           
 22686                           ;stkvar	_b @ sp[(-4)+-4]
 22687  01311E  0EFA               	movlw	250
 22688  013120  24E1               	addwf	fsr1l,w,c
 22689  013122  6EE9               	movwf	fsr0l,c
 22690  013124  0EFF               	movlw	255
 22691  013126  20E2               	addwfc	fsr1h,w,c
 22692  013128  6EEA               	movwf	fsr0h,c
 22693  01312A  006F FF7F FFEF     	movff	indf2,indf0
 22694                           
 22695                           ;stkvar	_grs @ sp[(-4)+0]
 22696                           ;stkvar	_a @ sp[(-4)+-8]
 22697  013130  0EF6               	movlw	246
 22698  013132  24E1               	addwf	fsr1l,w,c
 22699  013134  6ED9               	movwf	fsr2l,c
 22700  013136  0EFF               	movlw	255
 22701  013138  20E2               	addwfc	fsr1h,w,c
 22702  01313A  6EDA               	movwf	fsr2h,c
 22703  01313C  0EFC               	movlw	-4
 22704  01313E  006F FF8F FFDF     	movff	plusw1,indf2
 22705                           
 22706                           ;stkvar	_b @ sp[(-4)+-4]
 22707  013144  0EFB               	movlw	251
 22708  013146  24E1               	addwf	fsr1l,w,c
 22709  013148  6ED9               	movwf	fsr2l,c
 22710  01314A  0EFF               	movlw	255
 22711  01314C  20E2               	addwfc	fsr1h,w,c
 22712  01314E  6EDA               	movwf	fsr2h,c
 22713  013150  50DF               	movf	indf2,w,c
 22714  013152  6E0C               	movwf	(btemp+11)^0,c
 22715                           
 22716                           ;stkvar	_grs @ sp[(-4)+0]
 22717  013154  0EFC               	movlw	-4
 22718  013156  0060  F033  FFE3   	movff	btemp+11,plusw1
 22719                           
 22720                           ;stkvar	_a @ sp[(-4)+-8]
 22721  01315C  0EF7               	movlw	247
 22722  01315E  24E1               	addwf	fsr1l,w,c
 22723  013160  6ED9               	movwf	fsr2l,c
 22724  013162  0EFF               	movlw	255
 22725  013164  20E2               	addwfc	fsr1h,w,c
 22726  013166  6EDA               	movwf	fsr2h,c
 22727                           
 22728                           ;stkvar	_b @ sp[(-4)+-4]
 22729  013168  0EFB               	movlw	251
 22730  01316A  24E1               	addwf	fsr1l,w,c
 22731  01316C  6EE9               	movwf	fsr0l,c
 22732  01316E  0EFF               	movlw	255
 22733  013170  20E2               	addwfc	fsr1h,w,c
 22734  013172  6EEA               	movwf	fsr0h,c
 22735  013174  006F FF7F FFEF     	movff	indf2,indf0
 22736                           
 22737                           ;stkvar	_grs @ sp[(-4)+0]
 22738                           ;stkvar	_a @ sp[(-4)+-8]
 22739  01317A  0EF7               	movlw	247
 22740  01317C  24E1               	addwf	fsr1l,w,c
 22741  01317E  6ED9               	movwf	fsr2l,c
 22742  013180  0EFF               	movlw	255
 22743  013182  20E2               	addwfc	fsr1h,w,c
 22744  013184  6EDA               	movwf	fsr2h,c
 22745  013186  0EFC               	movlw	-4
 22746  013188  006F FF8F FFDF     	movff	plusw1,indf2
 22747  01318E                     l7012:
 22748                           
 22749                           ;stkvar	_grs @ sp[(-4)+0]
 22750  01318E  0EFC               	movlw	-4
 22751  013190  6AE3               	clrf	plusw1,c
 22752                           
 22753                           ;stkvar	_aexp @ sp[(-4)+2]
 22754  013192  0EFE               	movlw	-2
 22755  013194  50E3               	movf	plusw1,w,c
 22756  013196  6E0B               	movwf	(btemp+10)^0,c
 22757  013198  6A0C               	clrf	(btemp+11)^0,c
 22758                           
 22759                           ;stkvar	_bexp @ sp[(-4)+1]
 22760  01319A  0EFD               	movlw	-3
 22761  01319C  50E3               	movf	plusw1,w,c
 22762  01319E  5E0B               	subwf	(btemp+10)^0,f,c
 22763  0131A0  0E00               	movlw	0
 22764  0131A2  5A0C               	subwfb	(btemp+11)^0,f,c
 22765  0131A4  BE0C               	btfsc	(btemp+11)^0,7,c
 22766  0131A6  D062               	goto	l7036
 22767  0131A8  500C               	movf	(btemp+11)^0,w,c
 22768  0131AA  E104               	bnz	u4850
 22769  0131AC  0E1A               	movlw	26
 22770  0131AE  5C0B               	subwf	(btemp+10)^0,w,c
 22771  0131B0  A0D8               	btfss	status,0,c
 22772  0131B2  D05C               	goto	l7036
 22773  0131B4                     u4850:
 22774                           
 22775                           ;stkvar	_b @ sp[(-4)+-4]
 22776  0131B4  0EF8               	movlw	-8
 22777  0131B6  50E3               	movf	plusw1,w,c
 22778  0131B8  E10A               	bnz	u4861
 22779  0131BA  0EF9               	movlw	-7
 22780  0131BC  50E3               	movf	plusw1,w,c
 22781  0131BE  E107               	bnz	u4861
 22782  0131C0  0EFA               	movlw	-6
 22783  0131C2  50E3               	movf	plusw1,w,c
 22784  0131C4  E104               	bnz	u4861
 22785  0131C6  0EFB               	movlw	-5
 22786  0131C8  50E3               	movf	plusw1,w,c
 22787  0131CA  B4D8               	btfsc	status,2,c
 22788  0131CC  D003               	goto	u4860
 22789  0131CE                     u4861:
 22790  0131CE  6A0C               	clrf	(btemp+11)^0,c
 22791  0131D0  2A0C               	incf	(btemp+11)^0,f,c
 22792  0131D2  D001               	goto	u4878
 22793  0131D4                     u4860:
 22794  0131D4  6A0C               	clrf	(btemp+11)^0,c
 22795  0131D6                     u4878:
 22796                           
 22797                           ;stkvar	_grs @ sp[(-4)+0]
 22798  0131D6  0EFC               	movlw	-4
 22799  0131D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22800                           
 22801                           ;stkvar	_b @ sp[(-4)+-4]
 22802  0131DE  0EF8               	movlw	-8
 22803  0131E0  6AE3               	clrf	plusw1,c
 22804  0131E2  0EF9               	movlw	-7
 22805  0131E4  6AE3               	clrf	plusw1,c
 22806  0131E6  0EFA               	movlw	-6
 22807  0131E8  6AE3               	clrf	plusw1,c
 22808  0131EA  0EFB               	movlw	-5
 22809  0131EC  6AE3               	clrf	plusw1,c
 22810                           
 22811                           ;stkvar	_aexp @ sp[(-4)+2]
 22812                           ;stkvar	_bexp @ sp[(-4)+1]
 22813  0131EE  0EFE               	movlw	-2
 22814  0131F0  006F FF8C  F001    	movff	plusw1,btemp
 22815  0131F6  0EFD               	movlw	-3
 22816  0131F8  0060  F007  FFE3   	movff	btemp,plusw1
 22817  0131FE  D042               	goto	u4910
 22818  013200                     l7022:
 22819                           
 22820                           ;stkvar	_grs @ sp[(-4)+0]
 22821  013200  0EFC               	movlw	-4
 22822  013202  A0E3               	btfss	plusw1,0,c
 22823  013204  D00D               	goto	l7026
 22824                           
 22825                           ;stkvar	_grs @ sp[(-4)+0]
 22826  013206  0EFC               	movlw	-4
 22827  013208  006F FF8C  F00C    	movff	plusw1,btemp+11
 22828  01320E  90D8               	bcf	status,0,c
 22829  013210  320C               	rrcf	(btemp+11)^0,f,c
 22830  013212  0E01               	movlw	1
 22831  013214  120C               	iorwf	(btemp+11)^0,f,c
 22832                           
 22833                           ;stkvar	_grs @ sp[(-4)+0]
 22834  013216  0EFC               	movlw	-4
 22835  013218  0060  F033  FFE3   	movff	btemp+11,plusw1
 22836  01321E  D009               	goto	l7028
 22837  013220                     l7026:
 22838                           
 22839                           ;stkvar	_grs @ sp[(-4)+0]
 22840  013220  50E1               	movf	fsr1l,w,c
 22841  013222  0FFC               	addlw	-4
 22842  013224  6ED9               	movwf	fsr2l,c
 22843  013226  50E2               	movf	fsr1h,w,c
 22844  013228  6EDA               	movwf	fsr2h,c
 22845  01322A  0EFF               	movlw	255
 22846  01322C  22DA               	addwfc	fsr2h,f,c
 22847  01322E  90D8               	bcf	status,0,c
 22848  013230  32DF               	rrcf	indf2,f,c
 22849  013232                     l7028:
 22850                           
 22851                           ;stkvar	_b @ sp[(-4)+-4]
 22852  013232  0EF8               	movlw	-8
 22853  013234  A0E3               	btfss	plusw1,0,c
 22854  013236  D002               	goto	l7032
 22855                           
 22856                           ;stkvar	_grs @ sp[(-4)+0]
 22857  013238  0EFC               	movlw	-4
 22858  01323A  8EE3               	bsf	plusw1,7,c
 22859  01323C                     l7032:
 22860  01323C  0E01               	movlw	1
 22861  01323E  6E0C               	movwf	(btemp+11)^0,c
 22862                           
 22863                           ;stkvar	_b @ sp[(-4)+-4]
 22864  013240  50E1               	movf	fsr1l,w,c
 22865  013242  0FF8               	addlw	-8
 22866  013244  6ED9               	movwf	fsr2l,c
 22867  013246  50E2               	movf	fsr1h,w,c
 22868  013248  6EDA               	movwf	fsr2h,c
 22869  01324A  0EFF               	movlw	255
 22870  01324C  22DA               	addwfc	fsr2h,f,c
 22871  01324E  280C               	incf	(btemp+11)^0,w,c
 22872  013250  52DE               	movf	postinc2,f,c
 22873  013252  D008               	goto	u4900
 22874  013254                     u4905:
 22875  013254  52DE               	movf	postinc2,f,c
 22876  013256  90D8               	bcf	status,0,c
 22877  013258  BEDC               	btfsc	preinc2,7,c
 22878  01325A  80D8               	bsf	status,0,c
 22879  01325C  32DD               	rrcf	postdec2,f,c
 22880  01325E  32DD               	rrcf	postdec2,f,c
 22881  013260  32DD               	rrcf	postdec2,f,c
 22882  013262  32DE               	rrcf	postinc2,f,c
 22883  013264                     u4900:
 22884  013264  2EE8               	decfsz	wreg,f,c
 22885  013266  D7F6               	goto	u4905
 22886                           
 22887                           ;stkvar	_bexp @ sp[(-4)+1]
 22888  013268  0EFD               	movlw	-3
 22889  01326A  2AE3               	incf	plusw1,f,c
 22890  01326C                     l7036:
 22891                           
 22892                           ;stkvar	_aexp @ sp[(-4)+2]
 22893                           ;stkvar	_bexp @ sp[(-4)+1]
 22894  01326C  50E1               	movf	fsr1l,w,c
 22895  01326E  0FFD               	addlw	-3
 22896  013270  6ED9               	movwf	fsr2l,c
 22897  013272  50E2               	movf	fsr1h,w,c
 22898  013274  6EDA               	movwf	fsr2h,c
 22899  013276  0EFF               	movlw	255
 22900  013278  22DA               	addwfc	fsr2h,f,c
 22901  01327A  0EFE               	movlw	-2
 22902  01327C  50E3               	movf	plusw1,w,c
 22903  01327E  5CDE               	subwf	postinc2,w,c
 22904  013280  A0D8               	btfss	status,0,c
 22905  013282  D7BE               	goto	l7022
 22906  013284                     u4910:
 22907                           
 22908                           ;stkvar	_signs @ sp[(-4)+3]
 22909  013284  0EFF               	movlw	-1
 22910  013286  BCE3               	btfsc	plusw1,6,c
 22911  013288  D066               	goto	l7064
 22912                           
 22913                           ;stkvar	_bexp @ sp[(-4)+1]
 22914  01328A  0EFD               	movlw	-3
 22915  01328C  50E3               	movf	plusw1,w,c
 22916  01328E  B4D8               	btfsc	status,2,c
 22917  013290  D0F2               	goto	u5010
 22918                           
 22919                           ;stkvar	_a @ sp[(-4)+-8]
 22920                           ;stkvar	_b @ sp[(-4)+-4]
 22921  013292  0EF8               	movlw	-8
 22922  013294  50E3               	movf	plusw1,w,c
 22923  013296  6E01               	movwf	btemp^0,c
 22924  013298  0EF4               	movlw	-12
 22925  01329A  50E3               	movf	plusw1,w,c
 22926  01329C  2601               	addwf	btemp^0,f,c
 22927  01329E  0EF8               	movlw	-8
 22928  0132A0  0060  F007  FFE3   	movff	btemp,plusw1
 22929  0132A6  0EF9               	movlw	-7
 22930  0132A8  50E3               	movf	plusw1,w,c
 22931  0132AA  6E01               	movwf	btemp^0,c
 22932  0132AC  0EF5               	movlw	-11
 22933  0132AE  50E3               	movf	plusw1,w,c
 22934  0132B0  2201               	addwfc	btemp^0,f,c
 22935  0132B2  0EF9               	movlw	-7
 22936  0132B4  0060  F007  FFE3   	movff	btemp,plusw1
 22937  0132BA  0EFA               	movlw	-6
 22938  0132BC  50E3               	movf	plusw1,w,c
 22939  0132BE  6E01               	movwf	btemp^0,c
 22940  0132C0  0EF6               	movlw	-10
 22941  0132C2  50E3               	movf	plusw1,w,c
 22942  0132C4  2201               	addwfc	btemp^0,f,c
 22943  0132C6  0EFA               	movlw	-6
 22944  0132C8  0060  F007  FFE3   	movff	btemp,plusw1
 22945  0132CE  0EFB               	movlw	-5
 22946  0132D0  50E3               	movf	plusw1,w,c
 22947  0132D2  6E01               	movwf	btemp^0,c
 22948  0132D4  0EF7               	movlw	-9
 22949  0132D6  50E3               	movf	plusw1,w,c
 22950  0132D8  2201               	addwfc	btemp^0,f,c
 22951  0132DA  0EFB               	movlw	-5
 22952  0132DC  0060  F007  FFE3   	movff	btemp,plusw1
 22953                           
 22954                           ;stkvar	_b @ sp[(-4)+-4]
 22955  0132E2  0EFB               	movlw	-5
 22956  0132E4  A0E3               	btfss	plusw1,0,c
 22957  0132E6  D101               	goto	u5050
 22958                           
 22959                           ;stkvar	_grs @ sp[(-4)+0]
 22960  0132E8  0EFC               	movlw	-4
 22961  0132EA  A0E3               	btfss	plusw1,0,c
 22962  0132EC  D00D               	goto	l7054
 22963                           
 22964                           ;stkvar	_grs @ sp[(-4)+0]
 22965  0132EE  0EFC               	movlw	-4
 22966  0132F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22967  0132F6  90D8               	bcf	status,0,c
 22968  0132F8  320C               	rrcf	(btemp+11)^0,f,c
 22969  0132FA  0E01               	movlw	1
 22970  0132FC  120C               	iorwf	(btemp+11)^0,f,c
 22971                           
 22972                           ;stkvar	_grs @ sp[(-4)+0]
 22973  0132FE  0EFC               	movlw	-4
 22974  013300  0060  F033  FFE3   	movff	btemp+11,plusw1
 22975  013306  D009               	goto	l7056
 22976  013308                     l7054:
 22977                           
 22978                           ;stkvar	_grs @ sp[(-4)+0]
 22979  013308  50E1               	movf	fsr1l,w,c
 22980  01330A  0FFC               	addlw	-4
 22981  01330C  6ED9               	movwf	fsr2l,c
 22982  01330E  50E2               	movf	fsr1h,w,c
 22983  013310  6EDA               	movwf	fsr2h,c
 22984  013312  0EFF               	movlw	255
 22985  013314  22DA               	addwfc	fsr2h,f,c
 22986  013316  90D8               	bcf	status,0,c
 22987  013318  32DF               	rrcf	indf2,f,c
 22988  01331A                     l7056:
 22989                           
 22990                           ;stkvar	_b @ sp[(-4)+-4]
 22991  01331A  0EF8               	movlw	-8
 22992  01331C  A0E3               	btfss	plusw1,0,c
 22993  01331E  D002               	goto	l7060
 22994                           
 22995                           ;stkvar	_grs @ sp[(-4)+0]
 22996  013320  0EFC               	movlw	-4
 22997  013322  8EE3               	bsf	plusw1,7,c
 22998  013324                     l7060:
 22999  013324  0E01               	movlw	1
 23000  013326  6E0C               	movwf	(btemp+11)^0,c
 23001                           
 23002                           ;stkvar	_b @ sp[(-4)+-4]
 23003  013328  50E1               	movf	fsr1l,w,c
 23004  01332A  0FF8               	addlw	-8
 23005  01332C  6ED9               	movwf	fsr2l,c
 23006  01332E  50E2               	movf	fsr1h,w,c
 23007  013330  6EDA               	movwf	fsr2h,c
 23008  013332  0EFF               	movlw	255
 23009  013334  22DA               	addwfc	fsr2h,f,c
 23010  013336  280C               	incf	(btemp+11)^0,w,c
 23011  013338  52DE               	movf	postinc2,f,c
 23012  01333A  D008               	goto	u4970
 23013  01333C                     u4975:
 23014  01333C  52DE               	movf	postinc2,f,c
 23015  01333E  90D8               	bcf	status,0,c
 23016  013340  BEDC               	btfsc	preinc2,7,c
 23017  013342  80D8               	bsf	status,0,c
 23018  013344  32DD               	rrcf	postdec2,f,c
 23019  013346  32DD               	rrcf	postdec2,f,c
 23020  013348  32DD               	rrcf	postdec2,f,c
 23021  01334A  32DE               	rrcf	postinc2,f,c
 23022  01334C                     u4970:
 23023  01334C  2EE8               	decfsz	wreg,f,c
 23024  01334E  D7F6               	goto	u4975
 23025                           
 23026                           ;stkvar	_bexp @ sp[(-4)+1]
 23027  013350  0EFD               	movlw	-3
 23028  013352  2AE3               	incf	plusw1,f,c
 23029  013354  D0CA               	goto	u5050
 23030  013356                     l7064:
 23031                           
 23032                           ;stkvar	_a @ sp[(-4)+-8]
 23033                           ;stkvar	_b @ sp[(-4)+-4]
 23034  013356  50E1               	movf	fsr1l,w,c
 23035  013358  0FF8               	addlw	-8
 23036  01335A  6ED9               	movwf	fsr2l,c
 23037  01335C  50E2               	movf	fsr1h,w,c
 23038  01335E  6EDA               	movwf	fsr2h,c
 23039  013360  0EFF               	movlw	255
 23040  013362  22DA               	addwfc	fsr2h,f,c
 23041  013364  0EF4               	movlw	-12
 23042  013366  50E3               	movf	plusw1,w,c
 23043  013368  5CDE               	subwf	postinc2,w,c
 23044  01336A  0EF5               	movlw	-11
 23045  01336C  50E3               	movf	plusw1,w,c
 23046  01336E  58DE               	subwfb	postinc2,w,c
 23047  013370  0EF6               	movlw	-10
 23048  013372  50E3               	movf	plusw1,w,c
 23049  013374  58DE               	subwfb	postinc2,w,c
 23050  013376  50DE               	movf	postinc2,w,c
 23051  013378  0A80               	xorlw	128
 23052  01337A  6E01               	movwf	btemp^0,c
 23053  01337C  0EF7               	movlw	-9
 23054  01337E  50E3               	movf	plusw1,w,c
 23055  013380  0A80               	xorlw	128
 23056  013382  5801               	subwfb	btemp^0,w,c
 23057  013384  B0D8               	btfsc	status,0,c
 23058  013386  D053               	goto	l7076
 23059                           
 23060                           ;stkvar	_b @ sp[(-4)+-4]
 23061                           ;stkvar	_a @ sp[(-4)+-8]
 23062  013388  0EF4               	movlw	-12
 23063  01338A  006F FF8C  F009    	movff	plusw1,btemp+8
 23064  013390  0EF5               	movlw	-11
 23065  013392  006F FF8C  F00A    	movff	plusw1,btemp+9
 23066  013398  0EF6               	movlw	-10
 23067  01339A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23068  0133A0  0EF7               	movlw	-9
 23069  0133A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23070  0133A8  0EF8               	movlw	-8
 23071  0133AA  50E3               	movf	plusw1,w,c
 23072  0133AC  5E09               	subwf	(btemp+8)^0,f,c
 23073  0133AE  0EF9               	movlw	-7
 23074  0133B0  50E3               	movf	plusw1,w,c
 23075  0133B2  5A0A               	subwfb	(btemp+9)^0,f,c
 23076  0133B4  0EFA               	movlw	-6
 23077  0133B6  50E3               	movf	plusw1,w,c
 23078  0133B8  5A0B               	subwfb	(btemp+10)^0,f,c
 23079  0133BA  0EFB               	movlw	-5
 23080  0133BC  50E3               	movf	plusw1,w,c
 23081  0133BE  5A0C               	subwfb	(btemp+11)^0,f,c
 23082  0133C0  0EFF               	movlw	255
 23083  0133C2  2409               	addwf	(btemp+8)^0,w,c
 23084  0133C4  6E05               	movwf	(btemp+4)^0,c
 23085  0133C6  0EFF               	movlw	255
 23086  0133C8  200A               	addwfc	(btemp+9)^0,w,c
 23087  0133CA  6E06               	movwf	(btemp+5)^0,c
 23088  0133CC  0EFF               	movlw	255
 23089  0133CE  200B               	addwfc	(btemp+10)^0,w,c
 23090  0133D0  6E07               	movwf	(btemp+6)^0,c
 23091  0133D2  0EFF               	movlw	255
 23092  0133D4  200C               	addwfc	(btemp+11)^0,w,c
 23093  0133D6  6E08               	movwf	(btemp+7)^0,c
 23094                           
 23095                           ;stkvar	_b @ sp[(-4)+-4]
 23096  0133D8  0EF8               	movlw	-8
 23097  0133DA  0060  F017  FFE3   	movff	btemp+4,plusw1
 23098  0133E0  0EF9               	movlw	-7
 23099  0133E2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23100  0133E8  0EFA               	movlw	-6
 23101  0133EA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23102  0133F0  0EFB               	movlw	-5
 23103  0133F2  0060  F023  FFE3   	movff	btemp+7,plusw1
 23104                           
 23105                           ;stkvar	_signs @ sp[(-4)+3]
 23106  0133F8  0EFF               	movlw	-1
 23107  0133FA  7EE3               	btg	plusw1,7,c
 23108                           
 23109                           ;stkvar	_grs @ sp[(-4)+0]
 23110  0133FC  0EFC               	movlw	-4
 23111  0133FE  50E3               	movf	plusw1,w,c
 23112  013400  0800               	sublw	0
 23113  013402  6E0C               	movwf	(btemp+11)^0,c
 23114                           
 23115                           ;stkvar	_grs @ sp[(-4)+0]
 23116  013404  0EFC               	movlw	-4
 23117  013406  0060  F033  FFE3   	movff	btemp+11,plusw1
 23118                           
 23119                           ;stkvar	_grs @ sp[(-4)+0]
 23120  01340C  0EFC               	movlw	-4
 23121  01340E  50E3               	movf	plusw1,w,c
 23122  013410  A4D8               	btfss	status,2,c
 23123  013412  D020               	goto	l7078
 23124                           
 23125                           ;stkvar	_b @ sp[(-4)+-4]
 23126  013414  50E1               	movf	fsr1l,w,c
 23127  013416  0FF8               	addlw	-8
 23128  013418  6ED9               	movwf	fsr2l,c
 23129  01341A  50E2               	movf	fsr1h,w,c
 23130  01341C  6EDA               	movwf	fsr2h,c
 23131  01341E  0EFF               	movlw	255
 23132  013420  22DA               	addwfc	fsr2h,f,c
 23133  013422  2ADE               	incf	postinc2,f,c
 23134  013424  0E00               	movlw	0
 23135  013426  22DE               	addwfc	postinc2,f,c
 23136  013428  22DE               	addwfc	postinc2,f,c
 23137  01342A  22DE               	addwfc	postinc2,f,c
 23138  01342C  D013               	goto	l7078
 23139  01342E                     l7076:
 23140                           
 23141                           ;stkvar	_a @ sp[(-4)+-8]
 23142                           ;stkvar	_b @ sp[(-4)+-4]
 23143  01342E  50E1               	movf	fsr1l,w,c
 23144  013430  0FF8               	addlw	-8
 23145  013432  6ED9               	movwf	fsr2l,c
 23146  013434  50E2               	movf	fsr1h,w,c
 23147  013436  6EDA               	movwf	fsr2h,c
 23148  013438  0EFF               	movlw	255
 23149  01343A  22DA               	addwfc	fsr2h,f,c
 23150  01343C  0EF4               	movlw	-12
 23151  01343E  50E3               	movf	plusw1,w,c
 23152  013440  5EDE               	subwf	postinc2,f,c
 23153  013442  0EF5               	movlw	-11
 23154  013444  50E3               	movf	plusw1,w,c
 23155  013446  5ADE               	subwfb	postinc2,f,c
 23156  013448  0EF6               	movlw	-10
 23157  01344A  50E3               	movf	plusw1,w,c
 23158  01344C  5ADE               	subwfb	postinc2,f,c
 23159  01344E  0EF7               	movlw	-9
 23160  013450  50E3               	movf	plusw1,w,c
 23161  013452  5ADE               	subwfb	postinc2,f,c
 23162  013454                     l7078:
 23163                           
 23164                           ;stkvar	_b @ sp[(-4)+-4]
 23165  013454  0EF8               	movlw	-8
 23166  013456  50E3               	movf	plusw1,w,c
 23167  013458  E145               	bnz	l7100
 23168  01345A  0EF9               	movlw	-7
 23169  01345C  50E3               	movf	plusw1,w,c
 23170  01345E  E142               	bnz	l7100
 23171  013460  0EFA               	movlw	-6
 23172  013462  50E3               	movf	plusw1,w,c
 23173  013464  E13F               	bnz	l7100
 23174  013466  0EFB               	movlw	-5
 23175  013468  50E3               	movf	plusw1,w,c
 23176  01346A  A4D8               	btfss	status,2,c
 23177  01346C  D03B               	goto	l7100
 23178                           
 23179                           ;stkvar	_grs @ sp[(-4)+0]
 23180  01346E  0EFC               	movlw	-4
 23181  013470  50E3               	movf	plusw1,w,c
 23182  013472  A4D8               	btfss	status,2,c
 23183  013474  D037               	goto	l7100
 23184  013476                     u5010:
 23185  013476  0E00               	movlw	0
 23186  013478  6E01               	movwf	btemp^0,c
 23187  01347A  0E00               	movlw	0
 23188  01347C  6E02               	movwf	(btemp+1)^0,c
 23189  01347E  0E00               	movlw	0
 23190  013480  6E03               	movwf	(btemp+2)^0,c
 23191  013482  0E00               	movlw	0
 23192  013484  6E04               	movwf	(btemp+3)^0,c
 23193  013486  D0C6               	goto	l2770
 23194  013488                     l7086:
 23195                           
 23196                           ;stkvar	_b @ sp[(-4)+-4]
 23197  013488  90D8               	bcf	status,0,c
 23198  01348A  0EF8               	movlw	-8
 23199  01348C  36E3               	rlcf	plusw1,f,c
 23200  01348E  0EF9               	movlw	-7
 23201  013490  36E3               	rlcf	plusw1,f,c
 23202  013492  0EFA               	movlw	-6
 23203  013494  36E3               	rlcf	plusw1,f,c
 23204  013496  0EFB               	movlw	-5
 23205  013498  36E3               	rlcf	plusw1,f,c
 23206                           
 23207                           ;stkvar	_grs @ sp[(-4)+0]
 23208  01349A  0EFC               	movlw	-4
 23209  01349C  AEE3               	btfss	plusw1,7,c
 23210  01349E  D002               	goto	l2782
 23211                           
 23212                           ;stkvar	_b @ sp[(-4)+-4]
 23213  0134A0  0EF8               	movlw	-8
 23214  0134A2  80E3               	bsf	plusw1,0,c
 23215  0134A4                     l2782:
 23216                           
 23217                           ;stkvar	_grs @ sp[(-4)+0]
 23218  0134A4  0EFC               	movlw	-4
 23219  0134A6  A0E3               	btfss	plusw1,0,c
 23220  0134A8  D00E               	goto	l7094
 23221                           
 23222                           ;stkvar	_grs @ sp[(-4)+0]
 23223  0134AA  0EFC               	movlw	-4
 23224  0134AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23225  0134B2  90D8               	bcf	status,0,c
 23226  0134B4  340C               	rlcf	(btemp+11)^0,w,c
 23227  0134B6  6E0B               	movwf	(btemp+10)^0,c
 23228  0134B8  0E01               	movlw	1
 23229  0134BA  120B               	iorwf	(btemp+10)^0,f,c
 23230                           
 23231                           ;stkvar	_grs @ sp[(-4)+0]
 23232  0134BC  0EFC               	movlw	-4
 23233  0134BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23234  0134C4  D009               	goto	l7096
 23235  0134C6                     l7094:
 23236                           
 23237                           ;stkvar	_grs @ sp[(-4)+0]
 23238  0134C6  50E1               	movf	fsr1l,w,c
 23239  0134C8  0FFC               	addlw	-4
 23240  0134CA  6ED9               	movwf	fsr2l,c
 23241  0134CC  50E2               	movf	fsr1h,w,c
 23242  0134CE  6EDA               	movwf	fsr2h,c
 23243  0134D0  0EFF               	movlw	255
 23244  0134D2  22DA               	addwfc	fsr2h,f,c
 23245  0134D4  90D8               	bcf	status,0,c
 23246  0134D6  36DF               	rlcf	indf2,f,c
 23247  0134D8                     l7096:
 23248                           
 23249                           ;stkvar	_bexp @ sp[(-4)+1]
 23250  0134D8  0EFD               	movlw	-3
 23251  0134DA  50E3               	movf	plusw1,w,c
 23252  0134DC  B4D8               	btfsc	status,2,c
 23253  0134DE  D002               	goto	l7100
 23254                           
 23255                           ;stkvar	_bexp @ sp[(-4)+1]
 23256  0134E0  0EFD               	movlw	-3
 23257  0134E2  06E3               	decf	plusw1,f,c
 23258  0134E4                     l7100:
 23259                           
 23260                           ;stkvar	_b @ sp[(-4)+-4]
 23261  0134E4  0EFA               	movlw	-6
 23262  0134E6  AEE3               	btfss	plusw1,7,c
 23263  0134E8  D7CF               	goto	l7086
 23264  0134EA                     u5050:
 23265                           
 23266                           ;stkvar	_aexp @ sp[(-4)+2]
 23267  0134EA  0EFE               	movlw	-2
 23268  0134EC  6AE3               	clrf	plusw1,c
 23269                           
 23270                           ;stkvar	_grs @ sp[(-4)+0]
 23271  0134EE  0EFC               	movlw	-4
 23272  0134F0  AEE3               	btfss	plusw1,7,c
 23273  0134F2  D00F               	goto	l7114
 23274                           
 23275                           ;stkvar	_grs @ sp[(-4)+0]
 23276  0134F4  0EFC               	movlw	-4
 23277  0134F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23278  0134FC  0E7F               	movlw	127
 23279  0134FE  160C               	andwf	(btemp+11)^0,f,c
 23280  013500  B4D8               	btfsc	status,2,c
 23281  013502  D004               	goto	l7110
 23282  013504                     u5070:
 23283                           
 23284                           ;stkvar	_aexp @ sp[(-4)+2]
 23285  013504  0EFE               	movlw	-2
 23286  013506  6AE3               	clrf	plusw1,c
 23287  013508  2AE3               	incf	plusw1,f,c
 23288  01350A  D003               	goto	l7114
 23289  01350C                     l7110:
 23290                           
 23291                           ;stkvar	_b @ sp[(-4)+-4]
 23292  01350C  0EF8               	movlw	-8
 23293  01350E  B0E3               	btfsc	plusw1,0,c
 23294  013510  D7F9               	goto	u5070
 23295  013512                     l7114:
 23296                           
 23297                           ;stkvar	_aexp @ sp[(-4)+2]
 23298  013512  0EFE               	movlw	-2
 23299  013514  50E3               	movf	plusw1,w,c
 23300  013516  B4D8               	btfsc	status,2,c
 23301  013518  D02B               	goto	l7126
 23302                           
 23303                           ;stkvar	_b @ sp[(-4)+-4]
 23304  01351A  50E1               	movf	fsr1l,w,c
 23305  01351C  0FF8               	addlw	-8
 23306  01351E  6ED9               	movwf	fsr2l,c
 23307  013520  50E2               	movf	fsr1h,w,c
 23308  013522  6EDA               	movwf	fsr2h,c
 23309  013524  0EFF               	movlw	255
 23310  013526  22DA               	addwfc	fsr2h,f,c
 23311  013528  2ADE               	incf	postinc2,f,c
 23312  01352A  0E00               	movlw	0
 23313  01352C  22DE               	addwfc	postinc2,f,c
 23314  01352E  22DE               	addwfc	postinc2,f,c
 23315  013530  22DE               	addwfc	postinc2,f,c
 23316                           
 23317                           ;stkvar	_b @ sp[(-4)+-4]
 23318  013532  0EFB               	movlw	-5
 23319  013534  A0E3               	btfss	plusw1,0,c
 23320  013536  D01C               	goto	l7126
 23321  013538  0E01               	movlw	1
 23322  01353A  6E0C               	movwf	(btemp+11)^0,c
 23323                           
 23324                           ;stkvar	_b @ sp[(-4)+-4]
 23325  01353C  50E1               	movf	fsr1l,w,c
 23326  01353E  0FF8               	addlw	-8
 23327  013540  6ED9               	movwf	fsr2l,c
 23328  013542  50E2               	movf	fsr1h,w,c
 23329  013544  6EDA               	movwf	fsr2h,c
 23330  013546  0EFF               	movlw	255
 23331  013548  22DA               	addwfc	fsr2h,f,c
 23332  01354A  280C               	incf	(btemp+11)^0,w,c
 23333  01354C  52DE               	movf	postinc2,f,c
 23334  01354E  D008               	goto	u5110
 23335  013550                     u5115:
 23336  013550  52DE               	movf	postinc2,f,c
 23337  013552  90D8               	bcf	status,0,c
 23338  013554  BEDC               	btfsc	preinc2,7,c
 23339  013556  80D8               	bsf	status,0,c
 23340  013558  32DD               	rrcf	postdec2,f,c
 23341  01355A  32DD               	rrcf	postdec2,f,c
 23342  01355C  32DD               	rrcf	postdec2,f,c
 23343  01355E  32DE               	rrcf	postinc2,f,c
 23344  013560                     u5110:
 23345  013560  2EE8               	decfsz	wreg,f,c
 23346  013562  D7F6               	goto	u5115
 23347                           
 23348                           ;stkvar	_bexp @ sp[(-4)+1]
 23349  013564  0EFD               	movlw	-3
 23350  013566  28E3               	incf	plusw1,w,c
 23351  013568  B4D8               	btfsc	status,2,c
 23352  01356A  D002               	goto	l7126
 23353                           
 23354                           ;stkvar	_bexp @ sp[(-4)+1]
 23355  01356C  0EFD               	movlw	-3
 23356  01356E  2AE3               	incf	plusw1,f,c
 23357  013570                     l7126:
 23358                           
 23359                           ;stkvar	_bexp @ sp[(-4)+1]
 23360  013570  0EFD               	movlw	-3
 23361  013572  28E3               	incf	plusw1,w,c
 23362  013574  B4D8               	btfsc	status,2,c
 23363  013576  D004               	goto	u5140
 23364                           
 23365                           ;stkvar	_bexp @ sp[(-4)+1]
 23366  013578  0EFD               	movlw	-3
 23367  01357A  50E3               	movf	plusw1,w,c
 23368  01357C  A4D8               	btfss	status,2,c
 23369  01357E  D00E               	goto	l7136
 23370  013580                     u5140:
 23371                           
 23372                           ;stkvar	_b @ sp[(-4)+-4]
 23373  013580  0EF8               	movlw	-8
 23374  013582  6AE3               	clrf	plusw1,c
 23375  013584  0EF9               	movlw	-7
 23376  013586  6AE3               	clrf	plusw1,c
 23377  013588  0EFA               	movlw	-6
 23378  01358A  6AE3               	clrf	plusw1,c
 23379  01358C  0EFB               	movlw	-5
 23380  01358E  6AE3               	clrf	plusw1,c
 23381                           
 23382                           ;stkvar	_bexp @ sp[(-4)+1]
 23383  013590  0EFD               	movlw	-3
 23384  013592  50E3               	movf	plusw1,w,c
 23385  013594  A4D8               	btfss	status,2,c
 23386  013596  D002               	goto	l7136
 23387                           
 23388                           ;stkvar	_signs @ sp[(-4)+3]
 23389  013598  0EFF               	movlw	-1
 23390  01359A  6AE3               	clrf	plusw1,c
 23391  01359C                     l7136:
 23392                           
 23393                           ;stkvar	_bexp @ sp[(-4)+1]
 23394  01359C  0EFD               	movlw	-3
 23395  01359E  A0E3               	btfss	plusw1,0,c
 23396  0135A0  D009               	goto	l7140
 23397                           
 23398                           ;stkvar	_b @ sp[(-4)+-4]
 23399  0135A2  0EFA               	movlw	250
 23400  0135A4  24E1               	addwf	fsr1l,w,c
 23401  0135A6  6ED9               	movwf	fsr2l,c
 23402  0135A8  0EFF               	movlw	255
 23403  0135AA  20E2               	addwfc	fsr1h,w,c
 23404  0135AC  6EDA               	movwf	fsr2h,c
 23405  0135AE  0E00               	movlw	0
 23406  0135B0  8EDB               	bsf	plusw2,7,c
 23407  0135B2  D008               	goto	l7142
 23408  0135B4                     l7140:
 23409                           
 23410                           ;stkvar	_b @ sp[(-4)+-4]
 23411  0135B4  0EFA               	movlw	250
 23412  0135B6  24E1               	addwf	fsr1l,w,c
 23413  0135B8  6ED9               	movwf	fsr2l,c
 23414  0135BA  0EFF               	movlw	255
 23415  0135BC  20E2               	addwfc	fsr1h,w,c
 23416  0135BE  6EDA               	movwf	fsr2h,c
 23417  0135C0  0E7F               	movlw	127
 23418  0135C2  16DF               	andwf	indf2,f,c
 23419  0135C4                     l7142:
 23420                           
 23421                           ;stkvar	_b @ sp[(-4)+-4]
 23422  0135C4  0EFB               	movlw	251
 23423  0135C6  24E1               	addwf	fsr1l,w,c
 23424  0135C8  6ED9               	movwf	fsr2l,c
 23425  0135CA  0EFF               	movlw	255
 23426  0135CC  20E2               	addwfc	fsr1h,w,c
 23427  0135CE  6EDA               	movwf	fsr2h,c
 23428                           
 23429                           ;stkvar	_bexp @ sp[(-4)+1]
 23430  0135D0  0EFD               	movlw	-3
 23431  0135D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23432  0135D8  90D8               	bcf	status,0,c
 23433  0135DA  300C               	rrcf	(btemp+11)^0,w,c
 23434  0135DC  6EDF               	movwf	indf2,c
 23435                           
 23436                           ;stkvar	_signs @ sp[(-4)+3]
 23437  0135DE  0EFF               	movlw	-1
 23438  0135E0  AEE3               	btfss	plusw1,7,c
 23439  0135E2  D008               	goto	l7148
 23440                           
 23441                           ;stkvar	_b @ sp[(-4)+-4]
 23442  0135E4  0EFB               	movlw	251
 23443  0135E6  24E1               	addwf	fsr1l,w,c
 23444  0135E8  6ED9               	movwf	fsr2l,c
 23445  0135EA  0EFF               	movlw	255
 23446  0135EC  20E2               	addwfc	fsr1h,w,c
 23447  0135EE  6EDA               	movwf	fsr2h,c
 23448  0135F0  0E00               	movlw	0
 23449  0135F2  8EDB               	bsf	plusw2,7,c
 23450  0135F4                     l7148:
 23451                           
 23452                           ;stkvar	_b @ sp[(-4)+-4]
 23453  0135F4  0EF8               	movlw	-8
 23454  0135F6  006F FF8C  F001    	movff	plusw1,btemp
 23455  0135FC  0EF9               	movlw	-7
 23456  0135FE  006F FF8C  F002    	movff	plusw1,btemp+1
 23457  013604  0EFA               	movlw	-6
 23458  013606  006F FF8C  F003    	movff	plusw1,btemp+2
 23459  01360C  0EFB               	movlw	-5
 23460  01360E  006F FF8C  F004    	movff	plusw1,btemp+3
 23461  013614                     l2770:
 23462                           
 23463                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 23464  013614  0EF4               	movlw	244
 23465  013616  26E1               	addwf	fsr1l,f,c
 23466  013618  0EFF               	movlw	255
 23467  01361A  22E2               	addwfc	fsr1h,f,c
 23468  01361C  0012               	return		;funcret
 23469  01361E                     __end_of___fladd:
 23470                           	opt callstack 0
 23471                           
 23472 ;; *************** function ___flmul *****************
 23473 ;; Defined at:
 23474 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 23475 ;; Parameters:    Size  Location     Type
 23476 ;;  b               4  [STACK] unsigned char 
 23477 ;;  a               4  [STACK] unsigned char 
 23478 ;; Auto vars:     Size  Location     Type
 23479 ;;  prod            4  [STACK] struct .
 23480 ;;  grs             4  [STACK] unsigned long 
 23481 ;;  temp            2  [STACK] struct .
 23482 ;;  bexp            1  [STACK] unsigned char 
 23483 ;;  aexp            1  [STACK] unsigned char 
 23484 ;;  sign            1  [STACK] unsigned char 
 23485 ;; Return value:  Size  Location     Type
 23486 ;;                  4  [STACK] unsigned char 
 23487 ;; Registers used:
 23488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23489 ;; Tracked objects:
 23490 ;;		On entry : 0/1
 23491 ;;		On exit  : 0/0
 23492 ;;		Unchanged: 0/0
 23493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23498 ;;Total ram usage:        0 bytes
 23499 ;; Hardware stack levels used:    1
 23500 ;; Hardware stack levels required when called:   15
 23501 ;; This function calls:
 23502 ;;		Nothing
 23503 ;; This function is called by:
 23504 ;;		_conv_raw_result
 23505 ;;		_lp_filter
 23506 ;;		_calc_model_data
 23507 ;;		_calc_bsoc
 23508 ;;		_init_bsoc
 23509 ;;		_efgtoa
 23510 ;; This function uses a reentrant model
 23511 ;;
 23512                           
 23513                           	psect	text96
 23514  012638                     __ptext96:
 23515                           	opt callstack 0
 23516  012638                     ___flmul:
 23517                           	opt callstack 0
 23518                           
 23519                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23520  012638  0E0D               	movlw	13
 23521  01263A  26E1               	addwf	fsr1l,f,c
 23522  01263C  0E00               	movlw	0
 23523  01263E  22E2               	addwfc	fsr1h,f,c
 23524                           
 23525                           ;stkvar	_b @ sp[(-13)+-4]
 23526                           
 23527                           ;incstack = 0
 23528 ;; hardware stack exceeded
 23529  012640  0EF2               	movlw	242
 23530  012642  24E1               	addwf	fsr1l,w,c
 23531  012644  6ED9               	movwf	fsr2l,c
 23532  012646  0EFF               	movlw	255
 23533  012648  20E2               	addwfc	fsr1h,w,c
 23534  01264A  6EDA               	movwf	fsr2h,c
 23535  01264C  50DF               	movf	indf2,w,c
 23536  01264E  6E0C               	movwf	(btemp+11)^0,c
 23537  012650  0E80               	movlw	128
 23538  012652  160C               	andwf	(btemp+11)^0,f,c
 23539                           
 23540                           ;stkvar	_sign @ sp[(-13)+12]
 23541  012654  0EFF               	movlw	-1
 23542  012656  0060  F033  FFE3   	movff	btemp+11,plusw1
 23543                           
 23544                           ;stkvar	_b @ sp[(-13)+-4]
 23545  01265C  0EF2               	movlw	242
 23546  01265E  24E1               	addwf	fsr1l,w,c
 23547  012660  6ED9               	movwf	fsr2l,c
 23548  012662  0EFF               	movlw	255
 23549  012664  20E2               	addwfc	fsr1h,w,c
 23550  012666  6EDA               	movwf	fsr2h,c
 23551  012668  50DF               	movf	indf2,w,c
 23552  01266A  6E0C               	movwf	(btemp+11)^0,c
 23553  01266C  90D8               	bcf	status,0,c
 23554  01266E  340C               	rlcf	(btemp+11)^0,w,c
 23555  012670  6E0B               	movwf	(btemp+10)^0,c
 23556                           
 23557                           ;stkvar	_bexp @ sp[(-13)+10]
 23558  012672  0EFD               	movlw	-3
 23559  012674  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23560                           
 23561                           ;stkvar	_b @ sp[(-13)+-4]
 23562  01267A  0EF1               	movlw	241
 23563  01267C  24E1               	addwf	fsr1l,w,c
 23564  01267E  6ED9               	movwf	fsr2l,c
 23565  012680  0EFF               	movlw	255
 23566  012682  20E2               	addwfc	fsr1h,w,c
 23567  012684  6EDA               	movwf	fsr2h,c
 23568  012686  AEDF               	btfss	indf2,7,c
 23569  012688  D002               	goto	l7532
 23570                           
 23571                           ;stkvar	_bexp @ sp[(-13)+10]
 23572  01268A  0EFD               	movlw	-3
 23573  01268C  80E3               	bsf	plusw1,0,c
 23574  01268E                     l7532:
 23575                           
 23576                           ;stkvar	_bexp @ sp[(-13)+10]
 23577  01268E  0EFD               	movlw	-3
 23578  012690  50E3               	movf	plusw1,w,c
 23579  012692  B4D8               	btfsc	status,2,c
 23580  012694  D01F               	goto	l7540
 23581                           
 23582                           ;stkvar	_bexp @ sp[(-13)+10]
 23583  012696  0EFD               	movlw	-3
 23584  012698  28E3               	incf	plusw1,w,c
 23585  01269A  A4D8               	btfss	status,2,c
 23586  01269C  D018               	goto	l7538
 23587  01269E  0E00               	movlw	0
 23588  0126A0  6E09               	movwf	(btemp+8)^0,c
 23589  0126A2  0E00               	movlw	0
 23590  0126A4  6E0A               	movwf	(btemp+9)^0,c
 23591  0126A6  0E00               	movlw	0
 23592  0126A8  6E0B               	movwf	(btemp+10)^0,c
 23593  0126AA  0E00               	movlw	0
 23594  0126AC  6E0C               	movwf	(btemp+11)^0,c
 23595                           
 23596                           ;stkvar	_b @ sp[(-13)+-4]
 23597  0126AE  0EEF               	movlw	-17
 23598  0126B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 23599  0126B6  0EF0               	movlw	-16
 23600  0126B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23601  0126BE  0EF1               	movlw	-15
 23602  0126C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23603  0126C6  0EF2               	movlw	-14
 23604  0126C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23605  0126CE                     l7538:
 23606                           
 23607                           ;stkvar	_b @ sp[(-13)+-4]
 23608  0126CE  0EF1               	movlw	-15
 23609  0126D0  8EE3               	bsf	plusw1,7,c
 23610  0126D2  D018               	goto	l7542
 23611  0126D4                     l7540:
 23612  0126D4  0E00               	movlw	0
 23613  0126D6  6E09               	movwf	(btemp+8)^0,c
 23614  0126D8  0E00               	movlw	0
 23615  0126DA  6E0A               	movwf	(btemp+9)^0,c
 23616  0126DC  0E00               	movlw	0
 23617  0126DE  6E0B               	movwf	(btemp+10)^0,c
 23618  0126E0  0E00               	movlw	0
 23619  0126E2  6E0C               	movwf	(btemp+11)^0,c
 23620                           
 23621                           ;stkvar	_b @ sp[(-13)+-4]
 23622  0126E4  0EEF               	movlw	-17
 23623  0126E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 23624  0126EC  0EF0               	movlw	-16
 23625  0126EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23626  0126F4  0EF1               	movlw	-15
 23627  0126F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23628  0126FC  0EF2               	movlw	-14
 23629  0126FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 23630  012704                     l7542:
 23631                           
 23632                           ;stkvar	_a @ sp[(-13)+-8]
 23633  012704  0EEE               	movlw	238
 23634  012706  24E1               	addwf	fsr1l,w,c
 23635  012708  6ED9               	movwf	fsr2l,c
 23636  01270A  0EFF               	movlw	255
 23637  01270C  20E2               	addwfc	fsr1h,w,c
 23638  01270E  6EDA               	movwf	fsr2h,c
 23639  012710  50DF               	movf	indf2,w,c
 23640  012712  6E0C               	movwf	(btemp+11)^0,c
 23641  012714  0E80               	movlw	128
 23642  012716  160C               	andwf	(btemp+11)^0,f,c
 23643                           
 23644                           ;stkvar	_sign @ sp[(-13)+12]
 23645  012718  50E1               	movf	fsr1l,w,c
 23646  01271A  0FFF               	addlw	-1
 23647  01271C  6ED9               	movwf	fsr2l,c
 23648  01271E  50E2               	movf	fsr1h,w,c
 23649  012720  6EDA               	movwf	fsr2h,c
 23650  012722  0EFF               	movlw	255
 23651  012724  22DA               	addwfc	fsr2h,f,c
 23652  012726  500C               	movf	(btemp+11)^0,w,c
 23653  012728  1ADF               	xorwf	indf2,f,c
 23654                           
 23655                           ;stkvar	_a @ sp[(-13)+-8]
 23656  01272A  0EEE               	movlw	238
 23657  01272C  24E1               	addwf	fsr1l,w,c
 23658  01272E  6ED9               	movwf	fsr2l,c
 23659  012730  0EFF               	movlw	255
 23660  012732  20E2               	addwfc	fsr1h,w,c
 23661  012734  6EDA               	movwf	fsr2h,c
 23662  012736  50DF               	movf	indf2,w,c
 23663  012738  6E0C               	movwf	(btemp+11)^0,c
 23664  01273A  90D8               	bcf	status,0,c
 23665  01273C  340C               	rlcf	(btemp+11)^0,w,c
 23666  01273E  6E0B               	movwf	(btemp+10)^0,c
 23667                           
 23668                           ;stkvar	_aexp @ sp[(-13)+11]
 23669  012740  0EFE               	movlw	-2
 23670  012742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23671                           
 23672                           ;stkvar	_a @ sp[(-13)+-8]
 23673  012748  0EED               	movlw	237
 23674  01274A  24E1               	addwf	fsr1l,w,c
 23675  01274C  6ED9               	movwf	fsr2l,c
 23676  01274E  0EFF               	movlw	255
 23677  012750  20E2               	addwfc	fsr1h,w,c
 23678  012752  6EDA               	movwf	fsr2h,c
 23679  012754  AEDF               	btfss	indf2,7,c
 23680  012756  D002               	goto	l7550
 23681                           
 23682                           ;stkvar	_aexp @ sp[(-13)+11]
 23683  012758  0EFE               	movlw	-2
 23684  01275A  80E3               	bsf	plusw1,0,c
 23685  01275C                     l7550:
 23686                           
 23687                           ;stkvar	_aexp @ sp[(-13)+11]
 23688  01275C  0EFE               	movlw	-2
 23689  01275E  50E3               	movf	plusw1,w,c
 23690  012760  B4D8               	btfsc	status,2,c
 23691  012762  D01F               	goto	l7558
 23692                           
 23693                           ;stkvar	_aexp @ sp[(-13)+11]
 23694  012764  0EFE               	movlw	-2
 23695  012766  28E3               	incf	plusw1,w,c
 23696  012768  A4D8               	btfss	status,2,c
 23697  01276A  D018               	goto	l7556
 23698  01276C  0E00               	movlw	0
 23699  01276E  6E09               	movwf	(btemp+8)^0,c
 23700  012770  0E00               	movlw	0
 23701  012772  6E0A               	movwf	(btemp+9)^0,c
 23702  012774  0E00               	movlw	0
 23703  012776  6E0B               	movwf	(btemp+10)^0,c
 23704  012778  0E00               	movlw	0
 23705  01277A  6E0C               	movwf	(btemp+11)^0,c
 23706                           
 23707                           ;stkvar	_a @ sp[(-13)+-8]
 23708  01277C  0EEB               	movlw	-21
 23709  01277E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23710  012784  0EEC               	movlw	-20
 23711  012786  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23712  01278C  0EED               	movlw	-19
 23713  01278E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23714  012794  0EEE               	movlw	-18
 23715  012796  0060  F033  FFE3   	movff	btemp+11,plusw1
 23716  01279C                     l7556:
 23717                           
 23718                           ;stkvar	_a @ sp[(-13)+-8]
 23719  01279C  0EED               	movlw	-19
 23720  01279E  8EE3               	bsf	plusw1,7,c
 23721  0127A0  D018               	goto	l7560
 23722  0127A2                     l7558:
 23723  0127A2  0E00               	movlw	0
 23724  0127A4  6E09               	movwf	(btemp+8)^0,c
 23725  0127A6  0E00               	movlw	0
 23726  0127A8  6E0A               	movwf	(btemp+9)^0,c
 23727  0127AA  0E00               	movlw	0
 23728  0127AC  6E0B               	movwf	(btemp+10)^0,c
 23729  0127AE  0E00               	movlw	0
 23730  0127B0  6E0C               	movwf	(btemp+11)^0,c
 23731                           
 23732                           ;stkvar	_a @ sp[(-13)+-8]
 23733  0127B2  0EEB               	movlw	-21
 23734  0127B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23735  0127BA  0EEC               	movlw	-20
 23736  0127BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23737  0127C2  0EED               	movlw	-19
 23738  0127C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23739  0127CA  0EEE               	movlw	-18
 23740  0127CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23741  0127D2                     l7560:
 23742                           
 23743                           ;stkvar	_aexp @ sp[(-13)+11]
 23744  0127D2  0EFE               	movlw	-2
 23745  0127D4  50E3               	movf	plusw1,w,c
 23746  0127D6  B4D8               	btfsc	status,2,c
 23747  0127D8  D004               	goto	u6080
 23748                           
 23749                           ;stkvar	_bexp @ sp[(-13)+10]
 23750  0127DA  0EFD               	movlw	-3
 23751  0127DC  50E3               	movf	plusw1,w,c
 23752  0127DE  A4D8               	btfss	status,2,c
 23753  0127E0  D009               	goto	l7568
 23754  0127E2                     u6080:
 23755  0127E2  0E00               	movlw	0
 23756  0127E4  6E01               	movwf	btemp^0,c
 23757  0127E6  0E00               	movlw	0
 23758  0127E8  6E02               	movwf	(btemp+1)^0,c
 23759  0127EA  0E00               	movlw	0
 23760  0127EC  6E03               	movwf	(btemp+2)^0,c
 23761  0127EE  0E00               	movlw	0
 23762  0127F0  6E04               	movwf	(btemp+3)^0,c
 23763  0127F2  D332               	goto	l2851
 23764  0127F4                     l7568:
 23765                           
 23766                           ;stkvar	_b @ sp[(-13)+-4]
 23767  0127F4  0EEF               	movlw	-17
 23768  0127F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23769                           
 23770                           ;stkvar	_a @ sp[(-13)+-8]
 23771  0127FC  0EED               	movlw	237
 23772  0127FE  24E1               	addwf	fsr1l,w,c
 23773  012800  6ED9               	movwf	fsr2l,c
 23774  012802  0EFF               	movlw	255
 23775  012804  20E2               	addwfc	fsr1h,w,c
 23776  012806  6EDA               	movwf	fsr2h,c
 23777  012808  50DF               	movf	indf2,w,c
 23778  01280A  020C               	mulwf	(btemp+11)^0,c
 23779                           
 23780                           ;stkvar	_temp @ sp[(-13)+8]
 23781  01280C  0EFB               	movlw	-5
 23782  01280E  006F FFCF FFE3     	movff	prodl,plusw1
 23783  012814  0EFC               	movlw	-4
 23784  012816  006F FFD3 FFE3     	movff	prodh,plusw1
 23785                           
 23786                           ;stkvar	_temp @ sp[(-13)+8]
 23787  01281C  0EFB               	movlw	-5
 23788  01281E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23789  012824  0060  F030  F005   	movff	btemp+11,btemp+4
 23790  01282A  6A06               	clrf	(btemp+5)^0,c
 23791  01282C  6A07               	clrf	(btemp+6)^0,c
 23792  01282E  6A08               	clrf	(btemp+7)^0,c
 23793                           
 23794                           ;stkvar	_grs @ sp[(-13)+4]
 23795  012830  0EF7               	movlw	-9
 23796  012832  0060  F017  FFE3   	movff	btemp+4,plusw1
 23797  012838  0EF8               	movlw	-8
 23798  01283A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23799  012840  0EF9               	movlw	-7
 23800  012842  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23801  012848  0EFA               	movlw	-6
 23802  01284A  0060  F023  FFE3   	movff	btemp+7,plusw1
 23803                           
 23804                           ;stkvar	_temp @ sp[(-13)+8]
 23805  012850  0EFC               	movlw	252
 23806  012852  24E1               	addwf	fsr1l,w,c
 23807  012854  6ED9               	movwf	fsr2l,c
 23808  012856  0EFF               	movlw	255
 23809  012858  20E2               	addwfc	fsr1h,w,c
 23810  01285A  6EDA               	movwf	fsr2h,c
 23811  01285C  50DF               	movf	indf2,w,c
 23812  01285E  6E0C               	movwf	(btemp+11)^0,c
 23813  012860  0060  F030  F005   	movff	btemp+11,btemp+4
 23814  012866  6A06               	clrf	(btemp+5)^0,c
 23815  012868  6A07               	clrf	(btemp+6)^0,c
 23816  01286A  6A08               	clrf	(btemp+7)^0,c
 23817                           
 23818                           ;stkvar	_prod @ sp[(-13)+0]
 23819  01286C  0EF3               	movlw	-13
 23820  01286E  0060  F017  FFE3   	movff	btemp+4,plusw1
 23821  012874  0EF4               	movlw	-12
 23822  012876  0060  F01B  FFE3   	movff	btemp+5,plusw1
 23823  01287C  0EF5               	movlw	-11
 23824  01287E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 23825  012884  0EF6               	movlw	-10
 23826  012886  0060  F023  FFE3   	movff	btemp+7,plusw1
 23827                           
 23828                           ;stkvar	_b @ sp[(-13)+-4]
 23829  01288C  0EF0               	movlw	240
 23830  01288E  24E1               	addwf	fsr1l,w,c
 23831  012890  6ED9               	movwf	fsr2l,c
 23832  012892  0EFF               	movlw	255
 23833  012894  20E2               	addwfc	fsr1h,w,c
 23834  012896  6EDA               	movwf	fsr2h,c
 23835  012898  50DF               	movf	indf2,w,c
 23836  01289A  6E0C               	movwf	(btemp+11)^0,c
 23837                           
 23838                           ;stkvar	_a @ sp[(-13)+-8]
 23839  01289C  0EEC               	movlw	236
 23840  01289E  24E1               	addwf	fsr1l,w,c
 23841  0128A0  6ED9               	movwf	fsr2l,c
 23842  0128A2  0EFF               	movlw	255
 23843  0128A4  20E2               	addwfc	fsr1h,w,c
 23844  0128A6  6EDA               	movwf	fsr2h,c
 23845  0128A8  50DF               	movf	indf2,w,c
 23846  0128AA  020C               	mulwf	(btemp+11)^0,c
 23847                           
 23848                           ;stkvar	_temp @ sp[(-13)+8]
 23849  0128AC  0EFB               	movlw	-5
 23850  0128AE  006F FFCF FFE3     	movff	prodl,plusw1
 23851  0128B4  0EFC               	movlw	-4
 23852  0128B6  006F FFD3 FFE3     	movff	prodh,plusw1
 23853                           
 23854                           ;stkvar	_grs @ sp[(-13)+4]
 23855  0128BC  50E1               	movf	fsr1l,w,c
 23856  0128BE  0FF7               	addlw	-9
 23857  0128C0  6ED9               	movwf	fsr2l,c
 23858  0128C2  50E2               	movf	fsr1h,w,c
 23859  0128C4  6EDA               	movwf	fsr2h,c
 23860  0128C6  0EFF               	movlw	255
 23861  0128C8  22DA               	addwfc	fsr2h,f,c
 23862                           
 23863                           ;stkvar	_temp @ sp[(-13)+8]
 23864  0128CA  0EFB               	movlw	-5
 23865  0128CC  50E3               	movf	plusw1,w,c
 23866  0128CE  26DE               	addwf	postinc2,f,c
 23867  0128D0  0E00               	movlw	0
 23868  0128D2  22DE               	addwfc	postinc2,f,c
 23869  0128D4  22DE               	addwfc	postinc2,f,c
 23870  0128D6  22DE               	addwfc	postinc2,f,c
 23871                           
 23872                           ;stkvar	_prod @ sp[(-13)+0]
 23873  0128D8  50E1               	movf	fsr1l,w,c
 23874  0128DA  0FF3               	addlw	-13
 23875  0128DC  6ED9               	movwf	fsr2l,c
 23876  0128DE  50E2               	movf	fsr1h,w,c
 23877  0128E0  6EDA               	movwf	fsr2h,c
 23878  0128E2  0EFF               	movlw	255
 23879  0128E4  22DA               	addwfc	fsr2h,f,c
 23880                           
 23881                           ;stkvar	_temp @ sp[(-13)+8]
 23882  0128E6  0EFC               	movlw	252
 23883  0128E8  24E1               	addwf	fsr1l,w,c
 23884  0128EA  6EE9               	movwf	fsr0l,c
 23885  0128EC  0EFF               	movlw	255
 23886  0128EE  20E2               	addwfc	fsr1h,w,c
 23887  0128F0  6EEA               	movwf	fsr0h,c
 23888  0128F2  50EF               	movf	indf0,w,c
 23889  0128F4  26DE               	addwf	postinc2,f,c
 23890  0128F6  0E00               	movlw	0
 23891  0128F8  22DE               	addwfc	postinc2,f,c
 23892  0128FA  22DE               	addwfc	postinc2,f,c
 23893  0128FC  22DE               	addwfc	postinc2,f,c
 23894                           
 23895                           ;stkvar	_b @ sp[(-13)+-4]
 23896  0128FE  0EF1               	movlw	241
 23897  012900  24E1               	addwf	fsr1l,w,c
 23898  012902  6ED9               	movwf	fsr2l,c
 23899  012904  0EFF               	movlw	255
 23900  012906  20E2               	addwfc	fsr1h,w,c
 23901  012908  6EDA               	movwf	fsr2h,c
 23902  01290A  50DF               	movf	indf2,w,c
 23903  01290C  6E0C               	movwf	(btemp+11)^0,c
 23904                           
 23905                           ;stkvar	_a @ sp[(-13)+-8]
 23906  01290E  0EEB               	movlw	-21
 23907  012910  50E3               	movf	plusw1,w,c
 23908  012912  020C               	mulwf	(btemp+11)^0,c
 23909                           
 23910                           ;stkvar	_temp @ sp[(-13)+8]
 23911  012914  0EFB               	movlw	-5
 23912  012916  006F FFCF FFE3     	movff	prodl,plusw1
 23913  01291C  0EFC               	movlw	-4
 23914  01291E  006F FFD3 FFE3     	movff	prodh,plusw1
 23915                           
 23916                           ;stkvar	_grs @ sp[(-13)+4]
 23917  012924  50E1               	movf	fsr1l,w,c
 23918  012926  0FF7               	addlw	-9
 23919  012928  6ED9               	movwf	fsr2l,c
 23920  01292A  50E2               	movf	fsr1h,w,c
 23921  01292C  6EDA               	movwf	fsr2h,c
 23922  01292E  0EFF               	movlw	255
 23923  012930  22DA               	addwfc	fsr2h,f,c
 23924                           
 23925                           ;stkvar	_temp @ sp[(-13)+8]
 23926  012932  0EFB               	movlw	-5
 23927  012934  50E3               	movf	plusw1,w,c
 23928  012936  26DE               	addwf	postinc2,f,c
 23929  012938  0E00               	movlw	0
 23930  01293A  22DE               	addwfc	postinc2,f,c
 23931  01293C  22DE               	addwfc	postinc2,f,c
 23932  01293E  22DE               	addwfc	postinc2,f,c
 23933                           
 23934                           ;stkvar	_prod @ sp[(-13)+0]
 23935  012940  50E1               	movf	fsr1l,w,c
 23936  012942  0FF3               	addlw	-13
 23937  012944  6ED9               	movwf	fsr2l,c
 23938  012946  50E2               	movf	fsr1h,w,c
 23939  012948  6EDA               	movwf	fsr2h,c
 23940  01294A  0EFF               	movlw	255
 23941  01294C  22DA               	addwfc	fsr2h,f,c
 23942                           
 23943                           ;stkvar	_temp @ sp[(-13)+8]
 23944  01294E  0EFC               	movlw	252
 23945  012950  24E1               	addwf	fsr1l,w,c
 23946  012952  6EE9               	movwf	fsr0l,c
 23947  012954  0EFF               	movlw	255
 23948  012956  20E2               	addwfc	fsr1h,w,c
 23949  012958  6EEA               	movwf	fsr0h,c
 23950  01295A  50EF               	movf	indf0,w,c
 23951  01295C  26DE               	addwf	postinc2,f,c
 23952  01295E  0E00               	movlw	0
 23953  012960  22DE               	addwfc	postinc2,f,c
 23954  012962  22DE               	addwfc	postinc2,f,c
 23955  012964  22DE               	addwfc	postinc2,f,c
 23956                           
 23957                           ;stkvar	_grs @ sp[(-13)+4]
 23958  012966  50E1               	movf	fsr1l,w,c
 23959  012968  0FF7               	addlw	-9
 23960  01296A  6ED9               	movwf	fsr2l,c
 23961  01296C  50E2               	movf	fsr1h,w,c
 23962  01296E  6EDA               	movwf	fsr2h,c
 23963  012970  0EFF               	movlw	255
 23964  012972  22DA               	addwfc	fsr2h,f,c
 23965  012974  0E08               	movlw	8
 23966  012976                     u6095:
 23967  012976  90D8               	bcf	status,0,c
 23968  012978  36DE               	rlcf	postinc2,f,c
 23969  01297A  36DE               	rlcf	postinc2,f,c
 23970  01297C  36DE               	rlcf	postinc2,f,c
 23971  01297E  36DD               	rlcf	postdec2,f,c
 23972  012980  52DD               	movf	postdec2,f,c
 23973  012982  52DD               	movf	postdec2,f,c
 23974  012984  2EE8               	decfsz	wreg,f,c
 23975  012986  D7F7               	goto	u6095
 23976                           
 23977                           ;stkvar	_b @ sp[(-13)+-4]
 23978  012988  0EF0               	movlw	240
 23979  01298A  24E1               	addwf	fsr1l,w,c
 23980  01298C  6ED9               	movwf	fsr2l,c
 23981  01298E  0EFF               	movlw	255
 23982  012990  20E2               	addwfc	fsr1h,w,c
 23983  012992  6EDA               	movwf	fsr2h,c
 23984  012994  50DF               	movf	indf2,w,c
 23985  012996  6E0C               	movwf	(btemp+11)^0,c
 23986                           
 23987                           ;stkvar	_a @ sp[(-13)+-8]
 23988  012998  0EEB               	movlw	-21
 23989  01299A  50E3               	movf	plusw1,w,c
 23990  01299C  020C               	mulwf	(btemp+11)^0,c
 23991                           
 23992                           ;stkvar	_temp @ sp[(-13)+8]
 23993  01299E  0EFB               	movlw	-5
 23994  0129A0  006F FFCF FFE3     	movff	prodl,plusw1
 23995  0129A6  0EFC               	movlw	-4
 23996  0129A8  006F FFD3 FFE3     	movff	prodh,plusw1
 23997                           
 23998                           ;stkvar	_temp @ sp[(-13)+8]
 23999  0129AE  0EFB               	movlw	-5
 24000  0129B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24001  0129B6  0EFC               	movlw	-4
 24002  0129B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24003                           
 24004                           ;stkvar	_grs @ sp[(-13)+4]
 24005  0129BE  50E1               	movf	fsr1l,w,c
 24006  0129C0  0FF7               	addlw	-9
 24007  0129C2  6ED9               	movwf	fsr2l,c
 24008  0129C4  50E2               	movf	fsr1h,w,c
 24009  0129C6  6EDA               	movwf	fsr2h,c
 24010  0129C8  0EFF               	movlw	255
 24011  0129CA  22DA               	addwfc	fsr2h,f,c
 24012  0129CC  500B               	movf	(btemp+10)^0,w,c
 24013  0129CE  26DE               	addwf	postinc2,f,c
 24014  0129D0  500C               	movf	(btemp+11)^0,w,c
 24015  0129D2  22DE               	addwfc	postinc2,f,c
 24016  0129D4  0E00               	movlw	0
 24017  0129D6  22DE               	addwfc	postinc2,f,c
 24018  0129D8  22DE               	addwfc	postinc2,f,c
 24019                           
 24020                           ;stkvar	_b @ sp[(-13)+-4]
 24021  0129DA  0EEF               	movlw	-17
 24022  0129DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24023                           
 24024                           ;stkvar	_a @ sp[(-13)+-8]
 24025  0129E2  0EEC               	movlw	236
 24026  0129E4  24E1               	addwf	fsr1l,w,c
 24027  0129E6  6ED9               	movwf	fsr2l,c
 24028  0129E8  0EFF               	movlw	255
 24029  0129EA  20E2               	addwfc	fsr1h,w,c
 24030  0129EC  6EDA               	movwf	fsr2h,c
 24031  0129EE  50DF               	movf	indf2,w,c
 24032  0129F0  020C               	mulwf	(btemp+11)^0,c
 24033                           
 24034                           ;stkvar	_temp @ sp[(-13)+8]
 24035  0129F2  0EFB               	movlw	-5
 24036  0129F4  006F FFCF FFE3     	movff	prodl,plusw1
 24037  0129FA  0EFC               	movlw	-4
 24038  0129FC  006F FFD3 FFE3     	movff	prodh,plusw1
 24039                           
 24040                           ;stkvar	_temp @ sp[(-13)+8]
 24041  012A02  0EFB               	movlw	-5
 24042  012A04  006F FF8C  F00B    	movff	plusw1,btemp+10
 24043  012A0A  0EFC               	movlw	-4
 24044  012A0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24045                           
 24046                           ;stkvar	_grs @ sp[(-13)+4]
 24047  012A12  50E1               	movf	fsr1l,w,c
 24048  012A14  0FF7               	addlw	-9
 24049  012A16  6ED9               	movwf	fsr2l,c
 24050  012A18  50E2               	movf	fsr1h,w,c
 24051  012A1A  6EDA               	movwf	fsr2h,c
 24052  012A1C  0EFF               	movlw	255
 24053  012A1E  22DA               	addwfc	fsr2h,f,c
 24054  012A20  500B               	movf	(btemp+10)^0,w,c
 24055  012A22  26DE               	addwf	postinc2,f,c
 24056  012A24  500C               	movf	(btemp+11)^0,w,c
 24057  012A26  22DE               	addwfc	postinc2,f,c
 24058  012A28  0E00               	movlw	0
 24059  012A2A  22DE               	addwfc	postinc2,f,c
 24060  012A2C  22DE               	addwfc	postinc2,f,c
 24061                           
 24062                           ;stkvar	_grs @ sp[(-13)+4]
 24063  012A2E  50E1               	movf	fsr1l,w,c
 24064  012A30  0FF7               	addlw	-9
 24065  012A32  6ED9               	movwf	fsr2l,c
 24066  012A34  50E2               	movf	fsr1h,w,c
 24067  012A36  6EDA               	movwf	fsr2h,c
 24068  012A38  0EFF               	movlw	255
 24069  012A3A  22DA               	addwfc	fsr2h,f,c
 24070  012A3C  0E08               	movlw	8
 24071  012A3E                     u6105:
 24072  012A3E  90D8               	bcf	status,0,c
 24073  012A40  36DE               	rlcf	postinc2,f,c
 24074  012A42  36DE               	rlcf	postinc2,f,c
 24075  012A44  36DE               	rlcf	postinc2,f,c
 24076  012A46  36DD               	rlcf	postdec2,f,c
 24077  012A48  52DD               	movf	postdec2,f,c
 24078  012A4A  52DD               	movf	postdec2,f,c
 24079  012A4C  2EE8               	decfsz	wreg,f,c
 24080  012A4E  D7F7               	goto	u6105
 24081                           
 24082                           ;stkvar	_b @ sp[(-13)+-4]
 24083  012A50  0EEF               	movlw	-17
 24084  012A52  006F FF8C  F00C    	movff	plusw1,btemp+11
 24085                           
 24086                           ;stkvar	_a @ sp[(-13)+-8]
 24087  012A58  0EEB               	movlw	-21
 24088  012A5A  50E3               	movf	plusw1,w,c
 24089  012A5C  020C               	mulwf	(btemp+11)^0,c
 24090                           
 24091                           ;stkvar	_temp @ sp[(-13)+8]
 24092  012A5E  0EFB               	movlw	-5
 24093  012A60  006F FFCF FFE3     	movff	prodl,plusw1
 24094  012A66  0EFC               	movlw	-4
 24095  012A68  006F FFD3 FFE3     	movff	prodh,plusw1
 24096                           
 24097                           ;stkvar	_temp @ sp[(-13)+8]
 24098  012A6E  0EFB               	movlw	-5
 24099  012A70  006F FF8C  F00B    	movff	plusw1,btemp+10
 24100  012A76  0EFC               	movlw	-4
 24101  012A78  006F FF8C  F00C    	movff	plusw1,btemp+11
 24102                           
 24103                           ;stkvar	_grs @ sp[(-13)+4]
 24104  012A7E  50E1               	movf	fsr1l,w,c
 24105  012A80  0FF7               	addlw	-9
 24106  012A82  6ED9               	movwf	fsr2l,c
 24107  012A84  50E2               	movf	fsr1h,w,c
 24108  012A86  6EDA               	movwf	fsr2h,c
 24109  012A88  0EFF               	movlw	255
 24110  012A8A  22DA               	addwfc	fsr2h,f,c
 24111  012A8C  500B               	movf	(btemp+10)^0,w,c
 24112  012A8E  26DE               	addwf	postinc2,f,c
 24113  012A90  500C               	movf	(btemp+11)^0,w,c
 24114  012A92  22DE               	addwfc	postinc2,f,c
 24115  012A94  0E00               	movlw	0
 24116  012A96  22DE               	addwfc	postinc2,f,c
 24117  012A98  22DE               	addwfc	postinc2,f,c
 24118                           
 24119                           ;stkvar	_b @ sp[(-13)+-4]
 24120  012A9A  0EF0               	movlw	240
 24121  012A9C  24E1               	addwf	fsr1l,w,c
 24122  012A9E  6ED9               	movwf	fsr2l,c
 24123  012AA0  0EFF               	movlw	255
 24124  012AA2  20E2               	addwfc	fsr1h,w,c
 24125  012AA4  6EDA               	movwf	fsr2h,c
 24126  012AA6  50DF               	movf	indf2,w,c
 24127  012AA8  6E0C               	movwf	(btemp+11)^0,c
 24128                           
 24129                           ;stkvar	_a @ sp[(-13)+-8]
 24130  012AAA  0EED               	movlw	237
 24131  012AAC  24E1               	addwf	fsr1l,w,c
 24132  012AAE  6ED9               	movwf	fsr2l,c
 24133  012AB0  0EFF               	movlw	255
 24134  012AB2  20E2               	addwfc	fsr1h,w,c
 24135  012AB4  6EDA               	movwf	fsr2h,c
 24136  012AB6  50DF               	movf	indf2,w,c
 24137  012AB8  020C               	mulwf	(btemp+11)^0,c
 24138                           
 24139                           ;stkvar	_temp @ sp[(-13)+8]
 24140  012ABA  0EFB               	movlw	-5
 24141  012ABC  006F FFCF FFE3     	movff	prodl,plusw1
 24142  012AC2  0EFC               	movlw	-4
 24143  012AC4  006F FFD3 FFE3     	movff	prodh,plusw1
 24144                           
 24145                           ;stkvar	_temp @ sp[(-13)+8]
 24146  012ACA  0EFB               	movlw	-5
 24147  012ACC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24148  012AD2  0EFC               	movlw	-4
 24149  012AD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24150                           
 24151                           ;stkvar	_prod @ sp[(-13)+0]
 24152  012ADA  50E1               	movf	fsr1l,w,c
 24153  012ADC  0FF3               	addlw	-13
 24154  012ADE  6ED9               	movwf	fsr2l,c
 24155  012AE0  50E2               	movf	fsr1h,w,c
 24156  012AE2  6EDA               	movwf	fsr2h,c
 24157  012AE4  0EFF               	movlw	255
 24158  012AE6  22DA               	addwfc	fsr2h,f,c
 24159  012AE8  500B               	movf	(btemp+10)^0,w,c
 24160  012AEA  26DE               	addwf	postinc2,f,c
 24161  012AEC  500C               	movf	(btemp+11)^0,w,c
 24162  012AEE  22DE               	addwfc	postinc2,f,c
 24163  012AF0  0E00               	movlw	0
 24164  012AF2  22DE               	addwfc	postinc2,f,c
 24165  012AF4  22DE               	addwfc	postinc2,f,c
 24166                           
 24167                           ;stkvar	_b @ sp[(-13)+-4]
 24168  012AF6  0EF1               	movlw	241
 24169  012AF8  24E1               	addwf	fsr1l,w,c
 24170  012AFA  6ED9               	movwf	fsr2l,c
 24171  012AFC  0EFF               	movlw	255
 24172  012AFE  20E2               	addwfc	fsr1h,w,c
 24173  012B00  6EDA               	movwf	fsr2h,c
 24174  012B02  50DF               	movf	indf2,w,c
 24175  012B04  6E0C               	movwf	(btemp+11)^0,c
 24176                           
 24177                           ;stkvar	_a @ sp[(-13)+-8]
 24178  012B06  0EEC               	movlw	236
 24179  012B08  24E1               	addwf	fsr1l,w,c
 24180  012B0A  6ED9               	movwf	fsr2l,c
 24181  012B0C  0EFF               	movlw	255
 24182  012B0E  20E2               	addwfc	fsr1h,w,c
 24183  012B10  6EDA               	movwf	fsr2h,c
 24184  012B12  50DF               	movf	indf2,w,c
 24185  012B14  020C               	mulwf	(btemp+11)^0,c
 24186                           
 24187                           ;stkvar	_temp @ sp[(-13)+8]
 24188  012B16  0EFB               	movlw	-5
 24189  012B18  006F FFCF FFE3     	movff	prodl,plusw1
 24190  012B1E  0EFC               	movlw	-4
 24191  012B20  006F FFD3 FFE3     	movff	prodh,plusw1
 24192                           
 24193                           ;stkvar	_temp @ sp[(-13)+8]
 24194  012B26  0EFB               	movlw	-5
 24195  012B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 24196  012B2E  0EFC               	movlw	-4
 24197  012B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 24198                           
 24199                           ;stkvar	_prod @ sp[(-13)+0]
 24200  012B36  50E1               	movf	fsr1l,w,c
 24201  012B38  0FF3               	addlw	-13
 24202  012B3A  6ED9               	movwf	fsr2l,c
 24203  012B3C  50E2               	movf	fsr1h,w,c
 24204  012B3E  6EDA               	movwf	fsr2h,c
 24205  012B40  0EFF               	movlw	255
 24206  012B42  22DA               	addwfc	fsr2h,f,c
 24207  012B44  500B               	movf	(btemp+10)^0,w,c
 24208  012B46  26DE               	addwf	postinc2,f,c
 24209  012B48  500C               	movf	(btemp+11)^0,w,c
 24210  012B4A  22DE               	addwfc	postinc2,f,c
 24211  012B4C  0E00               	movlw	0
 24212  012B4E  22DE               	addwfc	postinc2,f,c
 24213  012B50  22DE               	addwfc	postinc2,f,c
 24214                           
 24215                           ;stkvar	_b @ sp[(-13)+-4]
 24216  012B52  0EF1               	movlw	241
 24217  012B54  24E1               	addwf	fsr1l,w,c
 24218  012B56  6ED9               	movwf	fsr2l,c
 24219  012B58  0EFF               	movlw	255
 24220  012B5A  20E2               	addwfc	fsr1h,w,c
 24221  012B5C  6EDA               	movwf	fsr2h,c
 24222  012B5E  50DF               	movf	indf2,w,c
 24223  012B60  6E0C               	movwf	(btemp+11)^0,c
 24224                           
 24225                           ;stkvar	_a @ sp[(-13)+-8]
 24226  012B62  0EED               	movlw	237
 24227  012B64  24E1               	addwf	fsr1l,w,c
 24228  012B66  6ED9               	movwf	fsr2l,c
 24229  012B68  0EFF               	movlw	255
 24230  012B6A  20E2               	addwfc	fsr1h,w,c
 24231  012B6C  6EDA               	movwf	fsr2h,c
 24232  012B6E  50DF               	movf	indf2,w,c
 24233  012B70  020C               	mulwf	(btemp+11)^0,c
 24234                           
 24235                           ;stkvar	_temp @ sp[(-13)+8]
 24236  012B72  0EFB               	movlw	-5
 24237  012B74  006F FFCF FFE3     	movff	prodl,plusw1
 24238  012B7A  0EFC               	movlw	-4
 24239  012B7C  006F FFD3 FFE3     	movff	prodh,plusw1
 24240                           
 24241                           ;stkvar	_temp @ sp[(-13)+8]
 24242  012B82  0EFB               	movlw	-5
 24243  012B84  006F FF8C  F00B    	movff	plusw1,btemp+10
 24244  012B8A  0EFC               	movlw	-4
 24245  012B8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24246  012B92  500B               	movf	(btemp+10)^0,w,c
 24247  012B94  6E05               	movwf	(btemp+4)^0,c
 24248  012B96  500C               	movf	(btemp+11)^0,w,c
 24249  012B98  6E06               	movwf	(btemp+5)^0,c
 24250  012B9A  6A07               	clrf	(btemp+6)^0,c
 24251  012B9C  6A08               	clrf	(btemp+7)^0,c
 24252  012B9E  0060  F01C  F008   	movff	btemp+6,btemp+7
 24253  012BA4  0060  F018  F007   	movff	btemp+5,btemp+6
 24254  012BAA  0060  F014  F006   	movff	btemp+4,btemp+5
 24255  012BB0  6A05               	clrf	(btemp+4)^0,c
 24256                           
 24257                           ;stkvar	_prod @ sp[(-13)+0]
 24258  012BB2  50E1               	movf	fsr1l,w,c
 24259  012BB4  0FF3               	addlw	-13
 24260  012BB6  6ED9               	movwf	fsr2l,c
 24261  012BB8  50E2               	movf	fsr1h,w,c
 24262  012BBA  6EDA               	movwf	fsr2h,c
 24263  012BBC  0EFF               	movlw	255
 24264  012BBE  22DA               	addwfc	fsr2h,f,c
 24265  012BC0  5005               	movf	(btemp+4)^0,w,c
 24266  012BC2  26DE               	addwf	postinc2,f,c
 24267  012BC4  5006               	movf	(btemp+5)^0,w,c
 24268  012BC6  22DE               	addwfc	postinc2,f,c
 24269  012BC8  5007               	movf	(btemp+6)^0,w,c
 24270  012BCA  22DE               	addwfc	postinc2,f,c
 24271  012BCC  5008               	movf	(btemp+7)^0,w,c
 24272  012BCE  22DE               	addwfc	postinc2,f,c
 24273                           
 24274                           ;stkvar	_prod @ sp[(-13)+0]
 24275  012BD0  50E1               	movf	fsr1l,w,c
 24276  012BD2  0FF3               	addlw	-13
 24277  012BD4  6ED9               	movwf	fsr2l,c
 24278  012BD6  50E2               	movf	fsr1h,w,c
 24279  012BD8  6EDA               	movwf	fsr2h,c
 24280  012BDA  0EFF               	movlw	255
 24281  012BDC  22DA               	addwfc	fsr2h,f,c
 24282                           
 24283                           ;stkvar	_grs @ sp[(-13)+4]
 24284  012BDE  0EFA               	movlw	250
 24285  012BE0  24E1               	addwf	fsr1l,w,c
 24286  012BE2  6EE9               	movwf	fsr0l,c
 24287  012BE4  0EFF               	movlw	255
 24288  012BE6  20E2               	addwfc	fsr1h,w,c
 24289  012BE8  6EEA               	movwf	fsr0h,c
 24290  012BEA  50EF               	movf	indf0,w,c
 24291  012BEC  26DE               	addwf	postinc2,f,c
 24292  012BEE  0E00               	movlw	0
 24293  012BF0  22DE               	addwfc	postinc2,f,c
 24294  012BF2  22DE               	addwfc	postinc2,f,c
 24295  012BF4  22DE               	addwfc	postinc2,f,c
 24296                           
 24297                           ;stkvar	_grs @ sp[(-13)+4]
 24298  012BF6  50E1               	movf	fsr1l,w,c
 24299  012BF8  0FF7               	addlw	-9
 24300  012BFA  6ED9               	movwf	fsr2l,c
 24301  012BFC  50E2               	movf	fsr1h,w,c
 24302  012BFE  6EDA               	movwf	fsr2h,c
 24303  012C00  0EFF               	movlw	255
 24304  012C02  22DA               	addwfc	fsr2h,f,c
 24305  012C04  0E08               	movlw	8
 24306  012C06                     u6115:
 24307  012C06  90D8               	bcf	status,0,c
 24308  012C08  36DE               	rlcf	postinc2,f,c
 24309  012C0A  36DE               	rlcf	postinc2,f,c
 24310  012C0C  36DE               	rlcf	postinc2,f,c
 24311  012C0E  36DD               	rlcf	postdec2,f,c
 24312  012C10  52DD               	movf	postdec2,f,c
 24313  012C12  52DD               	movf	postdec2,f,c
 24314  012C14  2EE8               	decfsz	wreg,f,c
 24315  012C16  D7F7               	goto	u6115
 24316  012C18  0E82               	movlw	130
 24317  012C1A  6E0B               	movwf	(btemp+10)^0,c
 24318  012C1C  0EFF               	movlw	255
 24319  012C1E  6E0C               	movwf	(btemp+11)^0,c
 24320                           
 24321                           ;stkvar	_bexp @ sp[(-13)+10]
 24322  012C20  0EFD               	movlw	-3
 24323  012C22  50E3               	movf	plusw1,w,c
 24324  012C24  6E09               	movwf	(btemp+8)^0,c
 24325  012C26  6A0A               	clrf	(btemp+9)^0,c
 24326                           
 24327                           ;stkvar	_aexp @ sp[(-13)+11]
 24328  012C28  0EFE               	movlw	-2
 24329  012C2A  50E3               	movf	plusw1,w,c
 24330  012C2C  2609               	addwf	(btemp+8)^0,f,c
 24331  012C2E  0E00               	movlw	0
 24332  012C30  220A               	addwfc	(btemp+9)^0,f,c
 24333  012C32  500B               	movf	(btemp+10)^0,w,c
 24334  012C34  2609               	addwf	(btemp+8)^0,f,c
 24335  012C36  500C               	movf	(btemp+11)^0,w,c
 24336  012C38  220A               	addwfc	(btemp+9)^0,f,c
 24337                           
 24338                           ;stkvar	_temp @ sp[(-13)+8]
 24339  012C3A  0EFB               	movlw	-5
 24340  012C3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24341  012C42  0EFC               	movlw	-4
 24342  012C44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24343  012C4A  D021               	goto	l7630
 24344  012C4C                     l7620:
 24345                           
 24346                           ;stkvar	_prod @ sp[(-13)+0]
 24347  012C4C  90D8               	bcf	status,0,c
 24348  012C4E  0EF3               	movlw	-13
 24349  012C50  36E3               	rlcf	plusw1,f,c
 24350  012C52  0EF4               	movlw	-12
 24351  012C54  36E3               	rlcf	plusw1,f,c
 24352  012C56  0EF5               	movlw	-11
 24353  012C58  36E3               	rlcf	plusw1,f,c
 24354  012C5A  0EF6               	movlw	-10
 24355  012C5C  36E3               	rlcf	plusw1,f,c
 24356                           
 24357                           ;stkvar	_grs @ sp[(-13)+4]
 24358  012C5E  0EFA               	movlw	-6
 24359  012C60  AEE3               	btfss	plusw1,7,c
 24360  012C62  D002               	goto	l7626
 24361                           
 24362                           ;stkvar	_prod @ sp[(-13)+0]
 24363  012C64  0EF3               	movlw	-13
 24364  012C66  80E3               	bsf	plusw1,0,c
 24365  012C68                     l7626:
 24366                           
 24367                           ;stkvar	_grs @ sp[(-13)+4]
 24368  012C68  90D8               	bcf	status,0,c
 24369  012C6A  0EF7               	movlw	-9
 24370  012C6C  36E3               	rlcf	plusw1,f,c
 24371  012C6E  0EF8               	movlw	-8
 24372  012C70  36E3               	rlcf	plusw1,f,c
 24373  012C72  0EF9               	movlw	-7
 24374  012C74  36E3               	rlcf	plusw1,f,c
 24375  012C76  0EFA               	movlw	-6
 24376  012C78  36E3               	rlcf	plusw1,f,c
 24377                           
 24378                           ;stkvar	_temp @ sp[(-13)+8]
 24379  012C7A  50E1               	movf	fsr1l,w,c
 24380  012C7C  0FFB               	addlw	-5
 24381  012C7E  6ED9               	movwf	fsr2l,c
 24382  012C80  50E2               	movf	fsr1h,w,c
 24383  012C82  6EDA               	movwf	fsr2h,c
 24384  012C84  0EFF               	movlw	255
 24385  012C86  22DA               	addwfc	fsr2h,f,c
 24386  012C88  06DE               	decf	postinc2,f,c
 24387  012C8A  0E00               	movlw	0
 24388  012C8C  5ADD               	subwfb	postdec2,f,c
 24389  012C8E                     l7630:
 24390                           
 24391                           ;stkvar	_prod @ sp[(-13)+0]
 24392  012C8E  0EF5               	movlw	-11
 24393  012C90  AEE3               	btfss	plusw1,7,c
 24394  012C92  D7DC               	goto	l7620
 24395                           
 24396                           ;stkvar	_aexp @ sp[(-13)+11]
 24397  012C94  0EFE               	movlw	-2
 24398  012C96  6AE3               	clrf	plusw1,c
 24399                           
 24400                           ;stkvar	_grs @ sp[(-13)+4]
 24401  012C98  0EFA               	movlw	-6
 24402  012C9A  AEE3               	btfss	plusw1,7,c
 24403  012C9C  D020               	goto	l7644
 24404                           
 24405                           ;stkvar	_grs @ sp[(-13)+4]
 24406  012C9E  50E1               	movf	fsr1l,w,c
 24407  012CA0  0FF7               	addlw	-9
 24408  012CA2  6ED9               	movwf	fsr2l,c
 24409  012CA4  50E2               	movf	fsr1h,w,c
 24410  012CA6  6EDA               	movwf	fsr2h,c
 24411  012CA8  0EFF               	movlw	255
 24412  012CAA  22DA               	addwfc	fsr2h,f,c
 24413  012CAC  0EFF               	movlw	255
 24414  012CAE  14DE               	andwf	postinc2,w,c
 24415  012CB0  6E09               	movwf	(btemp+8)^0,c
 24416  012CB2  0EFF               	movlw	255
 24417  012CB4  14DE               	andwf	postinc2,w,c
 24418  012CB6  6E0A               	movwf	(btemp+9)^0,c
 24419  012CB8  0EFF               	movlw	255
 24420  012CBA  14DE               	andwf	postinc2,w,c
 24421  012CBC  6E0B               	movwf	(btemp+10)^0,c
 24422  012CBE  0E7F               	movlw	127
 24423  012CC0  14DE               	andwf	postinc2,w,c
 24424  012CC2  6E0C               	movwf	(btemp+11)^0,c
 24425  012CC4  5009               	movf	(btemp+8)^0,w,c
 24426  012CC6  100A               	iorwf	(btemp+9)^0,w,c
 24427  012CC8  100B               	iorwf	(btemp+10)^0,w,c
 24428  012CCA  100C               	iorwf	(btemp+11)^0,w,c
 24429  012CCC  B4D8               	btfsc	status,2,c
 24430  012CCE  D004               	goto	l7640
 24431  012CD0                     u6150:
 24432                           
 24433                           ;stkvar	_aexp @ sp[(-13)+11]
 24434  012CD0  0EFE               	movlw	-2
 24435  012CD2  6AE3               	clrf	plusw1,c
 24436  012CD4  2AE3               	incf	plusw1,f,c
 24437  012CD6  D003               	goto	l7644
 24438  012CD8                     l7640:
 24439                           
 24440                           ;stkvar	_prod @ sp[(-13)+0]
 24441  012CD8  0EF3               	movlw	-13
 24442  012CDA  B0E3               	btfsc	plusw1,0,c
 24443  012CDC  D7F9               	goto	u6150
 24444  012CDE                     l7644:
 24445                           
 24446                           ;stkvar	_aexp @ sp[(-13)+11]
 24447  012CDE  0EFE               	movlw	-2
 24448  012CE0  50E3               	movf	plusw1,w,c
 24449  012CE2  B4D8               	btfsc	status,2,c
 24450  012CE4  D036               	goto	l7654
 24451                           
 24452                           ;stkvar	_prod @ sp[(-13)+0]
 24453  012CE6  50E1               	movf	fsr1l,w,c
 24454  012CE8  0FF3               	addlw	-13
 24455  012CEA  6ED9               	movwf	fsr2l,c
 24456  012CEC  50E2               	movf	fsr1h,w,c
 24457  012CEE  6EDA               	movwf	fsr2h,c
 24458  012CF0  0EFF               	movlw	255
 24459  012CF2  22DA               	addwfc	fsr2h,f,c
 24460  012CF4  2ADE               	incf	postinc2,f,c
 24461  012CF6  0E00               	movlw	0
 24462  012CF8  22DE               	addwfc	postinc2,f,c
 24463  012CFA  22DE               	addwfc	postinc2,f,c
 24464  012CFC  22DE               	addwfc	postinc2,f,c
 24465                           
 24466                           ;stkvar	_prod @ sp[(-13)+0]
 24467  012CFE  0EF6               	movlw	-10
 24468  012D00  A0E3               	btfss	plusw1,0,c
 24469  012D02  D027               	goto	l7654
 24470  012D04  0E01               	movlw	1
 24471  012D06  6E0C               	movwf	(btemp+11)^0,c
 24472                           
 24473                           ;stkvar	_prod @ sp[(-13)+0]
 24474  012D08  50E1               	movf	fsr1l,w,c
 24475  012D0A  0FF3               	addlw	-13
 24476  012D0C  6ED9               	movwf	fsr2l,c
 24477  012D0E  50E2               	movf	fsr1h,w,c
 24478  012D10  6EDA               	movwf	fsr2h,c
 24479  012D12  0EFF               	movlw	255
 24480  012D14  22DA               	addwfc	fsr2h,f,c
 24481  012D16  280C               	incf	(btemp+11)^0,w,c
 24482  012D18  52DE               	movf	postinc2,f,c
 24483  012D1A  D008               	goto	u6190
 24484  012D1C                     u6195:
 24485  012D1C  52DE               	movf	postinc2,f,c
 24486  012D1E  90D8               	bcf	status,0,c
 24487  012D20  BEDC               	btfsc	preinc2,7,c
 24488  012D22  80D8               	bsf	status,0,c
 24489  012D24  32DD               	rrcf	postdec2,f,c
 24490  012D26  32DD               	rrcf	postdec2,f,c
 24491  012D28  32DD               	rrcf	postdec2,f,c
 24492  012D2A  32DE               	rrcf	postinc2,f,c
 24493  012D2C                     u6190:
 24494  012D2C  2EE8               	decfsz	wreg,f,c
 24495  012D2E  D7F6               	goto	u6195
 24496                           
 24497                           ;stkvar	_temp @ sp[(-13)+8]
 24498  012D30  0EFB               	movlw	-5
 24499  012D32  50E3               	movf	plusw1,w,c
 24500  012D34  0F01               	addlw	1
 24501  012D36  6E01               	movwf	btemp^0,c
 24502  012D38  0EFB               	movlw	-5
 24503  012D3A  0060  F007  FFE3   	movff	btemp,plusw1
 24504  012D40  6A01               	clrf	btemp^0,c
 24505  012D42  0EFC               	movlw	-4
 24506  012D44  50E3               	movf	plusw1,w,c
 24507  012D46  2001               	addwfc	btemp^0,w,c
 24508  012D48  6E01               	movwf	btemp^0,c
 24509  012D4A  0EFC               	movlw	-4
 24510  012D4C  0060  F007  FFE3   	movff	btemp,plusw1
 24511  012D52                     l7654:
 24512                           
 24513                           ;stkvar	_temp @ sp[(-13)+8]
 24514  012D52  0EFC               	movlw	-4
 24515  012D54  BEE3               	btfsc	plusw1,7,c
 24516  012D56  D020               	goto	l7658
 24517  012D58  0EFC               	movlw	-4
 24518  012D5A  50E3               	movf	plusw1,w,c
 24519  012D5C  E104               	bnz	u6200
 24520  012D5E  0EFB               	movlw	-5
 24521  012D60  28E3               	incf	plusw1,w,c
 24522  012D62  A0D8               	btfss	status,0,c
 24523  012D64  D019               	goto	l7658
 24524  012D66                     u6200:
 24525  012D66  0E00               	movlw	0
 24526  012D68  6E09               	movwf	(btemp+8)^0,c
 24527  012D6A  0E00               	movlw	0
 24528  012D6C  6E0A               	movwf	(btemp+9)^0,c
 24529  012D6E  0E80               	movlw	128
 24530  012D70  6E0B               	movwf	(btemp+10)^0,c
 24531  012D72  0E7F               	movlw	127
 24532  012D74  6E0C               	movwf	(btemp+11)^0,c
 24533                           
 24534                           ;stkvar	_prod @ sp[(-13)+0]
 24535  012D76  0EF3               	movlw	-13
 24536  012D78  0060  F027  FFE3   	movff	btemp+8,plusw1
 24537  012D7E  0EF4               	movlw	-12
 24538  012D80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24539  012D86  0EF5               	movlw	-11
 24540  012D88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24541  012D8E  0EF6               	movlw	-10
 24542  012D90  0060  F033  FFE3   	movff	btemp+11,plusw1
 24543  012D96  D044               	goto	l7674
 24544  012D98                     l7658:
 24545                           
 24546                           ;stkvar	_temp @ sp[(-13)+8]
 24547  012D98  0EFC               	movlw	-4
 24548  012D9A  BEE3               	btfsc	plusw1,7,c
 24549  012D9C  D007               	goto	u6210
 24550  012D9E  0EFC               	movlw	-4
 24551  012DA0  50E3               	movf	plusw1,w,c
 24552  012DA2  E10F               	bnz	l7664
 24553  012DA4  0EFB               	movlw	-5
 24554  012DA6  04E3               	decf	plusw1,w,c
 24555  012DA8  B0D8               	btfsc	status,0,c
 24556  012DAA  D00B               	goto	l7664
 24557  012DAC                     u6210:
 24558                           
 24559                           ;stkvar	_prod @ sp[(-13)+0]
 24560  012DAC  0EF3               	movlw	-13
 24561  012DAE  6AE3               	clrf	plusw1,c
 24562  012DB0  0EF4               	movlw	-12
 24563  012DB2  6AE3               	clrf	plusw1,c
 24564  012DB4  0EF5               	movlw	-11
 24565  012DB6  6AE3               	clrf	plusw1,c
 24566  012DB8  0EF6               	movlw	-10
 24567  012DBA  6AE3               	clrf	plusw1,c
 24568                           
 24569                           ;stkvar	_sign @ sp[(-13)+12]
 24570  012DBC  0EFF               	movlw	-1
 24571  012DBE  6AE3               	clrf	plusw1,c
 24572  012DC0  D02F               	goto	l7674
 24573  012DC2                     l7664:
 24574                           
 24575                           ;stkvar	_temp @ sp[(-13)+8]
 24576                           ;stkvar	_bexp @ sp[(-13)+10]
 24577  012DC2  0EFB               	movlw	-5
 24578  012DC4  006F FF8C  F001    	movff	plusw1,btemp
 24579  012DCA  0EFD               	movlw	-3
 24580  012DCC  0060  F007  FFE3   	movff	btemp,plusw1
 24581                           
 24582                           ;stkvar	_prod @ sp[(-13)+0]
 24583  012DD2  50E1               	movf	fsr1l,w,c
 24584  012DD4  0FF3               	addlw	-13
 24585  012DD6  6ED9               	movwf	fsr2l,c
 24586  012DD8  50E2               	movf	fsr1h,w,c
 24587  012DDA  6EDA               	movwf	fsr2h,c
 24588  012DDC  0EFF               	movlw	255
 24589  012DDE  22DA               	addwfc	fsr2h,f,c
 24590  012DE0  0EFF               	movlw	255
 24591  012DE2  16DE               	andwf	postinc2,f,c
 24592  012DE4  0EFF               	movlw	255
 24593  012DE6  16DE               	andwf	postinc2,f,c
 24594  012DE8  0E7F               	movlw	127
 24595  012DEA  16DE               	andwf	postinc2,f,c
 24596  012DEC  0E00               	movlw	0
 24597  012DEE  16DE               	andwf	postinc2,f,c
 24598                           
 24599                           ;stkvar	_bexp @ sp[(-13)+10]
 24600  012DF0  0EFD               	movlw	-3
 24601  012DF2  A0E3               	btfss	plusw1,0,c
 24602  012DF4  D008               	goto	l7672
 24603                           
 24604                           ;stkvar	_prod @ sp[(-13)+0]
 24605  012DF6  0EF5               	movlw	245
 24606  012DF8  24E1               	addwf	fsr1l,w,c
 24607  012DFA  6ED9               	movwf	fsr2l,c
 24608  012DFC  0EFF               	movlw	255
 24609  012DFE  20E2               	addwfc	fsr1h,w,c
 24610  012E00  6EDA               	movwf	fsr2h,c
 24611  012E02  0E00               	movlw	0
 24612  012E04  8EDB               	bsf	plusw2,7,c
 24613  012E06                     l7672:
 24614                           
 24615                           ;stkvar	_prod @ sp[(-13)+0]
 24616  012E06  0EF6               	movlw	246
 24617  012E08  24E1               	addwf	fsr1l,w,c
 24618  012E0A  6ED9               	movwf	fsr2l,c
 24619  012E0C  0EFF               	movlw	255
 24620  012E0E  20E2               	addwfc	fsr1h,w,c
 24621  012E10  6EDA               	movwf	fsr2h,c
 24622                           
 24623                           ;stkvar	_bexp @ sp[(-13)+10]
 24624  012E12  0EFD               	movlw	-3
 24625  012E14  006F FF8C  F00C    	movff	plusw1,btemp+11
 24626  012E1A  90D8               	bcf	status,0,c
 24627  012E1C  300C               	rrcf	(btemp+11)^0,w,c
 24628  012E1E  6EDF               	movwf	indf2,c
 24629  012E20                     l7674:
 24630                           
 24631                           ;stkvar	_sign @ sp[(-13)+12]
 24632  012E20  0EFF               	movlw	-1
 24633  012E22  006F FF8C  F00C    	movff	plusw1,btemp+11
 24634                           
 24635                           ;stkvar	_prod @ sp[(-13)+0]
 24636  012E28  0EF6               	movlw	246
 24637  012E2A  24E1               	addwf	fsr1l,w,c
 24638  012E2C  6ED9               	movwf	fsr2l,c
 24639  012E2E  0EFF               	movlw	255
 24640  012E30  20E2               	addwfc	fsr1h,w,c
 24641  012E32  6EDA               	movwf	fsr2h,c
 24642  012E34  500C               	movf	(btemp+11)^0,w,c
 24643  012E36  12DF               	iorwf	indf2,f,c
 24644                           
 24645                           ;stkvar	_prod @ sp[(-13)+0]
 24646  012E38  0EF3               	movlw	-13
 24647  012E3A  006F FF8C  F001    	movff	plusw1,btemp
 24648  012E40  0EF4               	movlw	-12
 24649  012E42  006F FF8C  F002    	movff	plusw1,btemp+1
 24650  012E48  0EF5               	movlw	-11
 24651  012E4A  006F FF8C  F003    	movff	plusw1,btemp+2
 24652  012E50  0EF6               	movlw	-10
 24653  012E52  006F FF8C  F004    	movff	plusw1,btemp+3
 24654  012E58                     l2851:
 24655                           
 24656                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24657  012E58  0EEB               	movlw	235
 24658  012E5A  26E1               	addwf	fsr1l,f,c
 24659  012E5C  0EFF               	movlw	255
 24660  012E5E  22E2               	addwfc	fsr1h,f,c
 24661  012E60  0012               	return		;funcret
 24662  012E62                     __end_of___flmul:
 24663                           	opt callstack 0
 24664                           
 24665 ;; *************** function _SYSTEM_Initialize *****************
 24666 ;; Defined at:
 24667 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24668 ;; Parameters:    Size  Location     Type
 24669 ;;		None
 24670 ;; Auto vars:     Size  Location     Type
 24671 ;;		None
 24672 ;; Return value:  Size  Location     Type
 24673 ;;                  1  [STACK] void 
 24674 ;; Registers used:
 24675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 24676 ;; Tracked objects:
 24677 ;;		On entry : 0/0
 24678 ;;		On exit  : 3F/3C
 24679 ;;		Unchanged: 0/0
 24680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24685 ;;Total ram usage:        0 bytes
 24686 ;; Hardware stack levels used:    1
 24687 ;; Hardware stack levels required when called:   17
 24688 ;; This function calls:
 24689 ;;		_ADCC_Initialize
 24690 ;;		_CLKREF_Initialize
 24691 ;;		_DMA1_Initialize
 24692 ;;		_DMA2_Initialize
 24693 ;;		_EXT_INT_Initialize
 24694 ;;		_FVR_Initialize
 24695 ;;		_INTERRUPT_Initialize
 24696 ;;		_OSCILLATOR_Initialize
 24697 ;;		_PIN_MANAGER_Initialize
 24698 ;;		_PMD_Initialize
 24699 ;;		_PWM8_Initialize
 24700 ;;		_SPI1_Initialize
 24701 ;;		_TMR2_Initialize
 24702 ;;		_TMR3_Initialize
 24703 ;;		_TMR5_Initialize
 24704 ;;		_TMR6_Initialize
 24705 ;;		_UART1_Initialize
 24706 ;;		_UART2_Initialize
 24707 ;; This function is called by:
 24708 ;;		_main
 24709 ;; This function uses a reentrant model
 24710 ;;
 24711                           
 24712                           	psect	text97
 24713  0190AE                     __ptext97:
 24714                           	opt callstack 0
 24715  0190AE                     _SYSTEM_Initialize:
 24716                           	opt callstack 13
 24717                           
 24718                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 24719                           
 24720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24721                           ;incstack = 0
 24722  0190AE  EC37  F0C6         	call	_INTERRUPT_Initialize	;wreg free
 24723                           
 24724                           ; BSR set to: 57
 24725                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 24726  0190B2  EC60  F0CE         	call	_PMD_Initialize	;wreg free
 24727                           
 24728                           ; BSR set to: 57
 24729                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 24730  0190B6  ECFF  F0C3         	call	_PIN_MANAGER_Initialize	;wreg free
 24731                           
 24732                           ; BSR set to: 58
 24733                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 24734  0190BA  EC55  F0CE         	call	_OSCILLATOR_Initialize	;wreg free
 24735                           
 24736                           ; BSR set to: 57
 24737                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 24738  0190BE  ECC5  F0CE         	call	_FVR_Initialize	;wreg free
 24739                           
 24740                           ; BSR set to: 62
 24741                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 24742  0190C2  ECCC  F0C5         	call	_ADCC_Initialize	;wreg free
 24743                           
 24744                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 24745  0190C6  EC33  F0CE         	call	_TMR2_Initialize	;wreg free
 24746                           
 24747                           ; BSR set to: 57
 24748                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 24749  0190CA  EC4A  F0CE         	call	_PWM8_Initialize	;wreg free
 24750                           
 24751                           ; BSR set to: 63
 24752                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 24753  0190CE  EC9D  F0CA         	call	_EXT_INT_Initialize	;wreg free
 24754                           
 24755                           ; BSR set to: 57
 24756                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 24757  0190D2  EC72  F0CB         	call	_TMR6_Initialize	;wreg free
 24758                           
 24759                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 24760  0190D6  EC2C  F0C9         	call	_TMR3_Initialize	;wreg free
 24761                           
 24762                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 24763  0190DA  EC09  F0C9         	call	_TMR5_Initialize	;wreg free
 24764                           
 24765                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 24766  0190DE  ECE6  F0C8         	call	_UART1_Initialize	;wreg free
 24767                           
 24768                           ; BSR set to: 57
 24769                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 24770  0190E2  ECFE  F0C6         	call	_UART2_Initialize	;wreg free
 24771                           
 24772                           ; BSR set to: 57
 24773                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 24774  0190E6  EC3F  F0CE         	call	_SPI1_Initialize	;wreg free
 24775                           
 24776                           ; BSR set to: 61
 24777                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 24778  0190EA  EC5A  F0C7         	call	_DMA2_Initialize	;wreg free
 24779                           
 24780                           ; BSR set to: 59
 24781                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 24782  0190EE  EC97  F0C5         	call	_DMA1_Initialize	;wreg free
 24783                           
 24784                           ; BSR set to: 59
 24785                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 24786  0190F2  EC99  F0CE         	call	_CLKREF_Initialize	;wreg free
 24787                           
 24788                           ; BSR set to: 60
 24789                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24790  0190F6  0012               	return		;funcret
 24791  0190F8                     __end_of_SYSTEM_Initialize:
 24792                           	opt callstack 0
 24793                           
 24794 ;; *************** function _UART2_Initialize *****************
 24795 ;; Defined at:
 24796 ;;		line 78 in file "mcc_generated_files/uart2.c"
 24797 ;; Parameters:    Size  Location     Type
 24798 ;;		None
 24799 ;; Auto vars:     Size  Location     Type
 24800 ;;		None
 24801 ;; Return value:  Size  Location     Type
 24802 ;;                  1  [STACK] void 
 24803 ;; Registers used:
 24804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24805 ;; Tracked objects:
 24806 ;;		On entry : 3F/39
 24807 ;;		On exit  : 3F/39
 24808 ;;		Unchanged: 0/0
 24809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24814 ;;Total ram usage:        0 bytes
 24815 ;; Hardware stack levels used:    1
 24816 ;; Hardware stack levels required when called:   16
 24817 ;; This function calls:
 24818 ;;		_UART2_SetRxInterruptHandler
 24819 ;;		_UART2_SetTxInterruptHandler
 24820 ;; This function is called by:
 24821 ;;		_SYSTEM_Initialize
 24822 ;; This function uses a reentrant model
 24823 ;;
 24824                           
 24825                           	psect	text98
 24826  018DFC                     __ptext98:
 24827                           	opt callstack 0
 24828  018DFC                     _UART2_Initialize:
 24829                           	opt callstack 13
 24830                           
 24831                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 24832                           
 24833                           ; BSR set to: 60
 24834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24835                           ;incstack = 0
 24836  018DFC  0139               	movlb	57	; () banked
 24837  018DFE  9596               	bcf	150,2,b	;volatile
 24838                           
 24839                           ; BSR set to: 57
 24840                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 24841  018E00  0EDE               	movlw	low _UART2_Receive_ISR
 24842  018E02  6EE6               	movwf	postinc1,c
 24843  018E04  0E9B               	movlw	high _UART2_Receive_ISR
 24844  018E06  6EE6               	movwf	postinc1,c
 24845  018E08  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 24846  018E0A  6EE6               	movwf	postinc1,c
 24847  018E0C  ECFF  F0CB         	call	_UART2_SetRxInterruptHandler	;wreg free
 24848                           
 24849                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 24850  018E10  0139               	movlb	57	; () banked
 24851  018E12  9796               	bcf	150,3,b	;volatile
 24852                           
 24853                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 24854  018E14  0EB8               	movlw	low _UART2_Transmit_ISR
 24855  018E16  6EE6               	movwf	postinc1,c
 24856  018E18  0E96               	movlw	high _UART2_Transmit_ISR
 24857  018E1A  6EE6               	movwf	postinc1,c
 24858  018E1C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 24859  018E1E  6EE6               	movwf	postinc1,c
 24860  018E20  ECEB  F0CB         	call	_UART2_SetTxInterruptHandler	;wreg free
 24861                           
 24862                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 24863  018E24  013D               	movlb	61	; () banked
 24864  018E26  6BD4               	clrf	212,b	;volatile
 24865                           
 24866                           ; BSR set to: 61
 24867                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 24868  018E28  6BD6               	clrf	214,b	;volatile
 24869                           
 24870                           ; BSR set to: 61
 24871                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 24872  018E2A  6BD8               	clrf	216,b	;volatile
 24873                           
 24874                           ; BSR set to: 61
 24875                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 24876  018E2C  0EB0               	movlw	176
 24877  018E2E  6FDA               	movwf	218,b	;volatile
 24878                           
 24879                           ; BSR set to: 61
 24880                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 24881  018E30  0E80               	movlw	128
 24882  018E32  6FDB               	movwf	219,b	;volatile
 24883                           
 24884                           ; BSR set to: 61
 24885                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 24886  018E34  6BDC               	clrf	220,b	;volatile
 24887                           
 24888                           ; BSR set to: 61
 24889                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 24890  018E36  0E82               	movlw	130
 24891  018E38  6FDD               	movwf	221,b	;volatile
 24892                           
 24893                           ; BSR set to: 61
 24894                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 24895  018E3A  0E06               	movlw	6
 24896  018E3C  6FDE               	movwf	222,b	;volatile
 24897                           
 24898                           ; BSR set to: 61
 24899                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 24900  018E3E  6BDF               	clrf	223,b	;volatile
 24901                           
 24902                           ; BSR set to: 61
 24903                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 24904  018E40  6BE0               	clrf	224,b	;volatile
 24905                           
 24906                           ; BSR set to: 61
 24907                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 24908  018E42  6BE1               	clrf	225,b	;volatile
 24909                           
 24910                           ; BSR set to: 61
 24911                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 24912  018E44  6BE2               	clrf	226,b	;volatile
 24913                           
 24914                           ; BSR set to: 61
 24915                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 24916  018E46  6A34               	clrf	_uart2TxHead^0,c	;volatile
 24917                           
 24918                           ; BSR set to: 61
 24919                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 24920  018E48  6A33               	clrf	_uart2TxTail^0,c	;volatile
 24921                           
 24922                           ; BSR set to: 61
 24923                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 24924  018E4A  0E40               	movlw	64
 24925  018E4C  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 24926                           
 24927                           ; BSR set to: 61
 24928                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 24929  018E4E  6A31               	clrf	_uart2RxHead^0,c	;volatile
 24930                           
 24931                           ; BSR set to: 61
 24932                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 24933  018E50  6A30               	clrf	_uart2RxTail^0,c	;volatile
 24934                           
 24935                           ; BSR set to: 61
 24936                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 24937  018E52  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 24938                           
 24939                           ; BSR set to: 61
 24940                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 24941  018E54  0139               	movlb	57	; () banked
 24942  018E56  8596               	bsf	150,2,b	;volatile
 24943                           
 24944                           ; BSR set to: 57
 24945                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24946  018E58  0012               	return		;funcret
 24947  018E5A                     __end_of_UART2_Initialize:
 24948                           	opt callstack 0
 24949                           
 24950 ;; *************** function _UART2_SetTxInterruptHandler *****************
 24951 ;; Defined at:
 24952 ;;		line 252 in file "mcc_generated_files/uart2.c"
 24953 ;; Parameters:    Size  Location     Type
 24954 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24955 ;;		 -> UART2_Transmit_ISR(1), 
 24956 ;; Auto vars:     Size  Location     Type
 24957 ;;		None
 24958 ;; Return value:  Size  Location     Type
 24959 ;;                  1  [STACK] void 
 24960 ;; Registers used:
 24961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24962 ;; Tracked objects:
 24963 ;;		On entry : 3F/39
 24964 ;;		On exit  : 0/0
 24965 ;;		Unchanged: 0/0
 24966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24971 ;;Total ram usage:        0 bytes
 24972 ;; Hardware stack levels used:    1
 24973 ;; Hardware stack levels required when called:   15
 24974 ;; This function calls:
 24975 ;;		Nothing
 24976 ;; This function is called by:
 24977 ;;		_UART2_Initialize
 24978 ;; This function uses a reentrant model
 24979 ;;
 24980                           
 24981                           	psect	text99
 24982  0197D6                     __ptext99:
 24983                           	opt callstack 0
 24984  0197D6                     _UART2_SetTxInterruptHandler:
 24985                           	opt callstack 13
 24986                           
 24987                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 24988                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24989                           
 24990                           ; BSR set to: 57
 24991                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24992                           ;incstack = 0
 24993  0197D6  50E1               	movf	fsr1l,w,c
 24994  0197D8  0FFD               	addlw	-3
 24995  0197DA  6ED9               	movwf	fsr2l,c
 24996  0197DC  50E2               	movf	fsr1h,w,c
 24997  0197DE  6EDA               	movwf	fsr2h,c
 24998  0197E0  0EFF               	movlw	255
 24999  0197E2  22DA               	addwfc	fsr2h,f,c
 25000  0197E4  006F FF78  F0BB    	movff	postinc2,_UART2_TxInterruptHandler
 25001  0197EA  006F FF78  F0BC    	movff	postinc2,_UART2_TxInterruptHandler+1
 25002  0197F0  006F FF74  F0BD    	movff	postdec2,_UART2_TxInterruptHandler+2
 25003                           
 25004                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25005  0197F6  52E5               	movf	postdec1,f,c
 25006  0197F8  52E5               	movf	postdec1,f,c
 25007  0197FA  52E5               	movf	postdec1,f,c
 25008  0197FC  0012               	return		;funcret
 25009  0197FE                     __end_of_UART2_SetTxInterruptHandler:
 25010                           	opt callstack 0
 25011                           
 25012 ;; *************** function _UART2_SetRxInterruptHandler *****************
 25013 ;; Defined at:
 25014 ;;		line 248 in file "mcc_generated_files/uart2.c"
 25015 ;; Parameters:    Size  Location     Type
 25016 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25017 ;;		 -> UART2_Receive_ISR(1), 
 25018 ;; Auto vars:     Size  Location     Type
 25019 ;;		None
 25020 ;; Return value:  Size  Location     Type
 25021 ;;                  1  [STACK] void 
 25022 ;; Registers used:
 25023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25024 ;; Tracked objects:
 25025 ;;		On entry : 3F/39
 25026 ;;		On exit  : 0/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25033 ;;Total ram usage:        0 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; Hardware stack levels required when called:   15
 25036 ;; This function calls:
 25037 ;;		Nothing
 25038 ;; This function is called by:
 25039 ;;		_UART2_Initialize
 25040 ;; This function uses a reentrant model
 25041 ;;
 25042                           
 25043                           	psect	text100
 25044  0197FE                     __ptext100:
 25045                           	opt callstack 0
 25046  0197FE                     _UART2_SetRxInterruptHandler:
 25047                           	opt callstack 13
 25048                           
 25049                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 25050                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25051                           
 25052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25053                           ;incstack = 0
 25054  0197FE  50E1               	movf	fsr1l,w,c
 25055  019800  0FFD               	addlw	-3
 25056  019802  6ED9               	movwf	fsr2l,c
 25057  019804  50E2               	movf	fsr1h,w,c
 25058  019806  6EDA               	movwf	fsr2h,c
 25059  019808  0EFF               	movlw	255
 25060  01980A  22DA               	addwfc	fsr2h,f,c
 25061  01980C  006F FF78  F0BE    	movff	postinc2,_UART2_RxInterruptHandler
 25062  019812  006F FF78  F0BF    	movff	postinc2,_UART2_RxInterruptHandler+1
 25063  019818  006F FF74  F0C0    	movff	postdec2,_UART2_RxInterruptHandler+2
 25064                           
 25065                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25066  01981E  52E5               	movf	postdec1,f,c
 25067  019820  52E5               	movf	postdec1,f,c
 25068  019822  52E5               	movf	postdec1,f,c
 25069  019824  0012               	return		;funcret
 25070  019826                     __end_of_UART2_SetRxInterruptHandler:
 25071                           	opt callstack 0
 25072                           
 25073 ;; *************** function _UART1_Initialize *****************
 25074 ;; Defined at:
 25075 ;;		line 75 in file "mcc_generated_files/uart1.c"
 25076 ;; Parameters:    Size  Location     Type
 25077 ;;		None
 25078 ;; Auto vars:     Size  Location     Type
 25079 ;;		None
 25080 ;; Return value:  Size  Location     Type
 25081 ;;                  1  [STACK] void 
 25082 ;; Registers used:
 25083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25084 ;; Tracked objects:
 25085 ;;		On entry : 0/39
 25086 ;;		On exit  : 3F/39
 25087 ;;		Unchanged: 0/0
 25088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25093 ;;Total ram usage:        0 bytes
 25094 ;; Hardware stack levels used:    1
 25095 ;; Hardware stack levels required when called:   16
 25096 ;; This function calls:
 25097 ;;		_UART1_SetRxInterruptHandler
 25098 ;; This function is called by:
 25099 ;;		_SYSTEM_Initialize
 25100 ;; This function uses a reentrant model
 25101 ;;
 25102                           
 25103                           	psect	text101
 25104  0191CC                     __ptext101:
 25105                           	opt callstack 0
 25106  0191CC                     _UART1_Initialize:
 25107                           	opt callstack 13
 25108                           
 25109                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 25110                           
 25111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25112                           ;incstack = 0
 25113  0191CC  0139               	movlb	57	; () banked
 25114  0191CE  9793               	bcf	147,3,b	;volatile
 25115                           
 25116                           ; BSR set to: 57
 25117                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 25118  0191D0  0E46               	movlw	low _UART1_Receive_ISR
 25119  0191D2  6EE6               	movwf	postinc1,c
 25120  0191D4  0E9B               	movlw	high _UART1_Receive_ISR
 25121  0191D6  6EE6               	movwf	postinc1,c
 25122  0191D8  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 25123  0191DA  6EE6               	movwf	postinc1,c
 25124  0191DC  EC13  F0CC         	call	_UART1_SetRxInterruptHandler	;wreg free
 25125                           
 25126                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 25127  0191E0  013D               	movlb	61	; () banked
 25128  0191E2  6BEC               	clrf	236,b	;volatile
 25129                           
 25130                           ; BSR set to: 61
 25131                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 25132  0191E4  6BED               	clrf	237,b	;volatile
 25133                           
 25134                           ; BSR set to: 61
 25135                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 25136  0191E6  6BEE               	clrf	238,b	;volatile
 25137                           
 25138                           ; BSR set to: 61
 25139                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 25140  0191E8  6BEF               	clrf	239,b	;volatile
 25141                           
 25142                           ; BSR set to: 61
 25143                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 25144  0191EA  6BF0               	clrf	240,b	;volatile
 25145                           
 25146                           ; BSR set to: 61
 25147                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 25148  0191EC  6BF1               	clrf	241,b	;volatile
 25149                           
 25150                           ; BSR set to: 61
 25151                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 25152  0191EE  0EB0               	movlw	176
 25153  0191F0  6FF2               	movwf	242,b	;volatile
 25154                           
 25155                           ; BSR set to: 61
 25156                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 25157  0191F2  0E80               	movlw	128
 25158  0191F4  6FF3               	movwf	243,b	;volatile
 25159                           
 25160                           ; BSR set to: 61
 25161                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 25162  0191F6  6BF4               	clrf	244,b	;volatile
 25163                           
 25164                           ; BSR set to: 61
 25165                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 25166  0191F8  0E8A               	movlw	138
 25167  0191FA  6FF5               	movwf	245,b	;volatile
 25168                           
 25169                           ; BSR set to: 61
 25170                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 25171  0191FC  6BF6               	clrf	246,b	;volatile
 25172                           
 25173                           ; BSR set to: 61
 25174                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 25175  0191FE  6BF7               	clrf	247,b	;volatile
 25176                           
 25177                           ; BSR set to: 61
 25178                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 25179  019200  6BF8               	clrf	248,b	;volatile
 25180                           
 25181                           ; BSR set to: 61
 25182                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 25183  019202  6BF9               	clrf	249,b	;volatile
 25184                           
 25185                           ; BSR set to: 61
 25186                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 25187  019204  6BFA               	clrf	250,b	;volatile
 25188                           
 25189                           ; BSR set to: 61
 25190                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 25191  019206  6A37               	clrf	_uart1RxHead^0,c	;volatile
 25192                           
 25193                           ; BSR set to: 61
 25194                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 25195  019208  6A36               	clrf	_uart1RxTail^0,c	;volatile
 25196                           
 25197                           ; BSR set to: 61
 25198                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 25199  01920A  6A35               	clrf	_uart1RxCount^0,c	;volatile
 25200                           
 25201                           ; BSR set to: 61
 25202                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 25203  01920C  0139               	movlb	57	; () banked
 25204  01920E  8793               	bsf	147,3,b	;volatile
 25205                           
 25206                           ; BSR set to: 57
 25207                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 25208  019210  0012               	return		;funcret
 25209  019212                     __end_of_UART1_Initialize:
 25210                           	opt callstack 0
 25211                           
 25212 ;; *************** function _UART1_SetRxInterruptHandler *****************
 25213 ;; Defined at:
 25214 ;;		line 207 in file "mcc_generated_files/uart1.c"
 25215 ;; Parameters:    Size  Location     Type
 25216 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25217 ;;		 -> UART1_Receive_ISR(1), 
 25218 ;; Auto vars:     Size  Location     Type
 25219 ;;		None
 25220 ;; Return value:  Size  Location     Type
 25221 ;;                  1  [STACK] void 
 25222 ;; Registers used:
 25223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25224 ;; Tracked objects:
 25225 ;;		On entry : 3F/39
 25226 ;;		On exit  : 0/0
 25227 ;;		Unchanged: 0/0
 25228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;Total ram usage:        0 bytes
 25234 ;; Hardware stack levels used:    1
 25235 ;; Hardware stack levels required when called:   15
 25236 ;; This function calls:
 25237 ;;		Nothing
 25238 ;; This function is called by:
 25239 ;;		_UART1_Initialize
 25240 ;; This function uses a reentrant model
 25241 ;;
 25242                           
 25243                           	psect	text102
 25244  019826                     __ptext102:
 25245                           	opt callstack 0
 25246  019826                     _UART1_SetRxInterruptHandler:
 25247                           	opt callstack 13
 25248                           
 25249                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 25250                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25251                           
 25252                           ; BSR set to: 57
 25253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25254                           ;incstack = 0
 25255  019826  50E1               	movf	fsr1l,w,c
 25256  019828  0FFD               	addlw	-3
 25257  01982A  6ED9               	movwf	fsr2l,c
 25258  01982C  50E2               	movf	fsr1h,w,c
 25259  01982E  6EDA               	movwf	fsr2h,c
 25260  019830  0EFF               	movlw	255
 25261  019832  22DA               	addwfc	fsr2h,f,c
 25262  019834  006F FF78  F0B8    	movff	postinc2,_UART1_RxInterruptHandler
 25263  01983A  006F FF78  F0B9    	movff	postinc2,_UART1_RxInterruptHandler+1
 25264  019840  006F FF74  F0BA    	movff	postdec2,_UART1_RxInterruptHandler+2
 25265                           
 25266                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25267  019846  52E5               	movf	postdec1,f,c
 25268  019848  52E5               	movf	postdec1,f,c
 25269  01984A  52E5               	movf	postdec1,f,c
 25270  01984C  0012               	return		;funcret
 25271  01984E                     __end_of_UART1_SetRxInterruptHandler:
 25272                           	opt callstack 0
 25273                           
 25274 ;; *************** function _TMR6_Initialize *****************
 25275 ;; Defined at:
 25276 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 25277 ;; Parameters:    Size  Location     Type
 25278 ;;		None
 25279 ;; Auto vars:     Size  Location     Type
 25280 ;;		None
 25281 ;; Return value:  Size  Location     Type
 25282 ;;                  1  [STACK] void 
 25283 ;; Registers used:
 25284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25285 ;; Tracked objects:
 25286 ;;		On entry : 3F/39
 25287 ;;		On exit  : 0/0
 25288 ;;		Unchanged: 0/0
 25289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25294 ;;Total ram usage:        0 bytes
 25295 ;; Hardware stack levels used:    1
 25296 ;; Hardware stack levels required when called:   16
 25297 ;; This function calls:
 25298 ;;		_TMR6_SetInterruptHandler
 25299 ;; This function is called by:
 25300 ;;		_SYSTEM_Initialize
 25301 ;; This function uses a reentrant model
 25302 ;;
 25303                           
 25304                           	psect	text103
 25305  0196E4                     __ptext103:
 25306                           	opt callstack 0
 25307  0196E4                     _TMR6_Initialize:
 25308                           	opt callstack 13
 25309                           
 25310                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 25311                           
 25312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25313                           ;incstack = 0
 25314  0196E4  0E01               	movlw	1
 25315  0196E6  6E96               	movwf	150,c	;volatile
 25316                           
 25317                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 25318  0196E8  6A95               	clrf	149,c	;volatile
 25319                           
 25320                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 25321  0196EA  6A97               	clrf	151,c	;volatile
 25322                           
 25323                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 25324  0196EC  0E7C               	movlw	124
 25325  0196EE  6E93               	movwf	147,c	;volatile
 25326                           
 25327                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 25328  0196F0  6A92               	clrf	146,c	;volatile
 25329                           
 25330                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 25331  0196F2  0139               	movlb	57	; () banked
 25332  0196F4  91A9               	bcf	169,0,b	;volatile
 25333                           
 25334                           ; BSR set to: 57
 25335                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 25336  0196F6  8199               	bsf	153,0,b	;volatile
 25337                           
 25338                           ; BSR set to: 57
 25339                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 25340  0196F8  0E60               	movlw	low _TMR6_DefaultInterruptHandler
 25341  0196FA  6EE6               	movwf	postinc1,c
 25342  0196FC  0E90               	movlw	high _TMR6_DefaultInterruptHandler
 25343  0196FE  6EE6               	movwf	postinc1,c
 25344  019700  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 25345  019702  6EE6               	movwf	postinc1,c
 25346  019704  EC27  F0CC         	call	_TMR6_SetInterruptHandler	;wreg free
 25347                           
 25348                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 25349  019708  0EE0               	movlw	224
 25350  01970A  6E94               	movwf	148,c	;volatile
 25351                           
 25352                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25353  01970C  0012               	return		;funcret
 25354  01970E                     __end_of_TMR6_Initialize:
 25355                           	opt callstack 0
 25356                           
 25357 ;; *************** function _TMR6_SetInterruptHandler *****************
 25358 ;; Defined at:
 25359 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 25360 ;; Parameters:    Size  Location     Type
 25361 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25362 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 25363 ;; Auto vars:     Size  Location     Type
 25364 ;;		None
 25365 ;; Return value:  Size  Location     Type
 25366 ;;                  1  [STACK] void 
 25367 ;; Registers used:
 25368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25369 ;; Tracked objects:
 25370 ;;		On entry : 3F/39
 25371 ;;		On exit  : 0/0
 25372 ;;		Unchanged: 0/0
 25373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25378 ;;Total ram usage:        0 bytes
 25379 ;; Hardware stack levels used:    1
 25380 ;; Hardware stack levels required when called:   15
 25381 ;; This function calls:
 25382 ;;		Nothing
 25383 ;; This function is called by:
 25384 ;;		_TMR6_Initialize
 25385 ;; This function uses a reentrant model
 25386 ;;
 25387                           
 25388                           	psect	text104
 25389  01984E                     __ptext104:
 25390                           	opt callstack 0
 25391  01984E                     _TMR6_SetInterruptHandler:
 25392                           	opt callstack 13
 25393                           
 25394                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 25395                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25396                           
 25397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25398                           ;incstack = 0
 25399  01984E  50E1               	movf	fsr1l,w,c
 25400  019850  0FFD               	addlw	-3
 25401  019852  6ED9               	movwf	fsr2l,c
 25402  019854  50E2               	movf	fsr1h,w,c
 25403  019856  6EDA               	movwf	fsr2h,c
 25404  019858  0EFF               	movlw	255
 25405  01985A  22DA               	addwfc	fsr2h,f,c
 25406  01985C  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 25407  019862  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 25408  019868  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 25409                           
 25410                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25411  01986E  52E5               	movf	postdec1,f,c
 25412  019870  52E5               	movf	postdec1,f,c
 25413  019872  52E5               	movf	postdec1,f,c
 25414  019874  0012               	return		;funcret
 25415  019876                     __end_of_TMR6_SetInterruptHandler:
 25416                           	opt callstack 0
 25417                           
 25418 ;; *************** function _TMR5_Initialize *****************
 25419 ;; Defined at:
 25420 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;		None
 25423 ;; Auto vars:     Size  Location     Type
 25424 ;;		None
 25425 ;; Return value:  Size  Location     Type
 25426 ;;                  1  [STACK] void 
 25427 ;; Registers used:
 25428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 25429 ;; Tracked objects:
 25430 ;;		On entry : 0/39
 25431 ;;		On exit  : 0/0
 25432 ;;		Unchanged: 0/0
 25433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25438 ;;Total ram usage:        0 bytes
 25439 ;; Hardware stack levels used:    1
 25440 ;; Hardware stack levels required when called:   16
 25441 ;; This function calls:
 25442 ;;		_TMR5_SetInterruptHandler
 25443 ;; This function is called by:
 25444 ;;		_SYSTEM_Initialize
 25445 ;; This function uses a reentrant model
 25446 ;;
 25447                           
 25448                           	psect	text105
 25449  019212                     __ptext105:
 25450                           	opt callstack 0
 25451  019212                     _TMR5_Initialize:
 25452                           	opt callstack 13
 25453                           
 25454                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 25455                           
 25456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25457                           ;incstack = 0
 25458  019212  6A9B               	clrf	155,c	;volatile
 25459                           
 25460                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 25461  019214  6A9C               	clrf	156,c	;volatile
 25462                           
 25463                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 25464  019216  0E01               	movlw	1
 25465  019218  6E9D               	movwf	157,c	;volatile
 25466                           
 25467                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 25468  01921A  0E63               	movlw	99
 25469  01921C  6E99               	movwf	153,c	;volatile
 25470                           
 25471                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 25472  01921E  0EC0               	movlw	192
 25473  019220  6E98               	movwf	152,c	;volatile
 25474                           
 25475                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 25476  019222  5098               	movf	152,w,c	;volatile
 25477  019224  006F FE64  F001    	movff	16281,btemp	;volatile
 25478  01922A  6A02               	clrf	(btemp+1)^0,c
 25479  01922C  0060  F004  F002   	movff	btemp,btemp+1
 25480  019232  6A01               	clrf	btemp^0,c
 25481  019234  1001               	iorwf	btemp^0,w,c
 25482  019236  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 25483  019238  5002               	movf	(btemp+1)^0,w,c
 25484  01923A  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 25485                           
 25486                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 25487  01923C  0139               	movlb	57	; () banked
 25488  01923E  9DA8               	bcf	168,6,b	;volatile
 25489                           
 25490                           ; BSR set to: 57
 25491                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 25492  019240  8D98               	bsf	152,6,b	;volatile
 25493                           
 25494                           ; BSR set to: 57
 25495                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 25496  019242  0E66               	movlw	low _TMR5_DefaultInterruptHandler
 25497  019244  6EE6               	movwf	postinc1,c
 25498  019246  0E99               	movlw	high _TMR5_DefaultInterruptHandler
 25499  019248  6EE6               	movwf	postinc1,c
 25500  01924A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 25501  01924C  6EE6               	movwf	postinc1,c
 25502  01924E  EC3B  F0CC         	call	_TMR5_SetInterruptHandler	;wreg free
 25503                           
 25504                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 25505  019252  0E31               	movlw	49
 25506  019254  6E9A               	movwf	154,c	;volatile
 25507                           
 25508                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25509  019256  0012               	return		;funcret
 25510  019258                     __end_of_TMR5_Initialize:
 25511                           	opt callstack 0
 25512                           
 25513 ;; *************** function _TMR5_SetInterruptHandler *****************
 25514 ;; Defined at:
 25515 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 25516 ;; Parameters:    Size  Location     Type
 25517 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25518 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 25519 ;; Auto vars:     Size  Location     Type
 25520 ;;		None
 25521 ;; Return value:  Size  Location     Type
 25522 ;;                  1  [STACK] void 
 25523 ;; Registers used:
 25524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25525 ;; Tracked objects:
 25526 ;;		On entry : 3F/39
 25527 ;;		On exit  : 0/0
 25528 ;;		Unchanged: 0/0
 25529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25534 ;;Total ram usage:        0 bytes
 25535 ;; Hardware stack levels used:    1
 25536 ;; Hardware stack levels required when called:   15
 25537 ;; This function calls:
 25538 ;;		Nothing
 25539 ;; This function is called by:
 25540 ;;		_TMR5_Initialize
 25541 ;; This function uses a reentrant model
 25542 ;;
 25543                           
 25544                           	psect	text106
 25545  019876                     __ptext106:
 25546                           	opt callstack 0
 25547  019876                     _TMR5_SetInterruptHandler:
 25548                           	opt callstack 13
 25549                           
 25550                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 25551                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25552                           
 25553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25554                           ;incstack = 0
 25555  019876  50E1               	movf	fsr1l,w,c
 25556  019878  0FFD               	addlw	-3
 25557  01987A  6ED9               	movwf	fsr2l,c
 25558  01987C  50E2               	movf	fsr1h,w,c
 25559  01987E  6EDA               	movwf	fsr2h,c
 25560  019880  0EFF               	movlw	255
 25561  019882  22DA               	addwfc	fsr2h,f,c
 25562  019884  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 25563  01988A  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 25564  019890  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 25565                           
 25566                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25567  019896  52E5               	movf	postdec1,f,c
 25568  019898  52E5               	movf	postdec1,f,c
 25569  01989A  52E5               	movf	postdec1,f,c
 25570  01989C  0012               	return		;funcret
 25571  01989E                     __end_of_TMR5_SetInterruptHandler:
 25572                           	opt callstack 0
 25573                           
 25574 ;; *************** function _TMR3_Initialize *****************
 25575 ;; Defined at:
 25576 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 25577 ;; Parameters:    Size  Location     Type
 25578 ;;		None
 25579 ;; Auto vars:     Size  Location     Type
 25580 ;;		None
 25581 ;; Return value:  Size  Location     Type
 25582 ;;                  1  [STACK] void 
 25583 ;; Registers used:
 25584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 25585 ;; Tracked objects:
 25586 ;;		On entry : 0/39
 25587 ;;		On exit  : 0/0
 25588 ;;		Unchanged: 0/0
 25589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25594 ;;Total ram usage:        0 bytes
 25595 ;; Hardware stack levels used:    1
 25596 ;; Hardware stack levels required when called:   16
 25597 ;; This function calls:
 25598 ;;		_TMR3_SetInterruptHandler
 25599 ;; This function is called by:
 25600 ;;		_SYSTEM_Initialize
 25601 ;; This function uses a reentrant model
 25602 ;;
 25603                           
 25604                           	psect	text107
 25605  019258                     __ptext107:
 25606                           	opt callstack 0
 25607  019258                     _TMR3_Initialize:
 25608                           	opt callstack 13
 25609                           
 25610                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 25611                           
 25612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25613                           ;incstack = 0
 25614  019258  6AA7               	clrf	167,c	;volatile
 25615                           
 25616                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 25617  01925A  6AA8               	clrf	168,c	;volatile
 25618                           
 25619                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 25620  01925C  0E01               	movlw	1
 25621  01925E  6EA9               	movwf	169,c	;volatile
 25622                           
 25623                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 25624  019260  0E3C               	movlw	60
 25625  019262  6EA5               	movwf	165,c	;volatile
 25626                           
 25627                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 25628  019264  0EB0               	movlw	176
 25629  019266  6EA4               	movwf	164,c	;volatile
 25630                           
 25631                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 25632  019268  50A4               	movf	164,w,c	;volatile
 25633  01926A  006F FE94  F001    	movff	16293,btemp	;volatile
 25634  019270  6A02               	clrf	(btemp+1)^0,c
 25635  019272  0060  F004  F002   	movff	btemp,btemp+1
 25636  019278  6A01               	clrf	btemp^0,c
 25637  01927A  1001               	iorwf	btemp^0,w,c
 25638  01927C  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 25639  01927E  5002               	movf	(btemp+1)^0,w,c
 25640  019280  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 25641                           
 25642                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 25643  019282  0139               	movlb	57	; () banked
 25644  019284  9DA6               	bcf	166,6,b	;volatile
 25645                           
 25646                           ; BSR set to: 57
 25647                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 25648  019286  8D96               	bsf	150,6,b	;volatile
 25649                           
 25650                           ; BSR set to: 57
 25651                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 25652  019288  0EB4               	movlw	low _TMR3_DefaultInterruptHandler
 25653  01928A  6EE6               	movwf	postinc1,c
 25654  01928C  0E9D               	movlw	high _TMR3_DefaultInterruptHandler
 25655  01928E  6EE6               	movwf	postinc1,c
 25656  019290  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 25657  019292  6EE6               	movwf	postinc1,c
 25658  019294  EC4F  F0CC         	call	_TMR3_SetInterruptHandler	;wreg free
 25659                           
 25660                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 25661  019298  0E31               	movlw	49
 25662  01929A  6EA6               	movwf	166,c	;volatile
 25663                           
 25664                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25665  01929C  0012               	return		;funcret
 25666  01929E                     __end_of_TMR3_Initialize:
 25667                           	opt callstack 0
 25668                           
 25669 ;; *************** function _TMR3_SetInterruptHandler *****************
 25670 ;; Defined at:
 25671 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 25672 ;; Parameters:    Size  Location     Type
 25673 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25674 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 25675 ;; Auto vars:     Size  Location     Type
 25676 ;;		None
 25677 ;; Return value:  Size  Location     Type
 25678 ;;                  1  [STACK] void 
 25679 ;; Registers used:
 25680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25681 ;; Tracked objects:
 25682 ;;		On entry : 0/1
 25683 ;;		On exit  : 0/0
 25684 ;;		Unchanged: 0/0
 25685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25690 ;;Total ram usage:        0 bytes
 25691 ;; Hardware stack levels used:    1
 25692 ;; Hardware stack levels required when called:   15
 25693 ;; This function calls:
 25694 ;;		Nothing
 25695 ;; This function is called by:
 25696 ;;		_TMR3_Initialize
 25697 ;;		_init_bsoc
 25698 ;; This function uses a reentrant model
 25699 ;;
 25700                           
 25701                           	psect	text108
 25702  01989E                     __ptext108:
 25703                           	opt callstack 0
 25704  01989E                     _TMR3_SetInterruptHandler:
 25705                           	opt callstack 14
 25706                           
 25707                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 25708                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25709                           
 25710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25711                           ;incstack = 0
 25712  01989E  50E1               	movf	fsr1l,w,c
 25713  0198A0  0FFD               	addlw	-3
 25714  0198A2  6ED9               	movwf	fsr2l,c
 25715  0198A4  50E2               	movf	fsr1h,w,c
 25716  0198A6  6EDA               	movwf	fsr2h,c
 25717  0198A8  0EFF               	movlw	255
 25718  0198AA  22DA               	addwfc	fsr2h,f,c
 25719  0198AC  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 25720  0198B2  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 25721  0198B8  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 25722                           
 25723                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25724  0198BE  52E5               	movf	postdec1,f,c
 25725  0198C0  52E5               	movf	postdec1,f,c
 25726  0198C2  52E5               	movf	postdec1,f,c
 25727  0198C4  0012               	return		;funcret
 25728  0198C6                     __end_of_TMR3_SetInterruptHandler:
 25729                           	opt callstack 0
 25730                           
 25731 ;; *************** function _TMR2_Initialize *****************
 25732 ;; Defined at:
 25733 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 25734 ;; Parameters:    Size  Location     Type
 25735 ;;		None
 25736 ;; Auto vars:     Size  Location     Type
 25737 ;;		None
 25738 ;; Return value:  Size  Location     Type
 25739 ;;                  1  [STACK] void 
 25740 ;; Registers used:
 25741 ;;		wreg, status,2
 25742 ;; Tracked objects:
 25743 ;;		On entry : 0/3E
 25744 ;;		On exit  : 3F/39
 25745 ;;		Unchanged: 0/0
 25746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25751 ;;Total ram usage:        0 bytes
 25752 ;; Hardware stack levels used:    1
 25753 ;; Hardware stack levels required when called:   15
 25754 ;; This function calls:
 25755 ;;		Nothing
 25756 ;; This function is called by:
 25757 ;;		_SYSTEM_Initialize
 25758 ;; This function uses a reentrant model
 25759 ;;
 25760                           
 25761                           	psect	text109
 25762  019C66                     __ptext109:
 25763                           	opt callstack 0
 25764  019C66                     _TMR2_Initialize:
 25765                           	opt callstack 14
 25766                           
 25767                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 25768                           
 25769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25770                           ;incstack = 0
 25771  019C66  0E01               	movlw	1
 25772  019C68  6EAE               	movwf	174,c	;volatile
 25773                           
 25774                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 25775  019C6A  6AAD               	clrf	173,c	;volatile
 25776                           
 25777                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 25778  019C6C  6AAF               	clrf	175,c	;volatile
 25779                           
 25780                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 25781  019C6E  0E63               	movlw	99
 25782  019C70  6EAB               	movwf	171,c	;volatile
 25783                           
 25784                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 25785  019C72  6AAA               	clrf	170,c	;volatile
 25786                           
 25787                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 25788  019C74  0139               	movlb	57	; () banked
 25789  019C76  95A4               	bcf	164,2,b	;volatile
 25790                           
 25791                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 25792  019C78  0EC0               	movlw	192
 25793  019C7A  6EAC               	movwf	172,c	;volatile
 25794                           
 25795                           ; BSR set to: 57
 25796                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25797  019C7C  0012               	return		;funcret
 25798  019C7E                     __end_of_TMR2_Initialize:
 25799                           	opt callstack 0
 25800                           
 25801 ;; *************** function _SPI1_Initialize *****************
 25802 ;; Defined at:
 25803 ;;		line 64 in file "mcc_generated_files/spi1.c"
 25804 ;; Parameters:    Size  Location     Type
 25805 ;;		None
 25806 ;; Auto vars:     Size  Location     Type
 25807 ;;		None
 25808 ;; Return value:  Size  Location     Type
 25809 ;;                  1  [STACK] void 
 25810 ;; Registers used:
 25811 ;;		wreg, status,2
 25812 ;; Tracked objects:
 25813 ;;		On entry : 3F/39
 25814 ;;		On exit  : 3F/3D
 25815 ;;		Unchanged: 0/0
 25816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25821 ;;Total ram usage:        0 bytes
 25822 ;; Hardware stack levels used:    1
 25823 ;; Hardware stack levels required when called:   15
 25824 ;; This function calls:
 25825 ;;		Nothing
 25826 ;; This function is called by:
 25827 ;;		_SYSTEM_Initialize
 25828 ;; This function uses a reentrant model
 25829 ;;
 25830                           
 25831                           	psect	text110
 25832  019C7E                     __ptext110:
 25833                           	opt callstack 0
 25834  019C7E                     _SPI1_Initialize:
 25835                           	opt callstack 14
 25836                           
 25837                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 25838                           
 25839                           ; BSR set to: 57
 25840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25841                           ;incstack = 0
 25842  019C7E  0E40               	movlw	64
 25843  019C80  013D               	movlb	61	; () banked
 25844  019C82  6F15               	movwf	21,b	;volatile
 25845                           
 25846                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 25847  019C84  0E03               	movlw	3
 25848  019C86  6F16               	movwf	22,b	;volatile
 25849                           
 25850                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 25851  019C88  0E4F               	movlw	79
 25852  019C8A  6F19               	movwf	25,b	;volatile
 25853                           
 25854                           ; BSR set to: 61
 25855                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 25856  019C8C  6B1C               	clrf	28,b	;volatile
 25857                           
 25858                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 25859  019C8E  0E83               	movlw	131
 25860  019C90  6F14               	movwf	20,b	;volatile
 25861                           
 25862                           ; BSR set to: 61
 25863                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25864  019C92  0012               	return		;funcret
 25865  019C94                     __end_of_SPI1_Initialize:
 25866                           	opt callstack 0
 25867                           
 25868 ;; *************** function _PWM8_Initialize *****************
 25869 ;; Defined at:
 25870 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 25871 ;; Parameters:    Size  Location     Type
 25872 ;;		None
 25873 ;; Auto vars:     Size  Location     Type
 25874 ;;		None
 25875 ;; Return value:  Size  Location     Type
 25876 ;;                  1  [STACK] void 
 25877 ;; Registers used:
 25878 ;;		wreg, status,2
 25879 ;; Tracked objects:
 25880 ;;		On entry : 3F/39
 25881 ;;		On exit  : 3F/3F
 25882 ;;		Unchanged: 0/0
 25883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25888 ;;Total ram usage:        0 bytes
 25889 ;; Hardware stack levels used:    1
 25890 ;; Hardware stack levels required when called:   15
 25891 ;; This function calls:
 25892 ;;		Nothing
 25893 ;; This function is called by:
 25894 ;;		_SYSTEM_Initialize
 25895 ;; This function uses a reentrant model
 25896 ;;
 25897                           
 25898                           	psect	text111
 25899  019C94                     __ptext111:
 25900                           	opt callstack 0
 25901  019C94                     _PWM8_Initialize:
 25902                           	opt callstack 14
 25903                           
 25904                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 25905                           
 25906                           ; BSR set to: 61
 25907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25908                           ;incstack = 0
 25909  019C94  0E80               	movlw	128
 25910  019C96  6E62               	movwf	98,c	;volatile
 25911                           
 25912                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 25913  019C98  6A61               	clrf	97,c	;volatile
 25914                           
 25915                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 25916  019C9A  0E40               	movlw	64
 25917  019C9C  6E60               	movwf	96,c	;volatile
 25918                           
 25919                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 25920  019C9E  013F               	movlb	63	; () banked
 25921  019CA0  515F               	movf	95,w,b	;volatile
 25922  019CA2  0B3F               	andlw	-193
 25923  019CA4  0940               	iorlw	64
 25924  019CA6  6F5F               	movwf	95,b	;volatile
 25925                           
 25926                           ; BSR set to: 63
 25927                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25928  019CA8  0012               	return		;funcret
 25929  019CAA                     __end_of_PWM8_Initialize:
 25930                           	opt callstack 0
 25931                           
 25932 ;; *************** function _PMD_Initialize *****************
 25933 ;; Defined at:
 25934 ;;		line 90 in file "mcc_generated_files/mcc.c"
 25935 ;; Parameters:    Size  Location     Type
 25936 ;;		None
 25937 ;; Auto vars:     Size  Location     Type
 25938 ;;		None
 25939 ;; Return value:  Size  Location     Type
 25940 ;;                  1  [STACK] void 
 25941 ;; Registers used:
 25942 ;;		None
 25943 ;; Tracked objects:
 25944 ;;		On entry : 3F/39
 25945 ;;		On exit  : 3F/39
 25946 ;;		Unchanged: 0/0
 25947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25952 ;;Total ram usage:        0 bytes
 25953 ;; Hardware stack levels used:    1
 25954 ;; Hardware stack levels required when called:   15
 25955 ;; This function calls:
 25956 ;;		Nothing
 25957 ;; This function is called by:
 25958 ;;		_SYSTEM_Initialize
 25959 ;; This function uses a reentrant model
 25960 ;;
 25961                           
 25962                           	psect	text112
 25963  019CC0                     __ptext112:
 25964                           	opt callstack 0
 25965  019CC0                     _PMD_Initialize:
 25966                           	opt callstack 14
 25967                           
 25968                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 25969                           
 25970                           ; BSR set to: 63
 25971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25972                           ;incstack = 0
 25973  019CC0  0139               	movlb	57	; () banked
 25974  019CC2  6BC0               	clrf	192,b	;volatile
 25975                           
 25976                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 25977  019CC4  6BC1               	clrf	193,b	;volatile
 25978                           
 25979                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 25980  019CC6  6BC2               	clrf	194,b	;volatile
 25981                           
 25982                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 25983  019CC8  6BC3               	clrf	195,b	;volatile
 25984                           
 25985                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 25986  019CCA  6BC4               	clrf	196,b	;volatile
 25987                           
 25988                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 25989  019CCC  6BC5               	clrf	197,b	;volatile
 25990                           
 25991                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 25992  019CCE  6BC6               	clrf	198,b	;volatile
 25993                           
 25994                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 25995  019CD0  6BC7               	clrf	199,b	;volatile
 25996                           
 25997                           ; BSR set to: 57
 25998                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25999  019CD2  0012               	return		;funcret
 26000  019CD4                     __end_of_PMD_Initialize:
 26001                           	opt callstack 0
 26002                           
 26003 ;; *************** function _PIN_MANAGER_Initialize *****************
 26004 ;; Defined at:
 26005 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 26006 ;; Parameters:    Size  Location     Type
 26007 ;;		None
 26008 ;; Auto vars:     Size  Location     Type
 26009 ;;		None
 26010 ;; Return value:  Size  Location     Type
 26011 ;;                  1  [STACK] void 
 26012 ;; Registers used:
 26013 ;;		wreg, status,2
 26014 ;; Tracked objects:
 26015 ;;		On entry : 3F/39
 26016 ;;		On exit  : 3F/3A
 26017 ;;		Unchanged: 0/0
 26018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26023 ;;Total ram usage:        0 bytes
 26024 ;; Hardware stack levels used:    1
 26025 ;; Hardware stack levels required when called:   15
 26026 ;; This function calls:
 26027 ;;		Nothing
 26028 ;; This function is called by:
 26029 ;;		_SYSTEM_Initialize
 26030 ;; This function uses a reentrant model
 26031 ;;
 26032                           
 26033                           	psect	text113
 26034  0187FE                     __ptext113:
 26035                           	opt callstack 0
 26036  0187FE                     _PIN_MANAGER_Initialize:
 26037                           	opt callstack 14
 26038                           
 26039                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 26040                           
 26041                           ; BSR set to: 57
 26042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26043                           ;incstack = 0
 26044  0187FE  0E07               	movlw	7
 26045  018800  6EBE               	movwf	190,c	;volatile
 26046                           
 26047                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 26048  018802  0E80               	movlw	128
 26049  018804  6EBD               	movwf	189,c	;volatile
 26050                           
 26051                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 26052  018806  6ABA               	clrf	186,c	;volatile
 26053                           
 26054                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 26055  018808  6ABF               	clrf	191,c	;volatile
 26056                           
 26057                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 26058  01880A  6ABB               	clrf	187,c	;volatile
 26059                           
 26060                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 26061  01880C  0E07               	movlw	7
 26062  01880E  6EBC               	movwf	188,c	;volatile
 26063                           
 26064                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 26065  018810  6AC6               	clrf	198,c	;volatile
 26066                           
 26067                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 26068  018812  0E0F               	movlw	15
 26069  018814  6EC7               	movwf	199,c	;volatile
 26070                           
 26071                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 26072  018816  68C2               	setf	194,c	;volatile
 26073                           
 26074                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 26075  018818  0EBF               	movlw	191
 26076  01881A  6EC3               	movwf	195,c	;volatile
 26077                           
 26078                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 26079  01881C  0E90               	movlw	144
 26080  01881E  6EC4               	movwf	196,c	;volatile
 26081                           
 26082                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 26083  018820  0E0C               	movlw	12
 26084  018822  6EC5               	movwf	197,c	;volatile
 26085                           
 26086                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 26087  018824  013A               	movlb	58	; () banked
 26088  018826  6B70               	clrf	112,b	;volatile
 26089                           
 26090                           ; BSR set to: 58
 26091                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 26092  018828  6B60               	clrf	96,b	;volatile
 26093                           
 26094                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 26095  01882A  0E3C               	movlw	60
 26096  01882C  6F50               	movwf	80,b	;volatile
 26097                           
 26098                           ; BSR set to: 58
 26099                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 26100  01882E  6B80               	clrf	128,b	;volatile
 26101                           
 26102                           ; BSR set to: 58
 26103                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 26104  018830  6B90               	clrf	144,b	;volatile
 26105                           
 26106                           ; BSR set to: 58
 26107                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 26108  018832  6940               	setf	64,b	;volatile
 26109                           
 26110                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 26111  018834  0E0C               	movlw	12
 26112  018836  6F71               	movwf	113,b	;volatile
 26113                           
 26114                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 26115  018838  0E0F               	movlw	15
 26116  01883A  6F91               	movwf	145,b	;volatile
 26117                           
 26118                           ; BSR set to: 58
 26119                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 26120  01883C  6B81               	clrf	129,b	;volatile
 26121                           
 26122                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 26123  01883E  0E83               	movlw	131
 26124  018840  6F51               	movwf	81,b	;volatile
 26125                           
 26126                           ; BSR set to: 58
 26127                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 26128  018842  6B41               	clrf	65,b	;volatile
 26129                           
 26130                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 26131  018844  0E97               	movlw	151
 26132  018846  6F61               	movwf	97,b	;volatile
 26133                           
 26134                           ; BSR set to: 58
 26135                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 26136  018848  6B82               	clrf	130,b	;volatile
 26137                           
 26138                           ; BSR set to: 58
 26139                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 26140  01884A  6B92               	clrf	146,b	;volatile
 26141                           
 26142                           ; BSR set to: 58
 26143                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 26144  01884C  6B42               	clrf	66,b	;volatile
 26145                           
 26146                           ; BSR set to: 58
 26147                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 26148  01884E  6B52               	clrf	82,b	;volatile
 26149                           
 26150                           ; BSR set to: 58
 26151                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 26152  018850  6B62               	clrf	98,b	;volatile
 26153                           
 26154                           ; BSR set to: 58
 26155                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 26156  018852  6B72               	clrf	114,b	;volatile
 26157                           
 26158                           ; BSR set to: 58
 26159                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 26160  018854  6943               	setf	67,b	;volatile
 26161                           
 26162                           ; BSR set to: 58
 26163                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 26164  018856  6953               	setf	83,b	;volatile
 26165                           
 26166                           ; BSR set to: 58
 26167                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 26168  018858  6963               	setf	99,b	;volatile
 26169                           
 26170                           ; BSR set to: 58
 26171                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 26172  01885A  6973               	setf	115,b	;volatile
 26173                           
 26174                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 26175  01885C  0E07               	movlw	7
 26176  01885E  6F83               	movwf	131,b	;volatile
 26177                           
 26178                           ; BSR set to: 58
 26179                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 26180  018860  6993               	setf	147,b	;volatile
 26181                           
 26182                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 26183  018862  0E0F               	movlw	15
 26184  018864  6FE8               	movwf	232,b	;volatile
 26185                           
 26186                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 26187  018866  0E13               	movlw	19
 26188  018868  6FDE               	movwf	222,b	;volatile
 26189                           
 26190                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 26191  01886A  0E16               	movlw	22
 26192  01886C  6F0E               	movwf	14,b	;volatile
 26193                           
 26194                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 26195  01886E  0E1E               	movlw	30
 26196  018870  6F13               	movwf	19,b	;volatile
 26197                           
 26198                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 26199  018872  0E08               	movlw	8
 26200  018874  6FC0               	movwf	192,b	;volatile
 26201                           
 26202                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 26203  018876  0E10               	movlw	16
 26204  018878  6F19               	movwf	25,b	;volatile
 26205                           
 26206                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 26207  01887A  0E09               	movlw	9
 26208  01887C  6FC1               	movwf	193,b	;volatile
 26209                           
 26210                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 26211  01887E  0E1F               	movlw	31
 26212  018880  6F15               	movwf	21,b	;volatile
 26213                           
 26214                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 26215  018882  0E13               	movlw	19
 26216  018884  6F16               	movwf	22,b	;volatile
 26217                           
 26218                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 26219  018886  0E17               	movlw	23
 26220  018888  6FE5               	movwf	229,b	;volatile
 26221                           
 26222                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 26223  01888A  0E14               	movlw	20
 26224  01888C  6FDF               	movwf	223,b	;volatile
 26225                           
 26226                           ; BSR set to: 58
 26227                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 26228  01888E  0012               	return		;funcret
 26229  018890                     __end_of_PIN_MANAGER_Initialize:
 26230                           	opt callstack 0
 26231                           
 26232 ;; *************** function _OSCILLATOR_Initialize *****************
 26233 ;; Defined at:
 26234 ;;		line 72 in file "mcc_generated_files/mcc.c"
 26235 ;; Parameters:    Size  Location     Type
 26236 ;;		None
 26237 ;; Auto vars:     Size  Location     Type
 26238 ;;		None
 26239 ;; Return value:  Size  Location     Type
 26240 ;;                  1  [STACK] void 
 26241 ;; Registers used:
 26242 ;;		wreg, status,2
 26243 ;; Tracked objects:
 26244 ;;		On entry : 3F/3A
 26245 ;;		On exit  : 3F/39
 26246 ;;		Unchanged: 0/0
 26247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26252 ;;Total ram usage:        0 bytes
 26253 ;; Hardware stack levels used:    1
 26254 ;; Hardware stack levels required when called:   15
 26255 ;; This function calls:
 26256 ;;		Nothing
 26257 ;; This function is called by:
 26258 ;;		_SYSTEM_Initialize
 26259 ;; This function uses a reentrant model
 26260 ;;
 26261                           
 26262                           	psect	text114
 26263  019CAA                     __ptext114:
 26264                           	opt callstack 0
 26265  019CAA                     _OSCILLATOR_Initialize:
 26266                           	opt callstack 14
 26267                           
 26268                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 26269                           
 26270                           ; BSR set to: 58
 26271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26272                           ;incstack = 0
 26273  019CAA  0E20               	movlw	32
 26274  019CAC  0139               	movlb	57	; () banked
 26275  019CAE  6FD9               	movwf	217,b	;volatile
 26276                           
 26277                           ; BSR set to: 57
 26278                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 26279  019CB0  6BDB               	clrf	219,b	;volatile
 26280                           
 26281                           ; BSR set to: 57
 26282                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 26283  019CB2  6BDD               	clrf	221,b	;volatile
 26284                           
 26285                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 26286  019CB4  0E02               	movlw	2
 26287  019CB6  6FDF               	movwf	223,b	;volatile
 26288                           
 26289                           ; BSR set to: 57
 26290                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 26291  019CB8  6BDE               	clrf	222,b	;volatile
 26292  019CBA                     l169:
 26293                           
 26294                           ; BSR set to: 57
 26295                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 26296  019CBA  B1DC               	btfsc	220,0,b	;volatile
 26297  019CBC  0012               	return	
 26298  019CBE  D7FD               	goto	l169
 26299  019CC0                     __end_of_OSCILLATOR_Initialize:
 26300                           	opt callstack 0
 26301                           
 26302 ;; *************** function _INTERRUPT_Initialize *****************
 26303 ;; Defined at:
 26304 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26305 ;; Parameters:    Size  Location     Type
 26306 ;;		None
 26307 ;; Auto vars:     Size  Location     Type
 26308 ;;  state           1  [STACK] _Bool 
 26309 ;; Return value:  Size  Location     Type
 26310 ;;                  1  [STACK] void 
 26311 ;; Registers used:
 26312 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 26313 ;; Tracked objects:
 26314 ;;		On entry : 0/0
 26315 ;;		On exit  : 3F/39
 26316 ;;		Unchanged: 0/0
 26317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26322 ;;Total ram usage:        0 bytes
 26323 ;; Hardware stack levels used:    1
 26324 ;; Hardware stack levels required when called:   15
 26325 ;; This function calls:
 26326 ;;		Nothing
 26327 ;; This function is called by:
 26328 ;;		_SYSTEM_Initialize
 26329 ;; This function uses a reentrant model
 26330 ;;
 26331                           
 26332                           	psect	text115
 26333  018C6E                     __ptext115:
 26334                           	opt callstack 0
 26335  018C6E                     _INTERRUPT_Initialize:
 26336                           	opt callstack 0
 26337                           
 26338                           ; BSR set to: 57
 26339                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26340  018C6E  52E6               	movf	postinc1,f,c
 26341                           
 26342                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 26343                           
 26344                           ;incstack = 0
 26345  018C70  8AD2               	bsf	210,5,c	;volatile
 26346                           
 26347                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 26348  018C72  AED2               	btfss	16338,7,c	;volatile
 26349  018C74  D003               	goto	u8210
 26350  018C76  6A0C               	clrf	(btemp+11)^0,c
 26351  018C78  2A0C               	incf	(btemp+11)^0,f,c
 26352  018C7A  D001               	goto	u8228
 26353  018C7C                     u8210:
 26354  018C7C  6A0C               	clrf	(btemp+11)^0,c
 26355  018C7E                     u8228:
 26356                           
 26357                           ;stkvar	_state @ sp[(-1)+0]
 26358  018C7E  0EFF               	movlw	-1
 26359  018C80  0060  F033  FFE3   	movff	btemp+11,plusw1
 26360                           
 26361                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 26362  018C86  9ED2               	bcf	16338,7,c	;volatile
 26363                           
 26364                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 26365  018C88  0E55               	movlw	85
 26366  018C8A  6ED4               	movwf	212,c	;volatile
 26367                           
 26368                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 26369  018C8C  0EAA               	movlw	170
 26370  018C8E  6ED4               	movwf	212,c	;volatile
 26371                           
 26372                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 26373  018C90  90D4               	bcf	212,0,c	;volatile
 26374                           
 26375                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 26376  018C92  0138               	movlb	56	; () banked
 26377  018C94  6B9F               	clrf	159,b	;volatile
 26378                           
 26379                           ; BSR set to: 56
 26380                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 26381  018C96  6B9E               	clrf	158,b	;volatile
 26382                           
 26383                           ; BSR set to: 56
 26384                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 26385  018C98  0E08               	movlw	8
 26386  018C9A  6F9D               	movwf	157,b	;volatile
 26387                           
 26388                           ; BSR set to: 56
 26389                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 26390  018C9C  0E55               	movlw	85
 26391  018C9E  6ED4               	movwf	212,c	;volatile
 26392                           
 26393                           ; BSR set to: 56
 26394                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 26395  018CA0  0EAA               	movlw	170
 26396  018CA2  6ED4               	movwf	212,c	;volatile
 26397                           
 26398                           ; BSR set to: 56
 26399                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 26400  018CA4  80D4               	bsf	212,0,c	;volatile
 26401                           
 26402                           ; BSR set to: 56
 26403                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 26404                           ;stkvar	_state @ sp[(-1)+0]
 26405  018CA6  0EFF               	movlw	-1
 26406  018CA8  B0E3               	btfsc	plusw1,0,c
 26407  018CAA  D002               	bra	u8235
 26408  018CAC  9ED2               	bcf	16338,7,c	;volatile
 26409  018CAE  D001               	bra	u8236
 26410  018CB0                     u8235:
 26411  018CB0  8ED2               	bsf	16338,7,c	;volatile
 26412  018CB2                     u8236:
 26413                           
 26414                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 26415  018CB2  0139               	movlb	57	; () banked
 26416  018CB4  8782               	bsf	130,3,b	;volatile
 26417                           
 26418                           ; BSR set to: 57
 26419                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 26420  018CB6  8382               	bsf	130,1,b	;volatile
 26421                           
 26422                           ; BSR set to: 57
 26423                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 26424  018CB8  8182               	bsf	130,0,b	;volatile
 26425                           
 26426                           ; BSR set to: 57
 26427                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 26428  018CBA  8582               	bsf	130,2,b	;volatile
 26429                           
 26430                           ; BSR set to: 57
 26431                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 26432  018CBC  8786               	bsf	134,3,b	;volatile
 26433                           
 26434                           ; BSR set to: 57
 26435                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 26436  018CBE  8586               	bsf	134,2,b	;volatile
 26437                           
 26438                           ; BSR set to: 57
 26439                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 26440  018CC0  8783               	bsf	131,3,b	;volatile
 26441                           
 26442                           ; BSR set to: 57
 26443                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 26444  018CC2  8181               	bsf	129,0,b	;volatile
 26445                           
 26446                           ; BSR set to: 57
 26447                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 26448  018CC4  9185               	bcf	133,0,b	;volatile
 26449                           
 26450                           ; BSR set to: 57
 26451                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 26452  018CC6  8189               	bsf	137,0,b	;volatile
 26453                           
 26454                           ; BSR set to: 57
 26455                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 26456  018CC8  9D88               	bcf	136,6,b	;volatile
 26457                           
 26458                           ; BSR set to: 57
 26459                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 26460  018CCA  9D86               	bcf	134,6,b	;volatile
 26461                           
 26462                           ; BSR set to: 57
 26463                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 26464  018CCC  8581               	bsf	129,2,b	;volatile
 26465                           
 26466                           ; BSR set to: 57
 26467                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 26468  018CCE  8781               	bsf	129,3,b	;volatile
 26469                           
 26470                           ; BSR set to: 57
 26471                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 26472  018CD0  52E5               	movf	postdec1,f,c
 26473  018CD2  0012               	return		;funcret
 26474  018CD4                     __end_of_INTERRUPT_Initialize:
 26475                           	opt callstack 0
 26476                           
 26477 ;; *************** function _FVR_Initialize *****************
 26478 ;; Defined at:
 26479 ;;		line 58 in file "mcc_generated_files/fvr.c"
 26480 ;; Parameters:    Size  Location     Type
 26481 ;;		None
 26482 ;; Auto vars:     Size  Location     Type
 26483 ;;		None
 26484 ;; Return value:  Size  Location     Type
 26485 ;;                  1  [STACK] void 
 26486 ;; Registers used:
 26487 ;;		wreg, status,2
 26488 ;; Tracked objects:
 26489 ;;		On entry : 3F/39
 26490 ;;		On exit  : 3F/3E
 26491 ;;		Unchanged: 0/0
 26492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26497 ;;Total ram usage:        0 bytes
 26498 ;; Hardware stack levels used:    1
 26499 ;; Hardware stack levels required when called:   15
 26500 ;; This function calls:
 26501 ;;		Nothing
 26502 ;; This function is called by:
 26503 ;;		_SYSTEM_Initialize
 26504 ;; This function uses a reentrant model
 26505 ;;
 26506                           
 26507                           	psect	text116
 26508  019D8A                     __ptext116:
 26509                           	opt callstack 0
 26510  019D8A                     _FVR_Initialize:
 26511                           	opt callstack 14
 26512                           
 26513                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 26514                           
 26515                           ; BSR set to: 57
 26516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26517                           ;incstack = 0
 26518  019D8A  0EAF               	movlw	175
 26519  019D8C  013E               	movlb	62	; () banked
 26520  019D8E  6FC1               	movwf	193,b	;volatile
 26521                           
 26522                           ; BSR set to: 62
 26523                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26524  019D90  0012               	return		;funcret
 26525  019D92                     __end_of_FVR_Initialize:
 26526                           	opt callstack 0
 26527                           
 26528 ;; *************** function _EXT_INT_Initialize *****************
 26529 ;; Defined at:
 26530 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 26531 ;; Parameters:    Size  Location     Type
 26532 ;;		None
 26533 ;; Auto vars:     Size  Location     Type
 26534 ;;		None
 26535 ;; Return value:  Size  Location     Type
 26536 ;;                  1  [STACK] void 
 26537 ;; Registers used:
 26538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26539 ;; Tracked objects:
 26540 ;;		On entry : 3F/3F
 26541 ;;		On exit  : 3F/39
 26542 ;;		Unchanged: 0/0
 26543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26548 ;;Total ram usage:        0 bytes
 26549 ;; Hardware stack levels used:    1
 26550 ;; Hardware stack levels required when called:   16
 26551 ;; This function calls:
 26552 ;;		_INT0_SetInterruptHandler
 26553 ;;		_INT1_SetInterruptHandler
 26554 ;; This function is called by:
 26555 ;;		_SYSTEM_Initialize
 26556 ;; This function uses a reentrant model
 26557 ;;
 26558                           
 26559                           	psect	text117
 26560  01953A                     __ptext117:
 26561                           	opt callstack 0
 26562  01953A                     _EXT_INT_Initialize:
 26563                           	opt callstack 13
 26564                           
 26565                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 26566                           
 26567                           ; BSR set to: 62
 26568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26569                           ;incstack = 0
 26570  01953A  0139               	movlb	57	; () banked
 26571  01953C  91A1               	bcf	161,0,b	;volatile
 26572                           
 26573                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 26574  01953E  90D2               	bcf	210,0,c	;volatile
 26575                           
 26576                           ; BSR set to: 57
 26577                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 26578  019540  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 26579  019542  6EE6               	movwf	postinc1,c
 26580  019544  0E9D               	movlw	high _INT0_DefaultInterruptHandler
 26581  019546  6EE6               	movwf	postinc1,c
 26582  019548  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 26583  01954A  6EE6               	movwf	postinc1,c
 26584  01954C  EC77  F0CC         	call	_INT0_SetInterruptHandler	;wreg free
 26585                           
 26586                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 26587  019550  0139               	movlb	57	; () banked
 26588  019552  8191               	bsf	145,0,b	;volatile
 26589                           
 26590                           ; BSR set to: 57
 26591                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 26592  019554  91A5               	bcf	165,0,b	;volatile
 26593                           
 26594                           ; BSR set to: 57
 26595                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 26596  019556  92D2               	bcf	210,1,c	;volatile
 26597                           
 26598                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 26599  019558  0EB2               	movlw	low _INT1_DefaultInterruptHandler
 26600  01955A  6EE6               	movwf	postinc1,c
 26601  01955C  0E9D               	movlw	high _INT1_DefaultInterruptHandler
 26602  01955E  6EE6               	movwf	postinc1,c
 26603  019560  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 26604  019562  6EE6               	movwf	postinc1,c
 26605  019564  EC63  F0CC         	call	_INT1_SetInterruptHandler	;wreg free
 26606                           
 26607                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 26608  019568  0139               	movlb	57	; () banked
 26609  01956A  8195               	bsf	149,0,b	;volatile
 26610                           
 26611                           ; BSR set to: 57
 26612                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26613  01956C  0012               	return		;funcret
 26614  01956E                     __end_of_EXT_INT_Initialize:
 26615                           	opt callstack 0
 26616                           
 26617 ;; *************** function _INT1_SetInterruptHandler *****************
 26618 ;; Defined at:
 26619 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 26620 ;; Parameters:    Size  Location     Type
 26621 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26622 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 26623 ;; Auto vars:     Size  Location     Type
 26624 ;;		None
 26625 ;; Return value:  Size  Location     Type
 26626 ;;                  1  [STACK] void 
 26627 ;; Registers used:
 26628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26629 ;; Tracked objects:
 26630 ;;		On entry : 3F/39
 26631 ;;		On exit  : 0/0
 26632 ;;		Unchanged: 0/0
 26633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26638 ;;Total ram usage:        0 bytes
 26639 ;; Hardware stack levels used:    1
 26640 ;; Hardware stack levels required when called:   15
 26641 ;; This function calls:
 26642 ;;		Nothing
 26643 ;; This function is called by:
 26644 ;;		_EXT_INT_Initialize
 26645 ;;		_start_switch_handler
 26646 ;; This function uses a reentrant model
 26647 ;;
 26648                           
 26649                           	psect	text118
 26650  0198C6                     __ptext118:
 26651                           	opt callstack 0
 26652  0198C6                     _INT1_SetInterruptHandler:
 26653                           	opt callstack 14
 26654                           
 26655                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 26656                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26657                           
 26658                           ; BSR set to: 57
 26659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26660                           ;incstack = 0
 26661  0198C6  50E1               	movf	fsr1l,w,c
 26662  0198C8  0FFD               	addlw	-3
 26663  0198CA  6ED9               	movwf	fsr2l,c
 26664  0198CC  50E2               	movf	fsr1h,w,c
 26665  0198CE  6EDA               	movwf	fsr2h,c
 26666  0198D0  0EFF               	movlw	255
 26667  0198D2  22DA               	addwfc	fsr2h,f,c
 26668  0198D4  006F FF78  F0C1    	movff	postinc2,_INT1_InterruptHandler
 26669  0198DA  006F FF78  F0C2    	movff	postinc2,_INT1_InterruptHandler+1
 26670  0198E0  006F FF74  F0C3    	movff	postdec2,_INT1_InterruptHandler+2
 26671                           
 26672                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26673  0198E6  52E5               	movf	postdec1,f,c
 26674  0198E8  52E5               	movf	postdec1,f,c
 26675  0198EA  52E5               	movf	postdec1,f,c
 26676  0198EC  0012               	return		;funcret
 26677  0198EE                     __end_of_INT1_SetInterruptHandler:
 26678                           	opt callstack 0
 26679                           
 26680 ;; *************** function _INT0_SetInterruptHandler *****************
 26681 ;; Defined at:
 26682 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 26683 ;; Parameters:    Size  Location     Type
 26684 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26685 ;;		 -> INT0_DefaultInterruptHandler(1), 
 26686 ;; Auto vars:     Size  Location     Type
 26687 ;;		None
 26688 ;; Return value:  Size  Location     Type
 26689 ;;                  1  [STACK] void 
 26690 ;; Registers used:
 26691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26692 ;; Tracked objects:
 26693 ;;		On entry : 3F/39
 26694 ;;		On exit  : 0/0
 26695 ;;		Unchanged: 0/0
 26696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26701 ;;Total ram usage:        0 bytes
 26702 ;; Hardware stack levels used:    1
 26703 ;; Hardware stack levels required when called:   15
 26704 ;; This function calls:
 26705 ;;		Nothing
 26706 ;; This function is called by:
 26707 ;;		_EXT_INT_Initialize
 26708 ;; This function uses a reentrant model
 26709 ;;
 26710                           
 26711                           	psect	text119
 26712  0198EE                     __ptext119:
 26713                           	opt callstack 0
 26714  0198EE                     _INT0_SetInterruptHandler:
 26715                           	opt callstack 13
 26716                           
 26717                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 26718                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26719                           
 26720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26721                           ;incstack = 0
 26722  0198EE  50E1               	movf	fsr1l,w,c
 26723  0198F0  0FFD               	addlw	-3
 26724  0198F2  6ED9               	movwf	fsr2l,c
 26725  0198F4  50E2               	movf	fsr1h,w,c
 26726  0198F6  6EDA               	movwf	fsr2h,c
 26727  0198F8  0EFF               	movlw	255
 26728  0198FA  22DA               	addwfc	fsr2h,f,c
 26729  0198FC  006F FF78  F0C4    	movff	postinc2,_INT0_InterruptHandler
 26730  019902  006F FF78  F0C5    	movff	postinc2,_INT0_InterruptHandler+1
 26731  019908  006F FF74  F0C6    	movff	postdec2,_INT0_InterruptHandler+2
 26732                           
 26733                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 26734  01990E  52E5               	movf	postdec1,f,c
 26735  019910  52E5               	movf	postdec1,f,c
 26736  019912  52E5               	movf	postdec1,f,c
 26737  019914  0012               	return		;funcret
 26738  019916                     __end_of_INT0_SetInterruptHandler:
 26739                           	opt callstack 0
 26740                           
 26741 ;; *************** function _DMA2_Initialize *****************
 26742 ;; Defined at:
 26743 ;;		line 61 in file "mcc_generated_files/dma2.c"
 26744 ;; Parameters:    Size  Location     Type
 26745 ;;		None
 26746 ;; Auto vars:     Size  Location     Type
 26747 ;;		None
 26748 ;; Return value:  Size  Location     Type
 26749 ;;                  1  [STACK] void 
 26750 ;; Registers used:
 26751 ;;		wreg, status,2
 26752 ;; Tracked objects:
 26753 ;;		On entry : 3F/3D
 26754 ;;		On exit  : 3F/3B
 26755 ;;		Unchanged: 0/0
 26756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26761 ;;Total ram usage:        0 bytes
 26762 ;; Hardware stack levels used:    1
 26763 ;; Hardware stack levels required when called:   15
 26764 ;; This function calls:
 26765 ;;		Nothing
 26766 ;; This function is called by:
 26767 ;;		_SYSTEM_Initialize
 26768 ;; This function uses a reentrant model
 26769 ;;
 26770                           
 26771                           	psect	text120
 26772  018EB4                     __ptext120:
 26773                           	opt callstack 0
 26774  018EB4                     _DMA2_Initialize:
 26775                           	opt callstack 14
 26776                           
 26777                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 26778                           
 26779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26780                           ;incstack = 0
 26781  018EB4  0E00               	movlw	0
 26782  018EB6  013B               	movlb	59	; () banked
 26783  018EB8  6FD9               	movwf	217,b	;volatile
 26784  018EBA  0E10               	movlw	16
 26785  018EBC  6FDA               	movwf	218,b	;volatile
 26786  018EBE  0E00               	movlw	0
 26787  018EC0  6FDB               	movwf	219,b	;volatile
 26788                           
 26789                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 26790  018EC2  0E3F               	movlw	63
 26791  018EC4  6FD1               	movwf	209,b	;volatile
 26792  018EC6  0EBB               	movlw	187
 26793  018EC8  6FD0               	movwf	208,b	;volatile
 26794                           
 26795                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 26796  018ECA  0E03               	movlw	3
 26797  018ECC  6FDD               	movwf	221,b	;volatile
 26798                           
 26799                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 26800  018ECE  0E00               	movlw	0
 26801  018ED0  6FD8               	movwf	216,b	;volatile
 26802  018ED2  0E01               	movlw	1
 26803  018ED4  6FD7               	movwf	215,b	;volatile
 26804                           
 26805                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 26806  018ED6  0E00               	movlw	0
 26807  018ED8  6FCF               	movwf	207,b	;volatile
 26808  018EDA  0E01               	movlw	1
 26809  018EDC  6FCE               	movwf	206,b	;volatile
 26810                           
 26811                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 26812  018EDE  0E1C               	movlw	28
 26813  018EE0  6FDF               	movwf	223,b	;volatile
 26814                           
 26815                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 26816  018EE2  0E3D               	movlw	61
 26817  018EE4  6FDE               	movwf	222,b	;volatile
 26818                           
 26819                           ; BSR set to: 59
 26820                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 26821  018EE6  0139               	movlb	57	; () banked
 26822  018EE8  97A5               	bcf	165,3,b	;volatile
 26823                           
 26824                           ; BSR set to: 57
 26825                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 26826  018EEA  95A5               	bcf	165,2,b	;volatile
 26827                           
 26828                           ; BSR set to: 57
 26829                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 26830  018EEC  9BA5               	bcf	165,5,b	;volatile
 26831                           
 26832                           ; BSR set to: 57
 26833                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 26834  018EEE  99A5               	bcf	165,4,b	;volatile
 26835                           
 26836                           ; BSR set to: 57
 26837                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 26838  018EF0  9795               	bcf	149,3,b	;volatile
 26839                           
 26840                           ; BSR set to: 57
 26841                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 26842  018EF2  9595               	bcf	149,2,b	;volatile
 26843                           
 26844                           ; BSR set to: 57
 26845                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 26846  018EF4  9B95               	bcf	149,5,b	;volatile
 26847                           
 26848                           ; BSR set to: 57
 26849                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 26850  018EF6  9995               	bcf	149,4,b	;volatile
 26851  018EF8  9ED2               	bcf	16338,7,c	;# 
 26852  018EFA  0139               	banksel	14831	;# 
 26853  018EFC  0E55               	movlw	85	;# 
 26854  018EFE  6FEF               	movwf	14831,b	;# 
 26855  018F00  0EAA               	movlw	170	;# 
 26856  018F02  6FEF               	movwf	14831,b	;# 
 26857  018F04  81EF               	bsf	14831,0,b	;# 
 26858  018F06  8ED2               	bsf	16338,7,c	;# 
 26859                           
 26860                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 26861  018F08  013B               	movlb	59	; () banked
 26862  018F0A  6BDC               	clrf	220,b	;volatile
 26863                           
 26864                           ; BSR set to: 59
 26865                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26866  018F0C  0012               	return		;funcret
 26867  018F0E                     __end_of_DMA2_Initialize:
 26868                           	opt callstack 0
 26869                           
 26870 ;; *************** function _DMA1_Initialize *****************
 26871 ;; Defined at:
 26872 ;;		line 86 in file "mcc_generated_files/dma1.c"
 26873 ;; Parameters:    Size  Location     Type
 26874 ;;		None
 26875 ;; Auto vars:     Size  Location     Type
 26876 ;;		None
 26877 ;; Return value:  Size  Location     Type
 26878 ;;                  1  [STACK] void 
 26879 ;; Registers used:
 26880 ;;		wreg, status,2
 26881 ;; Tracked objects:
 26882 ;;		On entry : 3F/3B
 26883 ;;		On exit  : 3F/3B
 26884 ;;		Unchanged: 0/0
 26885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26890 ;;Total ram usage:        0 bytes
 26891 ;; Hardware stack levels used:    1
 26892 ;; Hardware stack levels required when called:   15
 26893 ;; This function calls:
 26894 ;;		Nothing
 26895 ;; This function is called by:
 26896 ;;		_SYSTEM_Initialize
 26897 ;; This function uses a reentrant model
 26898 ;;
 26899                           
 26900                           	psect	text121
 26901  018B2E                     __ptext121:
 26902                           	opt callstack 0
 26903  018B2E                     _DMA1_Initialize:
 26904                           	opt callstack 14
 26905                           
 26906                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 26907                           
 26908                           ; BSR set to: 59
 26909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26910                           ;incstack = 0
 26911  018B2E  0E00               	movlw	0
 26912  018B30  013B               	movlb	59	; () banked
 26913  018B32  6FF9               	movwf	249,b	;volatile
 26914  018B34  0E10               	movlw	16
 26915  018B36  6FFA               	movwf	250,b	;volatile
 26916  018B38  0E00               	movlw	0
 26917  018B3A  6FFB               	movwf	251,b	;volatile
 26918                           
 26919                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 26920  018B3C  0E3D               	movlw	61
 26921  018B3E  6FF1               	movwf	241,b	;volatile
 26922  018B40  0E11               	movlw	17
 26923  018B42  6FF0               	movwf	240,b	;volatile
 26924                           
 26925                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 26926  018B44  0E03               	movlw	3
 26927  018B46  6FFD               	movwf	253,b	;volatile
 26928                           
 26929                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 26930  018B48  0E00               	movlw	0
 26931  018B4A  6FF8               	movwf	248,b	;volatile
 26932  018B4C  0E01               	movlw	1
 26933  018B4E  6FF7               	movwf	247,b	;volatile
 26934                           
 26935                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 26936  018B50  0E00               	movlw	0
 26937  018B52  6FEF               	movwf	239,b	;volatile
 26938  018B54  0E01               	movlw	1
 26939  018B56  6FEE               	movwf	238,b	;volatile
 26940                           
 26941                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 26942  018B58  0E15               	movlw	21
 26943  018B5A  6FFF               	movwf	255,b	;volatile
 26944                           
 26945                           ; BSR set to: 59
 26946                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 26947  018B5C  6BFE               	clrf	254,b	;volatile
 26948                           
 26949                           ; BSR set to: 59
 26950                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 26951  018B5E  0139               	movlb	57	; () banked
 26952  018B60  93A2               	bcf	162,1,b	;volatile
 26953                           
 26954                           ; BSR set to: 57
 26955                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 26956  018B62  91A2               	bcf	162,0,b	;volatile
 26957                           
 26958                           ; BSR set to: 57
 26959                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 26960  018B64  97A2               	bcf	162,3,b	;volatile
 26961                           
 26962                           ; BSR set to: 57
 26963                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 26964  018B66  95A2               	bcf	162,2,b	;volatile
 26965                           
 26966                           ; BSR set to: 57
 26967                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 26968  018B68  8392               	bsf	146,1,b	;volatile
 26969                           
 26970                           ; BSR set to: 57
 26971                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 26972  018B6A  8192               	bsf	146,0,b	;volatile
 26973                           
 26974                           ; BSR set to: 57
 26975                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 26976  018B6C  8792               	bsf	146,3,b	;volatile
 26977                           
 26978                           ; BSR set to: 57
 26979                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 26980  018B6E  8592               	bsf	146,2,b	;volatile
 26981                           
 26982                           ; BSR set to: 57
 26983                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 26984  018B70  6BF1               	clrf	241,b	;volatile
 26985                           
 26986                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 26987  018B72  0E01               	movlw	1
 26988  018B74  6FF2               	movwf	242,b	;volatile
 26989                           
 26990                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 26991  018B76  0E04               	movlw	4
 26992  018B78  6FF3               	movwf	243,b	;volatile
 26993                           
 26994                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 26995  018B7A  0E02               	movlw	2
 26996  018B7C  6FF4               	movwf	244,b	;volatile
 26997                           
 26998                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 26999  018B7E  0E03               	movlw	3
 27000  018B80  6FF7               	movwf	247,b	;volatile
 27001  018B82  9ED2               	bcf	16338,7,c	;# 
 27002  018B84  0139               	banksel	14831	;# 
 27003  018B86  0E55               	movlw	85	;# 
 27004  018B88  6FEF               	movwf	14831,b	;# 
 27005  018B8A  0EAA               	movlw	170	;# 
 27006  018B8C  6FEF               	movwf	14831,b	;# 
 27007  018B8E  81EF               	bsf	14831,0,b	;# 
 27008  018B90  8ED2               	bsf	16338,7,c	;# 
 27009                           
 27010                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 27011  018B92  013B               	movlb	59	; () banked
 27012  018B94  6BFC               	clrf	252,b	;volatile
 27013                           
 27014                           ; BSR set to: 59
 27015                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27016  018B96  0012               	return		;funcret
 27017  018B98                     __end_of_DMA1_Initialize:
 27018                           	opt callstack 0
 27019                           
 27020 ;; *************** function _CLKREF_Initialize *****************
 27021 ;; Defined at:
 27022 ;;		line 58 in file "mcc_generated_files/clkref.c"
 27023 ;; Parameters:    Size  Location     Type
 27024 ;;		None
 27025 ;; Auto vars:     Size  Location     Type
 27026 ;;		None
 27027 ;; Return value:  Size  Location     Type
 27028 ;;                  1  [STACK] void 
 27029 ;; Registers used:
 27030 ;;		wreg, status,2
 27031 ;; Tracked objects:
 27032 ;;		On entry : 3F/3B
 27033 ;;		On exit  : 3F/3C
 27034 ;;		Unchanged: 0/0
 27035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27040 ;;Total ram usage:        0 bytes
 27041 ;; Hardware stack levels used:    1
 27042 ;; Hardware stack levels required when called:   15
 27043 ;; This function calls:
 27044 ;;		Nothing
 27045 ;; This function is called by:
 27046 ;;		_SYSTEM_Initialize
 27047 ;; This function uses a reentrant model
 27048 ;;
 27049                           
 27050                           	psect	text122
 27051  019D32                     __ptext122:
 27052                           	opt callstack 0
 27053  019D32                     _CLKREF_Initialize:
 27054                           	opt callstack 14
 27055                           
 27056                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 27057                           
 27058                           ; BSR set to: 59
 27059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27060                           ;incstack = 0
 27061  019D32  013C               	movlb	60	; () banked
 27062  019D34  6BE6               	clrf	230,b	;volatile
 27063                           
 27064                           ; BSR set to: 60
 27065                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 27066  019D36  0E94               	movlw	148
 27067  019D38  6FE5               	movwf	229,b	;volatile
 27068                           
 27069                           ; BSR set to: 60
 27070                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27071  019D3A  0012               	return		;funcret
 27072  019D3C                     __end_of_CLKREF_Initialize:
 27073                           	opt callstack 0
 27074                           
 27075 ;; *************** function _ADCC_Initialize *****************
 27076 ;; Defined at:
 27077 ;;		line 65 in file "mcc_generated_files/adcc.c"
 27078 ;; Parameters:    Size  Location     Type
 27079 ;;		None
 27080 ;; Auto vars:     Size  Location     Type
 27081 ;;		None
 27082 ;; Return value:  Size  Location     Type
 27083 ;;                  1  [STACK] void 
 27084 ;; Registers used:
 27085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27086 ;; Tracked objects:
 27087 ;;		On entry : 3F/3E
 27088 ;;		On exit  : 0/0
 27089 ;;		Unchanged: 0/0
 27090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27095 ;;Total ram usage:        0 bytes
 27096 ;; Hardware stack levels used:    1
 27097 ;; Hardware stack levels required when called:   16
 27098 ;; This function calls:
 27099 ;;		_ADCC_SetADIInterruptHandler
 27100 ;;		_ADCC_SetADTIInterruptHandler
 27101 ;; This function is called by:
 27102 ;;		_SYSTEM_Initialize
 27103 ;; This function uses a reentrant model
 27104 ;;
 27105                           
 27106                           	psect	text123
 27107  018B98                     __ptext123:
 27108                           	opt callstack 0
 27109  018B98                     _ADCC_Initialize:
 27110                           	opt callstack 13
 27111                           
 27112                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 27113                           
 27114                           ; BSR set to: 60
 27115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27116                           ;incstack = 0
 27117  018B98  013E               	movlb	62	; () banked
 27118  018B9A  6BDE               	clrf	222,b	;volatile
 27119                           
 27120                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 27121  018B9C  6BDF               	clrf	223,b	;volatile
 27122                           
 27123                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 27124  018B9E  6BE0               	clrf	224,b	;volatile
 27125                           
 27126                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 27127  018BA0  6BE1               	clrf	225,b	;volatile
 27128                           
 27129                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 27130  018BA2  6BE4               	clrf	228,b	;volatile
 27131                           
 27132                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 27133  018BA4  6BE5               	clrf	229,b	;volatile
 27134                           
 27135                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 27136  018BA6  6BEA               	clrf	234,b	;volatile
 27137                           
 27138                           ; BSR set to: 62
 27139                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 27140  018BA8  0E40               	movlw	64
 27141  018BAA  6FEC               	movwf	236,b	;volatile
 27142                           
 27143                           ; BSR set to: 62
 27144                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 27145  018BAC  6BF1               	clrf	241,b	;volatile
 27146                           
 27147                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 27148  018BAE  0E20               	movlw	32
 27149  018BB0  6FF3               	movwf	243,b	;volatile
 27150                           
 27151                           ; BSR set to: 62
 27152                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 27153  018BB2  6BF4               	clrf	244,b	;volatile
 27154                           
 27155                           ; BSR set to: 62
 27156                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 27157  018BB4  6BF5               	clrf	245,b	;volatile
 27158                           
 27159                           ; BSR set to: 62
 27160                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 27161  018BB6  6BF6               	clrf	246,b	;volatile
 27162                           
 27163                           ; BSR set to: 62
 27164                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 27165  018BB8  6BF7               	clrf	247,b	;volatile
 27166                           
 27167                           ; BSR set to: 62
 27168                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 27169  018BBA  6BF9               	clrf	249,b	;volatile
 27170                           
 27171                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 27172  018BBC  0E5B               	movlw	91
 27173  018BBE  6FFA               	movwf	250,b	;volatile
 27174                           
 27175                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 27176  018BC0  0E27               	movlw	39
 27177  018BC2  6FFB               	movwf	251,b	;volatile
 27178                           
 27179                           ; BSR set to: 62
 27180                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 27181  018BC4  6BFC               	clrf	252,b	;volatile
 27182                           
 27183                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 27184  018BC6  0E02               	movlw	2
 27185  018BC8  6FFD               	movwf	253,b	;volatile
 27186                           
 27187                           ; BSR set to: 62
 27188                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 27189  018BCA  6BFE               	clrf	254,b	;volatile
 27190                           
 27191                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 27192  018BCC  0E07               	movlw	7
 27193  018BCE  6FFF               	movwf	255,b	;volatile
 27194                           
 27195                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 27196  018BD0  0E84               	movlw	132
 27197  018BD2  6FF8               	movwf	248,b	;volatile
 27198                           
 27199                           ; BSR set to: 62
 27200                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 27201  018BD4  0139               	movlb	57	; () banked
 27202  018BD6  95A1               	bcf	161,2,b	;volatile
 27203                           
 27204                           ; BSR set to: 57
 27205                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 27206  018BD8  8591               	bsf	145,2,b	;volatile
 27207                           
 27208                           ; BSR set to: 57
 27209                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 27210  018BDA  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 27211  018BDC  6EE6               	movwf	postinc1,c
 27212  018BDE  0E9D               	movlw	high _ADCC_DefaultInterruptHandler
 27213  018BE0  6EE6               	movwf	postinc1,c
 27214  018BE2  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 27215  018BE4  6EE6               	movwf	postinc1,c
 27216  018BE6  EC9F  F0CC         	call	_ADCC_SetADIInterruptHandler	;wreg free
 27217                           
 27218                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 27219  018BEA  0139               	movlb	57	; () banked
 27220  018BEC  97A1               	bcf	161,3,b	;volatile
 27221                           
 27222                           ; BSR set to: 57
 27223                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 27224  018BEE  8791               	bsf	145,3,b	;volatile
 27225                           
 27226                           ; BSR set to: 57
 27227                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 27228  018BF0  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 27229  018BF2  6EE6               	movwf	postinc1,c
 27230  018BF4  0E9D               	movlw	high _ADCC_DefaultInterruptHandler
 27231  018BF6  6EE6               	movwf	postinc1,c
 27232  018BF8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 27233  018BFA  6EE6               	movwf	postinc1,c
 27234  018BFC  EC8B  F0CC         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 27235                           
 27236                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27237  018C00  0012               	return		;funcret
 27238  018C02                     __end_of_ADCC_Initialize:
 27239                           	opt callstack 0
 27240                           
 27241 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 27242 ;; Defined at:
 27243 ;;		line 336 in file "mcc_generated_files/adcc.c"
 27244 ;; Parameters:    Size  Location     Type
 27245 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27246 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 27247 ;; Auto vars:     Size  Location     Type
 27248 ;;		None
 27249 ;; Return value:  Size  Location     Type
 27250 ;;                  1  [STACK] void 
 27251 ;; Registers used:
 27252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27253 ;; Tracked objects:
 27254 ;;		On entry : 0/0
 27255 ;;		On exit  : 0/0
 27256 ;;		Unchanged: 0/0
 27257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27262 ;;Total ram usage:        0 bytes
 27263 ;; Hardware stack levels used:    1
 27264 ;; Hardware stack levels required when called:   15
 27265 ;; This function calls:
 27266 ;;		Nothing
 27267 ;; This function is called by:
 27268 ;;		_ADCC_Initialize
 27269 ;;		_start_adc_scan
 27270 ;; This function uses a reentrant model
 27271 ;;
 27272                           
 27273                           	psect	text124
 27274  019916                     __ptext124:
 27275                           	opt callstack 0
 27276  019916                     _ADCC_SetADTIInterruptHandler:
 27277                           	opt callstack 14
 27278                           
 27279                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 27280                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27281                           
 27282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27283                           ;incstack = 0
 27284  019916  50E1               	movf	fsr1l,w,c
 27285  019918  0FFD               	addlw	-3
 27286  01991A  6ED9               	movwf	fsr2l,c
 27287  01991C  50E2               	movf	fsr1h,w,c
 27288  01991E  6EDA               	movwf	fsr2h,c
 27289  019920  0EFF               	movlw	255
 27290  019922  22DA               	addwfc	fsr2h,f,c
 27291  019924  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 27292  01992A  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 27293  019930  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 27294                           
 27295                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 27296  019936  52E5               	movf	postdec1,f,c
 27297  019938  52E5               	movf	postdec1,f,c
 27298  01993A  52E5               	movf	postdec1,f,c
 27299  01993C  0012               	return		;funcret
 27300  01993E                     __end_of_ADCC_SetADTIInterruptHandler:
 27301                           	opt callstack 0
 27302                           
 27303 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 27304 ;; Defined at:
 27305 ;;		line 323 in file "mcc_generated_files/adcc.c"
 27306 ;; Parameters:    Size  Location     Type
 27307 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27308 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 27309 ;; Auto vars:     Size  Location     Type
 27310 ;;		None
 27311 ;; Return value:  Size  Location     Type
 27312 ;;                  1  [STACK] void 
 27313 ;; Registers used:
 27314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27315 ;; Tracked objects:
 27316 ;;		On entry : 6/0
 27317 ;;		On exit  : 0/0
 27318 ;;		Unchanged: 0/0
 27319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27324 ;;Total ram usage:        0 bytes
 27325 ;; Hardware stack levels used:    1
 27326 ;; Hardware stack levels required when called:   15
 27327 ;; This function calls:
 27328 ;;		Nothing
 27329 ;; This function is called by:
 27330 ;;		_ADCC_Initialize
 27331 ;;		_start_adc_scan
 27332 ;; This function uses a reentrant model
 27333 ;;
 27334                           
 27335                           	psect	text125
 27336  01993E                     __ptext125:
 27337                           	opt callstack 0
 27338  01993E                     _ADCC_SetADIInterruptHandler:
 27339                           	opt callstack 14
 27340                           
 27341                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 27342                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27343                           
 27344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27345                           ;incstack = 0
 27346  01993E  50E1               	movf	fsr1l,w,c
 27347  019940  0FFD               	addlw	-3
 27348  019942  6ED9               	movwf	fsr2l,c
 27349  019944  50E2               	movf	fsr1h,w,c
 27350  019946  6EDA               	movwf	fsr2h,c
 27351  019948  0EFF               	movlw	255
 27352  01994A  22DA               	addwfc	fsr2h,f,c
 27353  01994C  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 27354  019952  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 27355  019958  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 27356                           
 27357                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27358  01995E  52E5               	movf	postdec1,f,c
 27359  019960  52E5               	movf	postdec1,f,c
 27360  019962  52E5               	movf	postdec1,f,c
 27361  019964  0012               	return		;funcret
 27362  019966                     __end_of_ADCC_SetADIInterruptHandler:
 27363                           	opt callstack 0
 27364                           
 27365 ;; *************** function _INT1_ISR *****************
 27366 ;; Defined at:
 27367 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 27368 ;; Parameters:    Size  Location     Type
 27369 ;;		None
 27370 ;; Auto vars:     Size  Location     Type
 27371 ;;		None
 27372 ;; Return value:  Size  Location     Type
 27373 ;;                  1    wreg      void 
 27374 ;; Registers used:
 27375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 27376 ;; Tracked objects:
 27377 ;;		On entry : 0/0
 27378 ;;		On exit  : 0/0
 27379 ;;		Unchanged: 0/0
 27380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27385 ;;Total ram usage:        4 bytes
 27386 ;; Hardware stack levels used:    1
 27387 ;; Hardware stack levels required when called:    5
 27388 ;; This function calls:
 27389 ;;		_INT1_CallBack
 27390 ;; This function is called by:
 27391 ;;		Interrupt level 1
 27392 ;; This function uses a non-reentrant model
 27393 ;;
 27394                           
 27395                           	psect	text126
 27396  019424                     __ptext126:
 27397                           	opt callstack 0
 27398  019424                     _INT1_ISR:
 27399                           	opt callstack 12
 27400                           
 27401                           ;incstack = 0
 27402  019424  006F FF60  F03E    	movff	status,??_INT1_ISR
 27403  01942A  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 27404  019430  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 27405  019436  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 27406  01943C  EE16  F061         	lfsr	1,___intlo_sp
 27407                           
 27408                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 27409  019440  0139               	movlb	57	; () banked
 27410  019442  91A5               	bcf	165,0,b	;volatile
 27411                           
 27412                           ; BSR set to: 57
 27413                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 27414  019444  EC28  F0CD         	call	_INT1_CallBack	;wreg free
 27415  019448  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 27416  01944E  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 27417  019454  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 27418  01945A  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 27419  019460  0011               	retfie		f
 27420  019462                     __end_of_INT1_ISR:
 27421                           	opt callstack 0
 27422                           
 27423 ;; *************** function _INT1_CallBack *****************
 27424 ;; Defined at:
 27425 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 27426 ;; Parameters:    Size  Location     Type
 27427 ;;		None
 27428 ;; Auto vars:     Size  Location     Type
 27429 ;;		None
 27430 ;; Return value:  Size  Location     Type
 27431 ;;                  1  [STACK] void 
 27432 ;; Registers used:
 27433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 27434 ;; Tracked objects:
 27435 ;;		On entry : 3F/39
 27436 ;;		On exit  : 0/0
 27437 ;;		Unchanged: 0/0
 27438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27443 ;;Total ram usage:        0 bytes
 27444 ;; Hardware stack levels used:    1
 27445 ;; Hardware stack levels required when called:    4
 27446 ;; This function calls:
 27447 ;;		Absolute function
 27448 ;;		_INT1_DefaultInterruptHandler
 27449 ;;		_switch_handler
 27450 ;; This function is called by:
 27451 ;;		_INT1_ISR
 27452 ;; This function uses a reentrant model
 27453 ;;
 27454                           
 27455                           	psect	text127
 27456  019A50                     __ptext127:
 27457                           	opt callstack 0
 27458  019A50                     _INT1_CallBack:
 27459                           	opt callstack 12
 27460                           
 27461                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 27462                           
 27463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27464                           ;incstack = 0
 27465  019A50  0100               	movlb	0	; () banked
 27466  019A52  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 27467  019A54  11C2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 27468  019A56  11C3               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 27469  019A58  B4D8               	btfsc	status,2,c
 27470  019A5A  0012               	return	
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 27474  019A5C  D801               	call	u875_28
 27475  019A5E  0012               	return	
 27476  019A60                     u875_28:
 27477  019A60  0005               	push	
 27478  019A62  6EFA               	movwf	pclath,c
 27479  019A64  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 27480  019A66  6EFD               	movwf	tosl,c
 27481  019A68  51C2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 27482  019A6A  6EFE               	movwf	tosh,c
 27483  019A6C  51C3               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 27484  019A6E  6EFF               	movwf	tosu,c
 27485  019A70  50FA               	movf	pclath,w,c
 27486  019A72  0012               	return		;indir
 27487  019A74                     __end_of_INT1_CallBack:
 27488                           	opt callstack 0
 27489                           
 27490 ;; *************** function _INT1_DefaultInterruptHandler *****************
 27491 ;; Defined at:
 27492 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 27493 ;; Parameters:    Size  Location     Type
 27494 ;;		None
 27495 ;; Auto vars:     Size  Location     Type
 27496 ;;		None
 27497 ;; Return value:  Size  Location     Type
 27498 ;;                  1  [STACK] void 
 27499 ;; Registers used:
 27500 ;;		None
 27501 ;; Tracked objects:
 27502 ;;		On entry : 3F/0
 27503 ;;		On exit  : 0/0
 27504 ;;		Unchanged: 0/0
 27505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27510 ;;Total ram usage:        0 bytes
 27511 ;; Hardware stack levels used:    1
 27512 ;; Hardware stack levels required when called:    3
 27513 ;; This function calls:
 27514 ;;		Nothing
 27515 ;; This function is called by:
 27516 ;;		_EXT_INT_Initialize
 27517 ;;		_INT1_CallBack
 27518 ;; This function uses a reentrant model
 27519 ;;
 27520                           
 27521                           	psect	text128
 27522  019DB2                     __ptext128:
 27523                           	opt callstack 0
 27524  019DB2                     _INT1_DefaultInterruptHandler:
 27525                           	opt callstack 12
 27526                           
 27527                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27528                           
 27529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27530                           ;incstack = 0
 27531  019DB2  0012               	return		;funcret
 27532  019DB4                     __end_of_INT1_DefaultInterruptHandler:
 27533                           	opt callstack 0
 27534                           
 27535 ;; *************** function _switch_handler *****************
 27536 ;; Defined at:
 27537 ;;		line 58 in file "dio.c"
 27538 ;; Parameters:    Size  Location     Type
 27539 ;;		None
 27540 ;; Auto vars:     Size  Location     Type
 27541 ;;  i               1  [STACK] unsigned char 
 27542 ;;  sw_value        1  [STACK] unsigned char 
 27543 ;; Return value:  Size  Location     Type
 27544 ;;                  1  [STACK] void 
 27545 ;; Registers used:
 27546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 27547 ;; Tracked objects:
 27548 ;;		On entry : 3F/0
 27549 ;;		On exit  : 0/0
 27550 ;;		Unchanged: 0/0
 27551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27556 ;;Total ram usage:        0 bytes
 27557 ;; Hardware stack levels used:    1
 27558 ;; Hardware stack levels required when called:    3
 27559 ;; This function calls:
 27560 ;;		Nothing
 27561 ;; This function is called by:
 27562 ;;		_start_switch_handler
 27563 ;;		_INT1_CallBack
 27564 ;; This function uses a reentrant model
 27565 ;;
 27566                           
 27567                           	psect	text129
 27568  01762E                     __ptext129:
 27569                           	opt callstack 0
 27570  01762E                     _switch_handler:
 27571                           	opt callstack 0
 27572                           
 27573                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27574  01762E  52E6               	movf	postinc1,f,c
 27575  017630  52E6               	movf	postinc1,f,c
 27576                           
 27577                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 27578                           ;stkvar	_i @ sp[(-2)+0]
 27579                           
 27580                           ;incstack = 0
 27581  017632  0EFE               	movlw	-2
 27582  017634  6AE3               	clrf	plusw1,c
 27583  017636  9EBD               	bcf	189,7,c	;volatile
 27584                           
 27585                           ;dio.c: 72:  __nop();
 27586  017638  F000               	nop	
 27587                           
 27588                           ;dio.c: 73:  __nop();
 27589  01763A  F000               	nop	
 27590                           
 27591                           ;dio.c: 74:  __nop();
 27592  01763C  F000               	nop	
 27593  01763E  D019               	goto	l9514
 27594  017640                     l9502:
 27595                           
 27596                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 27597  017640  A6CF               	btfss	207,3,c	;volatile
 27598  017642  D011               	goto	u853_20
 27599  017644  D00D               	goto	u853_21
 27600  017646                     u850_28:
 27601                           
 27602                           ;stkvar	_sw_value @ sp[(-2)+1]
 27603  017646  0EFF               	movlw	-1
 27604  017648  0060  F033  FFE3   	movff	btemp+11,plusw1
 27605                           
 27606                           ;dio.c: 80:    break;
 27607  01764E  D027               	goto	l9516
 27608  017650                     l9504:
 27609                           
 27610                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 27611  017650  A4CF               	btfss	207,2,c	;volatile
 27612  017652  D009               	goto	u853_20
 27613  017654  D005               	goto	u853_21
 27614  017656                     l9506:
 27615                           
 27616                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 27617  017656  A2CF               	btfss	207,1,c	;volatile
 27618  017658  D006               	goto	u853_20
 27619  01765A  D002               	goto	u853_21
 27620  01765C                     l9508:
 27621                           
 27622                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 27623  01765C  A0CF               	btfss	207,0,c	;volatile
 27624  01765E  D003               	goto	u853_20
 27625  017660                     u853_21:
 27626  017660  6A0C               	clrf	(btemp+11)^0,c
 27627  017662  2A0C               	incf	(btemp+11)^0,f,c
 27628  017664  D7F0               	goto	u850_28
 27629  017666                     u853_20:
 27630  017666  6A0C               	clrf	(btemp+11)^0,c
 27631  017668  D7EE               	goto	u850_28
 27632  01766A                     l9510:
 27633                           
 27634                           ;dio.c: 91:    sw_value = 1;
 27635                           ;stkvar	_sw_value @ sp[(-2)+1]
 27636  01766A  0EFF               	movlw	-1
 27637  01766C  6AE3               	clrf	plusw1,c
 27638  01766E  2AE3               	incf	plusw1,f,c
 27639                           
 27640                           ;dio.c: 92:    break;
 27641  017670  D016               	goto	l9516
 27642  017672                     l9514:
 27643                           
 27644                           ;stkvar	_i @ sp[(-2)+0]
 27645  017672  0EFE               	movlw	-2
 27646  017674  50E3               	movf	plusw1,w,c
 27647  017676  6E0B               	movwf	(btemp+10)^0,c
 27648  017678  6A0C               	clrf	(btemp+11)^0,c
 27649                           
 27650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27651                           ; Switch size 1, requested type "simple"
 27652                           ; Number of cases is 1, Range of values is 0 to 0
 27653                           ; switch strategies available:
 27654                           ; Name         Instructions Cycles
 27655                           ; simple_byte            4     3 (average)
 27656                           ;	Chosen strategy is simple_byte
 27657  01767A  500C               	movf	(btemp+11)^0,w,c
 27658  01767C  0A00               	xorlw	0	; case 0
 27659  01767E  A4D8               	btfss	status,2,c
 27660  017680  D7F4               	goto	l9510
 27661                           
 27662                           ; Switch size 1, requested type "simple"
 27663                           ; Number of cases is 4, Range of values is 0 to 3
 27664                           ; switch strategies available:
 27665                           ; Name         Instructions Cycles
 27666                           ; simple_byte           13     7 (average)
 27667                           ;	Chosen strategy is simple_byte
 27668  017682  500B               	movf	(btemp+10)^0,w,c
 27669  017684  0A00               	xorlw	0	; case 0
 27670  017686  B4D8               	btfsc	status,2,c
 27671  017688  D7E9               	goto	l9508
 27672  01768A  0A01               	xorlw	1	; case 1
 27673  01768C  B4D8               	btfsc	status,2,c
 27674  01768E  D7E3               	goto	l9506
 27675  017690  0A03               	xorlw	3	; case 2
 27676  017692  B4D8               	btfsc	status,2,c
 27677  017694  D7DD               	goto	l9504
 27678  017696  0A01               	xorlw	1	; case 3
 27679  017698  B4D8               	btfsc	status,2,c
 27680  01769A  D7D2               	goto	l9502
 27681  01769C  D7E6               	goto	l9510
 27682  01769E                     l9516:
 27683                           
 27684                           ;dio.c: 96:   if (sw_value) {
 27685                           ;stkvar	_sw_value @ sp[(-2)+1]
 27686  01769E  0EFF               	movlw	-1
 27687  0176A0  50E3               	movf	plusw1,w,c
 27688  0176A2  B4D8               	btfsc	status,2,c
 27689  0176A4  D014               	goto	l9522
 27690                           
 27691                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 27692                           ;stkvar	_i @ sp[(-2)+0]
 27693  0176A6  0EFE               	movlw	-2
 27694  0176A8  50E3               	movf	plusw1,w,c
 27695  0176AA  0D05               	mullw	5
 27696  0176AC  50F3               	movf	243,w,c
 27697  0176AE  0F60               	addlw	low _S
 27698  0176B0  6ED9               	movwf	fsr2l,c
 27699  0176B2  6ADA               	clrf	fsr2h,c
 27700  0176B4  04DE               	decf	postinc2,w,c
 27701  0176B6  A4D8               	btfss	status,2,c
 27702  0176B8  D041               	goto	l9530
 27703                           
 27704                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 27705                           ;stkvar	_i @ sp[(-2)+0]
 27706  0176BA  0EFE               	movlw	-2
 27707  0176BC  50E3               	movf	plusw1,w,c
 27708  0176BE  0D05               	mullw	5
 27709  0176C0  50F3               	movf	243,w,c
 27710  0176C2  0F60               	addlw	low _S
 27711  0176C4  6ED9               	movwf	fsr2l,c
 27712  0176C6  6ADA               	clrf	fsr2h,c
 27713  0176C8  0E00               	movlw	0
 27714  0176CA  6EDF               	movwf	indf2,c
 27715  0176CC  D037               	goto	l9530
 27716  0176CE                     l9522:
 27717                           
 27718                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 27719                           ;stkvar	_i @ sp[(-2)+0]
 27720  0176CE  0EFE               	movlw	-2
 27721  0176D0  50E3               	movf	plusw1,w,c
 27722  0176D2  0D05               	mullw	5
 27723  0176D4  50F3               	movf	243,w,c
 27724  0176D6  0F60               	addlw	low _S
 27725  0176D8  6ED9               	movwf	fsr2l,c
 27726  0176DA  6ADA               	clrf	fsr2h,c
 27727  0176DC  50DF               	movf	indf2,w,c
 27728  0176DE  A4D8               	btfss	status,2,c
 27729  0176E0  D02D               	goto	l9530
 27730                           
 27731                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 27732                           ;stkvar	_i @ sp[(-2)+0]
 27733  0176E2  0EFE               	movlw	-2
 27734  0176E4  50E3               	movf	plusw1,w,c
 27735  0176E6  0D05               	mullw	5
 27736  0176E8  50F3               	movf	243,w,c
 27737  0176EA  0F60               	addlw	low _S
 27738  0176EC  6ED9               	movwf	fsr2l,c
 27739  0176EE  6ADA               	clrf	fsr2h,c
 27740  0176F0  0E01               	movlw	1
 27741  0176F2  6EDF               	movwf	indf2,c
 27742                           
 27743                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 27744  0176F4  EE20  F2B8         	lfsr	2,_V+184	;volatile
 27745                           
 27746                           ;stkvar	_i @ sp[(-2)+0]
 27747  0176F8  0EFE               	movlw	-2
 27748  0176FA  50E3               	movf	plusw1,w,c
 27749  0176FC  0D05               	mullw	5
 27750  0176FE  50F3               	movf	243,w,c
 27751  017700  0F61               	addlw	low (_S+1)
 27752  017702  6EE9               	movwf	fsr0l,c
 27753  017704  6AEA               	clrf	fsr0h,c
 27754  017706  006F FF7B FFEE     	movff	postinc2,postinc0
 27755  01770C  006F FF7B FFEE     	movff	postinc2,postinc0
 27756  017712  006F FF7B FFEE     	movff	postinc2,postinc0
 27757  017718  006F FF7B FFEE     	movff	postinc2,postinc0
 27758                           
 27759                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 27760                           ;stkvar	_i @ sp[(-2)+0]
 27761  01771E  0EFE               	movlw	-2
 27762  017720  006F FF8C  F00C    	movff	plusw1,btemp+11
 27763  017726  0E01               	movlw	1
 27764  017728  6E0B               	movwf	(btemp+10)^0,c
 27765  01772A  2A0C               	incf	(btemp+11)^0,f,c
 27766  01772C  D002               	goto	u857_24
 27767  01772E                     u857_25:
 27768  01772E  90D8               	bcf	status,0,c
 27769  017730  360B               	rlcf	(btemp+10)^0,f,c
 27770  017732                     u857_24:
 27771  017732  2E0C               	decfsz	(btemp+11)^0,f,c
 27772  017734  D7FC               	goto	u857_25
 27773  017736  500B               	movf	(btemp+10)^0,w,c
 27774  017738  0100               	movlb	0	; () banked
 27775  01773A  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 27776  01773C                     l9530:
 27777                           
 27778                           ;dio.c: 107:  } while (++i < 4);
 27779                           ;stkvar	_i @ sp[(-2)+0]
 27780  01773C  0EFE               	movlw	-2
 27781  01773E  2AE3               	incf	plusw1,f,c
 27782  017740  0EFE               	movlw	-2
 27783  017742  006F FF8C  F001    	movff	plusw1,btemp
 27784  017748  0E03               	movlw	3
 27785  01774A  6401               	cpfsgt	btemp^0,c
 27786  01774C  D792               	goto	l9514
 27787                           
 27788                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 27789  01774E  8EBD               	bsf	189,7,c	;volatile
 27790                           
 27791                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27792  017750  52E5               	movf	postdec1,f,c
 27793  017752  52E5               	movf	postdec1,f,c
 27794  017754  0012               	return		;funcret
 27795  017756                     __end_of_switch_handler:
 27796                           	opt callstack 0
 27797                           
 27798 ;; *************** function _TMR5_ISR *****************
 27799 ;; Defined at:
 27800 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 27801 ;; Parameters:    Size  Location     Type
 27802 ;;		None
 27803 ;; Auto vars:     Size  Location     Type
 27804 ;;		None
 27805 ;; Return value:  Size  Location     Type
 27806 ;;                  1    wreg      void 
 27807 ;; Registers used:
 27808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 27809 ;; Tracked objects:
 27810 ;;		On entry : 0/0
 27811 ;;		On exit  : 0/0
 27812 ;;		Unchanged: 0/0
 27813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27816 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27818 ;;Total ram usage:        4 bytes
 27819 ;; Hardware stack levels used:    1
 27820 ;; Hardware stack levels required when called:    5
 27821 ;; This function calls:
 27822 ;;		_TMR5_CallBack
 27823 ;;		_TMR5_WriteTimer
 27824 ;; This function is called by:
 27825 ;;		Interrupt level 1
 27826 ;; This function uses a non-reentrant model
 27827 ;;
 27828                           
 27829                           	psect	text130
 27830  018F10                     __ptext130:
 27831                           	opt callstack 0
 27832  018F10                     _TMR5_ISR:
 27833                           	opt callstack 12
 27834                           
 27835                           ;incstack = 0
 27836  018F10  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 27837  018F16  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 27838  018F1C  EE16  F061         	lfsr	1,___intlo_sp
 27839                           
 27840                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 27841  018F20  0139               	movlb	57	; () banked
 27842  018F22  9DA8               	bcf	168,6,b	;volatile
 27843                           
 27844                           ; BSR set to: 57
 27845                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 27846  018F24  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 27847  018F2A  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 27848  018F30  ECD2  F0C9         	call	_TMR5_WriteTimer	;wreg free
 27849                           
 27850                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 27851  018F34  0102               	movlb	2	; () banked
 27852  018F36  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 27853  018F38  6E42               	movwf	??_TMR5_ISR^0,c
 27854  018F3A  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 27855  018F3C  0E05               	movlw	5
 27856  018F3E  2642               	addwf	??_TMR5_ISR^0,f,c
 27857  018F40  0E00               	movlw	0
 27858  018F42  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 27859  018F44  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 27860  018F46  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 27861  018F48  5042               	movf	??_TMR5_ISR^0,w,c
 27862  018F4A  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 27863  018F4C  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 27864  018F4E  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 27865  018F50  A0D8               	btfss	status,0,c
 27866  018F52  D004               	goto	i1l1017
 27867                           
 27868                           ; BSR set to: 2
 27869                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 27870  018F54  EC3A  F0CD         	call	_TMR5_CallBack	;wreg free
 27871                           
 27872                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 27873  018F58  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 27874  018F5A  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 27875  018F5C                     i1l1017:
 27876  018F5C  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 27877  018F62  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 27878  018F68  0011               	retfie		f
 27879  018F6A                     __end_of_TMR5_ISR:
 27880                           	opt callstack 0
 27881                           
 27882 ;; *************** function _TMR5_WriteTimer *****************
 27883 ;; Defined at:
 27884 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 27885 ;; Parameters:    Size  Location     Type
 27886 ;;  timerVal        2  [STACK] unsigned short 
 27887 ;; Auto vars:     Size  Location     Type
 27888 ;;		None
 27889 ;; Return value:  Size  Location     Type
 27890 ;;                  1  [STACK] void 
 27891 ;; Registers used:
 27892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27893 ;; Tracked objects:
 27894 ;;		On entry : 3F/39
 27895 ;;		On exit  : 0/0
 27896 ;;		Unchanged: 0/0
 27897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27902 ;;Total ram usage:        0 bytes
 27903 ;; Hardware stack levels used:    1
 27904 ;; Hardware stack levels required when called:    3
 27905 ;; This function calls:
 27906 ;;		Nothing
 27907 ;; This function is called by:
 27908 ;;		_TMR5_ISR
 27909 ;; This function uses a reentrant model
 27910 ;;
 27911                           
 27912                           	psect	text131
 27913  0193A4                     __ptext131:
 27914                           	opt callstack 0
 27915  0193A4                     _TMR5_WriteTimer:
 27916                           	opt callstack 13
 27917                           
 27918                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 27919                           
 27920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27921                           ;incstack = 0
 27922  0193A4  A49A               	btfss	154,2,c	;volatile
 27923  0193A6  D00F               	goto	l9694
 27924                           
 27925                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 27926  0193A8  909A               	bcf	154,0,c	;volatile
 27927                           
 27928                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 27929                           ;stkvar	_timerVal @ sp[(0)+-2]
 27930  0193AA  0EFF               	movlw	255
 27931  0193AC  24E1               	addwf	fsr1l,w,c
 27932  0193AE  6ED9               	movwf	fsr2l,c
 27933  0193B0  0EFF               	movlw	255
 27934  0193B2  20E2               	addwfc	fsr1h,w,c
 27935  0193B4  6EDA               	movwf	fsr2h,c
 27936  0193B6  50DF               	movf	indf2,w,c
 27937  0193B8  6E99               	movwf	153,c	;volatile
 27938                           
 27939                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 27940                           ;stkvar	_timerVal @ sp[(0)+-2]
 27941  0193BA  0EFE               	movlw	-2
 27942  0193BC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27943                           
 27944                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 27945  0193C2  809A               	bsf	154,0,c	;volatile
 27946                           
 27947                           ;mcc_generated_files/tmr5.c: 142:  } else {
 27948  0193C4  D00C               	goto	l1000
 27949  0193C6                     l9694:
 27950                           
 27951                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 27952                           ;stkvar	_timerVal @ sp[(0)+-2]
 27953  0193C6  0EFF               	movlw	255
 27954  0193C8  24E1               	addwf	fsr1l,w,c
 27955  0193CA  6ED9               	movwf	fsr2l,c
 27956  0193CC  0EFF               	movlw	255
 27957  0193CE  20E2               	addwfc	fsr1h,w,c
 27958  0193D0  6EDA               	movwf	fsr2h,c
 27959  0193D2  50DF               	movf	indf2,w,c
 27960  0193D4  6E99               	movwf	153,c	;volatile
 27961                           
 27962                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 27963                           ;stkvar	_timerVal @ sp[(0)+-2]
 27964  0193D6  0EFE               	movlw	-2
 27965  0193D8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27966  0193DE                     l1000:
 27967                           
 27968                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27969  0193DE  52E5               	movf	postdec1,f,c
 27970  0193E0  52E5               	movf	postdec1,f,c
 27971  0193E2  0012               	return		;funcret
 27972  0193E4                     __end_of_TMR5_WriteTimer:
 27973                           	opt callstack 0
 27974                           
 27975 ;; *************** function _TMR5_CallBack *****************
 27976 ;; Defined at:
 27977 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;		None
 27980 ;; Auto vars:     Size  Location     Type
 27981 ;;		None
 27982 ;; Return value:  Size  Location     Type
 27983 ;;                  1  [STACK] void 
 27984 ;; Registers used:
 27985 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 27986 ;; Tracked objects:
 27987 ;;		On entry : 3F/2
 27988 ;;		On exit  : 0/0
 27989 ;;		Unchanged: 0/0
 27990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27995 ;;Total ram usage:        0 bytes
 27996 ;; Hardware stack levels used:    1
 27997 ;; Hardware stack levels required when called:    4
 27998 ;; This function calls:
 27999 ;;		Absolute function
 28000 ;;		_TMR5_DefaultInterruptHandler
 28001 ;; This function is called by:
 28002 ;;		_TMR5_ISR
 28003 ;; This function uses a reentrant model
 28004 ;;
 28005                           
 28006                           	psect	text132
 28007  019A74                     __ptext132:
 28008                           	opt callstack 0
 28009  019A74                     _TMR5_CallBack:
 28010                           	opt callstack 12
 28011                           
 28012                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 28013                           
 28014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28015                           ;incstack = 0
 28016  019A74  0100               	movlb	0	; () banked
 28017  019A76  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 28018  019A78  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 28019  019A7A  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 28020  019A7C  B4D8               	btfsc	status,2,c
 28021  019A7E  0012               	return	
 28022                           
 28023                           ; BSR set to: 0
 28024                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 28025  019A80  D801               	call	u884_28
 28026  019A82  0012               	return	
 28027  019A84                     u884_28:
 28028  019A84  0005               	push	
 28029  019A86  6EFA               	movwf	pclath,c
 28030  019A88  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 28031  019A8A  6EFD               	movwf	tosl,c
 28032  019A8C  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 28033  019A8E  6EFE               	movwf	tosh,c
 28034  019A90  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 28035  019A92  6EFF               	movwf	tosu,c
 28036  019A94  50FA               	movf	pclath,w,c
 28037  019A96  0012               	return		;indir
 28038  019A98                     __end_of_TMR5_CallBack:
 28039                           	opt callstack 0
 28040                           
 28041 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 28042 ;; Defined at:
 28043 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 28044 ;; Parameters:    Size  Location     Type
 28045 ;;		None
 28046 ;; Auto vars:     Size  Location     Type
 28047 ;;		None
 28048 ;; Return value:  Size  Location     Type
 28049 ;;                  1  [STACK] void 
 28050 ;; Registers used:
 28051 ;;		wreg, status,2, status,0, btemp+11
 28052 ;; Tracked objects:
 28053 ;;		On entry : 3F/0
 28054 ;;		On exit  : 3F/2
 28055 ;;		Unchanged: 0/0
 28056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28061 ;;Total ram usage:        0 bytes
 28062 ;; Hardware stack levels used:    1
 28063 ;; Hardware stack levels required when called:    3
 28064 ;; This function calls:
 28065 ;;		Nothing
 28066 ;; This function is called by:
 28067 ;;		_TMR5_Initialize
 28068 ;;		_TMR5_CallBack
 28069 ;; This function uses a reentrant model
 28070 ;;
 28071                           
 28072                           	psect	text133
 28073  019966                     __ptext133:
 28074                           	opt callstack 0
 28075  019966                     _TMR5_DefaultInterruptHandler:
 28076                           	opt callstack 12
 28077                           
 28078                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 28079                           
 28080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28081                           ;incstack = 0
 28082  019966  A0BE               	btfss	190,0,c	;volatile
 28083  019968  D002               	goto	u827_20
 28084  01996A  0E01               	movlw	1
 28085  01996C  D001               	goto	u827_26
 28086  01996E                     u827_20:
 28087  01996E  0E00               	movlw	0
 28088  019970                     u827_26:
 28089  019970  0AFF               	xorlw	255
 28090  019972  6E0C               	movwf	(btemp+11)^0,c
 28091  019974  50BE               	movf	190,w,c	;volatile
 28092  019976  180C               	xorwf	(btemp+11)^0,w,c
 28093  019978  0BFE               	andlw	-2
 28094  01997A  180C               	xorwf	(btemp+11)^0,w,c
 28095  01997C  6EBE               	movwf	190,c	;volatile
 28096                           
 28097                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 28098  01997E  0E01               	movlw	1
 28099  019980  0102               	movlb	2	; () banked
 28100  019982  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 28101  019984  0E00               	movlw	0
 28102  019986  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 28103  019988  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 28104  01998A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 28105                           
 28106                           ; BSR set to: 2
 28107                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28108  01998C  0012               	return		;funcret
 28109  01998E                     __end_of_TMR5_DefaultInterruptHandler:
 28110                           	opt callstack 0
 28111                           
 28112 ;; *************** function _TMR3_ISR *****************
 28113 ;; Defined at:
 28114 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 28115 ;; Parameters:    Size  Location     Type
 28116 ;;		None
 28117 ;; Auto vars:     Size  Location     Type
 28118 ;;		None
 28119 ;; Return value:  Size  Location     Type
 28120 ;;                  1    wreg      void 
 28121 ;; Registers used:
 28122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 28123 ;; Tracked objects:
 28124 ;;		On entry : 0/0
 28125 ;;		On exit  : 3F/0
 28126 ;;		Unchanged: 0/0
 28127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28130 ;;      Temps:          0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28131 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28132 ;;Total ram usage:       25 bytes
 28133 ;; Hardware stack levels used:    1
 28134 ;; Hardware stack levels required when called:   14
 28135 ;; This function calls:
 28136 ;;		_TMR3_CallBack
 28137 ;;		_TMR3_WriteTimer
 28138 ;; This function is called by:
 28139 ;;		Interrupt level 1
 28140 ;; This function uses a non-reentrant model
 28141 ;;
 28142                           
 28143                           	psect	text134
 28144  017250                     __ptext134:
 28145                           	opt callstack 0
 28146  017250                     _TMR3_ISR:
 28147                           	opt callstack 3
 28148                           
 28149                           ; BSR set to: 2
 28150                           ;incstack = 0
 28151  017250  006F FF60  F2BC    	movff	status,??_TMR3_ISR
 28152  017256  006F FFD8  F2BD    	movff	tblptrl,??_TMR3_ISR+1
 28153  01725C  006F FFDC  F2BE    	movff	tblptrh,??_TMR3_ISR+2
 28154  017262  006F FFE0  F2BF    	movff	tblptru,??_TMR3_ISR+3
 28155  017268  006F FFD4  F2C0    	movff	tablat,??_TMR3_ISR+4
 28156  01726E  0060  F004  F2C1   	movff	btemp,??_TMR3_ISR+5
 28157  017274  0060  F008  F2C2   	movff	btemp+1,??_TMR3_ISR+6
 28158  01727A  0060  F00C  F2C3   	movff	btemp+2,??_TMR3_ISR+7
 28159  017280  0060  F010  F2C4   	movff	btemp+3,??_TMR3_ISR+8
 28160  017286  0060  F014  F2C5   	movff	btemp+4,??_TMR3_ISR+9
 28161  01728C  0060  F018  F2C6   	movff	btemp+5,??_TMR3_ISR+10
 28162  017292  0060  F01C  F2C7   	movff	btemp+6,??_TMR3_ISR+11
 28163  017298  0060  F020  F2C8   	movff	btemp+7,??_TMR3_ISR+12
 28164  01729E  0060  F024  F2C9   	movff	btemp+8,??_TMR3_ISR+13
 28165  0172A4  0060  F028  F2CA   	movff	btemp+9,??_TMR3_ISR+14
 28166  0172AA  0060  F02C  F2CB   	movff	btemp+10,??_TMR3_ISR+15
 28167  0172B0  0060  F030  F2CC   	movff	btemp+11,??_TMR3_ISR+16
 28168  0172B6  0060  F044  F2CD   	movff	btemp+16,??_TMR3_ISR+17
 28169  0172BC  0060  F048  F2CE   	movff	btemp+17,??_TMR3_ISR+18
 28170  0172C2  0060  F04C  F2CF   	movff	btemp+18,??_TMR3_ISR+19
 28171  0172C8  0060  F050  F2D0   	movff	btemp+19,??_TMR3_ISR+20
 28172  0172CE  0060  F054  F2D1   	movff	btemp+20,??_TMR3_ISR+21
 28173  0172D4  0060  F058  F2D2   	movff	btemp+21,??_TMR3_ISR+22
 28174  0172DA  0060  F05C  F2D3   	movff	btemp+22,??_TMR3_ISR+23
 28175  0172E0  0060  F060  F2D4   	movff	btemp+23,??_TMR3_ISR+24
 28176  0172E6  EE16  F061         	lfsr	1,___intlo_sp
 28177                           
 28178                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 28179  0172EA  0139               	movlb	57	; () banked
 28180  0172EC  9DA6               	bcf	166,6,b	;volatile
 28181                           
 28182                           ; BSR set to: 57
 28183                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 28184  0172EE  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 28185  0172F4  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 28186  0172FA  ECF2  F0C9         	call	_TMR3_WriteTimer	;wreg free
 28187                           
 28188                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 28189  0172FE  0100               	movlb	0	; () banked
 28190  017300  4BC9               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 28191  017302  2BCA               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 28192  017304  51CA               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 28193  017306  E104               	bnz	i1u1115_20
 28194  017308  0E28               	movlw	40
 28195  01730A  5DC9               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 28196  01730C  A0D8               	btfss	status,0,c
 28197  01730E  D005               	goto	i1l1205
 28198  017310                     i1u1115_20:
 28199                           
 28200                           ; BSR set to: 0
 28201                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 28202  017310  EC4C  F0CD         	call	_TMR3_CallBack	;wreg free
 28203                           
 28204                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 28205  017314  0100               	movlb	0	; () banked
 28206  017316  6BC9               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 28207  017318  6BCA               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 28208  01731A                     i1l1205:
 28209                           
 28210                           ; BSR set to: 0
 28211  01731A  0060  FB50  F018   	movff	??_TMR3_ISR+24,btemp+23
 28212  017320  0060  FB4C  F017   	movff	??_TMR3_ISR+23,btemp+22
 28213  017326  0060  FB48  F016   	movff	??_TMR3_ISR+22,btemp+21
 28214  01732C  0060  FB44  F015   	movff	??_TMR3_ISR+21,btemp+20
 28215  017332  0060  FB40  F014   	movff	??_TMR3_ISR+20,btemp+19
 28216  017338  0060  FB3C  F013   	movff	??_TMR3_ISR+19,btemp+18
 28217  01733E  0060  FB38  F012   	movff	??_TMR3_ISR+18,btemp+17
 28218  017344  0060  FB34  F011   	movff	??_TMR3_ISR+17,btemp+16
 28219  01734A  0060  FB30  F00C   	movff	??_TMR3_ISR+16,btemp+11
 28220  017350  0060  FB2C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 28221  017356  0060  FB28  F00A   	movff	??_TMR3_ISR+14,btemp+9
 28222  01735C  0060  FB24  F009   	movff	??_TMR3_ISR+13,btemp+8
 28223  017362  0060  FB20  F008   	movff	??_TMR3_ISR+12,btemp+7
 28224  017368  0060  FB1C  F007   	movff	??_TMR3_ISR+11,btemp+6
 28225  01736E  0060  FB18  F006   	movff	??_TMR3_ISR+10,btemp+5
 28226  017374  0060  FB14  F005   	movff	??_TMR3_ISR+9,btemp+4
 28227  01737A  0060  FB10  F004   	movff	??_TMR3_ISR+8,btemp+3
 28228  017380  0060  FB0C  F003   	movff	??_TMR3_ISR+7,btemp+2
 28229  017386  0060  FB08  F002   	movff	??_TMR3_ISR+6,btemp+1
 28230  01738C  0060  FB04  F001   	movff	??_TMR3_ISR+5,btemp
 28231  017392  0060  FB03  FFF5   	movff	??_TMR3_ISR+4,tablat
 28232  017398  0060  FAFF  FFF8   	movff	??_TMR3_ISR+3,tblptru
 28233  01739E  0060  FAFB  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 28234  0173A4  0060  FAF7  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 28235  0173AA  0060  FAF3  FFD8   	movff	??_TMR3_ISR,status
 28236  0173B0  0011               	retfie		f
 28237  0173B2                     __end_of_TMR3_ISR:
 28238                           	opt callstack 0
 28239                           
 28240 ;; *************** function _TMR3_WriteTimer *****************
 28241 ;; Defined at:
 28242 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 28243 ;; Parameters:    Size  Location     Type
 28244 ;;  timerVal        2  [STACK] unsigned short 
 28245 ;; Auto vars:     Size  Location     Type
 28246 ;;		None
 28247 ;; Return value:  Size  Location     Type
 28248 ;;                  1  [STACK] void 
 28249 ;; Registers used:
 28250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 28251 ;; Tracked objects:
 28252 ;;		On entry : 3F/39
 28253 ;;		On exit  : 0/0
 28254 ;;		Unchanged: 0/0
 28255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28260 ;;Total ram usage:        0 bytes
 28261 ;; Hardware stack levels used:    1
 28262 ;; Hardware stack levels required when called:    3
 28263 ;; This function calls:
 28264 ;;		Nothing
 28265 ;; This function is called by:
 28266 ;;		_TMR3_ISR
 28267 ;; This function uses a reentrant model
 28268 ;;
 28269                           
 28270                           	psect	text135
 28271  0193E4                     __ptext135:
 28272                           	opt callstack 0
 28273  0193E4                     _TMR3_WriteTimer:
 28274                           	opt callstack 13
 28275                           
 28276                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 28277                           
 28278                           ; BSR set to: 0
 28279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28280                           ;incstack = 0
 28281  0193E4  A4A6               	btfss	166,2,c	;volatile
 28282  0193E6  D00F               	goto	l9712
 28283                           
 28284                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 28285  0193E8  90A6               	bcf	166,0,c	;volatile
 28286                           
 28287                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 28288                           ;stkvar	_timerVal @ sp[(0)+-2]
 28289  0193EA  0EFF               	movlw	255
 28290  0193EC  24E1               	addwf	fsr1l,w,c
 28291  0193EE  6ED9               	movwf	fsr2l,c
 28292  0193F0  0EFF               	movlw	255
 28293  0193F2  20E2               	addwfc	fsr1h,w,c
 28294  0193F4  6EDA               	movwf	fsr2h,c
 28295  0193F6  50DF               	movf	indf2,w,c
 28296  0193F8  6EA5               	movwf	165,c	;volatile
 28297                           
 28298                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 28299                           ;stkvar	_timerVal @ sp[(0)+-2]
 28300  0193FA  0EFE               	movlw	-2
 28301  0193FC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 28302                           
 28303                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 28304  019402  80A6               	bsf	166,0,c	;volatile
 28305                           
 28306                           ;mcc_generated_files/tmr3.c: 141:     }
 28307  019404  D00C               	goto	l1188
 28308  019406                     l9712:
 28309                           
 28310                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 28311                           ;stkvar	_timerVal @ sp[(0)+-2]
 28312  019406  0EFF               	movlw	255
 28313  019408  24E1               	addwf	fsr1l,w,c
 28314  01940A  6ED9               	movwf	fsr2l,c
 28315  01940C  0EFF               	movlw	255
 28316  01940E  20E2               	addwfc	fsr1h,w,c
 28317  019410  6EDA               	movwf	fsr2h,c
 28318  019412  50DF               	movf	indf2,w,c
 28319  019414  6EA5               	movwf	165,c	;volatile
 28320                           
 28321                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 28322                           ;stkvar	_timerVal @ sp[(0)+-2]
 28323  019416  0EFE               	movlw	-2
 28324  019418  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 28325  01941E                     l1188:
 28326                           
 28327                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28328  01941E  52E5               	movf	postdec1,f,c
 28329  019420  52E5               	movf	postdec1,f,c
 28330  019422  0012               	return		;funcret
 28331  019424                     __end_of_TMR3_WriteTimer:
 28332                           	opt callstack 0
 28333                           
 28334 ;; *************** function _TMR3_CallBack *****************
 28335 ;; Defined at:
 28336 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 28337 ;; Parameters:    Size  Location     Type
 28338 ;;		None
 28339 ;; Auto vars:     Size  Location     Type
 28340 ;;		None
 28341 ;; Return value:  Size  Location     Type
 28342 ;;                  1  [STACK] void 
 28343 ;; Registers used:
 28344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 28345 ;; Tracked objects:
 28346 ;;		On entry : 3F/0
 28347 ;;		On exit  : 0/0
 28348 ;;		Unchanged: 0/0
 28349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28354 ;;Total ram usage:        0 bytes
 28355 ;; Hardware stack levels used:    1
 28356 ;; Hardware stack levels required when called:   13
 28357 ;; This function calls:
 28358 ;;		Absolute function
 28359 ;;		_TMR3_DefaultInterruptHandler
 28360 ;;		_calc_bsoc
 28361 ;; This function is called by:
 28362 ;;		_TMR3_ISR
 28363 ;; This function uses a reentrant model
 28364 ;;
 28365                           
 28366                           	psect	text136
 28367  019A98                     __ptext136:
 28368                           	opt callstack 0
 28369  019A98                     _TMR3_CallBack:
 28370                           	opt callstack 3
 28371                           
 28372                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 28373                           
 28374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28375                           ;incstack = 0
 28376  019A98  0100               	movlb	0	; () banked
 28377  019A9A  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 28378  019A9C  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 28379  019A9E  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 28380  019AA0  B4D8               	btfsc	status,2,c
 28381  019AA2  0012               	return	
 28382                           
 28383                           ; BSR set to: 0
 28384                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 28385  019AA4  D801               	call	u1090_28
 28386  019AA6  0012               	return	
 28387  019AA8                     u1090_28:
 28388  019AA8  0005               	push	
 28389  019AAA  6EFA               	movwf	pclath,c
 28390  019AAC  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 28391  019AAE  6EFD               	movwf	tosl,c
 28392  019AB0  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 28393  019AB2  6EFE               	movwf	tosh,c
 28394  019AB4  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 28395  019AB6  6EFF               	movwf	tosu,c
 28396  019AB8  50FA               	movf	pclath,w,c
 28397  019ABA  0012               	return		;indir
 28398  019ABC                     __end_of_TMR3_CallBack:
 28399                           	opt callstack 0
 28400                           
 28401 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 28402 ;; Defined at:
 28403 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 28404 ;; Parameters:    Size  Location     Type
 28405 ;;		None
 28406 ;; Auto vars:     Size  Location     Type
 28407 ;;		None
 28408 ;; Return value:  Size  Location     Type
 28409 ;;                  1  [STACK] void 
 28410 ;; Registers used:
 28411 ;;		None
 28412 ;; Tracked objects:
 28413 ;;		On entry : 3F/0
 28414 ;;		On exit  : 0/0
 28415 ;;		Unchanged: 0/0
 28416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28421 ;;Total ram usage:        0 bytes
 28422 ;; Hardware stack levels used:    1
 28423 ;; Hardware stack levels required when called:    3
 28424 ;; This function calls:
 28425 ;;		Nothing
 28426 ;; This function is called by:
 28427 ;;		_TMR3_Initialize
 28428 ;;		_TMR3_CallBack
 28429 ;; This function uses a reentrant model
 28430 ;;
 28431                           
 28432                           	psect	text137
 28433  019DB4                     __ptext137:
 28434                           	opt callstack 0
 28435  019DB4                     _TMR3_DefaultInterruptHandler:
 28436                           	opt callstack 12
 28437                           
 28438                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28439                           
 28440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28441                           ;incstack = 0
 28442  019DB4  0012               	return		;funcret
 28443  019DB6                     __end_of_TMR3_DefaultInterruptHandler:
 28444                           	opt callstack 0
 28445                           
 28446 ;; *************** function _calc_bsoc *****************
 28447 ;; Defined at:
 28448 ;;		line 39 in file "bsoc.c"
 28449 ;; Parameters:    Size  Location     Type
 28450 ;;		None
 28451 ;; Auto vars:     Size  Location     Type
 28452 ;;  log_ptr         2  [STACK] PTR unsigned char 
 28453 ;;		 -> port_data(512), 
 28454 ;;  temp            2  [STACK] unsigned short 
 28455 ;; Return value:  Size  Location     Type
 28456 ;;                  1  [STACK] void 
 28457 ;; Registers used:
 28458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 28459 ;; Tracked objects:
 28460 ;;		On entry : 3F/0
 28461 ;;		On exit  : 3F/1
 28462 ;;		Unchanged: 0/0
 28463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28468 ;;Total ram usage:        0 bytes
 28469 ;; Hardware stack levels used:    1
 28470 ;; Hardware stack levels required when called:   12
 28471 ;; This function calls:
 28472 ;;		_Volts_to_SOC
 28473 ;;		___fladd
 28474 ;;		___fldiv
 28475 ;;		___flge
 28476 ;;		___flmul
 28477 ;;		___flneg
 28478 ;;		___fltol
 28479 ;;		___xxtofl
 28480 ;;		_port_data_dma_ptr
 28481 ;;		_send_port_data_dma
 28482 ;;		_sprintf
 28483 ;;		_strlen
 28484 ;; This function is called by:
 28485 ;;		_init_bsoc
 28486 ;;		_TMR3_CallBack
 28487 ;; This function uses a reentrant model
 28488 ;;
 28489                           
 28490                           	psect	text138
 28491  01361E                     __ptext138:
 28492                           	opt callstack 0
 28493  01361E                     _calc_bsoc:
 28494                           	opt callstack 0
 28495                           
 28496                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28497  01361E  52E6               	movf	postinc1,f,c
 28498  013620  52E6               	movf	postinc1,f,c
 28499  013622  52E6               	movf	postinc1,f,c
 28500  013624  52E6               	movf	postinc1,f,c
 28501                           
 28502                           ;incstack = 0
 28503                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  uint16_t temp;;bsoc.c: 44:  do { LATEbits.
      +                          LATE1 = 1; } while(0);
 28504  013626  82BE               	bsf	190,1,c	;volatile
 28505                           
 28506                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 28507  013628  0E00               	movlw	0
 28508  01362A  6EE6               	movwf	postinc1,c
 28509  01362C  0E00               	movlw	0
 28510  01362E  6EE6               	movwf	postinc1,c
 28511  013630  0E61               	movlw	97
 28512  013632  6EE6               	movwf	postinc1,c
 28513  013634  0E45               	movlw	69
 28514  013636  6EE6               	movwf	postinc1,c
 28515  013638  0060  F513  FFE6   	movff	_C+68,postinc1
 28516  01363E  0060  F517  FFE6   	movff	_C+69,postinc1
 28517  013644  0060  F51B  FFE6   	movff	_C+70,postinc1
 28518  01364A  0060  F51F  FFE6   	movff	_C+71,postinc1
 28519  013650  ECA9  F09E         	call	___fldiv	;wreg free
 28520  013654  0060  F007  FFE6   	movff	btemp,postinc1
 28521  01365A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28522  013660  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28523  013666  0060  F013  FFE6   	movff	btemp+3,postinc1
 28524  01366C  0060  F603  FFE6   	movff	_C+128,postinc1
 28525  013672  0060  F607  FFE6   	movff	_C+129,postinc1
 28526  013678  0060  F60B  FFE6   	movff	_C+130,postinc1
 28527  01367E  0060  F60F  FFE6   	movff	_C+131,postinc1
 28528  013684  EC31  F097         	call	___fladd	;wreg free
 28529  013688  0060  F004  F180   	movff	btemp,_C+128	;volatile
 28530  01368E  0060  F008  F181   	movff	btemp+1,_C+129	;volatile
 28531  013694  0060  F00C  F182   	movff	btemp+2,_C+130	;volatile
 28532  01369A  0060  F010  F183   	movff	btemp+3,_C+131	;volatile
 28533                           
 28534                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 28535  0136A0  0060  F603  FFE6   	movff	_C+128,postinc1
 28536  0136A6  0060  F607  FFE6   	movff	_C+129,postinc1
 28537  0136AC  0060  F60B  FFE6   	movff	_C+130,postinc1
 28538  0136B2  0060  F60F  FFE6   	movff	_C+131,postinc1
 28539  0136B8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 28540  0136BE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 28541  0136C4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 28542  0136CA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 28543  0136D0  EC76  F0B8         	call	___flge	;wreg free
 28544  0136D4  B001               	btfsc	btemp& (0+255),0,c
 28545  0136D6  D008               	goto	l11448
 28546                           
 28547                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 28548  0136D8  C17C  F180         	movff	_C+124,_C+128	;volatile
 28549  0136DC  C17D  F181         	movff	_C+125,_C+129	;volatile
 28550  0136E0  C17E  F182         	movff	_C+126,_C+130	;volatile
 28551  0136E4  C17F  F183         	movff	_C+127,_C+131	;volatile
 28552  0136E8                     l11448:
 28553                           
 28554                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 28555  0136E8  0ECD               	movlw	205
 28556  0136EA  6EE6               	movwf	postinc1,c
 28557  0136EC  0ECC               	movlw	204
 28558  0136EE  6EE6               	movwf	postinc1,c
 28559  0136F0  0ECC               	movlw	204
 28560  0136F2  6EE6               	movwf	postinc1,c
 28561  0136F4  0E3D               	movlw	61
 28562  0136F6  6EE6               	movwf	postinc1,c
 28563  0136F8  0060  F603  FFE6   	movff	_C+128,postinc1
 28564  0136FE  0060  F607  FFE6   	movff	_C+129,postinc1
 28565  013704  0060  F60B  FFE6   	movff	_C+130,postinc1
 28566  01370A  0060  F60F  FFE6   	movff	_C+131,postinc1
 28567  013710  EC76  F0B8         	call	___flge	;wreg free
 28568  013714  B001               	btfsc	btemp& (0+255),0,c
 28569  013716  D009               	goto	l11452
 28570                           
 28571                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 28572  013718  0ECD               	movlw	205
 28573  01371A  0101               	movlb	1	; () banked
 28574  01371C  6F80               	movwf	(_C+128)& (0+255),b	;volatile
 28575  01371E  0ECC               	movlw	204
 28576  013720  6F81               	movwf	(_C+129)& (0+255),b	;volatile
 28577  013722  0ECC               	movlw	204
 28578  013724  6F82               	movwf	(_C+130)& (0+255),b	;volatile
 28579  013726  0E3D               	movlw	61
 28580  013728  6F83               	movwf	(_C+131)& (0+255),b	;volatile
 28581  01372A                     l11452:
 28582                           
 28583                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 28584  01372A  0E00               	movlw	0
 28585  01372C  6EE6               	movwf	postinc1,c
 28586  01372E  0E00               	movlw	0
 28587  013730  6EE6               	movwf	postinc1,c
 28588  013732  0E61               	movlw	97
 28589  013734  6EE6               	movwf	postinc1,c
 28590  013736  0E45               	movlw	69
 28591  013738  6EE6               	movwf	postinc1,c
 28592  01373A  0060  F523  FFE6   	movff	_C+72,postinc1
 28593  013740  0060  F527  FFE6   	movff	_C+73,postinc1
 28594  013746  0060  F52B  FFE6   	movff	_C+74,postinc1
 28595  01374C  0060  F52F  FFE6   	movff	_C+75,postinc1
 28596  013752  ECA9  F09E         	call	___fldiv	;wreg free
 28597  013756  0060  F007  FFE6   	movff	btemp,postinc1
 28598  01375C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28599  013762  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28600  013768  0060  F013  FFE6   	movff	btemp+3,postinc1
 28601  01376E  0060  F613  FFE6   	movff	_C+132,postinc1
 28602  013774  0060  F617  FFE6   	movff	_C+133,postinc1
 28603  01377A  0060  F61B  FFE6   	movff	_C+134,postinc1
 28604  013780  0060  F61F  FFE6   	movff	_C+135,postinc1
 28605  013786  EC31  F097         	call	___fladd	;wreg free
 28606  01378A  0060  F004  F184   	movff	btemp,_C+132	;volatile
 28607  013790  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 28608  013796  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 28609  01379C  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 28610                           
 28611                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 28612  0137A2  0E00               	movlw	0
 28613  0137A4  6EE6               	movwf	postinc1,c
 28614  0137A6  0E00               	movlw	0
 28615  0137A8  6EE6               	movwf	postinc1,c
 28616  0137AA  0E61               	movlw	97
 28617  0137AC  6EE6               	movwf	postinc1,c
 28618  0137AE  0E45               	movlw	69
 28619  0137B0  6EE6               	movwf	postinc1,c
 28620  0137B2  0060  F5C3  FFE6   	movff	_C+112,postinc1
 28621  0137B8  0060  F5C7  FFE6   	movff	_C+113,postinc1
 28622  0137BE  0060  F5CB  FFE6   	movff	_C+114,postinc1
 28623  0137C4  0060  F5CF  FFE6   	movff	_C+115,postinc1
 28624  0137CA  ECA9  F09E         	call	___fldiv	;wreg free
 28625  0137CE  0060  F007  FFE6   	movff	btemp,postinc1
 28626  0137D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28627  0137DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28628  0137E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 28629  0137E6  0060  F653  FFE6   	movff	_C+148,postinc1
 28630  0137EC  0060  F657  FFE6   	movff	_C+149,postinc1
 28631  0137F2  0060  F65B  FFE6   	movff	_C+150,postinc1
 28632  0137F8  0060  F65F  FFE6   	movff	_C+151,postinc1
 28633  0137FE  EC31  F097         	call	___fladd	;wreg free
 28634  013802  0060  F004  F194   	movff	btemp,_C+148	;volatile
 28635  013808  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 28636  01380E  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 28637  013814  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 28638                           
 28639                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 28640  01381A  0E00               	movlw	0
 28641  01381C  6EE6               	movwf	postinc1,c
 28642  01381E  0E00               	movlw	0
 28643  013820  6EE6               	movwf	postinc1,c
 28644  013822  0E61               	movlw	97
 28645  013824  6EE6               	movwf	postinc1,c
 28646  013826  0E45               	movlw	69
 28647  013828  6EE6               	movwf	postinc1,c
 28648  01382A  0060  F5B3  FFE6   	movff	_C+108,postinc1
 28649  013830  0060  F5B7  FFE6   	movff	_C+109,postinc1
 28650  013836  0060  F5BB  FFE6   	movff	_C+110,postinc1
 28651  01383C  0060  F5BF  FFE6   	movff	_C+111,postinc1
 28652  013842  ECA9  F09E         	call	___fldiv	;wreg free
 28653  013846  0060  F007  FFE6   	movff	btemp,postinc1
 28654  01384C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28655  013852  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28656  013858  0060  F013  FFE6   	movff	btemp+3,postinc1
 28657  01385E  0060  F663  FFE6   	movff	_C+152,postinc1
 28658  013864  0060  F667  FFE6   	movff	_C+153,postinc1
 28659  01386A  0060  F66B  FFE6   	movff	_C+154,postinc1
 28660  013870  0060  F66F  FFE6   	movff	_C+155,postinc1
 28661  013876  EC31  F097         	call	___fladd	;wreg free
 28662  01387A  0060  F004  F198   	movff	btemp,_C+152	;volatile
 28663  013880  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 28664  013886  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 28665  01388C  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 28666                           
 28667                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 28668  013892  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28669  013898  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28670  01389E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28671  0138A4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28672  0138AA  0E00               	movlw	0
 28673  0138AC  6EE6               	movwf	postinc1,c
 28674  0138AE  0E00               	movlw	0
 28675  0138B0  6EE6               	movwf	postinc1,c
 28676  0138B2  0E00               	movlw	0
 28677  0138B4  6EE6               	movwf	postinc1,c
 28678  0138B6  0E00               	movlw	0
 28679  0138B8  6EE6               	movwf	postinc1,c
 28680  0138BA  EC76  F0B8         	call	___flge	;wreg free
 28681  0138BE  B001               	btfsc	btemp& (0+255),0,c
 28682  0138C0  D03C               	goto	l11462
 28683                           
 28684                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 28685  0138C2  0E00               	movlw	0
 28686  0138C4  6EE6               	movwf	postinc1,c
 28687  0138C6  0E00               	movlw	0
 28688  0138C8  6EE6               	movwf	postinc1,c
 28689  0138CA  0E61               	movlw	97
 28690  0138CC  6EE6               	movwf	postinc1,c
 28691  0138CE  0E45               	movlw	69
 28692  0138D0  6EE6               	movwf	postinc1,c
 28693  0138D2  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28694  0138D8  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28695  0138DE  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28696  0138E4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28697  0138EA  ECA9  F09E         	call	___fldiv	;wreg free
 28698  0138EE  0060  F007  FFE6   	movff	btemp,postinc1
 28699  0138F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28700  0138FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28701  013900  0060  F013  FFE6   	movff	btemp+3,postinc1
 28702  013906  0060  F633  FFE6   	movff	_C+140,postinc1
 28703  01390C  0060  F637  FFE6   	movff	_C+141,postinc1
 28704  013912  0060  F63B  FFE6   	movff	_C+142,postinc1
 28705  013918  0060  F63F  FFE6   	movff	_C+143,postinc1
 28706  01391E  EC31  F097         	call	___fladd	;wreg free
 28707  013922  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 28708  013928  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 28709  01392E  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 28710  013934  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 28711  01393A                     l11462:
 28712                           
 28713                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 28714  01393A  0101               	movlb	1	; () banked
 28715  01393C  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 28716  01393E  D03C               	goto	l11466
 28717                           
 28718                           ; BSR set to: 1
 28719                           ;bsoc.c: 58:   C.bkwo += (C.p_bat / 3600.0);
 28720  013940  0E00               	movlw	0
 28721  013942  6EE6               	movwf	postinc1,c
 28722  013944  0E00               	movlw	0
 28723  013946  6EE6               	movwf	postinc1,c
 28724  013948  0E61               	movlw	97
 28725  01394A  6EE6               	movwf	postinc1,c
 28726  01394C  0E45               	movlw	69
 28727  01394E  6EE6               	movwf	postinc1,c
 28728  013950  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28729  013956  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28730  01395C  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28731  013962  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28732  013968  ECA9  F09E         	call	___fldiv	;wreg free
 28733  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 28734  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28735  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28736  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28737  013984  0060  F643  FFE6   	movff	_C+144,postinc1
 28738  01398A  0060  F647  FFE6   	movff	_C+145,postinc1
 28739  013990  0060  F64B  FFE6   	movff	_C+146,postinc1
 28740  013996  0060  F64F  FFE6   	movff	_C+147,postinc1
 28741  01399C  EC31  F097         	call	___fladd	;wreg free
 28742  0139A0  0060  F004  F190   	movff	btemp,_C+144	;volatile
 28743  0139A6  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 28744  0139AC  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 28745  0139B2  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 28746  0139B8                     l11466:
 28747                           
 28748                           ;bsoc.c: 60:  temp = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 28749  0139B8  0E00               	movlw	0
 28750  0139BA  6EE6               	movwf	postinc1,c
 28751  0139BC  0E00               	movlw	0
 28752  0139BE  6EE6               	movwf	postinc1,c
 28753  0139C0  0EC8               	movlw	200
 28754  0139C2  6EE6               	movwf	postinc1,c
 28755  0139C4  0E42               	movlw	66
 28756  0139C6  6EE6               	movwf	postinc1,c
 28757  0139C8  0060  F5F3  FFE6   	movff	_C+124,postinc1
 28758  0139CE  0060  F5F7  FFE6   	movff	_C+125,postinc1
 28759  0139D4  0060  F5FB  FFE6   	movff	_C+126,postinc1
 28760  0139DA  0060  F5FF  FFE6   	movff	_C+127,postinc1
 28761  0139E0  0060  F603  FFE6   	movff	_C+128,postinc1
 28762  0139E6  0060  F607  FFE6   	movff	_C+129,postinc1
 28763  0139EC  0060  F60B  FFE6   	movff	_C+130,postinc1
 28764  0139F2  0060  F60F  FFE6   	movff	_C+131,postinc1
 28765  0139F8  ECA9  F09E         	call	___fldiv	;wreg free
 28766  0139FC  0060  F007  FFE6   	movff	btemp,postinc1
 28767  013A02  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28768  013A08  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28769  013A0E  0060  F013  FFE6   	movff	btemp+3,postinc1
 28770  013A14  EC1C  F093         	call	___flmul	;wreg free
 28771  013A18  0060  F007  FFE6   	movff	btemp,postinc1
 28772  013A1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28773  013A24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28774  013A2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28775  013A30  EC05  F0B7         	call	___fltol	;wreg free
 28776  013A34  0060  F004  F00B   	movff	btemp,btemp+10
 28777  013A3A  0060  F008  F00C   	movff	btemp+1,btemp+11
 28778  013A40  0E01               	movlw	1
 28779  013A42  260B               	addwf	(btemp+10)^0,f,c
 28780  013A44  0E00               	movlw	0
 28781  013A46  220C               	addwfc	(btemp+11)^0,f,c
 28782                           
 28783                           ;stkvar	_temp @ sp[(-4)+2]
 28784  013A48  0EFE               	movlw	-2
 28785  013A4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28786  013A50  0EFF               	movlw	-1
 28787  013A52  0060  F033  FFE3   	movff	btemp+11,plusw1
 28788                           
 28789                           ;bsoc.c: 61:  C.soc = (Volts_to_SOC((uint32_t) C.v_bat * 1000.0) + temp) / 2;
 28790                           ;stkvar	_temp @ sp[(-4)+2]
 28791  013A58  0E00               	movlw	0
 28792  013A5A  6EE6               	movwf	postinc1,c
 28793  013A5C  0E00               	movlw	0
 28794  013A5E  6EE6               	movwf	postinc1,c
 28795  013A60  0E7A               	movlw	122
 28796  013A62  6EE6               	movwf	postinc1,c
 28797  013A64  0E44               	movlw	68
 28798  013A66  6EE6               	movwf	postinc1,c
 28799  013A68  0060  F553  FFE6   	movff	_C+84,postinc1
 28800  013A6E  0060  F557  FFE6   	movff	_C+85,postinc1
 28801  013A74  0060  F55B  FFE6   	movff	_C+86,postinc1
 28802  013A7A  0060  F55F  FFE6   	movff	_C+87,postinc1
 28803  013A80  EC05  F0B7         	call	___fltol	;wreg free
 28804  013A84  0060  F007  FFE6   	movff	btemp,postinc1
 28805  013A8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28806  013A90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28807  013A96  0060  F013  FFE6   	movff	btemp+3,postinc1
 28808  013A9C  0E00               	movlw	0
 28809  013A9E  6EE6               	movwf	postinc1,c
 28810  013AA0  EC74  F0B2         	call	___xxtofl	;wreg free
 28811  013AA4  0060  F007  FFE6   	movff	btemp,postinc1
 28812  013AAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28813  013AB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28814  013AB6  0060  F013  FFE6   	movff	btemp+3,postinc1
 28815  013ABC  EC1C  F093         	call	___flmul	;wreg free
 28816  013AC0  0060  F007  FFE6   	movff	btemp,postinc1
 28817  013AC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28818  013ACC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28819  013AD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28820  013AD8  EC05  F0B7         	call	___fltol	;wreg free
 28821  013ADC  0060  F007  FFE6   	movff	btemp,postinc1
 28822  013AE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28823  013AE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28824  013AEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28825  013AF4  EC6B  F0C3         	call	_Volts_to_SOC	;wreg free
 28826  013AF8  0EFE               	movlw	-2
 28827  013AFA  50E3               	movf	plusw1,w,c
 28828  013AFC  2601               	addwf	btemp^0,f,c
 28829  013AFE  0EFF               	movlw	-1
 28830  013B00  50E3               	movf	plusw1,w,c
 28831  013B02  2202               	addwfc	(btemp+1)^0,f,c
 28832  013B04  90D8               	bcf	status,0,c
 28833  013B06  3002               	rrcf	(btemp+1)^0,w,c
 28834  013B08  6E0C               	movwf	(btemp+11)^0,c
 28835  013B0A  3001               	rrcf	btemp^0,w,c
 28836  013B0C  6E0B               	movwf	(btemp+10)^0,c
 28837  013B0E  0060  F02C  F19E   	movff	btemp+10,_C+158	;volatile
 28838  013B14  0060  F030  F19F   	movff	btemp+11,_C+159	;volatile
 28839                           
 28840                           ;bsoc.c: 62:  if (C.soc > 100)
 28841  013B1A  0101               	movlb	1	; () banked
 28842  013B1C  519F               	movf	(_C+159)& (0+255),w,b	;volatile
 28843  013B1E  E104               	bnz	u1083_20
 28844  013B20  0E65               	movlw	101
 28845  013B22  5D9E               	subwf	(_C+158)& (0+255),w,b	;volatile
 28846  013B24  A0D8               	btfss	status,0,c
 28847  013B26  D004               	goto	l11474
 28848  013B28                     u1083_20:
 28849                           
 28850                           ; BSR set to: 1
 28851                           ;bsoc.c: 63:   C.soc = 100;
 28852  013B28  0E00               	movlw	0
 28853  013B2A  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
 28854  013B2C  0E64               	movlw	100
 28855  013B2E  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
 28856  013B30                     l11474:
 28857                           
 28858                           ; BSR set to: 1
 28859                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 28860  013B30  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 28861  013B32  D043               	goto	l11478
 28862                           
 28863                           ; BSR set to: 1
 28864                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 28865  013B34  0060  F513  FFE6   	movff	_C+68,postinc1
 28866  013B3A  0060  F517  FFE6   	movff	_C+69,postinc1
 28867  013B40  0060  F51B  FFE6   	movff	_C+70,postinc1
 28868  013B46  0060  F51F  FFE6   	movff	_C+71,postinc1
 28869  013B4C  0060  F603  FFE6   	movff	_C+128,postinc1
 28870  013B52  0060  F607  FFE6   	movff	_C+129,postinc1
 28871  013B58  0060  F60B  FFE6   	movff	_C+130,postinc1
 28872  013B5E  0060  F60F  FFE6   	movff	_C+131,postinc1
 28873  013B64  ECA9  F09E         	call	___fldiv	;wreg free
 28874  013B68  0060  F007  FFE6   	movff	btemp,postinc1
 28875  013B6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28876  013B74  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28877  013B7A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28878  013B80  EC7C  F0C8         	call	___flneg	;wreg free
 28879  013B84  0060  F007  FFE6   	movff	btemp,postinc1
 28880  013B8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28881  013B90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28882  013B96  0060  F013  FFE6   	movff	btemp+3,postinc1
 28883  013B9C  EC05  F0B7         	call	___fltol	;wreg free
 28884  013BA0  0060  F004  F00B   	movff	btemp,btemp+10
 28885  013BA6  0060  F008  F00C   	movff	btemp+1,btemp+11
 28886  013BAC  0060  F02C  F19C   	movff	btemp+10,_C+156	;volatile
 28887  013BB2  0060  F030  F19D   	movff	btemp+11,_C+157	;volatile
 28888                           
 28889                           ;bsoc.c: 67:  } else {
 28890  013BB8  D004               	goto	l11480
 28891  013BBA                     l11478:
 28892                           
 28893                           ; BSR set to: 1
 28894                           ;bsoc.c: 68:   C.runtime = 120;
 28895  013BBA  0E00               	movlw	0
 28896  013BBC  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28897  013BBE  0E78               	movlw	120
 28898  013BC0  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28899  013BC2                     l11480:
 28900                           
 28901                           ;bsoc.c: 70:  if (C.runtime > 120)
 28902  013BC2  0101               	movlb	1	; () banked
 28903  013BC4  519D               	movf	(_C+157)& (0+255),w,b	;volatile
 28904  013BC6  E104               	bnz	u1085_20
 28905  013BC8  0E79               	movlw	121
 28906  013BCA  5D9C               	subwf	(_C+156)& (0+255),w,b	;volatile
 28907  013BCC  A0D8               	btfss	status,0,c
 28908  013BCE  D004               	goto	l11484
 28909  013BD0                     u1085_20:
 28910                           
 28911                           ; BSR set to: 1
 28912                           ;bsoc.c: 71:   C.runtime = 120;
 28913  013BD0  0E00               	movlw	0
 28914  013BD2  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
 28915  013BD4  0E78               	movlw	120
 28916  013BD6  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
 28917  013BD8                     l11484:
 28918                           
 28919                           ; BSR set to: 1
 28920                           ;bsoc.c: 73:  V.lowint_count++;
 28921  013BD8  0E01               	movlw	1
 28922  013BDA  0102               	movlb	2	; () banked
 28923  013BDC  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 28924  013BDE  0E00               	movlw	0
 28925  013BE0  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 28926  013BE2  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 28927  013BE4  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 28928                           
 28929                           ; BSR set to: 2
 28930                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 28931  013BE6  EC9E  F0CE         	call	_port_data_dma_ptr	;wreg free
 28932                           
 28933                           ;stkvar	_log_ptr @ sp[(-4)+0]
 28934  013BEA  0EFD               	movlw	-3
 28935  013BEC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 28936  013BF2  0EFC               	movlw	-4
 28937  013BF4  0060  F007  FFE3   	movff	btemp,plusw1
 28938                           
 28939                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f,%4.3f
      +                          ,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 28940  013BFA  0060  F673  FFE6   	movff	_C+156,postinc1
 28941  013C00  0060  F677  FFE6   	movff	_C+157,postinc1
 28942  013C06  0060  F67B  FFE6   	movff	_C+158,postinc1
 28943  013C0C  0060  F67F  FFE6   	movff	_C+159,postinc1
 28944  013C12  0060  F613  FFE6   	movff	_C+132,postinc1
 28945  013C18  0060  F617  FFE6   	movff	_C+133,postinc1
 28946  013C1E  0060  F61B  FFE6   	movff	_C+134,postinc1
 28947  013C24  0060  F61F  FFE6   	movff	_C+135,postinc1
 28948  013C2A  0060  F603  FFE6   	movff	_C+128,postinc1
 28949  013C30  0060  F607  FFE6   	movff	_C+129,postinc1
 28950  013C36  0060  F60B  FFE6   	movff	_C+130,postinc1
 28951  013C3C  0060  F60F  FFE6   	movff	_C+131,postinc1
 28952  013C42  0060  F5B3  FFE6   	movff	_C+108,postinc1
 28953  013C48  0060  F5B7  FFE6   	movff	_C+109,postinc1
 28954  013C4E  0060  F5BB  FFE6   	movff	_C+110,postinc1
 28955  013C54  0060  F5BF  FFE6   	movff	_C+111,postinc1
 28956  013C5A  0060  F5A3  FFE6   	movff	_C+104,postinc1
 28957  013C60  0060  F5A7  FFE6   	movff	_C+105,postinc1
 28958  013C66  0060  F5AB  FFE6   	movff	_C+106,postinc1
 28959  013C6C  0060  F5AF  FFE6   	movff	_C+107,postinc1
 28960  013C72  0060  F5C3  FFE6   	movff	_C+112,postinc1
 28961  013C78  0060  F5C7  FFE6   	movff	_C+113,postinc1
 28962  013C7E  0060  F5CB  FFE6   	movff	_C+114,postinc1
 28963  013C84  0060  F5CF  FFE6   	movff	_C+115,postinc1
 28964  013C8A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 28965  013C90  0060  F5D7  FFE6   	movff	_C+117,postinc1
 28966  013C96  0060  F5DB  FFE6   	movff	_C+118,postinc1
 28967  013C9C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 28968  013CA2  0060  F593  FFE6   	movff	_C+100,postinc1
 28969  013CA8  0060  F597  FFE6   	movff	_C+101,postinc1
 28970  013CAE  0060  F59B  FFE6   	movff	_C+102,postinc1
 28971  013CB4  0060  F59F  FFE6   	movff	_C+103,postinc1
 28972  013CBA  0060  F533  FFE6   	movff	_C+76,postinc1
 28973  013CC0  0060  F537  FFE6   	movff	_C+77,postinc1
 28974  013CC6  0060  F53B  FFE6   	movff	_C+78,postinc1
 28975  013CCC  0060  F53F  FFE6   	movff	_C+79,postinc1
 28976  013CD2  0060  F543  FFE6   	movff	_C+80,postinc1
 28977  013CD8  0060  F547  FFE6   	movff	_C+81,postinc1
 28978  013CDE  0060  F54B  FFE6   	movff	_C+82,postinc1
 28979  013CE4  0060  F54F  FFE6   	movff	_C+83,postinc1
 28980  013CEA  0060  F553  FFE6   	movff	_C+84,postinc1
 28981  013CF0  0060  F557  FFE6   	movff	_C+85,postinc1
 28982  013CF6  0060  F55B  FFE6   	movff	_C+86,postinc1
 28983  013CFC  0060  F55F  FFE6   	movff	_C+87,postinc1
 28984  013D02  0EF5               	movlw	low STR_46
 28985  013D04  6EE6               	movwf	postinc1,c
 28986  013D06  0EFD               	movlw	high STR_46
 28987  013D08  6EE6               	movwf	postinc1,c
 28988                           
 28989                           ;stkvar	_log_ptr @ sp[(-50)+0]
 28990  013D0A  0ECE               	movlw	-50
 28991  013D0C  006F FF8F FFE6     	movff	plusw1,postinc1
 28992  013D12  006F FF8F FFE6     	movff	plusw1,postinc1
 28993  013D18  0E30               	movlw	48
 28994  013D1A  6EE6               	movwf	postinc1,c
 28995  013D1C  EC62  F0BE         	call	_sprintf	;wreg free
 28996                           
 28997                           ; BSR set to: 0
 28998                           ;bsoc.c: 79:  send_port_data_dma(strlen((char*) log_ptr));
 28999                           ;stkvar	_log_ptr @ sp[(-4)+0]
 29000  013D20  0EFC               	movlw	-4
 29001  013D22  006F FF8F FFE6     	movff	plusw1,postinc1
 29002  013D28  006F FF8F FFE6     	movff	plusw1,postinc1
 29003  013D2E  ECCE  F0C2         	call	_strlen	;wreg free
 29004  013D32  0060  F007  FFE6   	movff	btemp,postinc1
 29005  013D38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29006  013D3E  EC07  F0C8         	call	_send_port_data_dma	;wreg free
 29007                           
 29008                           ; BSR set to: 59
 29009                           ;bsoc.c: 80:  C.update = 0;
 29010  013D42  0101               	movlb	1	; () banked
 29011  013D44  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 29012                           
 29013                           ; BSR set to: 1
 29014  013D46  92BE               	bcf	190,1,c	;volatile
 29015                           
 29016                           ; BSR set to: 1
 29017                           ; _calc_bsoc: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 29018  013D48  52E5               	movf	postdec1,f,c
 29019  013D4A  52E5               	movf	postdec1,f,c
 29020  013D4C  52E5               	movf	postdec1,f,c
 29021  013D4E  52E5               	movf	postdec1,f,c
 29022  013D50  0012               	return		;funcret
 29023  013D52                     __end_of_calc_bsoc:
 29024                           	opt callstack 0
 29025                           
 29026 ;; *************** function _send_port_data_dma *****************
 29027 ;; Defined at:
 29028 ;;		line 258 in file "eadog.c"
 29029 ;; Parameters:    Size  Location     Type
 29030 ;;  dsize           2  [STACK] unsigned short 
 29031 ;; Auto vars:     Size  Location     Type
 29032 ;;		None
 29033 ;; Return value:  Size  Location     Type
 29034 ;;                  1  [STACK] void 
 29035 ;; Registers used:
 29036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 29037 ;; Tracked objects:
 29038 ;;		On entry : 0/0
 29039 ;;		On exit  : 3F/3B
 29040 ;;		Unchanged: 0/0
 29041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29046 ;;Total ram usage:        0 bytes
 29047 ;; Hardware stack levels used:    1
 29048 ;; Hardware stack levels required when called:    3
 29049 ;; This function calls:
 29050 ;;		Nothing
 29051 ;; This function is called by:
 29052 ;;		_calc_bsoc
 29053 ;; This function uses a reentrant model
 29054 ;;
 29055                           
 29056                           	psect	text139
 29057  01900E                     __ptext139:
 29058                           	opt callstack 0
 29059  01900E                     _send_port_data_dma:
 29060                           	opt callstack 11
 29061                           
 29062                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 29063                           ;stkvar	_dsize @ sp[(0)+-2]
 29064                           
 29065                           ; BSR set to: 1
 29066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29067                           ;incstack = 0
 29068  01900E  0EFE               	movlw	-2
 29069  019010  04E3               	decf	plusw1,w,c
 29070  019012  0EFF               	movlw	-1
 29071  019014  006F FF8C  F001    	movff	plusw1,btemp
 29072  01901A  0E02               	movlw	2
 29073  01901C  5A01               	subwfb	btemp^0,f,c
 29074  01901E  A0D8               	btfss	status,0,c
 29075  019020  D00C               	goto	l8824
 29076                           
 29077                           ;eadog.c: 261:   dsize = 512;
 29078  019022  0E00               	movlw	0
 29079  019024  6E0B               	movwf	(btemp+10)^0,c
 29080  019026  0E02               	movlw	2
 29081  019028  6E0C               	movwf	(btemp+11)^0,c
 29082                           
 29083                           ;stkvar	_dsize @ sp[(0)+-2]
 29084  01902A  0EFE               	movlw	-2
 29085  01902C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29086  019032  0EFF               	movlw	-1
 29087  019034  0060  F033  FFE3   	movff	btemp+11,plusw1
 29088  01903A                     l8824:
 29089                           
 29090                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 29091  01903A  013B               	movlb	59	; () banked
 29092  01903C  9FDC               	bcf	220,7,b	;volatile
 29093                           
 29094                           ; BSR set to: 59
 29095                           ;eadog.c: 264:  DMA2SSZ = dsize;
 29096                           ;stkvar	_dsize @ sp[(0)+-2]
 29097  01903E  0EFE               	movlw	-2
 29098  019040  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 29099  019046  0EFF               	movlw	-1
 29100  019048  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 29101                           
 29102                           ; BSR set to: 59
 29103                           ;eadog.c: 265:  DMA2DSZ = 1;
 29104  01904E  0E00               	movlw	0
 29105  019050  6FCF               	movwf	207,b	;volatile
 29106  019052  0E01               	movlw	1
 29107  019054  6FCE               	movwf	206,b	;volatile
 29108                           
 29109                           ; BSR set to: 59
 29110                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 29111  019056  8FDC               	bsf	220,7,b	;volatile
 29112                           
 29113                           ; BSR set to: 59
 29114                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 29115  019058  8DDC               	bsf	220,6,b	;volatile
 29116                           
 29117                           ; BSR set to: 59
 29118                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 29119  01905A  52E5               	movf	postdec1,f,c
 29120  01905C  52E5               	movf	postdec1,f,c
 29121  01905E  0012               	return		;funcret
 29122  019060                     __end_of_send_port_data_dma:
 29123                           	opt callstack 0
 29124                           
 29125 ;; *************** function _port_data_dma_ptr *****************
 29126 ;; Defined at:
 29127 ;;		line 273 in file "eadog.c"
 29128 ;; Parameters:    Size  Location     Type
 29129 ;;		None
 29130 ;; Auto vars:     Size  Location     Type
 29131 ;;		None
 29132 ;; Return value:  Size  Location     Type
 29133 ;;                  2  [STACK] PTR unsigned char 
 29134 ;; Registers used:
 29135 ;;		wreg, status,2, status,0, btemp, btemp+1
 29136 ;; Tracked objects:
 29137 ;;		On entry : 3F/2
 29138 ;;		On exit  : 0/0
 29139 ;;		Unchanged: 0/0
 29140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29145 ;;Total ram usage:        0 bytes
 29146 ;; Hardware stack levels used:    1
 29147 ;; Hardware stack levels required when called:    3
 29148 ;; This function calls:
 29149 ;;		Nothing
 29150 ;; This function is called by:
 29151 ;;		_calc_bsoc
 29152 ;; This function uses a reentrant model
 29153 ;;
 29154                           
 29155                           	psect	text140
 29156  019D3C                     __ptext140:
 29157                           	opt callstack 0
 29158  019D3C                     _port_data_dma_ptr:
 29159                           	opt callstack 11
 29160                           
 29161                           ;eadog.c: 275:  return port_data;
 29162                           
 29163                           ; BSR set to: 59
 29164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29165                           ;incstack = 0
 29166  019D3C  0EFF               	movlw	low _port_data
 29167  019D3E  6E01               	movwf	btemp^0,c
 29168  019D40  0E05               	movlw	high _port_data
 29169  019D42  6E02               	movwf	(btemp+1)^0,c
 29170                           
 29171                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29172  019D44  0012               	return		;funcret
 29173  019D46                     __end_of_port_data_dma_ptr:
 29174                           	opt callstack 0
 29175                           
 29176 ;; *************** function _INT0_ISR *****************
 29177 ;; Defined at:
 29178 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 29179 ;; Parameters:    Size  Location     Type
 29180 ;;		None
 29181 ;; Auto vars:     Size  Location     Type
 29182 ;;		None
 29183 ;; Return value:  Size  Location     Type
 29184 ;;                  1    wreg      void 
 29185 ;; Registers used:
 29186 ;;		wreg, status,2, status,0, pclath, tosl
 29187 ;; Tracked objects:
 29188 ;;		On entry : 0/0
 29189 ;;		On exit  : 0/0
 29190 ;;		Unchanged: 0/0
 29191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29196 ;;Total ram usage:        0 bytes
 29197 ;; Hardware stack levels used:    1
 29198 ;; Hardware stack levels required when called:    2
 29199 ;; This function calls:
 29200 ;;		_INT0_CallBack
 29201 ;; This function is called by:
 29202 ;;		Interrupt level 2
 29203 ;; This function uses a non-reentrant model
 29204 ;;
 29205                           
 29206                           	psect	text141
 29207  019D14                     __ptext141:
 29208                           	opt callstack 0
 29209  019D14                     _INT0_ISR:
 29210                           	opt callstack 3
 29211                           
 29212                           ;incstack = 0
 29213  019D14  EE14  F0C2         	lfsr	1,___inthi_sp
 29214                           
 29215                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 29216  019D18  0139               	movlb	57	; () banked
 29217  019D1A  91A1               	bcf	161,0,b	;volatile
 29218                           
 29219                           ; BSR set to: 57
 29220                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 29221  019D1C  EC5E  F0CD         	call	_INT0_CallBack	;wreg free
 29222  019D20  0011               	retfie		f
 29223  019D22                     __end_of_INT0_ISR:
 29224                           	opt callstack 0
 29225                           
 29226 ;; *************** function _INT0_CallBack *****************
 29227 ;; Defined at:
 29228 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 29229 ;; Parameters:    Size  Location     Type
 29230 ;;		None
 29231 ;; Auto vars:     Size  Location     Type
 29232 ;;		None
 29233 ;; Return value:  Size  Location     Type
 29234 ;;                  1  [STACK] void 
 29235 ;; Registers used:
 29236 ;;		wreg, status,2, status,0, pclath, tosl
 29237 ;; Tracked objects:
 29238 ;;		On entry : 3F/39
 29239 ;;		On exit  : 0/0
 29240 ;;		Unchanged: 0/0
 29241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29246 ;;Total ram usage:        0 bytes
 29247 ;; Hardware stack levels used:    1
 29248 ;; Hardware stack levels required when called:    1
 29249 ;; This function calls:
 29250 ;;		Absolute function
 29251 ;;		_INT0_DefaultInterruptHandler
 29252 ;; This function is called by:
 29253 ;;		_INT0_ISR
 29254 ;; This function uses a reentrant model
 29255 ;;
 29256                           
 29257                           	psect	text142
 29258  019ABC                     __ptext142:
 29259                           	opt callstack 0
 29260  019ABC                     _INT0_CallBack:
 29261                           	opt callstack 3
 29262                           
 29263                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 29264                           
 29265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29266                           ;incstack = 0
 29267  019ABC  0100               	movlb	0	; () banked
 29268  019ABE  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 29269  019AC0  11C5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 29270  019AC2  11C6               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 29271  019AC4  B4D8               	btfsc	status,2,c
 29272  019AC6  0012               	return	
 29273                           
 29274                           ; BSR set to: 0
 29275                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 29276  019AC8  D801               	call	u873_48
 29277  019ACA  0012               	return	
 29278  019ACC                     u873_48:
 29279  019ACC  0005               	push	
 29280  019ACE  6EFA               	movwf	pclath,c
 29281  019AD0  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 29282  019AD2  6EFD               	movwf	tosl,c
 29283  019AD4  51C5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 29284  019AD6  6EFE               	movwf	tosh,c
 29285  019AD8  51C6               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 29286  019ADA  6EFF               	movwf	tosu,c
 29287  019ADC  50FA               	movf	pclath,w,c
 29288  019ADE  0012               	return		;indir
 29289  019AE0                     __end_of_INT0_CallBack:
 29290                           	opt callstack 0
 29291                           
 29292 ;; *************** function _INT0_DefaultInterruptHandler *****************
 29293 ;; Defined at:
 29294 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 29295 ;; Parameters:    Size  Location     Type
 29296 ;;		None
 29297 ;; Auto vars:     Size  Location     Type
 29298 ;;		None
 29299 ;; Return value:  Size  Location     Type
 29300 ;;                  1  [STACK] void 
 29301 ;; Registers used:
 29302 ;;		None
 29303 ;; Tracked objects:
 29304 ;;		On entry : 3F/0
 29305 ;;		On exit  : 0/0
 29306 ;;		Unchanged: 0/0
 29307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29312 ;;Total ram usage:        0 bytes
 29313 ;; Hardware stack levels used:    1
 29314 ;; This function calls:
 29315 ;;		Nothing
 29316 ;; This function is called by:
 29317 ;;		_EXT_INT_Initialize
 29318 ;;		_INT0_CallBack
 29319 ;; This function uses a reentrant model
 29320 ;;
 29321                           
 29322                           	psect	text143
 29323  019DB6                     __ptext143:
 29324                           	opt callstack 0
 29325  019DB6                     _INT0_DefaultInterruptHandler:
 29326                           	opt callstack 3
 29327                           
 29328                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29329                           
 29330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29331                           ;incstack = 0
 29332  019DB6  0012               	return		;funcret
 29333  019DB8                     __end_of_INT0_DefaultInterruptHandler:
 29334                           	opt callstack 0
 29335                           
 29336 ;; *************** function _Default_ISR *****************
 29337 ;; Defined at:
 29338 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 29339 ;; Parameters:    Size  Location     Type
 29340 ;;		None
 29341 ;; Auto vars:     Size  Location     Type
 29342 ;;		None
 29343 ;; Return value:  Size  Location     Type
 29344 ;;                  1    wreg      void 
 29345 ;; Registers used:
 29346 ;;		None
 29347 ;; Tracked objects:
 29348 ;;		On entry : 0/0
 29349 ;;		On exit  : 0/0
 29350 ;;		Unchanged: 0/0
 29351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29356 ;;Total ram usage:        0 bytes
 29357 ;; Hardware stack levels used:    1
 29358 ;; This function calls:
 29359 ;;		Nothing
 29360 ;; This function is called by:
 29361 ;;		Interrupt level 2
 29362 ;; This function uses a non-reentrant model
 29363 ;;
 29364                           
 29365                           	psect	text144
 29366  019DAC                     __ptext144:
 29367                           	opt callstack 0
 29368  019DAC                     _Default_ISR:
 29369                           	opt callstack 5
 29370                           
 29371                           ;incstack = 0
 29372  019DAC  EE14  F0C2         	lfsr	1,___inthi_sp
 29373  019DB0  0011               	retfie		f
 29374  019DB2                     __end_of_Default_ISR:
 29375                           	opt callstack 0
 29376                           
 29377 ;; *************** function _ADCC_ISR *****************
 29378 ;; Defined at:
 29379 ;;		line 314 in file "mcc_generated_files/adcc.c"
 29380 ;; Parameters:    Size  Location     Type
 29381 ;;		None
 29382 ;; Auto vars:     Size  Location     Type
 29383 ;;		None
 29384 ;; Return value:  Size  Location     Type
 29385 ;;                  1    wreg      void 
 29386 ;; Registers used:
 29387 ;;		wreg, status,2, status,0, pclath, tosl
 29388 ;; Tracked objects:
 29389 ;;		On entry : 0/0
 29390 ;;		On exit  : 0/0
 29391 ;;		Unchanged: 0/0
 29392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29397 ;;Total ram usage:        0 bytes
 29398 ;; Hardware stack levels used:    1
 29399 ;; Hardware stack levels required when called:    1
 29400 ;; This function calls:
 29401 ;;		Absolute function
 29402 ;;		_ADCC_DefaultInterruptHandler
 29403 ;;		_adc_int_handler
 29404 ;; This function is called by:
 29405 ;;		Interrupt level 2
 29406 ;; This function uses a non-reentrant model
 29407 ;;
 29408                           
 29409                           	psect	text145
 29410  01968C                     __ptext145:
 29411                           	opt callstack 0
 29412  01968C                     _ADCC_ISR:
 29413                           	opt callstack 4
 29414                           
 29415                           ;incstack = 0
 29416  01968C  EE14  F0C2         	lfsr	1,___inthi_sp
 29417                           
 29418                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 29419  019690  0139               	movlb	57	; () banked
 29420  019692  95A1               	bcf	161,2,b	;volatile
 29421                           
 29422                           ; BSR set to: 57
 29423                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 29424  019694  0100               	movlb	0	; () banked
 29425  019696  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 29426  019698  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 29427  01969A  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 29428  01969C  B4D8               	btfsc	status,2,c
 29429  01969E  0011               	retfie		f
 29430                           
 29431                           ; BSR set to: 0
 29432                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 29433  0196A0  D801               	call	i2u909_48
 29434  0196A2  0011               	retfie		f
 29435  0196A4                     i2u909_48:
 29436  0196A4  0005               	push	
 29437  0196A6  6EFA               	movwf	pclath,c
 29438  0196A8  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 29439  0196AA  6EFD               	movwf	tosl,c
 29440  0196AC  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 29441  0196AE  6EFE               	movwf	tosh,c
 29442  0196B0  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 29443  0196B2  6EFF               	movwf	tosu,c
 29444  0196B4  50FA               	movf	pclath,w,c
 29445  0196B6  0012               	return		;indir
 29446  0196B8                     __end_of_ADCC_ISR:
 29447                           	opt callstack 0
 29448                           
 29449 ;; *************** function _adc_int_t_handler *****************
 29450 ;; Defined at:
 29451 ;;		line 128 in file "daq.c"
 29452 ;; Parameters:    Size  Location     Type
 29453 ;;		None
 29454 ;; Auto vars:     Size  Location     Type
 29455 ;;		None
 29456 ;; Return value:  Size  Location     Type
 29457 ;;                  1  [STACK] void 
 29458 ;; Registers used:
 29459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 29460 ;; Tracked objects:
 29461 ;;		On entry : 3F/0
 29462 ;;		On exit  : 1/0
 29463 ;;		Unchanged: 0/0
 29464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29469 ;;Total ram usage:        0 bytes
 29470 ;; Hardware stack levels used:    1
 29471 ;; Hardware stack levels required when called:    1
 29472 ;; This function calls:
 29473 ;;		_ADCC_DischargeSampleCapacitor
 29474 ;;		_ADCC_StartConversion
 29475 ;; This function is called by:
 29476 ;;		_start_adc_scan
 29477 ;;		_ADCC_ThresholdISR
 29478 ;; This function uses a reentrant model
 29479 ;;
 29480                           
 29481                           	psect	text146
 29482  018AB0                     __ptext146:
 29483                           	opt callstack 0
 29484  018AB0                     _adc_int_t_handler:
 29485                           	opt callstack 3
 29486                           
 29487                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 29488                           
 29489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29490                           ;incstack = 0
 29491  018AB0  013E               	movlb	62	; () banked
 29492  018AB2  51E6               	movf	230,w,b	;volatile
 29493  018AB4  006F FB9C  F001    	movff	16103,btemp	;volatile
 29494  018ABA  6A02               	clrf	(btemp+1)^0,c
 29495  018ABC  0060  F004  F002   	movff	btemp,btemp+1
 29496  018AC2  6A01               	clrf	btemp^0,c
 29497  018AC4  2601               	addwf	btemp^0,f,c
 29498  018AC6  0E00               	movlw	0
 29499  018AC8  2202               	addwfc	(btemp+1)^0,f,c
 29500  018ACA  0100               	movlb	0	; () banked
 29501  018ACC  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 29502  018ACE  0D02               	mullw	2
 29503  018AD0  50F3               	movf	243,w,c
 29504  018AD2  0FCB               	addlw	low _R
 29505  018AD4  6ED9               	movwf	fsr2l,c
 29506  018AD6  6ADA               	clrf	fsr2h,c
 29507  018AD8  0060  F007  FFDE   	movff	btemp,postinc2
 29508  018ADE  0060  F00B  FFDD   	movff	btemp+1,postdec2
 29509  018AE4                     l9962:
 29510                           
 29511                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 29512  018AE4  0100               	movlb	0	; () banked
 29513  018AE6  2BEF               	incf	(_R+36)& (0+255),f,b	;volatile
 29514  018AE8  0E0D               	movlw	13
 29515  018AEA  65EF               	cpfsgt	(_R+36)& (0+255),b	;volatile
 29516  018AEC  D003               	goto	l9968
 29517                           
 29518                           ; BSR set to: 0
 29519                           ;daq.c: 136:    R.done = 1;
 29520  018AEE  0E01               	movlw	1
 29521  018AF0  6FF2               	movwf	(_R+39)& (0+255),b	;volatile
 29522  018AF2  0012               	return	
 29523  018AF4                     l9968:
 29524                           
 29525                           ; BSR set to: 0
 29526                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 29527  018AF4  0060  F3BC  F00C   	movff	_R+36,btemp+11	;volatile
 29528  018AFA  EE20  F0F0         	lfsr	2,_R+37	;volatile
 29529  018AFE  006F FF78  F009    	movff	postinc2,btemp+8
 29530  018B04  006F FF74  F00A    	movff	postdec2,btemp+9
 29531  018B0A  2A0C               	incf	(btemp+11)^0,f,c
 29532  018B0C  D003               	goto	u906_44
 29533  018B0E                     u906_45:
 29534  018B0E  90D8               	bcf	status,0,c
 29535  018B10  320A               	rrcf	(btemp+9)^0,f,c
 29536  018B12  3209               	rrcf	(btemp+8)^0,f,c
 29537  018B14                     u906_44:
 29538  018B14  2E0C               	decfsz	(btemp+11)^0,f,c
 29539  018B16  D7FB               	goto	u906_45
 29540  018B18  A009               	btfss	(btemp+8)^0,0,c
 29541  018B1A  D7E4               	goto	l9962
 29542                           
 29543                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 29544  018B1C  ECB5  F0CE         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 29545                           
 29546                           ; BSR set to: 62
 29547                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 29548  018B20  0100               	movlb	0	; () banked
 29549  018B22  51EF               	movf	(_R+36)& (0+255),w,b	;volatile
 29550  018B24  0B0F               	andlw	15
 29551  018B26  6EE6               	movwf	postinc1,c
 29552  018B28  EC6A  F0CE         	call	_ADCC_StartConversion	;wreg free
 29553                           
 29554                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29555  018B2C  0012               	return		;funcret
 29556  018B2E                     __end_of_adc_int_t_handler:
 29557                           	opt callstack 0
 29558                           
 29559 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 29560 ;; Defined at:
 29561 ;;		line 339 in file "mcc_generated_files/adcc.c"
 29562 ;; Parameters:    Size  Location     Type
 29563 ;;		None
 29564 ;; Auto vars:     Size  Location     Type
 29565 ;;		None
 29566 ;; Return value:  Size  Location     Type
 29567 ;;                  1  [STACK] void 
 29568 ;; Registers used:
 29569 ;;		None
 29570 ;; Tracked objects:
 29571 ;;		On entry : 3F/0
 29572 ;;		On exit  : 0/0
 29573 ;;		Unchanged: 0/0
 29574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29579 ;;Total ram usage:        0 bytes
 29580 ;; Hardware stack levels used:    1
 29581 ;; This function calls:
 29582 ;;		Nothing
 29583 ;; This function is called by:
 29584 ;;		_ADCC_Initialize
 29585 ;;		_ADCC_ISR
 29586 ;;		_ADCC_ThresholdISR
 29587 ;; This function uses a reentrant model
 29588 ;;
 29589                           
 29590                           	psect	text147
 29591  019DB8                     __ptext147:
 29592                           	opt callstack 0
 29593  019DB8                     _ADCC_DefaultInterruptHandler:
 29594                           	opt callstack 4
 29595                           
 29596                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29597                           
 29598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29599                           ;incstack = 0
 29600  019DB8  0012               	return		;funcret
 29601  019DBA                     __end_of_ADCC_DefaultInterruptHandler:
 29602                           	opt callstack 0
 29603                           
 29604 ;; *************** function _adc_int_handler *****************
 29605 ;; Defined at:
 29606 ;;		line 118 in file "daq.c"
 29607 ;; Parameters:    Size  Location     Type
 29608 ;;		None
 29609 ;; Auto vars:     Size  Location     Type
 29610 ;;		None
 29611 ;; Return value:  Size  Location     Type
 29612 ;;                  1  [STACK] void 
 29613 ;; Registers used:
 29614 ;;		None
 29615 ;; Tracked objects:
 29616 ;;		On entry : 3F/0
 29617 ;;		On exit  : 0/0
 29618 ;;		Unchanged: 0/0
 29619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29624 ;;Total ram usage:        0 bytes
 29625 ;; Hardware stack levels used:    1
 29626 ;; This function calls:
 29627 ;;		Nothing
 29628 ;; This function is called by:
 29629 ;;		_start_adc_scan
 29630 ;;		_ADCC_ISR
 29631 ;; This function uses a reentrant model
 29632 ;;
 29633                           
 29634                           	psect	text148
 29635  019DBA                     __ptext148:
 29636                           	opt callstack 0
 29637  019DBA                     _adc_int_handler:
 29638                           	opt callstack 4
 29639                           
 29640                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29641                           
 29642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29643                           ;incstack = 0
 29644  019DBA  0012               	return		;funcret
 29645  019DBC                     __end_of_adc_int_handler:
 29646                           	opt callstack 0
 29647                           
 29648 ;; *************** function _ADCC_ThresholdISR *****************
 29649 ;; Defined at:
 29650 ;;		line 327 in file "mcc_generated_files/adcc.c"
 29651 ;; Parameters:    Size  Location     Type
 29652 ;;		None
 29653 ;; Auto vars:     Size  Location     Type
 29654 ;;		None
 29655 ;; Return value:  Size  Location     Type
 29656 ;;                  1    wreg      void 
 29657 ;; Registers used:
 29658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 29659 ;; Tracked objects:
 29660 ;;		On entry : 0/0
 29661 ;;		On exit  : 0/0
 29662 ;;		Unchanged: 0/0
 29663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29666 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29667 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29668 ;;Total ram usage:        5 bytes
 29669 ;; Hardware stack levels used:    1
 29670 ;; Hardware stack levels required when called:    2
 29671 ;; This function calls:
 29672 ;;		Absolute function
 29673 ;;		_ADCC_DefaultInterruptHandler
 29674 ;;		_adc_int_t_handler
 29675 ;; This function is called by:
 29676 ;;		Interrupt level 2
 29677 ;; This function uses a non-reentrant model
 29678 ;;
 29679                           
 29680                           	psect	text149
 29681  018C04                     __ptext149:
 29682                           	opt callstack 0
 29683  018C04                     _ADCC_ThresholdISR:
 29684                           	opt callstack 3
 29685                           
 29686                           ;incstack = 0
 29687  018C04  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 29688  018C0A  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 29689  018C10  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 29690  018C16  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 29691  018C1C  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 29692  018C22  EE14  F0C2         	lfsr	1,___inthi_sp
 29693                           
 29694                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 29695  018C26  0139               	movlb	57	; () banked
 29696  018C28  97A1               	bcf	161,3,b	;volatile
 29697                           
 29698                           ; BSR set to: 57
 29699                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 29700  018C2A  0100               	movlb	0	; () banked
 29701  018C2C  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29702  018C2E  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29703  018C30  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29704  018C32  B4D8               	btfsc	status,2,c
 29705  018C34  D00C               	goto	i2u911_49
 29706                           
 29707                           ; BSR set to: 0
 29708                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 29709  018C36  D801               	call	i2u911_48
 29710  018C38  D00A               	goto	i2u911_49
 29711  018C3A                     i2u911_48:
 29712  018C3A  0005               	push	
 29713  018C3C  6EFA               	movwf	pclath,c
 29714  018C3E  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 29715  018C40  6EFD               	movwf	tosl,c
 29716  018C42  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 29717  018C44  6EFE               	movwf	tosh,c
 29718  018C46  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 29719  018C48  6EFF               	movwf	tosu,c
 29720  018C4A  50FA               	movf	pclath,w,c
 29721  018C4C  0012               	return		;indir
 29722  018C4E                     i2u911_49:
 29723  018C4E  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 29724  018C54  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 29725  018C5A  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 29726  018C60  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 29727  018C66  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 29728  018C6C  0011               	retfie		f
 29729  018C6E                     __end_of_ADCC_ThresholdISR:
 29730                           	opt callstack 0
 29731                           
 29732 ;; *************** function _UART1_rx_vect_isr *****************
 29733 ;; Defined at:
 29734 ;;		line 181 in file "mcc_generated_files/uart1.c"
 29735 ;; Parameters:    Size  Location     Type
 29736 ;;		None
 29737 ;; Auto vars:     Size  Location     Type
 29738 ;;		None
 29739 ;; Return value:  Size  Location     Type
 29740 ;;                  1    wreg      void 
 29741 ;; Registers used:
 29742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29743 ;; Tracked objects:
 29744 ;;		On entry : 0/0
 29745 ;;		On exit  : 0/0
 29746 ;;		Unchanged: 0/0
 29747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29752 ;;Total ram usage:        0 bytes
 29753 ;; Hardware stack levels used:    1
 29754 ;; Hardware stack levels required when called:    1
 29755 ;; This function calls:
 29756 ;;		Absolute function
 29757 ;;		_UART1_Receive_ISR
 29758 ;; This function is called by:
 29759 ;;		Interrupt level 2
 29760 ;; This function uses a non-reentrant model
 29761 ;;
 29762                           
 29763                           	psect	text150
 29764  019990                     __ptext150:
 29765                           	opt callstack 0
 29766  019990                     _UART1_rx_vect_isr:
 29767                           	opt callstack 4
 29768                           
 29769                           ;incstack = 0
 29770  019990  EE14  F0C2         	lfsr	1,___inthi_sp
 29771                           
 29772                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 29773  019994  0100               	movlb	0	; () banked
 29774  019996  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 29775  019998  11B9               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 29776  01999A  11BA               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 29777  01999C  B4D8               	btfsc	status,2,c
 29778  01999E  0011               	retfie		f
 29779                           
 29780                           ; BSR set to: 0
 29781                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 29782  0199A0  D801               	call	i2u1100_48
 29783  0199A2  0011               	retfie		f
 29784  0199A4                     i2u1100_48:
 29785  0199A4  0005               	push	
 29786  0199A6  6EFA               	movwf	pclath,c
 29787  0199A8  51B8               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 29788  0199AA  6EFD               	movwf	tosl,c
 29789  0199AC  51B9               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 29790  0199AE  6EFE               	movwf	tosh,c
 29791  0199B0  51BA               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 29792  0199B2  6EFF               	movwf	tosu,c
 29793  0199B4  50FA               	movf	pclath,w,c
 29794  0199B6  0012               	return		;indir
 29795  0199B8                     __end_of_UART1_rx_vect_isr:
 29796                           	opt callstack 0
 29797                           
 29798 ;; *************** function _UART1_Receive_ISR *****************
 29799 ;; Defined at:
 29800 ;;		line 192 in file "mcc_generated_files/uart1.c"
 29801 ;; Parameters:    Size  Location     Type
 29802 ;;		None
 29803 ;; Auto vars:     Size  Location     Type
 29804 ;;		None
 29805 ;; Return value:  Size  Location     Type
 29806 ;;                  1  [STACK] void 
 29807 ;; Registers used:
 29808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29809 ;; Tracked objects:
 29810 ;;		On entry : 3F/0
 29811 ;;		On exit  : 0/0
 29812 ;;		Unchanged: 0/0
 29813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29818 ;;Total ram usage:        0 bytes
 29819 ;; Hardware stack levels used:    1
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_UART1_Initialize
 29824 ;;		_UART1_rx_vect_isr
 29825 ;; This function uses a reentrant model
 29826 ;;
 29827                           
 29828                           	psect	text151
 29829  019B46                     __ptext151:
 29830                           	opt callstack 0
 29831  019B46                     _UART1_Receive_ISR:
 29832                           	opt callstack 4
 29833                           
 29834                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 29835                           
 29836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29837                           ;incstack = 0
 29838  019B46  0EF2               	movlw	low _uart1RxBuffer
 29839  019B48  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 29840  019B4A  6ED9               	movwf	fsr2l,c
 29841  019B4C  6ADA               	clrf	fsr2h,c
 29842  019B4E  0E01               	movlw	high _uart1RxBuffer
 29843  019B50  22DA               	addwfc	fsr2h,f,c
 29844  019B52  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 29845  019B58  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 29846                           
 29847                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 29848  019B5A  0E07               	movlw	7
 29849  019B5C  6437               	cpfsgt	_uart1RxHead^0,c
 29850  019B5E  D001               	goto	l11540
 29851                           
 29852                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 29853  019B60  6A37               	clrf	_uart1RxHead^0,c	;volatile
 29854  019B62                     l11540:
 29855                           
 29856                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 29857  019B62  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 29858                           
 29859                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29860  019B64  0012               	return		;funcret
 29861  019B66                     __end_of_UART1_Receive_ISR:
 29862                           	opt callstack 0
 29863                           
 29864 ;; *************** function _UART2_tx_vect_isr *****************
 29865 ;; Defined at:
 29866 ;;		line 195 in file "mcc_generated_files/uart2.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;		None
 29869 ;; Auto vars:     Size  Location     Type
 29870 ;;		None
 29871 ;; Return value:  Size  Location     Type
 29872 ;;                  1    wreg      void 
 29873 ;; Registers used:
 29874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29875 ;; Tracked objects:
 29876 ;;		On entry : 0/0
 29877 ;;		On exit  : 0/0
 29878 ;;		Unchanged: 0/0
 29879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29884 ;;Total ram usage:        0 bytes
 29885 ;; Hardware stack levels used:    1
 29886 ;; Hardware stack levels required when called:    1
 29887 ;; This function calls:
 29888 ;;		Absolute function
 29889 ;;		_UART2_Transmit_ISR
 29890 ;; This function is called by:
 29891 ;;		Interrupt level 2
 29892 ;; This function uses a non-reentrant model
 29893 ;;
 29894                           
 29895                           	psect	text152
 29896  0199B8                     __ptext152:
 29897                           	opt callstack 0
 29898  0199B8                     _UART2_tx_vect_isr:
 29899                           	opt callstack 4
 29900                           
 29901                           ;incstack = 0
 29902  0199B8  EE14  F0C2         	lfsr	1,___inthi_sp
 29903                           
 29904                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 29905  0199BC  0100               	movlb	0	; () banked
 29906  0199BE  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29907  0199C0  11BC               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29908  0199C2  11BD               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29909  0199C4  B4D8               	btfsc	status,2,c
 29910  0199C6  0011               	retfie		f
 29911                           
 29912                           ; BSR set to: 0
 29913                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 29914  0199C8  D801               	call	i2u1102_48
 29915  0199CA  0011               	retfie		f
 29916  0199CC                     i2u1102_48:
 29917  0199CC  0005               	push	
 29918  0199CE  6EFA               	movwf	pclath,c
 29919  0199D0  51BB               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 29920  0199D2  6EFD               	movwf	tosl,c
 29921  0199D4  51BC               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 29922  0199D6  6EFE               	movwf	tosh,c
 29923  0199D8  51BD               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 29924  0199DA  6EFF               	movwf	tosu,c
 29925  0199DC  50FA               	movf	pclath,w,c
 29926  0199DE  0012               	return		;indir
 29927  0199E0                     __end_of_UART2_tx_vect_isr:
 29928                           	opt callstack 0
 29929                           
 29930 ;; *************** function _UART2_Transmit_ISR *****************
 29931 ;; Defined at:
 29932 ;;		line 213 in file "mcc_generated_files/uart2.c"
 29933 ;; Parameters:    Size  Location     Type
 29934 ;;		None
 29935 ;; Auto vars:     Size  Location     Type
 29936 ;;		None
 29937 ;; Return value:  Size  Location     Type
 29938 ;;                  1  [STACK] void 
 29939 ;; Registers used:
 29940 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29941 ;; Tracked objects:
 29942 ;;		On entry : 3F/0
 29943 ;;		On exit  : 3B/39
 29944 ;;		Unchanged: 0/0
 29945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29950 ;;Total ram usage:        0 bytes
 29951 ;; Hardware stack levels used:    1
 29952 ;; This function calls:
 29953 ;;		Nothing
 29954 ;; This function is called by:
 29955 ;;		_UART2_Initialize
 29956 ;;		_UART2_tx_vect_isr
 29957 ;; This function uses a reentrant model
 29958 ;;
 29959                           
 29960                           	psect	text153
 29961  0196B8                     __ptext153:
 29962                           	opt callstack 0
 29963  0196B8                     _UART2_Transmit_ISR:
 29964                           	opt callstack 4
 29965                           
 29966                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 29967                           
 29968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29969                           ;incstack = 0
 29970  0196B8  0E40               	movlw	64
 29971  0196BA  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 29972  0196BC  D010               	goto	l673
 29973                           
 29974                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 29975  0196BE  0E54               	movlw	low _uart2TxBuffer
 29976  0196C0  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 29977  0196C2  6ED9               	movwf	fsr2l,c
 29978  0196C4  6ADA               	clrf	fsr2h,c
 29979  0196C6  0E03               	movlw	high _uart2TxBuffer
 29980  0196C8  22DA               	addwfc	fsr2h,f,c
 29981  0196CA  50DF               	movf	indf2,w,c
 29982  0196CC  013D               	movlb	61	; () banked
 29983  0196CE  6FD2               	movwf	210,b	;volatile
 29984                           
 29985                           ; BSR set to: 61
 29986  0196D0  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 29987                           
 29988                           ; BSR set to: 61
 29989                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 29990  0196D2  0E3F               	movlw	63
 29991  0196D4  6433               	cpfsgt	_uart2TxTail^0,c
 29992  0196D6  D001               	goto	l11552
 29993                           
 29994                           ; BSR set to: 61
 29995                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 29996  0196D8  6A33               	clrf	_uart2TxTail^0,c	;volatile
 29997  0196DA                     l11552:
 29998                           
 29999                           ; BSR set to: 61
 30000                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 30001  0196DA  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 30002                           
 30003                           ;mcc_generated_files/uart2.c: 224:     }
 30004  0196DC  0012               	return	
 30005  0196DE                     l673:
 30006                           
 30007                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 30008  0196DE  0139               	movlb	57	; () banked
 30009  0196E0  9796               	bcf	150,3,b	;volatile
 30010                           
 30011                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30012  0196E2  0012               	return		;funcret
 30013  0196E4                     __end_of_UART2_Transmit_ISR:
 30014                           	opt callstack 0
 30015                           
 30016 ;; *************** function _UART2_rx_vect_isr *****************
 30017 ;; Defined at:
 30018 ;;		line 203 in file "mcc_generated_files/uart2.c"
 30019 ;; Parameters:    Size  Location     Type
 30020 ;;		None
 30021 ;; Auto vars:     Size  Location     Type
 30022 ;;		None
 30023 ;; Return value:  Size  Location     Type
 30024 ;;                  1    wreg      void 
 30025 ;; Registers used:
 30026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 30027 ;; Tracked objects:
 30028 ;;		On entry : 0/0
 30029 ;;		On exit  : 0/0
 30030 ;;		Unchanged: 0/0
 30031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30036 ;;Total ram usage:        0 bytes
 30037 ;; Hardware stack levels used:    1
 30038 ;; Hardware stack levels required when called:    1
 30039 ;; This function calls:
 30040 ;;		Absolute function
 30041 ;;		_UART2_Receive_ISR
 30042 ;; This function is called by:
 30043 ;;		Interrupt level 2
 30044 ;; This function uses a non-reentrant model
 30045 ;;
 30046                           
 30047                           	psect	text154
 30048  0199E0                     __ptext154:
 30049                           	opt callstack 0
 30050  0199E0                     _UART2_rx_vect_isr:
 30051                           	opt callstack 4
 30052                           
 30053                           ;incstack = 0
 30054  0199E0  EE14  F0C2         	lfsr	1,___inthi_sp
 30055                           
 30056                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 30057  0199E4  0100               	movlb	0	; () banked
 30058  0199E6  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 30059  0199E8  11BF               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 30060  0199EA  11C0               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 30061  0199EC  B4D8               	btfsc	status,2,c
 30062  0199EE  0011               	retfie		f
 30063                           
 30064                           ; BSR set to: 0
 30065                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 30066  0199F0  D801               	call	i2u917_48
 30067  0199F2  0011               	retfie		f
 30068  0199F4                     i2u917_48:
 30069  0199F4  0005               	push	
 30070  0199F6  6EFA               	movwf	pclath,c
 30071  0199F8  51BE               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 30072  0199FA  6EFD               	movwf	tosl,c
 30073  0199FC  51BF               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 30074  0199FE  6EFE               	movwf	tosh,c
 30075  019A00  51C0               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 30076  019A02  6EFF               	movwf	tosu,c
 30077  019A04  50FA               	movf	pclath,w,c
 30078  019A06  0012               	return		;indir
 30079  019A08                     __end_of_UART2_rx_vect_isr:
 30080                           	opt callstack 0
 30081                           
 30082 ;; *************** function _UART2_Receive_ISR *****************
 30083 ;; Defined at:
 30084 ;;		line 233 in file "mcc_generated_files/uart2.c"
 30085 ;; Parameters:    Size  Location     Type
 30086 ;;		None
 30087 ;; Auto vars:     Size  Location     Type
 30088 ;;		None
 30089 ;; Return value:  Size  Location     Type
 30090 ;;                  1  [STACK] void 
 30091 ;; Registers used:
 30092 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30093 ;; Tracked objects:
 30094 ;;		On entry : 3F/0
 30095 ;;		On exit  : 0/0
 30096 ;;		Unchanged: 0/0
 30097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30102 ;;Total ram usage:        0 bytes
 30103 ;; Hardware stack levels used:    1
 30104 ;; This function calls:
 30105 ;;		Nothing
 30106 ;; This function is called by:
 30107 ;;		_UART2_Initialize
 30108 ;;		_UART2_rx_vect_isr
 30109 ;; This function uses a reentrant model
 30110 ;;
 30111                           
 30112                           	psect	text155
 30113  019BDE                     __ptext155:
 30114                           	opt callstack 0
 30115  019BDE                     _UART2_Receive_ISR:
 30116                           	opt callstack 4
 30117                           
 30118                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 30119                           
 30120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30121                           ;incstack = 0
 30122  019BDE  0E00               	movlw	low _uart2RxBuffer
 30123  019BE0  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 30124  019BE2  6ED9               	movwf	fsr2l,c
 30125  019BE4  6ADA               	clrf	fsr2h,c
 30126  019BE6  0E05               	movlw	high _uart2RxBuffer
 30127  019BE8  22DA               	addwfc	fsr2h,f,c
 30128  019BEA  006F F743 FFDF     	movff	15824,indf2	;volatile
 30129  019BF0  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 30130                           
 30131                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 30132  019BF2  2831               	incf	_uart2RxHead^0,w,c
 30133  019BF4  B4D8               	btfsc	status,2,c
 30134                           
 30135                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 30136  019BF6  6A31               	clrf	_uart2RxHead^0,c	;volatile
 30137                           
 30138                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 30139  019BF8  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 30140                           
 30141                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30142  019BFA  0012               	return		;funcret
 30143  019BFC                     __end_of_UART2_Receive_ISR:
 30144                           	opt callstack 0
 30145                           
 30146 ;; *************** function _TMR6_ISR *****************
 30147 ;; Defined at:
 30148 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 30149 ;; Parameters:    Size  Location     Type
 30150 ;;		None
 30151 ;; Auto vars:     Size  Location     Type
 30152 ;;		None
 30153 ;; Return value:  Size  Location     Type
 30154 ;;                  1    wreg      void 
 30155 ;; Registers used:
 30156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30157 ;; Tracked objects:
 30158 ;;		On entry : 0/0
 30159 ;;		On exit  : 0/0
 30160 ;;		Unchanged: 0/0
 30161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30166 ;;Total ram usage:        1 bytes
 30167 ;; Hardware stack levels used:    1
 30168 ;; Hardware stack levels required when called:    2
 30169 ;; This function calls:
 30170 ;;		_TMR6_CallBack
 30171 ;; This function is called by:
 30172 ;;		Interrupt level 2
 30173 ;; This function uses a non-reentrant model
 30174 ;;
 30175                           
 30176                           	psect	text156
 30177  019C34                     __ptext156:
 30178                           	opt callstack 0
 30179  019C34                     _TMR6_ISR:
 30180                           	opt callstack 3
 30181                           
 30182                           ;incstack = 0
 30183  019C34  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 30184  019C3A  EE14  F0C2         	lfsr	1,___inthi_sp
 30185                           
 30186                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 30187  019C3E  0139               	movlb	57	; () banked
 30188  019C40  91A9               	bcf	169,0,b	;volatile
 30189                           
 30190                           ; BSR set to: 57
 30191                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 30192  019C42  EC70  F0CD         	call	_TMR6_CallBack	;wreg free
 30193  019C46  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 30194  019C4C  0011               	retfie		f
 30195  019C4E                     __end_of_TMR6_ISR:
 30196                           	opt callstack 0
 30197                           
 30198 ;; *************** function _TMR6_CallBack *****************
 30199 ;; Defined at:
 30200 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 30201 ;; Parameters:    Size  Location     Type
 30202 ;;		None
 30203 ;; Auto vars:     Size  Location     Type
 30204 ;;		None
 30205 ;; Return value:  Size  Location     Type
 30206 ;;                  1  [STACK] void 
 30207 ;; Registers used:
 30208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 30209 ;; Tracked objects:
 30210 ;;		On entry : 3F/39
 30211 ;;		On exit  : 0/0
 30212 ;;		Unchanged: 0/0
 30213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30218 ;;Total ram usage:        0 bytes
 30219 ;; Hardware stack levels used:    1
 30220 ;; Hardware stack levels required when called:    1
 30221 ;; This function calls:
 30222 ;;		Absolute function
 30223 ;;		_TMR6_DefaultInterruptHandler
 30224 ;; This function is called by:
 30225 ;;		_TMR6_ISR
 30226 ;; This function uses a reentrant model
 30227 ;;
 30228                           
 30229                           	psect	text157
 30230  019AE0                     __ptext157:
 30231                           	opt callstack 0
 30232  019AE0                     _TMR6_CallBack:
 30233                           	opt callstack 3
 30234                           
 30235                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 30236                           
 30237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30238                           ;incstack = 0
 30239  019AE0  0100               	movlb	0	; () banked
 30240  019AE2  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30241  019AE4  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30242  019AE6  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30243  019AE8  B4D8               	btfsc	status,2,c
 30244  019AEA  0012               	return	
 30245                           
 30246                           ; BSR set to: 0
 30247                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 30248  019AEC  D801               	call	u881_48
 30249  019AEE  0012               	return	
 30250  019AF0                     u881_48:
 30251  019AF0  0005               	push	
 30252  019AF2  6EFA               	movwf	pclath,c
 30253  019AF4  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 30254  019AF6  6EFD               	movwf	tosl,c
 30255  019AF8  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 30256  019AFA  6EFE               	movwf	tosh,c
 30257  019AFC  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 30258  019AFE  6EFF               	movwf	tosu,c
 30259  019B00  50FA               	movf	pclath,w,c
 30260  019B02  0012               	return		;indir
 30261  019B04                     __end_of_TMR6_CallBack:
 30262                           	opt callstack 0
 30263                           
 30264 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 30265 ;; Defined at:
 30266 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 30267 ;; Parameters:    Size  Location     Type
 30268 ;;		None
 30269 ;; Auto vars:     Size  Location     Type
 30270 ;;  i               1  [STACK] unsigned char 
 30271 ;; Return value:  Size  Location     Type
 30272 ;;                  1  [STACK] void 
 30273 ;; Registers used:
 30274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 30275 ;; Tracked objects:
 30276 ;;		On entry : 3F/0
 30277 ;;		On exit  : 0/0
 30278 ;;		Unchanged: 0/0
 30279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30284 ;;Total ram usage:        0 bytes
 30285 ;; Hardware stack levels used:    1
 30286 ;; This function calls:
 30287 ;;		Nothing
 30288 ;; This function is called by:
 30289 ;;		_TMR6_Initialize
 30290 ;;		_TMR6_CallBack
 30291 ;; This function uses a reentrant model
 30292 ;;
 30293                           
 30294                           	psect	text158
 30295  019060                     __ptext158:
 30296                           	opt callstack 0
 30297  019060                     _TMR6_DefaultInterruptHandler:
 30298                           	opt callstack 0
 30299                           
 30300                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30301  019060  52E6               	movf	postinc1,f,c
 30302                           
 30303                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 30304                           ;stkvar	_i @ sp[(-1)+0]
 30305                           
 30306                           ;incstack = 0
 30307  019062  0EFF               	movlw	-1
 30308  019064  6AE3               	clrf	plusw1,c
 30309  019066                     l9284:
 30310                           
 30311                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 30312                           ;stkvar	_i @ sp[(-1)+0]
 30313  019066  0EFF               	movlw	-1
 30314  019068  50E3               	movf	plusw1,w,c
 30315  01906A  0D02               	mullw	2
 30316  01906C  0EDA               	movlw	low _tickCount
 30317  01906E  24F3               	addwf	243,w,c
 30318  019070  6ED9               	movwf	fsr2l,c
 30319  019072  0E01               	movlw	high _tickCount
 30320  019074  20F4               	addwfc	prodh,w,c
 30321  019076  6EDA               	movwf	fsr2h,c
 30322  019078  50DE               	movf	postinc2,w,c
 30323  01907A  10DE               	iorwf	postinc2,w,c
 30324  01907C  B4D8               	btfsc	status,2,c
 30325  01907E  D00C               	goto	l9288
 30326                           
 30327                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 30328                           ;stkvar	_i @ sp[(-1)+0]
 30329  019080  0EFF               	movlw	-1
 30330  019082  50E3               	movf	plusw1,w,c
 30331  019084  0D02               	mullw	2
 30332  019086  0EDA               	movlw	low _tickCount
 30333  019088  24F3               	addwf	243,w,c
 30334  01908A  6ED9               	movwf	fsr2l,c
 30335  01908C  0E01               	movlw	high _tickCount
 30336  01908E  20F4               	addwfc	prodh,w,c
 30337  019090  6EDA               	movwf	fsr2h,c
 30338  019092  06DE               	decf	postinc2,f,c
 30339  019094  0E00               	movlw	0
 30340  019096  5ADD               	subwfb	postdec2,f,c
 30341  019098                     l9288:
 30342                           
 30343                           ;mcc_generated_files/tmr6.c: 207:  }
 30344                           ;stkvar	_i @ sp[(-1)+0]
 30345  019098  0EFF               	movlw	-1
 30346  01909A  2AE3               	incf	plusw1,f,c
 30347                           
 30348                           ;stkvar	_i @ sp[(-1)+0]
 30349  01909C  0EFF               	movlw	-1
 30350  01909E  006F FF8C  F001    	movff	plusw1,btemp
 30351  0190A4  0E0B               	movlw	11
 30352  0190A6  6401               	cpfsgt	btemp^0,c
 30353  0190A8  D7DE               	goto	l9284
 30354                           
 30355                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30356  0190AA  52E5               	movf	postdec1,f,c
 30357  0190AC  0012               	return		;funcret
 30358  0190AE                     __end_of_TMR6_DefaultInterruptHandler:
 30359                           	opt callstack 0
 30360                           
 30361 ;; *************** function _DMA1_DMASCNT_ISR *****************
 30362 ;; Defined at:
 30363 ;;		line 126 in file "mcc_generated_files/dma1.c"
 30364 ;; Parameters:    Size  Location     Type
 30365 ;;		None
 30366 ;; Auto vars:     Size  Location     Type
 30367 ;;		None
 30368 ;; Return value:  Size  Location     Type
 30369 ;;                  1    wreg      void 
 30370 ;; Registers used:
 30371 ;;		None
 30372 ;; Tracked objects:
 30373 ;;		On entry : 0/0
 30374 ;;		On exit  : 3F/0
 30375 ;;		Unchanged: 0/0
 30376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30381 ;;Total ram usage:        0 bytes
 30382 ;; Hardware stack levels used:    1
 30383 ;; This function calls:
 30384 ;;		Nothing
 30385 ;; This function is called by:
 30386 ;;		Interrupt level 2
 30387 ;; This function uses a non-reentrant model
 30388 ;;
 30389                           
 30390                           	psect	text159
 30391  019D24                     __ptext159:
 30392                           	opt callstack 0
 30393  019D24                     _DMA1_DMASCNT_ISR:
 30394                           	opt callstack 5
 30395                           
 30396                           ;incstack = 0
 30397  019D24  EE14  F0C2         	lfsr	1,___inthi_sp
 30398                           
 30399                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 30400  019D28  0139               	movlb	57	; () banked
 30401  019D2A  91A2               	bcf	162,0,b	;volatile
 30402                           
 30403                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 30404  019D2C  0100               	movlb	0	; () banked
 30405  019D2E  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 30406                           
 30407                           ; BSR set to: 0
 30408  019D30  0011               	retfie		f
 30409  019D32                     __end_of_DMA1_DMASCNT_ISR:
 30410                           	opt callstack 0
 30411                           
 30412 ;; *************** function _DMA1_DMADCNT_ISR *****************
 30413 ;; Defined at:
 30414 ;;		line 134 in file "mcc_generated_files/dma1.c"
 30415 ;; Parameters:    Size  Location     Type
 30416 ;;		None
 30417 ;; Auto vars:     Size  Location     Type
 30418 ;;		None
 30419 ;; Return value:  Size  Location     Type
 30420 ;;                  1    wreg      void 
 30421 ;; Registers used:
 30422 ;;		None
 30423 ;; Tracked objects:
 30424 ;;		On entry : 0/0
 30425 ;;		On exit  : 3F/39
 30426 ;;		Unchanged: 0/0
 30427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30432 ;;Total ram usage:        0 bytes
 30433 ;; Hardware stack levels used:    1
 30434 ;; This function calls:
 30435 ;;		Nothing
 30436 ;; This function is called by:
 30437 ;;		Interrupt level 2
 30438 ;; This function uses a non-reentrant model
 30439 ;;
 30440                           
 30441                           	psect	text160
 30442  019D48                     __ptext160:
 30443                           	opt callstack 0
 30444  019D48                     _DMA1_DMADCNT_ISR:
 30445                           	opt callstack 5
 30446                           
 30447                           ; BSR set to: 0
 30448                           ;incstack = 0
 30449  019D48  EE14  F0C2         	lfsr	1,___inthi_sp
 30450                           
 30451                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 30452  019D4C  0139               	movlb	57	; () banked
 30453  019D4E  93A2               	bcf	162,1,b	;volatile
 30454                           
 30455                           ; BSR set to: 57
 30456  019D50  0011               	retfie		f
 30457  019D52                     __end_of_DMA1_DMADCNT_ISR:
 30458                           	opt callstack 0
 30459                           
 30460 ;; *************** function _DMA1_DMAA_ISR *****************
 30461 ;; Defined at:
 30462 ;;		line 144 in file "mcc_generated_files/dma1.c"
 30463 ;; Parameters:    Size  Location     Type
 30464 ;;		None
 30465 ;; Auto vars:     Size  Location     Type
 30466 ;;		None
 30467 ;; Return value:  Size  Location     Type
 30468 ;;                  1    wreg      void 
 30469 ;; Registers used:
 30470 ;;		None
 30471 ;; Tracked objects:
 30472 ;;		On entry : 0/0
 30473 ;;		On exit  : 3F/39
 30474 ;;		Unchanged: 0/0
 30475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30480 ;;Total ram usage:        0 bytes
 30481 ;; Hardware stack levels used:    1
 30482 ;; This function calls:
 30483 ;;		Nothing
 30484 ;; This function is called by:
 30485 ;;		Interrupt level 2
 30486 ;; This function uses a non-reentrant model
 30487 ;;
 30488                           
 30489                           	psect	text161
 30490  019D54                     __ptext161:
 30491                           	opt callstack 0
 30492  019D54                     _DMA1_DMAA_ISR:
 30493                           	opt callstack 5
 30494                           
 30495                           ; BSR set to: 57
 30496                           ;incstack = 0
 30497  019D54  EE14  F0C2         	lfsr	1,___inthi_sp
 30498                           
 30499                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 30500  019D58  0139               	movlb	57	; () banked
 30501  019D5A  97A2               	bcf	162,3,b	;volatile
 30502                           
 30503                           ; BSR set to: 57
 30504  019D5C  0011               	retfie		f
 30505  019D5E                     __end_of_DMA1_DMAA_ISR:
 30506                           	opt callstack 0
 30507                           
 30508 ;; *************** function _DMA1_DMAOR_ISR *****************
 30509 ;; Defined at:
 30510 ;;		line 155 in file "mcc_generated_files/dma1.c"
 30511 ;; Parameters:    Size  Location     Type
 30512 ;;		None
 30513 ;; Auto vars:     Size  Location     Type
 30514 ;;		None
 30515 ;; Return value:  Size  Location     Type
 30516 ;;                  1    wreg      void 
 30517 ;; Registers used:
 30518 ;;		None
 30519 ;; Tracked objects:
 30520 ;;		On entry : 0/0
 30521 ;;		On exit  : 3F/39
 30522 ;;		Unchanged: 0/0
 30523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30528 ;;Total ram usage:        0 bytes
 30529 ;; Hardware stack levels used:    1
 30530 ;; This function calls:
 30531 ;;		Nothing
 30532 ;; This function is called by:
 30533 ;;		Interrupt level 2
 30534 ;; This function uses a non-reentrant model
 30535 ;;
 30536                           
 30537                           	psect	text162
 30538  019D60                     __ptext162:
 30539                           	opt callstack 0
 30540  019D60                     _DMA1_DMAOR_ISR:
 30541                           	opt callstack 5
 30542                           
 30543                           ; BSR set to: 57
 30544                           ;incstack = 0
 30545  019D60  EE14  F0C2         	lfsr	1,___inthi_sp
 30546                           
 30547                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 30548  019D64  0139               	movlb	57	; () banked
 30549  019D66  95A2               	bcf	162,2,b	;volatile
 30550                           
 30551                           ; BSR set to: 57
 30552  019D68  0011               	retfie		f
 30553  019D6A                     __end_of_DMA1_DMAOR_ISR:
 30554                           	opt callstack 0
 30555                           
 30556                           ;
 30557                           ; Interrupt Vector Table @ 0x8
 30558                           ;
 30559                           
 30560                           	psect	ivt0x8
 30561  000008                     __pivt0x8:
 30562                           	opt callstack 0
 30563  000008                     ivt0x8_base:
 30564                           	opt callstack 0
 30565                           
 30566                           ; Vector 0 : SWINT
 30567  000008  676B               	dw	_Default_ISR shr (0+2)
 30568                           
 30569                           ; Vector 1 : HLVD
 30570  00000A  676B               	dw	_Default_ISR shr (0+2)
 30571                           
 30572                           ; Vector 2 : OSF
 30573  00000C  676B               	dw	_Default_ISR shr (0+2)
 30574                           
 30575                           ; Vector 3 : CSW
 30576  00000E  676B               	dw	_Default_ISR shr (0+2)
 30577                           
 30578                           ; Vector 4 : NVM
 30579  000010  676B               	dw	_Default_ISR shr (0+2)
 30580                           
 30581                           ; Vector 5 : SCAN
 30582  000012  676B               	dw	_Default_ISR shr (0+2)
 30583                           
 30584                           ; Vector 6 : CRC
 30585  000014  676B               	dw	_Default_ISR shr (0+2)
 30586                           
 30587                           ; Vector 7 : IOC
 30588  000016  676B               	dw	_Default_ISR shr (0+2)
 30589                           
 30590                           ; Vector 8 : INT0
 30591  000018  6745               	dw	_INT0_ISR shr (0+2)
 30592                           
 30593                           ; Vector 9 : ZCD
 30594  00001A  676B               	dw	_Default_ISR shr (0+2)
 30595                           
 30596                           ; Vector 10 : AD
 30597  00001C  65A3               	dw	_ADCC_ISR shr (0+2)
 30598                           
 30599                           ; Vector 11 : ADT
 30600  00001E  6301               	dw	_ADCC_ThresholdISR shr (0+2)
 30601                           
 30602                           ; Vector 12 : CMP1
 30603  000020  676B               	dw	_Default_ISR shr (0+2)
 30604                           
 30605                           ; Vector 13 : SMT1
 30606  000022  676B               	dw	_Default_ISR shr (0+2)
 30607                           
 30608                           ; Vector 14 : SMT1PRA
 30609  000024  676B               	dw	_Default_ISR shr (0+2)
 30610                           
 30611                           ; Vector 15 : SMT1PRW
 30612  000026  676B               	dw	_Default_ISR shr (0+2)
 30613                           
 30614                           ; Vector 16 : DMA1SCNT
 30615  000028  6749               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 30616                           
 30617                           ; Vector 17 : DMA1DCNT
 30618  00002A  6752               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 30619                           
 30620                           ; Vector 18 : DMA1OR
 30621  00002C  6758               	dw	_DMA1_DMAOR_ISR shr (0+2)
 30622                           
 30623                           ; Vector 19 : DMA1A
 30624  00002E  6755               	dw	_DMA1_DMAA_ISR shr (0+2)
 30625                           
 30626                           ; Vector 20 : SPI1RX
 30627  000030  676B               	dw	_Default_ISR shr (0+2)
 30628                           
 30629                           ; Vector 21 : SPI1TX
 30630  000032  676B               	dw	_Default_ISR shr (0+2)
 30631                           
 30632                           ; Vector 22 : SPI1
 30633  000034  676B               	dw	_Default_ISR shr (0+2)
 30634                           
 30635                           ; Vector 23 : I2C1RX
 30636  000036  676B               	dw	_Default_ISR shr (0+2)
 30637                           
 30638                           ; Vector 24 : I2C1TX
 30639  000038  676B               	dw	_Default_ISR shr (0+2)
 30640                           
 30641                           ; Vector 25 : I2C1
 30642  00003A  676B               	dw	_Default_ISR shr (0+2)
 30643                           
 30644                           ; Vector 26 : I2C1E
 30645  00003C  676B               	dw	_Default_ISR shr (0+2)
 30646                           
 30647                           ; Vector 27 : U1RX
 30648  00003E  6664               	dw	_UART1_rx_vect_isr shr (0+2)
 30649                           
 30650                           ; Vector 28 : U1TX
 30651  000040  676B               	dw	_Default_ISR shr (0+2)
 30652                           
 30653                           ; Vector 29 : U1E
 30654  000042  676B               	dw	_Default_ISR shr (0+2)
 30655                           
 30656                           ; Vector 30 : U1
 30657  000044  676B               	dw	_Default_ISR shr (0+2)
 30658                           
 30659                           ; Vector 31 : TMR0
 30660  000046  676B               	dw	_Default_ISR shr (0+2)
 30661                           
 30662                           ; Vector 32 : TMR1
 30663  000048  676B               	dw	_Default_ISR shr (0+2)
 30664                           
 30665                           ; Vector 33 : TMR1G
 30666  00004A  676B               	dw	_Default_ISR shr (0+2)
 30667                           
 30668                           ; Vector 34 : TMR2
 30669  00004C  676B               	dw	_Default_ISR shr (0+2)
 30670                           
 30671                           ; Vector 35 : CCP1
 30672  00004E  676B               	dw	_Default_ISR shr (0+2)
 30673                           
 30674                           ; Vector 36 : Undefined
 30675  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 30676                           
 30677                           ; Vector 37 : NCO1
 30678  000052  676B               	dw	_Default_ISR shr (0+2)
 30679                           
 30680                           ; Vector 38 : CWG1
 30681  000054  676B               	dw	_Default_ISR shr (0+2)
 30682                           
 30683                           ; Vector 39 : CLC1
 30684  000056  676B               	dw	_Default_ISR shr (0+2)
 30685                           
 30686                           ; Vector 40 : INT1
 30687  000058  6509               	dw	_INT1_ISR shr (0+2)
 30688                           
 30689                           ; Vector 41 : CMP2
 30690  00005A  676B               	dw	_Default_ISR shr (0+2)
 30691                           
 30692                           ; Vector 42 : DMA2SCNT
 30693  00005C  676B               	dw	_Default_ISR shr (0+2)
 30694                           
 30695                           ; Vector 43 : DMA2DCNT
 30696  00005E  676B               	dw	_Default_ISR shr (0+2)
 30697                           
 30698                           ; Vector 44 : DMA2OR
 30699  000060  676B               	dw	_Default_ISR shr (0+2)
 30700                           
 30701                           ; Vector 45 : DMA2A
 30702  000062  676B               	dw	_Default_ISR shr (0+2)
 30703                           
 30704                           ; Vector 46 : I2C2RX
 30705  000064  676B               	dw	_Default_ISR shr (0+2)
 30706                           
 30707                           ; Vector 47 : I2C2TX
 30708  000066  676B               	dw	_Default_ISR shr (0+2)
 30709                           
 30710                           ; Vector 48 : I2C2
 30711  000068  676B               	dw	_Default_ISR shr (0+2)
 30712                           
 30713                           ; Vector 49 : I2C2E
 30714  00006A  676B               	dw	_Default_ISR shr (0+2)
 30715                           
 30716                           ; Vector 50 : U2RX
 30717  00006C  6678               	dw	_UART2_rx_vect_isr shr (0+2)
 30718                           
 30719                           ; Vector 51 : U2TX
 30720  00006E  666E               	dw	_UART2_tx_vect_isr shr (0+2)
 30721                           
 30722                           ; Vector 52 : U2E
 30723  000070  676B               	dw	_Default_ISR shr (0+2)
 30724                           
 30725                           ; Vector 53 : U2
 30726  000072  676B               	dw	_Default_ISR shr (0+2)
 30727                           
 30728                           ; Vector 54 : TMR3
 30729  000074  5C94               	dw	_TMR3_ISR shr (0+2)
 30730                           
 30731                           ; Vector 55 : TMR3G
 30732  000076  676B               	dw	_Default_ISR shr (0+2)
 30733                           
 30734                           ; Vector 56 : TMR4
 30735  000078  676B               	dw	_Default_ISR shr (0+2)
 30736                           
 30737                           ; Vector 57 : CCP2
 30738  00007A  676B               	dw	_Default_ISR shr (0+2)
 30739                           
 30740                           ; Vector 58 : Undefined
 30741  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 30742                           
 30743                           ; Vector 59 : CWG2
 30744  00007E  676B               	dw	_Default_ISR shr (0+2)
 30745                           
 30746                           ; Vector 60 : CLC2
 30747  000080  676B               	dw	_Default_ISR shr (0+2)
 30748                           
 30749                           ; Vector 61 : INT2
 30750  000082  676B               	dw	_Default_ISR shr (0+2)
 30751                           
 30752                           ; Vector 62 : Undefined
 30753  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 30754                           
 30755                           ; Vector 63 : Undefined
 30756  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 30757                           
 30758                           ; Vector 64 : Undefined
 30759  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 30760                           
 30761                           ; Vector 65 : Undefined
 30762  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 30763                           
 30764                           ; Vector 66 : Undefined
 30765  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 30766                           
 30767                           ; Vector 67 : Undefined
 30768  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 30769                           
 30770                           ; Vector 68 : Undefined
 30771  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 30772                           
 30773                           ; Vector 69 : Undefined
 30774  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 30775                           
 30776                           ; Vector 70 : TMR5
 30777  000094  63C4               	dw	_TMR5_ISR shr (0+2)
 30778                           
 30779                           ; Vector 71 : TMR5G
 30780  000096  676B               	dw	_Default_ISR shr (0+2)
 30781                           
 30782                           ; Vector 72 : TMR6
 30783  000098  670D               	dw	_TMR6_ISR shr (0+2)
 30784                           
 30785                           ; Vector 73 : CCP3
 30786  00009A  676B               	dw	_Default_ISR shr (0+2)
 30787                           
 30788                           ; Vector 74 : CWG3
 30789  00009C  676B               	dw	_Default_ISR shr (0+2)
 30790                           
 30791                           ; Vector 75 : CLC3
 30792  00009E  676B               	dw	_Default_ISR shr (0+2)
 30793                           
 30794                           ; Vector 76 : Undefined
 30795  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 30796                           
 30797                           ; Vector 77 : Undefined
 30798  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 30799                           
 30800                           ; Vector 78 : Undefined
 30801  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 30802                           
 30803                           ; Vector 79 : Undefined
 30804  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 30805                           
 30806                           ; Vector 80 : CCP4
 30807  0000A8  676B               	dw	_Default_ISR shr (0+2)
 30808                           
 30809                           ; Vector 81 : CLC4
 30810  0000AA  676B               	dw	_Default_ISR shr (0+2)
 30811  0000AC                     ivt0x8_undefint:
 30812                           	opt callstack 0
 30813  0000AC  00FF               	reset	
 30814                           
 30815                           	psect	text163
 30816  000000                     __ptext163:
 30817                           	opt callstack 0
 30818                           
 30819                           	psect	rparam
 30820  0000                     
 30821                           	psect	temp
 30822  000001                     btemp:
 30823                           	opt callstack 0
 30824  000001                     	ds	32
 30825  0000                     wtemp0	set	btemp
 30826  0000                     wtemp1	set	btemp+2
 30827  0000                     wtemp2	set	btemp+4
 30828  0000                     wtemp3	set	btemp+6
 30829  0000                     wtemp4	set	btemp+8
 30830  0000                     wtemp5	set	btemp+10
 30831  0000                     wtemp8	set	btemp+1
 30832  0000                     ttemp0	set	btemp
 30833  0000                     ttemp1	set	btemp+3
 30834  0000                     ttemp2	set	btemp+6
 30835  0000                     ttemp3	set	btemp+9
 30836  0000                     ttemp5	set	btemp+1
 30837  0000                     ttemp6	set	btemp+4
 30838  0000                     ttemp7	set	btemp+8
 30839  0000                     ltemp0	set	btemp
 30840  0000                     ltemp1	set	btemp+4
 30841  0000                     ltemp2	set	btemp+8
 30842  0000                     lltemp0	set	btemp
 30843  0000                     lltemp1	set	btemp+8
 30844  0000                     lltemp2	set	btemp+16
 30845  0000                     lltemp3	set	btemp+24
 30846                           tosu	equ	0x3FFF
 30847                           tosh	equ	0x3FFE
 30848                           tosl	equ	0x3FFD
 30849                           stkptr	equ	0x3FFC
 30850                           pclatu	equ	0x3FFB
 30851                           pclath	equ	0x3FFA
 30852                           pcl	equ	0x3FF9
 30853                           tblptru	equ	0x3FF8
 30854                           tblptrh	equ	0x3FF7
 30855                           tblptrl	equ	0x3FF6
 30856                           tablat	equ	0x3FF5
 30857                           prodh	equ	0x3FF4
 30858                           prodl	equ	0x3FF3
 30859                           indf0	equ	0x3FEF
 30860                           postinc0	equ	0x3FEE
 30861                           postdec0	equ	0x3FED
 30862                           preinc0	equ	0x3FEC
 30863                           plusw0	equ	0x3FEB
 30864                           fsr0h	equ	0x3FEA
 30865                           fsr0l	equ	0x3FE9
 30866                           wreg	equ	0x3FE8
 30867                           indf1	equ	0x3FE7
 30868                           postinc1	equ	0x3FE6
 30869                           postdec1	equ	0x3FE5
 30870                           preinc1	equ	0x3FE4
 30871                           plusw1	equ	0x3FE3
 30872                           fsr1h	equ	0x3FE2
 30873                           fsr1l	equ	0x3FE1
 30874                           bsr	equ	0x3FE0
 30875                           indf2	equ	0x3FDF
 30876                           postinc2	equ	0x3FDE
 30877                           postdec2	equ	0x3FDD
 30878                           preinc2	equ	0x3FDC
 30879                           plusw2	equ	0x3FDB
 30880                           fsr2h	equ	0x3FDA
 30881                           fsr2l	equ	0x3FD9
 30882                           status	equ	0x3FD8


Data Sizes:
    Strings     521
    Constant    372
    Data        965
    BSS         1077
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160      0     154
    BANK1           256      0     250
    BANK2           256     25     221
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_60(CODE[1]), STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_57(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_57(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[6]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_48(CODE[4]), STR_47(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), 
		 -> STR_20(CODE[19]), STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[19]), STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5739_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_46(CODE[75]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), 
		 -> STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), 
		 -> STR_37(CODE[19]), STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), 
		 -> STR_33(CODE[15]), STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4381tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  317816
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27994
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  167020
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83257
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            58    10     48   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56422
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56140
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27963
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   32553
                                              0 BANK2     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   32463
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           4     4      0   32463
                       _Volts_to_SOC
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            58    10     48   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _Volts_to_SOC
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     19      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FF      58        0.0%
DATA                 0      0     821       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec  7 21:27:37 2019

                     _SPI1_Exchange8bit 9B66                __end_of_set_display_info 9BDE  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 00A5  
                                     _R 00CB                                       _S 0060  
                                     _T FD51                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 989E            __end_of_start_switch_handler 9B46  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FDE1                  __end_of_FVR_Initialize 9D92  
                           __CFG_LVP$ON 000000                                     l169 9CBA  
                                   l807 9B74                                     l673 96DE  
                                   _GIE 01FE97                                     _abs 9140  
                                   _pad 7992                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 9C66                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 9ABC                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0096                           _INT1_CallBack 9A50  
                          __CFG_ZCD$OFF 000000                                    l1000 93DE  
                                  l2019 4856                                    l1316 1FA8  
                                  l1308 1DE0                                    l1333 25FC  
                                  l1414 8E64                                    l1326 2046  
                                  l1318 1FAE                                    l2055 123A  
                                  l2208 1D78                                    l1328 210C  
                                  l3017 7870                                    l2137 59CE  
                                  l1329 221A                         _timer3ReloadVal 0027  
                                  l1188 941E                                    l2084 066A  
                                  l2158 4C3C                                    l2503 7244  
                                  l1632 947E                                    l3312 8A22  
                                  l1641 6388                                    l1554 84EE  
                                  l2530 6F72                                    l1642 64E4  
                                  l2099 0B1A                                    l1573 94B2  
                                  l1558 87F6                                    l1649 7BB2  
                                  l1737 4772                                    l1780 6C6A  
                                  l2492 8222                                    l3284 6AAA  
                  _ADCC_StartConversion 9CD4                                    l2815 42C2  
                                  l2496 7170                                    l1689 9BDA  
                                  l1857 891C                                    l2770 3614  
                                  l2922 9180                                    l2914 6E00  
                                  l1866 7ECC                                    l2851 2E58  
                                  l3299 8AA6                                    l7100 34E4  
                                  l7012 318E                                    l7110 350C  
                                  l2782 34A4                                    l7022 3200  
                                  l7032 323C                                    l7200 6DA2  
                                  l2953 608C                                    l7114 3512  
                                  l7026 3220                                    l2891 66E2  
                                  l7140 35B4                                    l7060 3324  
                                  l7028 3232                                    l7036 326C  
                                  l7142 35C4                                    l7126 3570  
                                  l7054 3308                                    l7302 5C58  
                                  l7206 6DF8                                    l1999 79EE  
                                  l7136 359C                                    l7056 331A  
                                  l7064 3356                                    l7320 5D70  
                                  l7224 8A96                                    l7402 3EC6  
                                  l7148 35F4                                    l7076 342E  
                                  l7308 5C9E                                    l7340 60F4  
                                  l7420 3F84                                    l7252 51EE  
                                  l7094 34C6                                    l7086 3488  
                                  l7078 3454                                    l7182 9170  
                                  l7502 423E                                    l7414 3F4A  
                                  l7406 3EDC                                    l7262 52F4  
                                  l7254 523E                                    l7238 50D0  
                                  l7096 34D8                                    l7408 3F0C  
                                  l7280 8A12                                    l7514 4296  
                                  l7258 5286                                    l7620 2C4C  
                                  l7540 26D4                                    l7532 268E  
                                  l7356 6228                                    l7348 617C  
                                  l7700 73EC                                    l7516 42A6  
                                  l7508 426E                                    l7428 3F9E  
                                  l7196 6D9E                                    l7630 2C8E  
                                  l7550 275C                                    l7542 2704  
                                  l7462 40FC                                    l7454 40CA  
                                  l7446 4064                                    l7438 402E  
                                  l7382 3DE8                                    l7640 2CD8  
                                  l7560 27D2                                    l6912 85C2  
                                  l7296 5C04                                    l7720 74B2  
                                  l7472 413E                                    l7448 4076  
                                  l7456 40CE                                    l7376 3DA8  
                                  l7800 720C                                    l7626 2C68  
                                  l7538 26CE                                    l6914 85E4  
                                  l7706 740C                                    l7482 4188  
                                  l7386 3DFE                                    l7644 2CDE  
                                  l7556 279C                                    l6940 2EB8  
                                  l9340 6AEC                                    l8452 5EFE  
                                  l8436 5E3C                                    l7740 789A  
                                  l7468 4118                                    l7396 3E86  
                                  l7388 3E2E                                    l9510 766A  
                                  l9502 7640                                    l7654 2D52  
                                  l7558 27A2                                    l6950 2F0E  
                                  l8462 5FE0                                    l8454 5F16  
                                  l8446 5ED2                                    l8438 5E5E  
                                  l7486 418E                                    l9422 42CE  
                                  l9504 7650                                    l7672 2E06  
                                  l7664 2DC2                                    l7568 27F4  
                                  l6952 2F3E                                    l9352 6B30  
                                  l8472 607C                                    l8456 5F3A  
                                  l7728 74E6                                    l7744 78AC  
                                  l7496 4202                                    l7808 7242  
                                  l7816 9116                                    l9530 773C  
                                  l9522 76CE                                    l9506 7656  
                                  l9514 7672                                    l7674 2E20  
                                  l7658 2D98                                    l6970 2FE8  
                                  l6946 2EF8                                    l8458 5F78  
                                  l7850 6F0A                                    l7842 6EDE  
                                  l7826 6E5C                                    l8490 69E0  
                                  l9450 4528                                    l9442 44F6  
                                  l9284 9066                                    l9508 765C  
                                  l9516 769E                                    l6964 2FA8  
                                  l9348 6B18                                    l7748 78C4  
                                  l7852 6F20                                    l7844 6EFA  
                                  l9428 42FE                                    l6982 3050  
                                  l6974 2FFE                                    l6958 2F76  
                                  l7870 8FFE                                    l7694 73D6  
                                  l7766 7978                                    l7758 7944  
                                  l7782 8220                                    l7774 81AA  
                                  l7790 712E                                    l8902 6660  
                                  l9462 46A4                                    l9454 45C4  
                                  l9438 441C                                    l9542 88D6  
                                  l9288 9098                                    l8824 903A  
                                  l9712 9406                                    l6976 302E  
                                  l8488 6974                                    l8912 66C2  
                                  l8816 9798                                    l9386 9494  
                                  l7778 81EC                                    l7796 71BE  
                                  l9468 4740                                    l9476 4752  
                                  l8860 8752                                    l8852 86E6  
                                  l8694 97CE                                    l8870 6532  
                                  l8880 65AC                                    l8856 874E  
                                  l8848 86DE                                    l8786 94BC  
                                  l8890 660E                                    l8882 65C2  
                                  l9834 82EE                                    l8892 662C  
                                  l8884 65E0                                    l9694 93C6  
                                  l8894 6642                                    l8878 659E  
                                  l9838 832C                                    l9862 7DDA  
                                  STR_1 FF5F                                    l9856 58D8  
                                  STR_2 FFB1                                    STR_3 FFDF  
                                  l9962 8AE4                                    l9874 7E36  
                                  STR_4 FF4E                                    STR_5 FF70  
                                  l9956 939C                                    l9884 7EA6  
                                  STR_6 FFB1                                    STR_7 FFDF  
                                  STR_8 FF3D                                    STR_9 FF92  
                                  l9968 8AF4                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 3476  
                                  _T2PR 003FAB                                    u5110 3560  
                                  u5050 34EA                                    u5115 3550  
                                  u5140 3580                                    u5300 6DF0  
                                  u5070 3504                                    u5310 6DF2  
                                  u6200 2D66                                    u5240 9154  
                                  u6105 2A3E                                    u6210 2DAC  
                                  u5250 6D22                                    _T6PR 003F93  
                                  u6115 2C06                                    u5420 5194  
                                  u5340 8A54                                    u5180 95C2  
                                  u5500 89D2                                    _PMD0 0039C0  
                                  u5405 50EE                                    _PMD1 0039C1  
                                  u6150 2CD0                                    u4710 8612  
                                  u5406 50F4                                    u5350 8A56  
                                  u5190 95C4                                    _PMD2 0039C2  
                                  u5255 6D18                                    u5407 5102  
                                  _PMD3 0039C3                                    u6080 27E2  
                                  u5520 9622                                    u5600 5CCA  
                                  u5440 526C                                    _PMD4 0039C4  
                                  u5425 518A                                    _PMD5 0039C5  
                                  u5530 9624                                    u6330 78F0  
                                  u5370 5068                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u4900 3264  
                                  u5620 5DA8                                    u5700 6176  
                                  u6260 7438                                    u5380 50B4  
                                  u4740 95F2                                    u4717 8604  
                                  u5445 5262                                    u6190 2D2C  
                                  u4910 3284                                    u5550 5BFE  
                                  u5710 61A8                                    u6350 7964  
                                  u4750 95F4                                    u5470 92D6  
                                  u6095 2976                                    u5295 6DD2  
                                  u5375 505E                                    u5640 5DFA  
                                  u6280 74D2                                    u5480 92D8  
                                  u4905 3254                                    u8210 8C7C  
                                  u4850 31B4                                    u5570 5C54  
                                  u5730 6260                                    u6450 9112  
                                  u6530 6F28                                    u5490 89D0  
                                  u6195 2D1C                                    u4860 31D4  
                                  u6460 6E3C                                    u4861 31CE  
                                  u5581 5C5E                                    u8310 6ACA  
                                  u5590 5C98                                    u5750 62B2  
                                  u5670 60EE                                    u6390 821C  
                                  u6550 6F52                                    u6470 6E50  
                                  u8055 9312                                    u6560 8FDA  
                                  u6480 6E8A                                    u6465 6E32  
                                  u4970 334C                                    u6570 8FFA  
                                  u5690 6144                                    u5930 4180  
                                  u8170 6656                                    u8235 8CB0  
                                  u8236 8CB2                                    u8228 8C7E  
                                  u6485 6E80                                    u4878 31D6  
                                  u7630 5ECE                                    u8414 433A  
                                  u4975 333C                                    u8415 4334  
                                  u8600 88C2                                    u7650 6026  
                                  u9330 777A                                    u5970 41DC  
                                  u5890 40F6                                    u9410 8156  
                                  u7730 6A6C                                    u8434 4510  
                                  u8435 450A                                    u7660 6028  
                                  u5980 4216                                    u9350 77F6  
                                  u9510 47A8                                    u5990 4252  
                                  u8454 45DE                                    u8374 42E8  
                                  u8630 8908                                    u5975 41CC  
                                  u8455 45D8                                    u8375 42E2  
                                  u9520 47AA                                    u8480 4608  
                                  u9601 4B04                                    u9417 8148  
                                  u8490 9B10                                    u9610 4B1A  
                                  u8474 4600                                    u8394 4318  
                                  u8618 88C4                                    u9611 4B18  
                                  u8475 45FA                                    u8395 4312  
                                  u9620 4B2E                                    u9540 481A  
                                  u9630 4B32                                    u8496 9B12  
                                  u9560 482C                                    u9720 0194  
                                  u9480 5600                                    u8648 890A  
                                  u9650 4B48                                    u9810 050E  
                                  u9730 0196                                    _PLLR 01CEE0  
                                  u9580 487C                                    u9590 4AD4  
                                  u9910 0648                                    u9840 0562  
                                  u9760 02A6                                    u9770 02A8  
                                  u9690 00DA                                    u9870 05C6  
                                  u9980 0A18                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 96B8  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FDF1                                    _cp_l FDED  
                                  _atoi 5E22                                    _ctoa 8920  
                                  _main 1D82                                    _dtoa 4778  
                                  _nanf 8D38                                    _seed 02D5  
                                  _prec 0023                                    _nout 00C7  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 58E4  
                                  btemp 0001                                    _xtoa 4BF8  
                __end_of_check_adc_scan 9D8A                           ___fpclassifyf 6C74  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit 9B84               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 9258                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 9990                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR 9D22  
                      __end_of_INT1_ISR 9462          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 84F6           __end_of_OSCILLATOR_Initialize 9CC0  
                                 l11002 4D02                                   l11102 14A8  
                                 l11200 1CA6                                   l11104 14E2  
                                 l11042 4F68                                   l11018 4DF8  
                                 l11026 4E7E                                   l11210 1D04  
                                 l11122 165C                                   l11106 14F8  
                                 l11132 16F2                                   l11206 1D00  
                                 l10510 53B6                                   l11152 18E8  
                                 l11144 1830                                   l11080 1326  
                                 l11216 1D24                                   l10442 7786  
                                 l10610 4B72                                   l11082 1360  
                                 l10530 558C                                   l10522 54DE  
                                 l11156 191C                                   l11084 1376  
                                 l10516 5474                                   l10454 864E  
                                 l10470 79F8                                   l10542 893E  
                                 l10614 4BAE                                   l10702 04D2  
                                 l11270 83CC                                   l10464 79BE  
                                 l10544 896A                                   l10720 058E  
                                 l10640 00F0                                   l11176 1A7C  
                                 l11272 840E                                   l11256 854E  
                                 l10458 868C                                   l10474 7A34  
                                 l10810 0C32                                   l10714 0554  
                                 l11186 1B2A                                   l11540 9B62  
                                 l11452 372A                                   l10468 79E6  
                                 l10580 48AE                                   l10484 80DC  
                                 l10660 0216                                   l10628 00AC  
                                 l11462 393A                                   l10478 7A7E  
                                 l10590 4AC0                                   l10910 119A  
                                 l10822 0CBA                                   l10830 0D24  
                                 l10734 05F6                                   l10726 0594  
                                 l10718 057C                                   l10662 022C  
                                 l11552 96DA                                   l11480 3BC2  
                                 l11448 36E8                                   l10576 4890  
                                 l10568 4846                                   l10752 06B8  
                                 l10736 0602                                   l10648 0146  
                                 l11800 2038                                   l11720 1DC2  
                                 l11474 3B30                                   l11466 39B8  
                                 l10762 077A                                   l10658 01EA  
                                 l10666 0258                                   l10930 5950  
                                 l11650 6358                                   l11722 1DCA  
                                 l11484 3BD8                                   l10772 0926  
                                 l10756 06F0                                   l10692 0396  
                                 l10676 02FC                                   l10684 032A  
                                 l11396 7ACA                                   l11812 22F8  
                                 PRLOCK 0039EF                                   l11478 3BBA  
                                 l10838 0D90                                   l10846 0EA2  
                                 l10950 5A40                                   l11726 1DE8  
                                 l10872 0FD6                                   l10696 0406  
                                 l10960 5AFA                                   l11664 6480  
                                 l11816 235A                                   l11728 1DFA  
                                 l10874 0FF0                                   l10858 0F3A  
                                 l10794 0B12                                   l10786 0A48  
                                 l10698 0470                                   l10954 5A70  
                                 l10946 5A04                                   l11850 2576  
                                 l11826 24D6                                   l11834 2520  
                                 l10884 1092                                   l10796 0B34  
                                 l10964 5B26                                   l11852 258E  
                                 l11844 2564                                   l11828 2500  
                                 l11780 1FE0                                   l10894 10E2  
                                 l10982 4C2C                                   l11862 25D2  
                                 l10968 5B62                                   l11872 2626  
                                 l11792 2014                                   l10994 4CA2  
                                 l11858 25AC                                   l11778 1FB2  
                                 l10988 4C66                         __end_of___aodiv 5E22  
                          _Volts_to_SOC 86D6                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 361E  
                                 _ADCLK 003EFF                         __end_of___aomod 62D6  
                                 _ADPCH 003EF1                         __end_of___fldiv 42CC  
                                 _ADREF 003EFD                         __end_of___awdiv 7500  
                       __end_of___flneg 9140                                   STR_11 FF81  
                                 STR_12 FEB8                                   STR_20 FEA5  
                                 STR_21 FF92                                   STR_13 FEDE  
                                 STR_30 FE7F                                   STR_22 FF92  
                                 STR_14 FECB                                   STR_23 FF81  
                                 STR_31 FFCC                                   STR_15 FF2A  
                                 STR_32 FFCC                                   STR_24 FFFB  
                                 STR_16 FF04                                   STR_25 FFF8  
                                 STR_33 FFA2                                   STR_17 FF17  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA2  
                                 STR_18 FEF1                                   STR_35 FFA2  
                                 STR_51 FFE9                                   STR_27 FFC0  
                                 STR_19 FE58                                   STR_52 FFF1  
                                 STR_28 FFD6                                   STR_36 FE40  
                       __end_of___awmod 7992                                   STR_45 FE3F  
                                 STR_29 FE7F                                   STR_38 FE92  
                                 STR_46 FDF5                                   STR_55 FFF5  
                                 STR_47 FFE5                                   STR_39 FE6C  
                                 STR_48 FFED                                   _ADRPT 003EEC  
                                 STR_57 FFF5                         __end_of___flmul 2E62  
                       __end_of___flsub 91CC                         __end_of___fltol 6F7C  
                                 u10140 10B8                                   u10300 4C12  
                                 u10160 116E                                   u10080 0EE4  
                                 u10240 5A66                                   u10400 4E7A  
                                 u10170 1170                                   u10250 5AAC  
                                 u10410 4E9A                                   u10330 4CFA  
                                 u10340 4D4E                                   u10421 4ECA  
                                 u10405 4E5C                                   u10430 4EE0  
                                 u10350 4D50                                   u10431 4EDE  
                                 u10280 5B88                                   u10440 4EF4  
                                 u10520 13BE                                   u10257 5A9E  
                                 u10450 4EF8                                   u10370 4DAE  
                                 u10530 13C0                                   u10380 4DB0  
                                 u10540 13E6                                   u10720 1B7E  
                                 u10640 1746                                   u10570 1540  
                                 _U1P1H 003DED                                   u10580 1542  
                                 u10740 852E                                   _U1P2H 003DEF  
                                 u10670 19D6                                   u10590 1568  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10680 19D8  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10970 64D0                                   _U2P3L 003DD8  
                                 u10980 64D2                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 003D  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 9DAC                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 73B2  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 8F6A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 9C4E                            _DMA1CON1bits 003BFD  
                                 _flags 0025                __size_of_calc_model_data 02DA  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 7756              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 92E2                                   _fputs 863E  
                       __end_of_isdigit 962E                         __end_of_ivln2_h FDED  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand 9506  
                                 _width 0021                                   _putch 9C18  
                       __end_of_islower 95CE                         __end_of_isspace 900E  
              _INT1_SetInterruptHandler 98C6                         __end_of_isupper 95FE  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 984E             _UART1_SetRxInterruptHandler 9826  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 7DCE  
                       __end_of_tolower 8AB0                         __end_of_strncmp 6AB4  
                       __end_of_toupper 8A2C               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 99B8                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 9212                   __end_of_ringBufS_init 9786  
                       __initialization 7BB6                       _UART2_rx_vect_isr 99E0  
                          __end_of_cp_h FDF5                            __end_of_cp_l FDF1  
                          __end_of_atoi 6096                            __end_of_ctoa 89A8  
                          __end_of_main 2638                            __end_of_dtoa 4BF8  
                          __end_of_nanf 8D9A                            __end_of_stoa 5BA2  
                          __end_of_xtoa 4FB2                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize 9C7E  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 93A4  
              _TMR5_SetInterruptHandler 9876                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
                     _port_data_dma_ptr 9D3C                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 96E4  
                       _PWM8_Initialize 9C94                        _UART1_Initialize 91CC  
                     _UART2_tx_vect_isr 99B8                      _UART2_Transmit_ISR 96B8  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 8CD4  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 92E2  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 8F5C                                  _RB6PPS 003A0E  
                                i1l1205 731A                    _start_switch_handler 9B26  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 929E                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 9D04  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u906_44 8B14                                  u827_20 996E  
                                u850_28 7646                                  u906_45 8B0E  
                                u827_26 9970                                  u853_20 7666  
                                u853_21 7660                                  u857_24 7732  
                                u857_25 772E                                  u881_48 9AF0  
                                u873_48 9ACC                                  u875_28 9A60  
                  __size_of_hid_display 0102                                  u884_28 9A84  
                      __end_of___xxtofl 66EC   __end_of_ADCC_DischargeSampleCapacitor 9D72  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 9D6A  
              __end_of_send_lcd_cmd_dma 8FBC                         _TMR3_WriteTimer 93E4  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr 9A08  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 9D32  
                      _UART2_Initialize 8DFC                                  _WaitMs 949A  
                       _conv_raw_result 42CC                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 70EC  
                                ___fleq 8168                       _ADCC_ThresholdISR 8C04  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 876C  
                                _efgtoa 0000                                  _floorf 4FB2  
                    ?_ADCC_ThresholdISR 0038                                  _memset 531E  
                  __size_of_help_button 0038                                  clear_0 7C4A  
                                clear_1 7C5E                                  clear_2 7C70  
                                clear_3 7C7C                                  clear_4 7C88  
                                clear_5 7C94                                  clear_6 7CA0  
                                clear_7 7CAC               __end_of_port_data_dma_ptr 9D46  
                                _printf 8D9A                      _eaDogM_WriteString 84F6  
                                _strcpy 8094                               ?_ADCC_ISR 0038  
                                _strlen 859C                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize 8B98  
                        _PMD_Initialize 9CC0               __end_of_UART2_tx_vect_isr 99E0  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 8D38  
                          __mediumconst FC80                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 8EB4                        __end_of_vfprintf 844C  
                            _StartTimer 9324           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 9258                       _SYSTEM_Initialize 90AE  
                            __accesstop 0060                 __end_of__initialization 7CBE  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help 9D82                    __end_of_display_info 9D7A  
             __end_of_CLKREF_Initialize 9D3C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 93A4  
                 _set_temp_display_help 9CE6                        _clear_hid_pflags 9A2C  
                 __end_of_TMR3_CallBack 9ABC               __end_of_ADCC_ThresholdISR 8C6E  
                    __size_of_calc_bsoc 0734                  __end_of_ringBufS_flush 87FE  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 962E  
                          __pidataBANK1 7FBA                            __pidataBANK2 822C  
           __size_of_send_port_data_dma 0052                               ?_TMR3_ISR 0038  
                             ?_TMR5_ISR 0038                               ?_TMR6_ISR 0038  
                        ivt0x8_undefint 00AC                           __end_of_fputc 787A  
                         __end_of_fputs 86D6                           __end_of_srand 953A  
                 __end_of_TMR5_CallBack 9A98                           __end_of_putch 9C32  
               __end_of_PWM8_Initialize 9CAA                 __end_of_TMR6_Initialize 970E  
                     _adc_int_t_handler 8AB0                  __end_of_PMD_Initialize 9CD4  
                            __end_of_bp FDE9                              ??_ADCC_ISR 0038  
                 __end_of_TMR6_CallBack 9B04             __size_of_EXT_INT_Initialize 0034  
                         _DMA1_DMAA_ISR 9D54                   TMR3_ISR@CountCallBack 00C9  
                        _clear_adc_scan 9D92                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00BE  
             __end_of_SYSTEM_Initialize 90F8                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 9424  
                            __pbssBANK0 0060                              __pbssBANK1 01DA  
                            __pbssBANK2 02D5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 62D6                 __end_of_conv_raw_result 4778  
                 _INT0_InterruptHandler 00C4                              ??_INT0_ISR 0038  
                            ??_INT1_ISR 003E                       __end_of_TimerDone 97D6  
                      _DMA1_DMADCNT_ISR 9D48                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                           _init_port_dma 956E  
                 __end_of_wait_lcd_done 9C18        __end_of_TMR3_SetInterruptHandler 98C6  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 9876  
                            ??_TMR3_ISR 02BC                 __end_of_ADCC_Initialize 8C02  
                            ??_TMR5_ISR 0042               __end_of_adc_int_t_handler 8B2E  
                            ??_TMR6_ISR 003D                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 993E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 9916  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 9B46  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 9D98                          ?_DMA1_DMAA_ISR 0038  
                      _DMA1_DMASCNT_ISR 9D24                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1083_20 3B28  
                               u1090_28 9AA8                                 _U1ERRIR 003DF9  
                               u1085_20 3BD0                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0038              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3D52                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 9786                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 93E4                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 9C4E                                 __Lparam 0000  
              __end_of_UART1_Initialize 9212                       __end_of_hid_input 8920  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5BA2  
                               ___fladd 2E62                                 ___aomod 6096  
                               ___fldiv 3D52                                 ___awdiv 73B2  
                               ___flneg 90F8                                 ___awmod 787A  
                               ___flmul 2638                                 ___flsub 9186  
                               ___fltol 6E0A               __end_of_UART1_Receive_ISR 9B66  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7FBA                                 __pcinit 7BB6  
              __end_of_mode_lamp_bright 9D12                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 9CF6  
                               __ramtop 2000                                 __ptext0 1D82  
                               __ptext1 9A08                                 __ptext2 9B26  
                               __ptext3 8CD4                                 __ptext4 9CD4  
                               __ptext5 9D6A                                 __ptext6 9506  
                               __ptext7 956E                                 __ptext8 7ED0  
                               __ptext9 970E                       _UART2_Receive_ISR 9BDE  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 9CAA                            __size_of_abs 0046  
                          __size_of_pad 0114                                 us565999 5E0C  
                     __end_of_init_bsoc 70EC                                 _isalpha 929E  
                               _isdigit 95FE                                 us576999 62C4  
                               _ivln2_h FDE9                                 us950999 4792  
                             _T3CONbits 003FA6                                 _mode_sw 002E  
                     __end_of_lp_filter 6C74                                 _islower 959E  
                               _isspace 8FBC                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8E5A  
                               _isupper 95CE              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 7CC4                                 _tolower 8A2C  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 68EC  
                               _toupper 89A8                    end_of_initialization 7CBE  
             __size_of_convert_adc_data 00B8                      _check_enter_button 9364  
                             i1u1115_20 7310     __end_of_UART2_SetRxInterruptHandler 9826  
           _UART2_SetRxInterruptHandler 97FE                               i2u1100_48 99A4  
                             i2u1102_48 99CC                       __end_of_set_vterm 9BC0  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 9DA4               __end_of_UART2_Receive_ISR 9BFC  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 003E                   _INT1_InterruptHandler 00C1  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 9DAA  
              _TMR3_SetInterruptHandler 989E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 984E                            _display_help 9D7A  
                 _TMR5_InterruptHandler 00AC                            _display_info 9D72  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 9A50  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 9966  
           _ADCC_SetADIInterruptHandler 993E                              _update_lcd 7AA6  
                       _calc_model_data 560A                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 9A08  
                       _DMA1_Initialize 8B2E                              _start_bsoc 9B04  
                       _SPI1_Initialize 9C7E                   __end_of_get_vterm_ptr 968C  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 94D0            __end_of_INTERRUPT_Initialize 8CD4  
                            _vterm_dump 7500                          __end_of___flge 724E  
                        __end_of___fleq 822C    __end_of_INT0_DefaultInterruptHandler 9DB8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 9DB6  
            __size_of_UART1_Receive_ISR 0020                         _DMA2_Initialize 8EB4  
                         __pidataBIGRAM 66EC                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 531E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0095                          __end_of_memset 560A  
                        __end_of_printf 8DFC                __end_of_DMA1_DMADCNT_ISR 9D52  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 9AE0  
                        __end_of_strcpy 8168                          __end_of_strlen 863E  
                   start_initialization 7BB6    __end_of_TMR5_DefaultInterruptHandler 998E  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 9966  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 9186  
                 __end_of_INT1_CallBack 9A74               __size_of_set_display_info 001E  
                           __end_of_pad 7AA6                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 975E                          _switch_handler 762E  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01F2                   __end_of___fpclassifyf 6E0A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR 9D32  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 9D60  
                   __end_of_hid_display 7ED0              __end_of_send_port_data_dma 9060  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 97AE  
                         _ringBufS_init 975E                             __pdataBANK0 00CB  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 956E                 __end_of_calc_model_data 58E4  
                   __end_of_help_button 949A         __end_of_eaDogM_WriteStringAtPos 9506  
                   __end_of_BVSOC_TABLE FD51                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 8B98                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler 9916                           __pcstackBANK2 02BC  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 7756                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9C94                _UART1_RxInterruptHandler 00B8  
              _UART2_TxInterruptHandler 00BB                               __end_of_T FDE1  
                      _convert_adc_data 82E8                               _calc_bsoc 361E  
             __size_of_ringBufS_put_dma 00AA                            _init_display 7ED0  
                __end_of_DMA1_DMAOR_ISR 9D6A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8F0E                  _PIN_MANAGER_Initialize 87FE  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 9D9E  
                         __pmediumconst FC80                               __ptext100 97FE  
                             __ptext101 91CC                               __ptext110 9C7E  
                             __ptext102 9826                               __ptext111 9C94  
                             __ptext103 96E4                               __ptext120 8EB4  
                             __ptext112 9CC0                               __ptext104 984E  
                             __ptext121 8B2E                               __ptext113 87FE  
                             __ptext105 9212                               __ptext130 8F10  
                             __ptext122 9D32                               __ptext114 9CAA  
                             __ptext106 9876                               __ptext131 93A4  
                             __ptext123 8B98                               __ptext115 8C6E  
                             __ptext107 9258                               __ptext140 9D3C  
                             __ptext132 9A74                               __ptext124 9916  
                             __ptext116 9D8A                               __ptext108 989E  
                             __ptext141 9D14                               __ptext133 9966  
                             __ptext125 993E                               __ptext117 953A  
                             __ptext109 9C66                               __ptext150 9990  
                             __ptext142 9ABC                               __ptext134 7250  
                             __ptext126 9424                               __ptext118 98C6  
                             __ptext151 9B46                               __ptext143 9DB6  
                             __ptext135 93E4                               __ptext127 9A50  
                             __ptext119 98EE                               __ptext160 9D48  
                             __ptext152 99B8                               __ptext144 9DAC  
                             __ptext136 9A98                               __ptext128 9DB2  
                             __ptext161 9D54                               __ptext153 96B8  
                             __ptext145 968C                               __ptext137 9DB4  
                             __ptext129 762E                               __ptext162 9D60  
                             __ptext154 99E0                               __ptext146 8AB0  
                             __ptext138 361E                               __ptext163 0000  
                             __ptext155 9BDE                               __ptext147 9DB8  
                             __ptext139 900E                               __ptext156 9C34  
                             __ptext148 9DBA                               __ptext157 9AE0  
                             __ptext149 8C04                               __ptext158 9060  
                             __ptext159 9D24                               _hid_input 8890  
                    __end_of_StartTimer 9364                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 968C  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 6F7C                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6AB4  
                           _hid_display 7DCE                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 8C6E  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR 9D14  
                              _INT1_ISR 9424                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DA                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack 9A98                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              i2u911_48 8C3A                                i2u911_49 8C4E  
                              _PIR9bits 0039A9                                i2u917_48 99F4  
                              i2u909_48 96A4                __size_of_TMR5_Initialize 0046  
                             _set_vterm 9BA2                     __size_of_update_lcd 0110  
                           _help_button 9462                                _TMR3_ISR 7250  
                           _BVSOC_TABLE FC81                                _TMR5_ISR 8F10  
                              _TMR6_ISR 9C34                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack 9A74                              _ADCON0bits 003EF8  
                    __end_of_check_help 64E8                               _start_lcd 9D9E  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 9AE0                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 9DA4  
                      _set_display_info 9BC0                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 7BCA                               copy_data1 7BF0  
                             copy_data2 7C12                               copy_data3 7C34  
              _INT0_SetInterruptHandler 98EE                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler 97FE             _UART2_SetTxInterruptHandler 97D6  
                          _uart1RxCount 0035                            _uart2RxCount 002F  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 9BFC                            _send_lcd_cmd 9736  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 9DBA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 97AE  
                 __end_of_DMA1_DMAA_ISR 9D5E                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 64E8                       ?_DMA1_DMADCNT_ISR 0038  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9D04                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003E                                __ptext10 9736  
                              __ptext11 9B66                                __ptext20 42CC  
                              __ptext12 975E                                __ptext21 8D38  
                              __ptext13 6F7C                                __ptext30 949A  
                              __ptext22 9B84                                __ptext14 86D6  
                              __ptext31 7AA6                                __ptext23 64E8  
                              __ptext15 7DCE                                __ptext40 531E  
                              __ptext32 94D0                                __ptext24 9A2C  
                              __ptext16 8890                                __ptext41 8D9A  
                              __ptext33 8F6A                                __ptext25 9D92  
                              __ptext17 9786                                __ptext50 0000  
                              __ptext42 83A0                                __ptext34 9BFC  
                              __ptext26 62D6                                __ptext18 9CF6  
                              __ptext51 8A2C                                __ptext43 1244  
                              __ptext35 8E5A                                __ptext27 7500  
                              __ptext19 82E8                                __ptext60 3D52  
                              __ptext52 95CE                                __ptext44 4BF8  
                              __ptext36 84F6                                __ptext28 7CC4  
                              __ptext61 787A                                __ptext53 8094  
                              __ptext45 89A8                                __ptext37 9D98  
                              __ptext29 965E                                __ptext70 863E  
                              __ptext62 73B2                                __ptext54 4FB2  
                              __ptext46 959E                                __ptext38 9D9E  
                              __ptext71 7756                                __ptext63 4778  
                              __ptext55 6C74                                __ptext47 929E  
                              __ptext39 876C                                __ptext80 9C4E  
                              __ptext72 9C18                                __ptext64 9140  
                              __ptext56 6E0A                                __ptext48 68EC  
                              __ptext81 9D04                                __ptext73 844C  
                              __ptext65 6096                                __ptext57 90F8  
                              __ptext49 58E4                                __ptext90 560A  
                              __ptext82 92E2                                __ptext74 5E22  
                              __ptext66 5BA2                                __ptext58 70EC  
                              __ptext91 9DA4                                __ptext83 9462  
                              __ptext75 8FBC                                __ptext67 8920  
                              __ptext59 8168                                __ptext92 9B04  
                              __ptext84 97AE                                __ptext76 95FE  
                              __ptext68 7992                                __ptext93 6AB4  
                              __ptext85 9324                                __ptext77 9BA2  
                              __ptext69 859C                                __ptext94 9186  
                              __ptext86 9D72                                __ptext78 9CE6  
                              __ptext95 2E62                                __ptext87 9D7A  
                              __ptext79 9BC0                                __ptext96 2638  
                              __ptext88 9364                                __ptext97 90AE  
                              __ptext89 9D82                                __ptext98 8DFC  
                              __ptext99 97D6                        __size_of_isupper 0030  
                              us1032999 4C78                                us1019999 58F6  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 844C                    __end_of_Volts_to_SOC 876C  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08B6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma 959E                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00B5  
                             stoa@F1166 01D3                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion 9CE6                                _spi_link 0089  
                              _wdtdelay 8E5A              __end_of_UART2_Transmit_ISR 96E4  
                              _vfprintf 83A0                __end_of_convert_adc_data 83A0  
            __end_of_PWM8_LoadDutyValue 9324    __end_of_TMR3_DefaultInterruptHandler 9DB6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler 9DB4  
  __end_of_INT1_DefaultInterruptHandler 9DB4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 9DB2                      _send_port_data_dma 900E  
                         ??_Default_ISR 0038                             _uart1RxHead 0037  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0031  
                           _uart1RxTail 0036                          _get_raw_result 9B84  
                           _uart2TxHead 0034                             _uart2RxTail 0030  
                           _uart2TxTail 0033                            _wait_lcd_set 9D98  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize 953A  
  __end_of_TMR6_DefaultInterruptHandler 90AE   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 9060    __end_of_ADCC_DefaultInterruptHandler 9DBA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 9DB8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 970E          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9CF6                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 859C                   __end_of_mode_lamp_dim 9C66  
               __end_of_adc_int_handler 9DBC                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 7BB6  
                _uart2TxBufferRemaining 0032                      __end_of_static_soc 9A2C  
                    __end_of_start_bsoc 9B26                          _FVR_Initialize 9D8A  
                __end_of_get_raw_result 9BA2                        _send_lcd_cmd_dma 8F6A  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0029  
      __end_of_INT1_SetInterruptHandler 98EE               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 003E               __end_of_send_lcd_cmd_long 9736  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 9DB2  
        __end_of_PIN_MANAGER_Initialize 8890               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 762E                 _eaDogM_WriteStringAtPos 94D0  
                         _get_vterm_ptr 965E                          _check_adc_scan 9D82  
             __size_of_UART2_Initialize 005E  
