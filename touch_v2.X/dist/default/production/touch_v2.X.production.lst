

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar  7 20:26:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=4,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=4,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=4,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=4,class=CODE,delta=1
   102                           	psect	text85,global,reloc=4,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=4,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=4,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=4,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=4,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=4,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=4,class=CODE,delta=1
   116                           	psect	text99,global,reloc=4,class=CODE,delta=1
   117                           	psect	text100,global,reloc=4,class=CODE,delta=1
   118                           	psect	text101,global,reloc=4,class=CODE,delta=1
   119                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   120                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   121                           	psect	text102,global,reloc=4,class=CODE,delta=1
   122                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124  0000                     
   125                           ; Version 2.05
   126                           ; Generated 20/12/2018 GMT
   127                           ; 
   128                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC18F57K42 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159  0000                     
   160 ;;_sum	offset	0
   161 ;;_mode	offset	2
   162 ;;_block	offset	0
   163 ;;_rxData	offset	3
   164 ;;_t_link	offset=-1 (param)
   165 ;;_stream	offset=-1 (param)
   166 ;;_function	offset=-2 (param)
   167 ;;_f	offset	0
   168 ;;_ap	offset	5
   169 ;;_s	offset=-2 (param)
   170 ;;_fmt	offset=-3 (param)
   171 ;;_rxData	offset	0
   172 ;;_r_link	offset=-1 (param)
   173 ;;_k	offset	0
   174 ;;_checksum	offset	2
   175 ;;_i	offset	4
   176 ;;_byte_block	offset=-2 (param)
   177 ;;_length	offset=-3 (param)
   178 ;;_fake	offset=-4 (param)
   179 ;;_i	offset	0
   180 ;;_sum	offset	2
   181 ;;_byte_block	offset=-2 (param)
   182 ;;_byte_count	offset=-4 (param)
   183 ;;_bufData	offset=-1 (param)
   184 ;;_txData	offset=-1 (param)
   185 ;;_byte_block	offset=-1 (param)
   186 ;;_clear	offset=-2 (param)
   187 ;;_numMilliseconds	offset=-2 (param)
   188 ;;_timer	offset=-1 (param)
   189 ;;_timer	offset=-1 (param)
   190 ;;_count	offset=-3 (param)
   191 ;;_readValue	offset	0
   192 ;;_cmd	offset=-1 (param)
   193 ;;_cmd	offset=-1 (param)
   194 ;;_delay	offset=-4 (param)
   195 ;;_data	offset=-1 (param)
   196 ;;__this	offset=-2 (param)
   197 ;;_strPtr	offset=-1 (param)
   198 ;;__this	offset=-2 (param)
   199 ;;_clearBuffer	offset=-3 (param)
   200 ;;_s	offset	0
   201 ;;_k	offset	2
   202 ;;_dest	offset=-2 (param)
   203 ;;_c	offset=-4 (param)
   204 ;;_n	offset=-6 (param)
   205 ;;_ap	offset	0
   206 ;;_fmt	offset=-2 (param)
   207 ;;_cfmt	offset	0
   208 ;;_fp	offset=-2 (param)
   209 ;;_fmt	offset=-3 (param)
   210 ;;_ap	offset=-5 (param)
   211 ;;_vfpfcnvrt$3455	offset	0
   212 ;;_llu	offset	2
   213 ;;_ll	offset	10
   214 ;;_done	offset	18
   215 ;;_cp	offset	20
   216 ;;_c	offset	22
   217 ;;_fp	offset=-2 (param)
   218 ;;_fmt	offset=-4 (param)
   219 ;;_ap	offset=-6 (param)
   220 ;;_xtoa$3441	offset	0
   221 ;;_xtoa$3440	offset	2
   222 ;;_n	offset	4
   223 ;;_c	offset	12
   224 ;;_i	offset	14
   225 ;;_w	offset	16
   226 ;;_p	offset	18
   227 ;;_fp	offset=-2 (param)
   228 ;;_d	offset=-10 (param)
   229 ;;_x	offset=-11 (param)
   230 ;;_toupper$4029	offset	0
   231 ;;_c	offset=-2 (param)
   232 ;;_c	offset=-2 (param)
   233 ;;_c	offset=-2 (param)
   234 ;;_c	offset=-2 (param)
   235 ;;_nuls	offset	0
   236 ;;_l	offset	7
   237 ;;_p	offset	9
   238 ;;_cp	offset	11
   239 ;;_w	offset	13
   240 ;;_i	offset	15
   241 ;;_fp	offset=-2 (param)
   242 ;;_s	offset=-4 (param)
   243 ;;_dtoa$3419	offset	0
   244 ;;_n	offset	2
   245 ;;_i	offset	10
   246 ;;_s	offset	12
   247 ;;_w	offset	14
   248 ;;_p	offset	16
   249 ;;_fp	offset=-2 (param)
   250 ;;_d	offset=-10 (param)
   251 ;;_w	offset	0
   252 ;;_i	offset	2
   253 ;;_fp	offset=-2 (param)
   254 ;;_buf	offset=-3 (param)
   255 ;;_p	offset=-5 (param)
   256 ;;_a	offset	0
   257 ;;_s	offset=-2 (param)
   258 ;;_i	offset	0
   259 ;;_c	offset	2
   260 ;;_s	offset=-1 (param)
   261 ;;_fp	offset=-3 (param)
   262 ;;_c	offset=-2 (param)
   263 ;;_fp	offset=-4 (param)
   264 ;;_c	offset=-1 (param)
   265 ;;__this	offset=-2 (param)
   266 ;;_c	offset=-3 (param)
   267 ;;_a	offset=-2 (param)
   268 ;;_sign	offset	0
   269 ;;_counter	offset	1
   270 ;;_dividend	offset=-8 (param)
   271 ;;_divisor	offset=-16 (param)
   272 ;;_quotient	offset	0
   273 ;;_sign	offset	8
   274 ;;_counter	offset	9
   275 ;;_dividend	offset=-8 (param)
   276 ;;_divisor	offset=-16 (param)
   277 ;;_atoi$3916	offset	0
   278 ;;_atoi$3914	offset	2
   279 ;;_atoi$3915	offset	4
   280 ;;_n	offset	5
   281 ;;_neg	offset	7
   282 ;;_s	offset=-1 (param)
   283 ;;_isspace$3941	offset	0
   284 ;;_c	offset=-2 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_state	offset	0
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_i	offset	0
   297                           
   298                           	psect	idataBANK0
   299  005A36                     __pidataBANK0:
   300                           	opt callstack 0
   301                           
   302                           ;initializer for stoa@F1139
   303  005A36  28                 	db	40
   304  005A37  6E                 	db	110
   305  005A38  75                 	db	117
   306  005A39  6C                 	db	108
   307  005A3A  6C                 	db	108
   308  005A3B  29                 	db	41
   309  005A3C  00                 	db	0
   310                           
   311                           	psect	idataBANK1
   312  005246                     __pidataBANK1:
   313                           	opt callstack 0
   314                           
   315                           ;initializer for _H10
   316  005246  0000               	dw	0
   317  005248  9F75               	dw	40821
   318  00524A  000C               	dw	12
   319  00524C  01                 	db	1
   320  00524D  80                 	db	128
   321  00524E  01                 	db	1
   322  00524F  81                 	db	129
   323  005250  00                 	db	0
   324  005251  00                 	db	0
   325  005252  0A                 	db	10
   326  005253  0000               	dw	0
   327  005255  00                 	db	0
   328  005256  00                 	db	0
   329  005257  00                 	db	0
   330  005258  00                 	db	0
   331  005259  00                 	db	0
   332  00525A  00                 	db	0
   333  00525B  00                 	db	0
   334  00525C  00                 	db	0
   335  00525D  00                 	db	0
   336  00525E  00                 	db	0
   337  00525F  0A                 	db	10
   338  005260  0000               	dw	0
   339  005262  0001               	dw	1
   340  005264  0000               	dw	0
   341  005266  01                 	db	1
   342  005267  80                 	db	128
   343  005268  00                 	db	0
   344  005269  01                 	db	1
   345  00526A  00                 	db	0
   346  00526B  00                 	db	0
   347  00526C  0A                 	db	10
   348  00526D  0000               	dw	0
   349  00526F  0D89               	dw	3465
   350  005271  0000               	dw	0
   351  005273  01                 	db	1
   352  005274  80                 	db	128
   353  005275  01                 	db	1
   354  005276  81                 	db	129
   355  005277  00                 	db	0
   356  005278  80                 	db	128
   357  005279  0A                 	db	10
   358                           
   359                           ;initializer for _H12
   360  00527A  0000               	dw	0
   361  00527C  00                 	db	0
   362  00527D  01                 	db	1
   363  00527E  0001               	dw	1
   364  005280  0000               	dw	0
   365  005282  01                 	db	1
   366  005283  80                 	db	128
   367  005284  02                 	db	2
   368  005285  81                 	db	129
   369  005286  00                 	db	0
   370  005287  00                 	db	0
   371  005288  0C                 	db	12
   372  0000                     _IVTADL	set	14493
   373  0000                     _IVTADH	set	14494
   374  0000                     _IVTADU	set	14495
   375  0000                     _SCANPR	set	14839
   376  0000                     _DMA2PR	set	14836
   377  0000                     _DMA1PR	set	14835
   378  0000                     _MAINPR	set	14834
   379  0000                     _ISRPR	set	14833
   380  0000                     _PIE2bits	set	14738
   381  0000                     _PIR2bits	set	14754
   382  0000                     _PIE9bits	set	14745
   383  0000                     _PIR9bits	set	14761
   384  0000                     _PIE6bits	set	14742
   385  0000                     _PIE3bits	set	14739
   386  0000                     _PMD7	set	14791
   387  0000                     _PMD6	set	14790
   388  0000                     _PMD5	set	14789
   389  0000                     _PMD4	set	14788
   390  0000                     _PMD3	set	14787
   391  0000                     _PMD2	set	14786
   392  0000                     _PMD1	set	14785
   393  0000                     _PMD0	set	14784
   394  0000                     _OSCTUNE	set	14814
   395  0000                     _OSCFRQ	set	14815
   396  0000                     _OSCEN	set	14813
   397  0000                     _OSCCON3	set	14811
   398  0000                     _OSCCON1	set	14809
   399  0000                     _IPR9bits	set	14729
   400  0000                     _IPR7bits	set	14727
   401  0000                     _IPR5bits	set	14725
   402  0000                     _IPR1bits	set	14721
   403  0000                     _IPR3bits	set	14723
   404  0000                     _IPR6bits	set	14726
   405  0000                     _IPR2bits	set	14722
   406  0000                     _PIE7bits	set	14743
   407  0000                     _PIE5bits	set	14741
   408  0000                     _PIE1bits	set	14737
   409  0000                     _PIR7bits	set	14759
   410  0000                     _PIR5bits	set	14757
   411  0000                     _PIR1bits	set	14753
   412  0000                     _PLLR	set	118496
   413  0000                     _SPI1SDIPPS	set	15071
   414  0000                     _RC6PPS	set	14870
   415  0000                     _RC5PPS	set	14869
   416  0000                     _RA6PPS	set	14854
   417  0000                     _RA5PPS	set	14853
   418  0000                     _RA4PPS	set	14852
   419  0000                     _SPI1SCKPPS	set	15070
   420  0000                     _U1RXPPS	set	15077
   421  0000                     _INT1PPS	set	15041
   422  0000                     _INT2PPS	set	15042
   423  0000                     _INT0PPS	set	15040
   424  0000                     _RC3PPS	set	14867
   425  0000                     _RB6PPS	set	14862
   426  0000                     _U2RXPPS	set	15080
   427  0000                     _SLRCONF	set	14995
   428  0000                     _SLRCONE	set	14979
   429  0000                     _SLRCOND	set	14963
   430  0000                     _SLRCONC	set	14947
   431  0000                     _SLRCONB	set	14931
   432  0000                     _SLRCONA	set	14915
   433  0000                     _ODCOND	set	14962
   434  0000                     _ODCONC	set	14946
   435  0000                     _ODCONB	set	14930
   436  0000                     _ODCONA	set	14914
   437  0000                     _ODCONF	set	14994
   438  0000                     _ODCONE	set	14978
   439  0000                     _WPUC	set	14945
   440  0000                     _WPUA	set	14913
   441  0000                     _WPUB	set	14929
   442  0000                     _WPUE	set	14977
   443  0000                     _WPUF	set	14993
   444  0000                     _WPUD	set	14961
   445  0000                     _ANSELA	set	14912
   446  0000                     _ANSELF	set	14992
   447  0000                     _ANSELE	set	14976
   448  0000                     _ANSELB	set	14928
   449  0000                     _ANSELC	set	14944
   450  0000                     _ANSELD	set	14960
   451  0000                     _DMA1SSA	set	15353
   452  0000                     _DMA1DSZ	set	15342
   453  0000                     _DMA1SSZ	set	15351
   454  0000                     _DMA1DSA	set	15344
   455  0000                     _DMA1CON0bits	set	15356
   456  0000                     _DMA1CON1bits	set	15357
   457  0000                     _DMA1CON0	set	15356
   458  0000                     _DMA1AIRQ	set	15358
   459  0000                     _DMA1SIRQ	set	15359
   460  0000                     _DMA1CON1	set	15357
   461  0000                     _CLC1CON	set	15476
   462  0000                     _CLC1GLS3	set	15485
   463  0000                     _CLC1GLS2	set	15484
   464  0000                     _CLC1GLS1	set	15483
   465  0000                     _CLC1GLS0	set	15482
   466  0000                     _CLC1SEL3	set	15481
   467  0000                     _CLC1SEL2	set	15480
   468  0000                     _CLC1SEL1	set	15479
   469  0000                     _CLC1SEL0	set	15478
   470  0000                     _CLC1POL	set	15477
   471  0000                     _CLKRCON	set	15589
   472  0000                     _CLKRCLK	set	15590
   473  0000                     _MD1CARL	set	15613
   474  0000                     _MD1CARH	set	15614
   475  0000                     _MD1SRC	set	15612
   476  0000                     _MD1CON1bits	set	15611
   477  0000                     _MD1CON0bits	set	15610
   478  0000                     _SPI1INTFbits	set	15642
   479  0000                     _SPI1RXB	set	15632
   480  0000                     _SPI1TXB	set	15633
   481  0000                     _SPI1TCNTL	set	15634
   482  0000                     _SPI1CON0	set	15636
   483  0000                     _SPI1CLK	set	15644
   484  0000                     _SPI1BAUD	set	15641
   485  0000                     _SPI1CON2	set	15638
   486  0000                     _SPI1CON1	set	15637
   487  0000                     _U2RXB	set	15824
   488  0000                     _U2TXB	set	15826
   489  0000                     _U2ERRIE	set	15842
   490  0000                     _U2ERRIR	set	15841
   491  0000                     _U2UIR	set	15840
   492  0000                     _U2FIFO	set	15839
   493  0000                     _U2BRGH	set	15838
   494  0000                     _U2BRGL	set	15837
   495  0000                     _U2CON2	set	15836
   496  0000                     _U2CON1	set	15835
   497  0000                     _U2CON0	set	15834
   498  0000                     _U2P3L	set	15832
   499  0000                     _U2P2L	set	15830
   500  0000                     _U2P1L	set	15828
   501  0000                     _U1RXB	set	15848
   502  0000                     _U1TXB	set	15850
   503  0000                     _U1ERRIE	set	15866
   504  0000                     _U1ERRIR	set	15865
   505  0000                     _U1UIR	set	15864
   506  0000                     _U1FIFO	set	15863
   507  0000                     _U1BRGH	set	15862
   508  0000                     _U1BRGL	set	15861
   509  0000                     _U1CON2	set	15860
   510  0000                     _U1CON1	set	15859
   511  0000                     _U1CON0	set	15858
   512  0000                     _U1P3H	set	15857
   513  0000                     _U1P3L	set	15856
   514  0000                     _U1P2H	set	15855
   515  0000                     _U1P2L	set	15854
   516  0000                     _U1P1H	set	15853
   517  0000                     _U1P1L	set	15852
   518  0000                     _ADCON0	set	16120
   519  0000                     _ADCLK	set	16127
   520  0000                     _ADACT	set	16126
   521  0000                     _ADREF	set	16125
   522  0000                     _ADSTAT	set	16124
   523  0000                     _ADCON3	set	16123
   524  0000                     _ADCON2	set	16122
   525  0000                     _ADCON1	set	16121
   526  0000                     _ADPREH	set	16119
   527  0000                     _ADPREL	set	16118
   528  0000                     _ADCAP	set	16117
   529  0000                     _ADACQH	set	16116
   530  0000                     _ADACQL	set	16115
   531  0000                     _ADPCH	set	16113
   532  0000                     _ADRPT	set	16108
   533  0000                     _ADACCU	set	16106
   534  0000                     _ADSTPTH	set	16101
   535  0000                     _ADSTPTL	set	16100
   536  0000                     _ADUTHH	set	16097
   537  0000                     _ADUTHL	set	16096
   538  0000                     _ADLTHH	set	16095
   539  0000                     _ADLTHL	set	16094
   540  0000                     _NCO1CONbits	set	16190
   541  0000                     _NCO1INCL	set	16187
   542  0000                     _NCO1INCH	set	16188
   543  0000                     _NCO1INCU	set	16189
   544  0000                     _NCO1ACCL	set	16184
   545  0000                     _NCO1ACCH	set	16185
   546  0000                     _NCO1ACCU	set	16186
   547  0000                     _NCO1CLK	set	16191
   548  0000                     _NCO1CON	set	16190
   549  0000                     _LATCbits	set	16316
   550  0000                     _LATEbits	set	16318
   551  0000                     _T6CON	set	16276
   552  0000                     _T6TMR	set	16274
   553  0000                     _T6PR	set	16275
   554  0000                     _T6RST	set	16279
   555  0000                     _T6HLT	set	16277
   556  0000                     _T6CLKCON	set	16278
   557  0000                     _TRISD	set	16325
   558  0000                     _TRISC	set	16324
   559  0000                     _TRISB	set	16323
   560  0000                     _TRISA	set	16322
   561  0000                     _TRISF	set	16327
   562  0000                     _TRISE	set	16326
   563  0000                     _LATC	set	16316
   564  0000                     _LATB	set	16315
   565  0000                     _LATF	set	16319
   566  0000                     _LATA	set	16314
   567  0000                     _LATD	set	16317
   568  0000                     _LATE	set	16318
   569  0000                     _IVTLOCKbits	set	16340
   570  0000                     _IVTLOCK	set	16340
   571  0000                     _INTCON0bits	set	16338
   572  0000                     _GIE	set	130711
   573                           
   574                           	psect	smallconst
   575  002000                     __psmallconst:
   576                           	opt callstack 0
   577  002000  00                 	db	0
   578  002001                     STR_1:
   579                           
   580                           ; BSR set to: 57
   581  002001  4D                 	db	77	;'M'
   582  002002  20                 	db	32
   583  002003  25                 	db	37
   584  002004  64                 	db	100	;'d'
   585  002005  2C                 	db	44
   586  002006  20                 	db	32
   587  002007  48                 	db	72	;'H'
   588  002008  20                 	db	32
   589  002009  25                 	db	37
   590  00200A  30                 	db	48	;'0'
   591  00200B  32                 	db	50	;'2'
   592  00200C  78                 	db	120	;'x'
   593  00200D  25                 	db	37
   594  00200E  30                 	db	48	;'0'
   595  00200F  32                 	db	50	;'2'
   596  002010  78                 	db	120	;'x'
   597  002011  25                 	db	37
   598  002012  30                 	db	48	;'0'
   599  002013  32                 	db	50	;'2'
   600  002014  78                 	db	120	;'x'
   601  002015  25                 	db	37
   602  002016  30                 	db	48	;'0'
   603  002017  32                 	db	50	;'2'
   604  002018  78                 	db	120	;'x'
   605  002019  25                 	db	37
   606  00201A  30                 	db	48	;'0'
   607  00201B  32                 	db	50	;'2'
   608  00201C  78                 	db	120	;'x'
   609  00201D  25                 	db	37
   610  00201E  30                 	db	48	;'0'
   611  00201F  32                 	db	50	;'2'
   612  002020  78                 	db	120	;'x'
   613  002021  25                 	db	37
   614  002022  30                 	db	48	;'0'
   615  002023  32                 	db	50	;'2'
   616  002024  78                 	db	120	;'x'
   617  002025  25                 	db	37
   618  002026  30                 	db	48	;'0'
   619  002027  32                 	db	50	;'2'
   620  002028  78                 	db	120	;'x'
   621  002029  25                 	db	37
   622  00202A  30                 	db	48	;'0'
   623  00202B  32                 	db	50	;'2'
   624  00202C  78                 	db	120	;'x'
   625  00202D  25                 	db	37
   626  00202E  30                 	db	48	;'0'
   627  00202F  32                 	db	50	;'2'
   628  002030  78                 	db	120	;'x'
   629  002031  2C                 	db	44
   630  002032  20                 	db	32
   631  002033  43                 	db	67	;'C'
   632  002034  20                 	db	32
   633  002035  30                 	db	48	;'0'
   634  002036  78                 	db	120	;'x'
   635  002037  25                 	db	37
   636  002038  30                 	db	48	;'0'
   637  002039  34                 	db	52	;'4'
   638  00203A  78                 	db	120	;'x'
   639  00203B  20                 	db	32
   640  00203C  23                 	db	35
   641  00203D  00                 	db	0
   642  00203E                     STR_5:
   643                           
   644                           ; BSR set to: 57
   645  00203E  20                 	db	32
   646  00203F  45                 	db	69	;'E'
   647  002040  52                 	db	82	;'R'
   648  002041  52                 	db	82	;'R'
   649  002042  20                 	db	32
   650  002043  52                 	db	82	;'R'
   651  002044  25                 	db	37
   652  002045  64                 	db	100	;'d'
   653  002046  20                 	db	32
   654  002047  54                 	db	84	;'T'
   655  002048  25                 	db	37
   656  002049  64                 	db	100	;'d'
   657  00204A  20                 	db	32
   658  00204B  45                 	db	69	;'E'
   659  00204C  25                 	db	37
   660  00204D  64                 	db	100	;'d'
   661  00204E  20                 	db	32
   662  00204F  41                 	db	65	;'A'
   663  002050  25                 	db	37
   664  002051  64                 	db	100	;'d'
   665  002052  20                 	db	32
   666  002053  23                 	db	35
   667  002054  00                 	db	0
   668  002055                     STR_3:
   669                           
   670                           ; BSR set to: 57
   671  002055  20                 	db	32
   672  002056  53                 	db	83	;'S'
   673  002057  25                 	db	37
   674  002058  64                 	db	100	;'d'
   675  002059  46                 	db	70	;'F'
   676  00205A  25                 	db	37
   677  00205B  64                 	db	100	;'d'
   678  00205C  20                 	db	32
   679  00205D  23                 	db	35
   680  00205E  00                 	db	0
   681  00205F                     STR_4:
   682                           
   683                           ; BSR set to: 57
   684  00205F  20                 	db	32
   685  002060  4F                 	db	79	;'O'
   686  002061  4B                 	db	75	;'K'
   687  002062  20                 	db	32
   688  002063  23                 	db	35
   689  002064  00                 	db	0
   690  002065                     STR_6:
   691                           
   692                           ; BSR set to: 57
   693  002065  25                 	db	37
   694  002066  73                 	db	115	;'s'
   695  002067  00                 	db	0
   696  0000                     
   697                           ; #config settings
   698  002068  00                 	db	0	; dummy byte at the end
   699  0000                     
   700                           	psect	cinit
   701  004B10                     __pcinit:
   702                           	opt callstack 0
   703  004B10                     start_initialization:
   704                           	opt callstack 0
   705  004B10                     __initialization:
   706                           	opt callstack 0
   707                           
   708                           ; Initialize objects allocated to BANK1 (67 bytes)
   709                           ; load TBLPTR registers with __pidataBANK1
   710  004B10  0E46               	movlw	low __pidataBANK1
   711  004B12  6EF6               	movwf	tblptrl,c
   712  004B14  0E52               	movlw	high __pidataBANK1
   713  004B16  6EF7               	movwf	tblptrh,c
   714  004B18  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   715  004B1A  6EF8               	movwf	tblptru,c
   716  004B1C  EE00  F180         	lfsr	0,__pdataBANK1
   717  004B20  EE20 F043          	lfsr	2,67
   718  004B24                     copy_data0:
   719  004B24  0009               	tblrd		*+
   720  004B26  006F FFD7 FFEE     	movff	tablat,postinc0
   721  004B2C  50DD               	movf	postdec2,w,c
   722  004B2E  50D9               	movf	fsr2l,w,c
   723  004B30  E1F9               	bnz	copy_data0
   724                           
   725                           ; Initialize objects allocated to BANK0 (7 bytes)
   726                           ; load TBLPTR registers with __pidataBANK0
   727  004B32  0E36               	movlw	low __pidataBANK0
   728  004B34  6EF6               	movwf	tblptrl,c
   729  004B36  0E5A               	movlw	high __pidataBANK0
   730  004B38  6EF7               	movwf	tblptrh,c
   731  004B3A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   732  004B3C  6EF8               	movwf	tblptru,c
   733  004B3E  EE00  F0F5         	lfsr	0,__pdataBANK0
   734  004B42  EE20 F007          	lfsr	2,7
   735  004B46                     copy_data1:
   736  004B46  0009               	tblrd		*+
   737  004B48  006F FFD7 FFEE     	movff	tablat,postinc0
   738  004B4E  50DD               	movf	postdec2,w,c
   739  004B50  50D9               	movf	fsr2l,w,c
   740  004B52  E1F9               	bnz	copy_data1
   741                           
   742                           ; Clear objects allocated to BANK3 (67 bytes)
   743  004B54  EE00  F300         	lfsr	0,__pbssBANK3
   744  004B58  0E43               	movlw	67
   745  004B5A                     clear_0:
   746  004B5A  6AEE               	clrf	postinc0,c
   747  004B5C  06E8               	decf	wreg,f,c
   748  004B5E  E1FD               	bnz	clear_0
   749                           
   750                           ; Clear objects allocated to BANK2 (195 bytes)
   751  004B60  EE00  F200         	lfsr	0,__pbssBANK2
   752  004B64  0EC3               	movlw	195
   753  004B66                     clear_1:
   754  004B66  6AEE               	clrf	postinc0,c
   755  004B68  06E8               	decf	wreg,f,c
   756  004B6A  E1FD               	bnz	clear_1
   757                           
   758                           ; Clear objects allocated to BANK1 (128 bytes)
   759  004B6C  EE00  F100         	lfsr	0,__pbssBANK1
   760  004B70  0E80               	movlw	128
   761  004B72                     clear_2:
   762  004B72  6AEE               	clrf	postinc0,c
   763  004B74  06E8               	decf	wreg,f,c
   764  004B76  E1FD               	bnz	clear_2
   765                           
   766                           ; Clear objects allocated to BANK0 (149 bytes)
   767  004B78  EE00  F060         	lfsr	0,__pbssBANK0
   768  004B7C  0E95               	movlw	149
   769  004B7E                     clear_3:
   770  004B7E  6AEE               	clrf	postinc0,c
   771  004B80  06E8               	decf	wreg,f,c
   772  004B82  E1FD               	bnz	clear_3
   773                           
   774                           ; Clear objects allocated to COMRAM (57 bytes)
   775  004B84  EE00  F001         	lfsr	0,__pbssCOMRAM
   776  004B88  0E39               	movlw	57
   777  004B8A                     clear_4:
   778  004B8A  6AEE               	clrf	postinc0,c
   779  004B8C  06E8               	decf	wreg,f,c
   780  004B8E  E1FD               	bnz	clear_4
   781                           
   782                           ;
   783                           ; Setup IVTBASE
   784                           ;
   785  004B90  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   786  004B92  6ED5               	movwf	213,c
   787  004B94  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   788  004B96  6ED6               	movwf	214,c
   789  004B98  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   790  004B9A  6ED7               	movwf	215,c
   791  004B9C                     end_of_initialization:
   792                           	opt callstack 0
   793  004B9C                     __end_of__initialization:
   794                           	opt callstack 0
   795  004B9C  0100               	movlb	0
   796  004B9E  EF0C  F01A         	goto	_main	;jump to C main() function
   797                           
   798                           	psect	bssCOMRAM
   799  000001                     __pbssCOMRAM:
   800                           	opt callstack 0
   801  000001                     wdtdelay@dcount:
   802                           	opt callstack 0
   803  000001                     	ds	4
   804  000005                     secs_II_message@block:
   805                           	opt callstack 0
   806  000005                     	ds	3
   807  000008                     _TMR6_InterruptHandler:
   808                           	opt callstack 0
   809  000008                     	ds	3
   810  00000B                     _ADCC_ADI_InterruptHandler:
   811                           	opt callstack 0
   812  00000B                     	ds	3
   813  00000E                     _UART1_TxInterruptHandler:
   814                           	opt callstack 0
   815  00000E                     	ds	3
   816  000011                     _UART1_RxInterruptHandler:
   817                           	opt callstack 0
   818  000011                     	ds	3
   819  000014                     _UART2_TxInterruptHandler:
   820                           	opt callstack 0
   821  000014                     	ds	3
   822  000017                     _UART2_RxInterruptHandler:
   823                           	opt callstack 0
   824  000017                     	ds	3
   825  00001A                     _INT2_InterruptHandler:
   826                           	opt callstack 0
   827  00001A                     	ds	3
   828  00001D                     _INT1_InterruptHandler:
   829                           	opt callstack 0
   830  00001D                     	ds	3
   831  000020                     _INT0_InterruptHandler:
   832                           	opt callstack 0
   833  000020                     	ds	3
   834  000023                     _nout:
   835                           	opt callstack 0
   836  000023                     	ds	2
   837  000025                     _width:
   838                           	opt callstack 0
   839  000025                     	ds	2
   840  000027                     _prec:
   841                           	opt callstack 0
   842  000027                     	ds	2
   843  000029                     _flags:
   844                           	opt callstack 0
   845  000029                     	ds	2
   846  00002B                     run_checksum@sum:
   847                           	opt callstack 0
   848  00002B                     	ds	2
   849  00002D                     r_protocol@rxData_l:
   850                           	opt callstack 0
   851  00002D                     	ds	1
   852  00002E                     _uart2RxCount:
   853                           	opt callstack 0
   854  00002E                     	ds	1
   855  00002F                     _uart2RxTail:
   856                           	opt callstack 0
   857  00002F                     	ds	1
   858  000030                     _uart2RxHead:
   859                           	opt callstack 0
   860  000030                     	ds	1
   861  000031                     _uart2TxBufferRemaining:
   862                           	opt callstack 0
   863  000031                     	ds	1
   864  000032                     _uart2TxTail:
   865                           	opt callstack 0
   866  000032                     	ds	1
   867  000033                     _uart2TxHead:
   868                           	opt callstack 0
   869  000033                     	ds	1
   870  000034                     _uart1RxCount:
   871                           	opt callstack 0
   872  000034                     	ds	1
   873  000035                     _uart1RxTail:
   874                           	opt callstack 0
   875  000035                     	ds	1
   876  000036                     _uart1RxHead:
   877                           	opt callstack 0
   878  000036                     	ds	1
   879  000037                     _uart1TxBufferRemaining:
   880                           	opt callstack 0
   881  000037                     	ds	1
   882  000038                     _uart1TxTail:
   883                           	opt callstack 0
   884  000038                     	ds	1
   885  000039                     _uart1TxHead:
   886                           	opt callstack 0
   887  000039                     	ds	1
   888                           
   889                           	psect	bssBANK0
   890  000060                     __pbssBANK0:
   891                           	opt callstack 0
   892  000060                     _r_block:
   893                           	opt callstack 0
   894  000060                     	ds	13
   895  00006D                     _spi_link:
   896                           	opt callstack 0
   897  00006D                     	ds	12
   898  000079                     _tickCount:
   899                           	opt callstack 0
   900  000079                     	ds	12
   901  000085                     _V:
   902                           	opt callstack 0
   903  000085                     	ds	80
   904  0000D5                     _dbuf:
   905                           	opt callstack 0
   906  0000D5                     	ds	32
   907                           
   908                           	psect	dataBANK0
   909  0000F5                     __pdataBANK0:
   910                           	opt callstack 0
   911  0000F5                     stoa@F1139:
   912                           	opt callstack 0
   913  0000F5                     	ds	7
   914                           
   915                           	psect	bssBANK1
   916  000100                     __pbssBANK1:
   917                           	opt callstack 0
   918  000100                     _uart1RxBuffer:
   919                           	opt callstack 0
   920  000100                     	ds	64
   921  000140                     _uart1TxBuffer:
   922                           	opt callstack 0
   923  000140                     	ds	64
   924                           
   925                           	psect	dataBANK1
   926  000180                     __pdataBANK1:
   927                           	opt callstack 0
   928  000180                     _H10:
   929                           	opt callstack 0
   930  000180                     	ds	52
   931  0001B4                     _H12:
   932                           	opt callstack 0
   933  0001B4                     	ds	15
   934                           
   935                           	psect	bssBANK2
   936  000200                     __pbssBANK2:
   937                           	opt callstack 0
   938  000200                     _uart2RxBuffer:
   939                           	opt callstack 0
   940  000200                     	ds	64
   941  000240                     _uart2TxBuffer:
   942                           	opt callstack 0
   943  000240                     	ds	64
   944  000280                     _ring_buf1:
   945                           	opt callstack 0
   946  000280                     	ds	67
   947                           
   948                           	psect	bssBANK3
   949  000300                     __pbssBANK3:
   950                           	opt callstack 0
   951  000300                     _ring_buf2:
   952                           	opt callstack 0
   953  000300                     	ds	67
   954                           
   955                           	psect	cstackCOMRAM
   956  00005A                     __pcstackCOMRAM:
   957                           	opt callstack 0
   958  00005A                     ??_TMR6_ISR:
   959  00005A                     
   960                           ; 1 bytes @ 0x0
   961  00005A                     	ds	2
   962  00005C                     
   963                           ; 1 bytes @ 0x2
   964 ;;
   965 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
   966 ;;
   967 ;; *************** function _main *****************
   968 ;; Defined at:
   969 ;;		line 195 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  j               1    0        unsigned char 
   974 ;;  sum             2  [STACK] unsigned short 
   975 ;;  mode            1  [STACK] enum E16877
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1  [STACK] void 
   978 ;; Registers used:
   979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 3F/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels required when called:   13
   991 ;; This function calls:
   992 ;;		_SYSTEM_Initialize
   993 ;;		_UART1_Write
   994 ;;		_UART1_put_buffer
   995 ;;		_WaitMs
   996 ;;		_block_checksum
   997 ;;		_eaDogM_WriteString
   998 ;;		_init_display
   999 ;;		_r_protocol
  1000 ;;		_secs_send
  1001 ;;		_sprintf
  1002 ;;		_t_protocol
  1003 ;;		_wait_lcd_done
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text0
  1010  003418                     __ptext0:
  1011                           	opt callstack 0
  1012  003418                     _main:
  1013                           	opt callstack 0
  1014                           
  1015                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1016  003418  52E6               	movf	postinc1,f,c
  1017  00341A  52E6               	movf	postinc1,f,c
  1018  00341C  52E6               	movf	postinc1,f,c
  1019                           
  1020                           ;main.c: 197:  uint16_t sum;;main.c: 198:  UI_STATES mode = UI_STATE_HOST;
  1021                           ;stkvar	_mode @ sp[(-3)+2]
  1022                           
  1023                           ;incstack = 0
  1024  00341E  0EFF               	movlw	-1
  1025  003420  6AE3               	clrf	plusw1,c
  1026  003422  2AE3               	incf	plusw1,f,c
  1027                           
  1028                           ;main.c: 201:  SYSTEM_Initialize();
  1029  003424  EC83  F029         	call	_SYSTEM_Initialize	;wreg free
  1030                           
  1031                           ; BSR set to: 60
  1032                           ;main.c: 204:  (INTCON0bits.GIEH = 1);
  1033  003428  8ED2               	bsf	16338,7,c	;volatile
  1034                           
  1035                           ; BSR set to: 60
  1036                           ;main.c: 207:  (INTCON0bits.GIEL = 1);
  1037  00342A  8CD2               	bsf	16338,6,c	;volatile
  1038  00342C                     l7074:
  1039                           
  1040                           ;main.c: 209:  V.ui_state = UI_STATE_INIT;
  1041  00342C  0100               	movlb	0	; () banked
  1042  00342E  6B86               	clrf	(_V+1)& (0+255),b	;volatile
  1043  003430  D12F               	goto	l1129
  1044  003432                     l7076:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;main.c: 214:    init_display();
  1048  003432  EC04  F023         	call	_init_display	;wreg free
  1049                           
  1050                           ; BSR set to: 61
  1051                           ;main.c: 215:    V.ui_state = mode;
  1052                           ;stkvar	_mode @ sp[(-3)+2]
  1053  003436  0EFF               	movlw	-1
  1054  003438  006F FF8C  F086    	movff	plusw1,_V+1	;volatile
  1055                           
  1056                           ; BSR set to: 61
  1057                           ;main.c: 216:    V.s_state = SEQ_STATE_INIT;
  1058  00343E  0100               	movlb	0	; () banked
  1059  003440  6B85               	clrf	_V& (0+255),b	;volatile
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;main.c: 221:    sum = block_checksum((uint8_t*) & H10[j].block.block, sizeof(block10));
  1063                           
  1064                           ; BSR set to: 0
  1065  003442  0E0A               	movlw	10
  1066  003444  6EE6               	movwf	postinc1,c
  1067  003446  0E00               	movlw	0
  1068  003448  6EE6               	movwf	postinc1,c
  1069  00344A  0EA9               	movlw	low (_H10+41)
  1070  00344C  6EE6               	movwf	postinc1,c
  1071  00344E  0E01               	movlw	high (_H10+41)
  1072  003450  6EE6               	movwf	postinc1,c
  1073  003452  EC79  F023         	call	_block_checksum	;wreg free
  1074                           
  1075                           ;stkvar	_sum @ sp[(-3)+0]
  1076  003456  0EFD               	movlw	-3
  1077  003458  0060  F0EB  FFE3   	movff	btemp,plusw1
  1078  00345E  0EFE               	movlw	-2
  1079  003460  0060  F0EF  FFE3   	movff	btemp+1,plusw1
  1080                           
  1081                           ;main.c: 222:    H10[j].checksum = sum;
  1082                           ;stkvar	_sum @ sp[(-3)+0]
  1083  003466  0EFD               	movlw	-3
  1084  003468  006F FF8C  F1A7    	movff	plusw1,_H10+39
  1085  00346E  0EFE               	movlw	-2
  1086  003470  006F FF8C  F1A8    	movff	plusw1,_H10+40
  1087                           
  1088                           ;main.c: 223:    sprintf(V.buf, "M %d, H %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x, C 0x%
      +                          04x #",
  1089                           ;stkvar	_sum @ sp[(-3)+0]
  1090  003476  0EFD               	movlw	-3
  1091  003478  006F FF8F FFE6     	movff	plusw1,postinc1
  1092  00347E  006F FF8F FFE6     	movff	plusw1,postinc1
  1093  003484  0101               	movlb	1	; () banked
  1094  003486  51A9               	movf	(_H10+41)& (0+255),w,b
  1095  003488  6EE6               	movwf	postinc1,c
  1096  00348A  0E00               	movlw	0
  1097  00348C  6EE6               	movwf	postinc1,c
  1098  00348E  51AA               	movf	(_H10+42)& (0+255),w,b
  1099  003490  6EE6               	movwf	postinc1,c
  1100  003492  0E00               	movlw	0
  1101  003494  6EE6               	movwf	postinc1,c
  1102  003496  51AB               	movf	(_H10+43)& (0+255),w,b
  1103  003498  6EE6               	movwf	postinc1,c
  1104  00349A  0E00               	movlw	0
  1105  00349C  6EE6               	movwf	postinc1,c
  1106  00349E  51AC               	movf	(_H10+44)& (0+255),w,b
  1107  0034A0  6EE6               	movwf	postinc1,c
  1108  0034A2  0E00               	movlw	0
  1109  0034A4  6EE6               	movwf	postinc1,c
  1110  0034A6  51AD               	movf	(_H10+45)& (0+255),w,b
  1111  0034A8  6EE6               	movwf	postinc1,c
  1112  0034AA  0E00               	movlw	0
  1113  0034AC  6EE6               	movwf	postinc1,c
  1114  0034AE  51AE               	movf	(_H10+46)& (0+255),w,b
  1115  0034B0  6EE6               	movwf	postinc1,c
  1116  0034B2  0E00               	movlw	0
  1117  0034B4  6EE6               	movwf	postinc1,c
  1118  0034B6  51AF               	movf	(_H10+47)& (0+255),w,b
  1119  0034B8  6EE6               	movwf	postinc1,c
  1120  0034BA  0E00               	movlw	0
  1121  0034BC  6EE6               	movwf	postinc1,c
  1122  0034BE  51B0               	movf	(_H10+48)& (0+255),w,b
  1123  0034C0  6EE6               	movwf	postinc1,c
  1124  0034C2  0E00               	movlw	0
  1125  0034C4  6EE6               	movwf	postinc1,c
  1126  0034C6  51B1               	movf	(_H10+49)& (0+255),w,b
  1127  0034C8  6EE6               	movwf	postinc1,c
  1128  0034CA  0E00               	movlw	0
  1129  0034CC  6EE6               	movwf	postinc1,c
  1130  0034CE  51B2               	movf	(_H10+50)& (0+255),w,b
  1131  0034D0  6EE6               	movwf	postinc1,c
  1132  0034D2  0E00               	movlw	0
  1133  0034D4  6EE6               	movwf	postinc1,c
  1134                           
  1135                           ;stkvar	_mode @ sp[(-25)+2]
  1136  0034D6  0EE9               	movlw	-23
  1137  0034D8  50E3               	movf	plusw1,w,c
  1138  0034DA  6EE6               	movwf	postinc1,c
  1139  0034DC  0E00               	movlw	0
  1140  0034DE  6EE6               	movwf	postinc1,c
  1141  0034E0  0E01               	movlw	STR_1& (0+255)
  1142  0034E2  6EE6               	movwf	postinc1,c
  1143  0034E4  0E85               	movlw	_V& (0+255)
  1144  0034E6  0F04               	addlw	4
  1145  0034E8  6EE6               	movwf	postinc1,c
  1146  0034EA  0E1A               	movlw	26
  1147  0034EC  6EE6               	movwf	postinc1,c
  1148  0034EE  ECE2  F023         	call	_sprintf	;wreg free
  1149                           
  1150                           ;main.c: 236:    wait_lcd_done();
  1151  0034F2  EC84  F02C         	call	_wait_lcd_done	;wreg free
  1152                           
  1153                           ;main.c: 237:    eaDogM_WriteString(V.buf);
  1154  0034F6  0E85               	movlw	_V& (0+255)
  1155  0034F8  0F04               	addlw	4
  1156  0034FA  6EE6               	movwf	postinc1,c
  1157  0034FC  EC46  F024         	call	_eaDogM_WriteString	;wreg free
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 239:    secs_send((uint8_t*) & H10[j], sizeof(header10), 0);
  1161  003500  0E00               	movlw	0
  1162  003502  6EE6               	movwf	postinc1,c
  1163  003504  0E0D               	movlw	13
  1164  003506  6EE6               	movwf	postinc1,c
  1165  003508  0EA7               	movlw	low (_H10+39)
  1166  00350A  6EE6               	movwf	postinc1,c
  1167  00350C  0E01               	movlw	high (_H10+39)
  1168  00350E  6EE6               	movwf	postinc1,c
  1169  003510  EC1E  F021         	call	_secs_send	;wreg free
  1170                           
  1171                           ;main.c: 240:    sprintf(V.buf, " C 0x%04x #", V.t_checksum);
  1172  003514  0060  F34F  FFE6   	movff	_V+78,postinc1
  1173  00351A  0060  F353  FFE6   	movff	_V+79,postinc1
  1174  003520  0E32               	movlw	(STR_1+49)& (0+255)
  1175  003522  6EE6               	movwf	postinc1,c
  1176  003524  0E85               	movlw	_V& (0+255)
  1177  003526  0F04               	addlw	4
  1178  003528  6EE6               	movwf	postinc1,c
  1179  00352A  0E04               	movlw	4
  1180  00352C  6EE6               	movwf	postinc1,c
  1181  00352E  ECE2  F023         	call	_sprintf	;wreg free
  1182                           
  1183                           ;main.c: 241:    wait_lcd_done();
  1184  003532  EC84  F02C         	call	_wait_lcd_done	;wreg free
  1185                           
  1186                           ;main.c: 242:    eaDogM_WriteString(V.buf);
  1187  003536  0E85               	movlw	_V& (0+255)
  1188  003538  0F04               	addlw	4
  1189  00353A  6EE6               	movwf	postinc1,c
  1190  00353C  EC46  F024         	call	_eaDogM_WriteString	;wreg free
  1191                           
  1192                           ;main.c: 245:    break;
  1193  003540  D0A7               	goto	l1129
  1194  003542                     l1134:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 249:     V.r_l_state = LINK_STATE_IDLE;
  1198  003542  6B87               	clrf	(_V+2)& (0+255),b	;volatile
  1199                           
  1200                           ;main.c: 250:     V.t_l_state = LINK_STATE_IDLE;
  1201  003544  6B88               	clrf	(_V+3)& (0+255),b	;volatile
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;main.c: 251:     V.s_state = SEQ_STATE_RX;
  1205  003546  0E01               	movlw	1
  1206  003548  6F85               	movwf	_V& (0+255),b	;volatile
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;main.c: 253:     WaitMs(75);
  1210  00354A  0E4B               	movlw	75
  1211  00354C  6EE6               	movwf	postinc1,c
  1212  00354E  0E00               	movlw	0
  1213  003550  6EE6               	movwf	postinc1,c
  1214  003552  EC49  F02A         	call	_WaitMs	;wreg free
  1215                           
  1216                           ;main.c: 254:     UART1_put_buffer(0x05);
  1217  003556  0E05               	movlw	5
  1218  003558  6EE6               	movwf	postinc1,c
  1219  00355A  EC34  F02A         	call	_UART1_put_buffer	;wreg free
  1220                           
  1221                           ;main.c: 256:     break;
  1222  00355E  D098               	goto	l1129
  1223  003560                     l7108:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;main.c: 261:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1227  003560  0E85               	movlw	_V& (0+255)
  1228  003562  0F02               	addlw	2
  1229  003564  6EE6               	movwf	postinc1,c
  1230  003566  EC99  F01C         	call	_r_protocol	;wreg free
  1231  00356A  0E04               	movlw	4
  1232  00356C  183A               	xorwf	btemp,w,c
  1233  00356E  A4D8               	btfss	status,2,c
  1234  003570  D022               	goto	l7120
  1235                           
  1236                           ;main.c: 262:      sprintf(V.buf, " S%dF%d #", V.stream, V.function);
  1237  003572  0100               	movlb	0	; () banked
  1238  003574  51CE               	movf	(_V+73)& (0+255),w,b	;volatile
  1239  003576  6EE6               	movwf	postinc1,c
  1240  003578  0E00               	movlw	0
  1241  00357A  6EE6               	movwf	postinc1,c
  1242  00357C  51CD               	movf	(_V+72)& (0+255),w,b	;volatile
  1243  00357E  6EE6               	movwf	postinc1,c
  1244  003580  0E00               	movlw	0
  1245  003582  6EE6               	movwf	postinc1,c
  1246  003584  0E55               	movlw	STR_3& (0+255)
  1247  003586  6EE6               	movwf	postinc1,c
  1248  003588  0E85               	movlw	_V& (0+255)
  1249  00358A  0F04               	addlw	4
  1250  00358C  6EE6               	movwf	postinc1,c
  1251  00358E  0E06               	movlw	6
  1252  003590  6EE6               	movwf	postinc1,c
  1253  003592  ECE2  F023         	call	_sprintf	;wreg free
  1254                           
  1255                           ;main.c: 263:      wait_lcd_done();
  1256  003596  EC84  F02C         	call	_wait_lcd_done	;wreg free
  1257                           
  1258                           ;main.c: 264:      eaDogM_WriteString(V.buf);
  1259  00359A  0E85               	movlw	_V& (0+255)
  1260  00359C  0F04               	addlw	4
  1261  00359E  6EE6               	movwf	postinc1,c
  1262  0035A0  EC46  F024         	call	_eaDogM_WriteString	;wreg free
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;main.c: 266:      WaitMs(5);
  1266  0035A4  0E05               	movlw	5
  1267  0035A6  6EE6               	movwf	postinc1,c
  1268  0035A8  0E00               	movlw	0
  1269  0035AA  6EE6               	movwf	postinc1,c
  1270  0035AC  EC49  F02A         	call	_WaitMs	;wreg free
  1271                           
  1272                           ;main.c: 268:      V.s_state = SEQ_STATE_TX;
  1273  0035B0  0E02               	movlw	2
  1274  0035B2  0100               	movlb	0	; () banked
  1275  0035B4  6F85               	movwf	_V& (0+255),b	;volatile
  1276  0035B6                     l7120:
  1277                           
  1278                           ;main.c: 270:     if (V.r_l_state == LINK_STATE_ERROR)
  1279  0035B6  0E06               	movlw	6
  1280  0035B8  0100               	movlb	0	; () banked
  1281  0035BA  1987               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1282  0035BC  D00F               	goto	L18
  1283  0035BE                     l7124:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;main.c: 277:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1287  0035BE  0E85               	movlw	_V& (0+255)
  1288  0035C0  0F03               	addlw	3
  1289  0035C2  6EE6               	movwf	postinc1,c
  1290  0035C4  EC0F  F020         	call	_t_protocol	;wreg free
  1291  0035C8  0E04               	movlw	4
  1292  0035CA  183A               	xorwf	btemp,w,c
  1293  0035CC  A4D8               	btfss	status,2,c
  1294  0035CE  D003               	goto	l7128
  1295                           
  1296                           ;main.c: 278:      V.s_state = SEQ_STATE_TRIGGER;
  1297  0035D0  0E03               	movlw	3
  1298  0035D2  0100               	movlb	0	; () banked
  1299  0035D4  6F85               	movwf	_V& (0+255),b	;volatile
  1300  0035D6                     l7128:
  1301                           
  1302                           ;main.c: 280:     if (V.t_l_state == LINK_STATE_ERROR)
  1303  0035D6  0E06               	movlw	6
  1304  0035D8  0100               	movlb	0	; () banked
  1305  0035DA  1988               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1306  0035DC                     L18:
  1307  0035DC  A4D8               	btfss	status,2,c
  1308  0035DE  D058               	goto	l1129
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 281:      V.s_state = SEQ_STATE_ERROR;
  1312  0035E0  0E05               	movlw	5
  1313  0035E2  6F85               	movwf	_V& (0+255),b	;volatile
  1314  0035E4  D055               	goto	l1129
  1315  0035E6                     l1143:
  1316                           
  1317                           ; BSR set to: 0
  1318  0035E6  82BE               	bsf	16318,1,c	;volatile
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 285:     sprintf(V.buf, " OK #");
  1322  0035E8  0E5F               	movlw	STR_4& (0+255)
  1323  0035EA  6EE6               	movwf	postinc1,c
  1324  0035EC  0E85               	movlw	_V& (0+255)
  1325  0035EE  0F04               	addlw	4
  1326  0035F0  6EE6               	movwf	postinc1,c
  1327  0035F2  0E02               	movlw	2
  1328  0035F4  6EE6               	movwf	postinc1,c
  1329  0035F6  ECE2  F023         	call	_sprintf	;wreg free
  1330                           
  1331                           ;main.c: 286:     wait_lcd_done();
  1332  0035FA  EC84  F02C         	call	_wait_lcd_done	;wreg free
  1333                           
  1334                           ;main.c: 287:     eaDogM_WriteString(V.buf);
  1335  0035FE  0E85               	movlw	_V& (0+255)
  1336  003600  0F04               	addlw	4
  1337  003602  6EE6               	movwf	postinc1,c
  1338  003604  EC46  F024         	call	_eaDogM_WriteString	;wreg free
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main.c: 288:     V.s_state = SEQ_STATE_DONE;
  1342  003608  0E04               	movlw	4
  1343  00360A  6F85               	movwf	_V& (0+255),b	;volatile
  1344                           
  1345                           ; BSR set to: 0
  1346  00360C  92BE               	bcf	16318,1,c	;volatile
  1347  00360E  D040               	goto	l1129
  1348  003610                     l7142:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main.c: 296:     UART1_Write(0x15);
  1352  003610  0E15               	movlw	21
  1353  003612  6EE6               	movwf	postinc1,c
  1354  003614  EC45  F029         	call	_UART1_Write	;wreg free
  1355                           
  1356                           ; BSR set to: 57
  1357                           ;main.c: 297:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1358  003618  0100               	movlb	0	; () banked
  1359  00361A  51D0               	movf	(_V+75)& (0+255),w,b	;volatile
  1360  00361C  6EE6               	movwf	postinc1,c
  1361  00361E  0E00               	movlw	0
  1362  003620  6EE6               	movwf	postinc1,c
  1363  003622  51CF               	movf	(_V+74)& (0+255),w,b	;volatile
  1364  003624  6EE6               	movwf	postinc1,c
  1365  003626  0E00               	movlw	0
  1366  003628  6EE6               	movwf	postinc1,c
  1367  00362A  5188               	movf	(_V+3)& (0+255),w,b	;volatile
  1368  00362C  6EE6               	movwf	postinc1,c
  1369  00362E  0E00               	movlw	0
  1370  003630  6EE6               	movwf	postinc1,c
  1371  003632  5187               	movf	(_V+2)& (0+255),w,b	;volatile
  1372  003634  6EE6               	movwf	postinc1,c
  1373  003636  0E00               	movlw	0
  1374  003638  6EE6               	movwf	postinc1,c
  1375  00363A  0E3E               	movlw	STR_5& (0+255)
  1376  00363C  6EE6               	movwf	postinc1,c
  1377  00363E  0E85               	movlw	_V& (0+255)
  1378  003640  0F04               	addlw	4
  1379  003642  6EE6               	movwf	postinc1,c
  1380  003644  0E0A               	movlw	10
  1381  003646  6EE6               	movwf	postinc1,c
  1382  003648  ECE2  F023         	call	_sprintf	;wreg free
  1383                           
  1384                           ;main.c: 298:     wait_lcd_done();
  1385  00364C  EC84  F02C         	call	_wait_lcd_done	;wreg free
  1386                           
  1387                           ;main.c: 299:     eaDogM_WriteString(V.buf);
  1388  003650  0E85               	movlw	_V& (0+255)
  1389  003652  0F04               	addlw	4
  1390  003654  6EE6               	movwf	postinc1,c
  1391  003656  EC46  F024         	call	_eaDogM_WriteString	;wreg free
  1392  00365A                     l7150:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 300:     V.s_state = SEQ_STATE_INIT;
  1396  00365A  6B85               	clrf	_V& (0+255),b	;volatile
  1397                           
  1398                           ;main.c: 301:     break;
  1399  00365C  D019               	goto	l1129
  1400  00365E                     l7154:
  1401                           
  1402                           ; BSR set to: 0
  1403  00365E  5185               	movf	_V& (0+255),w,b	;volatile
  1404  003660  6E44               	movwf	btemp+10,c
  1405  003662  6A45               	clrf	btemp+11,c
  1406                           
  1407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1408                           ; Switch size 1, requested type "simple"
  1409                           ; Number of cases is 1, Range of values is 0 to 0
  1410                           ; switch strategies available:
  1411                           ; Name         Instructions Cycles
  1412                           ; simple_byte            4     3 (average)
  1413                           ;	Chosen strategy is simple_byte
  1414  003664  5045               	movf	btemp+11,w,c
  1415  003666  0A00               	xorlw	0	; case 0
  1416  003668  A4D8               	btfss	status,2,c
  1417  00366A  D7D2               	goto	l7142
  1418                           
  1419                           ; BSR set to: 0
  1420                           ; Switch size 1, requested type "simple"
  1421                           ; Number of cases is 6, Range of values is 0 to 5
  1422                           ; switch strategies available:
  1423                           ; Name         Instructions Cycles
  1424                           ; simple_byte           19    10 (average)
  1425                           ;	Chosen strategy is simple_byte
  1426  00366C  5044               	movf	btemp+10,w,c
  1427  00366E  0A00               	xorlw	0	; case 0
  1428  003670  B4D8               	btfsc	status,2,c
  1429  003672  D767               	goto	l1134
  1430  003674  0A01               	xorlw	1	; case 1
  1431  003676  B4D8               	btfsc	status,2,c
  1432  003678  D773               	goto	l7108
  1433  00367A  0A03               	xorlw	3	; case 2
  1434  00367C  B4D8               	btfsc	status,2,c
  1435  00367E  D79F               	goto	l7124
  1436  003680  0A01               	xorlw	1	; case 3
  1437  003682  B4D8               	btfsc	status,2,c
  1438  003684  D7B0               	goto	l1143
  1439  003686  0A07               	xorlw	7	; case 4
  1440  003688  B4D8               	btfsc	status,2,c
  1441  00368A  D7E7               	goto	l7150
  1442  00368C  0A01               	xorlw	1	; case 5
  1443  00368E  D7C0               	goto	l7142
  1444  003690                     l1129:
  1445                           
  1446                           ; BSR set to: 0
  1447  003690  0100               	movlb	0	; () banked
  1448  003692  5186               	movf	(_V+1)& (0+255),w,b	;volatile
  1449  003694  6E44               	movwf	btemp+10,c
  1450  003696  6A45               	clrf	btemp+11,c
  1451                           
  1452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1453                           ; Switch size 1, requested type "simple"
  1454                           ; Number of cases is 1, Range of values is 0 to 0
  1455                           ; switch strategies available:
  1456                           ; Name         Instructions Cycles
  1457                           ; simple_byte            4     3 (average)
  1458                           ;	Chosen strategy is simple_byte
  1459  003698  5045               	movf	btemp+11,w,c
  1460  00369A  0A00               	xorlw	0	; case 0
  1461  00369C  A4D8               	btfss	status,2,c
  1462  00369E  D6C6               	goto	l7074
  1463                           
  1464                           ; BSR set to: 0
  1465                           ; Switch size 1, requested type "simple"
  1466                           ; Number of cases is 3, Range of values is 0 to 5
  1467                           ; switch strategies available:
  1468                           ; Name         Instructions Cycles
  1469                           ; simple_byte           10     6 (average)
  1470                           ;	Chosen strategy is simple_byte
  1471  0036A0  5044               	movf	btemp+10,w,c
  1472  0036A2  0A00               	xorlw	0	; case 0
  1473  0036A4  B4D8               	btfsc	status,2,c
  1474  0036A6  D6C5               	goto	l7076
  1475  0036A8  0A01               	xorlw	1	; case 1
  1476  0036AA  B4D8               	btfsc	status,2,c
  1477  0036AC  D7D8               	goto	l7154
  1478  0036AE  0A04               	xorlw	4	; case 5
  1479  0036B0  D6BD               	goto	l7074
  1480  0036B2                     __end_of_main:
  1481                           	opt callstack 0
  1482                           
  1483 ;; *************** function _wait_lcd_done *****************
  1484 ;; Defined at:
  1485 ;;		line 124 in file "eadog.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1  [STACK] void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    4
  1506 ;; This function calls:
  1507 ;;		_wdtdelay
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text1
  1514  005908                     __ptext1:
  1515                           	opt callstack 0
  1516  005908                     _wait_lcd_done:
  1517                           	opt callstack 26
  1518                           
  1519                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  1520                           
  1521                           ; BSR set to: 0
  1522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1523                           ;incstack = 0
  1524  005908  0100               	movlb	0	; () banked
  1525  00590A  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  1526  00590C  D7FD               	goto	_wait_lcd_done
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;eadog.c: 127:  wdtdelay(50);
  1530  00590E  0E32               	movlw	50
  1531  005910  6EE6               	movwf	postinc1,c
  1532  005912  0E00               	movlw	0
  1533  005914  6EE6               	movwf	postinc1,c
  1534  005916  0E00               	movlw	0
  1535  005918  6EE6               	movwf	postinc1,c
  1536  00591A  0E00               	movlw	0
  1537  00591C  6EE6               	movwf	postinc1,c
  1538  00591E  EC3E  F028         	call	_wdtdelay	;wreg free
  1539                           
  1540                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  1541  005922  0012               	return		;funcret
  1542  005924                     __end_of_wait_lcd_done:
  1543                           	opt callstack 0
  1544                           
  1545 ;; *************** function _t_protocol *****************
  1546 ;; Defined at:
  1547 ;;		line 121 in file "gemsecs.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  t_link          1  [STACK] PTR enum E16164
  1550 ;;		 -> V(80), 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  block           3  [STACK] struct response_type
  1553 ;;  rxData          1  [STACK] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1  [STACK] enum E16885
  1556 ;; Registers used:
  1557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    5
  1570 ;; This function calls:
  1571 ;;		_StartTimer
  1572 ;;		_TimerDone
  1573 ;;		_UART1_Read
  1574 ;;		_UART1_Write
  1575 ;;		_UART1_is_rx_ready
  1576 ;;		_UART1_put_buffer
  1577 ;;		_WaitMs
  1578 ;;		_secs_II_message
  1579 ;;		_secs_send
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text2
  1586  00401E                     __ptext2:
  1587                           	opt callstack 0
  1588  00401E                     _t_protocol:
  1589                           	opt callstack 0
  1590                           
  1591                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1592  00401E  52E6               	movf	postinc1,f,c
  1593  004020  52E6               	movf	postinc1,f,c
  1594  004022  52E6               	movf	postinc1,f,c
  1595  004024  52E6               	movf	postinc1,f,c
  1596                           
  1597                           ;gemsecs.c: 121: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 122: {;gemsecs.
      +                          c: 123:  uint8_t rxData;;gemsecs.c: 124:  response_type block;;gemsecs.c: 126:  switch (
      +                          *t_link) {
  1598                           
  1599                           ;incstack = 0
  1600  004026  D0DE               	goto	l7054
  1601  004028                     l1413:
  1602                           
  1603                           ;gemsecs.c: 128:   V.error = LINK_ERROR_NONE;
  1604  004028  0100               	movlb	0	; () banked
  1605  00402A  6BCF               	clrf	(_V+74)& (0+255),b	;volatile
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;gemsecs.c: 129:   UART1_Write(0x05);
  1609  00402C  0E05               	movlw	5
  1610  00402E  6EE6               	movwf	postinc1,c
  1611  004030  EC45  F029         	call	_UART1_Write	;wreg free
  1612                           
  1613                           ; BSR set to: 57
  1614                           ;gemsecs.c: 130:   StartTimer(TMR_T2, 2000);
  1615  004034  0ED0               	movlw	208
  1616  004036  6EE6               	movwf	postinc1,c
  1617  004038  0E07               	movlw	7
  1618  00403A  6EE6               	movwf	postinc1,c
  1619  00403C  0E02               	movlw	2
  1620  00403E  6EE6               	movwf	postinc1,c
  1621  004040  ECA2  F029         	call	_StartTimer	;wreg free
  1622                           
  1623                           ;gemsecs.c: 131:   *t_link = LINK_STATE_ENQ;
  1624                           ;stkvar	_t_link @ sp[(-4)+-1]
  1625  004044  0EFB               	movlw	-5
  1626  004046  50E3               	movf	plusw1,w,c
  1627  004048  6ED9               	movwf	fsr2l,c
  1628  00404A  6ADA               	clrf	fsr2h,c
  1629  00404C  0E01               	movlw	1
  1630  00404E  6EDF               	movwf	indf2,c
  1631                           
  1632                           ;gemsecs.c: 133:   WaitMs(5);
  1633  004050  0E05               	movlw	5
  1634  004052  6EE6               	movwf	postinc1,c
  1635  004054  0E00               	movlw	0
  1636  004056  6EE6               	movwf	postinc1,c
  1637  004058  EC49  F02A         	call	_WaitMs	;wreg free
  1638                           
  1639                           ;gemsecs.c: 134:   UART1_put_buffer(0x04);
  1640  00405C  0E04               	movlw	4
  1641  00405E  6EE6               	movwf	postinc1,c
  1642  004060  EC34  F02A         	call	_UART1_put_buffer	;wreg free
  1643                           
  1644                           ;gemsecs.c: 136:   break;
  1645  004064  D0E0               	goto	l7056
  1646  004066                     l6994:
  1647                           
  1648                           ;gemsecs.c: 138:   if (TimerDone(TMR_T2)) {
  1649  004066  0E02               	movlw	2
  1650  004068  6EE6               	movwf	postinc1,c
  1651  00406A  ECEF  F02B         	call	_TimerDone	;wreg free
  1652  00406E  503A               	movf	btemp,w,c
  1653  004070  B4D8               	btfsc	status,2,c
  1654  004072  D009               	goto	l7000
  1655                           
  1656                           ;gemsecs.c: 139:    V.error = LINK_ERROR_T2;
  1657  004074  0E02               	movlw	2
  1658  004076  0100               	movlb	0	; () banked
  1659  004078  6FCF               	movwf	(_V+74)& (0+255),b	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;gemsecs.c: 140:    *t_link = LINK_STATE_NAK;
  1663                           ;stkvar	_t_link @ sp[(-4)+-1]
  1664  00407A  0EFB               	movlw	-5
  1665  00407C  50E3               	movf	plusw1,w,c
  1666  00407E  6ED9               	movwf	fsr2l,c
  1667  004080  6ADA               	clrf	fsr2h,c
  1668  004082  0E05               	movlw	5
  1669  004084  D0AD               	goto	L5
  1670  004086                     l7000:
  1671                           
  1672                           ;gemsecs.c: 142:    if (UART1_is_rx_ready()) {
  1673  004086  EC17  F02D         	call	_UART1_is_rx_ready	;wreg free
  1674  00408A  503A               	movf	btemp,w,c
  1675  00408C  B4D8               	btfsc	status,2,c
  1676  00408E  D0CB               	goto	l7056
  1677                           
  1678                           ;gemsecs.c: 143:     rxData = UART1_Read();
  1679  004090  EC64  F029         	call	_UART1_Read	;wreg free
  1680                           
  1681                           ;stkvar	_rxData @ sp[(-4)+3]
  1682  004094  0EFF               	movlw	-1
  1683  004096  0060  F0EB  FFE3   	movff	btemp,plusw1
  1684                           
  1685                           ; BSR set to: 57
  1686                           ;gemsecs.c: 144:     if (rxData == 0x04) {
  1687                           ;stkvar	_rxData @ sp[(-4)+3]
  1688  00409C  0EFF               	movlw	-1
  1689  00409E  006F FF8C  F03A    	movff	plusw1,btemp
  1690  0040A4  0E04               	movlw	4
  1691  0040A6  183A               	xorwf	btemp,w,c
  1692  0040A8  A4D8               	btfss	status,2,c
  1693  0040AA  D0BD               	goto	l7056
  1694                           
  1695                           ; BSR set to: 57
  1696                           ;gemsecs.c: 145:      StartTimer(TMR_T3, 5000);
  1697  0040AC  0E88               	movlw	136
  1698  0040AE  6EE6               	movwf	postinc1,c
  1699  0040B0  0E13               	movlw	19
  1700  0040B2  6EE6               	movwf	postinc1,c
  1701  0040B4  0E03               	movlw	3
  1702  0040B6  6EE6               	movwf	postinc1,c
  1703  0040B8  ECA2  F029         	call	_StartTimer	;wreg free
  1704                           
  1705                           ;gemsecs.c: 146:      *t_link = LINK_STATE_EOT;
  1706                           ;stkvar	_t_link @ sp[(-4)+-1]
  1707  0040BC  0EFB               	movlw	-5
  1708  0040BE  50E3               	movf	plusw1,w,c
  1709  0040C0  6ED9               	movwf	fsr2l,c
  1710  0040C2  6ADA               	clrf	fsr2h,c
  1711  0040C4  0E02               	movlw	2
  1712  0040C6  D08C               	goto	L5
  1713  0040C8                     l7010:
  1714                           
  1715                           ;gemsecs.c: 152:   block = secs_II_message(V.stream, V.function);
  1716  0040C8  0100               	movlb	0	; () banked
  1717  0040CA  51CE               	movf	(_V+73)& (0+255),w,b	;volatile
  1718  0040CC  6EE6               	movwf	postinc1,c
  1719  0040CE  51CD               	movf	(_V+72)& (0+255),w,b	;volatile
  1720  0040D0  6EE6               	movwf	postinc1,c
  1721  0040D2  ECDD  F026         	call	_secs_II_message	;wreg free
  1722                           
  1723                           ;stkvar	_block @ sp[(-4)+0]
  1724  0040D6  0EFC               	movlw	-4
  1725  0040D8  0060  F0EB  FFE3   	movff	btemp,plusw1
  1726  0040DE  0EFD               	movlw	-3
  1727  0040E0  0060  F0EF  FFE3   	movff	btemp+1,plusw1
  1728  0040E6  0EFE               	movlw	-2
  1729  0040E8  0060  F0F3  FFE3   	movff	btemp+2,plusw1
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;gemsecs.c: 153:   if (V.abort == LINK_ERROR_ABORT) {
  1733  0040EE  0E07               	movlw	7
  1734  0040F0  19D0               	xorwf	(_V+75)& (0+255),w,b	;volatile
  1735  0040F2  A4D8               	btfss	status,2,c
  1736  0040F4  D019               	goto	l7018
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;gemsecs.c: 154:    secs_send((uint8_t*) block.header, block.length, 0);
  1740  0040F6  0E00               	movlw	0
  1741  0040F8  6EE6               	movwf	postinc1,c
  1742                           
  1743                           ;stkvar	_block @ sp[(-5)+0]
  1744  0040FA  0EFD               	movlw	253
  1745  0040FC  24E1               	addwf	fsr1l,w,c
  1746  0040FE  6ED9               	movwf	fsr2l,c
  1747  004100  0EFF               	movlw	255
  1748  004102  20E2               	addwfc	fsr1h,w,c
  1749  004104  6EDA               	movwf	fsr2h,c
  1750  004106  50DF               	movf	indf2,w,c
  1751  004108  6EE6               	movwf	postinc1,c
  1752                           
  1753                           ;stkvar	_block @ sp[(-6)+0]
  1754  00410A  0EFA               	movlw	-6
  1755  00410C  006F FF8F FFE6     	movff	plusw1,postinc1
  1756  004112  006F FF8F FFE6     	movff	plusw1,postinc1
  1757  004118  EC1E  F021         	call	_secs_send	;wreg free
  1758  00411C                     l7016:
  1759                           
  1760                           ;gemsecs.c: 155:    *t_link = LINK_STATE_ERROR;
  1761                           ;stkvar	_t_link @ sp[(-4)+-1]
  1762  00411C  0EFB               	movlw	-5
  1763  00411E  50E3               	movf	plusw1,w,c
  1764  004120  6ED9               	movwf	fsr2l,c
  1765  004122  6ADA               	clrf	fsr2h,c
  1766  004124  0E06               	movlw	6
  1767  004126  D01C               	goto	L3
  1768  004128                     l7018:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;gemsecs.c: 157:    secs_send((uint8_t*) block.header, block.length, 0);
  1772  004128  0E00               	movlw	0
  1773  00412A  6EE6               	movwf	postinc1,c
  1774                           
  1775                           ;stkvar	_block @ sp[(-5)+0]
  1776  00412C  0EFD               	movlw	253
  1777  00412E  24E1               	addwf	fsr1l,w,c
  1778  004130  6ED9               	movwf	fsr2l,c
  1779  004132  0EFF               	movlw	255
  1780  004134  20E2               	addwfc	fsr1h,w,c
  1781  004136  6EDA               	movwf	fsr2h,c
  1782  004138  50DF               	movf	indf2,w,c
  1783  00413A  6EE6               	movwf	postinc1,c
  1784                           
  1785                           ;stkvar	_block @ sp[(-6)+0]
  1786  00413C  0EFA               	movlw	-6
  1787  00413E  006F FF8F FFE6     	movff	plusw1,postinc1
  1788  004144  006F FF8F FFE6     	movff	plusw1,postinc1
  1789  00414A  EC1E  F021         	call	_secs_send	;wreg free
  1790                           
  1791                           ;gemsecs.c: 158:    if (V.error == LINK_ERROR_NONE) {
  1792  00414E  0100               	movlb	0	; () banked
  1793  004150  51CF               	movf	(_V+74)& (0+255),w,b	;volatile
  1794  004152  A4D8               	btfss	status,2,c
  1795  004154  D7E3               	goto	l7016
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;gemsecs.c: 159:     *t_link = LINK_STATE_ACK;
  1799                           ;stkvar	_t_link @ sp[(-4)+-1]
  1800  004156  0EFB               	movlw	-5
  1801  004158  50E3               	movf	plusw1,w,c
  1802  00415A  6ED9               	movwf	fsr2l,c
  1803  00415C  6ADA               	clrf	fsr2h,c
  1804  00415E  0E03               	movlw	3
  1805  004160                     L3:
  1806  004160  6EDF               	movwf	indf2,c
  1807                           
  1808                           ;gemsecs.c: 165:   WaitMs(5);
  1809                           
  1810                           ;gemsecs.c: 160:    } else {
  1811  004162  0E05               	movlw	5
  1812  004164  6EE6               	movwf	postinc1,c
  1813  004166  0E00               	movlw	0
  1814  004168  6EE6               	movwf	postinc1,c
  1815  00416A  EC49  F02A         	call	_WaitMs	;wreg free
  1816                           
  1817                           ;gemsecs.c: 166:   UART1_put_buffer(0x06);
  1818  00416E  0E06               	movlw	6
  1819  004170  6EE6               	movwf	postinc1,c
  1820  004172  EC34  F02A         	call	_UART1_put_buffer	;wreg free
  1821                           
  1822                           ;gemsecs.c: 168:   break;
  1823  004176  D057               	goto	l7056
  1824  004178                     l7030:
  1825                           
  1826                           ;gemsecs.c: 170:   if (TimerDone(TMR_T3)) {
  1827  004178  0E03               	movlw	3
  1828  00417A  6EE6               	movwf	postinc1,c
  1829  00417C  ECEF  F02B         	call	_TimerDone	;wreg free
  1830  004180  503A               	movf	btemp,w,c
  1831  004182  B4D8               	btfsc	status,2,c
  1832  004184  D002               	goto	l7036
  1833                           
  1834                           ;gemsecs.c: 171:    V.error = LINK_ERROR_T3;
  1835  004186  0E03               	movlw	3
  1836  004188  D776               	goto	L4
  1837  00418A                     l7036:
  1838                           
  1839                           ;gemsecs.c: 174:    if (UART1_is_rx_ready()) {
  1840  00418A  EC17  F02D         	call	_UART1_is_rx_ready	;wreg free
  1841  00418E  503A               	movf	btemp,w,c
  1842  004190  B4D8               	btfsc	status,2,c
  1843  004192  D049               	goto	l7056
  1844                           
  1845                           ;gemsecs.c: 175:     rxData = UART1_Read();
  1846  004194  EC64  F029         	call	_UART1_Read	;wreg free
  1847                           
  1848                           ;stkvar	_rxData @ sp[(-4)+3]
  1849  004198  0EFF               	movlw	-1
  1850  00419A  0060  F0EB  FFE3   	movff	btemp,plusw1
  1851                           
  1852                           ; BSR set to: 57
  1853                           ;gemsecs.c: 176:     if (rxData == 0x06) {
  1854                           ;stkvar	_rxData @ sp[(-4)+3]
  1855  0041A0  0EFF               	movlw	-1
  1856  0041A2  006F FF8C  F03A    	movff	plusw1,btemp
  1857  0041A8  0E06               	movlw	6
  1858  0041AA  183A               	xorwf	btemp,w,c
  1859  0041AC  A4D8               	btfss	status,2,c
  1860  0041AE  D03B               	goto	l7056
  1861                           
  1862                           ; BSR set to: 57
  1863                           ;gemsecs.c: 177:      *t_link = LINK_STATE_DONE;
  1864                           ;stkvar	_t_link @ sp[(-4)+-1]
  1865  0041B0  0EFB               	movlw	-5
  1866  0041B2  50E3               	movf	plusw1,w,c
  1867  0041B4  6ED9               	movwf	fsr2l,c
  1868  0041B6  6ADA               	clrf	fsr2h,c
  1869  0041B8  0E04               	movlw	4
  1870  0041BA  D012               	goto	L5
  1871  0041BC                     l7044:
  1872                           
  1873                           ;gemsecs.c: 183:   *t_link = LINK_STATE_ERROR;
  1874                           ;stkvar	_t_link @ sp[(-4)+-1]
  1875  0041BC  0EFB               	movlw	-5
  1876  0041BE  50E3               	movf	plusw1,w,c
  1877  0041C0  6ED9               	movwf	fsr2l,c
  1878  0041C2  6ADA               	clrf	fsr2h,c
  1879  0041C4  0E06               	movlw	6
  1880  0041C6  6EDF               	movwf	indf2,c
  1881                           
  1882                           ;gemsecs.c: 184:   while ((uart1RxCount)) {
  1883  0041C8  D002               	goto	l7048
  1884  0041CA                     l7046:
  1885                           
  1886                           ;gemsecs.c: 185:    UART1_Read();
  1887  0041CA  EC64  F029         	call	_UART1_Read	;wreg free
  1888  0041CE                     l7048:
  1889                           
  1890                           ;gemsecs.c: 184:   while ((uart1RxCount)) {
  1891  0041CE  5034               	movf	_uart1RxCount,w,c	;volatile
  1892  0041D0  B4D8               	btfsc	status,2,c
  1893  0041D2  D029               	goto	l7056
  1894  0041D4  D7FA               	goto	l7046
  1895  0041D6                     l7050:
  1896                           
  1897                           ;gemsecs.c: 193:   *t_link = LINK_STATE_IDLE;
  1898                           ;stkvar	_t_link @ sp[(-4)+-1]
  1899  0041D6  0EFB               	movlw	-5
  1900  0041D8  50E3               	movf	plusw1,w,c
  1901  0041DA  6ED9               	movwf	fsr2l,c
  1902  0041DC  6ADA               	clrf	fsr2h,c
  1903  0041DE  0E00               	movlw	0
  1904  0041E0                     L5:
  1905  0041E0  6EDF               	movwf	indf2,c
  1906                           
  1907                           ;gemsecs.c: 194:   break;
  1908  0041E2  D021               	goto	l7056
  1909  0041E4                     l7054:
  1910                           
  1911                           ;stkvar	_t_link @ sp[(-4)+-1]
  1912  0041E4  0EFB               	movlw	-5
  1913  0041E6  50E3               	movf	plusw1,w,c
  1914  0041E8  6ED9               	movwf	fsr2l,c
  1915  0041EA  6ADA               	clrf	fsr2h,c
  1916  0041EC  50DF               	movf	indf2,w,c
  1917  0041EE  6E44               	movwf	btemp+10,c
  1918  0041F0  6A45               	clrf	btemp+11,c
  1919                           
  1920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1921                           ; Switch size 1, requested type "simple"
  1922                           ; Number of cases is 1, Range of values is 0 to 0
  1923                           ; switch strategies available:
  1924                           ; Name         Instructions Cycles
  1925                           ; simple_byte            4     3 (average)
  1926                           ;	Chosen strategy is simple_byte
  1927  0041F2  5045               	movf	btemp+11,w,c
  1928  0041F4  0A00               	xorlw	0	; case 0
  1929  0041F6  A4D8               	btfss	status,2,c
  1930  0041F8  D7EE               	goto	l7050
  1931                           
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 7, Range of values is 0 to 6
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte           22    12 (average)
  1937                           ;	Chosen strategy is simple_byte
  1938  0041FA  5044               	movf	btemp+10,w,c
  1939  0041FC  0A00               	xorlw	0	; case 0
  1940  0041FE  B4D8               	btfsc	status,2,c
  1941  004200  D713               	goto	l1413
  1942  004202  0A01               	xorlw	1	; case 1
  1943  004204  B4D8               	btfsc	status,2,c
  1944  004206  D72F               	goto	l6994
  1945  004208  0A03               	xorlw	3	; case 2
  1946  00420A  B4D8               	btfsc	status,2,c
  1947  00420C  D75D               	goto	l7010
  1948  00420E  0A01               	xorlw	1	; case 3
  1949  004210  B4D8               	btfsc	status,2,c
  1950  004212  D7B2               	goto	l7030
  1951  004214  0A07               	xorlw	7	; case 4
  1952  004216  B4D8               	btfsc	status,2,c
  1953  004218  D006               	goto	l7056
  1954  00421A  0A01               	xorlw	1	; case 5
  1955  00421C  B4D8               	btfsc	status,2,c
  1956  00421E  D7CE               	goto	l7044
  1957  004220  0A03               	xorlw	3	; case 6
  1958  004222  A4D8               	btfss	status,2,c
  1959  004224  D7D8               	goto	l7050
  1960  004226                     l7056:
  1961                           
  1962                           ;gemsecs.c: 197:  return *t_link;
  1963                           ;stkvar	_t_link @ sp[(-4)+-1]
  1964  004226  0EFB               	movlw	-5
  1965  004228  50E3               	movf	plusw1,w,c
  1966  00422A  6ED9               	movwf	fsr2l,c
  1967  00422C  6ADA               	clrf	fsr2h,c
  1968  00422E  50DF               	movf	indf2,w,c
  1969  004230  6E3A               	movwf	btemp,c
  1970                           
  1971                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  1972  004232  0EFB               	movlw	251
  1973  004234  26E1               	addwf	fsr1l,f,c
  1974  004236  0EFF               	movlw	255
  1975  004238  22E2               	addwfc	fsr1h,f,c
  1976  00423A  0012               	return		;funcret
  1977  00423C                     __end_of_t_protocol:
  1978                           	opt callstack 0
  1979                           
  1980 ;; *************** function _secs_II_message *****************
  1981 ;; Defined at:
  1982 ;;		line 239 in file "gemsecs.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  stream          1  [STACK] unsigned char 
  1985 ;;  function        1  [STACK] unsigned char 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  3  [STACK] struct response_type
  1990 ;; Registers used:
  1991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  1992 ;; Tracked objects:
  1993 ;;		On entry : 3F/0
  1994 ;;		On exit  : 3F/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    3
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_t_protocol
  2008 ;; This function uses a reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text3
  2012  004DBA                     __ptext3:
  2013                           	opt callstack 0
  2014  004DBA                     _secs_II_message:
  2015                           	opt callstack 26
  2016                           
  2017                           ;gemsecs.c: 239: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 240: {;gemsecs.c: 241:  static response_type block;;gemsecs.c: 243:  V.abort = LINK_
      +                          ERROR_NONE;
  2018                           
  2019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2020                           ;incstack = 0
  2021  004DBA  0100               	movlb	0	; () banked
  2022  004DBC  6BD0               	clrf	(_V+75)& (0+255),b	;volatile
  2023                           
  2024                           ;gemsecs.c: 245:  switch (stream) {
  2025  004DBE  D01D               	goto	l5550
  2026  004DC0                     l5528:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;gemsecs.c: 249:    block.header = (uint8_t*) & H12[0];
  2030  004DC0  0EB4               	movlw	low _H12
  2031  004DC2  6E05               	movwf	secs_II_message@block,c
  2032  004DC4  0E01               	movlw	high _H12
  2033  004DC6  6E06               	movwf	secs_II_message@block+1,c
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;gemsecs.c: 250:    block.length = sizeof(header12);
  2037  004DC8  0E0F               	movlw	15
  2038  004DCA  6E07               	movwf	secs_II_message@block+2,c
  2039                           
  2040                           ;gemsecs.c: 251:    break;
  2041  004DCC  D023               	goto	l5552
  2042  004DCE                     l5532:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;gemsecs.c: 253:    block.header = (uint8_t*) & H10[2];
  2046  004DCE  0E9A               	movlw	low (_H10+26)
  2047  004DD0  6E05               	movwf	secs_II_message@block,c
  2048  004DD2  0E01               	movlw	high (_H10+26)
  2049  004DD4  6E06               	movwf	secs_II_message@block+1,c
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;gemsecs.c: 254:    block.length = sizeof(header10);
  2053  004DD6  0E0D               	movlw	13
  2054  004DD8  6E07               	movwf	secs_II_message@block+2,c
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;gemsecs.c: 255:    V.abort = LINK_ERROR_ABORT;
  2058  004DDA  0E07               	movlw	7
  2059  004DDC  6FD0               	movwf	(_V+75)& (0+255),b	;volatile
  2060                           
  2061                           ;gemsecs.c: 256:    break;
  2062  004DDE  D01A               	goto	l5552
  2063  004DE0                     l5540:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;stkvar	_function @ sp[(0)+-2]
  2067  004DE0  0EFE               	movlw	-2
  2068  004DE2  50E3               	movf	plusw1,w,c
  2069  004DE4  6E44               	movwf	btemp+10,c
  2070  004DE6  6A45               	clrf	btemp+11,c
  2071                           
  2072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2073                           ; Switch size 1, requested type "simple"
  2074                           ; Number of cases is 1, Range of values is 0 to 0
  2075                           ; switch strategies available:
  2076                           ; Name         Instructions Cycles
  2077                           ; simple_byte            4     3 (average)
  2078                           ;	Chosen strategy is simple_byte
  2079  004DE8  5045               	movf	btemp+11,w,c
  2080  004DEA  0A00               	xorlw	0	; case 0
  2081  004DEC  A4D8               	btfss	status,2,c
  2082  004DEE  D7EF               	goto	l5532
  2083                           
  2084                           ; BSR set to: 0
  2085                           ; Switch size 1, requested type "simple"
  2086                           ; Number of cases is 1, Range of values is 1 to 1
  2087                           ; switch strategies available:
  2088                           ; Name         Instructions Cycles
  2089                           ; simple_byte            4     3 (average)
  2090                           ;	Chosen strategy is simple_byte
  2091  004DF0  5044               	movf	btemp+10,w,c
  2092  004DF2  0A01               	xorlw	1	; case 1
  2093  004DF4  B4D8               	btfsc	status,2,c
  2094  004DF6  D7E4               	goto	l5528
  2095  004DF8  D7EA               	goto	l5532
  2096  004DFA                     l5550:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;stkvar	_stream @ sp[(0)+-1]
  2100  004DFA  0EFF               	movlw	-1
  2101  004DFC  50E3               	movf	plusw1,w,c
  2102  004DFE  6E44               	movwf	btemp+10,c
  2103  004E00  6A45               	clrf	btemp+11,c
  2104                           
  2105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2106                           ; Switch size 1, requested type "simple"
  2107                           ; Number of cases is 1, Range of values is 0 to 0
  2108                           ; switch strategies available:
  2109                           ; Name         Instructions Cycles
  2110                           ; simple_byte            4     3 (average)
  2111                           ;	Chosen strategy is simple_byte
  2112  004E02  5045               	movf	btemp+11,w,c
  2113  004E04  0A00               	xorlw	0	; case 0
  2114  004E06  A4D8               	btfss	status,2,c
  2115  004E08  D7E2               	goto	l5532
  2116                           
  2117                           ; BSR set to: 0
  2118                           ; Switch size 1, requested type "simple"
  2119                           ; Number of cases is 1, Range of values is 1 to 1
  2120                           ; switch strategies available:
  2121                           ; Name         Instructions Cycles
  2122                           ; simple_byte            4     3 (average)
  2123                           ;	Chosen strategy is simple_byte
  2124  004E0A  5044               	movf	btemp+10,w,c
  2125  004E0C  0A01               	xorlw	1	; case 1
  2126  004E0E  B4D8               	btfsc	status,2,c
  2127  004E10  D7E7               	goto	l5540
  2128  004E12  D7DD               	goto	l5532
  2129  004E14                     l5552:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;gemsecs.c: 266:  return(block);
  2133  004E14  0060  F014  F03A   	movff	secs_II_message@block,btemp
  2134  004E1A  0060  F018  F03B   	movff	secs_II_message@block+1,btemp+1
  2135  004E20  0060  F01C  F03C   	movff	secs_II_message@block+2,btemp+2
  2136                           
  2137                           ; BSR set to: 0
  2138                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2139  004E26  52E5               	movf	postdec1,f,c
  2140  004E28  52E5               	movf	postdec1,f,c
  2141  004E2A  0012               	return		;funcret
  2142  004E2C                     __end_of_secs_II_message:
  2143                           	opt callstack 0
  2144                           
  2145 ;; *************** function _sprintf *****************
  2146 ;; Defined at:
  2147 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  s               1  [STACK] PTR unsigned char 
  2150 ;;		 -> V(80), 
  2151 ;;  fmt             1  [STACK] PTR const unsigned char 
  2152 ;;		 -> STR_5(23), STR_4(6), STR_3(10), STR_2(12), 
  2153 ;;		 -> STR_1(61), 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  f               5  [STACK] struct _IO_FILE
  2156 ;;  ap              2  [STACK] PTR void [1]
  2157 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2158 ;;  ret             2    0        int 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2  [STACK] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/1
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:   11
  2175 ;; This function calls:
  2176 ;;		_vfprintf
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text4
  2183  0047C4                     __ptext4:
  2184                           	opt callstack 0
  2185  0047C4                     _sprintf:
  2186                           	opt callstack 0
  2187                           
  2188                           ; BSR set to: 0
  2189                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2190  0047C4  0E07               	movlw	7
  2191  0047C6  26E1               	addwf	fsr1l,f,c
  2192  0047C8  0E00               	movlw	0
  2193  0047CA  22E2               	addwfc	fsr1h,f,c
  2194                           
  2195                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2196                           
  2197                           ;incstack = 0
  2198  0047CC  0EF6               	movlw	246
  2199  0047CE  24E1               	addwf	fsr1l,w,c
  2200  0047D0  6E44               	movwf	btemp+10,c
  2201  0047D2  0EFF               	movlw	255
  2202  0047D4  20E2               	addwfc	fsr1h,w,c
  2203  0047D6  6E45               	movwf	btemp+11,c
  2204                           
  2205                           ;stkvar	_ap @ sp[(-7)+5]
  2206  0047D8  0EFF               	movlw	-1
  2207  0047DA  0060  F117  FFE3   	movff	btemp+11,plusw1
  2208  0047E0  0EFE               	movlw	-2
  2209  0047E2  0060  F113  FFE3   	movff	btemp+10,plusw1
  2210                           
  2211                           ;stkvar	_s @ sp[(-7)+-2]
  2212  0047E8  0EF7               	movlw	-9
  2213  0047EA  006F FF8C  F045    	movff	plusw1,btemp+11
  2214                           
  2215                           ;stkvar	_f @ sp[(-7)+0]
  2216  0047F0  0EF9               	movlw	-7
  2217  0047F2  0060  F117  FFE3   	movff	btemp+11,plusw1
  2218                           
  2219                           ;stkvar	_f @ sp[(-7)+0]
  2220  0047F8  0EFA               	movlw	250
  2221  0047FA  24E1               	addwf	fsr1l,w,c
  2222  0047FC  6ED9               	movwf	fsr2l,c
  2223  0047FE  0EFF               	movlw	255
  2224  004800  20E2               	addwfc	fsr1h,w,c
  2225  004802  6EDA               	movwf	fsr2h,c
  2226  004804  0E00               	movlw	0
  2227  004806  6EDE               	movwf	postinc2,c
  2228  004808  0E00               	movlw	0
  2229  00480A  6EDD               	movwf	postdec2,c
  2230                           
  2231                           ;stkvar	_f @ sp[(-7)+0]
  2232  00480C  0EFC               	movlw	252
  2233  00480E  24E1               	addwf	fsr1l,w,c
  2234  004810  6ED9               	movwf	fsr2l,c
  2235  004812  0EFF               	movlw	255
  2236  004814  20E2               	addwfc	fsr1h,w,c
  2237  004816  6EDA               	movwf	fsr2h,c
  2238  004818  0E00               	movlw	0
  2239  00481A  6EDE               	movwf	postinc2,c
  2240  00481C  0E00               	movlw	0
  2241  00481E  6EDD               	movwf	postdec2,c
  2242                           
  2243                           ;stkvar	_ap @ sp[(-7)+5]
  2244  004820  0EFE               	movlw	254
  2245  004822  24E1               	addwf	fsr1l,w,c
  2246  004824  6E3A               	movwf	btemp,c
  2247  004826  0EFF               	movlw	255
  2248  004828  20E2               	addwfc	fsr1h,w,c
  2249  00482A  6E3B               	movwf	btemp+1,c
  2250  00482C  0060  F0EB  FFE6   	movff	btemp,postinc1
  2251  004832  0060  F0EF  FFE6   	movff	btemp+1,postinc1
  2252                           
  2253                           ;stkvar	_fmt @ sp[(-9)+-3]
  2254  004838  0EF4               	movlw	-12
  2255  00483A  50E3               	movf	plusw1,w,c
  2256  00483C  6EE6               	movwf	postinc1,c
  2257                           
  2258                           ;stkvar	_f @ sp[(-10)+0]
  2259  00483E  0EF6               	movlw	246
  2260  004840  24E1               	addwf	fsr1l,w,c
  2261  004842  6E3A               	movwf	btemp,c
  2262  004844  0EFF               	movlw	255
  2263  004846  20E2               	addwfc	fsr1h,w,c
  2264  004848  6E3B               	movwf	btemp+1,c
  2265  00484A  0060  F0EB  FFE6   	movff	btemp,postinc1
  2266  004850  0060  F0EF  FFE6   	movff	btemp+1,postinc1
  2267  004856  EC3E  F025         	call	_vfprintf	;wreg free
  2268                           
  2269                           ;stkvar	_f @ sp[(-7)+0]
  2270  00485A  0EFA               	movlw	250
  2271  00485C  24E1               	addwf	fsr1l,w,c
  2272  00485E  6ED9               	movwf	fsr2l,c
  2273  004860  0EFF               	movlw	255
  2274  004862  20E2               	addwfc	fsr1h,w,c
  2275  004864  6EDA               	movwf	fsr2h,c
  2276  004866  50DF               	movf	indf2,w,c
  2277  004868  6E45               	movwf	btemp+11,c
  2278                           
  2279                           ;stkvar	_s @ sp[(-7)+-2]
  2280  00486A  0EF7               	movlw	-9
  2281  00486C  50E3               	movf	plusw1,w,c
  2282  00486E  2445               	addwf	btemp+11,w,c
  2283  004870  6ED9               	movwf	fsr2l,c
  2284  004872  6ADA               	clrf	fsr2h,c
  2285  004874  0E00               	movlw	0
  2286  004876  6EDF               	movwf	indf2,c
  2287                           
  2288                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, args
      +                          ize = 2, vargsize = 0
  2289  004878  0EF9               	movlw	249
  2290  00487A  26E1               	addwf	fsr1l,f,c
  2291  00487C  0EFF               	movlw	255
  2292  00487E  22E2               	addwfc	fsr1h,f,c
  2293  004880  52E5               	movf	postdec1,f,c
  2294  004882  50E7               	movf	indf1,w,c
  2295  004884  5EE1               	subwf	fsr1l,f,c
  2296  004886  0E00               	movlw	0
  2297  004888  5AE2               	subwfb	fsr1h,f,c
  2298  00488A  0012               	return		;funcret
  2299  00488C                     __end_of_sprintf:
  2300                           	opt callstack 0
  2301                           
  2302 ;; *************** function _r_protocol *****************
  2303 ;; Defined at:
  2304 ;;		line 35 in file "gemsecs.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  r_link          1  [STACK] PTR enum E16164
  2307 ;;		 -> V(80), 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  rxData          1  [STACK] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1  [STACK] enum E16885
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    5
  2326 ;; This function calls:
  2327 ;;		_StartTimer
  2328 ;;		_TimerDone
  2329 ;;		_UART1_Read
  2330 ;;		_UART1_Write
  2331 ;;		_UART1_is_rx_ready
  2332 ;;		_WaitMs
  2333 ;;		_run_checksum
  2334 ;;		_secs_send
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text5
  2341  003932                     __ptext5:
  2342                           	opt callstack 0
  2343  003932                     _r_protocol:
  2344                           	opt callstack 0
  2345                           
  2346                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2347  003932  52E6               	movf	postinc1,f,c
  2348                           
  2349                           ;gemsecs.c: 35: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 36: {;gemsecs.c: 
      +                          37:  uint8_t rxData;;gemsecs.c: 38:  static uint8_t rxData_l = 0;;gemsecs.c: 40:  switch
      +                           (*r_link) {
  2350                           
  2351                           ;incstack = 0
  2352  003934  D113               	goto	l6970
  2353  003936                     l6886:
  2354                           
  2355                           ;gemsecs.c: 42:   if (UART1_is_rx_ready()) {
  2356  003936  EC17  F02D         	call	_UART1_is_rx_ready	;wreg free
  2357  00393A  503A               	movf	btemp,w,c
  2358  00393C  B4D8               	btfsc	status,2,c
  2359  00393E  D12F               	goto	l6972
  2360                           
  2361                           ;gemsecs.c: 43:    rxData = UART1_Read();
  2362  003940  EC64  F029         	call	_UART1_Read	;wreg free
  2363                           
  2364                           ;stkvar	_rxData @ sp[(-1)+0]
  2365  003944  0EFF               	movlw	-1
  2366  003946  0060  F0EB  FFE3   	movff	btemp,plusw1
  2367                           
  2368                           ; BSR set to: 57
  2369                           ;gemsecs.c: 44:    if (rxData == 0x05) {
  2370                           ;stkvar	_rxData @ sp[(-1)+0]
  2371  00394C  0EFF               	movlw	-1
  2372  00394E  006F FF8C  F03A    	movff	plusw1,btemp
  2373  003954  0E05               	movlw	5
  2374  003956  183A               	xorwf	btemp,w,c
  2375  003958  A4D8               	btfss	status,2,c
  2376  00395A  D121               	goto	l6972
  2377                           
  2378                           ; BSR set to: 57
  2379                           ;gemsecs.c: 45:     V.error = LINK_ERROR_NONE;
  2380  00395C  0100               	movlb	0	; () banked
  2381  00395E  6BCF               	clrf	(_V+74)& (0+255),b	;volatile
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;gemsecs.c: 46:     *r_link = LINK_STATE_ENQ;
  2385                           ;stkvar	_r_link @ sp[(-1)+-1]
  2386  003960  0EFE               	movlw	-2
  2387  003962  50E3               	movf	plusw1,w,c
  2388  003964  6ED9               	movwf	fsr2l,c
  2389  003966  6ADA               	clrf	fsr2h,c
  2390  003968  0E01               	movlw	1
  2391  00396A  D0F6               	goto	L10
  2392  00396C                     l1387:
  2393                           
  2394                           ;gemsecs.c: 51:   rxData_l = 0;
  2395  00396C  6A2D               	clrf	r_protocol@rxData_l,c
  2396                           
  2397                           ;gemsecs.c: 52:   UART1_Write(0x04);
  2398  00396E  0E04               	movlw	4
  2399  003970  6EE6               	movwf	postinc1,c
  2400  003972  EC45  F029         	call	_UART1_Write	;wreg free
  2401                           
  2402                           ; BSR set to: 57
  2403                           ;gemsecs.c: 53:   StartTimer(TMR_T2, 2000);
  2404  003976  0ED0               	movlw	208
  2405  003978  6EE6               	movwf	postinc1,c
  2406  00397A  0E07               	movlw	7
  2407  00397C  6EE6               	movwf	postinc1,c
  2408  00397E  0E02               	movlw	2
  2409  003980  6EE6               	movwf	postinc1,c
  2410  003982  ECA2  F029         	call	_StartTimer	;wreg free
  2411                           
  2412                           ;gemsecs.c: 54:   *r_link = LINK_STATE_EOT;
  2413                           ;stkvar	_r_link @ sp[(-1)+-1]
  2414  003986  0EFE               	movlw	-2
  2415  003988  50E3               	movf	plusw1,w,c
  2416  00398A  6ED9               	movwf	fsr2l,c
  2417  00398C  6ADA               	clrf	fsr2h,c
  2418  00398E  0E02               	movlw	2
  2419  003990  6EDF               	movwf	indf2,c
  2420                           
  2421                           ;gemsecs.c: 56:   WaitMs(5);
  2422  003992  0E05               	movlw	5
  2423  003994  6EE6               	movwf	postinc1,c
  2424  003996  0E00               	movlw	0
  2425  003998  6EE6               	movwf	postinc1,c
  2426  00399A  EC49  F02A         	call	_WaitMs	;wreg free
  2427                           
  2428                           ;gemsecs.c: 57:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1);
  2429  00399E  0E01               	movlw	1
  2430  0039A0  6EE6               	movwf	postinc1,c
  2431  0039A2  0E0D               	movlw	13
  2432  0039A4  6EE6               	movwf	postinc1,c
  2433  0039A6  0EA7               	movlw	low (_H10+39)
  2434  0039A8  6EE6               	movwf	postinc1,c
  2435  0039AA  0E01               	movlw	high (_H10+39)
  2436  0039AC  6EE6               	movwf	postinc1,c
  2437  0039AE  EC1E  F021         	call	_secs_send	;wreg free
  2438                           
  2439                           ;gemsecs.c: 59:   break;
  2440  0039B2  D0F5               	goto	l6972
  2441  0039B4                     l6906:
  2442                           
  2443                           ;gemsecs.c: 61:   if (TimerDone(TMR_T2)) {
  2444  0039B4  0E02               	movlw	2
  2445  0039B6  6EE6               	movwf	postinc1,c
  2446  0039B8  ECEF  F02B         	call	_TimerDone	;wreg free
  2447  0039BC  503A               	movf	btemp,w,c
  2448  0039BE  B4D8               	btfsc	status,2,c
  2449  0039C0  D009               	goto	l6912
  2450                           
  2451                           ;gemsecs.c: 62:    V.error = LINK_ERROR_T2;
  2452  0039C2  0E02               	movlw	2
  2453  0039C4  0100               	movlb	0	; () banked
  2454  0039C6  6FCF               	movwf	(_V+74)& (0+255),b	;volatile
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;gemsecs.c: 63:    *r_link = LINK_STATE_NAK;
  2458                           ;stkvar	_r_link @ sp[(-1)+-1]
  2459  0039C8  0EFE               	movlw	-2
  2460  0039CA  50E3               	movf	plusw1,w,c
  2461  0039CC  6ED9               	movwf	fsr2l,c
  2462  0039CE  6ADA               	clrf	fsr2h,c
  2463  0039D0  0E05               	movlw	5
  2464  0039D2  D0C2               	goto	L10
  2465  0039D4                     l6912:
  2466                           
  2467                           ;gemsecs.c: 65:    if (UART1_is_rx_ready()) {
  2468  0039D4  EC17  F02D         	call	_UART1_is_rx_ready	;wreg free
  2469  0039D8  503A               	movf	btemp,w,c
  2470  0039DA  B4D8               	btfsc	status,2,c
  2471  0039DC  D0E0               	goto	l6972
  2472                           
  2473                           ;gemsecs.c: 66:     rxData = UART1_Read();
  2474  0039DE  EC64  F029         	call	_UART1_Read	;wreg free
  2475                           
  2476                           ;stkvar	_rxData @ sp[(-1)+0]
  2477  0039E2  0EFF               	movlw	-1
  2478  0039E4  0060  F0EB  FFE3   	movff	btemp,plusw1
  2479                           
  2480                           ; BSR set to: 57
  2481                           ;gemsecs.c: 67:     if (rxData_l == 0) {
  2482  0039EA  502D               	movf	r_protocol@rxData_l,w,c
  2483  0039EC  A4D8               	btfss	status,2,c
  2484  0039EE  D00C               	goto	l6924
  2485                           
  2486                           ; BSR set to: 57
  2487                           ;gemsecs.c: 68:      r_block.length = rxData;
  2488                           ;stkvar	_rxData @ sp[(-1)+0]
  2489  0039F0  0EFF               	movlw	-1
  2490  0039F2  006F FF8C  F06C    	movff	plusw1,_r_block+12
  2491                           
  2492                           ; BSR set to: 57
  2493                           ;gemsecs.c: 69:      run_checksum(0, 1);
  2494  0039F8  0E01               	movlw	1
  2495  0039FA  6EE6               	movwf	postinc1,c
  2496  0039FC  0E00               	movlw	0
  2497  0039FE  6EE6               	movwf	postinc1,c
  2498  003A00  EC73  F02A         	call	_run_checksum	;wreg free
  2499                           
  2500                           ;gemsecs.c: 70:      rxData_l++;
  2501  003A04  2A2D               	incf	r_protocol@rxData_l,f,c
  2502                           
  2503                           ;gemsecs.c: 71:     } else {
  2504  003A06  D0CB               	goto	l6972
  2505  003A08                     l6924:
  2506                           
  2507                           ; BSR set to: 57
  2508                           ;gemsecs.c: 75:      if (rxData_l <= 10)
  2509  003A08  0E0B               	movlw	11
  2510  003A0A  602D               	cpfslt	r_protocol@rxData_l,c
  2511  003A0C  D018               	goto	l6928
  2512                           
  2513                           ; BSR set to: 57
  2514                           ;gemsecs.c: 76:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  2515                           ;stkvar	_rxData @ sp[(-1)+0]
  2516  003A0E  0E80               	movlw	low _H10
  2517  003A10  6E44               	movwf	btemp+10,c
  2518  003A12  0E01               	movlw	high _H10
  2519  003A14  6E45               	movwf	btemp+11,c
  2520  003A16  0E0F               	movlw	15
  2521  003A18  2644               	addwf	btemp+10,f,c
  2522  003A1A  0E00               	movlw	0
  2523  003A1C  2245               	addwfc	btemp+11,f,c
  2524  003A1E  0100               	movlb	0	; () banked
  2525  003A20  516C               	movf	(_r_block+12)& (0+255),w,b
  2526  003A22  2644               	addwf	btemp+10,f,c
  2527  003A24  0E00               	movlw	0
  2528  003A26  2245               	addwfc	btemp+11,f,c
  2529  003A28  502D               	movf	r_protocol@rxData_l,w,c
  2530  003A2A  5C44               	subwf	btemp+10,w,c
  2531  003A2C  6ED9               	movwf	fsr2l,c
  2532  003A2E  5045               	movf	btemp+11,w,c
  2533  003A30  A0D8               	btfss	status,0,c
  2534  003A32  0445               	decf	btemp+11,w,c
  2535  003A34  6EDA               	movwf	fsr2h,c
  2536  003A36  0EFF               	movlw	-1
  2537  003A38  006F FF8F FFDF     	movff	plusw1,indf2
  2538  003A3E                     l6928:
  2539                           
  2540                           ;gemsecs.c: 77:      if (rxData_l <= r_block.length)
  2541  003A3E  502D               	movf	r_protocol@rxData_l,w,c
  2542  003A40  0100               	movlb	0	; () banked
  2543  003A42  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  2544  003A44  A0D8               	btfss	status,0,c
  2545  003A46  D00D               	goto	l6932
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;gemsecs.c: 78:       V.r_checksum = run_checksum(rxData, 0);
  2549  003A48  0E00               	movlw	0
  2550  003A4A  6EE6               	movwf	postinc1,c
  2551                           
  2552                           ;stkvar	_rxData @ sp[(-2)+0]
  2553  003A4C  0EFE               	movlw	-2
  2554  003A4E  50E3               	movf	plusw1,w,c
  2555  003A50  6EE6               	movwf	postinc1,c
  2556  003A52  EC73  F02A         	call	_run_checksum	;wreg free
  2557  003A56  0060  F0E8  F0D1   	movff	btemp,_V+76	;volatile
  2558  003A5C  0060  F0EC  F0D2   	movff	btemp+1,_V+77	;volatile
  2559  003A62                     l6932:
  2560                           
  2561                           ;gemsecs.c: 80:      if (rxData_l == r_block.length + 1)
  2562  003A62  502D               	movf	r_protocol@rxData_l,w,c
  2563  003A64  6E44               	movwf	btemp+10,c
  2564  003A66  6A45               	clrf	btemp+11,c
  2565  003A68  0100               	movlb	0	; () banked
  2566  003A6A  516C               	movf	(_r_block+12)& (0+255),w,b
  2567  003A6C  6E42               	movwf	btemp+8,c
  2568  003A6E  6A43               	clrf	btemp+9,c
  2569  003A70  0E01               	movlw	1
  2570  003A72  2642               	addwf	btemp+8,f,c
  2571  003A74  0E00               	movlw	0
  2572  003A76  2243               	addwfc	btemp+9,f,c
  2573  003A78  5044               	movf	btemp+10,w,c
  2574  003A7A  1842               	xorwf	btemp+8,w,c
  2575  003A7C  E109               	bnz	l6936
  2576  003A7E  5045               	movf	btemp+11,w,c
  2577  003A80  1843               	xorwf	btemp+9,w,c
  2578  003A82  A4D8               	btfss	status,2,c
  2579  003A84  D005               	goto	l6936
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;gemsecs.c: 81:       H10[1].checksum = (uint16_t) rxData << 8;
  2583                           ;stkvar	_rxData @ sp[(-1)+0]
  2584  003A86  0EFF               	movlw	-1
  2585  003A88  50E3               	movf	plusw1,w,c
  2586  003A8A  0101               	movlb	1	; () banked
  2587  003A8C  6F8E               	movwf	(_H10+14)& (0+255),b
  2588  003A8E  6B8D               	clrf	(_H10+13)& (0+255),b
  2589  003A90                     l6936:
  2590                           
  2591                           ;gemsecs.c: 82:      if (rxData_l == r_block.length + 2)
  2592  003A90  502D               	movf	r_protocol@rxData_l,w,c
  2593  003A92  6E44               	movwf	btemp+10,c
  2594  003A94  6A45               	clrf	btemp+11,c
  2595  003A96  0100               	movlb	0	; () banked
  2596  003A98  516C               	movf	(_r_block+12)& (0+255),w,b
  2597  003A9A  6E42               	movwf	btemp+8,c
  2598  003A9C  6A43               	clrf	btemp+9,c
  2599  003A9E  0E02               	movlw	2
  2600  003AA0  2642               	addwf	btemp+8,f,c
  2601  003AA2  0E00               	movlw	0
  2602  003AA4  2243               	addwfc	btemp+9,f,c
  2603  003AA6  5044               	movf	btemp+10,w,c
  2604  003AA8  1842               	xorwf	btemp+8,w,c
  2605  003AAA  E10A               	bnz	l6940
  2606  003AAC  5045               	movf	btemp+11,w,c
  2607  003AAE  1843               	xorwf	btemp+9,w,c
  2608  003AB0  A4D8               	btfss	status,2,c
  2609  003AB2  D006               	goto	l6940
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;gemsecs.c: 83:       H10[1].checksum += rxData;
  2613                           ;stkvar	_rxData @ sp[(-1)+0]
  2614  003AB4  0EFF               	movlw	-1
  2615  003AB6  50E3               	movf	plusw1,w,c
  2616  003AB8  0101               	movlb	1	; () banked
  2617  003ABA  278D               	addwf	(_H10+13)& (0+255),f,b
  2618  003ABC  0E00               	movlw	0
  2619  003ABE  238E               	addwfc	(_H10+14)& (0+255),f,b
  2620  003AC0                     l6940:
  2621                           
  2622                           ;gemsecs.c: 85:      rxData_l++;
  2623  003AC0  2A2D               	incf	r_protocol@rxData_l,f,c
  2624                           
  2625                           ;gemsecs.c: 86:      if (rxData_l > (r_block.length + 2)) {
  2626  003AC2  502D               	movf	r_protocol@rxData_l,w,c
  2627  003AC4  6E44               	movwf	btemp+10,c
  2628  003AC6  6A45               	clrf	btemp+11,c
  2629  003AC8  0100               	movlb	0	; () banked
  2630  003ACA  516C               	movf	(_r_block+12)& (0+255),w,b
  2631  003ACC  6E42               	movwf	btemp+8,c
  2632  003ACE  6A43               	clrf	btemp+9,c
  2633  003AD0  0E02               	movlw	2
  2634  003AD2  2642               	addwf	btemp+8,f,c
  2635  003AD4  0E00               	movlw	0
  2636  003AD6  2243               	addwfc	btemp+9,f,c
  2637  003AD8  5044               	movf	btemp+10,w,c
  2638  003ADA  5C42               	subwf	btemp+8,w,c
  2639  003ADC  5043               	movf	btemp+9,w,c
  2640  003ADE  0A80               	xorlw	128
  2641  003AE0  6E3A               	movwf	btemp,c
  2642  003AE2  5045               	movf	btemp+11,w,c
  2643  003AE4  0A80               	xorlw	128
  2644  003AE6  583A               	subwfb	btemp,w,c
  2645  003AE8  B0D8               	btfsc	status,0,c
  2646  003AEA  D059               	goto	l6972
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;gemsecs.c: 87:       if (V.r_checksum == H10[1].checksum) {
  2650  003AEC  0101               	movlb	1	; () banked
  2651  003AEE  518D               	movf	(_H10+13)& (0+255),w,b
  2652  003AF0  0100               	movlb	0	; () banked
  2653  003AF2  19D1               	xorwf	(_V+76)& (0+255),w,b	;volatile
  2654  003AF4  E10C               	bnz	l6948
  2655  003AF6  0101               	movlb	1	; () banked
  2656  003AF8  518E               	movf	(_H10+14)& (0+255),w,b
  2657  003AFA  0100               	movlb	0	; () banked
  2658  003AFC  19D2               	xorwf	(_V+77)& (0+255),w,b	;volatile
  2659  003AFE  A4D8               	btfss	status,2,c
  2660  003B00  D006               	goto	l6948
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;gemsecs.c: 88:        *r_link = LINK_STATE_ACK;
  2664                           ;stkvar	_r_link @ sp[(-1)+-1]
  2665  003B02  0EFE               	movlw	-2
  2666  003B04  50E3               	movf	plusw1,w,c
  2667  003B06  6ED9               	movwf	fsr2l,c
  2668  003B08  6ADA               	clrf	fsr2h,c
  2669  003B0A  0E03               	movlw	3
  2670  003B0C  D025               	goto	L10
  2671  003B0E                     l6948:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;gemsecs.c: 90:        V.error = LINK_ERROR_CHECKSUM;
  2675  003B0E  0E05               	movlw	5
  2676  003B10  D75A               	goto	L9
  2677  003B12                     l6952:
  2678                           
  2679                           ;gemsecs.c: 99:   V.stream = H10[1].block.block.stream;
  2680  003B12  0101               	movlb	1	; () banked
  2681  003B14  5196               	movf	(_H10+22)& (0+255),w,b
  2682  003B16  0B7F               	andlw	127
  2683  003B18  0100               	movlb	0	; () banked
  2684  003B1A  6FCD               	movwf	(_V+72)& (0+255),b	;volatile
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;gemsecs.c: 100:   V.function = H10[1].block.block.function;
  2688  003B1C  C195  F0CE         	movff	_H10+21,_V+73	;volatile
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;gemsecs.c: 101:   UART1_Write(0x06);
  2692  003B20  0E06               	movlw	6
  2693  003B22  6EE6               	movwf	postinc1,c
  2694  003B24  EC45  F029         	call	_UART1_Write	;wreg free
  2695                           
  2696                           ; BSR set to: 57
  2697                           ;gemsecs.c: 102:   *r_link = LINK_STATE_DONE;
  2698                           ;stkvar	_r_link @ sp[(-1)+-1]
  2699  003B28  0EFE               	movlw	-2
  2700  003B2A  50E3               	movf	plusw1,w,c
  2701  003B2C  6ED9               	movwf	fsr2l,c
  2702  003B2E  6ADA               	clrf	fsr2h,c
  2703  003B30  0E04               	movlw	4
  2704  003B32  D012               	goto	L10
  2705  003B34                     l6960:
  2706                           
  2707                           ;gemsecs.c: 105:   *r_link = LINK_STATE_ERROR;
  2708                           ;stkvar	_r_link @ sp[(-1)+-1]
  2709  003B34  0EFE               	movlw	-2
  2710  003B36  50E3               	movf	plusw1,w,c
  2711  003B38  6ED9               	movwf	fsr2l,c
  2712  003B3A  6ADA               	clrf	fsr2h,c
  2713  003B3C  0E06               	movlw	6
  2714  003B3E  6EDF               	movwf	indf2,c
  2715                           
  2716                           ;gemsecs.c: 106:   while ((uart1RxCount)) {
  2717  003B40  D002               	goto	l6964
  2718  003B42                     l6962:
  2719                           
  2720                           ;gemsecs.c: 107:    UART1_Read();
  2721  003B42  EC64  F029         	call	_UART1_Read	;wreg free
  2722  003B46                     l6964:
  2723                           
  2724                           ;gemsecs.c: 106:   while ((uart1RxCount)) {
  2725  003B46  5034               	movf	_uart1RxCount,w,c	;volatile
  2726  003B48  B4D8               	btfsc	status,2,c
  2727  003B4A  D029               	goto	l6972
  2728  003B4C  D7FA               	goto	l6962
  2729  003B4E                     l6966:
  2730                           
  2731                           ;gemsecs.c: 114:   *r_link = LINK_STATE_IDLE;
  2732                           ;stkvar	_r_link @ sp[(-1)+-1]
  2733  003B4E  0EFE               	movlw	-2
  2734  003B50  50E3               	movf	plusw1,w,c
  2735  003B52  6ED9               	movwf	fsr2l,c
  2736  003B54  6ADA               	clrf	fsr2h,c
  2737  003B56  0E00               	movlw	0
  2738  003B58                     L10:
  2739  003B58  6EDF               	movwf	indf2,c
  2740                           
  2741                           ;gemsecs.c: 115:   break;
  2742  003B5A  D021               	goto	l6972
  2743  003B5C                     l6970:
  2744                           
  2745                           ;stkvar	_r_link @ sp[(-1)+-1]
  2746  003B5C  0EFE               	movlw	-2
  2747  003B5E  50E3               	movf	plusw1,w,c
  2748  003B60  6ED9               	movwf	fsr2l,c
  2749  003B62  6ADA               	clrf	fsr2h,c
  2750  003B64  50DF               	movf	indf2,w,c
  2751  003B66  6E44               	movwf	btemp+10,c
  2752  003B68  6A45               	clrf	btemp+11,c
  2753                           
  2754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2755                           ; Switch size 1, requested type "simple"
  2756                           ; Number of cases is 1, Range of values is 0 to 0
  2757                           ; switch strategies available:
  2758                           ; Name         Instructions Cycles
  2759                           ; simple_byte            4     3 (average)
  2760                           ;	Chosen strategy is simple_byte
  2761  003B6A  5045               	movf	btemp+11,w,c
  2762  003B6C  0A00               	xorlw	0	; case 0
  2763  003B6E  A4D8               	btfss	status,2,c
  2764  003B70  D7EE               	goto	l6966
  2765                           
  2766                           ; Switch size 1, requested type "simple"
  2767                           ; Number of cases is 7, Range of values is 0 to 6
  2768                           ; switch strategies available:
  2769                           ; Name         Instructions Cycles
  2770                           ; simple_byte           22    12 (average)
  2771                           ;	Chosen strategy is simple_byte
  2772  003B72  5044               	movf	btemp+10,w,c
  2773  003B74  0A00               	xorlw	0	; case 0
  2774  003B76  B4D8               	btfsc	status,2,c
  2775  003B78  D6DE               	goto	l6886
  2776  003B7A  0A01               	xorlw	1	; case 1
  2777  003B7C  B4D8               	btfsc	status,2,c
  2778  003B7E  D6F6               	goto	l1387
  2779  003B80  0A03               	xorlw	3	; case 2
  2780  003B82  B4D8               	btfsc	status,2,c
  2781  003B84  D717               	goto	l6906
  2782  003B86  0A01               	xorlw	1	; case 3
  2783  003B88  B4D8               	btfsc	status,2,c
  2784  003B8A  D7C3               	goto	l6952
  2785  003B8C  0A07               	xorlw	7	; case 4
  2786  003B8E  B4D8               	btfsc	status,2,c
  2787  003B90  D7DE               	goto	l6966
  2788  003B92  0A01               	xorlw	1	; case 5
  2789  003B94  B4D8               	btfsc	status,2,c
  2790  003B96  D7CE               	goto	l6960
  2791  003B98  0A03               	xorlw	3	; case 6
  2792  003B9A  A4D8               	btfss	status,2,c
  2793  003B9C  D7D8               	goto	l6966
  2794  003B9E                     l6972:
  2795                           
  2796                           ;gemsecs.c: 118:  return *r_link;
  2797                           ;stkvar	_r_link @ sp[(-1)+-1]
  2798  003B9E  0EFE               	movlw	-2
  2799  003BA0  50E3               	movf	plusw1,w,c
  2800  003BA2  6ED9               	movwf	fsr2l,c
  2801  003BA4  6ADA               	clrf	fsr2h,c
  2802  003BA6  50DF               	movf	indf2,w,c
  2803  003BA8  6E3A               	movwf	btemp,c
  2804                           
  2805                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2806  003BAA  52E5               	movf	postdec1,f,c
  2807  003BAC  52E5               	movf	postdec1,f,c
  2808  003BAE  0012               	return		;funcret
  2809  003BB0                     __end_of_r_protocol:
  2810                           	opt callstack 0
  2811                           
  2812 ;; *************** function _secs_send *****************
  2813 ;; Defined at:
  2814 ;;		line 201 in file "gemsecs.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  byte_block      2  [STACK] PTR unsigned char 
  2817 ;;		 -> H12(15), H10(52), 
  2818 ;;  length          1  [STACK] unsigned char 
  2819 ;;  fake            1  [STACK] _Bool 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  k               2  [STACK] PTR unsigned char 
  2822 ;;		 -> H12(15), H10(52), 
  2823 ;;  checksum        2  [STACK] unsigned short 
  2824 ;;  i               1  [STACK] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1  [STACK] _Bool 
  2827 ;; Registers used:
  2828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    4
  2841 ;; This function calls:
  2842 ;;		_UART1_Write
  2843 ;;		_UART1_is_tx_ready
  2844 ;;		_UART1_put_buffer
  2845 ;;		_block_checksum
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;;		_r_protocol
  2849 ;;		_t_protocol
  2850 ;; This function uses a reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text6
  2854  00423C                     __ptext6:
  2855                           	opt callstack 0
  2856  00423C                     _secs_send:
  2857                           	opt callstack 0
  2858                           
  2859                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2860  00423C  0E05               	movlw	5
  2861  00423E  26E1               	addwf	fsr1l,f,c
  2862  004240  0E00               	movlw	0
  2863  004242  22E2               	addwfc	fsr1h,f,c
  2864                           
  2865                           ;gemsecs.c: 201: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 202: {;gemsecs.c: 203:  uint8_t i, *k;;gemsecs.c: 204:  uint16_t checksum;;gemsecs.
      +                          c: 206:  k = (uint8_t *) byte_block;
  2866                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2867                           
  2868                           ;incstack = 0
  2869  004244  0EF9               	movlw	-7
  2870  004246  006F FF8C  F044    	movff	plusw1,btemp+10
  2871  00424C  0EFA               	movlw	-6
  2872  00424E  006F FF8C  F045    	movff	plusw1,btemp+11
  2873                           
  2874                           ;stkvar	_k @ sp[(-5)+0]
  2875  004254  0EFC               	movlw	-4
  2876  004256  0060  F117  FFE3   	movff	btemp+11,plusw1
  2877  00425C  0EFB               	movlw	-5
  2878  00425E  0060  F113  FFE3   	movff	btemp+10,plusw1
  2879                           
  2880                           ;gemsecs.c: 208:  V.error = LINK_ERROR_NONE;
  2881  004264  0100               	movlb	0	; () banked
  2882  004266  6BCF               	clrf	(_V+74)& (0+255),b	;volatile
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;gemsecs.c: 209:  if ((length - 3) != k[length - 1]) {
  2886                           ;stkvar	_length @ sp[(-5)+-3]
  2887  004268  0EF8               	movlw	-8
  2888  00426A  50E3               	movf	plusw1,w,c
  2889  00426C  6E44               	movwf	btemp+10,c
  2890  00426E  6A45               	clrf	btemp+11,c
  2891                           
  2892                           ;stkvar	_k @ sp[(-5)+0]
  2893  004270  0EFB               	movlw	-5
  2894  004272  50E3               	movf	plusw1,w,c
  2895  004274  2644               	addwf	btemp+10,f,c
  2896  004276  0EFC               	movlw	-4
  2897  004278  50E3               	movf	plusw1,w,c
  2898  00427A  2245               	addwfc	btemp+11,f,c
  2899  00427C  0EFF               	movlw	255
  2900  00427E  2444               	addwf	btemp+10,w,c
  2901  004280  6ED9               	movwf	fsr2l,c
  2902  004282  0EFF               	movlw	255
  2903  004284  2045               	addwfc	btemp+11,w,c
  2904  004286  6EDA               	movwf	fsr2h,c
  2905  004288  50DF               	movf	indf2,w,c
  2906  00428A  6E44               	movwf	btemp+10,c
  2907  00428C  6A45               	clrf	btemp+11,c
  2908  00428E  0EFD               	movlw	253
  2909  004290  6E42               	movwf	btemp+8,c
  2910  004292  0EFF               	movlw	255
  2911  004294  6E43               	movwf	btemp+9,c
  2912                           
  2913                           ;stkvar	_length @ sp[(-5)+-3]
  2914  004296  0EF8               	movlw	-8
  2915  004298  50E3               	movf	plusw1,w,c
  2916  00429A  6E40               	movwf	btemp+6,c
  2917  00429C  6A41               	clrf	btemp+7,c
  2918  00429E  5042               	movf	btemp+8,w,c
  2919  0042A0  2640               	addwf	btemp+6,f,c
  2920  0042A2  5043               	movf	btemp+9,w,c
  2921  0042A4  2241               	addwfc	btemp+7,f,c
  2922  0042A6  5044               	movf	btemp+10,w,c
  2923  0042A8  1840               	xorwf	btemp+6,w,c
  2924  0042AA  E104               	bnz	u4560
  2925  0042AC  5045               	movf	btemp+11,w,c
  2926  0042AE  1841               	xorwf	btemp+7,w,c
  2927  0042B0  B4D8               	btfsc	status,2,c
  2928  0042B2  D003               	goto	l6746
  2929  0042B4                     u4560:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;gemsecs.c: 210:   V.error = LINK_ERROR_SEND;
  2933  0042B4  0E08               	movlw	8
  2934  0042B6  6FCF               	movwf	(_V+74)& (0+255),b	;volatile
  2935  0042B8  D098               	goto	l1441
  2936  0042BA                     l6746:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;gemsecs.c: 219:  checksum = block_checksum(&k[2], length - 3);
  2940  0042BA  0EFD               	movlw	253
  2941  0042BC  6E44               	movwf	btemp+10,c
  2942  0042BE  0EFF               	movlw	255
  2943  0042C0  6E45               	movwf	btemp+11,c
  2944                           
  2945                           ;stkvar	_length @ sp[(-5)+-3]
  2946  0042C2  0EF8               	movlw	-8
  2947  0042C4  50E3               	movf	plusw1,w,c
  2948  0042C6  6E42               	movwf	btemp+8,c
  2949  0042C8  6A43               	clrf	btemp+9,c
  2950  0042CA  5044               	movf	btemp+10,w,c
  2951  0042CC  2642               	addwf	btemp+8,f,c
  2952  0042CE  5045               	movf	btemp+11,w,c
  2953  0042D0  2243               	addwfc	btemp+9,f,c
  2954  0042D2  0060  F10B  FFE6   	movff	btemp+8,postinc1
  2955  0042D8  0060  F10F  FFE6   	movff	btemp+9,postinc1
  2956                           
  2957                           ;stkvar	_k @ sp[(-7)+0]
  2958  0042DE  0EF9               	movlw	-7
  2959  0042E0  50E3               	movf	plusw1,w,c
  2960  0042E2  0F02               	addlw	2
  2961  0042E4  6E44               	movwf	btemp+10,c
  2962  0042E6  0EFA               	movlw	-6
  2963  0042E8  006F FF8C  F045    	movff	plusw1,btemp+11
  2964  0042EE  0E00               	movlw	0
  2965  0042F0  2245               	addwfc	btemp+11,f,c
  2966  0042F2  0060  F113  FFE6   	movff	btemp+10,postinc1
  2967  0042F8  0060  F117  FFE6   	movff	btemp+11,postinc1
  2968  0042FE  EC79  F023         	call	_block_checksum	;wreg free
  2969                           
  2970                           ;stkvar	_checksum @ sp[(-5)+2]
  2971  004302  0EFD               	movlw	-3
  2972  004304  0060  F0EB  FFE3   	movff	btemp,plusw1
  2973  00430A  0EFE               	movlw	-2
  2974  00430C  0060  F0EF  FFE3   	movff	btemp+1,plusw1
  2975                           
  2976                           ;gemsecs.c: 220:  k[0] = checksum & 0xff;
  2977                           ;stkvar	_checksum @ sp[(-5)+2]
  2978                           ;stkvar	_k @ sp[(-5)+0]
  2979  004312  0EFB               	movlw	-5
  2980  004314  006F FF8F FFD9     	movff	plusw1,fsr2l
  2981  00431A  0EFC               	movlw	-4
  2982  00431C  006F FF8F FFDA     	movff	plusw1,fsr2h
  2983  004322  0EFD               	movlw	-3
  2984  004324  006F FF8F FFDF     	movff	plusw1,indf2
  2985                           
  2986                           ;gemsecs.c: 221:  k[1] = (checksum >> 8)&0xff;
  2987                           ;stkvar	_checksum @ sp[(-5)+2]
  2988  00432A  0EFE               	movlw	254
  2989  00432C  24E1               	addwf	fsr1l,w,c
  2990  00432E  6ED9               	movwf	fsr2l,c
  2991  004330  0EFF               	movlw	255
  2992  004332  20E2               	addwfc	fsr1h,w,c
  2993  004334  6EDA               	movwf	fsr2h,c
  2994                           
  2995                           ;stkvar	_k @ sp[(-5)+0]
  2996  004336  0EFB               	movlw	-5
  2997  004338  006F FF8C  F044    	movff	plusw1,btemp+10
  2998  00433E  0EFC               	movlw	-4
  2999  004340  006F FF8C  F045    	movff	plusw1,btemp+11
  3000  004346  0E01               	movlw	1
  3001  004348  2444               	addwf	btemp+10,w,c
  3002  00434A  6EE9               	movwf	fsr0l,c
  3003  00434C  0E00               	movlw	0
  3004  00434E  2045               	addwfc	btemp+11,w,c
  3005  004350  6EEA               	movwf	fsr0h,c
  3006  004352  006F FF7F FFEF     	movff	indf2,indf0
  3007                           
  3008                           ;gemsecs.c: 222:  V.t_checksum = checksum;
  3009                           ;stkvar	_checksum @ sp[(-5)+2]
  3010  004358  0EFD               	movlw	-3
  3011  00435A  006F FF8C  F0D3    	movff	plusw1,_V+78	;volatile
  3012  004360  0EFE               	movlw	-2
  3013  004362  006F FF8C  F0D4    	movff	plusw1,_V+79	;volatile
  3014  004368                     l6754:
  3015  004368  EC13  F02D         	call	_UART1_is_tx_ready	;wreg free
  3016  00436C  0E3F               	movlw	63
  3017  00436E  643A               	cpfsgt	btemp,c
  3018  004370  D7FB               	goto	l6754
  3019                           
  3020                           ;gemsecs.c: 225:  for (i = length; i > 0; i--) {
  3021                           ;stkvar	_length @ sp[(-5)+-3]
  3022                           ;stkvar	_i @ sp[(-5)+4]
  3023  004372  0EF8               	movlw	-8
  3024  004374  006F FF8C  F03A    	movff	plusw1,btemp
  3025  00437A  0EFF               	movlw	-1
  3026  00437C  0060  F0EB  FFE3   	movff	btemp,plusw1
  3027  004382                     l6758:
  3028                           
  3029                           ;stkvar	_i @ sp[(-5)+4]
  3030  004382  0EFF               	movlw	-1
  3031  004384  50E3               	movf	plusw1,w,c
  3032  004386  B4D8               	btfsc	status,2,c
  3033  004388  D030               	goto	l1441
  3034                           
  3035                           ;gemsecs.c: 226:   if (fake) {
  3036                           ;stkvar	_fake @ sp[(-5)+-4]
  3037  00438A  0EF7               	movlw	-9
  3038  00438C  50E3               	movf	plusw1,w,c
  3039  00438E  B4D8               	btfsc	status,2,c
  3040  004390  D015               	goto	l6766
  3041                           
  3042                           ;gemsecs.c: 227:    UART1_put_buffer(k[i - 1]);
  3043                           ;stkvar	_i @ sp[(-5)+4]
  3044  004392  0EFF               	movlw	-1
  3045  004394  50E3               	movf	plusw1,w,c
  3046  004396  6E44               	movwf	btemp+10,c
  3047  004398  6A45               	clrf	btemp+11,c
  3048                           
  3049                           ;stkvar	_k @ sp[(-5)+0]
  3050  00439A  0EFB               	movlw	-5
  3051  00439C  50E3               	movf	plusw1,w,c
  3052  00439E  2644               	addwf	btemp+10,f,c
  3053  0043A0  0EFC               	movlw	-4
  3054  0043A2  50E3               	movf	plusw1,w,c
  3055  0043A4  2245               	addwfc	btemp+11,f,c
  3056  0043A6  0EFF               	movlw	255
  3057  0043A8  2444               	addwf	btemp+10,w,c
  3058  0043AA  6ED9               	movwf	fsr2l,c
  3059  0043AC  0EFF               	movlw	255
  3060  0043AE  2045               	addwfc	btemp+11,w,c
  3061  0043B0  6EDA               	movwf	fsr2h,c
  3062  0043B2  50DF               	movf	indf2,w,c
  3063  0043B4  6EE6               	movwf	postinc1,c
  3064  0043B6  EC34  F02A         	call	_UART1_put_buffer	;wreg free
  3065                           
  3066                           ;gemsecs.c: 228:   } else {
  3067  0043BA  D014               	goto	l6768
  3068  0043BC                     l6766:
  3069                           
  3070                           ;gemsecs.c: 229:    UART1_Write(k[i - 1]);
  3071                           ;stkvar	_i @ sp[(-5)+4]
  3072  0043BC  0EFF               	movlw	-1
  3073  0043BE  50E3               	movf	plusw1,w,c
  3074  0043C0  6E44               	movwf	btemp+10,c
  3075  0043C2  6A45               	clrf	btemp+11,c
  3076                           
  3077                           ;stkvar	_k @ sp[(-5)+0]
  3078  0043C4  0EFB               	movlw	-5
  3079  0043C6  50E3               	movf	plusw1,w,c
  3080  0043C8  2644               	addwf	btemp+10,f,c
  3081  0043CA  0EFC               	movlw	-4
  3082  0043CC  50E3               	movf	plusw1,w,c
  3083  0043CE  2245               	addwfc	btemp+11,f,c
  3084  0043D0  0EFF               	movlw	255
  3085  0043D2  2444               	addwf	btemp+10,w,c
  3086  0043D4  6ED9               	movwf	fsr2l,c
  3087  0043D6  0EFF               	movlw	255
  3088  0043D8  2045               	addwfc	btemp+11,w,c
  3089  0043DA  6EDA               	movwf	fsr2h,c
  3090  0043DC  50DF               	movf	indf2,w,c
  3091  0043DE  6EE6               	movwf	postinc1,c
  3092  0043E0  EC45  F029         	call	_UART1_Write	;wreg free
  3093  0043E4                     l6768:
  3094                           
  3095                           ; BSR set to: 57
  3096                           ;gemsecs.c: 231:  }
  3097                           ;stkvar	_i @ sp[(-5)+4]
  3098  0043E4  0EFF               	movlw	-1
  3099  0043E6  06E3               	decf	plusw1,f,c
  3100  0043E8  D7CC               	goto	l6758
  3101  0043EA                     l1441:
  3102                           
  3103                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3104  0043EA  0EF7               	movlw	247
  3105  0043EC  26E1               	addwf	fsr1l,f,c
  3106  0043EE  0EFF               	movlw	255
  3107  0043F0  22E2               	addwfc	fsr1h,f,c
  3108  0043F2  0012               	return		;funcret
  3109  0043F4                     __end_of_secs_send:
  3110                           	opt callstack 0
  3111                           
  3112 ;; *************** function _block_checksum *****************
  3113 ;; Defined at:
  3114 ;;		line 11 in file "gemsecs.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  byte_block      2  [STACK] PTR unsigned char 
  3117 ;;		 -> H12(15), H10.block(10), H10(52), 
  3118 ;;  byte_count      2  [STACK] unsigned short 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  i               2  [STACK] unsigned short 
  3121 ;;  sum             2  [STACK] unsigned short 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2  [STACK] unsigned short 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3126 ;; Tracked objects:
  3127 ;;		On entry : 3F/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    3
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;;		_secs_send
  3143 ;; This function uses a reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text7
  3147  0046F2                     __ptext7:
  3148                           	opt callstack 0
  3149  0046F2                     _block_checksum:
  3150                           	opt callstack 0
  3151                           
  3152                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3153  0046F2  52E6               	movf	postinc1,f,c
  3154  0046F4  52E6               	movf	postinc1,f,c
  3155  0046F6  52E6               	movf	postinc1,f,c
  3156  0046F8  52E6               	movf	postinc1,f,c
  3157                           
  3158                           ;gemsecs.c: 11: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 12: {;gemsecs.c: 13:  uint16_t sum = 0, i;
  3159                           ;stkvar	_sum @ sp[(-4)+2]
  3160                           
  3161                           ;incstack = 0
  3162  0046FA  0EFE               	movlw	-2
  3163  0046FC  6AE3               	clrf	plusw1,c
  3164  0046FE  0EFF               	movlw	-1
  3165  004700  6AE3               	clrf	plusw1,c
  3166                           
  3167                           ;gemsecs.c: 15:  for (i = 0; i < byte_count; i++) {
  3168                           ;stkvar	_i @ sp[(-4)+0]
  3169  004702  0EFC               	movlw	-4
  3170  004704  6AE3               	clrf	plusw1,c
  3171  004706  0EFD               	movlw	-3
  3172  004708  6AE3               	clrf	plusw1,c
  3173  00470A  D039               	goto	l6676
  3174  00470C                     l6672:
  3175                           
  3176                           ;gemsecs.c: 16:   sum += byte_block[i];
  3177                           ;stkvar	_i @ sp[(-4)+0]
  3178  00470C  0EFC               	movlw	-4
  3179  00470E  006F FF8C  F044    	movff	plusw1,btemp+10
  3180  004714  0EFD               	movlw	-3
  3181  004716  006F FF8C  F045    	movff	plusw1,btemp+11
  3182                           
  3183                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3184  00471C  0EFA               	movlw	-6
  3185  00471E  006F FF8C  F042    	movff	plusw1,btemp+8
  3186  004724  0EFB               	movlw	-5
  3187  004726  006F FF8C  F043    	movff	plusw1,btemp+9
  3188  00472C  5044               	movf	btemp+10,w,c
  3189  00472E  2442               	addwf	btemp+8,w,c
  3190  004730  6ED9               	movwf	fsr2l,c
  3191  004732  5045               	movf	btemp+11,w,c
  3192  004734  2043               	addwfc	btemp+9,w,c
  3193  004736  6EDA               	movwf	fsr2h,c
  3194  004738  50DF               	movf	indf2,w,c
  3195  00473A  6E45               	movwf	btemp+11,c
  3196                           
  3197                           ;stkvar	_sum @ sp[(-4)+2]
  3198  00473C  0EFE               	movlw	-2
  3199  00473E  50E3               	movf	plusw1,w,c
  3200  004740  2445               	addwf	btemp+11,w,c
  3201  004742  6E3A               	movwf	btemp,c
  3202  004744  0EFE               	movlw	-2
  3203  004746  0060  F0EB  FFE3   	movff	btemp,plusw1
  3204  00474C  6A3A               	clrf	btemp,c
  3205  00474E  0EFF               	movlw	-1
  3206  004750  50E3               	movf	plusw1,w,c
  3207  004752  223A               	addwfc	btemp,f,c
  3208  004754  0EFF               	movlw	-1
  3209  004756  0060  F0EB  FFE3   	movff	btemp,plusw1
  3210                           
  3211                           ;gemsecs.c: 17:  }
  3212                           ;stkvar	_i @ sp[(-4)+0]
  3213  00475C  0EFC               	movlw	-4
  3214  00475E  50E3               	movf	plusw1,w,c
  3215  004760  0F01               	addlw	1
  3216  004762  6E3A               	movwf	btemp,c
  3217  004764  0EFC               	movlw	-4
  3218  004766  0060  F0EB  FFE3   	movff	btemp,plusw1
  3219  00476C  6A3A               	clrf	btemp,c
  3220  00476E  0EFD               	movlw	-3
  3221  004770  50E3               	movf	plusw1,w,c
  3222  004772  203A               	addwfc	btemp,w,c
  3223  004774  6E3A               	movwf	btemp,c
  3224  004776  0EFD               	movlw	-3
  3225  004778  0060  F0EB  FFE3   	movff	btemp,plusw1
  3226  00477E                     l6676:
  3227                           
  3228                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3229  00477E  0EF8               	movlw	-8
  3230  004780  006F FF8C  F044    	movff	plusw1,btemp+10
  3231  004786  0EF9               	movlw	-7
  3232  004788  006F FF8C  F045    	movff	plusw1,btemp+11
  3233                           
  3234                           ;stkvar	_i @ sp[(-4)+0]
  3235  00478E  0EFC               	movlw	-4
  3236  004790  006F FF8C  F042    	movff	plusw1,btemp+8
  3237  004796  0EFD               	movlw	-3
  3238  004798  006F FF8C  F043    	movff	plusw1,btemp+9
  3239  00479E  5044               	movf	btemp+10,w,c
  3240  0047A0  5C42               	subwf	btemp+8,w,c
  3241  0047A2  5045               	movf	btemp+11,w,c
  3242  0047A4  5843               	subwfb	btemp+9,w,c
  3243  0047A6  A0D8               	btfss	status,0,c
  3244  0047A8  D7B1               	goto	l6672
  3245                           
  3246                           ;gemsecs.c: 18:  return sum;
  3247                           ;stkvar	_sum @ sp[(-4)+2]
  3248  0047AA  0EFE               	movlw	-2
  3249  0047AC  006F FF8C  F03A    	movff	plusw1,btemp
  3250  0047B2  0EFF               	movlw	-1
  3251  0047B4  006F FF8C  F03B    	movff	plusw1,btemp+1
  3252                           
  3253                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3254  0047BA  0EF8               	movlw	248
  3255  0047BC  26E1               	addwf	fsr1l,f,c
  3256  0047BE  0EFF               	movlw	255
  3257  0047C0  22E2               	addwfc	fsr1h,f,c
  3258  0047C2  0012               	return		;funcret
  3259  0047C4                     __end_of_block_checksum:
  3260                           	opt callstack 0
  3261                           
  3262 ;; *************** function _UART1_put_buffer *****************
  3263 ;; Defined at:
  3264 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  bufData         1  [STACK] unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1  [STACK] void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 3F/39
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_main
  3289 ;;		_t_protocol
  3290 ;;		_secs_send
  3291 ;; This function uses a reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text8
  3295  005468                     __ptext8:
  3296                           	opt callstack 0
  3297  005468                     _UART1_put_buffer:
  3298                           	opt callstack 25
  3299                           
  3300                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3301                           
  3302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3303                           ;incstack = 0
  3304  005468  0139               	movlb	57	; () banked
  3305  00546A  9793               	bcf	147,3,b	;volatile
  3306                           
  3307                           ; BSR set to: 57
  3308                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3309                           ;stkvar	_bufData @ sp[(0)+-1]
  3310  00546C  0E00               	movlw	low _uart1RxBuffer
  3311  00546E  2436               	addwf	_uart1RxHead,w,c	;volatile
  3312  005470  6ED9               	movwf	fsr2l,c
  3313  005472  6ADA               	clrf	fsr2h,c
  3314  005474  0E01               	movlw	high _uart1RxBuffer
  3315  005476  22DA               	addwfc	fsr2h,f,c
  3316  005478  0EFF               	movlw	-1
  3317  00547A  006F FF8F FFDF     	movff	plusw1,indf2
  3318                           
  3319                           ; BSR set to: 57
  3320  005480  2A36               	incf	_uart1RxHead,f,c	;volatile
  3321                           
  3322                           ; BSR set to: 57
  3323                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3324  005482  0E3F               	movlw	63
  3325  005484  6436               	cpfsgt	_uart1RxHead,c
  3326  005486  D001               	goto	l4992
  3327                           
  3328                           ; BSR set to: 57
  3329                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3330  005488  6A36               	clrf	_uart1RxHead,c	;volatile
  3331  00548A                     l4992:
  3332                           
  3333                           ; BSR set to: 57
  3334                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3335  00548A  2A34               	incf	_uart1RxCount,f,c	;volatile
  3336                           
  3337                           ; BSR set to: 57
  3338                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3339  00548C  8793               	bsf	147,3,b	;volatile
  3340                           
  3341                           ; BSR set to: 57
  3342                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3343  00548E  52E5               	movf	postdec1,f,c
  3344  005490  0012               	return		;funcret
  3345  005492                     __end_of_UART1_put_buffer:
  3346                           	opt callstack 0
  3347                           
  3348 ;; *************** function _UART1_is_tx_ready *****************
  3349 ;; Defined at:
  3350 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1  [STACK] unsigned char 
  3357 ;; Registers used:
  3358 ;;		btemp
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    3
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_secs_send
  3375 ;; This function uses a reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text9
  3379  005A26                     __ptext9:
  3380                           	opt callstack 0
  3381  005A26                     _UART1_is_tx_ready:
  3382                           	opt callstack 25
  3383                           
  3384                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3385                           
  3386                           ; BSR set to: 57
  3387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3388                           ;incstack = 0
  3389  005A26  0060  F0DC  F03A   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3390                           
  3391                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3392  005A2C  0012               	return		;funcret
  3393  005A2E                     __end_of_UART1_is_tx_ready:
  3394                           	opt callstack 0
  3395                           
  3396 ;; *************** function _UART1_Write *****************
  3397 ;; Defined at:
  3398 ;;		line 179 in file "mcc_generated_files/uart1.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  txData          1  [STACK] unsigned char 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1  [STACK] void 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 3F/39
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    3
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_main
  3423 ;;		_r_protocol
  3424 ;;		_t_protocol
  3425 ;;		_secs_send
  3426 ;; This function uses a reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text10
  3430  00528A                     __ptext10:
  3431                           	opt callstack 0
  3432  00528A                     _UART1_Write:
  3433                           	opt callstack 25
  3434                           
  3435                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  3436                           
  3437                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  3438                           
  3439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3440                           ;incstack = 0
  3441  00528A  5037               	movf	_uart1TxBufferRemaining,w,c	;volatile
  3442  00528C  B4D8               	btfsc	status,2,c
  3443  00528E  D7FD               	goto	_UART1_Write
  3444                           
  3445                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  3446  005290  0139               	movlb	57	; () banked
  3447  005292  B993               	btfsc	147,4,b	;volatile
  3448  005294  D005               	goto	l575
  3449                           
  3450                           ; BSR set to: 57
  3451                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  3452                           ;stkvar	_txData @ sp[(0)+-1]
  3453  005296  0EFF               	movlw	-1
  3454  005298  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  3455                           
  3456                           ;mcc_generated_files/uart1.c: 186:  } else {
  3457  00529E  D011               	goto	l4980
  3458  0052A0                     l575:
  3459                           
  3460                           ; BSR set to: 57
  3461                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  3462  0052A0  9993               	bcf	147,4,b	;volatile
  3463                           
  3464                           ; BSR set to: 57
  3465                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  3466                           ;stkvar	_txData @ sp[(0)+-1]
  3467  0052A2  0E40               	movlw	low _uart1TxBuffer
  3468  0052A4  2439               	addwf	_uart1TxHead,w,c	;volatile
  3469  0052A6  6ED9               	movwf	fsr2l,c
  3470  0052A8  6ADA               	clrf	fsr2h,c
  3471  0052AA  0E01               	movlw	high _uart1TxBuffer
  3472  0052AC  22DA               	addwfc	fsr2h,f,c
  3473  0052AE  0EFF               	movlw	-1
  3474  0052B0  006F FF8F FFDF     	movff	plusw1,indf2
  3475                           
  3476                           ; BSR set to: 57
  3477  0052B6  2A39               	incf	_uart1TxHead,f,c	;volatile
  3478                           
  3479                           ; BSR set to: 57
  3480                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  3481  0052B8  0E3F               	movlw	63
  3482  0052BA  6439               	cpfsgt	_uart1TxHead,c
  3483  0052BC  D001               	goto	l4978
  3484                           
  3485                           ; BSR set to: 57
  3486                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  3487  0052BE  6A39               	clrf	_uart1TxHead,c	;volatile
  3488  0052C0                     l4978:
  3489                           
  3490                           ; BSR set to: 57
  3491                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  3492  0052C0  0637               	decf	_uart1TxBufferRemaining,f,c	;volatile
  3493  0052C2                     l4980:
  3494                           
  3495                           ; BSR set to: 57
  3496                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  3497  0052C2  8993               	bsf	147,4,b	;volatile
  3498                           
  3499                           ; BSR set to: 57
  3500                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3501  0052C4  52E5               	movf	postdec1,f,c
  3502  0052C6  0012               	return		;funcret
  3503  0052C8                     __end_of_UART1_Write:
  3504                           	opt callstack 0
  3505                           
  3506 ;; *************** function _run_checksum *****************
  3507 ;; Defined at:
  3508 ;;		line 24 in file "gemsecs.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  byte_block      1  [STACK] unsigned char 
  3511 ;;  clear           1  [STACK] _Bool 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  2  [STACK] unsigned short 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  3518 ;; Tracked objects:
  3519 ;;		On entry : 6/39
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    3
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_r_protocol
  3534 ;; This function uses a reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text11
  3538  0054E6                     __ptext11:
  3539                           	opt callstack 0
  3540  0054E6                     _run_checksum:
  3541                           	opt callstack 26
  3542                           
  3543                           ;gemsecs.c: 24: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 25: {;
      +                          gemsecs.c: 26:  static uint16_t sum = 0;;gemsecs.c: 28:  if (clear)
  3544                           ;stkvar	_clear @ sp[(0)+-2]
  3545                           
  3546                           ; BSR set to: 57
  3547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3548                           ;incstack = 0
  3549  0054E6  0EFE               	movlw	-2
  3550  0054E8  50E3               	movf	plusw1,w,c
  3551  0054EA  B4D8               	btfsc	status,2,c
  3552  0054EC  D002               	goto	l5520
  3553                           
  3554                           ;gemsecs.c: 29:   sum = 0;
  3555  0054EE  6A2B               	clrf	run_checksum@sum,c
  3556  0054F0  6A2C               	clrf	run_checksum@sum+1,c
  3557  0054F2                     l5520:
  3558                           
  3559                           ;gemsecs.c: 31:  sum += byte_block;
  3560                           ;stkvar	_byte_block @ sp[(0)+-1]
  3561  0054F2  0EFF               	movlw	-1
  3562  0054F4  50E3               	movf	plusw1,w,c
  3563  0054F6  262B               	addwf	run_checksum@sum,f,c
  3564  0054F8  0E00               	movlw	0
  3565  0054FA  222C               	addwfc	run_checksum@sum+1,f,c
  3566                           
  3567                           ;gemsecs.c: 32:  return sum;
  3568  0054FC  0060  F0AC  F03A   	movff	run_checksum@sum,btemp
  3569  005502  0060  F0B0  F03B   	movff	run_checksum@sum+1,btemp+1
  3570                           
  3571                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  3572  005508  52E5               	movf	postdec1,f,c
  3573  00550A  52E5               	movf	postdec1,f,c
  3574  00550C  0012               	return		;funcret
  3575  00550E                     __end_of_run_checksum:
  3576                           	opt callstack 0
  3577                           
  3578 ;; *************** function _WaitMs *****************
  3579 ;; Defined at:
  3580 ;;		line 31 in file "timers.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  numMilliseco    2  [STACK] unsigned short 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1  [STACK] void 
  3587 ;; Registers used:
  3588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    4
  3601 ;; This function calls:
  3602 ;;		_StartTimer
  3603 ;;		_TimerDone
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;;		_r_protocol
  3607 ;;		_t_protocol
  3608 ;; This function uses a reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text12
  3612  005492                     __ptext12:
  3613                           	opt callstack 0
  3614  005492                     _WaitMs:
  3615                           	opt callstack 25
  3616                           
  3617                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  3618                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  3619                           
  3620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3621                           ;incstack = 0
  3622  005492  0EFE               	movlw	-2
  3623  005494  006F FF8F FFE6     	movff	plusw1,postinc1
  3624  00549A  006F FF8F FFE6     	movff	plusw1,postinc1
  3625  0054A0  0E00               	movlw	0
  3626  0054A2  6EE6               	movwf	postinc1,c
  3627  0054A4  ECA2  F029         	call	_StartTimer	;wreg free
  3628  0054A8                     l5484:
  3629                           
  3630                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  3631  0054A8  0E00               	movlw	0
  3632  0054AA  6EE6               	movwf	postinc1,c
  3633  0054AC  ECEF  F02B         	call	_TimerDone	;wreg free
  3634  0054B0  503A               	movf	btemp,w,c
  3635  0054B2  B4D8               	btfsc	status,2,c
  3636  0054B4  D7F9               	goto	l5484
  3637                           
  3638                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  3639  0054B6  52E5               	movf	postdec1,f,c
  3640  0054B8  52E5               	movf	postdec1,f,c
  3641  0054BA  0012               	return		;funcret
  3642  0054BC                     __end_of_WaitMs:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _TimerDone *****************
  3646 ;; Defined at:
  3647 ;;		line 20 in file "timers.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  timer           1  [STACK] unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1  [STACK] _Bool 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3665 ;;Total ram usage:        0 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    3
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_r_protocol
  3672 ;;		_t_protocol
  3673 ;;		_WaitMs
  3674 ;; This function uses a reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text13
  3678  0057DE                     __ptext13:
  3679                           	opt callstack 0
  3680  0057DE                     _TimerDone:
  3681                           	opt callstack 25
  3682                           
  3683                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  3684                           ;stkvar	_timer @ sp[(0)+-1]
  3685                           
  3686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3687                           ;incstack = 0
  3688  0057DE  0EFF               	movlw	-1
  3689  0057E0  50E3               	movf	plusw1,w,c
  3690  0057E2  0D02               	mullw	2
  3691  0057E4  50F3               	movf	prodl,w,c
  3692  0057E6  0F79               	addlw	low _tickCount
  3693  0057E8  6ED9               	movwf	fsr2l,c
  3694  0057EA  6ADA               	clrf	fsr2h,c
  3695  0057EC  50DE               	movf	postinc2,w,c
  3696  0057EE  10DE               	iorwf	postinc2,w,c
  3697  0057F0  A4D8               	btfss	status,2,c
  3698  0057F2  D002               	goto	l5078
  3699                           
  3700                           ;timers.c: 23:   return 1;
  3701  0057F4  0E01               	movlw	1
  3702  0057F6  D001               	goto	L11
  3703  0057F8                     l5078:
  3704                           
  3705                           ;timers.c: 25:  return 0;
  3706  0057F8  0E00               	movlw	0
  3707  0057FA                     L11:
  3708  0057FA  6E3A               	movwf	btemp,c
  3709                           
  3710                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  3711  0057FC  52E5               	movf	postdec1,f,c
  3712  0057FE  0012               	return		;funcret
  3713  005800                     __end_of_TimerDone:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _StartTimer *****************
  3717 ;; Defined at:
  3718 ;;		line 12 in file "timers.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  timer           1  [STACK] unsigned char 
  3721 ;;  count           2  [STACK] unsigned short 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1  [STACK] void 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/39
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    3
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_r_protocol
  3744 ;;		_t_protocol
  3745 ;;		_WaitMs
  3746 ;; This function uses a reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text14
  3750  005344                     __ptext14:
  3751                           	opt callstack 0
  3752  005344                     _StartTimer:
  3753                           	opt callstack 25
  3754                           
  3755                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  3756                           ;stkvar	_count @ sp[(0)+-3]
  3757                           
  3758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3759                           ;incstack = 0
  3760  005344  0EFD               	movlw	-3
  3761  005346  006F FF8C  F044    	movff	plusw1,btemp+10
  3762  00534C  0EFE               	movlw	-2
  3763  00534E  006F FF8C  F045    	movff	plusw1,btemp+11
  3764  005354  90D8               	bcf	status,0,c
  3765  005356  3444               	rlcf	btemp+10,w,c
  3766  005358  6E42               	movwf	btemp+8,c
  3767  00535A  3445               	rlcf	btemp+11,w,c
  3768  00535C  6E43               	movwf	btemp+9,c
  3769                           
  3770                           ;stkvar	_timer @ sp[(0)+-1]
  3771  00535E  0EFF               	movlw	-1
  3772  005360  50E3               	movf	plusw1,w,c
  3773  005362  0D02               	mullw	2
  3774  005364  50F3               	movf	prodl,w,c
  3775  005366  0F79               	addlw	low _tickCount
  3776  005368  6ED9               	movwf	fsr2l,c
  3777  00536A  6ADA               	clrf	fsr2h,c
  3778  00536C  0060  F10B  FFDE   	movff	btemp+8,postinc2
  3779  005372  0060  F10F  FFDD   	movff	btemp+9,postdec2
  3780                           
  3781                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  3782  005378  52E5               	movf	postdec1,f,c
  3783  00537A  52E5               	movf	postdec1,f,c
  3784  00537C  52E5               	movf	postdec1,f,c
  3785  00537E  0012               	return		;funcret
  3786  005380                     __end_of_StartTimer:
  3787                           	opt callstack 0
  3788                           
  3789 ;; *************** function _UART1_is_rx_ready *****************
  3790 ;; Defined at:
  3791 ;;		line 146 in file "mcc_generated_files/uart1.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1  [STACK] unsigned char 
  3798 ;; Registers used:
  3799 ;;		btemp
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3809 ;;Total ram usage:        0 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    3
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_r_protocol
  3816 ;;		_t_protocol
  3817 ;; This function uses a reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text15
  3821  005A2E                     __ptext15:
  3822                           	opt callstack 0
  3823  005A2E                     _UART1_is_rx_ready:
  3824                           	opt callstack 26
  3825                           
  3826                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  3827                           
  3828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3829                           ;incstack = 0
  3830  005A2E  0060  F0D0  F03A   	movff	_uart1RxCount,btemp	;volatile
  3831                           
  3832                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3833  005A34  0012               	return		;funcret
  3834  005A36                     __end_of_UART1_is_rx_ready:
  3835                           	opt callstack 0
  3836                           
  3837 ;; *************** function _UART1_Read *****************
  3838 ;; Defined at:
  3839 ;;		line 161 in file "mcc_generated_files/uart1.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  readValue       1  [STACK] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1  [STACK] unsigned char 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 3F/39
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3857 ;;Total ram usage:        0 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    3
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_r_protocol
  3864 ;;		_t_protocol
  3865 ;; This function uses a reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text16
  3869  0052C8                     __ptext16:
  3870                           	opt callstack 0
  3871  0052C8                     _UART1_Read:
  3872                           	opt callstack 0
  3873                           
  3874                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3875  0052C8  52E6               	movf	postinc1,f,c
  3876  0052CA                     
  3877                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  3878                           
  3879                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  3880  0052CA  5034               	movf	_uart1RxCount,w,c	;volatile
  3881  0052CC  B4D8               	btfsc	status,2,c
  3882  0052CE  D7FD               	goto	l5410
  3883                           
  3884                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  3885  0052D0  0E00               	movlw	low _uart1RxBuffer
  3886  0052D2  2435               	addwf	_uart1RxTail,w,c	;volatile
  3887  0052D4  6ED9               	movwf	fsr2l,c
  3888  0052D6  6ADA               	clrf	fsr2h,c
  3889  0052D8  0E01               	movlw	high _uart1RxBuffer
  3890  0052DA  22DA               	addwfc	fsr2h,f,c
  3891  0052DC  50DF               	movf	indf2,w,c
  3892  0052DE  6E45               	movwf	btemp+11,c
  3893                           
  3894                           ;stkvar	_readValue @ sp[(-1)+0]
  3895  0052E0  0EFF               	movlw	-1
  3896  0052E2  0060  F117  FFE3   	movff	btemp+11,plusw1
  3897  0052E8  2A35               	incf	_uart1RxTail,f,c	;volatile
  3898                           
  3899                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  3900  0052EA  0E3F               	movlw	63
  3901  0052EC  6435               	cpfsgt	_uart1RxTail,c
  3902  0052EE  D001               	goto	l568
  3903                           
  3904                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  3905  0052F0  6A35               	clrf	_uart1RxTail,c	;volatile
  3906  0052F2                     l568:
  3907                           
  3908                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  3909  0052F2  0139               	movlb	57	; () banked
  3910  0052F4  9793               	bcf	147,3,b	;volatile
  3911                           
  3912                           ; BSR set to: 57
  3913                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  3914  0052F6  0634               	decf	_uart1RxCount,f,c	;volatile
  3915                           
  3916                           ; BSR set to: 57
  3917                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  3918  0052F8  8793               	bsf	147,3,b	;volatile
  3919                           
  3920                           ; BSR set to: 57
  3921                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  3922                           ;stkvar	_readValue @ sp[(-1)+0]
  3923  0052FA  0EFF               	movlw	-1
  3924  0052FC  006F FF8C  F03A    	movff	plusw1,btemp
  3925                           
  3926                           ; BSR set to: 57
  3927                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3928  005302  52E5               	movf	postdec1,f,c
  3929  005304  0012               	return		;funcret
  3930  005306                     __end_of_UART1_Read:
  3931                           	opt callstack 0
  3932                           
  3933 ;; *************** function _init_display *****************
  3934 ;; Defined at:
  3935 ;;		line 35 in file "eadog.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1  [STACK] void 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 3F/3D
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3953 ;;Total ram usage:        0 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    5
  3956 ;; This function calls:
  3957 ;;		_ringBufS_init
  3958 ;;		_send_lcd_cmd
  3959 ;;		_send_lcd_cmd_long
  3960 ;;		_wdtdelay
  3961 ;; This function is called by:
  3962 ;;		_main
  3963 ;; This function uses a reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text17
  3967  004608                     __ptext17:
  3968                           	opt callstack 0
  3969  004608                     _init_display:
  3970                           	opt callstack 25
  3971                           
  3972                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  3973                           
  3974                           ; BSR set to: 57
  3975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3976                           ;incstack = 0
  3977  004608  0E80               	movlw	low _ring_buf1
  3978  00460A  0100               	movlb	0	; () banked
  3979  00460C  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3980  00460E  0E02               	movlw	high _ring_buf1
  3981  004610  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3982                           
  3983                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  3984  004612  0E00               	movlw	low _ring_buf2
  3985  004614  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3986  004616  0E03               	movlw	high _ring_buf2
  3987  004618  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  3991  00461A  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  3992  004620  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  3993  004626  ECAF  F02A         	call	_ringBufS_init	;wreg free
  3994                           
  3995                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  3996  00462A  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  3997  004630  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  3998  004636  ECAF  F02A         	call	_ringBufS_init	;wreg free
  3999                           
  4000                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4001  00463A  80BE               	bsf	16318,0,c	;volatile
  4002  00463C  84BC               	bsf	16316,2,c	;volatile
  4003                           
  4004                           ;eadog.c: 44:  wdtdelay(350000);
  4005  00463E  0E30               	movlw	48
  4006  004640  6EE6               	movwf	postinc1,c
  4007  004642  0E57               	movlw	87
  4008  004644  6EE6               	movwf	postinc1,c
  4009  004646  0E05               	movlw	5
  4010  004648  6EE6               	movwf	postinc1,c
  4011  00464A  0E00               	movlw	0
  4012  00464C  6EE6               	movwf	postinc1,c
  4013  00464E  EC3E  F028         	call	_wdtdelay	;wreg free
  4014                           
  4015                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4016  004652  0E39               	movlw	57
  4017  004654  6EE6               	movwf	postinc1,c
  4018  004656  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4019                           
  4020                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4021  00465A  0E1D               	movlw	29
  4022  00465C  6EE6               	movwf	postinc1,c
  4023  00465E  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4024                           
  4025                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4026  004662  0E50               	movlw	80
  4027  004664  6EE6               	movwf	postinc1,c
  4028  004666  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4029                           
  4030                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4031  00466A  0E6C               	movlw	108
  4032  00466C  6EE6               	movwf	postinc1,c
  4033  00466E  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4034                           
  4035                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4036  004672  0E76               	movlw	118
  4037  004674  6EE6               	movwf	postinc1,c
  4038  004676  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4039                           
  4040                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4041  00467A  0E38               	movlw	56
  4042  00467C  6EE6               	movwf	postinc1,c
  4043  00467E  EC87  F02A         	call	_send_lcd_cmd_long	;wreg free
  4044                           
  4045                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4046  004682  0E0F               	movlw	15
  4047  004684  6EE6               	movwf	postinc1,c
  4048  004686  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4049                           
  4050                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4051  00468A  0E01               	movlw	1
  4052  00468C  6EE6               	movwf	postinc1,c
  4053  00468E  EC87  F02A         	call	_send_lcd_cmd_long	;wreg free
  4054                           
  4055                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4056  004692  0E02               	movlw	2
  4057  004694  6EE6               	movwf	postinc1,c
  4058  004696  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4059                           
  4060                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4061  00469A  0E06               	movlw	6
  4062  00469C  6EE6               	movwf	postinc1,c
  4063  00469E  EC9B  F02A         	call	_send_lcd_cmd	;wreg free
  4064                           
  4065                           ;eadog.c: 55:  wdtdelay(30);
  4066  0046A2  0E1E               	movlw	30
  4067  0046A4  6EE6               	movwf	postinc1,c
  4068  0046A6  0E00               	movlw	0
  4069  0046A8  6EE6               	movwf	postinc1,c
  4070  0046AA  0E00               	movlw	0
  4071  0046AC  6EE6               	movwf	postinc1,c
  4072  0046AE  0E00               	movlw	0
  4073  0046B0  6EE6               	movwf	postinc1,c
  4074  0046B2  EC3E  F028         	call	_wdtdelay	;wreg free
  4075                           
  4076                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4077  0046B6  0E02               	movlw	2
  4078  0046B8  013D               	movlb	61	; () banked
  4079  0046BA  6F16               	movwf	22,b	;volatile
  4080                           
  4081                           ; BSR set to: 61
  4082                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4083  0046BC  0E40               	movlw	64
  4084  0046BE  6F15               	movwf	21,b	;volatile
  4085                           
  4086                           ; BSR set to: 61
  4087                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  4088  0046C0  0E83               	movlw	131
  4089  0046C2  6F14               	movwf	20,b	;volatile
  4090                           
  4091                           ; BSR set to: 61
  4092                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  4093  0046C4  931A               	bcf	26,1,b	;volatile
  4094                           
  4095                           ; BSR set to: 61
  4096                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  4097  0046C6  0E3F               	movlw	-193
  4098  0046C8  013B               	movlb	59	; () banked
  4099  0046CA  17FD               	andwf	253,f,b	;volatile
  4100                           
  4101                           ; BSR set to: 59
  4102                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  4103  0046CC  9BFD               	bcf	253,5,b	;volatile
  4104                           
  4105                           ; BSR set to: 59
  4106                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  4107  0046CE  51FD               	movf	253,w,b	;volatile
  4108  0046D0  0BF9               	andlw	-7
  4109  0046D2  0902               	iorlw	2
  4110  0046D4  6FFD               	movwf	253,b	;volatile
  4111                           
  4112                           ; BSR set to: 59
  4113                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  4114  0046D6  0EE7               	movlw	-25
  4115  0046D8  17FD               	andwf	253,f,b	;volatile
  4116                           
  4117                           ; BSR set to: 59
  4118                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  4119  0046DA  81FD               	bsf	253,0,b	;volatile
  4120                           
  4121                           ; BSR set to: 59
  4122                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  4123  0046DC  0E80               	movlw	low _ring_buf1
  4124  0046DE  6FF9               	movwf	249,b	;volatile
  4125  0046E0  0E02               	movlw	high _ring_buf1
  4126  0046E2  6FFA               	movwf	250,b	;volatile
  4127  0046E4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4128  0046E6  6FFB               	movwf	251,b	;volatile
  4129                           
  4130                           ; BSR set to: 59
  4131                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  4132  0046E8  9BFC               	bcf	252,5,b	;volatile
  4133                           
  4134                           ; BSR set to: 59
  4135                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  4136  0046EA  013D               	movlb	61	; () banked
  4137  0046EC  831A               	bsf	26,1,b	;volatile
  4138                           
  4139                           ; BSR set to: 61
  4140                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  4141  0046EE  90BE               	bcf	16318,0,c	;volatile
  4142                           
  4143                           ; BSR set to: 61
  4144                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4145  0046F0  0012               	return		;funcret
  4146  0046F2                     __end_of_init_display:
  4147                           	opt callstack 0
  4148                           
  4149 ;; *************** function _send_lcd_cmd_long *****************
  4150 ;; Defined at:
  4151 ;;		line 97 in file "eadog.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  cmd             1  [STACK] unsigned char 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1  [STACK] void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4169 ;;Total ram usage:        0 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    4
  4172 ;; This function calls:
  4173 ;;		_SPI1_Exchange8bit
  4174 ;;		_wdtdelay
  4175 ;; This function is called by:
  4176 ;;		_init_display
  4177 ;; This function uses a reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text18
  4181  00550E                     __ptext18:
  4182                           	opt callstack 0
  4183  00550E                     _send_lcd_cmd_long:
  4184                           	opt callstack 25
  4185                           
  4186                           ; BSR set to: 61
  4187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4188                           ;incstack = 0
  4189                           ;eadog.c: 97: void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do { LATC
      +                          bits.LATC1 = 0; } while(0);
  4190  00550E  92BC               	bcf	16316,1,c	;volatile
  4191                           
  4192                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  4193  005510  94BC               	bcf	16316,2,c	;volatile
  4194                           
  4195                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  4196                           ;stkvar	_cmd @ sp[(0)+-1]
  4197  005512  0EFF               	movlw	-1
  4198  005514  50E3               	movf	plusw1,w,c
  4199  005516  6EE6               	movwf	postinc1,c
  4200  005518  EC75  F02C         	call	_SPI1_Exchange8bit	;wreg free
  4201                           
  4202                           ; BSR set to: 57
  4203                           ;eadog.c: 102:  wdtdelay(800);
  4204  00551C  0E20               	movlw	32
  4205  00551E  6EE6               	movwf	postinc1,c
  4206  005520  0E03               	movlw	3
  4207  005522  6EE6               	movwf	postinc1,c
  4208  005524  0E00               	movlw	0
  4209  005526  6EE6               	movwf	postinc1,c
  4210  005528  0E00               	movlw	0
  4211  00552A  6EE6               	movwf	postinc1,c
  4212  00552C  EC3E  F028         	call	_wdtdelay	;wreg free
  4213  005530  82BC               	bsf	16316,1,c	;volatile
  4214                           
  4215                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4216  005532  52E5               	movf	postdec1,f,c
  4217  005534  0012               	return		;funcret
  4218  005536                     __end_of_send_lcd_cmd_long:
  4219                           	opt callstack 0
  4220                           
  4221 ;; *************** function _send_lcd_cmd *****************
  4222 ;; Defined at:
  4223 ;;		line 85 in file "eadog.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  cmd             1  [STACK] unsigned char 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1  [STACK] void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    4
  4244 ;; This function calls:
  4245 ;;		_SPI1_Exchange8bit
  4246 ;;		_wdtdelay
  4247 ;; This function is called by:
  4248 ;;		_init_display
  4249 ;; This function uses a reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text19
  4253  005536                     __ptext19:
  4254                           	opt callstack 0
  4255  005536                     _send_lcd_cmd:
  4256                           	opt callstack 25
  4257                           
  4258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4259                           ;incstack = 0
  4260                           ;eadog.c: 85: void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LATCbits.
      +                          LATC1 = 0; } while(0);
  4261  005536  92BC               	bcf	16316,1,c	;volatile
  4262                           
  4263                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  4264  005538  94BC               	bcf	16316,2,c	;volatile
  4265                           
  4266                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  4267                           ;stkvar	_cmd @ sp[(0)+-1]
  4268  00553A  0EFF               	movlw	-1
  4269  00553C  50E3               	movf	plusw1,w,c
  4270  00553E  6EE6               	movwf	postinc1,c
  4271  005540  EC75  F02C         	call	_SPI1_Exchange8bit	;wreg free
  4272                           
  4273                           ; BSR set to: 57
  4274                           ;eadog.c: 90:  wdtdelay(30);
  4275  005544  0E1E               	movlw	30
  4276  005546  6EE6               	movwf	postinc1,c
  4277  005548  0E00               	movlw	0
  4278  00554A  6EE6               	movwf	postinc1,c
  4279  00554C  0E00               	movlw	0
  4280  00554E  6EE6               	movwf	postinc1,c
  4281  005550  0E00               	movlw	0
  4282  005552  6EE6               	movwf	postinc1,c
  4283  005554  EC3E  F028         	call	_wdtdelay	;wreg free
  4284  005558  82BC               	bsf	16316,1,c	;volatile
  4285                           
  4286                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4287  00555A  52E5               	movf	postdec1,f,c
  4288  00555C  0012               	return		;funcret
  4289  00555E                     __end_of_send_lcd_cmd:
  4290                           	opt callstack 0
  4291                           
  4292 ;; *************** function _wdtdelay *****************
  4293 ;; Defined at:
  4294 ;;		line 21 in file "eadog.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  delay           4  [STACK] unsigned long 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1  [STACK] void 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;Total ram usage:        0 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    3
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_init_display
  4319 ;;		_send_lcd_cmd
  4320 ;;		_send_lcd_cmd_long
  4321 ;;		_wait_lcd_done
  4322 ;; This function uses a reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text20
  4326  00507C                     __ptext20:
  4327                           	opt callstack 0
  4328  00507C                     _wdtdelay:
  4329                           	opt callstack 26
  4330                           
  4331                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  4332                           
  4333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4334                           ;incstack = 0
  4335  00507C  6A01               	clrf	wdtdelay@dcount,c
  4336  00507E  6A02               	clrf	wdtdelay@dcount+1,c
  4337  005080  6A03               	clrf	wdtdelay@dcount+2,c
  4338  005082  6A04               	clrf	wdtdelay@dcount+3,c
  4339  005084  D008               	goto	l5026
  4340  005086                     l1206:
  4341                           
  4342                           ;eadog.c: 26:   __nop();
  4343  005086  F000               	nop	
  4344  005088  0004               	clrwdt		;# 
  4345                           
  4346                           ;eadog.c: 28:  };
  4347  00508A  0E01               	movlw	1
  4348  00508C  2601               	addwf	wdtdelay@dcount,f,c
  4349  00508E  0E00               	movlw	0
  4350  005090  2202               	addwfc	wdtdelay@dcount+1,f,c
  4351  005092  2203               	addwfc	wdtdelay@dcount+2,f,c
  4352  005094  2204               	addwfc	wdtdelay@dcount+3,f,c
  4353  005096                     l5026:
  4354                           
  4355                           ;stkvar	_delay @ sp[(0)+-4]
  4356  005096  0EFC               	movlw	-4
  4357  005098  006F FF8C  F03A    	movff	plusw1,btemp
  4358  00509E  5001               	movf	wdtdelay@dcount,w,c
  4359  0050A0  5C3A               	subwf	btemp,w,c
  4360  0050A2  0EFD               	movlw	-3
  4361  0050A4  006F FF8C  F03A    	movff	plusw1,btemp
  4362  0050AA  5002               	movf	wdtdelay@dcount+1,w,c
  4363  0050AC  583A               	subwfb	btemp,w,c
  4364  0050AE  0EFE               	movlw	-2
  4365  0050B0  006F FF8C  F03A    	movff	plusw1,btemp
  4366  0050B6  5003               	movf	wdtdelay@dcount+2,w,c
  4367  0050B8  583A               	subwfb	btemp,w,c
  4368  0050BA  0EFF               	movlw	-1
  4369  0050BC  006F FF8C  F03A    	movff	plusw1,btemp
  4370  0050C2  5004               	movf	wdtdelay@dcount+3,w,c
  4371  0050C4  583A               	subwfb	btemp,w,c
  4372  0050C6  B0D8               	btfsc	status,0,c
  4373  0050C8  D7DE               	goto	l1206
  4374                           
  4375                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  4376  0050CA  52E5               	movf	postdec1,f,c
  4377  0050CC  52E5               	movf	postdec1,f,c
  4378  0050CE  52E5               	movf	postdec1,f,c
  4379  0050D0  52E5               	movf	postdec1,f,c
  4380  0050D2  0012               	return		;funcret
  4381  0050D4                     __end_of_wdtdelay:
  4382                           	opt callstack 0
  4383                           
  4384 ;; *************** function _SPI1_Exchange8bit *****************
  4385 ;; Defined at:
  4386 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  data            1  [STACK] unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1  [STACK] unsigned char 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 3F/39
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    3
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_send_lcd_cmd
  4411 ;;		_send_lcd_cmd_long
  4412 ;; This function uses a reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text21
  4416  0058EA                     __ptext21:
  4417                           	opt callstack 0
  4418  0058EA                     _SPI1_Exchange8bit:
  4419                           	opt callstack 25
  4420                           
  4421                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4422                           
  4423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4424                           ;incstack = 0
  4425  0058EA  0E01               	movlw	1
  4426  0058EC  013D               	movlb	61	; () banked
  4427  0058EE  6F12               	movwf	18,b	;volatile
  4428                           
  4429                           ; BSR set to: 61
  4430                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4431                           ;stkvar	_data @ sp[(0)+-1]
  4432  0058F0  0EFF               	movlw	-1
  4433  0058F2  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4434  0058F8                     l845:
  4435                           
  4436                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4437  0058F8  0139               	movlb	57	; () banked
  4438  0058FA  A9A2               	btfss	162,4,b	;volatile
  4439  0058FC  D7FD               	goto	l845
  4440                           
  4441                           ; BSR set to: 57
  4442                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4443  0058FE  006F F440  F03A    	movff	15632,btemp	;volatile
  4444                           
  4445                           ; BSR set to: 57
  4446                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4447  005904  52E5               	movf	postdec1,f,c
  4448  005906  0012               	return		;funcret
  4449  005908                     __end_of_SPI1_Exchange8bit:
  4450                           	opt callstack 0
  4451                           
  4452 ;; *************** function _ringBufS_init *****************
  4453 ;; Defined at:
  4454 ;;		line 22 in file "ringbufs.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  _this           2  [STACK] PTR volatile struct ring
  4457 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1  [STACK] void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    4
  4476 ;; This function calls:
  4477 ;;		_memset
  4478 ;; This function is called by:
  4479 ;;		_init_display
  4480 ;; This function uses a reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text22
  4484  00555E                     __ptext22:
  4485                           	opt callstack 0
  4486  00555E                     _ringBufS_init:
  4487                           	opt callstack 25
  4488                           
  4489                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4490                           
  4491                           ; BSR set to: 57
  4492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4493                           ;incstack = 0
  4494  00555E  0E43               	movlw	67
  4495  005560  6EE6               	movwf	postinc1,c
  4496  005562  0E00               	movlw	0
  4497  005564  6EE6               	movwf	postinc1,c
  4498  005566  0E00               	movlw	0
  4499  005568  6EE6               	movwf	postinc1,c
  4500  00556A  0E00               	movlw	0
  4501  00556C  6EE6               	movwf	postinc1,c
  4502                           
  4503                           ;stkvar	__this @ sp[(-4)+-2]
  4504  00556E  0EFA               	movlw	-6
  4505  005570  006F FF8F FFE6     	movff	plusw1,postinc1
  4506  005576  006F FF8F FFE6     	movff	plusw1,postinc1
  4507  00557C  EC45  F017         	call	_memset	;wreg free
  4508                           
  4509                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4510  005580  52E5               	movf	postdec1,f,c
  4511  005582  52E5               	movf	postdec1,f,c
  4512  005584  0012               	return		;funcret
  4513  005586                     __end_of_ringBufS_init:
  4514                           	opt callstack 0
  4515                           
  4516 ;; *************** function _eaDogM_WriteString *****************
  4517 ;; Defined at:
  4518 ;;		line 167 in file "eadog.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  strPtr          1  [STACK] PTR unsigned char 
  4521 ;;		 -> V(80), 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1  [STACK] void 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 3F/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4537 ;;Total ram usage:        0 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:   12
  4540 ;; This function calls:
  4541 ;;		_printf
  4542 ;;		_ringBufS_flush
  4543 ;;		_start_lcd
  4544 ;;		_strlen
  4545 ;;		_wait_lcd_set
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text23
  4552  00488C                     __ptext23:
  4553                           	opt callstack 0
  4554  00488C                     _eaDogM_WriteString:
  4555                           	opt callstack 18
  4556                           
  4557                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  4558                           
  4559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4560                           ;incstack = 0
  4561  00488C  EC1F  F02D         	call	_wait_lcd_set	;wreg free
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  4565  004890  0E00               	movlw	0
  4566  004892  6EE6               	movwf	postinc1,c
  4567  004894  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4568  00489A  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4569  0048A0  ECD1  F025         	call	_ringBufS_flush	;wreg free
  4570  0048A4  94BC               	bcf	16316,2,c	;volatile
  4571                           
  4572                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4573                           ;stkvar	_strPtr @ sp[(0)+-1]
  4574  0048A6  0EFF               	movlw	-1
  4575  0048A8  006F FF8C  F045    	movff	plusw1,btemp+11
  4576  0048AE  0060  F117  FFE6   	movff	btemp+11,postinc1
  4577  0048B4  0E00               	movlw	0
  4578  0048B6  6EE6               	movwf	postinc1,c
  4579  0048B8  EC5C  F026         	call	_strlen	;wreg free
  4580  0048BC  503B               	movf	btemp+1,w,c
  4581  0048BE  E104               	bnz	u4610
  4582  0048C0  0E41               	movlw	65
  4583  0048C2  5C3A               	subwf	btemp,w,c
  4584  0048C4  A0D8               	btfss	status,0,c
  4585  0048C6  D008               	goto	l6870
  4586  0048C8                     u4610:
  4587                           
  4588                           ;stkvar	_strPtr @ sp[(0)+-1]
  4589  0048C8  0EFF               	movlw	-1
  4590  0048CA  50E3               	movf	plusw1,w,c
  4591  0048CC  6ED9               	movwf	fsr2l,c
  4592  0048CE  6ADA               	clrf	fsr2h,c
  4593  0048D0  0E40               	movlw	64
  4594  0048D2  26D9               	addwf	fsr2l,f,c
  4595  0048D4  0E00               	movlw	0
  4596  0048D6  6EDF               	movwf	indf2,c
  4597  0048D8                     l6870:
  4598                           
  4599                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  4600  0048D8  013B               	movlb	59	; () banked
  4601  0048DA  9FFC               	bcf	252,7,b	;volatile
  4602                           
  4603                           ; BSR set to: 59
  4604                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  4605                           ;stkvar	_strPtr @ sp[(0)+-1]
  4606  0048DC  0EFF               	movlw	-1
  4607  0048DE  006F FF8C  F045    	movff	plusw1,btemp+11
  4608  0048E4  0060  F117  FFE6   	movff	btemp+11,postinc1
  4609  0048EA  0E00               	movlw	0
  4610  0048EC  6EE6               	movwf	postinc1,c
  4611  0048EE  EC5C  F026         	call	_strlen	;wreg free
  4612  0048F2  0060  F0EB  FBF7   	movff	btemp,15351	;volatile
  4613  0048F8  0060  F0EF  FBF8   	movff	btemp+1,15352	;volatile
  4614                           
  4615                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  4616  0048FE  013B               	movlb	59	; () banked
  4617  004900  8FFC               	bsf	252,7,b	;volatile
  4618                           
  4619                           ; BSR set to: 59
  4620                           ;eadog.c: 177:  printf("%s", strPtr);
  4621                           ;stkvar	_strPtr @ sp[(0)+-1]
  4622  004902  0EFF               	movlw	-1
  4623  004904  006F FF8C  F045    	movff	plusw1,btemp+11
  4624  00490A  0060  F117  FFE6   	movff	btemp+11,postinc1
  4625  004910  0E00               	movlw	0
  4626  004912  6EE6               	movwf	postinc1,c
  4627  004914  0E65               	movlw	STR_6& (0+255)
  4628  004916  6EE6               	movwf	postinc1,c
  4629  004918  0E03               	movlw	3
  4630  00491A  6EE6               	movwf	postinc1,c
  4631  00491C  ECAF  F027         	call	_printf	;wreg free
  4632  004920  94BE               	bcf	16318,2,c	;volatile
  4633                           
  4634                           ;eadog.c: 179:  start_lcd();
  4635  004922  EC22  F02D         	call	_start_lcd	;wreg free
  4636                           
  4637                           ; BSR set to: 59
  4638                           ;eadog.c: 180:  ++V.ticks;
  4639  004926  0E01               	movlw	1
  4640  004928  0100               	movlb	0	; () banked
  4641  00492A  27C9               	addwf	(_V+68)& (0+255),f,b	;volatile
  4642  00492C  0E00               	movlw	0
  4643  00492E  23CA               	addwfc	(_V+69)& (0+255),f,b	;volatile
  4644  004930  23CB               	addwfc	(_V+70)& (0+255),f,b	;volatile
  4645  004932  23CC               	addwfc	(_V+71)& (0+255),f,b	;volatile
  4646                           
  4647                           ; BSR set to: 0
  4648                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  4649  004934  52E5               	movf	postdec1,f,c
  4650  004936  0012               	return		;funcret
  4651  004938                     __end_of_eaDogM_WriteString:
  4652                           	opt callstack 0
  4653                           
  4654 ;; *************** function _wait_lcd_set *****************
  4655 ;; Defined at:
  4656 ;;		line 114 in file "eadog.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1  [STACK] void 
  4663 ;; Registers used:
  4664 ;;		None
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 3F/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_eaDogM_WriteString
  4681 ;; This function uses a reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text24
  4685  005A3E                     __ptext24:
  4686                           	opt callstack 0
  4687  005A3E                     _wait_lcd_set:
  4688                           	opt callstack 26
  4689                           
  4690                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  4691                           
  4692                           ; BSR set to: 0
  4693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4694                           ;incstack = 0
  4695  005A3E  0100               	movlb	0	; () banked
  4696  005A40  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  4697                           
  4698                           ; BSR set to: 0
  4699                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4700  005A42  0012               	return		;funcret
  4701  005A44                     __end_of_wait_lcd_set:
  4702                           	opt callstack 0
  4703                           
  4704 ;; *************** function _start_lcd *****************
  4705 ;; Defined at:
  4706 ;;		line 109 in file "eadog.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1  [STACK] void 
  4713 ;; Registers used:
  4714 ;;		None
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/3B
  4717 ;;		On exit  : 3F/3B
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4724 ;;Total ram usage:        0 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    3
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_eaDogM_WriteString
  4731 ;; This function uses a reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text25
  4735  005A44                     __ptext25:
  4736                           	opt callstack 0
  4737  005A44                     _start_lcd:
  4738                           	opt callstack 26
  4739                           
  4740                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  4741                           
  4742                           ; BSR set to: 0
  4743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4744                           ;incstack = 0
  4745  005A44  013B               	movlb	59	; () banked
  4746  005A46  8DFC               	bsf	252,6,b	;volatile
  4747                           
  4748                           ; BSR set to: 59
  4749                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4750  005A48  0012               	return		;funcret
  4751  005A4A                     __end_of_start_lcd:
  4752                           	opt callstack 0
  4753                           
  4754 ;; *************** function _ringBufS_flush *****************
  4755 ;; Defined at:
  4756 ;;		line 76 in file "ringbufs.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  _this           2  [STACK] PTR struct ringBufS_t
  4759 ;;		 -> ring_buf1(67), 
  4760 ;;  clearBuffer     1  [STACK] const char 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1  [STACK] void 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4767 ;; Tracked objects:
  4768 ;;		On entry : 3F/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    4
  4779 ;; This function calls:
  4780 ;;		_memset
  4781 ;; This function is called by:
  4782 ;;		_eaDogM_WriteString
  4783 ;; This function uses a reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text26
  4787  004BA2                     __ptext26:
  4788                           	opt callstack 0
  4789  004BA2                     _ringBufS_flush:
  4790                           	opt callstack 25
  4791                           
  4792                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  4793                           ;stkvar	__this @ sp[(0)+-2]
  4794                           
  4795                           ; BSR set to: 59
  4796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4797                           ;incstack = 0
  4798  004BA2  0EFE               	movlw	-2
  4799  004BA4  006F FF8C  F044    	movff	plusw1,btemp+10
  4800  004BAA  0EFF               	movlw	-1
  4801  004BAC  006F FF8C  F045    	movff	plusw1,btemp+11
  4802  004BB2  0E42               	movlw	66
  4803  004BB4  2444               	addwf	btemp+10,w,c
  4804  004BB6  6ED9               	movwf	fsr2l,c
  4805  004BB8  0E00               	movlw	0
  4806  004BBA  2045               	addwfc	btemp+11,w,c
  4807  004BBC  6EDA               	movwf	fsr2h,c
  4808  004BBE  0E00               	movlw	0
  4809  004BC0  6EDF               	movwf	indf2,c
  4810                           
  4811                           ;ringbufs.c: 79:  _this->head = 0;
  4812                           ;stkvar	__this @ sp[(0)+-2]
  4813  004BC2  0EFE               	movlw	-2
  4814  004BC4  006F FF8C  F044    	movff	plusw1,btemp+10
  4815  004BCA  0EFF               	movlw	-1
  4816  004BCC  006F FF8C  F045    	movff	plusw1,btemp+11
  4817  004BD2  0E40               	movlw	64
  4818  004BD4  2444               	addwf	btemp+10,w,c
  4819  004BD6  6ED9               	movwf	fsr2l,c
  4820  004BD8  0E00               	movlw	0
  4821  004BDA  2045               	addwfc	btemp+11,w,c
  4822  004BDC  6EDA               	movwf	fsr2h,c
  4823  004BDE  0E00               	movlw	0
  4824  004BE0  6EDF               	movwf	indf2,c
  4825                           
  4826                           ;ringbufs.c: 80:  _this->tail = 0;
  4827                           ;stkvar	__this @ sp[(0)+-2]
  4828  004BE2  0EFE               	movlw	-2
  4829  004BE4  006F FF8C  F044    	movff	plusw1,btemp+10
  4830  004BEA  0EFF               	movlw	-1
  4831  004BEC  006F FF8C  F045    	movff	plusw1,btemp+11
  4832  004BF2  0E41               	movlw	65
  4833  004BF4  2444               	addwf	btemp+10,w,c
  4834  004BF6  6ED9               	movwf	fsr2l,c
  4835  004BF8  0E00               	movlw	0
  4836  004BFA  2045               	addwfc	btemp+11,w,c
  4837  004BFC  6EDA               	movwf	fsr2h,c
  4838  004BFE  0E00               	movlw	0
  4839  004C00  6EDF               	movwf	indf2,c
  4840                           
  4841                           ;ringbufs.c: 81:  if (clearBuffer) {
  4842                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  4843  004C02  0EFD               	movlw	-3
  4844  004C04  50E3               	movf	plusw1,w,c
  4845  004C06  B4D8               	btfsc	status,2,c
  4846  004C08  D011               	goto	l1327
  4847                           
  4848                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  4849  004C0A  0E40               	movlw	64
  4850  004C0C  6EE6               	movwf	postinc1,c
  4851  004C0E  0E00               	movlw	0
  4852  004C10  6EE6               	movwf	postinc1,c
  4853  004C12  0E00               	movlw	0
  4854  004C14  6EE6               	movwf	postinc1,c
  4855  004C16  0E00               	movlw	0
  4856  004C18  6EE6               	movwf	postinc1,c
  4857                           
  4858                           ;stkvar	__this @ sp[(-4)+-2]
  4859  004C1A  0EFA               	movlw	-6
  4860  004C1C  006F FF8F FFE6     	movff	plusw1,postinc1
  4861  004C22  006F FF8F FFE6     	movff	plusw1,postinc1
  4862  004C28  EC45  F017         	call	_memset	;wreg free
  4863  004C2C                     l1327:
  4864                           
  4865                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  4866  004C2C  52E5               	movf	postdec1,f,c
  4867  004C2E  52E5               	movf	postdec1,f,c
  4868  004C30  52E5               	movf	postdec1,f,c
  4869  004C32  0012               	return		;funcret
  4870  004C34                     __end_of_ringBufS_flush:
  4871                           	opt callstack 0
  4872                           
  4873 ;; *************** function _memset *****************
  4874 ;; Defined at:
  4875 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  dest            2  [STACK] PTR void 
  4878 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4879 ;;  c               2  [STACK] int 
  4880 ;;  n               2  [STACK] unsigned int 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  s               2  [STACK] PTR unsigned char 
  4883 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4884 ;;  k               2  [STACK] unsigned int 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  2  [STACK] PTR void 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    3
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_ringBufS_init
  4905 ;;		_ringBufS_flush
  4906 ;; This function uses a reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text27
  4910  002E8A                     __ptext27:
  4911                           	opt callstack 0
  4912  002E8A                     _memset:
  4913                           	opt callstack 0
  4914                           
  4915                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4916  002E8A  52E6               	movf	postinc1,f,c
  4917  002E8C  52E6               	movf	postinc1,f,c
  4918  002E8E  52E6               	movf	postinc1,f,c
  4919  002E90  52E6               	movf	postinc1,f,c
  4920                           
  4921                           ;stkvar	_dest @ sp[(-4)+-2]
  4922                           
  4923                           ;incstack = 0
  4924  002E92  0EFA               	movlw	-6
  4925  002E94  006F FF8C  F044    	movff	plusw1,btemp+10
  4926  002E9A  0EFB               	movlw	-5
  4927  002E9C  006F FF8C  F045    	movff	plusw1,btemp+11
  4928                           
  4929                           ;stkvar	_s @ sp[(-4)+0]
  4930  002EA2  0EFD               	movlw	-3
  4931  002EA4  0060  F117  FFE3   	movff	btemp+11,plusw1
  4932  002EAA  0EFC               	movlw	-4
  4933  002EAC  0060  F113  FFE3   	movff	btemp+10,plusw1
  4934                           
  4935                           ;stkvar	_n @ sp[(-4)+-6]
  4936  002EB2  0EF6               	movlw	-10
  4937  002EB4  006F FF8C  F03A    	movff	plusw1,btemp
  4938  002EBA  0EF7               	movlw	-9
  4939  002EBC  50E3               	movf	plusw1,w,c
  4940  002EBE  103A               	iorwf	btemp,w,c
  4941  002EC0  B4D8               	btfsc	status,2,c
  4942  002EC2  D154               	goto	u4540
  4943                           
  4944                           ;stkvar	_c @ sp[(-4)+-4]
  4945                           ;stkvar	_s @ sp[(-4)+0]
  4946  002EC4  0EFC               	movlw	-4
  4947  002EC6  006F FF8F FFD9     	movff	plusw1,fsr2l
  4948  002ECC  0EFD               	movlw	-3
  4949  002ECE  006F FF8F FFDA     	movff	plusw1,fsr2h
  4950  002ED4  0EF8               	movlw	-8
  4951  002ED6  006F FF8F FFDF     	movff	plusw1,indf2
  4952                           
  4953                           ;stkvar	_c @ sp[(-4)+-4]
  4954                           ;stkvar	_n @ sp[(-4)+-6]
  4955                           ;stkvar	_s @ sp[(-4)+0]
  4956  002EDC  0EFC               	movlw	-4
  4957  002EDE  006F FF8C  F044    	movff	plusw1,btemp+10
  4958  002EE4  0EFD               	movlw	-3
  4959  002EE6  006F FF8C  F045    	movff	plusw1,btemp+11
  4960  002EEC  0EF6               	movlw	-10
  4961  002EEE  50E3               	movf	plusw1,w,c
  4962  002EF0  2644               	addwf	btemp+10,f,c
  4963  002EF2  0EF7               	movlw	-9
  4964  002EF4  50E3               	movf	plusw1,w,c
  4965  002EF6  2245               	addwfc	btemp+11,f,c
  4966  002EF8  0EFF               	movlw	255
  4967  002EFA  2444               	addwf	btemp+10,w,c
  4968  002EFC  6ED9               	movwf	fsr2l,c
  4969  002EFE  0EFF               	movlw	255
  4970  002F00  2045               	addwfc	btemp+11,w,c
  4971  002F02  6EDA               	movwf	fsr2h,c
  4972  002F04  0EF8               	movlw	-8
  4973  002F06  006F FF8F FFDF     	movff	plusw1,indf2
  4974                           
  4975                           ;stkvar	_n @ sp[(-4)+-6]
  4976  002F0C  0EF7               	movlw	-9
  4977  002F0E  50E3               	movf	plusw1,w,c
  4978  002F10  E108               	bnz	l6696
  4979  002F12  0EF6               	movlw	-10
  4980  002F14  006F FF8C  F03A    	movff	plusw1,btemp
  4981  002F1A  0E03               	movlw	3
  4982  002F1C  5E3A               	subwf	btemp,f,c
  4983  002F1E  A0D8               	btfss	status,0,c
  4984  002F20  D125               	goto	u4540
  4985  002F22                     l6696:
  4986                           
  4987                           ;stkvar	_c @ sp[(-4)+-4]
  4988                           ;stkvar	_s @ sp[(-4)+0]
  4989  002F22  0EFC               	movlw	-4
  4990  002F24  006F FF8C  F044    	movff	plusw1,btemp+10
  4991  002F2A  0EFD               	movlw	-3
  4992  002F2C  006F FF8C  F045    	movff	plusw1,btemp+11
  4993  002F32  0E01               	movlw	1
  4994  002F34  2444               	addwf	btemp+10,w,c
  4995  002F36  6ED9               	movwf	fsr2l,c
  4996  002F38  0E00               	movlw	0
  4997  002F3A  2045               	addwfc	btemp+11,w,c
  4998  002F3C  6EDA               	movwf	fsr2h,c
  4999  002F3E  0EF8               	movlw	-8
  5000  002F40  006F FF8F FFDF     	movff	plusw1,indf2
  5001                           
  5002                           ;stkvar	_c @ sp[(-4)+-4]
  5003                           ;stkvar	_s @ sp[(-4)+0]
  5004  002F46  0EFC               	movlw	-4
  5005  002F48  006F FF8C  F044    	movff	plusw1,btemp+10
  5006  002F4E  0EFD               	movlw	-3
  5007  002F50  006F FF8C  F045    	movff	plusw1,btemp+11
  5008  002F56  0E02               	movlw	2
  5009  002F58  2444               	addwf	btemp+10,w,c
  5010  002F5A  6ED9               	movwf	fsr2l,c
  5011  002F5C  0E00               	movlw	0
  5012  002F5E  2045               	addwfc	btemp+11,w,c
  5013  002F60  6EDA               	movwf	fsr2h,c
  5014  002F62  0EF8               	movlw	-8
  5015  002F64  006F FF8F FFDF     	movff	plusw1,indf2
  5016                           
  5017                           ;stkvar	_c @ sp[(-4)+-4]
  5018                           ;stkvar	_n @ sp[(-4)+-6]
  5019                           ;stkvar	_s @ sp[(-4)+0]
  5020  002F6A  0EFC               	movlw	-4
  5021  002F6C  006F FF8C  F044    	movff	plusw1,btemp+10
  5022  002F72  0EFD               	movlw	-3
  5023  002F74  006F FF8C  F045    	movff	plusw1,btemp+11
  5024  002F7A  0EF6               	movlw	-10
  5025  002F7C  50E3               	movf	plusw1,w,c
  5026  002F7E  2644               	addwf	btemp+10,f,c
  5027  002F80  0EF7               	movlw	-9
  5028  002F82  50E3               	movf	plusw1,w,c
  5029  002F84  2245               	addwfc	btemp+11,f,c
  5030  002F86  0EFE               	movlw	254
  5031  002F88  2444               	addwf	btemp+10,w,c
  5032  002F8A  6ED9               	movwf	fsr2l,c
  5033  002F8C  0EFF               	movlw	255
  5034  002F8E  2045               	addwfc	btemp+11,w,c
  5035  002F90  6EDA               	movwf	fsr2h,c
  5036  002F92  0EF8               	movlw	-8
  5037  002F94  006F FF8F FFDF     	movff	plusw1,indf2
  5038                           
  5039                           ;stkvar	_c @ sp[(-4)+-4]
  5040                           ;stkvar	_n @ sp[(-4)+-6]
  5041                           ;stkvar	_s @ sp[(-4)+0]
  5042  002F9A  0EFC               	movlw	-4
  5043  002F9C  006F FF8C  F044    	movff	plusw1,btemp+10
  5044  002FA2  0EFD               	movlw	-3
  5045  002FA4  006F FF8C  F045    	movff	plusw1,btemp+11
  5046  002FAA  0EF6               	movlw	-10
  5047  002FAC  50E3               	movf	plusw1,w,c
  5048  002FAE  2644               	addwf	btemp+10,f,c
  5049  002FB0  0EF7               	movlw	-9
  5050  002FB2  50E3               	movf	plusw1,w,c
  5051  002FB4  2245               	addwfc	btemp+11,f,c
  5052  002FB6  0EFD               	movlw	253
  5053  002FB8  2444               	addwf	btemp+10,w,c
  5054  002FBA  6ED9               	movwf	fsr2l,c
  5055  002FBC  0EFF               	movlw	255
  5056  002FBE  2045               	addwfc	btemp+11,w,c
  5057  002FC0  6EDA               	movwf	fsr2h,c
  5058  002FC2  0EF8               	movlw	-8
  5059  002FC4  006F FF8F FFDF     	movff	plusw1,indf2
  5060                           
  5061                           ;stkvar	_n @ sp[(-4)+-6]
  5062  002FCA  0EF7               	movlw	-9
  5063  002FCC  50E3               	movf	plusw1,w,c
  5064  002FCE  E108               	bnz	l6702
  5065  002FD0  0EF6               	movlw	-10
  5066  002FD2  006F FF8C  F03A    	movff	plusw1,btemp
  5067  002FD8  0E07               	movlw	7
  5068  002FDA  5E3A               	subwf	btemp,f,c
  5069  002FDC  A0D8               	btfss	status,0,c
  5070  002FDE  D0C6               	goto	u4540
  5071  002FE0                     l6702:
  5072                           
  5073                           ;stkvar	_c @ sp[(-4)+-4]
  5074                           ;stkvar	_s @ sp[(-4)+0]
  5075  002FE0  0EFC               	movlw	-4
  5076  002FE2  006F FF8C  F044    	movff	plusw1,btemp+10
  5077  002FE8  0EFD               	movlw	-3
  5078  002FEA  006F FF8C  F045    	movff	plusw1,btemp+11
  5079  002FF0  0E03               	movlw	3
  5080  002FF2  2444               	addwf	btemp+10,w,c
  5081  002FF4  6ED9               	movwf	fsr2l,c
  5082  002FF6  0E00               	movlw	0
  5083  002FF8  2045               	addwfc	btemp+11,w,c
  5084  002FFA  6EDA               	movwf	fsr2h,c
  5085  002FFC  0EF8               	movlw	-8
  5086  002FFE  006F FF8F FFDF     	movff	plusw1,indf2
  5087                           
  5088                           ;stkvar	_c @ sp[(-4)+-4]
  5089                           ;stkvar	_n @ sp[(-4)+-6]
  5090                           ;stkvar	_s @ sp[(-4)+0]
  5091  003004  0EFC               	movlw	-4
  5092  003006  006F FF8C  F044    	movff	plusw1,btemp+10
  5093  00300C  0EFD               	movlw	-3
  5094  00300E  006F FF8C  F045    	movff	plusw1,btemp+11
  5095  003014  0EF6               	movlw	-10
  5096  003016  50E3               	movf	plusw1,w,c
  5097  003018  2644               	addwf	btemp+10,f,c
  5098  00301A  0EF7               	movlw	-9
  5099  00301C  50E3               	movf	plusw1,w,c
  5100  00301E  2245               	addwfc	btemp+11,f,c
  5101  003020  0EFC               	movlw	252
  5102  003022  2444               	addwf	btemp+10,w,c
  5103  003024  6ED9               	movwf	fsr2l,c
  5104  003026  0EFF               	movlw	255
  5105  003028  2045               	addwfc	btemp+11,w,c
  5106  00302A  6EDA               	movwf	fsr2h,c
  5107  00302C  0EF8               	movlw	-8
  5108  00302E  006F FF8F FFDF     	movff	plusw1,indf2
  5109                           
  5110                           ;stkvar	_n @ sp[(-4)+-6]
  5111  003034  0EF7               	movlw	-9
  5112  003036  50E3               	movf	plusw1,w,c
  5113  003038  E108               	bnz	l6708
  5114  00303A  0EF6               	movlw	-10
  5115  00303C  006F FF8C  F03A    	movff	plusw1,btemp
  5116  003042  0E09               	movlw	9
  5117  003044  5E3A               	subwf	btemp,f,c
  5118  003046  A0D8               	btfss	status,0,c
  5119  003048  D091               	goto	u4540
  5120  00304A                     l6708:
  5121                           
  5122                           ;stkvar	_s @ sp[(-4)+0]
  5123  00304A  0EFC               	movlw	-4
  5124  00304C  006F FF8C  F044    	movff	plusw1,btemp+10
  5125  003052  1E44               	comf	btemp+10,f,c
  5126  003054  0EFD               	movlw	-3
  5127  003056  006F FF8C  F045    	movff	plusw1,btemp+11
  5128  00305C  1E45               	comf	btemp+11,f,c
  5129  00305E  2A44               	incf	btemp+10,f,c
  5130  003060  B4D8               	btfsc	status,2,c
  5131  003062  2A45               	incf	btemp+11,f,c
  5132  003064  0E03               	movlw	3
  5133  003066  1644               	andwf	btemp+10,f,c
  5134  003068  0E00               	movlw	0
  5135  00306A  1645               	andwf	btemp+11,f,c
  5136                           
  5137                           ;stkvar	_k @ sp[(-4)+2]
  5138  00306C  0EFE               	movlw	-2
  5139  00306E  0060  F113  FFE3   	movff	btemp+10,plusw1
  5140  003074  0EFF               	movlw	-1
  5141  003076  0060  F117  FFE3   	movff	btemp+11,plusw1
  5142                           
  5143                           ;stkvar	_k @ sp[(-4)+2]
  5144                           ;stkvar	_s @ sp[(-4)+0]
  5145  00307C  0EFC               	movlw	-4
  5146  00307E  50E3               	movf	plusw1,w,c
  5147  003080  6E3A               	movwf	btemp,c
  5148  003082  0EFE               	movlw	-2
  5149  003084  50E3               	movf	plusw1,w,c
  5150  003086  263A               	addwf	btemp,f,c
  5151  003088  0EFC               	movlw	-4
  5152  00308A  0060  F0EB  FFE3   	movff	btemp,plusw1
  5153  003090  0EFD               	movlw	-3
  5154  003092  50E3               	movf	plusw1,w,c
  5155  003094  6E3A               	movwf	btemp,c
  5156  003096  0EFF               	movlw	-1
  5157  003098  50E3               	movf	plusw1,w,c
  5158  00309A  223A               	addwfc	btemp,f,c
  5159  00309C  0EFD               	movlw	-3
  5160  00309E  0060  F0EB  FFE3   	movff	btemp,plusw1
  5161                           
  5162                           ;stkvar	_k @ sp[(-4)+2]
  5163                           ;stkvar	_n @ sp[(-4)+-6]
  5164  0030A4  0EF6               	movlw	-10
  5165  0030A6  50E3               	movf	plusw1,w,c
  5166  0030A8  6E3A               	movwf	btemp,c
  5167  0030AA  0EFE               	movlw	-2
  5168  0030AC  50E3               	movf	plusw1,w,c
  5169  0030AE  5E3A               	subwf	btemp,f,c
  5170  0030B0  0EF6               	movlw	-10
  5171  0030B2  0060  F0EB  FFE3   	movff	btemp,plusw1
  5172  0030B8  0EF7               	movlw	-9
  5173  0030BA  50E3               	movf	plusw1,w,c
  5174  0030BC  6E3A               	movwf	btemp,c
  5175  0030BE  0EFF               	movlw	-1
  5176  0030C0  50E3               	movf	plusw1,w,c
  5177  0030C2  5A3A               	subwfb	btemp,f,c
  5178  0030C4  0EF7               	movlw	-9
  5179  0030C6  0060  F0EB  FFE3   	movff	btemp,plusw1
  5180  0030CC  0EFC               	movlw	252
  5181  0030CE  6E44               	movwf	btemp+10,c
  5182  0030D0  0EFF               	movlw	255
  5183  0030D2  6E45               	movwf	btemp+11,c
  5184                           
  5185                           ;stkvar	_n @ sp[(-4)+-6]
  5186  0030D4  0EF6               	movlw	-10
  5187  0030D6  006F FF8C  F03A    	movff	plusw1,btemp
  5188  0030DC  5044               	movf	btemp+10,w,c
  5189  0030DE  163A               	andwf	btemp,f,c
  5190  0030E0  0EF6               	movlw	-10
  5191  0030E2  0060  F0EB  FFE3   	movff	btemp,plusw1
  5192  0030E8  0EF7               	movlw	-9
  5193  0030EA  006F FF8C  F03A    	movff	plusw1,btemp
  5194  0030F0  5045               	movf	btemp+11,w,c
  5195  0030F2  163A               	andwf	btemp,f,c
  5196  0030F4  0EF7               	movlw	-9
  5197  0030F6  D02E               	goto	L12
  5198  0030F8                     l6716:
  5199                           
  5200                           ;stkvar	_c @ sp[(-4)+-4]
  5201                           ;stkvar	_s @ sp[(-4)+0]
  5202  0030F8  0EFC               	movlw	-4
  5203  0030FA  006F FF8F FFD9     	movff	plusw1,fsr2l
  5204  003100  0EFD               	movlw	-3
  5205  003102  006F FF8F FFDA     	movff	plusw1,fsr2h
  5206  003108  0EF8               	movlw	-8
  5207  00310A  006F FF8F FFDF     	movff	plusw1,indf2
  5208                           
  5209                           ;stkvar	_n @ sp[(-4)+-6]
  5210  003110  0EF6               	movlw	-10
  5211  003112  006F FF8C  F03A    	movff	plusw1,btemp
  5212  003118  0E01               	movlw	1
  5213  00311A  5E3A               	subwf	btemp,f,c
  5214  00311C  0EF6               	movlw	-10
  5215  00311E  0060  F0EB  FFE3   	movff	btemp,plusw1
  5216  003124  0EF7               	movlw	-9
  5217  003126  006F FF8C  F03A    	movff	plusw1,btemp
  5218  00312C  0E00               	movlw	0
  5219  00312E  5A3A               	subwfb	btemp,f,c
  5220  003130  0EF7               	movlw	-9
  5221  003132  0060  F0EB  FFE3   	movff	btemp,plusw1
  5222                           
  5223                           ;stkvar	_s @ sp[(-4)+0]
  5224  003138  0EFC               	movlw	-4
  5225  00313A  50E3               	movf	plusw1,w,c
  5226  00313C  0F01               	addlw	1
  5227  00313E  6E3A               	movwf	btemp,c
  5228  003140  0EFC               	movlw	-4
  5229  003142  0060  F0EB  FFE3   	movff	btemp,plusw1
  5230  003148  6A3A               	clrf	btemp,c
  5231  00314A  0EFD               	movlw	-3
  5232  00314C  50E3               	movf	plusw1,w,c
  5233  00314E  203A               	addwfc	btemp,w,c
  5234  003150  6E3A               	movwf	btemp,c
  5235  003152  0EFD               	movlw	-3
  5236  003154                     L12:
  5237  003154  0060  F0EB  FFE3   	movff	btemp,plusw1
  5238                           
  5239                           ;stkvar	_n @ sp[(-4)+-6]
  5240  00315A  0EF6               	movlw	-10
  5241  00315C  006F FF8C  F03A    	movff	plusw1,btemp
  5242  003162  0EF7               	movlw	-9
  5243  003164  50E3               	movf	plusw1,w,c
  5244  003166  103A               	iorwf	btemp,w,c
  5245  003168  A4D8               	btfss	status,2,c
  5246  00316A  D7C6               	goto	l6716
  5247  00316C                     u4540:
  5248                           
  5249                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  5250  00316C  0EF6               	movlw	246
  5251  00316E  26E1               	addwf	fsr1l,f,c
  5252  003170  0EFF               	movlw	255
  5253  003172  22E2               	addwfc	fsr1h,f,c
  5254  003174  0012               	return		;funcret
  5255  003176                     __end_of_memset:
  5256                           	opt callstack 0
  5257                           
  5258 ;; *************** function _printf *****************
  5259 ;; Defined at:
  5260 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  fmt             1  [STACK] PTR const unsigned char 
  5263 ;;		 -> STR_7(3), STR_6(3), 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  ap              2  [STACK] PTR void [1]
  5266 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5267 ;;  ret             2    0        int 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  2  [STACK] int 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5272 ;; Tracked objects:
  5273 ;;		On entry : 3F/3B
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:   11
  5284 ;; This function calls:
  5285 ;;		_vfprintf
  5286 ;; This function is called by:
  5287 ;;		_eaDogM_WriteString
  5288 ;; This function uses a reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text28
  5292  004F5E                     __ptext28:
  5293                           	opt callstack 0
  5294  004F5E                     _printf:
  5295                           	opt callstack 0
  5296                           
  5297                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5298  004F5E  52E6               	movf	postinc1,f,c
  5299  004F60  52E6               	movf	postinc1,f,c
  5300                           
  5301                           ;stkvar	?_printf @ sp[(-2)+-3]
  5302                           
  5303                           ;incstack = 0
  5304  004F62  0EFB               	movlw	251
  5305  004F64  24E1               	addwf	fsr1l,w,c
  5306  004F66  6E44               	movwf	btemp+10,c
  5307  004F68  0EFF               	movlw	255
  5308  004F6A  20E2               	addwfc	fsr1h,w,c
  5309  004F6C  6E45               	movwf	btemp+11,c
  5310  004F6E  0E01               	movlw	1
  5311  004F70  2644               	addwf	btemp+10,f,c
  5312  004F72  0E00               	movlw	0
  5313  004F74  2245               	addwfc	btemp+11,f,c
  5314                           
  5315                           ;stkvar	_ap @ sp[(-2)+0]
  5316  004F76  0EFF               	movlw	-1
  5317  004F78  0060  F117  FFE3   	movff	btemp+11,plusw1
  5318  004F7E  0EFE               	movlw	-2
  5319  004F80  0060  F113  FFE3   	movff	btemp+10,plusw1
  5320                           
  5321                           ;stkvar	_ap @ sp[(-2)+0]
  5322  004F86  0EFE               	movlw	254
  5323  004F88  24E1               	addwf	fsr1l,w,c
  5324  004F8A  6E3A               	movwf	btemp,c
  5325  004F8C  0EFF               	movlw	255
  5326  004F8E  20E2               	addwfc	fsr1h,w,c
  5327  004F90  6E3B               	movwf	btemp+1,c
  5328  004F92  0060  F0EB  FFE6   	movff	btemp,postinc1
  5329  004F98  0060  F0EF  FFE6   	movff	btemp+1,postinc1
  5330                           
  5331                           ;stkvar	_fmt @ sp[(-4)+-2]
  5332  004F9E  0EFA               	movlw	-6
  5333  004FA0  50E3               	movf	plusw1,w,c
  5334  004FA2  6EE6               	movwf	postinc1,c
  5335  004FA4  0E00               	movlw	0
  5336  004FA6  6EE6               	movwf	postinc1,c
  5337  004FA8  0E00               	movlw	0
  5338  004FAA  6EE6               	movwf	postinc1,c
  5339  004FAC  EC3E  F025         	call	_vfprintf	;wreg free
  5340                           
  5341                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  5342  004FB0  52E5               	movf	postdec1,f,c
  5343  004FB2  52E5               	movf	postdec1,f,c
  5344  004FB4  52E5               	movf	postdec1,f,c
  5345  004FB6  50E7               	movf	indf1,w,c
  5346  004FB8  5EE1               	subwf	fsr1l,f,c
  5347  004FBA  0E00               	movlw	0
  5348  004FBC  5AE2               	subwfb	fsr1h,f,c
  5349  004FBE  0012               	return		;funcret
  5350  004FC0                     __end_of_printf:
  5351                           	opt callstack 0
  5352                           
  5353 ;; *************** function _vfprintf *****************
  5354 ;; Defined at:
  5355 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5358 ;;		 -> f(5), NULL(0), 
  5359 ;;  fmt             1  [STACK] PTR const unsigned char 
  5360 ;;		 -> STR_7(3), STR_6(3), STR_5(23), STR_4(6), 
  5361 ;;		 -> STR_3(10), STR_2(12), STR_1(61), 
  5362 ;;  ap              2  [STACK] PTR PTR void 
  5363 ;;		 -> ap(2), ap(2), 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  cfmt            1  [STACK] PTR unsigned char 
  5366 ;;		 -> STR_7(3), STR_6(3), STR_5(23), STR_4(6), 
  5367 ;;		 -> STR_3(10), STR_2(12), STR_1(61), 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2  [STACK] int 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/1
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:   10
  5384 ;; This function calls:
  5385 ;;		_vfpfcnvrt
  5386 ;; This function is called by:
  5387 ;;		_sprintf
  5388 ;;		_printf
  5389 ;; This function uses a reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text29
  5393  004A7C                     __ptext29:
  5394                           	opt callstack 0
  5395  004A7C                     _vfprintf:
  5396                           	opt callstack 0
  5397                           
  5398                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5399  004A7C  52E6               	movf	postinc1,f,c
  5400                           
  5401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5402                           ;stkvar	_fmt @ sp[(-1)+-3]
  5403                           
  5404                           ;incstack = 0
  5405  004A7E  0EFC               	movlw	-4
  5406  004A80  006F FF8C  F045    	movff	plusw1,btemp+11
  5407                           
  5408                           ;stkvar	_cfmt @ sp[(-1)+0]
  5409  004A86  0EFF               	movlw	-1
  5410  004A88  0060  F117  FFE3   	movff	btemp+11,plusw1
  5411                           
  5412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5413  004A8E  6A23               	clrf	_nout,c
  5414  004A90  6A24               	clrf	_nout+1,c
  5415                           
  5416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5417  004A92  D020               	goto	l6730
  5418  004A94                     l6728:
  5419                           
  5420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5421                           ;stkvar	_ap @ sp[(-1)+-5]
  5422  004A94  0EFA               	movlw	-6
  5423  004A96  006F FF8F FFE6     	movff	plusw1,postinc1
  5424  004A9C  006F FF8F FFE6     	movff	plusw1,postinc1
  5425                           
  5426                           ;stkvar	_cfmt @ sp[(-3)+0]
  5427  004AA2  0EFD               	movlw	253
  5428  004AA4  24E1               	addwf	fsr1l,w,c
  5429  004AA6  6E3A               	movwf	btemp,c
  5430  004AA8  0EFF               	movlw	255
  5431  004AAA  20E2               	addwfc	fsr1h,w,c
  5432  004AAC  6E3B               	movwf	btemp+1,c
  5433  004AAE  0060  F0EB  FFE6   	movff	btemp,postinc1
  5434  004AB4  0060  F0EF  FFE6   	movff	btemp+1,postinc1
  5435                           
  5436                           ;stkvar	_fp @ sp[(-5)+-2]
  5437  004ABA  0EF9               	movlw	-7
  5438  004ABC  006F FF8F FFE6     	movff	plusw1,postinc1
  5439  004AC2  006F FF8F FFE6     	movff	plusw1,postinc1
  5440  004AC8  EC35  F010         	call	_vfpfcnvrt	;wreg free
  5441  004ACC  503A               	movf	btemp,w,c
  5442  004ACE  2623               	addwf	_nout,f,c
  5443  004AD0  503B               	movf	btemp+1,w,c
  5444  004AD2  2224               	addwfc	_nout+1,f,c
  5445  004AD4                     l6730:
  5446                           
  5447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5448                           ;stkvar	_cfmt @ sp[(-1)+0]
  5449  004AD4  50E1               	movf	fsr1l,w,c
  5450  004AD6  0FFF               	addlw	-1
  5451  004AD8  6ED9               	movwf	fsr2l,c
  5452  004ADA  50E2               	movf	fsr1h,w,c
  5453  004ADC  6EDA               	movwf	fsr2h,c
  5454  004ADE  0EFF               	movlw	255
  5455  004AE0  22DA               	addwfc	fsr2h,f,c
  5456  004AE2  006F FF7F FFF6     	movff	indf2,tblptrl
  5457  004AE8                     	if	1	;There is more than 1 active tblptr byte
  5458  004AE8  0E20               	movlw	high __smallconst
  5459  004AEA  6EF7               	movwf	tblptrh,c
  5460  004AEC                     	endif
  5461  004AEC                     	if	0	;tblptru may be non-zero
  5462  004AEC                     	endif
  5463  004AEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5464  004AEC  0E00               	movlw	low (__smallconst shr (0+16))
  5465  004AEE  6EF8               	movwf	tblptru,c
  5466  004AF0                     	endif
  5467  004AF0  0008               	tblrd		*
  5468  004AF2  50F5               	movf	tablat,w,c
  5469  004AF4  0900               	iorlw	0
  5470  004AF6  A4D8               	btfss	status,2,c
  5471  004AF8  D7CD               	goto	l6728
  5472                           
  5473                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  5474  004AFA  0060  F08C  F03A   	movff	_nout,btemp
  5475  004B00  0060  F090  F03B   	movff	_nout+1,btemp+1
  5476                           
  5477                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5478  004B06  0EFA               	movlw	250
  5479  004B08  26E1               	addwf	fsr1l,f,c
  5480  004B0A  0EFF               	movlw	255
  5481  004B0C  22E2               	addwfc	fsr1h,f,c
  5482  004B0E  0012               	return		;funcret
  5483  004B10                     __end_of_vfprintf:
  5484                           	opt callstack 0
  5485                           
  5486 ;; *************** function _vfpfcnvrt *****************
  5487 ;; Defined at:
  5488 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5491 ;;		 -> f(5), NULL(0), 
  5492 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  5493 ;;		 -> cfmt(1), 
  5494 ;;  ap              2  [STACK] PTR PTR void 
  5495 ;;		 -> ap(2), ap(2), 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  llu             8  [STACK] unsigned long long 
  5498 ;;  ll              8  [STACK] long long 
  5499 ;;  f               4    0        long long 
  5500 ;;  vp              3    0        PTR void 
  5501 ;;  ct              3    0        unsigned char [3]
  5502 ;;  done            2  [STACK] int 
  5503 ;;  cp              2  [STACK] PTR unsigned char 
  5504 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  5505 ;;  i               2    0        int 
  5506 ;;  c               1  [STACK] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  2  [STACK] int 
  5509 ;; Registers used:
  5510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/1
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    9
  5523 ;; This function calls:
  5524 ;;		_atoi
  5525 ;;		_dtoa
  5526 ;;		_fputc
  5527 ;;		_isdigit
  5528 ;;		_stoa
  5529 ;;		_xtoa
  5530 ;; This function is called by:
  5531 ;;		_vfprintf
  5532 ;; This function uses a reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text30
  5536  00206A                     __ptext30:
  5537                           	opt callstack 0
  5538  00206A                     _vfpfcnvrt:
  5539                           	opt callstack 0
  5540                           
  5541                           ; autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5542  00206A  0E17               	movlw	23
  5543  00206C  26E1               	addwf	fsr1l,f,c
  5544  00206E  0E00               	movlw	0
  5545  002070  22E2               	addwfc	fsr1h,f,c
  5546                           
  5547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  5548                           ;stkvar	_fmt @ sp[(-23)+-4]
  5549                           
  5550                           ;incstack = 0
  5551  002072  0EE5               	movlw	-27
  5552  002074  006F FF8F FFD9     	movff	plusw1,fsr2l
  5553  00207A  0EE6               	movlw	-26
  5554  00207C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5555  002082  006F FF7F FFF6     	movff	indf2,tblptrl
  5556  002088                     	if	1	;There is more than 1 active tblptr byte
  5557  002088  0E20               	movlw	high __smallconst
  5558  00208A  6EF7               	movwf	tblptrh,c
  5559  00208C                     	endif
  5560  00208C                     	if	0	;tblptru may be non-zero
  5561  00208C                     	endif
  5562  00208C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5563  00208C  0E00               	movlw	low (__smallconst shr (0+16))
  5564  00208E  6EF8               	movwf	tblptru,c
  5565  002090                     	endif
  5566  002090  0008               	tblrd		*
  5567  002092  50F5               	movf	tablat,w,c
  5568  002094  0A25               	xorlw	37
  5569  002096  A4D8               	btfss	status,2,c
  5570  002098  D2DF               	goto	l6658
  5571                           
  5572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5573                           ;stkvar	_fmt @ sp[(-23)+-4]
  5574  00209A  0EE5               	movlw	-27
  5575  00209C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5576  0020A2  0EE6               	movlw	-26
  5577  0020A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5578  0020AA  2ADF               	incf	indf2,f,c
  5579                           
  5580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5581  0020AC  6A25               	clrf	_width,c
  5582  0020AE  6A26               	clrf	_width+1,c
  5583  0020B0  6A29               	clrf	_flags,c
  5584  0020B2  6A2A               	clrf	_flags+1,c
  5585                           
  5586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5587  0020B4  6827               	setf	_prec,c
  5588  0020B6  6828               	setf	_prec+1,c
  5589                           
  5590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  5591                           ;stkvar	_done @ sp[(-23)+18]
  5592  0020B8  0EFB               	movlw	-5
  5593  0020BA  6AE3               	clrf	plusw1,c
  5594  0020BC  0EFC               	movlw	-4
  5595  0020BE  6AE3               	clrf	plusw1,c
  5596                           
  5597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  5598  0020C0  D048               	goto	l6582
  5599  0020C2                     l6556:
  5600                           
  5601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  5602  0020C2  8029               	bsf	_flags,0,c
  5603  0020C4                     l6558:
  5604                           
  5605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  5606                           ;stkvar	_fmt @ sp[(-23)+-4]
  5607  0020C4  0EE5               	movlw	-27
  5608  0020C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5609  0020CC  0EE6               	movlw	-26
  5610  0020CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5611  0020D4  2ADF               	incf	indf2,f,c
  5612                           
  5613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  5614  0020D6  D03D               	goto	l6582
  5615  0020D8                     l6560:
  5616                           
  5617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  5618  0020D8  8229               	bsf	_flags,1,c
  5619  0020DA  D7F4               	goto	l6558
  5620  0020DC                     l6564:
  5621                           
  5622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  5623  0020DC  8429               	bsf	_flags,2,c
  5624  0020DE  D7F2               	goto	l6558
  5625  0020E0                     l6568:
  5626                           
  5627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  5628  0020E0  8629               	bsf	_flags,3,c
  5629  0020E2  D7F0               	goto	l6558
  5630  0020E4                     l6572:
  5631                           
  5632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  5633  0020E4  8829               	bsf	_flags,4,c
  5634  0020E6  D7EE               	goto	l6558
  5635  0020E8                     l6576:
  5636                           
  5637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  5638  0020E8  0E01               	movlw	1
  5639  0020EA  6E44               	movwf	btemp+10,c
  5640  0020EC  0E00               	movlw	0
  5641  0020EE  6E45               	movwf	btemp+11,c
  5642                           
  5643                           ;stkvar	_done @ sp[(-23)+18]
  5644  0020F0  0EFB               	movlw	-5
  5645  0020F2  0060  F113  FFE3   	movff	btemp+10,plusw1
  5646  0020F8  0EFC               	movlw	-4
  5647  0020FA  0060  F117  FFE3   	movff	btemp+11,plusw1
  5648                           
  5649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  5650  002100  D028               	goto	l6582
  5651  002102                     l6580:
  5652                           
  5653                           ;stkvar	_fmt @ sp[(-23)+-4]
  5654  002102  0EE5               	movlw	-27
  5655  002104  006F FF8F FFD9     	movff	plusw1,fsr2l
  5656  00210A  0EE6               	movlw	-26
  5657  00210C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5658  002112  006F FF7F FFF6     	movff	indf2,tblptrl
  5659  002118                     	if	1	;There is more than 1 active tblptr byte
  5660  002118  0E20               	movlw	high __smallconst
  5661  00211A  6EF7               	movwf	tblptrh,c
  5662  00211C                     	endif
  5663  00211C                     	if	0	;tblptru may be non-zero
  5664  00211C                     	endif
  5665  00211C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5666  00211C  0E00               	movlw	low (__smallconst shr (0+16))
  5667  00211E  6EF8               	movwf	tblptru,c
  5668  002120                     	endif
  5669  002120  0008               	tblrd		*
  5670  002122  50F5               	movf	tablat,w,c
  5671  002124  6E44               	movwf	btemp+10,c
  5672  002126  6A45               	clrf	btemp+11,c
  5673                           
  5674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5675                           ; Switch size 1, requested type "simple"
  5676                           ; Number of cases is 1, Range of values is 0 to 0
  5677                           ; switch strategies available:
  5678                           ; Name         Instructions Cycles
  5679                           ; simple_byte            4     3 (average)
  5680                           ;	Chosen strategy is simple_byte
  5681  002128  5045               	movf	btemp+11,w,c
  5682  00212A  0A00               	xorlw	0	; case 0
  5683  00212C  A4D8               	btfss	status,2,c
  5684  00212E  D7DC               	goto	l6576
  5685                           
  5686                           ; Switch size 1, requested type "simple"
  5687                           ; Number of cases is 5, Range of values is 32 to 48
  5688                           ; switch strategies available:
  5689                           ; Name         Instructions Cycles
  5690                           ; simple_byte           16     9 (average)
  5691                           ;	Chosen strategy is simple_byte
  5692  002130  5044               	movf	btemp+10,w,c
  5693  002132  0A20               	xorlw	32	; case 32
  5694  002134  B4D8               	btfsc	status,2,c
  5695  002136  D7D4               	goto	l6568
  5696  002138  0A03               	xorlw	3	; case 35
  5697  00213A  B4D8               	btfsc	status,2,c
  5698  00213C  D7D3               	goto	l6572
  5699  00213E  0A08               	xorlw	8	; case 43
  5700  002140  B4D8               	btfsc	status,2,c
  5701  002142  D7CC               	goto	l6564
  5702  002144  0A06               	xorlw	6	; case 45
  5703  002146  B4D8               	btfsc	status,2,c
  5704  002148  D7BC               	goto	l6556
  5705  00214A  0A1D               	xorlw	29	; case 48
  5706  00214C  B4D8               	btfsc	status,2,c
  5707  00214E  D7C4               	goto	l6560
  5708  002150  D7CB               	goto	l6576
  5709  002152                     l6582:
  5710                           
  5711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  5712                           ;stkvar	_done @ sp[(-23)+18]
  5713  002152  0EFB               	movlw	-5
  5714  002154  006F FF8C  F03A    	movff	plusw1,btemp
  5715  00215A  0EFC               	movlw	-4
  5716  00215C  50E3               	movf	plusw1,w,c
  5717  00215E  103A               	iorwf	btemp,w,c
  5718  002160  B4D8               	btfsc	status,2,c
  5719  002162  D7CF               	goto	l6580
  5720                           
  5721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  5722  002164  B029               	btfsc	_flags,0,c
  5723                           
  5724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  5725  002166  9229               	bcf	_flags,1,c
  5726                           
  5727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  5728                           ;stkvar	_fmt @ sp[(-23)+-4]
  5729  002168  0EE5               	movlw	-27
  5730  00216A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5731  002170  0EE6               	movlw	-26
  5732  002172  006F FF8F FFDA     	movff	plusw1,fsr2h
  5733  002178  006F FF7F FFF6     	movff	indf2,tblptrl
  5734  00217E                     	if	1	;There is more than 1 active tblptr byte
  5735  00217E  0E20               	movlw	high __smallconst
  5736  002180  6EF7               	movwf	tblptrh,c
  5737  002182                     	endif
  5738  002182                     	if	0	;tblptru may be non-zero
  5739  002182                     	endif
  5740  002182                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5741  002182  0E00               	movlw	low (__smallconst shr (0+16))
  5742  002184  6EF8               	movwf	tblptru,c
  5743  002186                     	endif
  5744  002186  0008               	tblrd		*
  5745  002188  50F5               	movf	tablat,w,c
  5746  00218A  0A2A               	xorlw	42
  5747  00218C  A4D8               	btfss	status,2,c
  5748  00218E  D02F               	goto	l6596
  5749                           
  5750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  5751                           ;stkvar	_fmt @ sp[(-23)+-4]
  5752  002190  0EE5               	movlw	-27
  5753  002192  006F FF8F FFD9     	movff	plusw1,fsr2l
  5754  002198  0EE6               	movlw	-26
  5755  00219A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5756  0021A0  2ADF               	incf	indf2,f,c
  5757                           
  5758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  5759                           ;stkvar	_ap @ sp[(-23)+-6]
  5760  0021A2  0EE3               	movlw	-29
  5761  0021A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  5762  0021AA  0EE4               	movlw	-28
  5763  0021AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  5764  0021B2  0E02               	movlw	2
  5765  0021B4  5EDE               	subwf	postinc2,f,c
  5766  0021B6  0E00               	movlw	0
  5767  0021B8  5ADD               	subwfb	postdec2,f,c
  5768  0021BA  006F FF78  F044    	movff	postinc2,btemp+10
  5769  0021C0  006F FF74  F045    	movff	postdec2,btemp+11
  5770  0021C6  0060  F113  FFD9   	movff	btemp+10,fsr2l
  5771  0021CC  0060  F117  FFDA   	movff	btemp+11,fsr2h
  5772  0021D2  006F FF78  F025    	movff	postinc2,_width
  5773  0021D8  006F FF74  F026    	movff	postdec2,_width+1
  5774                           
  5775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  5776  0021DE  AE26               	btfss	_width+1,7,c
  5777  0021E0  D059               	goto	u4420
  5778                           
  5779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  5780  0021E2  8029               	bsf	_flags,0,c
  5781                           
  5782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  5783  0021E4  6C25               	negf	_width,c
  5784  0021E6  1E26               	comf	_width+1,f,c
  5785  0021E8  B0D8               	btfsc	status,0,c
  5786  0021EA  2A26               	incf	_width+1,f,c
  5787  0021EC  D053               	goto	u4420
  5788  0021EE                     l6596:
  5789                           
  5790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  5791                           ;stkvar	_fmt @ sp[(-23)+-4]
  5792  0021EE  0EE5               	movlw	-27
  5793  0021F0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5794  0021F6  0EE6               	movlw	-26
  5795  0021F8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5796  0021FE  50DF               	movf	indf2,w,c
  5797  002200  6EE6               	movwf	postinc1,c
  5798  002202  ECF8  F01E         	call	_atoi	;wreg free
  5799  002206  0060  F0E8  F025   	movff	btemp,_width
  5800  00220C  0060  F0EC  F026   	movff	btemp+1,_width+1
  5801                           
  5802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5803  002212  D009               	goto	l6600
  5804  002214                     l6598:
  5805                           
  5806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  5807                           ;stkvar	_fmt @ sp[(-23)+-4]
  5808  002214  0EE5               	movlw	-27
  5809  002216  006F FF8F FFD9     	movff	plusw1,fsr2l
  5810  00221C  0EE6               	movlw	-26
  5811  00221E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5812  002224  2ADF               	incf	indf2,f,c
  5813  002226                     l6600:
  5814  002226  0ED0               	movlw	208
  5815  002228  6E44               	movwf	btemp+10,c
  5816  00222A  0EFF               	movlw	255
  5817  00222C  6E45               	movwf	btemp+11,c
  5818                           
  5819                           ;stkvar	_fmt @ sp[(-23)+-4]
  5820  00222E  0EE5               	movlw	-27
  5821  002230  006F FF8F FFD9     	movff	plusw1,fsr2l
  5822  002236  0EE6               	movlw	-26
  5823  002238  006F FF8F FFDA     	movff	plusw1,fsr2h
  5824  00223E  006F FF7F FFF6     	movff	indf2,tblptrl
  5825  002244                     	if	1	;There is more than 1 active tblptr byte
  5826  002244  0E20               	movlw	high __smallconst
  5827  002246  6EF7               	movwf	tblptrh,c
  5828  002248                     	endif
  5829  002248                     	if	0	;tblptru may be non-zero
  5830  002248                     	endif
  5831  002248                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5832  002248  0E00               	movlw	low (__smallconst shr (0+16))
  5833  00224A  6EF8               	movwf	tblptru,c
  5834  00224C                     	endif
  5835  00224C  0008               	tblrd		*
  5836  00224E  50F5               	movf	tablat,w,c
  5837  002250  6E42               	movwf	btemp+8,c
  5838  002252  6A43               	clrf	btemp+9,c
  5839  002254  5044               	movf	btemp+10,w,c
  5840  002256  2642               	addwf	btemp+8,f,c
  5841  002258  5045               	movf	btemp+11,w,c
  5842  00225A  2243               	addwfc	btemp+9,f,c
  5843  00225C  5043               	movf	btemp+9,w,c
  5844  00225E  E106               	bnz	u4400
  5845  002260  0E0A               	movlw	10
  5846  002262  5C42               	subwf	btemp+8,w,c
  5847  002264  B0D8               	btfsc	status,0,c
  5848  002266  D002               	goto	u4400
  5849  002268  0E01               	movlw	1
  5850  00226A  D001               	goto	u4410
  5851  00226C                     u4400:
  5852  00226C  0E00               	movlw	0
  5853  00226E                     u4410:
  5854  00226E  6E44               	movwf	btemp+10,c
  5855  002270  6A45               	clrf	btemp+11,c
  5856                           
  5857                           ;stkvar	_vfpfcnvrt$3455 @ sp[(-23)+0]
  5858  002272  0EE9               	movlw	-23
  5859  002274  0060  F113  FFE3   	movff	btemp+10,plusw1
  5860  00227A  0EEA               	movlw	-22
  5861  00227C  0060  F117  FFE3   	movff	btemp+11,plusw1
  5862                           
  5863                           ;stkvar	_vfpfcnvrt$3455 @ sp[(-23)+0]
  5864  002282  0EE9               	movlw	-23
  5865  002284  006F FF8C  F03A    	movff	plusw1,btemp
  5866  00228A  0EEA               	movlw	-22
  5867  00228C  50E3               	movf	plusw1,w,c
  5868  00228E  103A               	iorwf	btemp,w,c
  5869  002290  A4D8               	btfss	status,2,c
  5870  002292  D7C0               	goto	l6598
  5871  002294                     u4420:
  5872                           
  5873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5874                           ;stkvar	_fmt @ sp[(-23)+-4]
  5875  002294  0EE5               	movlw	-27
  5876  002296  006F FF8F FFD9     	movff	plusw1,fsr2l
  5877  00229C  0EE6               	movlw	-26
  5878  00229E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5879  0022A4  006F FF7F FFF6     	movff	indf2,tblptrl
  5880  0022AA                     	if	1	;There is more than 1 active tblptr byte
  5881  0022AA  0E20               	movlw	high __smallconst
  5882  0022AC  6EF7               	movwf	tblptrh,c
  5883  0022AE                     	endif
  5884  0022AE                     	if	0	;tblptru may be non-zero
  5885  0022AE                     	endif
  5886  0022AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5887  0022AE  0E00               	movlw	low (__smallconst shr (0+16))
  5888  0022B0  6EF8               	movwf	tblptru,c
  5889  0022B2                     	endif
  5890  0022B2  0008               	tblrd		*
  5891  0022B4  50F5               	movf	tablat,w,c
  5892  0022B6  0A64               	xorlw	100
  5893  0022B8  B4D8               	btfsc	status,2,c
  5894  0022BA  D014               	goto	u4440
  5895                           
  5896                           ;stkvar	_fmt @ sp[(-23)+-4]
  5897  0022BC  0EE5               	movlw	-27
  5898  0022BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  5899  0022C4  0EE6               	movlw	-26
  5900  0022C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  5901  0022CC  006F FF7F FFF6     	movff	indf2,tblptrl
  5902  0022D2                     	if	1	;There is more than 1 active tblptr byte
  5903  0022D2  0E20               	movlw	high __smallconst
  5904  0022D4  6EF7               	movwf	tblptrh,c
  5905  0022D6                     	endif
  5906  0022D6                     	if	0	;tblptru may be non-zero
  5907  0022D6                     	endif
  5908  0022D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5909  0022D6  0E00               	movlw	low (__smallconst shr (0+16))
  5910  0022D8  6EF8               	movwf	tblptru,c
  5911  0022DA                     	endif
  5912  0022DA  0008               	tblrd		*
  5913  0022DC  50F5               	movf	tablat,w,c
  5914  0022DE  0A69               	xorlw	105
  5915  0022E0  A4D8               	btfss	status,2,c
  5916  0022E2  D073               	goto	l6618
  5917  0022E4                     u4440:
  5918                           
  5919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5920                           ;stkvar	_fmt @ sp[(-23)+-4]
  5921  0022E4  0EE5               	movlw	-27
  5922  0022E6  006F FF8F FFD9     	movff	plusw1,fsr2l
  5923  0022EC  0EE6               	movlw	-26
  5924  0022EE  006F FF8F FFDA     	movff	plusw1,fsr2h
  5925  0022F4  2ADF               	incf	indf2,f,c
  5926                           
  5927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5928                           ;stkvar	_ap @ sp[(-23)+-6]
  5929  0022F6  0EE3               	movlw	-29
  5930  0022F8  006F FF8F FFD9     	movff	plusw1,fsr2l
  5931  0022FE  0EE4               	movlw	-28
  5932  002300  006F FF8F FFDA     	movff	plusw1,fsr2h
  5933  002306  0E02               	movlw	2
  5934  002308  5EDE               	subwf	postinc2,f,c
  5935  00230A  0E00               	movlw	0
  5936  00230C  5ADD               	subwfb	postdec2,f,c
  5937  00230E  006F FF78  F044    	movff	postinc2,btemp+10
  5938  002314  006F FF74  F045    	movff	postdec2,btemp+11
  5939  00231A  0060  F113  FFD9   	movff	btemp+10,fsr2l
  5940  002320  0060  F117  FFDA   	movff	btemp+11,fsr2h
  5941  002326  006F FF78  F044    	movff	postinc2,btemp+10
  5942  00232C  006F FF74  F045    	movff	postdec2,btemp+11
  5943                           
  5944                           ;stkvar	_ll @ sp[(-23)+10]
  5945  002332  0EF3               	movlw	-13
  5946  002334  0060  F113  FFE3   	movff	btemp+10,plusw1
  5947  00233A  0EF4               	movlw	-12
  5948  00233C  0060  F117  FFE3   	movff	btemp+11,plusw1
  5949  002342  6A3A               	clrf	btemp,c
  5950  002344  BEE3               	btfsc	plusw1,7,c
  5951  002346  683A               	setf	btemp,c
  5952  002348  0EF5               	movlw	-11
  5953  00234A  0060  F0EB  FFE3   	movff	btemp,plusw1
  5954  002350  0EF6               	movlw	-10
  5955  002352  0060  F0EB  FFE3   	movff	btemp,plusw1
  5956  002358  0EF7               	movlw	-9
  5957  00235A  0060  F0EB  FFE3   	movff	btemp,plusw1
  5958  002360  0EF8               	movlw	-8
  5959  002362  0060  F0EB  FFE3   	movff	btemp,plusw1
  5960  002368  0EF9               	movlw	-7
  5961  00236A  0060  F0EB  FFE3   	movff	btemp,plusw1
  5962  002370  0EFA               	movlw	-6
  5963  002372  0060  F0EB  FFE3   	movff	btemp,plusw1
  5964                           
  5965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  5966                           ;stkvar	_ll @ sp[(-23)+10]
  5967  002378  50E1               	movf	fsr1l,w,c
  5968  00237A  0FF3               	addlw	-13
  5969  00237C  6ED9               	movwf	fsr2l,c
  5970  00237E  50E2               	movf	fsr1h,w,c
  5971  002380  6EDA               	movwf	fsr2h,c
  5972  002382  0EFF               	movlw	255
  5973  002384  22DA               	addwfc	fsr2h,f,c
  5974  002386  006F FF7B FFE6     	movff	postinc2,postinc1
  5975  00238C  006F FF7B FFE6     	movff	postinc2,postinc1
  5976  002392  006F FF7B FFE6     	movff	postinc2,postinc1
  5977  002398  006F FF7B FFE6     	movff	postinc2,postinc1
  5978  00239E  006F FF7B FFE6     	movff	postinc2,postinc1
  5979  0023A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5980  0023AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5981  0023B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5982                           
  5983                           ;stkvar	_fp @ sp[(-31)+-2]
  5984  0023B6  0EDF               	movlw	-33
  5985  0023B8  006F FF8F FFE6     	movff	plusw1,postinc1
  5986  0023BE  006F FF8F FFE6     	movff	plusw1,postinc1
  5987  0023C4  EC58  F013         	call	_dtoa	;wreg free
  5988  0023C8  D16E               	goto	l1626
  5989  0023CA                     l6618:
  5990                           
  5991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5992                           ;stkvar	_fmt @ sp[(-23)+-4]
  5993  0023CA  0EE5               	movlw	-27
  5994  0023CC  006F FF8F FFD9     	movff	plusw1,fsr2l
  5995  0023D2  0EE6               	movlw	-26
  5996  0023D4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5997  0023DA  006F FF7F FFF6     	movff	indf2,tblptrl
  5998  0023E0                     	if	1	;There is more than 1 active tblptr byte
  5999  0023E0  0E20               	movlw	high __smallconst
  6000  0023E2  6EF7               	movwf	tblptrh,c
  6001  0023E4                     	endif
  6002  0023E4                     	if	0	;tblptru may be non-zero
  6003  0023E4                     	endif
  6004  0023E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6005  0023E4  0E00               	movlw	low (__smallconst shr (0+16))
  6006  0023E6  6EF8               	movwf	tblptru,c
  6007  0023E8                     	endif
  6008  0023E8  0008               	tblrd		*
  6009  0023EA  50F5               	movf	tablat,w,c
  6010  0023EC  0A73               	xorlw	115
  6011  0023EE  A4D8               	btfss	status,2,c
  6012  0023F0  D040               	goto	l6628
  6013                           
  6014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6015                           ;stkvar	_fmt @ sp[(-23)+-4]
  6016  0023F2  0EE5               	movlw	-27
  6017  0023F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6018  0023FA  0EE6               	movlw	-26
  6019  0023FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6020  002402  2ADF               	incf	indf2,f,c
  6021                           
  6022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6023                           ;stkvar	_ap @ sp[(-23)+-6]
  6024  002404  0EE3               	movlw	-29
  6025  002406  006F FF8F FFD9     	movff	plusw1,fsr2l
  6026  00240C  0EE4               	movlw	-28
  6027  00240E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6028  002414  0E02               	movlw	2
  6029  002416  5EDE               	subwf	postinc2,f,c
  6030  002418  0E00               	movlw	0
  6031  00241A  5ADD               	subwfb	postdec2,f,c
  6032  00241C  006F FF78  F044    	movff	postinc2,btemp+10
  6033  002422  006F FF74  F045    	movff	postdec2,btemp+11
  6034  002428  0060  F113  FFD9   	movff	btemp+10,fsr2l
  6035  00242E  0060  F117  FFDA   	movff	btemp+11,fsr2h
  6036  002434  006F FF78  F044    	movff	postinc2,btemp+10
  6037  00243A  006F FF74  F045    	movff	postdec2,btemp+11
  6038                           
  6039                           ;stkvar	_cp @ sp[(-23)+20]
  6040  002440  0EFE               	movlw	-2
  6041  002442  0060  F117  FFE3   	movff	btemp+11,plusw1
  6042  002448  0EFD               	movlw	-3
  6043  00244A  0060  F113  FFE3   	movff	btemp+10,plusw1
  6044                           
  6045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6046                           ;stkvar	_cp @ sp[(-23)+20]
  6047  002450  0EFD               	movlw	-3
  6048  002452  006F FF8F FFE6     	movff	plusw1,postinc1
  6049  002458  006F FF8F FFE6     	movff	plusw1,postinc1
  6050                           
  6051                           ;stkvar	_fp @ sp[(-25)+-2]
  6052  00245E  0EE5               	movlw	-27
  6053  002460  006F FF8F FFE6     	movff	plusw1,postinc1
  6054  002466  006F FF8F FFE6     	movff	plusw1,postinc1
  6055  00246C  ECBB  F018         	call	_stoa	;wreg free
  6056  002470  D11A               	goto	l1626
  6057  002472                     l6628:
  6058                           
  6059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  6060                           ;stkvar	_fmt @ sp[(-23)+-4]
  6061  002472  0EE5               	movlw	-27
  6062  002474  006F FF8F FFD9     	movff	plusw1,fsr2l
  6063  00247A  0EE6               	movlw	-26
  6064  00247C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6065  002482  006F FF7F FFF6     	movff	indf2,tblptrl
  6066  002488                     	if	1	;There is more than 1 active tblptr byte
  6067  002488  0E20               	movlw	high __smallconst
  6068  00248A  6EF7               	movwf	tblptrh,c
  6069  00248C                     	endif
  6070  00248C                     	if	0	;tblptru may be non-zero
  6071  00248C                     	endif
  6072  00248C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6073  00248C  0E00               	movlw	low (__smallconst shr (0+16))
  6074  00248E  6EF8               	movwf	tblptru,c
  6075  002490                     	endif
  6076  002490  0008               	tblrd		*
  6077  002492  50F5               	movf	tablat,w,c
  6078  002494  0A78               	xorlw	120
  6079  002496  B4D8               	btfsc	status,2,c
  6080  002498  D014               	goto	u4470
  6081                           
  6082                           ;stkvar	_fmt @ sp[(-23)+-4]
  6083  00249A  0EE5               	movlw	-27
  6084  00249C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6085  0024A2  0EE6               	movlw	-26
  6086  0024A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6087  0024AA  006F FF7F FFF6     	movff	indf2,tblptrl
  6088  0024B0                     	if	1	;There is more than 1 active tblptr byte
  6089  0024B0  0E20               	movlw	high __smallconst
  6090  0024B2  6EF7               	movwf	tblptrh,c
  6091  0024B4                     	endif
  6092  0024B4                     	if	0	;tblptru may be non-zero
  6093  0024B4                     	endif
  6094  0024B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6095  0024B4  0E00               	movlw	low (__smallconst shr (0+16))
  6096  0024B6  6EF8               	movwf	tblptru,c
  6097  0024B8                     	endif
  6098  0024B8  0008               	tblrd		*
  6099  0024BA  50F5               	movf	tablat,w,c
  6100  0024BC  0A58               	xorlw	88
  6101  0024BE  A4D8               	btfss	status,2,c
  6102  0024C0  D091               	goto	l6642
  6103  0024C2                     u4470:
  6104                           
  6105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  6106                           ;stkvar	_fmt @ sp[(-23)+-4]
  6107  0024C2  0EE5               	movlw	-27
  6108  0024C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6109  0024CA  0EE6               	movlw	-26
  6110  0024CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6111  0024D2  006F FF7F FFF6     	movff	indf2,tblptrl
  6112  0024D8                     	if	1	;There is more than 1 active tblptr byte
  6113  0024D8  0E20               	movlw	high __smallconst
  6114  0024DA  6EF7               	movwf	tblptrh,c
  6115  0024DC                     	endif
  6116  0024DC                     	if	0	;tblptru may be non-zero
  6117  0024DC                     	endif
  6118  0024DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6119  0024DC  0E00               	movlw	low (__smallconst shr (0+16))
  6120  0024DE  6EF8               	movwf	tblptru,c
  6121  0024E0                     	endif
  6122                           
  6123                           ;stkvar	_c @ sp[(-23)+22]
  6124  0024E0  0008               	tblrd		*
  6125  0024E2  0EFF               	movlw	-1
  6126  0024E4  006F FFD7 FFE3     	movff	tablat,plusw1
  6127                           
  6128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  6129                           ;stkvar	_fmt @ sp[(-23)+-4]
  6130  0024EA  0EE5               	movlw	-27
  6131  0024EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6132  0024F2  0EE6               	movlw	-26
  6133  0024F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6134  0024FA  2ADF               	incf	indf2,f,c
  6135                           
  6136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  6137                           ;stkvar	_ap @ sp[(-23)+-6]
  6138  0024FC  0EE3               	movlw	-29
  6139  0024FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6140  002504  0EE4               	movlw	-28
  6141  002506  006F FF8F FFDA     	movff	plusw1,fsr2h
  6142  00250C  0E02               	movlw	2
  6143  00250E  5EDE               	subwf	postinc2,f,c
  6144  002510  0E00               	movlw	0
  6145  002512  5ADD               	subwfb	postdec2,f,c
  6146  002514  006F FF78  F044    	movff	postinc2,btemp+10
  6147  00251A  006F FF74  F045    	movff	postdec2,btemp+11
  6148  002520  0060  F113  FFD9   	movff	btemp+10,fsr2l
  6149  002526  0060  F117  FFDA   	movff	btemp+11,fsr2h
  6150  00252C  006F FF78  F044    	movff	postinc2,btemp+10
  6151  002532  006F FF74  F045    	movff	postdec2,btemp+11
  6152  002538  5044               	movf	btemp+10,w,c
  6153  00253A  6E4A               	movwf	btemp+16,c
  6154  00253C  5045               	movf	btemp+11,w,c
  6155  00253E  6E4B               	movwf	btemp+17,c
  6156  002540  6A4C               	clrf	btemp+18,c
  6157  002542  6A4D               	clrf	btemp+19,c
  6158  002544  6A4E               	clrf	btemp+20,c
  6159  002546  6A4F               	clrf	btemp+21,c
  6160  002548  6A50               	clrf	btemp+22,c
  6161  00254A  6A51               	clrf	btemp+23,c
  6162                           
  6163                           ;stkvar	_llu @ sp[(-23)+2]
  6164  00254C  0EEB               	movlw	-21
  6165  00254E  0060  F12B  FFE3   	movff	btemp+16,plusw1
  6166  002554  0EEC               	movlw	-20
  6167  002556  0060  F12F  FFE3   	movff	btemp+17,plusw1
  6168  00255C  0EED               	movlw	-19
  6169  00255E  0060  F133  FFE3   	movff	btemp+18,plusw1
  6170  002564  0EEE               	movlw	-18
  6171  002566  0060  F137  FFE3   	movff	btemp+19,plusw1
  6172  00256C  0EEF               	movlw	-17
  6173  00256E  0060  F13B  FFE3   	movff	btemp+20,plusw1
  6174  002574  0EF0               	movlw	-16
  6175  002576  0060  F13F  FFE3   	movff	btemp+21,plusw1
  6176  00257C  0EF1               	movlw	-15
  6177  00257E  0060  F143  FFE3   	movff	btemp+22,plusw1
  6178  002584  0EF2               	movlw	-14
  6179  002586  0060  F147  FFE3   	movff	btemp+23,plusw1
  6180                           
  6181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  6182                           ;stkvar	_c @ sp[(-23)+22]
  6183  00258C  0EFF               	movlw	-1
  6184  00258E  50E3               	movf	plusw1,w,c
  6185  002590  6EE6               	movwf	postinc1,c
  6186                           
  6187                           ;stkvar	_llu @ sp[(-24)+2]
  6188  002592  50E1               	movf	fsr1l,w,c
  6189  002594  0FEA               	addlw	-22
  6190  002596  6ED9               	movwf	fsr2l,c
  6191  002598  50E2               	movf	fsr1h,w,c
  6192  00259A  6EDA               	movwf	fsr2h,c
  6193  00259C  0EFF               	movlw	255
  6194  00259E  22DA               	addwfc	fsr2h,f,c
  6195  0025A0  006F FF7B FFE6     	movff	postinc2,postinc1
  6196  0025A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6197  0025AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6198  0025B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6199  0025B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6200  0025BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6201  0025C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6202  0025CA  006F FF7B FFE6     	movff	postinc2,postinc1
  6203                           
  6204                           ;stkvar	_fp @ sp[(-32)+-2]
  6205  0025D0  0EDE               	movlw	-34
  6206  0025D2  006F FF8F FFE6     	movff	plusw1,postinc1
  6207  0025D8  006F FF8F FFE6     	movff	plusw1,postinc1
  6208  0025DE  EC83  F015         	call	_xtoa	;wreg free
  6209  0025E2  D061               	goto	l1626
  6210  0025E4                     l6642:
  6211                           
  6212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6213                           ;stkvar	_fmt @ sp[(-23)+-4]
  6214  0025E4  0EE5               	movlw	-27
  6215  0025E6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6216  0025EC  0EE6               	movlw	-26
  6217  0025EE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6218  0025F4  006F FF7F FFF6     	movff	indf2,tblptrl
  6219  0025FA                     	if	1	;There is more than 1 active tblptr byte
  6220  0025FA  0E20               	movlw	high __smallconst
  6221  0025FC  6EF7               	movwf	tblptrh,c
  6222  0025FE                     	endif
  6223  0025FE                     	if	0	;tblptru may be non-zero
  6224  0025FE                     	endif
  6225  0025FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6226  0025FE  0E00               	movlw	low (__smallconst shr (0+16))
  6227  002600  6EF8               	movwf	tblptru,c
  6228  002602                     	endif
  6229  002602  0008               	tblrd		*
  6230  002604  50F5               	movf	tablat,w,c
  6231  002606  0A25               	xorlw	37
  6232  002608  A4D8               	btfss	status,2,c
  6233  00260A  D018               	goto	l6652
  6234                           
  6235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6236                           ;stkvar	_fmt @ sp[(-23)+-4]
  6237  00260C  0EE5               	movlw	-27
  6238  00260E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6239  002614  0EE6               	movlw	-26
  6240  002616  006F FF8F FFDA     	movff	plusw1,fsr2h
  6241  00261C  2ADF               	incf	indf2,f,c
  6242                           
  6243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6244                           ;stkvar	_fp @ sp[(-23)+-2]
  6245  00261E  0EE7               	movlw	-25
  6246  002620  006F FF8F FFE6     	movff	plusw1,postinc1
  6247  002626  006F FF8F FFE6     	movff	plusw1,postinc1
  6248  00262C  0E25               	movlw	37
  6249  00262E  6EE6               	movwf	postinc1,c
  6250  002630  0E00               	movlw	0
  6251  002632  6EE6               	movwf	postinc1,c
  6252  002634  ECFA  F021         	call	_fputc	;wreg free
  6253  002638                     l6648:
  6254                           
  6255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6256  002638  0E01               	movlw	1
  6257  00263A  D00A               	goto	L13
  6258  00263C                     l6652:
  6259                           
  6260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6261                           ;stkvar	_fmt @ sp[(-23)+-4]
  6262  00263C  0EE5               	movlw	-27
  6263  00263E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6264  002644  0EE6               	movlw	-26
  6265  002646  006F FF8F FFDA     	movff	plusw1,fsr2h
  6266  00264C  2ADF               	incf	indf2,f,c
  6267                           
  6268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6269  00264E  0E00               	movlw	0
  6270  002650                     L13:
  6271  002650  6E3A               	movwf	btemp,c
  6272  002652  0E00               	movlw	0
  6273  002654  6E3B               	movwf	btemp+1,c
  6274  002656  D027               	goto	l1626
  6275  002658                     l6658:
  6276                           
  6277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6278                           ;stkvar	_fp @ sp[(-23)+-2]
  6279  002658  0EE7               	movlw	-25
  6280  00265A  006F FF8F FFE6     	movff	plusw1,postinc1
  6281  002660  006F FF8F FFE6     	movff	plusw1,postinc1
  6282                           
  6283                           ;stkvar	_fmt @ sp[(-25)+-4]
  6284  002666  0EE3               	movlw	-29
  6285  002668  006F FF8F FFD9     	movff	plusw1,fsr2l
  6286  00266E  0EE4               	movlw	-28
  6287  002670  006F FF8F FFDA     	movff	plusw1,fsr2h
  6288  002676  006F FF7F FFF6     	movff	indf2,tblptrl
  6289  00267C                     	if	1	;There is more than 1 active tblptr byte
  6290  00267C  0E20               	movlw	high __smallconst
  6291  00267E  6EF7               	movwf	tblptrh,c
  6292  002680                     	endif
  6293  002680                     	if	0	;tblptru may be non-zero
  6294  002680                     	endif
  6295  002680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6296  002680  0E00               	movlw	low (__smallconst shr (0+16))
  6297  002682  6EF8               	movwf	tblptru,c
  6298  002684                     	endif
  6299  002684  0008               	tblrd		*
  6300  002686  50F5               	movf	tablat,w,c
  6301  002688  6EE6               	movwf	postinc1,c
  6302  00268A  0E00               	movlw	0
  6303  00268C  6EE6               	movwf	postinc1,c
  6304  00268E  ECFA  F021         	call	_fputc	;wreg free
  6305                           
  6306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6307                           ;stkvar	_fmt @ sp[(-23)+-4]
  6308  002692  0EE5               	movlw	-27
  6309  002694  006F FF8F FFD9     	movff	plusw1,fsr2l
  6310  00269A  0EE6               	movlw	-26
  6311  00269C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6312  0026A2  2ADF               	incf	indf2,f,c
  6313  0026A4  D7C9               	goto	l6648
  6314  0026A6                     l1626:
  6315                           
  6316                           ; _vfpfcnvrt: autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  6317  0026A6  0EE3               	movlw	227
  6318  0026A8  26E1               	addwf	fsr1l,f,c
  6319  0026AA  0EFF               	movlw	255
  6320  0026AC  22E2               	addwfc	fsr1h,f,c
  6321  0026AE  0012               	return		;funcret
  6322  0026B0                     __end_of_vfpfcnvrt:
  6323                           	opt callstack 0
  6324                           
  6325 ;; *************** function _xtoa *****************
  6326 ;; Defined at:
  6327 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6330 ;;		 -> f(5), NULL(0), 
  6331 ;;  d               8  [STACK] unsigned long long 
  6332 ;;  x               1  [STACK] unsigned char 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  n               8  [STACK] unsigned long long 
  6335 ;;  c               2  [STACK] int 
  6336 ;;  i               2  [STACK] int 
  6337 ;;  w               2  [STACK] int 
  6338 ;;  p               2  [STACK] int 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  2  [STACK] int 
  6341 ;; Registers used:
  6342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/1
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    8
  6355 ;; This function calls:
  6356 ;;		_isalpha
  6357 ;;		_isupper
  6358 ;;		_pad
  6359 ;;		_toupper
  6360 ;; This function is called by:
  6361 ;;		_vfpfcnvrt
  6362 ;; This function uses a reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text31
  6366  002B06                     __ptext31:
  6367                           	opt callstack 0
  6368  002B06                     _xtoa:
  6369                           	opt callstack 0
  6370                           
  6371                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  6372  002B06  0E14               	movlw	20
  6373  002B08  26E1               	addwf	fsr1l,f,c
  6374  002B0A  0E00               	movlw	0
  6375  002B0C  22E2               	addwfc	fsr1h,f,c
  6376                           
  6377                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6378                           
  6379                           ;incstack = 0
  6380  002B0E  AE28               	btfss	_prec+1,7,c
  6381                           
  6382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6383  002B10  9229               	bcf	_flags,1,c
  6384                           
  6385                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6386  002B12  BE28               	btfsc	_prec+1,7,c
  6387  002B14  D005               	goto	u4180
  6388  002B16  5028               	movf	_prec+1,w,c
  6389  002B18  E110               	bnz	l6482
  6390  002B1A  0427               	decf	_prec,w,c
  6391  002B1C  B0D8               	btfsc	status,0,c
  6392  002B1E  D00D               	goto	l6482
  6393  002B20                     u4180:
  6394  002B20  0E01               	movlw	1
  6395  002B22  6E44               	movwf	btemp+10,c
  6396  002B24  0E00               	movlw	0
  6397  002B26  6E45               	movwf	btemp+11,c
  6398                           
  6399                           ;stkvar	_p @ sp[(-20)+18]
  6400  002B28  0EFE               	movlw	-2
  6401  002B2A  0060  F113  FFE3   	movff	btemp+10,plusw1
  6402  002B30  0EFF               	movlw	-1
  6403  002B32  0060  F117  FFE3   	movff	btemp+11,plusw1
  6404  002B38  D008               	goto	l1574
  6405  002B3A                     l6482:
  6406                           
  6407                           ;stkvar	_p @ sp[(-20)+18]
  6408  002B3A  0EFE               	movlw	-2
  6409  002B3C  0060  F09F  FFE3   	movff	_prec,plusw1
  6410  002B42  0EFF               	movlw	-1
  6411  002B44  0060  F0A3  FFE3   	movff	_prec+1,plusw1
  6412  002B4A                     l1574:
  6413                           
  6414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6415                           ;stkvar	_w @ sp[(-20)+16]
  6416  002B4A  0EFC               	movlw	-4
  6417  002B4C  0060  F097  FFE3   	movff	_width,plusw1
  6418  002B52  0EFD               	movlw	-3
  6419  002B54  0060  F09B  FFE3   	movff	_width+1,plusw1
  6420                           
  6421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6422  002B5A  A829               	btfss	_flags,4,c
  6423  002B5C  D00B               	goto	l6488
  6424                           
  6425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6426                           ;stkvar	_w @ sp[(-20)+16]
  6427  002B5E  50E1               	movf	fsr1l,w,c
  6428  002B60  0FFC               	addlw	-4
  6429  002B62  6ED9               	movwf	fsr2l,c
  6430  002B64  50E2               	movf	fsr1h,w,c
  6431  002B66  6EDA               	movwf	fsr2h,c
  6432  002B68  0EFF               	movlw	255
  6433  002B6A  22DA               	addwfc	fsr2h,f,c
  6434  002B6C  0EFE               	movlw	254
  6435  002B6E  26DE               	addwf	postinc2,f,c
  6436  002B70  0EFF               	movlw	255
  6437  002B72  22DD               	addwfc	postdec2,f,c
  6438  002B74                     l6488:
  6439                           
  6440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6441                           ;stkvar	_d @ sp[(-20)+-10]
  6442  002B74  0EE2               	movlw	226
  6443  002B76  24E1               	addwf	fsr1l,w,c
  6444  002B78  6ED9               	movwf	fsr2l,c
  6445  002B7A  0EFF               	movlw	255
  6446  002B7C  20E2               	addwfc	fsr1h,w,c
  6447  002B7E  6EDA               	movwf	fsr2h,c
  6448                           
  6449                           ;stkvar	_n @ sp[(-20)+4]
  6450  002B80  0E08               	movlw	8
  6451  002B82  6E3A               	movwf	btemp,c
  6452  002B84  0EF0               	movlw	-16
  6453  002B86                     us420999:
  6454  002B86  006F FF7B FFE3     	movff	postinc2,plusw1
  6455  002B8C  28E8               	incf	wreg,w,c
  6456  002B8E  2E3A               	decfsz	btemp,f,c
  6457  002B90  D7FA               	bra	us420999
  6458                           
  6459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6460  002B92  0E1F               	movlw	31
  6461  002B94  6E44               	movwf	btemp+10,c
  6462  002B96  0E00               	movlw	0
  6463  002B98  6E45               	movwf	btemp+11,c
  6464                           
  6465                           ;stkvar	_i @ sp[(-20)+14]
  6466  002B9A  0EFA               	movlw	-6
  6467  002B9C  0060  F113  FFE3   	movff	btemp+10,plusw1
  6468  002BA2  0EFB               	movlw	-5
  6469  002BA4  0060  F117  FFE3   	movff	btemp+11,plusw1
  6470                           
  6471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6472  002BAA  0100               	movlb	0	; () banked
  6473  002BAC  6BF4               	clrf	(_dbuf+31)& (0+255),b
  6474                           
  6475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6476  002BAE  D0E8               	goto	l6526
  6477  002BB0                     l6494:
  6478                           
  6479                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  6480                           ;stkvar	_i @ sp[(-20)+14]
  6481  002BB0  50E1               	movf	fsr1l,w,c
  6482  002BB2  0FFA               	addlw	-6
  6483  002BB4  6ED9               	movwf	fsr2l,c
  6484  002BB6  50E2               	movf	fsr1h,w,c
  6485  002BB8  6EDA               	movwf	fsr2h,c
  6486  002BBA  0EFF               	movlw	255
  6487  002BBC  22DA               	addwfc	fsr2h,f,c
  6488  002BBE  06DE               	decf	postinc2,f,c
  6489  002BC0  0E00               	movlw	0
  6490  002BC2  5ADD               	subwfb	postdec2,f,c
  6491                           
  6492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6493                           ;stkvar	_n @ sp[(-20)+4]
  6494  002BC4  0EF0               	movlw	-16
  6495  002BC6  006F FF8C  F044    	movff	plusw1,btemp+10
  6496  002BCC  0EF1               	movlw	-15
  6497  002BCE  006F FF8C  F045    	movff	plusw1,btemp+11
  6498  002BD4  0E0F               	movlw	15
  6499  002BD6  1644               	andwf	btemp+10,f,c
  6500  002BD8  0E00               	movlw	0
  6501  002BDA  1645               	andwf	btemp+11,f,c
  6502                           
  6503                           ;stkvar	_c @ sp[(-20)+12]
  6504  002BDC  0EF8               	movlw	-8
  6505  002BDE  0060  F113  FFE3   	movff	btemp+10,plusw1
  6506  002BE4  0EF9               	movlw	-7
  6507  002BE6  0060  F117  FFE3   	movff	btemp+11,plusw1
  6508                           
  6509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6510                           ;stkvar	_c @ sp[(-20)+12]
  6511  002BEC  0EF9               	movlw	-7
  6512  002BEE  BEE3               	btfsc	plusw1,7,c
  6513  002BF0  D00F               	goto	l6502
  6514  002BF2  0EF9               	movlw	-7
  6515  002BF4  50E3               	movf	plusw1,w,c
  6516  002BF6  E108               	bnz	u4210
  6517  002BF8  0EF8               	movlw	-8
  6518  002BFA  006F FF8C  F03A    	movff	plusw1,btemp
  6519  002C00  0E0A               	movlw	10
  6520  002C02  5E3A               	subwf	btemp,f,c
  6521  002C04  A0D8               	btfss	status,0,c
  6522  002C06  D004               	goto	l6502
  6523  002C08                     u4210:
  6524                           
  6525                           ;stkvar	_c @ sp[(-20)+12]
  6526  002C08  0EF8               	movlw	-8
  6527  002C0A  50E3               	movf	plusw1,w,c
  6528  002C0C  0F57               	addlw	87
  6529  002C0E  D003               	goto	L14
  6530  002C10                     l6502:
  6531                           
  6532                           ;stkvar	_c @ sp[(-20)+12]
  6533  002C10  0EF8               	movlw	-8
  6534  002C12  50E3               	movf	plusw1,w,c
  6535  002C14  0F30               	addlw	48
  6536  002C16                     L14:
  6537  002C16  6E44               	movwf	btemp+10,c
  6538  002C18  0EF9               	movlw	-7
  6539  002C1A  006F FF8C  F045    	movff	plusw1,btemp+11
  6540  002C20  0E00               	movlw	0
  6541  002C22  2245               	addwfc	btemp+11,f,c
  6542                           
  6543                           ;stkvar	_c @ sp[(-20)+12]
  6544  002C24  0EF8               	movlw	-8
  6545  002C26  0060  F113  FFE3   	movff	btemp+10,plusw1
  6546  002C2C  0EF9               	movlw	-7
  6547  002C2E  0060  F117  FFE3   	movff	btemp+11,plusw1
  6548  002C34  0EBF               	movlw	191
  6549  002C36  6E44               	movwf	btemp+10,c
  6550  002C38  0EFF               	movlw	255
  6551  002C3A  6E45               	movwf	btemp+11,c
  6552                           
  6553                           ;stkvar	_x @ sp[(-20)+-11]
  6554  002C3C  0EE1               	movlw	-31
  6555  002C3E  50E3               	movf	plusw1,w,c
  6556  002C40  6E42               	movwf	btemp+8,c
  6557  002C42  6A43               	clrf	btemp+9,c
  6558  002C44  5044               	movf	btemp+10,w,c
  6559  002C46  2642               	addwf	btemp+8,f,c
  6560  002C48  5045               	movf	btemp+11,w,c
  6561  002C4A  2243               	addwfc	btemp+9,f,c
  6562  002C4C  5043               	movf	btemp+9,w,c
  6563  002C4E  E106               	bnz	u4220
  6564  002C50  0E1A               	movlw	26
  6565  002C52  5C42               	subwf	btemp+8,w,c
  6566  002C54  B0D8               	btfsc	status,0,c
  6567  002C56  D002               	goto	u4220
  6568  002C58  0E01               	movlw	1
  6569  002C5A  D001               	goto	u4230
  6570  002C5C                     u4220:
  6571  002C5C  0E00               	movlw	0
  6572  002C5E                     u4230:
  6573  002C5E  6E44               	movwf	btemp+10,c
  6574  002C60  6A45               	clrf	btemp+11,c
  6575                           
  6576                           ;stkvar	_xtoa$3440 @ sp[(-20)+2]
  6577  002C62  0EEE               	movlw	-18
  6578  002C64  0060  F113  FFE3   	movff	btemp+10,plusw1
  6579  002C6A  0EEF               	movlw	-17
  6580  002C6C  0060  F117  FFE3   	movff	btemp+11,plusw1
  6581                           
  6582                           ;stkvar	_xtoa$3440 @ sp[(-20)+2]
  6583  002C72  0EEE               	movlw	-18
  6584  002C74  006F FF8C  F03A    	movff	plusw1,btemp
  6585  002C7A  0EEF               	movlw	-17
  6586  002C7C  50E3               	movf	plusw1,w,c
  6587  002C7E  103A               	iorwf	btemp,w,c
  6588  002C80  B4D8               	btfsc	status,2,c
  6589  002C82  D041               	goto	l6518
  6590  002C84  0E9F               	movlw	159
  6591  002C86  6E44               	movwf	btemp+10,c
  6592  002C88  0EFF               	movlw	255
  6593  002C8A  6E45               	movwf	btemp+11,c
  6594                           
  6595                           ;stkvar	_c @ sp[(-20)+12]
  6596  002C8C  0EF8               	movlw	-8
  6597  002C8E  006F FF8C  F042    	movff	plusw1,btemp+8
  6598  002C94  0EF9               	movlw	-7
  6599  002C96  006F FF8C  F043    	movff	plusw1,btemp+9
  6600  002C9C  0E20               	movlw	32
  6601  002C9E  1242               	iorwf	btemp+8,f,c
  6602  002CA0  0E00               	movlw	0
  6603  002CA2  1243               	iorwf	btemp+9,f,c
  6604  002CA4  5044               	movf	btemp+10,w,c
  6605  002CA6  2642               	addwf	btemp+8,f,c
  6606  002CA8  5045               	movf	btemp+11,w,c
  6607  002CAA  2243               	addwfc	btemp+9,f,c
  6608  002CAC  5043               	movf	btemp+9,w,c
  6609  002CAE  E106               	bnz	u4250
  6610  002CB0  0E1A               	movlw	26
  6611  002CB2  5C42               	subwf	btemp+8,w,c
  6612  002CB4  B0D8               	btfsc	status,0,c
  6613  002CB6  D002               	goto	u4250
  6614  002CB8  0E01               	movlw	1
  6615  002CBA  D001               	goto	u4260
  6616  002CBC                     u4250:
  6617  002CBC  0E00               	movlw	0
  6618  002CBE                     u4260:
  6619  002CBE  6E44               	movwf	btemp+10,c
  6620  002CC0  6A45               	clrf	btemp+11,c
  6621                           
  6622                           ;stkvar	_xtoa$3441 @ sp[(-20)+0]
  6623  002CC2  0EEC               	movlw	-20
  6624  002CC4  0060  F113  FFE3   	movff	btemp+10,plusw1
  6625  002CCA  0EED               	movlw	-19
  6626  002CCC  0060  F117  FFE3   	movff	btemp+11,plusw1
  6627                           
  6628                           ;stkvar	_xtoa$3441 @ sp[(-20)+0]
  6629  002CD2  0EEC               	movlw	-20
  6630  002CD4  006F FF8C  F03A    	movff	plusw1,btemp
  6631  002CDA  0EED               	movlw	-19
  6632  002CDC  50E3               	movf	plusw1,w,c
  6633  002CDE  103A               	iorwf	btemp,w,c
  6634  002CE0  B4D8               	btfsc	status,2,c
  6635  002CE2  D011               	goto	l6518
  6636                           
  6637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6638                           ;stkvar	_c @ sp[(-20)+12]
  6639  002CE4  0EF8               	movlw	-8
  6640  002CE6  006F FF8F FFE6     	movff	plusw1,postinc1
  6641  002CEC  006F FF8F FFE6     	movff	plusw1,postinc1
  6642  002CF2  EC1A  F026         	call	_toupper	;wreg free
  6643                           
  6644                           ;stkvar	_c @ sp[(-20)+12]
  6645  002CF6  0EF8               	movlw	-8
  6646  002CF8  0060  F0EB  FFE3   	movff	btemp,plusw1
  6647  002CFE  0EF9               	movlw	-7
  6648  002D00  0060  F0EF  FFE3   	movff	btemp+1,plusw1
  6649  002D06                     l6518:
  6650                           
  6651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6652                           ;stkvar	_c @ sp[(-20)+12]
  6653                           ;stkvar	_i @ sp[(-20)+14]
  6654  002D06  0EFA               	movlw	-6
  6655  002D08  006F FF8C  F045    	movff	plusw1,btemp+11
  6656  002D0E  5045               	movf	btemp+11,w,c
  6657  002D10  0FD5               	addlw	low _dbuf
  6658  002D12  6ED9               	movwf	fsr2l,c
  6659  002D14  6ADA               	clrf	fsr2h,c
  6660  002D16  0EF8               	movlw	-8
  6661  002D18  006F FF8F FFDF     	movff	plusw1,indf2
  6662                           
  6663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  6664                           ;stkvar	_p @ sp[(-20)+18]
  6665  002D1E  50E1               	movf	fsr1l,w,c
  6666  002D20  0FFE               	addlw	-2
  6667  002D22  6ED9               	movwf	fsr2l,c
  6668  002D24  50E2               	movf	fsr1h,w,c
  6669  002D26  6EDA               	movwf	fsr2h,c
  6670  002D28  0EFF               	movlw	255
  6671  002D2A  22DA               	addwfc	fsr2h,f,c
  6672  002D2C  06DE               	decf	postinc2,f,c
  6673  002D2E  0E00               	movlw	0
  6674  002D30  5ADD               	subwfb	postdec2,f,c
  6675                           
  6676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  6677                           ;stkvar	_w @ sp[(-20)+16]
  6678  002D32  50E1               	movf	fsr1l,w,c
  6679  002D34  0FFC               	addlw	-4
  6680  002D36  6ED9               	movwf	fsr2l,c
  6681  002D38  50E2               	movf	fsr1h,w,c
  6682  002D3A  6EDA               	movwf	fsr2h,c
  6683  002D3C  0EFF               	movlw	255
  6684  002D3E  22DA               	addwfc	fsr2h,f,c
  6685  002D40  06DE               	decf	postinc2,f,c
  6686  002D42  0E00               	movlw	0
  6687  002D44  5ADD               	subwfb	postdec2,f,c
  6688                           
  6689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6690  002D46  0E04               	movlw	4
  6691  002D48  6E45               	movwf	btemp+11,c
  6692                           
  6693                           ;stkvar	_n @ sp[(-20)+4]
  6694  002D4A  50E1               	movf	fsr1l,w,c
  6695  002D4C  0FF0               	addlw	-16
  6696  002D4E  6ED9               	movwf	fsr2l,c
  6697  002D50  50E2               	movf	fsr1h,w,c
  6698  002D52  6EDA               	movwf	fsr2h,c
  6699  002D54  0EFF               	movlw	255
  6700  002D56  22DA               	addwfc	fsr2h,f,c
  6701  002D58  2845               	incf	btemp+11,w,c
  6702  002D5A  52DE               	movf	postinc2,f,c
  6703  002D5C  D00F               	goto	u4280
  6704  002D5E                     u4285:
  6705  002D5E  52DE               	movf	postinc2,f,c
  6706  002D60  52DE               	movf	postinc2,f,c
  6707  002D62  52DE               	movf	postinc2,f,c
  6708  002D64  52DE               	movf	postinc2,f,c
  6709  002D66  52DE               	movf	postinc2,f,c
  6710  002D68  52DE               	movf	postinc2,f,c
  6711  002D6A  90D8               	bcf	status,0,c
  6712  002D6C  32DD               	rrcf	postdec2,f,c
  6713  002D6E  32DD               	rrcf	postdec2,f,c
  6714  002D70  32DD               	rrcf	postdec2,f,c
  6715  002D72  32DD               	rrcf	postdec2,f,c
  6716  002D74  32DD               	rrcf	postdec2,f,c
  6717  002D76  32DD               	rrcf	postdec2,f,c
  6718  002D78  32DD               	rrcf	postdec2,f,c
  6719  002D7A  32DE               	rrcf	postinc2,f,c
  6720  002D7C                     u4280:
  6721  002D7C  2EE8               	decfsz	wreg,f,c
  6722  002D7E  D7EF               	goto	u4285
  6723  002D80                     l6526:
  6724                           
  6725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6726                           ;stkvar	_i @ sp[(-20)+14]
  6727  002D80  0EFB               	movlw	-5
  6728  002D82  BEE3               	btfsc	plusw1,7,c
  6729  002D84  D03A               	goto	u4330
  6730  002D86  0EFB               	movlw	-5
  6731  002D88  50E3               	movf	plusw1,w,c
  6732  002D8A  E108               	bnz	u4290
  6733  002D8C  0EFA               	movlw	-6
  6734  002D8E  006F FF8C  F03A    	movff	plusw1,btemp
  6735  002D94  0E02               	movlw	2
  6736  002D96  5E3A               	subwf	btemp,f,c
  6737  002D98  A0D8               	btfss	status,0,c
  6738  002D9A  D02F               	goto	u4330
  6739  002D9C                     u4290:
  6740                           
  6741                           ;stkvar	_n @ sp[(-20)+4]
  6742  002D9C  0EF0               	movlw	-16
  6743  002D9E  50E3               	movf	plusw1,w,c
  6744  002DA0  E115               	bnz	u4301
  6745  002DA2  0EF1               	movlw	-15
  6746  002DA4  50E3               	movf	plusw1,w,c
  6747  002DA6  E112               	bnz	u4301
  6748  002DA8  0EF2               	movlw	-14
  6749  002DAA  50E3               	movf	plusw1,w,c
  6750  002DAC  E10F               	bnz	u4301
  6751  002DAE  0EF3               	movlw	-13
  6752  002DB0  50E3               	movf	plusw1,w,c
  6753  002DB2  E10C               	bnz	u4301
  6754  002DB4  0EF4               	movlw	-12
  6755  002DB6  50E3               	movf	plusw1,w,c
  6756  002DB8  E109               	bnz	u4301
  6757  002DBA  0EF5               	movlw	-11
  6758  002DBC  50E3               	movf	plusw1,w,c
  6759  002DBE  E106               	bnz	u4301
  6760  002DC0  0EF6               	movlw	-10
  6761  002DC2  50E3               	movf	plusw1,w,c
  6762  002DC4  E103               	bnz	u4301
  6763  002DC6  0EF7               	movlw	-9
  6764  002DC8  50E3               	movf	plusw1,w,c
  6765  002DCA  A4D8               	btfss	status,2,c
  6766  002DCC                     u4301:
  6767  002DCC  D6F1               	goto	l6494
  6768                           
  6769                           ;stkvar	_p @ sp[(-20)+18]
  6770  002DCE  0EFF               	movlw	-1
  6771  002DD0  BEE3               	btfsc	plusw1,7,c
  6772  002DD2  D007               	goto	u4310
  6773  002DD4  0EFF               	movlw	-1
  6774  002DD6  50E3               	movf	plusw1,w,c
  6775  002DD8  E103               	bnz	u4311
  6776  002DDA  0EFE               	movlw	-2
  6777  002DDC  04E3               	decf	plusw1,w,c
  6778  002DDE  B0D8               	btfsc	status,0,c
  6779  002DE0                     u4311:
  6780  002DE0  D6E7               	goto	l6494
  6781  002DE2                     u4310:
  6782                           
  6783                           ;stkvar	_w @ sp[(-20)+16]
  6784  002DE2  0EFD               	movlw	-3
  6785  002DE4  BEE3               	btfsc	plusw1,7,c
  6786  002DE6  D009               	goto	u4330
  6787  002DE8  0EFD               	movlw	-3
  6788  002DEA  50E3               	movf	plusw1,w,c
  6789  002DEC  E104               	bnz	u4320
  6790  002DEE  0EFC               	movlw	-4
  6791  002DF0  04E3               	decf	plusw1,w,c
  6792  002DF2  A0D8               	btfss	status,0,c
  6793  002DF4  D002               	goto	u4330
  6794  002DF6                     u4320:
  6795  002DF6  B229               	btfsc	_flags,1,c
  6796  002DF8  D6DB               	goto	l6494
  6797  002DFA                     u4330:
  6798                           
  6799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  6800  002DFA  A829               	btfss	_flags,4,c
  6801  002DFC  D02A               	goto	l6542
  6802                           
  6803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  6804                           ;stkvar	_i @ sp[(-20)+14]
  6805  002DFE  50E1               	movf	fsr1l,w,c
  6806  002E00  0FFA               	addlw	-6
  6807  002E02  6ED9               	movwf	fsr2l,c
  6808  002E04  50E2               	movf	fsr1h,w,c
  6809  002E06  6EDA               	movwf	fsr2h,c
  6810  002E08  0EFF               	movlw	255
  6811  002E0A  22DA               	addwfc	fsr2h,f,c
  6812  002E0C  06DE               	decf	postinc2,f,c
  6813  002E0E  0E00               	movlw	0
  6814  002E10  5ADD               	subwfb	postdec2,f,c
  6815                           
  6816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  6817                           ;stkvar	_x @ sp[(-20)+-11]
  6818                           ;stkvar	_i @ sp[(-20)+14]
  6819  002E12  0EFA               	movlw	-6
  6820  002E14  006F FF8C  F045    	movff	plusw1,btemp+11
  6821  002E1A  5045               	movf	btemp+11,w,c
  6822  002E1C  0FD5               	addlw	low _dbuf
  6823  002E1E  6ED9               	movwf	fsr2l,c
  6824  002E20  6ADA               	clrf	fsr2h,c
  6825  002E22  0EE1               	movlw	-31
  6826  002E24  006F FF8F FFDF     	movff	plusw1,indf2
  6827                           
  6828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  6829                           ;stkvar	_i @ sp[(-20)+14]
  6830  002E2A  50E1               	movf	fsr1l,w,c
  6831  002E2C  0FFA               	addlw	-6
  6832  002E2E  6ED9               	movwf	fsr2l,c
  6833  002E30  50E2               	movf	fsr1h,w,c
  6834  002E32  6EDA               	movwf	fsr2h,c
  6835  002E34  0EFF               	movlw	255
  6836  002E36  22DA               	addwfc	fsr2h,f,c
  6837  002E38  06DE               	decf	postinc2,f,c
  6838  002E3A  0E00               	movlw	0
  6839  002E3C  5ADD               	subwfb	postdec2,f,c
  6840                           
  6841                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  6842                           ;stkvar	_i @ sp[(-20)+14]
  6843  002E3E  0EFA               	movlw	-6
  6844  002E40  006F FF8C  F045    	movff	plusw1,btemp+11
  6845  002E46  5045               	movf	btemp+11,w,c
  6846  002E48  0FD5               	addlw	low _dbuf
  6847  002E4A  6ED9               	movwf	fsr2l,c
  6848  002E4C  6ADA               	clrf	fsr2h,c
  6849  002E4E  0E30               	movlw	48
  6850  002E50  6EDF               	movwf	indf2,c
  6851  002E52                     l6542:
  6852                           
  6853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  6854                           ;stkvar	_w @ sp[(-20)+16]
  6855  002E52  0EFC               	movlw	-4
  6856  002E54  006F FF8F FFE6     	movff	plusw1,postinc1
  6857  002E5A  006F FF8F FFE6     	movff	plusw1,postinc1
  6858                           
  6859                           ;stkvar	_i @ sp[(-22)+14]
  6860  002E60  0EF8               	movlw	-8
  6861  002E62  006F FF8C  F045    	movff	plusw1,btemp+11
  6862  002E68  5045               	movf	btemp+11,w,c
  6863  002E6A  0FD5               	addlw	low _dbuf
  6864  002E6C  6EE6               	movwf	postinc1,c
  6865                           
  6866                           ;stkvar	_fp @ sp[(-23)+-2]
  6867  002E6E  0EE7               	movlw	-25
  6868  002E70  006F FF8F FFE6     	movff	plusw1,postinc1
  6869  002E76  006F FF8F FFE6     	movff	plusw1,postinc1
  6870  002E7C  EC80  F022         	call	_pad	;wreg free
  6871                           
  6872                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  6873  002E80  0EE1               	movlw	225
  6874  002E82  26E1               	addwf	fsr1l,f,c
  6875  002E84  0EFF               	movlw	255
  6876  002E86  22E2               	addwfc	fsr1h,f,c
  6877  002E88  0012               	return		;funcret
  6878  002E8A                     __end_of_xtoa:
  6879                           	opt callstack 0
  6880                           
  6881 ;; *************** function _toupper *****************
  6882 ;; Defined at:
  6883 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  c               2  [STACK] int 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  2  [STACK] int 
  6890 ;; Registers used:
  6891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6901 ;;Total ram usage:        0 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    4
  6904 ;; This function calls:
  6905 ;;		_islower
  6906 ;; This function is called by:
  6907 ;;		_xtoa
  6908 ;; This function uses a reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text32
  6912  004C34                     __ptext32:
  6913                           	opt callstack 0
  6914  004C34                     _toupper:
  6915                           	opt callstack 0
  6916                           
  6917                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6918  004C34  52E6               	movf	postinc1,f,c
  6919  004C36  52E6               	movf	postinc1,f,c
  6920                           
  6921                           ;stkvar	_c @ sp[(-2)+-2]
  6922                           
  6923                           ;incstack = 0
  6924  004C38  0EFC               	movlw	-4
  6925  004C3A  50E3               	movf	plusw1,w,c
  6926  004C3C  0F9F               	addlw	159
  6927  004C3E  6E44               	movwf	btemp+10,c
  6928  004C40  0EFD               	movlw	-3
  6929  004C42  006F FF8C  F045    	movff	plusw1,btemp+11
  6930  004C48  0EFF               	movlw	255
  6931  004C4A  2245               	addwfc	btemp+11,f,c
  6932  004C4C  5045               	movf	btemp+11,w,c
  6933  004C4E  E106               	bnz	u2130
  6934  004C50  0E1A               	movlw	26
  6935  004C52  5C44               	subwf	btemp+10,w,c
  6936  004C54  B0D8               	btfsc	status,0,c
  6937  004C56  D002               	goto	u2130
  6938  004C58  0E01               	movlw	1
  6939  004C5A  D001               	goto	u2140
  6940  004C5C                     u2130:
  6941  004C5C  0E00               	movlw	0
  6942  004C5E                     u2140:
  6943  004C5E  6E44               	movwf	btemp+10,c
  6944  004C60  6A45               	clrf	btemp+11,c
  6945                           
  6946                           ;stkvar	_toupper$4029 @ sp[(-2)+0]
  6947  004C62  0EFE               	movlw	-2
  6948  004C64  0060  F113  FFE3   	movff	btemp+10,plusw1
  6949  004C6A  0EFF               	movlw	-1
  6950  004C6C  0060  F117  FFE3   	movff	btemp+11,plusw1
  6951                           
  6952                           ;stkvar	_toupper$4029 @ sp[(-2)+0]
  6953  004C72  0EFE               	movlw	-2
  6954  004C74  006F FF8C  F03A    	movff	plusw1,btemp
  6955  004C7A  0EFF               	movlw	-1
  6956  004C7C  50E3               	movf	plusw1,w,c
  6957  004C7E  103A               	iorwf	btemp,w,c
  6958  004C80  B4D8               	btfsc	status,2,c
  6959  004C82  D00D               	goto	l4490
  6960                           
  6961                           ;stkvar	_c @ sp[(-2)+-2]
  6962  004C84  0EFC               	movlw	-4
  6963  004C86  006F FF8C  F03A    	movff	plusw1,btemp
  6964  004C8C  0EFD               	movlw	-3
  6965  004C8E  006F FF8C  F03B    	movff	plusw1,btemp+1
  6966  004C94  0E5F               	movlw	95
  6967  004C96  163A               	andwf	btemp,f,c
  6968  004C98  0E00               	movlw	0
  6969  004C9A  163B               	andwf	btemp+1,f,c
  6970  004C9C  D008               	goto	l2435
  6971  004C9E                     l4490:
  6972                           
  6973                           ;stkvar	_c @ sp[(-2)+-2]
  6974  004C9E  0EFC               	movlw	-4
  6975  004CA0  006F FF8C  F03A    	movff	plusw1,btemp
  6976  004CA6  0EFD               	movlw	-3
  6977  004CA8  006F FF8C  F03B    	movff	plusw1,btemp+1
  6978  004CAE                     l2435:
  6979                           
  6980                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6981  004CAE  52E5               	movf	postdec1,f,c
  6982  004CB0  52E5               	movf	postdec1,f,c
  6983  004CB2  52E5               	movf	postdec1,f,c
  6984  004CB4  52E5               	movf	postdec1,f,c
  6985  004CB6  0012               	return		;funcret
  6986  004CB8                     __end_of_toupper:
  6987                           	opt callstack 0
  6988                           
  6989 ;; *************** function _islower *****************
  6990 ;; Defined at:
  6991 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  c               2  [STACK] int 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  2  [STACK] int 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7009 ;;Total ram usage:        0 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:    3
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_toupper
  7016 ;; This function uses a reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text33
  7020  005380                     __ptext33:
  7021                           	opt callstack 0
  7022  005380                     _islower:
  7023                           	opt callstack 22
  7024                           
  7025                           ;stkvar	_c @ sp[(0)+-2]
  7026                           
  7027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7028                           ;incstack = 0
  7029  005380  0EFE               	movlw	-2
  7030  005382  50E3               	movf	plusw1,w,c
  7031  005384  0F9F               	addlw	159
  7032  005386  6E44               	movwf	btemp+10,c
  7033  005388  0EFF               	movlw	-1
  7034  00538A  006F FF8C  F045    	movff	plusw1,btemp+11
  7035  005390  0EFF               	movlw	255
  7036  005392  2245               	addwfc	btemp+11,f,c
  7037  005394  5045               	movf	btemp+11,w,c
  7038  005396  E106               	bnz	u2020
  7039  005398  0E1A               	movlw	26
  7040  00539A  5C44               	subwf	btemp+10,w,c
  7041  00539C  B0D8               	btfsc	status,0,c
  7042  00539E  D002               	goto	u2020
  7043  0053A0  0E01               	movlw	1
  7044  0053A2  D001               	goto	u2030
  7045  0053A4                     u2020:
  7046  0053A4  0E00               	movlw	0
  7047  0053A6                     u2030:
  7048  0053A6  6E3A               	movwf	btemp,c
  7049  0053A8  6A3B               	clrf	btemp+1,c
  7050                           
  7051                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7052  0053AA  52E5               	movf	postdec1,f,c
  7053  0053AC  52E5               	movf	postdec1,f,c
  7054  0053AE  0012               	return		;funcret
  7055  0053B0                     __end_of_islower:
  7056                           	opt callstack 0
  7057                           
  7058 ;; *************** function _isupper *****************
  7059 ;; Defined at:
  7060 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  c               2  [STACK] int 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;		None
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  2  [STACK] int 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7078 ;;Total ram usage:        0 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    3
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_xtoa
  7085 ;; This function uses a reentrant model
  7086 ;;
  7087                           
  7088                           	psect	text34
  7089  0053B0                     __ptext34:
  7090                           	opt callstack 0
  7091  0053B0                     _isupper:
  7092                           	opt callstack 23
  7093                           
  7094                           ;stkvar	_c @ sp[(0)+-2]
  7095                           
  7096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7097                           ;incstack = 0
  7098  0053B0  0EFE               	movlw	-2
  7099  0053B2  50E3               	movf	plusw1,w,c
  7100  0053B4  0FBF               	addlw	191
  7101  0053B6  6E44               	movwf	btemp+10,c
  7102  0053B8  0EFF               	movlw	-1
  7103  0053BA  006F FF8C  F045    	movff	plusw1,btemp+11
  7104  0053C0  0EFF               	movlw	255
  7105  0053C2  2245               	addwfc	btemp+11,f,c
  7106  0053C4  5045               	movf	btemp+11,w,c
  7107  0053C6  E106               	bnz	u2090
  7108  0053C8  0E1A               	movlw	26
  7109  0053CA  5C44               	subwf	btemp+10,w,c
  7110  0053CC  B0D8               	btfsc	status,0,c
  7111  0053CE  D002               	goto	u2090
  7112  0053D0  0E01               	movlw	1
  7113  0053D2  D001               	goto	u2100
  7114  0053D4                     u2090:
  7115  0053D4  0E00               	movlw	0
  7116  0053D6                     u2100:
  7117  0053D6  6E3A               	movwf	btemp,c
  7118  0053D8  6A3B               	clrf	btemp+1,c
  7119                           
  7120                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7121  0053DA  52E5               	movf	postdec1,f,c
  7122  0053DC  52E5               	movf	postdec1,f,c
  7123  0053DE  0012               	return		;funcret
  7124  0053E0                     __end_of_isupper:
  7125                           	opt callstack 0
  7126                           
  7127 ;; *************** function _isalpha *****************
  7128 ;; Defined at:
  7129 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  c               2  [STACK] int 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  2  [STACK] int 
  7136 ;; Registers used:
  7137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7147 ;;Total ram usage:        0 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    3
  7150 ;; This function calls:
  7151 ;;		Nothing
  7152 ;; This function is called by:
  7153 ;;		_xtoa
  7154 ;; This function uses a reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text35
  7158  005202                     __ptext35:
  7159                           	opt callstack 0
  7160  005202                     _isalpha:
  7161                           	opt callstack 23
  7162                           
  7163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7164                           ;incstack = 0
  7165  005202  0E9F               	movlw	159
  7166  005204  6E44               	movwf	btemp+10,c
  7167  005206  0EFF               	movlw	255
  7168  005208  6E45               	movwf	btemp+11,c
  7169                           
  7170                           ;stkvar	_c @ sp[(0)+-2]
  7171  00520A  0EFE               	movlw	-2
  7172  00520C  006F FF8C  F042    	movff	plusw1,btemp+8
  7173  005212  0EFF               	movlw	-1
  7174  005214  006F FF8C  F043    	movff	plusw1,btemp+9
  7175  00521A  0E20               	movlw	32
  7176  00521C  1242               	iorwf	btemp+8,f,c
  7177  00521E  0E00               	movlw	0
  7178  005220  1243               	iorwf	btemp+9,f,c
  7179  005222  5044               	movf	btemp+10,w,c
  7180  005224  2642               	addwf	btemp+8,f,c
  7181  005226  5045               	movf	btemp+11,w,c
  7182  005228  2243               	addwfc	btemp+9,f,c
  7183  00522A  5043               	movf	btemp+9,w,c
  7184  00522C  E106               	bnz	u2110
  7185  00522E  0E1A               	movlw	26
  7186  005230  5C42               	subwf	btemp+8,w,c
  7187  005232  B0D8               	btfsc	status,0,c
  7188  005234  D002               	goto	u2110
  7189  005236  0E01               	movlw	1
  7190  005238  D001               	goto	u2120
  7191  00523A                     u2110:
  7192  00523A  0E00               	movlw	0
  7193  00523C                     u2120:
  7194  00523C  6E3A               	movwf	btemp,c
  7195  00523E  6A3B               	clrf	btemp+1,c
  7196                           
  7197                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7198  005240  52E5               	movf	postdec1,f,c
  7199  005242  52E5               	movf	postdec1,f,c
  7200  005244  0012               	return		;funcret
  7201  005246                     __end_of_isalpha:
  7202                           	opt callstack 0
  7203                           
  7204 ;; *************** function _stoa *****************
  7205 ;; Defined at:
  7206 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7209 ;;		 -> f(5), NULL(0), 
  7210 ;;  s               2  [STACK] PTR unsigned char 
  7211 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  nuls            7  [STACK] unsigned char [7]
  7214 ;;  l               2  [STACK] int 
  7215 ;;  p               2  [STACK] int 
  7216 ;;  cp              2  [STACK] PTR unsigned char 
  7217 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), V(80), 
  7218 ;;  w               2  [STACK] int 
  7219 ;;  i               2  [STACK] int 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  2  [STACK] int 
  7222 ;; Registers used:
  7223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/1
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;Total ram usage:        0 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    6
  7236 ;; This function calls:
  7237 ;;		_fputc
  7238 ;;		_strlen
  7239 ;; This function is called by:
  7240 ;;		_vfpfcnvrt
  7241 ;; This function uses a reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text36
  7245  003176                     __ptext36:
  7246                           	opt callstack 0
  7247  003176                     _stoa:
  7248                           	opt callstack 0
  7249                           
  7250                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7251  003176  0E11               	movlw	17
  7252  003178  26E1               	addwf	fsr1l,f,c
  7253  00317A  0E00               	movlw	0
  7254  00317C  22E2               	addwfc	fsr1h,f,c
  7255                           
  7256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7257                           
  7258                           ;incstack = 0
  7259  00317E  EE20  F0F5         	lfsr	2,stoa@F1139
  7260                           
  7261                           ;stkvar	_nuls @ sp[(-17)+0]
  7262  003182  0E07               	movlw	7
  7263  003184  6E3A               	movwf	btemp,c
  7264  003186  0EEF               	movlw	-17
  7265  003188                     us408999:
  7266  003188  006F FF7B FFE3     	movff	postinc2,plusw1
  7267  00318E  28E8               	incf	wreg,w,c
  7268  003190  2E3A               	decfsz	btemp,f,c
  7269  003192  D7FA               	bra	us408999
  7270                           
  7271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7272                           ;stkvar	_s @ sp[(-17)+-4]
  7273  003194  0EEB               	movlw	-21
  7274  003196  006F FF8C  F044    	movff	plusw1,btemp+10
  7275  00319C  0EEC               	movlw	-20
  7276  00319E  006F FF8C  F045    	movff	plusw1,btemp+11
  7277                           
  7278                           ;stkvar	_cp @ sp[(-17)+11]
  7279  0031A4  0EFB               	movlw	-5
  7280  0031A6  0060  F117  FFE3   	movff	btemp+11,plusw1
  7281  0031AC  0EFA               	movlw	-6
  7282  0031AE  0060  F113  FFE3   	movff	btemp+10,plusw1
  7283                           
  7284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7285                           ;stkvar	_cp @ sp[(-17)+11]
  7286  0031B4  0EFA               	movlw	-6
  7287  0031B6  006F FF8C  F03A    	movff	plusw1,btemp
  7288  0031BC  0EFB               	movlw	-5
  7289  0031BE  50E3               	movf	plusw1,w,c
  7290  0031C0  103A               	iorwf	btemp,w,c
  7291  0031C2  A4D8               	btfss	status,2,c
  7292  0031C4  D00E               	goto	l6430
  7293                           
  7294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7295                           ;stkvar	_nuls @ sp[(-17)+0]
  7296  0031C6  0EEF               	movlw	239
  7297  0031C8  24E1               	addwf	fsr1l,w,c
  7298  0031CA  6E44               	movwf	btemp+10,c
  7299  0031CC  0EFF               	movlw	255
  7300  0031CE  20E2               	addwfc	fsr1h,w,c
  7301  0031D0  6E45               	movwf	btemp+11,c
  7302                           
  7303                           ;stkvar	_cp @ sp[(-17)+11]
  7304  0031D2  0EFB               	movlw	-5
  7305  0031D4  0060  F117  FFE3   	movff	btemp+11,plusw1
  7306  0031DA  0EFA               	movlw	-6
  7307  0031DC  0060  F113  FFE3   	movff	btemp+10,plusw1
  7308  0031E2                     l6430:
  7309                           
  7310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7311                           ;stkvar	_cp @ sp[(-17)+11]
  7312  0031E2  0EFA               	movlw	-6
  7313  0031E4  006F FF8F FFE6     	movff	plusw1,postinc1
  7314  0031EA  006F FF8F FFE6     	movff	plusw1,postinc1
  7315  0031F0  EC5C  F026         	call	_strlen	;wreg free
  7316                           
  7317                           ;stkvar	_l @ sp[(-17)+7]
  7318  0031F4  0EF6               	movlw	-10
  7319  0031F6  0060  F0EB  FFE3   	movff	btemp,plusw1
  7320  0031FC  0EF7               	movlw	-9
  7321  0031FE  0060  F0EF  FFE3   	movff	btemp+1,plusw1
  7322                           
  7323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7324                           ;stkvar	_p @ sp[(-17)+9]
  7325  003204  0EF8               	movlw	-8
  7326  003206  0060  F09F  FFE3   	movff	_prec,plusw1
  7327  00320C  0EF9               	movlw	-7
  7328  00320E  0060  F0A3  FFE3   	movff	_prec+1,plusw1
  7329                           
  7330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7331                           ;stkvar	_p @ sp[(-17)+9]
  7332  003214  0EF9               	movlw	-7
  7333  003216  BEE3               	btfsc	plusw1,7,c
  7334  003218  D023               	goto	l1553
  7335                           
  7336                           ;stkvar	_l @ sp[(-17)+7]
  7337                           ;stkvar	_p @ sp[(-17)+9]
  7338  00321A  50E1               	movf	fsr1l,w,c
  7339  00321C  0FF8               	addlw	-8
  7340  00321E  6ED9               	movwf	fsr2l,c
  7341  003220  50E2               	movf	fsr1h,w,c
  7342  003222  6EDA               	movwf	fsr2h,c
  7343  003224  0EFF               	movlw	255
  7344  003226  22DA               	addwfc	fsr2h,f,c
  7345  003228  0EF6               	movlw	-10
  7346  00322A  50E3               	movf	plusw1,w,c
  7347  00322C  5CDE               	subwf	postinc2,w,c
  7348  00322E  50DE               	movf	postinc2,w,c
  7349  003230  0A80               	xorlw	128
  7350  003232  6E3A               	movwf	btemp,c
  7351  003234  0EF7               	movlw	-9
  7352  003236  50E3               	movf	plusw1,w,c
  7353  003238  0A80               	xorlw	128
  7354  00323A  583A               	subwfb	btemp,w,c
  7355  00323C  B0D8               	btfsc	status,0,c
  7356  00323E  D010               	goto	l1553
  7357                           
  7358                           ;stkvar	_p @ sp[(-17)+9]
  7359                           ;stkvar	_l @ sp[(-17)+7]
  7360  003240  0EF8               	movlw	-8
  7361  003242  006F FF8C  F03A    	movff	plusw1,btemp
  7362  003248  0EF6               	movlw	-10
  7363  00324A  0060  F0EB  FFE3   	movff	btemp,plusw1
  7364  003250  0EF9               	movlw	-7
  7365  003252  006F FF8C  F03A    	movff	plusw1,btemp
  7366  003258  0EF7               	movlw	-9
  7367  00325A  0060  F0EB  FFE3   	movff	btemp,plusw1
  7368  003260                     l1553:
  7369                           
  7370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7371                           ;stkvar	_l @ sp[(-17)+7]
  7372                           ;stkvar	_p @ sp[(-17)+9]
  7373  003260  0EF6               	movlw	-10
  7374  003262  006F FF8C  F03A    	movff	plusw1,btemp
  7375  003268  0EF8               	movlw	-8
  7376  00326A  0060  F0EB  FFE3   	movff	btemp,plusw1
  7377  003270  0EF7               	movlw	-9
  7378  003272  006F FF8C  F03A    	movff	plusw1,btemp
  7379  003278  0EF9               	movlw	-7
  7380  00327A  0060  F0EB  FFE3   	movff	btemp,plusw1
  7381                           
  7382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7383                           ;stkvar	_w @ sp[(-17)+13]
  7384  003280  0EFC               	movlw	-4
  7385  003282  0060  F097  FFE3   	movff	_width,plusw1
  7386  003288  0EFD               	movlw	-3
  7387  00328A  0060  F09B  FFE3   	movff	_width+1,plusw1
  7388                           
  7389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7390  003290  A029               	btfss	_flags,0,c
  7391  003292  D01F               	goto	l6450
  7392  003294  D031               	goto	u4130
  7393  003296                     l6446:
  7394                           
  7395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7396                           ;stkvar	_fp @ sp[(-17)+-2]
  7397  003296  0EED               	movlw	-19
  7398  003298  006F FF8F FFE6     	movff	plusw1,postinc1
  7399  00329E  006F FF8F FFE6     	movff	plusw1,postinc1
  7400  0032A4  0E20               	movlw	32
  7401  0032A6  6EE6               	movwf	postinc1,c
  7402  0032A8  0E00               	movlw	0
  7403  0032AA  6EE6               	movwf	postinc1,c
  7404  0032AC  ECFA  F021         	call	_fputc	;wreg free
  7405                           
  7406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7407                           ;stkvar	_l @ sp[(-17)+7]
  7408  0032B0  0EF6               	movlw	-10
  7409  0032B2  50E3               	movf	plusw1,w,c
  7410  0032B4  0F01               	addlw	1
  7411  0032B6  6E3A               	movwf	btemp,c
  7412  0032B8  0EF6               	movlw	-10
  7413  0032BA  0060  F0EB  FFE3   	movff	btemp,plusw1
  7414  0032C0  6A3A               	clrf	btemp,c
  7415  0032C2  0EF7               	movlw	-9
  7416  0032C4  50E3               	movf	plusw1,w,c
  7417  0032C6  203A               	addwfc	btemp,w,c
  7418  0032C8  6E3A               	movwf	btemp,c
  7419  0032CA  0EF7               	movlw	-9
  7420  0032CC  0060  F0EB  FFE3   	movff	btemp,plusw1
  7421  0032D2                     l6450:
  7422                           
  7423                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7424                           ;stkvar	_w @ sp[(-17)+13]
  7425                           ;stkvar	_l @ sp[(-17)+7]
  7426  0032D2  50E1               	movf	fsr1l,w,c
  7427  0032D4  0FF6               	addlw	-10
  7428  0032D6  6ED9               	movwf	fsr2l,c
  7429  0032D8  50E2               	movf	fsr1h,w,c
  7430  0032DA  6EDA               	movwf	fsr2h,c
  7431  0032DC  0EFF               	movlw	255
  7432  0032DE  22DA               	addwfc	fsr2h,f,c
  7433  0032E0  0EFC               	movlw	-4
  7434  0032E2  50E3               	movf	plusw1,w,c
  7435  0032E4  5CDE               	subwf	postinc2,w,c
  7436  0032E6  50DE               	movf	postinc2,w,c
  7437  0032E8  0A80               	xorlw	128
  7438  0032EA  6E3A               	movwf	btemp,c
  7439  0032EC  0EFD               	movlw	-3
  7440  0032EE  50E3               	movf	plusw1,w,c
  7441  0032F0  0A80               	xorlw	128
  7442  0032F2  583A               	subwfb	btemp,w,c
  7443  0032F4  A0D8               	btfss	status,0,c
  7444  0032F6  D7CF               	goto	l6446
  7445  0032F8                     u4130:
  7446                           
  7447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7448                           ;stkvar	_i @ sp[(-17)+15]
  7449  0032F8  0EFE               	movlw	-2
  7450  0032FA  6AE3               	clrf	plusw1,c
  7451  0032FC  0EFF               	movlw	-1
  7452  0032FE  6AE3               	clrf	plusw1,c
  7453                           
  7454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7455  003300  D037               	goto	l6460
  7456  003302                     l6454:
  7457                           
  7458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7459                           ;stkvar	_fp @ sp[(-17)+-2]
  7460  003302  0EED               	movlw	-19
  7461  003304  006F FF8F FFE6     	movff	plusw1,postinc1
  7462  00330A  006F FF8F FFE6     	movff	plusw1,postinc1
  7463                           
  7464                           ;stkvar	_cp @ sp[(-19)+11]
  7465  003310  0EF8               	movlw	-8
  7466  003312  006F FF8F FFD9     	movff	plusw1,fsr2l
  7467  003318  0EF9               	movlw	-7
  7468  00331A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7469  003320  50DF               	movf	indf2,w,c
  7470  003322  6EE6               	movwf	postinc1,c
  7471  003324  0E00               	movlw	0
  7472  003326  6EE6               	movwf	postinc1,c
  7473  003328  ECFA  F021         	call	_fputc	;wreg free
  7474                           
  7475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7476                           ;stkvar	_cp @ sp[(-17)+11]
  7477  00332C  0EFA               	movlw	-6
  7478  00332E  50E3               	movf	plusw1,w,c
  7479  003330  0F01               	addlw	1
  7480  003332  6E3A               	movwf	btemp,c
  7481  003334  0EFA               	movlw	-6
  7482  003336  0060  F0EB  FFE3   	movff	btemp,plusw1
  7483  00333C  6A3A               	clrf	btemp,c
  7484  00333E  0EFB               	movlw	-5
  7485  003340  50E3               	movf	plusw1,w,c
  7486  003342  203A               	addwfc	btemp,w,c
  7487  003344  6E3A               	movwf	btemp,c
  7488  003346  0EFB               	movlw	-5
  7489  003348  0060  F0EB  FFE3   	movff	btemp,plusw1
  7490                           
  7491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7492                           ;stkvar	_i @ sp[(-17)+15]
  7493  00334E  0EFE               	movlw	-2
  7494  003350  50E3               	movf	plusw1,w,c
  7495  003352  0F01               	addlw	1
  7496  003354  6E3A               	movwf	btemp,c
  7497  003356  0EFE               	movlw	-2
  7498  003358  0060  F0EB  FFE3   	movff	btemp,plusw1
  7499  00335E  6A3A               	clrf	btemp,c
  7500  003360  0EFF               	movlw	-1
  7501  003362  50E3               	movf	plusw1,w,c
  7502  003364  203A               	addwfc	btemp,w,c
  7503  003366  6E3A               	movwf	btemp,c
  7504  003368  0EFF               	movlw	-1
  7505  00336A  0060  F0EB  FFE3   	movff	btemp,plusw1
  7506  003370                     l6460:
  7507                           
  7508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7509                           ;stkvar	_p @ sp[(-17)+9]
  7510                           ;stkvar	_i @ sp[(-17)+15]
  7511  003370  50E1               	movf	fsr1l,w,c
  7512  003372  0FFE               	addlw	-2
  7513  003374  6ED9               	movwf	fsr2l,c
  7514  003376  50E2               	movf	fsr1h,w,c
  7515  003378  6EDA               	movwf	fsr2h,c
  7516  00337A  0EFF               	movlw	255
  7517  00337C  22DA               	addwfc	fsr2h,f,c
  7518  00337E  0EF8               	movlw	-8
  7519  003380  50E3               	movf	plusw1,w,c
  7520  003382  5CDE               	subwf	postinc2,w,c
  7521  003384  50DE               	movf	postinc2,w,c
  7522  003386  0A80               	xorlw	128
  7523  003388  6E3A               	movwf	btemp,c
  7524  00338A  0EF9               	movlw	-7
  7525  00338C  50E3               	movf	plusw1,w,c
  7526  00338E  0A80               	xorlw	128
  7527  003390  583A               	subwfb	btemp,w,c
  7528  003392  A0D8               	btfss	status,0,c
  7529  003394  D7B6               	goto	l6454
  7530                           
  7531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7532  003396  B029               	btfsc	_flags,0,c
  7533  003398  D01F               	goto	l6468
  7534  00339A  D031               	goto	u4160
  7535  00339C                     l6464:
  7536                           
  7537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7538                           ;stkvar	_fp @ sp[(-17)+-2]
  7539  00339C  0EED               	movlw	-19
  7540  00339E  006F FF8F FFE6     	movff	plusw1,postinc1
  7541  0033A4  006F FF8F FFE6     	movff	plusw1,postinc1
  7542  0033AA  0E20               	movlw	32
  7543  0033AC  6EE6               	movwf	postinc1,c
  7544  0033AE  0E00               	movlw	0
  7545  0033B0  6EE6               	movwf	postinc1,c
  7546  0033B2  ECFA  F021         	call	_fputc	;wreg free
  7547                           
  7548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7549                           ;stkvar	_l @ sp[(-17)+7]
  7550  0033B6  0EF6               	movlw	-10
  7551  0033B8  50E3               	movf	plusw1,w,c
  7552  0033BA  0F01               	addlw	1
  7553  0033BC  6E3A               	movwf	btemp,c
  7554  0033BE  0EF6               	movlw	-10
  7555  0033C0  0060  F0EB  FFE3   	movff	btemp,plusw1
  7556  0033C6  6A3A               	clrf	btemp,c
  7557  0033C8  0EF7               	movlw	-9
  7558  0033CA  50E3               	movf	plusw1,w,c
  7559  0033CC  203A               	addwfc	btemp,w,c
  7560  0033CE  6E3A               	movwf	btemp,c
  7561  0033D0  0EF7               	movlw	-9
  7562  0033D2  0060  F0EB  FFE3   	movff	btemp,plusw1
  7563  0033D8                     l6468:
  7564                           
  7565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7566                           ;stkvar	_w @ sp[(-17)+13]
  7567                           ;stkvar	_l @ sp[(-17)+7]
  7568  0033D8  50E1               	movf	fsr1l,w,c
  7569  0033DA  0FF6               	addlw	-10
  7570  0033DC  6ED9               	movwf	fsr2l,c
  7571  0033DE  50E2               	movf	fsr1h,w,c
  7572  0033E0  6EDA               	movwf	fsr2h,c
  7573  0033E2  0EFF               	movlw	255
  7574  0033E4  22DA               	addwfc	fsr2h,f,c
  7575  0033E6  0EFC               	movlw	-4
  7576  0033E8  50E3               	movf	plusw1,w,c
  7577  0033EA  5CDE               	subwf	postinc2,w,c
  7578  0033EC  50DE               	movf	postinc2,w,c
  7579  0033EE  0A80               	xorlw	128
  7580  0033F0  6E3A               	movwf	btemp,c
  7581  0033F2  0EFD               	movlw	-3
  7582  0033F4  50E3               	movf	plusw1,w,c
  7583  0033F6  0A80               	xorlw	128
  7584  0033F8  583A               	subwfb	btemp,w,c
  7585  0033FA  A0D8               	btfss	status,0,c
  7586  0033FC  D7CF               	goto	l6464
  7587  0033FE                     u4160:
  7588                           
  7589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  7590                           ;stkvar	_l @ sp[(-17)+7]
  7591  0033FE  0EF6               	movlw	-10
  7592  003400  006F FF8C  F03A    	movff	plusw1,btemp
  7593  003406  0EF7               	movlw	-9
  7594  003408  006F FF8C  F03B    	movff	plusw1,btemp+1
  7595                           
  7596                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7597  00340E  0EEB               	movlw	235
  7598  003410  26E1               	addwf	fsr1l,f,c
  7599  003412  0EFF               	movlw	255
  7600  003414  22E2               	addwfc	fsr1h,f,c
  7601  003416  0012               	return		;funcret
  7602  003418                     __end_of_stoa:
  7603                           	opt callstack 0
  7604                           
  7605 ;; *************** function _dtoa *****************
  7606 ;; Defined at:
  7607 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7610 ;;		 -> f(5), NULL(0), 
  7611 ;;  d               8  [STACK] long long 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  n               8  [STACK] long long 
  7614 ;;  i               2  [STACK] int 
  7615 ;;  s               2  [STACK] int 
  7616 ;;  w               2  [STACK] int 
  7617 ;;  p               2  [STACK] int 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  2  [STACK] int 
  7620 ;; Registers used:
  7621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, prodl
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/1
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7631 ;;Total ram usage:        0 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    8
  7634 ;; This function calls:
  7635 ;;		___aodiv
  7636 ;;		___aomod
  7637 ;;		_abs
  7638 ;;		_pad
  7639 ;; This function is called by:
  7640 ;;		_vfpfcnvrt
  7641 ;; This function uses a reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text37
  7645  0026B0                     __ptext37:
  7646                           	opt callstack 0
  7647  0026B0                     _dtoa:
  7648                           	opt callstack 0
  7649                           
  7650                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7651  0026B0  0E12               	movlw	18
  7652  0026B2  26E1               	addwf	fsr1l,f,c
  7653  0026B4  0E00               	movlw	0
  7654  0026B6  22E2               	addwfc	fsr1h,f,c
  7655                           
  7656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7657                           ;stkvar	_d @ sp[(-18)+-10]
  7658                           
  7659                           ;incstack = 0
  7660  0026B8  0EE4               	movlw	228
  7661  0026BA  24E1               	addwf	fsr1l,w,c
  7662  0026BC  6ED9               	movwf	fsr2l,c
  7663  0026BE  0EFF               	movlw	255
  7664  0026C0  20E2               	addwfc	fsr1h,w,c
  7665  0026C2  6EDA               	movwf	fsr2h,c
  7666                           
  7667                           ;stkvar	_n @ sp[(-18)+2]
  7668  0026C4  0E08               	movlw	8
  7669  0026C6  6E3A               	movwf	btemp,c
  7670  0026C8  0EF0               	movlw	-16
  7671  0026CA                     us391999:
  7672  0026CA  006F FF7B FFE3     	movff	postinc2,plusw1
  7673  0026D0  28E8               	incf	wreg,w,c
  7674  0026D2  2E3A               	decfsz	btemp,f,c
  7675  0026D4  D7FA               	bra	us391999
  7676                           
  7677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7678                           ;stkvar	_n @ sp[(-18)+2]
  7679  0026D6  0EF7               	movlw	-9
  7680  0026D8  AEE3               	btfss	plusw1,7,c
  7681  0026DA  D002               	goto	u3920
  7682  0026DC  0E01               	movlw	1
  7683  0026DE  D001               	goto	u3930
  7684  0026E0                     u3920:
  7685  0026E0  0E00               	movlw	0
  7686  0026E2                     u3930:
  7687  0026E2  6E44               	movwf	btemp+10,c
  7688  0026E4  6A45               	clrf	btemp+11,c
  7689                           
  7690                           ;stkvar	_s @ sp[(-18)+12]
  7691  0026E6  0EFA               	movlw	-6
  7692  0026E8  0060  F113  FFE3   	movff	btemp+10,plusw1
  7693  0026EE  0EFB               	movlw	-5
  7694  0026F0  0060  F117  FFE3   	movff	btemp+11,plusw1
  7695                           
  7696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7697                           ;stkvar	_s @ sp[(-18)+12]
  7698  0026F6  0EFA               	movlw	-6
  7699  0026F8  006F FF8C  F03A    	movff	plusw1,btemp
  7700  0026FE  0EFB               	movlw	-5
  7701  002700  50E3               	movf	plusw1,w,c
  7702  002702  103A               	iorwf	btemp,w,c
  7703  002704  B4D8               	btfsc	status,2,c
  7704  002706  D025               	goto	u3950
  7705                           
  7706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7707                           ;stkvar	_n @ sp[(-18)+2]
  7708                           ;stkvar	_n @ sp[(-18)+2]
  7709  002708  0EF0               	movlw	-16
  7710  00270A  6CE3               	negf	plusw1,c
  7711  00270C  0EF1               	movlw	-15
  7712  00270E  1EE3               	comf	plusw1,f,c
  7713  002710  0EF2               	movlw	-14
  7714  002712  1EE3               	comf	plusw1,f,c
  7715  002714  0EF3               	movlw	-13
  7716  002716  1EE3               	comf	plusw1,f,c
  7717  002718  0EF4               	movlw	-12
  7718  00271A  1EE3               	comf	plusw1,f,c
  7719  00271C  0EF5               	movlw	-11
  7720  00271E  1EE3               	comf	plusw1,f,c
  7721  002720  0EF6               	movlw	-10
  7722  002722  1EE3               	comf	plusw1,f,c
  7723  002724  0EF7               	movlw	-9
  7724  002726  1EE3               	comf	plusw1,f,c
  7725  002728  E314               	bnc	u3950
  7726  00272A  0EF1               	movlw	-15
  7727  00272C  2AE3               	incf	plusw1,f,c
  7728  00272E  E311               	bnc	u3950
  7729  002730  0EF2               	movlw	-14
  7730  002732  2AE3               	incf	plusw1,f,c
  7731  002734  E30E               	bnc	u3950
  7732  002736  0EF3               	movlw	-13
  7733  002738  2AE3               	incf	plusw1,f,c
  7734  00273A  E30B               	bnc	u3950
  7735  00273C  0EF4               	movlw	-12
  7736  00273E  2AE3               	incf	plusw1,f,c
  7737  002740  E308               	bnc	u3950
  7738  002742  0EF5               	movlw	-11
  7739  002744  2AE3               	incf	plusw1,f,c
  7740  002746  E305               	bnc	u3950
  7741  002748  0EF6               	movlw	-10
  7742  00274A  2AE3               	incf	plusw1,f,c
  7743  00274C  E302               	bnc	u3950
  7744  00274E  0EF7               	movlw	-9
  7745  002750  2AE3               	incf	plusw1,f,c
  7746  002752                     u3950:
  7747                           
  7748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7749  002752  AE28               	btfss	_prec+1,7,c
  7750                           
  7751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7752  002754  9229               	bcf	_flags,1,c
  7753                           
  7754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7755  002756  BE28               	btfsc	_prec+1,7,c
  7756  002758  D005               	goto	u3970
  7757  00275A  5028               	movf	_prec+1,w,c
  7758  00275C  E110               	bnz	l6372
  7759  00275E  0427               	decf	_prec,w,c
  7760  002760  B0D8               	btfsc	status,0,c
  7761  002762  D00D               	goto	l6372
  7762  002764                     u3970:
  7763  002764  0E01               	movlw	1
  7764  002766  6E44               	movwf	btemp+10,c
  7765  002768  0E00               	movlw	0
  7766  00276A  6E45               	movwf	btemp+11,c
  7767                           
  7768                           ;stkvar	_p @ sp[(-18)+16]
  7769  00276C  0EFE               	movlw	-2
  7770  00276E  0060  F113  FFE3   	movff	btemp+10,plusw1
  7771  002774  0EFF               	movlw	-1
  7772  002776  0060  F117  FFE3   	movff	btemp+11,plusw1
  7773  00277C  D008               	goto	l1526
  7774  00277E                     l6372:
  7775                           
  7776                           ;stkvar	_p @ sp[(-18)+16]
  7777  00277E  0EFE               	movlw	-2
  7778  002780  0060  F09F  FFE3   	movff	_prec,plusw1
  7779  002786  0EFF               	movlw	-1
  7780  002788  0060  F0A3  FFE3   	movff	_prec+1,plusw1
  7781  00278E                     l1526:
  7782                           
  7783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7784                           ;stkvar	_w @ sp[(-18)+14]
  7785  00278E  0EFC               	movlw	-4
  7786  002790  0060  F097  FFE3   	movff	_width,plusw1
  7787  002796  0EFD               	movlw	-3
  7788  002798  0060  F09B  FFE3   	movff	_width+1,plusw1
  7789                           
  7790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7791                           ;stkvar	_s @ sp[(-18)+12]
  7792  00279E  0EFA               	movlw	-6
  7793  0027A0  006F FF8C  F03A    	movff	plusw1,btemp
  7794  0027A6  0EFB               	movlw	-5
  7795  0027A8  50E3               	movf	plusw1,w,c
  7796  0027AA  103A               	iorwf	btemp,w,c
  7797  0027AC  A4D8               	btfss	status,2,c
  7798  0027AE  D002               	goto	u3990
  7799  0027B0  A429               	btfss	_flags,2,c
  7800  0027B2  D00A               	goto	l6380
  7801  0027B4                     u3990:
  7802                           
  7803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  7804                           ;stkvar	_w @ sp[(-18)+14]
  7805  0027B4  50E1               	movf	fsr1l,w,c
  7806  0027B6  0FFC               	addlw	-4
  7807  0027B8  6ED9               	movwf	fsr2l,c
  7808  0027BA  50E2               	movf	fsr1h,w,c
  7809  0027BC  6EDA               	movwf	fsr2h,c
  7810  0027BE  0EFF               	movlw	255
  7811  0027C0  22DA               	addwfc	fsr2h,f,c
  7812  0027C2  06DE               	decf	postinc2,f,c
  7813  0027C4  0E00               	movlw	0
  7814  0027C6  5ADD               	subwfb	postdec2,f,c
  7815  0027C8                     l6380:
  7816                           
  7817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7818  0027C8  0E1F               	movlw	31
  7819  0027CA  6E44               	movwf	btemp+10,c
  7820  0027CC  0E00               	movlw	0
  7821  0027CE  6E45               	movwf	btemp+11,c
  7822                           
  7823                           ;stkvar	_i @ sp[(-18)+10]
  7824  0027D0  0EF8               	movlw	-8
  7825  0027D2  0060  F113  FFE3   	movff	btemp+10,plusw1
  7826  0027D8  0EF9               	movlw	-7
  7827  0027DA  0060  F117  FFE3   	movff	btemp+11,plusw1
  7828                           
  7829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7830  0027E0  0100               	movlb	0	; () banked
  7831  0027E2  6BF4               	clrf	(_dbuf+31)& (0+255),b
  7832                           
  7833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7834  0027E4  D103               	goto	l6394
  7835  0027E6                     l6384:
  7836                           
  7837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  7838                           ;stkvar	_i @ sp[(-18)+10]
  7839  0027E6  50E1               	movf	fsr1l,w,c
  7840  0027E8  0FF8               	addlw	-8
  7841  0027EA  6ED9               	movwf	fsr2l,c
  7842  0027EC  50E2               	movf	fsr1h,w,c
  7843  0027EE  6EDA               	movwf	fsr2h,c
  7844  0027F0  0EFF               	movlw	255
  7845  0027F2  22DA               	addwfc	fsr2h,f,c
  7846  0027F4  06DE               	decf	postinc2,f,c
  7847  0027F6  0E00               	movlw	0
  7848  0027F8  5ADD               	subwfb	postdec2,f,c
  7849                           
  7850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7851  0027FA  0E0A               	movlw	10
  7852  0027FC  6EE6               	movwf	postinc1,c
  7853  0027FE  0E00               	movlw	0
  7854  002800  6EE6               	movwf	postinc1,c
  7855  002802  0E00               	movlw	0
  7856  002804  6EE6               	movwf	postinc1,c
  7857  002806  0E00               	movlw	0
  7858  002808  6EE6               	movwf	postinc1,c
  7859  00280A  0E00               	movlw	0
  7860  00280C  6EE6               	movwf	postinc1,c
  7861  00280E  0E00               	movlw	0
  7862  002810  6EE6               	movwf	postinc1,c
  7863  002812  0E00               	movlw	0
  7864  002814  6EE6               	movwf	postinc1,c
  7865  002816  0E00               	movlw	0
  7866  002818  6EE6               	movwf	postinc1,c
  7867                           
  7868                           ;stkvar	_n @ sp[(-26)+2]
  7869  00281A  50E1               	movf	fsr1l,w,c
  7870  00281C  0FE8               	addlw	-24
  7871  00281E  6ED9               	movwf	fsr2l,c
  7872  002820  50E2               	movf	fsr1h,w,c
  7873  002822  6EDA               	movwf	fsr2h,c
  7874  002824  0EFF               	movlw	255
  7875  002826  22DA               	addwfc	fsr2h,f,c
  7876  002828  006F FF7B FFE6     	movff	postinc2,postinc1
  7877  00282E  006F FF7B FFE6     	movff	postinc2,postinc1
  7878  002834  006F FF7B FFE6     	movff	postinc2,postinc1
  7879  00283A  006F FF7B FFE6     	movff	postinc2,postinc1
  7880  002840  006F FF7B FFE6     	movff	postinc2,postinc1
  7881  002846  006F FF7B FFE6     	movff	postinc2,postinc1
  7882  00284C  006F FF7B FFE6     	movff	postinc2,postinc1
  7883  002852  006F FF7B FFE6     	movff	postinc2,postinc1
  7884  002858  ECD8  F01D         	call	___aomod	;wreg free
  7885  00285C  52E5               	movf	postdec1,f,c
  7886  00285E  006F FF9C  F051    	movff	indf1,btemp+23
  7887  002864  52E5               	movf	postdec1,f,c
  7888  002866  006F FF9C  F050    	movff	indf1,btemp+22
  7889  00286C  52E5               	movf	postdec1,f,c
  7890  00286E  006F FF9C  F04F    	movff	indf1,btemp+21
  7891  002874  52E5               	movf	postdec1,f,c
  7892  002876  006F FF9C  F04E    	movff	indf1,btemp+20
  7893  00287C  52E5               	movf	postdec1,f,c
  7894  00287E  006F FF9C  F04D    	movff	indf1,btemp+19
  7895  002884  52E5               	movf	postdec1,f,c
  7896  002886  006F FF9C  F04C    	movff	indf1,btemp+18
  7897  00288C  52E5               	movf	postdec1,f,c
  7898  00288E  006F FF9C  F04B    	movff	indf1,btemp+17
  7899  002894  52E5               	movf	postdec1,f,c
  7900  002896  006F FF9C  F04A    	movff	indf1,btemp+16
  7901  00289C  0EF8               	movlw	248
  7902  00289E  26E1               	addwf	fsr1l,f,c
  7903  0028A0  0EFF               	movlw	255
  7904  0028A2  22E2               	addwfc	fsr1h,f,c
  7905  0028A4  0060  F128  F044   	movff	btemp+16,btemp+10
  7906  0028AA  0060  F12C  F045   	movff	btemp+17,btemp+11
  7907  0028B0  0060  F113  FFE6   	movff	btemp+10,postinc1
  7908  0028B6  0060  F117  FFE6   	movff	btemp+11,postinc1
  7909  0028BC  ECDE  F028         	call	_abs	;wreg free
  7910  0028C0  0E30               	movlw	48
  7911  0028C2  263A               	addwf	btemp,f,c
  7912                           
  7913                           ;stkvar	_i @ sp[(-18)+10]
  7914  0028C4  0EF8               	movlw	-8
  7915  0028C6  006F FF8C  F045    	movff	plusw1,btemp+11
  7916  0028CC  5045               	movf	btemp+11,w,c
  7917  0028CE  0FD5               	addlw	low _dbuf
  7918  0028D0  6ED9               	movwf	fsr2l,c
  7919  0028D2  6ADA               	clrf	fsr2h,c
  7920  0028D4  0060  F0EB  FFDF   	movff	btemp,indf2
  7921                           
  7922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  7923                           ;stkvar	_p @ sp[(-18)+16]
  7924  0028DA  50E1               	movf	fsr1l,w,c
  7925  0028DC  0FFE               	addlw	-2
  7926  0028DE  6ED9               	movwf	fsr2l,c
  7927  0028E0  50E2               	movf	fsr1h,w,c
  7928  0028E2  6EDA               	movwf	fsr2h,c
  7929  0028E4  0EFF               	movlw	255
  7930  0028E6  22DA               	addwfc	fsr2h,f,c
  7931  0028E8  06DE               	decf	postinc2,f,c
  7932  0028EA  0E00               	movlw	0
  7933  0028EC  5ADD               	subwfb	postdec2,f,c
  7934                           
  7935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  7936                           ;stkvar	_w @ sp[(-18)+14]
  7937  0028EE  50E1               	movf	fsr1l,w,c
  7938  0028F0  0FFC               	addlw	-4
  7939  0028F2  6ED9               	movwf	fsr2l,c
  7940  0028F4  50E2               	movf	fsr1h,w,c
  7941  0028F6  6EDA               	movwf	fsr2h,c
  7942  0028F8  0EFF               	movlw	255
  7943  0028FA  22DA               	addwfc	fsr2h,f,c
  7944  0028FC  06DE               	decf	postinc2,f,c
  7945  0028FE  0E00               	movlw	0
  7946  002900  5ADD               	subwfb	postdec2,f,c
  7947                           
  7948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7949  002902  0E0A               	movlw	10
  7950  002904  6EE6               	movwf	postinc1,c
  7951  002906  0E00               	movlw	0
  7952  002908  6EE6               	movwf	postinc1,c
  7953  00290A  0E00               	movlw	0
  7954  00290C  6EE6               	movwf	postinc1,c
  7955  00290E  0E00               	movlw	0
  7956  002910  6EE6               	movwf	postinc1,c
  7957  002912  0E00               	movlw	0
  7958  002914  6EE6               	movwf	postinc1,c
  7959  002916  0E00               	movlw	0
  7960  002918  6EE6               	movwf	postinc1,c
  7961  00291A  0E00               	movlw	0
  7962  00291C  6EE6               	movwf	postinc1,c
  7963  00291E  0E00               	movlw	0
  7964  002920  6EE6               	movwf	postinc1,c
  7965                           
  7966                           ;stkvar	_n @ sp[(-26)+2]
  7967  002922  50E1               	movf	fsr1l,w,c
  7968  002924  0FE8               	addlw	-24
  7969  002926  6ED9               	movwf	fsr2l,c
  7970  002928  50E2               	movf	fsr1h,w,c
  7971  00292A  6EDA               	movwf	fsr2h,c
  7972  00292C  0EFF               	movlw	255
  7973  00292E  22DA               	addwfc	fsr2h,f,c
  7974  002930  006F FF7B FFE6     	movff	postinc2,postinc1
  7975  002936  006F FF7B FFE6     	movff	postinc2,postinc1
  7976  00293C  006F FF7B FFE6     	movff	postinc2,postinc1
  7977  002942  006F FF7B FFE6     	movff	postinc2,postinc1
  7978  002948  006F FF7B FFE6     	movff	postinc2,postinc1
  7979  00294E  006F FF7B FFE6     	movff	postinc2,postinc1
  7980  002954  006F FF7B FFE6     	movff	postinc2,postinc1
  7981  00295A  006F FF7B FFE6     	movff	postinc2,postinc1
  7982  002960  EC59  F01B         	call	___aodiv	;wreg free
  7983  002964  52E5               	movf	postdec1,f,c
  7984  002966  006F FF9C  F051    	movff	indf1,btemp+23
  7985  00296C  52E5               	movf	postdec1,f,c
  7986  00296E  006F FF9C  F050    	movff	indf1,btemp+22
  7987  002974  52E5               	movf	postdec1,f,c
  7988  002976  006F FF9C  F04F    	movff	indf1,btemp+21
  7989  00297C  52E5               	movf	postdec1,f,c
  7990  00297E  006F FF9C  F04E    	movff	indf1,btemp+20
  7991  002984  52E5               	movf	postdec1,f,c
  7992  002986  006F FF9C  F04D    	movff	indf1,btemp+19
  7993  00298C  52E5               	movf	postdec1,f,c
  7994  00298E  006F FF9C  F04C    	movff	indf1,btemp+18
  7995  002994  52E5               	movf	postdec1,f,c
  7996  002996  006F FF9C  F04B    	movff	indf1,btemp+17
  7997  00299C  52E5               	movf	postdec1,f,c
  7998  00299E  006F FF9C  F04A    	movff	indf1,btemp+16
  7999  0029A4  0EF8               	movlw	248
  8000  0029A6  26E1               	addwf	fsr1l,f,c
  8001  0029A8  0EFF               	movlw	255
  8002  0029AA  22E2               	addwfc	fsr1h,f,c
  8003                           
  8004                           ;stkvar	_n @ sp[(-18)+2]
  8005  0029AC  0EF0               	movlw	-16
  8006  0029AE  0060  F12B  FFE3   	movff	btemp+16,plusw1
  8007  0029B4  0EF1               	movlw	-15
  8008  0029B6  0060  F12F  FFE3   	movff	btemp+17,plusw1
  8009  0029BC  0EF2               	movlw	-14
  8010  0029BE  0060  F133  FFE3   	movff	btemp+18,plusw1
  8011  0029C4  0EF3               	movlw	-13
  8012  0029C6  0060  F137  FFE3   	movff	btemp+19,plusw1
  8013  0029CC  0EF4               	movlw	-12
  8014  0029CE  0060  F13B  FFE3   	movff	btemp+20,plusw1
  8015  0029D4  0EF5               	movlw	-11
  8016  0029D6  0060  F13F  FFE3   	movff	btemp+21,plusw1
  8017  0029DC  0EF6               	movlw	-10
  8018  0029DE  0060  F143  FFE3   	movff	btemp+22,plusw1
  8019  0029E4  0EF7               	movlw	-9
  8020  0029E6  0060  F147  FFE3   	movff	btemp+23,plusw1
  8021  0029EC                     l6394:
  8022                           
  8023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8024                           ;stkvar	_i @ sp[(-18)+10]
  8025  0029EC  0EF9               	movlw	-7
  8026  0029EE  BEE3               	btfsc	plusw1,7,c
  8027  0029F0  D036               	goto	u4040
  8028  0029F2  0EF9               	movlw	-7
  8029  0029F4  50E3               	movf	plusw1,w,c
  8030  0029F6  E104               	bnz	u4000
  8031  0029F8  0EF8               	movlw	-8
  8032  0029FA  04E3               	decf	plusw1,w,c
  8033  0029FC  A0D8               	btfss	status,0,c
  8034  0029FE  D02F               	goto	u4040
  8035  002A00                     u4000:
  8036                           
  8037                           ;stkvar	_n @ sp[(-18)+2]
  8038  002A00  0EF0               	movlw	-16
  8039  002A02  50E3               	movf	plusw1,w,c
  8040  002A04  E115               	bnz	u4011
  8041  002A06  0EF1               	movlw	-15
  8042  002A08  50E3               	movf	plusw1,w,c
  8043  002A0A  E112               	bnz	u4011
  8044  002A0C  0EF2               	movlw	-14
  8045  002A0E  50E3               	movf	plusw1,w,c
  8046  002A10  E10F               	bnz	u4011
  8047  002A12  0EF3               	movlw	-13
  8048  002A14  50E3               	movf	plusw1,w,c
  8049  002A16  E10C               	bnz	u4011
  8050  002A18  0EF4               	movlw	-12
  8051  002A1A  50E3               	movf	plusw1,w,c
  8052  002A1C  E109               	bnz	u4011
  8053  002A1E  0EF5               	movlw	-11
  8054  002A20  50E3               	movf	plusw1,w,c
  8055  002A22  E106               	bnz	u4011
  8056  002A24  0EF6               	movlw	-10
  8057  002A26  50E3               	movf	plusw1,w,c
  8058  002A28  E103               	bnz	u4011
  8059  002A2A  0EF7               	movlw	-9
  8060  002A2C  50E3               	movf	plusw1,w,c
  8061  002A2E  A4D8               	btfss	status,2,c
  8062  002A30                     u4011:
  8063  002A30  D6DA               	goto	l6384
  8064                           
  8065                           ;stkvar	_p @ sp[(-18)+16]
  8066  002A32  0EFF               	movlw	-1
  8067  002A34  BEE3               	btfsc	plusw1,7,c
  8068  002A36  D007               	goto	u4020
  8069  002A38  0EFF               	movlw	-1
  8070  002A3A  50E3               	movf	plusw1,w,c
  8071  002A3C  E103               	bnz	u4021
  8072  002A3E  0EFE               	movlw	-2
  8073  002A40  04E3               	decf	plusw1,w,c
  8074  002A42  B0D8               	btfsc	status,0,c
  8075  002A44                     u4021:
  8076  002A44  D6D0               	goto	l6384
  8077  002A46                     u4020:
  8078                           
  8079                           ;stkvar	_w @ sp[(-18)+14]
  8080  002A46  0EFD               	movlw	-3
  8081  002A48  BEE3               	btfsc	plusw1,7,c
  8082  002A4A  D009               	goto	u4040
  8083  002A4C  0EFD               	movlw	-3
  8084  002A4E  50E3               	movf	plusw1,w,c
  8085  002A50  E104               	bnz	u4030
  8086  002A52  0EFC               	movlw	-4
  8087  002A54  04E3               	decf	plusw1,w,c
  8088  002A56  A0D8               	btfss	status,0,c
  8089  002A58  D002               	goto	u4040
  8090  002A5A                     u4030:
  8091  002A5A  B229               	btfsc	_flags,1,c
  8092  002A5C  D6C4               	goto	l6384
  8093  002A5E                     u4040:
  8094                           
  8095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8096                           ;stkvar	_s @ sp[(-18)+12]
  8097  002A5E  0EFA               	movlw	-6
  8098  002A60  006F FF8C  F03A    	movff	plusw1,btemp
  8099  002A66  0EFB               	movlw	-5
  8100  002A68  50E3               	movf	plusw1,w,c
  8101  002A6A  103A               	iorwf	btemp,w,c
  8102  002A6C  A4D8               	btfss	status,2,c
  8103  002A6E  D002               	goto	u4060
  8104  002A70  A429               	btfss	_flags,2,c
  8105  002A72  D02D               	goto	l6418
  8106  002A74                     u4060:
  8107                           
  8108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8109                           ;stkvar	_i @ sp[(-18)+10]
  8110  002A74  50E1               	movf	fsr1l,w,c
  8111  002A76  0FF8               	addlw	-8
  8112  002A78  6ED9               	movwf	fsr2l,c
  8113  002A7A  50E2               	movf	fsr1h,w,c
  8114  002A7C  6EDA               	movwf	fsr2h,c
  8115  002A7E  0EFF               	movlw	255
  8116  002A80  22DA               	addwfc	fsr2h,f,c
  8117  002A82  06DE               	decf	postinc2,f,c
  8118  002A84  0E00               	movlw	0
  8119  002A86  5ADD               	subwfb	postdec2,f,c
  8120                           
  8121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8122                           ;stkvar	_s @ sp[(-18)+12]
  8123  002A88  0EFA               	movlw	-6
  8124  002A8A  006F FF8C  F03A    	movff	plusw1,btemp
  8125  002A90  0EFB               	movlw	-5
  8126  002A92  50E3               	movf	plusw1,w,c
  8127  002A94  103A               	iorwf	btemp,w,c
  8128  002A96  A4D8               	btfss	status,2,c
  8129  002A98  D002               	goto	l6414
  8130  002A9A  0E2B               	movlw	43
  8131  002A9C  D001               	goto	L15
  8132  002A9E                     l6414:
  8133  002A9E  0E2D               	movlw	45
  8134  002AA0                     L15:
  8135  002AA0  6E44               	movwf	btemp+10,c
  8136  002AA2  0E00               	movlw	0
  8137  002AA4  6E45               	movwf	btemp+11,c
  8138                           
  8139                           ;stkvar	_dtoa$3419 @ sp[(-18)+0]
  8140  002AA6  0EEE               	movlw	-18
  8141  002AA8  0060  F113  FFE3   	movff	btemp+10,plusw1
  8142  002AAE  0EEF               	movlw	-17
  8143  002AB0  0060  F117  FFE3   	movff	btemp+11,plusw1
  8144                           
  8145                           ;stkvar	_dtoa$3419 @ sp[(-18)+0]
  8146                           ;stkvar	_i @ sp[(-18)+10]
  8147  002AB6  0EF8               	movlw	-8
  8148  002AB8  006F FF8C  F045    	movff	plusw1,btemp+11
  8149  002ABE  5045               	movf	btemp+11,w,c
  8150  002AC0  0FD5               	addlw	low _dbuf
  8151  002AC2  6ED9               	movwf	fsr2l,c
  8152  002AC4  6ADA               	clrf	fsr2h,c
  8153  002AC6  0EEE               	movlw	-18
  8154  002AC8  006F FF8F FFDF     	movff	plusw1,indf2
  8155  002ACE                     l6418:
  8156                           
  8157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8158                           ;stkvar	_w @ sp[(-18)+14]
  8159  002ACE  0EFC               	movlw	-4
  8160  002AD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8161  002AD6  006F FF8F FFE6     	movff	plusw1,postinc1
  8162                           
  8163                           ;stkvar	_i @ sp[(-20)+10]
  8164  002ADC  0EF6               	movlw	-10
  8165  002ADE  006F FF8C  F045    	movff	plusw1,btemp+11
  8166  002AE4  5045               	movf	btemp+11,w,c
  8167  002AE6  0FD5               	addlw	low _dbuf
  8168  002AE8  6EE6               	movwf	postinc1,c
  8169                           
  8170                           ;stkvar	_fp @ sp[(-21)+-2]
  8171  002AEA  0EE9               	movlw	-23
  8172  002AEC  006F FF8F FFE6     	movff	plusw1,postinc1
  8173  002AF2  006F FF8F FFE6     	movff	plusw1,postinc1
  8174  002AF8  EC80  F022         	call	_pad	;wreg free
  8175                           
  8176                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8177  002AFC  0EE4               	movlw	228
  8178  002AFE  26E1               	addwf	fsr1l,f,c
  8179  002B00  0EFF               	movlw	255
  8180  002B02  22E2               	addwfc	fsr1h,f,c
  8181  002B04  0012               	return		;funcret
  8182  002B06                     __end_of_dtoa:
  8183                           	opt callstack 0
  8184                           
  8185 ;; *************** function _pad *****************
  8186 ;; Defined at:
  8187 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8190 ;;		 -> f(5), NULL(0), 
  8191 ;;  buf             1  [STACK] PTR unsigned char 
  8192 ;;		 -> dbuf(32), 
  8193 ;;  p               2  [STACK] int 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  w               2  [STACK] int 
  8196 ;;  i               2  [STACK] int 
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  2  [STACK] int 
  8199 ;; Registers used:
  8200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8210 ;;Total ram usage:        0 bytes
  8211 ;; Hardware stack levels used:    1
  8212 ;; Hardware stack levels required when called:    7
  8213 ;; This function calls:
  8214 ;;		_fputc
  8215 ;;		_fputs
  8216 ;;		_strlen
  8217 ;; This function is called by:
  8218 ;;		_dtoa
  8219 ;;		_xtoa
  8220 ;; This function uses a reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text38
  8224  004500                     __ptext38:
  8225                           	opt callstack 0
  8226  004500                     _pad:
  8227                           	opt callstack 0
  8228                           
  8229                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8230  004500  52E6               	movf	postinc1,f,c
  8231  004502  52E6               	movf	postinc1,f,c
  8232  004504  52E6               	movf	postinc1,f,c
  8233  004506  52E6               	movf	postinc1,f,c
  8234                           
  8235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8236                           
  8237                           ;incstack = 0
  8238  004508  A029               	btfss	_flags,0,c
  8239  00450A  D00C               	goto	l6338
  8240                           
  8241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8242                           ;stkvar	_fp @ sp[(-4)+-2]
  8243  00450C  0EFA               	movlw	-6
  8244  00450E  006F FF8F FFE6     	movff	plusw1,postinc1
  8245  004514  006F FF8F FFE6     	movff	plusw1,postinc1
  8246                           
  8247                           ;stkvar	_buf @ sp[(-6)+-3]
  8248  00451A  0EF7               	movlw	-9
  8249  00451C  50E3               	movf	plusw1,w,c
  8250  00451E  6EE6               	movwf	postinc1,c
  8251  004520  EC9E  F026         	call	_fputs	;wreg free
  8252  004524                     l6338:
  8253                           
  8254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8255                           ;stkvar	_p @ sp[(-4)+-5]
  8256  004524  0EF8               	movlw	-8
  8257  004526  BEE3               	btfsc	plusw1,7,c
  8258  004528  D011               	goto	l6342
  8259                           
  8260                           ;stkvar	_p @ sp[(-4)+-5]
  8261                           ;stkvar	_w @ sp[(-4)+0]
  8262  00452A  0EF7               	movlw	-9
  8263  00452C  006F FF8C  F03A    	movff	plusw1,btemp
  8264  004532  0EFC               	movlw	-4
  8265  004534  0060  F0EB  FFE3   	movff	btemp,plusw1
  8266  00453A  0EF8               	movlw	-8
  8267  00453C  006F FF8C  F03A    	movff	plusw1,btemp
  8268  004542  0EFD               	movlw	-3
  8269  004544  0060  F0EB  FFE3   	movff	btemp,plusw1
  8270  00454A  D004               	goto	l1513
  8271  00454C                     l6342:
  8272                           
  8273                           ;stkvar	_w @ sp[(-4)+0]
  8274  00454C  0EFC               	movlw	-4
  8275  00454E  6AE3               	clrf	plusw1,c
  8276  004550  0EFD               	movlw	-3
  8277  004552  6AE3               	clrf	plusw1,c
  8278  004554                     l1513:
  8279                           
  8280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8281                           ;stkvar	_i @ sp[(-4)+2]
  8282  004554  0EFE               	movlw	-2
  8283  004556  6AE3               	clrf	plusw1,c
  8284  004558  0EFF               	movlw	-1
  8285  00455A  6AE3               	clrf	plusw1,c
  8286                           
  8287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8288  00455C  D01E               	goto	l6348
  8289  00455E                     l6344:
  8290                           
  8291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8292                           ;stkvar	_fp @ sp[(-4)+-2]
  8293  00455E  0EFA               	movlw	-6
  8294  004560  006F FF8F FFE6     	movff	plusw1,postinc1
  8295  004566  006F FF8F FFE6     	movff	plusw1,postinc1
  8296  00456C  0E20               	movlw	32
  8297  00456E  6EE6               	movwf	postinc1,c
  8298  004570  0E00               	movlw	0
  8299  004572  6EE6               	movwf	postinc1,c
  8300  004574  ECFA  F021         	call	_fputc	;wreg free
  8301                           
  8302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8303                           ;stkvar	_i @ sp[(-4)+2]
  8304  004578  0EFE               	movlw	-2
  8305  00457A  50E3               	movf	plusw1,w,c
  8306  00457C  0F01               	addlw	1
  8307  00457E  6E3A               	movwf	btemp,c
  8308  004580  0EFE               	movlw	-2
  8309  004582  0060  F0EB  FFE3   	movff	btemp,plusw1
  8310  004588  6A3A               	clrf	btemp,c
  8311  00458A  0EFF               	movlw	-1
  8312  00458C  50E3               	movf	plusw1,w,c
  8313  00458E  203A               	addwfc	btemp,w,c
  8314  004590  6E3A               	movwf	btemp,c
  8315  004592  0EFF               	movlw	-1
  8316  004594  0060  F0EB  FFE3   	movff	btemp,plusw1
  8317  00459A                     l6348:
  8318                           
  8319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8320                           ;stkvar	_w @ sp[(-4)+0]
  8321                           ;stkvar	_i @ sp[(-4)+2]
  8322  00459A  50E1               	movf	fsr1l,w,c
  8323  00459C  0FFE               	addlw	-2
  8324  00459E  6ED9               	movwf	fsr2l,c
  8325  0045A0  50E2               	movf	fsr1h,w,c
  8326  0045A2  6EDA               	movwf	fsr2h,c
  8327  0045A4  0EFF               	movlw	255
  8328  0045A6  22DA               	addwfc	fsr2h,f,c
  8329  0045A8  0EFC               	movlw	-4
  8330  0045AA  50E3               	movf	plusw1,w,c
  8331  0045AC  5CDE               	subwf	postinc2,w,c
  8332  0045AE  50DE               	movf	postinc2,w,c
  8333  0045B0  0A80               	xorlw	128
  8334  0045B2  6E3A               	movwf	btemp,c
  8335  0045B4  0EFD               	movlw	-3
  8336  0045B6  50E3               	movf	plusw1,w,c
  8337  0045B8  0A80               	xorlw	128
  8338  0045BA  583A               	subwfb	btemp,w,c
  8339  0045BC  A0D8               	btfss	status,0,c
  8340  0045BE  D7CF               	goto	l6344
  8341                           
  8342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8343  0045C0  B029               	btfsc	_flags,0,c
  8344  0045C2  D00C               	goto	l6352
  8345                           
  8346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8347                           ;stkvar	_fp @ sp[(-4)+-2]
  8348  0045C4  0EFA               	movlw	-6
  8349  0045C6  006F FF8F FFE6     	movff	plusw1,postinc1
  8350  0045CC  006F FF8F FFE6     	movff	plusw1,postinc1
  8351                           
  8352                           ;stkvar	_buf @ sp[(-6)+-3]
  8353  0045D2  0EF7               	movlw	-9
  8354  0045D4  50E3               	movf	plusw1,w,c
  8355  0045D6  6EE6               	movwf	postinc1,c
  8356  0045D8  EC9E  F026         	call	_fputs	;wreg free
  8357  0045DC                     l6352:
  8358                           
  8359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8360                           ;stkvar	_w @ sp[(-4)+0]
  8361                           ;stkvar	_buf @ sp[(-4)+-3]
  8362  0045DC  0EF9               	movlw	-7
  8363  0045DE  006F FF8C  F045    	movff	plusw1,btemp+11
  8364  0045E4  0060  F117  FFE6   	movff	btemp+11,postinc1
  8365  0045EA  0E00               	movlw	0
  8366  0045EC  6EE6               	movwf	postinc1,c
  8367  0045EE  EC5C  F026         	call	_strlen	;wreg free
  8368  0045F2  0EFC               	movlw	-4
  8369  0045F4  50E3               	movf	plusw1,w,c
  8370  0045F6  263A               	addwf	btemp,f,c
  8371  0045F8  0EFD               	movlw	-3
  8372  0045FA  50E3               	movf	plusw1,w,c
  8373  0045FC  223B               	addwfc	btemp+1,f,c
  8374                           
  8375                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
  8376  0045FE  0EF7               	movlw	247
  8377  004600  26E1               	addwf	fsr1l,f,c
  8378  004602  0EFF               	movlw	255
  8379  004604  22E2               	addwfc	fsr1h,f,c
  8380  004606  0012               	return		;funcret
  8381  004608                     __end_of_pad:
  8382                           	opt callstack 0
  8383                           
  8384 ;; *************** function _strlen *****************
  8385 ;; Defined at:
  8386 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  s               2  [STACK] PTR const unsigned char 
  8389 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8390 ;;		 -> V(80), 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  a               2  [STACK] PTR const unsigned char 
  8393 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8394 ;;		 -> V(80), 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  2  [STACK] unsigned int 
  8397 ;; Registers used:
  8398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:    3
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_eaDogM_WriteString
  8415 ;;		_pad
  8416 ;;		_stoa
  8417 ;; This function uses a reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text39
  8421  004CB8                     __ptext39:
  8422                           	opt callstack 0
  8423  004CB8                     _strlen:
  8424                           	opt callstack 0
  8425                           
  8426                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8427  004CB8  52E6               	movf	postinc1,f,c
  8428  004CBA  52E6               	movf	postinc1,f,c
  8429                           
  8430                           ;stkvar	_s @ sp[(-2)+-2]
  8431                           
  8432                           ;incstack = 0
  8433  004CBC  0EFC               	movlw	-4
  8434  004CBE  006F FF8C  F044    	movff	plusw1,btemp+10
  8435  004CC4  0EFD               	movlw	-3
  8436  004CC6  006F FF8C  F045    	movff	plusw1,btemp+11
  8437                           
  8438                           ;stkvar	_a @ sp[(-2)+0]
  8439  004CCC  0EFF               	movlw	-1
  8440  004CCE  0060  F117  FFE3   	movff	btemp+11,plusw1
  8441  004CD4  0EFE               	movlw	-2
  8442  004CD6  0060  F113  FFE3   	movff	btemp+10,plusw1
  8443  004CDC  D011               	goto	l4424
  8444  004CDE                     l4422:
  8445                           
  8446                           ;stkvar	_s @ sp[(-2)+-2]
  8447  004CDE  0EFC               	movlw	-4
  8448  004CE0  50E3               	movf	plusw1,w,c
  8449  004CE2  0F01               	addlw	1
  8450  004CE4  6E3A               	movwf	btemp,c
  8451  004CE6  0EFC               	movlw	-4
  8452  004CE8  0060  F0EB  FFE3   	movff	btemp,plusw1
  8453  004CEE  6A3A               	clrf	btemp,c
  8454  004CF0  0EFD               	movlw	-3
  8455  004CF2  50E3               	movf	plusw1,w,c
  8456  004CF4  203A               	addwfc	btemp,w,c
  8457  004CF6  6E3A               	movwf	btemp,c
  8458  004CF8  0EFD               	movlw	-3
  8459  004CFA  0060  F0EB  FFE3   	movff	btemp,plusw1
  8460  004D00                     l4424:
  8461                           
  8462                           ;stkvar	_s @ sp[(-2)+-2]
  8463  004D00  0EFC               	movlw	-4
  8464  004D02  006F FF8F FFD9     	movff	plusw1,fsr2l
  8465  004D08  0EFD               	movlw	-3
  8466  004D0A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8467  004D10  50DF               	movf	indf2,w,c
  8468  004D12  A4D8               	btfss	status,2,c
  8469  004D14  D7E4               	goto	l4422
  8470                           
  8471                           ;stkvar	_a @ sp[(-2)+0]
  8472                           ;stkvar	_s @ sp[(-2)+-2]
  8473  004D16  0EFC               	movlw	-4
  8474  004D18  006F FF8C  F03A    	movff	plusw1,btemp
  8475  004D1E  0EFD               	movlw	-3
  8476  004D20  006F FF8C  F03B    	movff	plusw1,btemp+1
  8477  004D26  0EFE               	movlw	-2
  8478  004D28  50E3               	movf	plusw1,w,c
  8479  004D2A  5E3A               	subwf	btemp,f,c
  8480  004D2C  0EFF               	movlw	-1
  8481  004D2E  50E3               	movf	plusw1,w,c
  8482  004D30  5A3B               	subwfb	btemp+1,f,c
  8483                           
  8484                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8485  004D32  52E5               	movf	postdec1,f,c
  8486  004D34  52E5               	movf	postdec1,f,c
  8487  004D36  52E5               	movf	postdec1,f,c
  8488  004D38  52E5               	movf	postdec1,f,c
  8489  004D3A  0012               	return		;funcret
  8490  004D3C                     __end_of_strlen:
  8491                           	opt callstack 0
  8492                           
  8493 ;; *************** function _fputs *****************
  8494 ;; Defined at:
  8495 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  s               1  [STACK] PTR const unsigned char 
  8498 ;;		 -> dbuf(32), 
  8499 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8500 ;;		 -> f(5), NULL(0), 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  i               2  [STACK] int 
  8503 ;;  c               1  [STACK] unsigned char 
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  2  [STACK] int 
  8506 ;; Registers used:
  8507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8517 ;;Total ram usage:        0 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    6
  8520 ;; This function calls:
  8521 ;;		_fputc
  8522 ;; This function is called by:
  8523 ;;		_pad
  8524 ;; This function uses a reentrant model
  8525 ;;
  8526                           
  8527                           	psect	text40
  8528  004D3C                     __ptext40:
  8529                           	opt callstack 0
  8530  004D3C                     _fputs:
  8531                           	opt callstack 0
  8532                           
  8533                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8534  004D3C  52E6               	movf	postinc1,f,c
  8535  004D3E  52E6               	movf	postinc1,f,c
  8536  004D40  52E6               	movf	postinc1,f,c
  8537                           
  8538                           ;stkvar	_i @ sp[(-3)+0]
  8539                           
  8540                           ;incstack = 0
  8541  004D42  0EFD               	movlw	-3
  8542  004D44  6AE3               	clrf	plusw1,c
  8543  004D46  0EFE               	movlw	-2
  8544  004D48  6AE3               	clrf	plusw1,c
  8545  004D4A  D01F               	goto	l6332
  8546  004D4C                     l6328:
  8547                           
  8548                           ;stkvar	_fp @ sp[(-3)+-3]
  8549  004D4C  0EFA               	movlw	-6
  8550  004D4E  006F FF8F FFE6     	movff	plusw1,postinc1
  8551  004D54  006F FF8F FFE6     	movff	plusw1,postinc1
  8552                           
  8553                           ;stkvar	_c @ sp[(-5)+2]
  8554  004D5A  0EFD               	movlw	-3
  8555  004D5C  50E3               	movf	plusw1,w,c
  8556  004D5E  6EE6               	movwf	postinc1,c
  8557  004D60  0E00               	movlw	0
  8558  004D62  6EE6               	movwf	postinc1,c
  8559  004D64  ECFA  F021         	call	_fputc	;wreg free
  8560                           
  8561                           ;stkvar	_i @ sp[(-3)+0]
  8562  004D68  0EFD               	movlw	-3
  8563  004D6A  50E3               	movf	plusw1,w,c
  8564  004D6C  0F01               	addlw	1
  8565  004D6E  6E3A               	movwf	btemp,c
  8566  004D70  0EFD               	movlw	-3
  8567  004D72  0060  F0EB  FFE3   	movff	btemp,plusw1
  8568  004D78  6A3A               	clrf	btemp,c
  8569  004D7A  0EFE               	movlw	-2
  8570  004D7C  50E3               	movf	plusw1,w,c
  8571  004D7E  203A               	addwfc	btemp,w,c
  8572  004D80  6E3A               	movwf	btemp,c
  8573  004D82  0EFE               	movlw	-2
  8574  004D84  0060  F0EB  FFE3   	movff	btemp,plusw1
  8575  004D8A                     l6332:
  8576                           
  8577                           ;stkvar	_i @ sp[(-3)+0]
  8578  004D8A  0EFD               	movlw	-3
  8579  004D8C  006F FF8C  F045    	movff	plusw1,btemp+11
  8580                           
  8581                           ;stkvar	_s @ sp[(-3)+-1]
  8582  004D92  0EFC               	movlw	-4
  8583  004D94  50E3               	movf	plusw1,w,c
  8584  004D96  2445               	addwf	btemp+11,w,c
  8585  004D98  6ED9               	movwf	fsr2l,c
  8586  004D9A  6ADA               	clrf	fsr2h,c
  8587  004D9C  50DF               	movf	indf2,w,c
  8588  004D9E  6E45               	movwf	btemp+11,c
  8589                           
  8590                           ;stkvar	_c @ sp[(-3)+2]
  8591  004DA0  0EFF               	movlw	-1
  8592  004DA2  0060  F117  FFE3   	movff	btemp+11,plusw1
  8593  004DA8  0EFF               	movlw	-1
  8594  004DAA  50E3               	movf	plusw1,w,c
  8595  004DAC  A4D8               	btfss	status,2,c
  8596  004DAE  D7CE               	goto	l6328
  8597                           
  8598                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
  8599  004DB0  0EFA               	movlw	250
  8600  004DB2  26E1               	addwf	fsr1l,f,c
  8601  004DB4  0EFF               	movlw	255
  8602  004DB6  22E2               	addwfc	fsr1h,f,c
  8603  004DB8  0012               	return		;funcret
  8604  004DBA                     __end_of_fputs:
  8605                           	opt callstack 0
  8606                           
  8607 ;; *************** function _fputc *****************
  8608 ;; Defined at:
  8609 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  c               2  [STACK] int 
  8612 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8613 ;;		 -> f(5), NULL(0), 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;		None
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  2  [STACK] int 
  8618 ;; Registers used:
  8619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/1
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8629 ;;Total ram usage:        0 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    5
  8632 ;; This function calls:
  8633 ;;		_putch
  8634 ;; This function is called by:
  8635 ;;		_pad
  8636 ;;		_stoa
  8637 ;;		_vfpfcnvrt
  8638 ;;		_fputs
  8639 ;; This function uses a reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text41
  8643  0043F4                     __ptext41:
  8644                           	opt callstack 0
  8645  0043F4                     _fputc:
  8646                           	opt callstack 19
  8647                           
  8648                           ;stkvar	_fp @ sp[(0)+-4]
  8649                           
  8650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8651                           ;incstack = 0
  8652  0043F4  0EFC               	movlw	-4
  8653  0043F6  006F FF8C  F03A    	movff	plusw1,btemp
  8654  0043FC  0EFD               	movlw	-3
  8655  0043FE  50E3               	movf	plusw1,w,c
  8656  004400  103A               	iorwf	btemp,w,c
  8657  004402  B4D8               	btfsc	status,2,c
  8658  004404  D009               	goto	u3830
  8659                           
  8660                           ;stkvar	_fp @ sp[(0)+-4]
  8661  004406  0EFC               	movlw	-4
  8662  004408  006F FF8C  F03A    	movff	plusw1,btemp
  8663  00440E  0EFD               	movlw	-3
  8664  004410  50E3               	movf	plusw1,w,c
  8665  004412  103A               	iorwf	btemp,w,c
  8666  004414  A4D8               	btfss	status,2,c
  8667  004416  D006               	goto	l6318
  8668  004418                     u3830:
  8669                           
  8670                           ;stkvar	_c @ sp[(0)+-2]
  8671  004418  0EFE               	movlw	-2
  8672  00441A  50E3               	movf	plusw1,w,c
  8673  00441C  6EE6               	movwf	postinc1,c
  8674  00441E  ECAE  F02C         	call	_putch	;wreg free
  8675  004422  D069               	goto	l2397
  8676  004424                     l6318:
  8677                           
  8678                           ;stkvar	_fp @ sp[(0)+-4]
  8679  004424  0EFC               	movlw	-4
  8680  004426  006F FF8C  F044    	movff	plusw1,btemp+10
  8681  00442C  0EFD               	movlw	-3
  8682  00442E  006F FF8C  F045    	movff	plusw1,btemp+11
  8683  004434  0E03               	movlw	3
  8684  004436  2444               	addwf	btemp+10,w,c
  8685  004438  6ED9               	movwf	fsr2l,c
  8686  00443A  0E00               	movlw	0
  8687  00443C  2045               	addwfc	btemp+11,w,c
  8688  00443E  6EDA               	movwf	fsr2h,c
  8689  004440  50DE               	movf	postinc2,w,c
  8690  004442  10DE               	iorwf	postinc2,w,c
  8691  004444  B4D8               	btfsc	status,2,c
  8692  004446  D026               	goto	u3850
  8693                           
  8694                           ;stkvar	_fp @ sp[(0)+-4]
  8695  004448  0EFC               	movlw	-4
  8696  00444A  006F FF8C  F044    	movff	plusw1,btemp+10
  8697  004450  0EFD               	movlw	-3
  8698  004452  006F FF8C  F045    	movff	plusw1,btemp+11
  8699  004458  0E03               	movlw	3
  8700  00445A  2444               	addwf	btemp+10,w,c
  8701  00445C  6ED9               	movwf	fsr2l,c
  8702  00445E  0E00               	movlw	0
  8703  004460  2045               	addwfc	btemp+11,w,c
  8704  004462  6EDA               	movwf	fsr2h,c
  8705                           
  8706                           ;stkvar	_fp @ sp[(0)+-4]
  8707  004464  0EFC               	movlw	-4
  8708  004466  006F FF8C  F044    	movff	plusw1,btemp+10
  8709  00446C  0EFD               	movlw	-3
  8710  00446E  006F FF8C  F045    	movff	plusw1,btemp+11
  8711  004474  0E01               	movlw	1
  8712  004476  2444               	addwf	btemp+10,w,c
  8713  004478  6EE9               	movwf	fsr0l,c
  8714  00447A  0E00               	movlw	0
  8715  00447C  2045               	addwfc	btemp+11,w,c
  8716  00447E  6EEA               	movwf	fsr0h,c
  8717  004480  50DE               	movf	postinc2,w,c
  8718  004482  5CEE               	subwf	postinc0,w,c
  8719  004484  50EE               	movf	postinc0,w,c
  8720  004486  0A80               	xorlw	128
  8721  004488  6E3A               	movwf	btemp,c
  8722  00448A  50DE               	movf	postinc2,w,c
  8723  00448C  0A80               	xorlw	128
  8724  00448E  583A               	subwfb	btemp,w,c
  8725  004490  B0D8               	btfsc	status,0,c
  8726  004492  D031               	goto	l2397
  8727  004494                     u3850:
  8728                           
  8729                           ;stkvar	_c @ sp[(0)+-2]
  8730                           ;stkvar	_fp @ sp[(0)+-4]
  8731  004494  0EFC               	movlw	-4
  8732  004496  006F FF8C  F044    	movff	plusw1,btemp+10
  8733  00449C  0EFD               	movlw	-3
  8734  00449E  006F FF8C  F045    	movff	plusw1,btemp+11
  8735  0044A4  0E01               	movlw	1
  8736  0044A6  2444               	addwf	btemp+10,w,c
  8737  0044A8  6ED9               	movwf	fsr2l,c
  8738  0044AA  0E00               	movlw	0
  8739  0044AC  2045               	addwfc	btemp+11,w,c
  8740  0044AE  6EDA               	movwf	fsr2h,c
  8741  0044B0  50DF               	movf	indf2,w,c
  8742  0044B2  6E45               	movwf	btemp+11,c
  8743                           
  8744                           ;stkvar	_fp @ sp[(0)+-4]
  8745  0044B4  0EFC               	movlw	-4
  8746  0044B6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8747  0044BC  0EFD               	movlw	-3
  8748  0044BE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8749  0044C4  50DF               	movf	indf2,w,c
  8750  0044C6  2445               	addwf	btemp+11,w,c
  8751  0044C8  6ED9               	movwf	fsr2l,c
  8752  0044CA  6ADA               	clrf	fsr2h,c
  8753  0044CC  0EFE               	movlw	-2
  8754  0044CE  006F FF8F FFDF     	movff	plusw1,indf2
  8755                           
  8756                           ;stkvar	_fp @ sp[(0)+-4]
  8757  0044D4  0EFC               	movlw	-4
  8758  0044D6  006F FF8C  F044    	movff	plusw1,btemp+10
  8759  0044DC  0EFD               	movlw	-3
  8760  0044DE  006F FF8C  F045    	movff	plusw1,btemp+11
  8761  0044E4  0E01               	movlw	1
  8762  0044E6  2444               	addwf	btemp+10,w,c
  8763  0044E8  6ED9               	movwf	fsr2l,c
  8764  0044EA  0E00               	movlw	0
  8765  0044EC  2045               	addwfc	btemp+11,w,c
  8766  0044EE  6EDA               	movwf	fsr2h,c
  8767  0044F0  2ADE               	incf	postinc2,f,c
  8768  0044F2  0E00               	movlw	0
  8769  0044F4  22DD               	addwfc	postdec2,f,c
  8770  0044F6                     l2397:
  8771                           
  8772                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8773  0044F6  52E5               	movf	postdec1,f,c
  8774  0044F8  52E5               	movf	postdec1,f,c
  8775  0044FA  52E5               	movf	postdec1,f,c
  8776  0044FC  52E5               	movf	postdec1,f,c
  8777  0044FE  0012               	return		;funcret
  8778  004500                     __end_of_fputc:
  8779                           	opt callstack 0
  8780                           
  8781 ;; *************** function _putch *****************
  8782 ;; Defined at:
  8783 ;;		line 138 in file "eadog.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  c               1  [STACK] unsigned char 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1  [STACK] void 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/1
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:    4
  8804 ;; This function calls:
  8805 ;;		_ringBufS_put_dma
  8806 ;; This function is called by:
  8807 ;;		_fputc
  8808 ;; This function uses a reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text42
  8812  00595C                     __ptext42:
  8813                           	opt callstack 0
  8814  00595C                     _putch:
  8815                           	opt callstack 19
  8816                           
  8817                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
  8818                           ;stkvar	_c @ sp[(0)+-1]
  8819                           
  8820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8821                           ;incstack = 0
  8822  00595C  0EFF               	movlw	-1
  8823  00595E  50E3               	movf	plusw1,w,c
  8824  005960  6EE6               	movwf	postinc1,c
  8825  005962  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  8826  005968  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  8827  00596E  EC9C  F024         	call	_ringBufS_put_dma	;wreg free
  8828                           
  8829                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  8830  005972  52E5               	movf	postdec1,f,c
  8831  005974  0012               	return		;funcret
  8832  005976                     __end_of_putch:
  8833                           	opt callstack 0
  8834                           
  8835 ;; *************** function _ringBufS_put_dma *****************
  8836 ;; Defined at:
  8837 ;;		line 67 in file "ringbufs.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8840 ;;		 -> ring_buf1(67), 
  8841 ;;  c               1  [STACK] const unsigned char 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1  [STACK] void 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/1
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    3
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_putch
  8864 ;; This function uses a reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text43
  8868  004938                     __ptext43:
  8869                           	opt callstack 0
  8870  004938                     _ringBufS_put_dma:
  8871                           	opt callstack 19
  8872                           
  8873                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
  8874                           ;stkvar	__this @ sp[(0)+-2]
  8875                           
  8876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8877                           ;incstack = 0
  8878  004938  0EFE               	movlw	-2
  8879  00493A  006F FF8C  F044    	movff	plusw1,btemp+10
  8880  004940  0EFF               	movlw	-1
  8881  004942  006F FF8C  F045    	movff	plusw1,btemp+11
  8882  004948  0E42               	movlw	66
  8883  00494A  2444               	addwf	btemp+10,w,c
  8884  00494C  6ED9               	movwf	fsr2l,c
  8885  00494E  0E00               	movlw	0
  8886  004950  2045               	addwfc	btemp+11,w,c
  8887  004952  6EDA               	movwf	fsr2h,c
  8888  004954  0E40               	movlw	64
  8889  004956  60DF               	cpfslt	indf2,c
  8890  004958  D040               	goto	l1323
  8891                           
  8892                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
  8893                           ;stkvar	_c @ sp[(0)+-3]
  8894                           ;stkvar	__this @ sp[(0)+-2]
  8895  00495A  0EFE               	movlw	-2
  8896  00495C  006F FF8C  F044    	movff	plusw1,btemp+10
  8897  004962  0EFF               	movlw	-1
  8898  004964  006F FF8C  F045    	movff	plusw1,btemp+11
  8899  00496A  0E40               	movlw	64
  8900  00496C  2444               	addwf	btemp+10,w,c
  8901  00496E  6ED9               	movwf	fsr2l,c
  8902  004970  0E00               	movlw	0
  8903  004972  2045               	addwfc	btemp+11,w,c
  8904  004974  6EDA               	movwf	fsr2h,c
  8905  004976  50DF               	movf	indf2,w,c
  8906  004978  6E45               	movwf	btemp+11,c
  8907                           
  8908                           ;stkvar	__this @ sp[(0)+-2]
  8909  00497A  0EFE               	movlw	-2
  8910  00497C  006F FF8C  F042    	movff	plusw1,btemp+8
  8911  004982  0EFF               	movlw	-1
  8912  004984  006F FF8C  F043    	movff	plusw1,btemp+9
  8913  00498A  5045               	movf	btemp+11,w,c
  8914  00498C  2442               	addwf	btemp+8,w,c
  8915  00498E  6ED9               	movwf	fsr2l,c
  8916  004990  0E00               	movlw	0
  8917  004992  2043               	addwfc	btemp+9,w,c
  8918  004994  6EDA               	movwf	fsr2h,c
  8919  004996  0EFD               	movlw	-3
  8920  004998  006F FF8F FFDF     	movff	plusw1,indf2
  8921                           
  8922                           ;ringbufs.c: 71:   ++_this->head;
  8923                           ;stkvar	__this @ sp[(0)+-2]
  8924  00499E  0EFE               	movlw	-2
  8925  0049A0  006F FF8C  F044    	movff	plusw1,btemp+10
  8926  0049A6  0EFF               	movlw	-1
  8927  0049A8  006F FF8C  F045    	movff	plusw1,btemp+11
  8928  0049AE  0E40               	movlw	64
  8929  0049B0  2444               	addwf	btemp+10,w,c
  8930  0049B2  6ED9               	movwf	fsr2l,c
  8931  0049B4  0E00               	movlw	0
  8932  0049B6  2045               	addwfc	btemp+11,w,c
  8933  0049B8  6EDA               	movwf	fsr2h,c
  8934  0049BA  2ADF               	incf	indf2,f,c
  8935                           
  8936                           ;ringbufs.c: 72:   ++_this->count;
  8937                           ;stkvar	__this @ sp[(0)+-2]
  8938  0049BC  0EFE               	movlw	-2
  8939  0049BE  006F FF8C  F044    	movff	plusw1,btemp+10
  8940  0049C4  0EFF               	movlw	-1
  8941  0049C6  006F FF8C  F045    	movff	plusw1,btemp+11
  8942  0049CC  0E42               	movlw	66
  8943  0049CE  2444               	addwf	btemp+10,w,c
  8944  0049D0  6ED9               	movwf	fsr2l,c
  8945  0049D2  0E00               	movlw	0
  8946  0049D4  2045               	addwfc	btemp+11,w,c
  8947  0049D6  6EDA               	movwf	fsr2h,c
  8948  0049D8  2ADF               	incf	indf2,f,c
  8949  0049DA                     l1323:
  8950                           
  8951                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  8952  0049DA  52E5               	movf	postdec1,f,c
  8953  0049DC  52E5               	movf	postdec1,f,c
  8954  0049DE  52E5               	movf	postdec1,f,c
  8955  0049E0  0012               	return		;funcret
  8956  0049E2                     __end_of_ringBufS_put_dma:
  8957                           	opt callstack 0
  8958                           
  8959 ;; *************** function _abs *****************
  8960 ;; Defined at:
  8961 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  a               2  [STACK] int 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;		None
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  2  [STACK] int 
  8968 ;; Registers used:
  8969 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8979 ;;Total ram usage:        0 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:    3
  8982 ;; This function calls:
  8983 ;;		Nothing
  8984 ;; This function is called by:
  8985 ;;		_dtoa
  8986 ;; This function uses a reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text44
  8990  0051BC                     __ptext44:
  8991                           	opt callstack 0
  8992  0051BC                     _abs:
  8993                           	opt callstack 23
  8994                           
  8995                           ;stkvar	_a @ sp[(0)+-2]
  8996                           
  8997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8998                           ;incstack = 0
  8999  0051BC  0EFF               	movlw	-1
  9000  0051BE  BEE3               	btfsc	plusw1,7,c
  9001  0051C0  D007               	goto	u2080
  9002  0051C2  0EFF               	movlw	-1
  9003  0051C4  50E3               	movf	plusw1,w,c
  9004  0051C6  E112               	bnz	l4468
  9005  0051C8  0EFE               	movlw	-2
  9006  0051CA  04E3               	decf	plusw1,w,c
  9007  0051CC  B0D8               	btfsc	status,0,c
  9008  0051CE  D00E               	goto	l4468
  9009  0051D0                     u2080:
  9010                           
  9011                           ;stkvar	_a @ sp[(0)+-2]
  9012  0051D0  0EFE               	movlw	-2
  9013  0051D2  006F FF8C  F03A    	movff	plusw1,btemp
  9014  0051D8  1E3A               	comf	btemp,f,c
  9015  0051DA  0EFF               	movlw	-1
  9016  0051DC  006F FF8C  F03B    	movff	plusw1,btemp+1
  9017  0051E2  1E3B               	comf	btemp+1,f,c
  9018  0051E4  2A3A               	incf	btemp,f,c
  9019  0051E6  B4D8               	btfsc	status,2,c
  9020  0051E8  2A3B               	incf	btemp+1,f,c
  9021  0051EA  D008               	goto	l2318
  9022  0051EC                     l4468:
  9023                           
  9024                           ;stkvar	_a @ sp[(0)+-2]
  9025  0051EC  0EFE               	movlw	-2
  9026  0051EE  006F FF8C  F03A    	movff	plusw1,btemp
  9027  0051F4  0EFF               	movlw	-1
  9028  0051F6  006F FF8C  F03B    	movff	plusw1,btemp+1
  9029  0051FC                     l2318:
  9030                           
  9031                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  9032  0051FC  52E5               	movf	postdec1,f,c
  9033  0051FE  52E5               	movf	postdec1,f,c
  9034  005200  0012               	return		;funcret
  9035  005202                     __end_of_abs:
  9036                           	opt callstack 0
  9037                           
  9038 ;; *************** function ___aomod *****************
  9039 ;; Defined at:
  9040 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  dividend        8  [STACK] long long 
  9043 ;;  divisor         8  [STACK] long long 
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;  sign            1  [STACK] unsigned char 
  9046 ;;  counter         1  [STACK] unsigned char 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  8  [STACK] long long 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;Total ram usage:        0 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    3
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_dtoa
  9067 ;; This function uses a reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text45
  9071  003BB0                     __ptext45:
  9072                           	opt callstack 0
  9073  003BB0                     ___aomod:
  9074                           	opt callstack 0
  9075                           
  9076                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9077  003BB0  52E6               	movf	postinc1,f,c
  9078  003BB2  52E6               	movf	postinc1,f,c
  9079                           
  9080                           ;stkvar	_sign @ sp[(-2)+0]
  9081                           
  9082                           ;incstack = 0
  9083  003BB4  0EFE               	movlw	-2
  9084  003BB6  6AE3               	clrf	plusw1,c
  9085                           
  9086                           ;stkvar	_dividend @ sp[(-2)+-8]
  9087  003BB8  0EFD               	movlw	-3
  9088  003BBA  AEE3               	btfss	plusw1,7,c
  9089  003BBC  D028               	goto	l4550
  9090                           
  9091                           ;stkvar	_dividend @ sp[(-2)+-8]
  9092                           ;stkvar	_dividend @ sp[(-2)+-8]
  9093  003BBE  0EF6               	movlw	-10
  9094  003BC0  6CE3               	negf	plusw1,c
  9095  003BC2  0EF7               	movlw	-9
  9096  003BC4  1EE3               	comf	plusw1,f,c
  9097  003BC6  0EF8               	movlw	-8
  9098  003BC8  1EE3               	comf	plusw1,f,c
  9099  003BCA  0EF9               	movlw	-7
  9100  003BCC  1EE3               	comf	plusw1,f,c
  9101  003BCE  0EFA               	movlw	-6
  9102  003BD0  1EE3               	comf	plusw1,f,c
  9103  003BD2  0EFB               	movlw	-5
  9104  003BD4  1EE3               	comf	plusw1,f,c
  9105  003BD6  0EFC               	movlw	-4
  9106  003BD8  1EE3               	comf	plusw1,f,c
  9107  003BDA  0EFD               	movlw	-3
  9108  003BDC  1EE3               	comf	plusw1,f,c
  9109  003BDE  E314               	bnc	u2310
  9110  003BE0  0EF7               	movlw	-9
  9111  003BE2  2AE3               	incf	plusw1,f,c
  9112  003BE4  E311               	bnc	u2310
  9113  003BE6  0EF8               	movlw	-8
  9114  003BE8  2AE3               	incf	plusw1,f,c
  9115  003BEA  E30E               	bnc	u2310
  9116  003BEC  0EF9               	movlw	-7
  9117  003BEE  2AE3               	incf	plusw1,f,c
  9118  003BF0  E30B               	bnc	u2310
  9119  003BF2  0EFA               	movlw	-6
  9120  003BF4  2AE3               	incf	plusw1,f,c
  9121  003BF6  E308               	bnc	u2310
  9122  003BF8  0EFB               	movlw	-5
  9123  003BFA  2AE3               	incf	plusw1,f,c
  9124  003BFC  E305               	bnc	u2310
  9125  003BFE  0EFC               	movlw	-4
  9126  003C00  2AE3               	incf	plusw1,f,c
  9127  003C02  E302               	bnc	u2310
  9128  003C04  0EFD               	movlw	-3
  9129  003C06  2AE3               	incf	plusw1,f,c
  9130  003C08                     u2310:
  9131                           
  9132                           ;stkvar	_sign @ sp[(-2)+0]
  9133  003C08  0EFE               	movlw	-2
  9134  003C0A  6AE3               	clrf	plusw1,c
  9135  003C0C  2AE3               	incf	plusw1,f,c
  9136  003C0E                     l4550:
  9137                           
  9138                           ;stkvar	_divisor @ sp[(-2)+-16]
  9139  003C0E  0EF5               	movlw	-11
  9140  003C10  AEE3               	btfss	plusw1,7,c
  9141  003C12  D025               	goto	u2330
  9142                           
  9143                           ;stkvar	_divisor @ sp[(-2)+-16]
  9144                           ;stkvar	_divisor @ sp[(-2)+-16]
  9145  003C14  0EEE               	movlw	-18
  9146  003C16  6CE3               	negf	plusw1,c
  9147  003C18  0EEF               	movlw	-17
  9148  003C1A  1EE3               	comf	plusw1,f,c
  9149  003C1C  0EF0               	movlw	-16
  9150  003C1E  1EE3               	comf	plusw1,f,c
  9151  003C20  0EF1               	movlw	-15
  9152  003C22  1EE3               	comf	plusw1,f,c
  9153  003C24  0EF2               	movlw	-14
  9154  003C26  1EE3               	comf	plusw1,f,c
  9155  003C28  0EF3               	movlw	-13
  9156  003C2A  1EE3               	comf	plusw1,f,c
  9157  003C2C  0EF4               	movlw	-12
  9158  003C2E  1EE3               	comf	plusw1,f,c
  9159  003C30  0EF5               	movlw	-11
  9160  003C32  1EE3               	comf	plusw1,f,c
  9161  003C34  E314               	bnc	u2330
  9162  003C36  0EEF               	movlw	-17
  9163  003C38  2AE3               	incf	plusw1,f,c
  9164  003C3A  E311               	bnc	u2330
  9165  003C3C  0EF0               	movlw	-16
  9166  003C3E  2AE3               	incf	plusw1,f,c
  9167  003C40  E30E               	bnc	u2330
  9168  003C42  0EF1               	movlw	-15
  9169  003C44  2AE3               	incf	plusw1,f,c
  9170  003C46  E30B               	bnc	u2330
  9171  003C48  0EF2               	movlw	-14
  9172  003C4A  2AE3               	incf	plusw1,f,c
  9173  003C4C  E308               	bnc	u2330
  9174  003C4E  0EF3               	movlw	-13
  9175  003C50  2AE3               	incf	plusw1,f,c
  9176  003C52  E305               	bnc	u2330
  9177  003C54  0EF4               	movlw	-12
  9178  003C56  2AE3               	incf	plusw1,f,c
  9179  003C58  E302               	bnc	u2330
  9180  003C5A  0EF5               	movlw	-11
  9181  003C5C  2AE3               	incf	plusw1,f,c
  9182  003C5E                     u2330:
  9183                           
  9184                           ;stkvar	_divisor @ sp[(-2)+-16]
  9185  003C5E  0EEE               	movlw	-18
  9186  003C60  50E3               	movf	plusw1,w,c
  9187  003C62  E116               	bnz	u2340
  9188  003C64  0EEF               	movlw	-17
  9189  003C66  50E3               	movf	plusw1,w,c
  9190  003C68  E113               	bnz	u2340
  9191  003C6A  0EF0               	movlw	-16
  9192  003C6C  50E3               	movf	plusw1,w,c
  9193  003C6E  E110               	bnz	u2340
  9194  003C70  0EF1               	movlw	-15
  9195  003C72  50E3               	movf	plusw1,w,c
  9196  003C74  E10D               	bnz	u2340
  9197  003C76  0EF2               	movlw	-14
  9198  003C78  50E3               	movf	plusw1,w,c
  9199  003C7A  E10A               	bnz	u2340
  9200  003C7C  0EF3               	movlw	-13
  9201  003C7E  50E3               	movf	plusw1,w,c
  9202  003C80  E107               	bnz	u2340
  9203  003C82  0EF4               	movlw	-12
  9204  003C84  50E3               	movf	plusw1,w,c
  9205  003C86  E104               	bnz	u2340
  9206  003C88  0EF5               	movlw	-11
  9207  003C8A  50E3               	movf	plusw1,w,c
  9208  003C8C  B4D8               	btfsc	status,2,c
  9209  003C8E  D075               	goto	u2370
  9210  003C90                     u2340:
  9211                           
  9212                           ;stkvar	_counter @ sp[(-2)+1]
  9213  003C90  0EFF               	movlw	-1
  9214  003C92  6AE3               	clrf	plusw1,c
  9215  003C94  D012               	goto	L16
  9216  003C96                     l4558:
  9217                           
  9218                           ;stkvar	_divisor @ sp[(-2)+-16]
  9219  003C96  90D8               	bcf	status,0,c
  9220  003C98  0EEE               	movlw	-18
  9221  003C9A  36E3               	rlcf	plusw1,f,c
  9222  003C9C  0EEF               	movlw	-17
  9223  003C9E  36E3               	rlcf	plusw1,f,c
  9224  003CA0  0EF0               	movlw	-16
  9225  003CA2  36E3               	rlcf	plusw1,f,c
  9226  003CA4  0EF1               	movlw	-15
  9227  003CA6  36E3               	rlcf	plusw1,f,c
  9228  003CA8  0EF2               	movlw	-14
  9229  003CAA  36E3               	rlcf	plusw1,f,c
  9230  003CAC  0EF3               	movlw	-13
  9231  003CAE  36E3               	rlcf	plusw1,f,c
  9232  003CB0  0EF4               	movlw	-12
  9233  003CB2  36E3               	rlcf	plusw1,f,c
  9234  003CB4  0EF5               	movlw	-11
  9235  003CB6  36E3               	rlcf	plusw1,f,c
  9236                           
  9237                           ;stkvar	_counter @ sp[(-2)+1]
  9238  003CB8  0EFF               	movlw	-1
  9239  003CBA                     L16:
  9240  003CBA  2AE3               	incf	plusw1,f,c
  9241                           
  9242                           ;stkvar	_divisor @ sp[(-2)+-16]
  9243  003CBC  0EF5               	movlw	-11
  9244  003CBE  AEE3               	btfss	plusw1,7,c
  9245  003CC0  D7EA               	goto	l4558
  9246  003CC2                     u2350:
  9247                           
  9248                           ;stkvar	_divisor @ sp[(-2)+-16]
  9249                           ;stkvar	_dividend @ sp[(-2)+-8]
  9250  003CC2  50E1               	movf	fsr1l,w,c
  9251  003CC4  0FF6               	addlw	-10
  9252  003CC6  6ED9               	movwf	fsr2l,c
  9253  003CC8  50E2               	movf	fsr1h,w,c
  9254  003CCA  6EDA               	movwf	fsr2h,c
  9255  003CCC  0EFF               	movlw	255
  9256  003CCE  22DA               	addwfc	fsr2h,f,c
  9257  003CD0  0EEE               	movlw	-18
  9258  003CD2  50E3               	movf	plusw1,w,c
  9259  003CD4  5CDE               	subwf	postinc2,w,c
  9260  003CD6  0EEF               	movlw	-17
  9261  003CD8  50E3               	movf	plusw1,w,c
  9262  003CDA  58DE               	subwfb	postinc2,w,c
  9263  003CDC  0EF0               	movlw	-16
  9264  003CDE  50E3               	movf	plusw1,w,c
  9265  003CE0  58DE               	subwfb	postinc2,w,c
  9266  003CE2  0EF1               	movlw	-15
  9267  003CE4  50E3               	movf	plusw1,w,c
  9268  003CE6  58DE               	subwfb	postinc2,w,c
  9269  003CE8  0EF2               	movlw	-14
  9270  003CEA  50E3               	movf	plusw1,w,c
  9271  003CEC  58DE               	subwfb	postinc2,w,c
  9272  003CEE  0EF3               	movlw	-13
  9273  003CF0  50E3               	movf	plusw1,w,c
  9274  003CF2  58DE               	subwfb	postinc2,w,c
  9275  003CF4  0EF4               	movlw	-12
  9276  003CF6  50E3               	movf	plusw1,w,c
  9277  003CF8  58DE               	subwfb	postinc2,w,c
  9278  003CFA  0EF5               	movlw	-11
  9279  003CFC  50E3               	movf	plusw1,w,c
  9280  003CFE  58DE               	subwfb	postinc2,w,c
  9281  003D00  A0D8               	btfss	status,0,c
  9282  003D02  D01F               	goto	l4566
  9283                           
  9284                           ;stkvar	_divisor @ sp[(-2)+-16]
  9285                           ;stkvar	_dividend @ sp[(-2)+-8]
  9286  003D04  50E1               	movf	fsr1l,w,c
  9287  003D06  0FF6               	addlw	-10
  9288  003D08  6ED9               	movwf	fsr2l,c
  9289  003D0A  50E2               	movf	fsr1h,w,c
  9290  003D0C  6EDA               	movwf	fsr2h,c
  9291  003D0E  0EFF               	movlw	255
  9292  003D10  22DA               	addwfc	fsr2h,f,c
  9293  003D12  0EEE               	movlw	-18
  9294  003D14  50E3               	movf	plusw1,w,c
  9295  003D16  5EDE               	subwf	postinc2,f,c
  9296  003D18  0EEF               	movlw	-17
  9297  003D1A  50E3               	movf	plusw1,w,c
  9298  003D1C  5ADE               	subwfb	postinc2,f,c
  9299  003D1E  0EF0               	movlw	-16
  9300  003D20  50E3               	movf	plusw1,w,c
  9301  003D22  5ADE               	subwfb	postinc2,f,c
  9302  003D24  0EF1               	movlw	-15
  9303  003D26  50E3               	movf	plusw1,w,c
  9304  003D28  5ADE               	subwfb	postinc2,f,c
  9305  003D2A  0EF2               	movlw	-14
  9306  003D2C  50E3               	movf	plusw1,w,c
  9307  003D2E  5ADE               	subwfb	postinc2,f,c
  9308  003D30  0EF3               	movlw	-13
  9309  003D32  50E3               	movf	plusw1,w,c
  9310  003D34  5ADE               	subwfb	postinc2,f,c
  9311  003D36  0EF4               	movlw	-12
  9312  003D38  50E3               	movf	plusw1,w,c
  9313  003D3A  5ADE               	subwfb	postinc2,f,c
  9314  003D3C  0EF5               	movlw	-11
  9315  003D3E  50E3               	movf	plusw1,w,c
  9316  003D40  5ADE               	subwfb	postinc2,f,c
  9317  003D42                     l4566:
  9318                           
  9319                           ;stkvar	_divisor @ sp[(-2)+-16]
  9320  003D42  90D8               	bcf	status,0,c
  9321  003D44  0EF5               	movlw	-11
  9322  003D46  32E3               	rrcf	plusw1,f,c
  9323  003D48  0EF4               	movlw	-12
  9324  003D4A  32E3               	rrcf	plusw1,f,c
  9325  003D4C  0EF3               	movlw	-13
  9326  003D4E  32E3               	rrcf	plusw1,f,c
  9327  003D50  0EF2               	movlw	-14
  9328  003D52  32E3               	rrcf	plusw1,f,c
  9329  003D54  0EF1               	movlw	-15
  9330  003D56  32E3               	rrcf	plusw1,f,c
  9331  003D58  0EF0               	movlw	-16
  9332  003D5A  32E3               	rrcf	plusw1,f,c
  9333  003D5C  0EEF               	movlw	-17
  9334  003D5E  32E3               	rrcf	plusw1,f,c
  9335  003D60  0EEE               	movlw	-18
  9336  003D62  32E3               	rrcf	plusw1,f,c
  9337                           
  9338                           ;stkvar	_counter @ sp[(-2)+1]
  9339  003D64  0EFF               	movlw	-1
  9340  003D66  50E3               	movf	plusw1,w,c
  9341  003D68  6E3A               	movwf	btemp,c
  9342  003D6A  0E01               	movlw	1
  9343  003D6C  5E3A               	subwf	btemp,f,c
  9344  003D6E  0EFF               	movlw	-1
  9345  003D70  0060  F0EB  FFE3   	movff	btemp,plusw1
  9346  003D76  A4D8               	btfss	status,2,c
  9347  003D78  D7A4               	goto	u2350
  9348  003D7A                     u2370:
  9349                           
  9350                           ;stkvar	_sign @ sp[(-2)+0]
  9351  003D7A  0EFE               	movlw	-2
  9352  003D7C  50E3               	movf	plusw1,w,c
  9353  003D7E  B4D8               	btfsc	status,2,c
  9354  003D80  D025               	goto	u2390
  9355                           
  9356                           ;stkvar	_dividend @ sp[(-2)+-8]
  9357                           ;stkvar	_dividend @ sp[(-2)+-8]
  9358  003D82  0EF6               	movlw	-10
  9359  003D84  6CE3               	negf	plusw1,c
  9360  003D86  0EF7               	movlw	-9
  9361  003D88  1EE3               	comf	plusw1,f,c
  9362  003D8A  0EF8               	movlw	-8
  9363  003D8C  1EE3               	comf	plusw1,f,c
  9364  003D8E  0EF9               	movlw	-7
  9365  003D90  1EE3               	comf	plusw1,f,c
  9366  003D92  0EFA               	movlw	-6
  9367  003D94  1EE3               	comf	plusw1,f,c
  9368  003D96  0EFB               	movlw	-5
  9369  003D98  1EE3               	comf	plusw1,f,c
  9370  003D9A  0EFC               	movlw	-4
  9371  003D9C  1EE3               	comf	plusw1,f,c
  9372  003D9E  0EFD               	movlw	-3
  9373  003DA0  1EE3               	comf	plusw1,f,c
  9374  003DA2  E314               	bnc	u2390
  9375  003DA4  0EF7               	movlw	-9
  9376  003DA6  2AE3               	incf	plusw1,f,c
  9377  003DA8  E311               	bnc	u2390
  9378  003DAA  0EF8               	movlw	-8
  9379  003DAC  2AE3               	incf	plusw1,f,c
  9380  003DAE  E30E               	bnc	u2390
  9381  003DB0  0EF9               	movlw	-7
  9382  003DB2  2AE3               	incf	plusw1,f,c
  9383  003DB4  E30B               	bnc	u2390
  9384  003DB6  0EFA               	movlw	-6
  9385  003DB8  2AE3               	incf	plusw1,f,c
  9386  003DBA  E308               	bnc	u2390
  9387  003DBC  0EFB               	movlw	-5
  9388  003DBE  2AE3               	incf	plusw1,f,c
  9389  003DC0  E305               	bnc	u2390
  9390  003DC2  0EFC               	movlw	-4
  9391  003DC4  2AE3               	incf	plusw1,f,c
  9392  003DC6  E302               	bnc	u2390
  9393  003DC8  0EFD               	movlw	-3
  9394  003DCA  2AE3               	incf	plusw1,f,c
  9395  003DCC                     u2390:
  9396                           
  9397                           ;stkvar	_dividend @ sp[(-2)+-8]
  9398  003DCC  0EF6               	movlw	246
  9399  003DCE  24E1               	addwf	fsr1l,w,c
  9400  003DD0  6ED9               	movwf	fsr2l,c
  9401  003DD2  0EFF               	movlw	255
  9402  003DD4  20E2               	addwfc	fsr1h,w,c
  9403  003DD6  6EDA               	movwf	fsr2h,c
  9404                           
  9405                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9406  003DD8  0E08               	movlw	8
  9407  003DDA  6E3A               	movwf	btemp,c
  9408  003DDC  0EF6               	movlw	-10
  9409  003DDE                     us240999:
  9410  003DDE  006F FF7B FFE3     	movff	postinc2,plusw1
  9411  003DE4  28E8               	incf	wreg,w,c
  9412  003DE6  2E3A               	decfsz	btemp,f,c
  9413  003DE8  D7FA               	bra	us240999
  9414                           
  9415                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9416  003DEA  52E5               	movf	postdec1,f,c
  9417  003DEC  52E5               	movf	postdec1,f,c
  9418  003DEE  0012               	return		;funcret
  9419  003DF0                     __end_of___aomod:
  9420                           	opt callstack 0
  9421                           
  9422 ;; *************** function ___aodiv *****************
  9423 ;; Defined at:
  9424 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  dividend        8  [STACK] long long 
  9427 ;;  divisor         8  [STACK] long long 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  quotient        8  [STACK] long long 
  9430 ;;  sign            1  [STACK] unsigned char 
  9431 ;;  counter         1  [STACK] unsigned char 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  8  [STACK] long long 
  9434 ;; Registers used:
  9435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9445 ;;Total ram usage:        0 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    3
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_dtoa
  9452 ;; This function uses a reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text46
  9456  0036B2                     __ptext46:
  9457                           	opt callstack 0
  9458  0036B2                     ___aodiv:
  9459                           	opt callstack 0
  9460                           
  9461                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9462  0036B2  0E0A               	movlw	10
  9463  0036B4  26E1               	addwf	fsr1l,f,c
  9464  0036B6  0E00               	movlw	0
  9465  0036B8  22E2               	addwfc	fsr1h,f,c
  9466                           
  9467                           ;stkvar	_sign @ sp[(-10)+8]
  9468                           
  9469                           ;incstack = 0
  9470  0036BA  0EFE               	movlw	-2
  9471  0036BC  6AE3               	clrf	plusw1,c
  9472                           
  9473                           ;stkvar	_divisor @ sp[(-10)+-16]
  9474  0036BE  0EED               	movlw	-19
  9475  0036C0  AEE3               	btfss	plusw1,7,c
  9476  0036C2  D028               	goto	l4506
  9477                           
  9478                           ;stkvar	_divisor @ sp[(-10)+-16]
  9479                           ;stkvar	_divisor @ sp[(-10)+-16]
  9480  0036C4  0EE6               	movlw	-26
  9481  0036C6  6CE3               	negf	plusw1,c
  9482  0036C8  0EE7               	movlw	-25
  9483  0036CA  1EE3               	comf	plusw1,f,c
  9484  0036CC  0EE8               	movlw	-24
  9485  0036CE  1EE3               	comf	plusw1,f,c
  9486  0036D0  0EE9               	movlw	-23
  9487  0036D2  1EE3               	comf	plusw1,f,c
  9488  0036D4  0EEA               	movlw	-22
  9489  0036D6  1EE3               	comf	plusw1,f,c
  9490  0036D8  0EEB               	movlw	-21
  9491  0036DA  1EE3               	comf	plusw1,f,c
  9492  0036DC  0EEC               	movlw	-20
  9493  0036DE  1EE3               	comf	plusw1,f,c
  9494  0036E0  0EED               	movlw	-19
  9495  0036E2  1EE3               	comf	plusw1,f,c
  9496  0036E4  E314               	bnc	u2190
  9497  0036E6  0EE7               	movlw	-25
  9498  0036E8  2AE3               	incf	plusw1,f,c
  9499  0036EA  E311               	bnc	u2190
  9500  0036EC  0EE8               	movlw	-24
  9501  0036EE  2AE3               	incf	plusw1,f,c
  9502  0036F0  E30E               	bnc	u2190
  9503  0036F2  0EE9               	movlw	-23
  9504  0036F4  2AE3               	incf	plusw1,f,c
  9505  0036F6  E30B               	bnc	u2190
  9506  0036F8  0EEA               	movlw	-22
  9507  0036FA  2AE3               	incf	plusw1,f,c
  9508  0036FC  E308               	bnc	u2190
  9509  0036FE  0EEB               	movlw	-21
  9510  003700  2AE3               	incf	plusw1,f,c
  9511  003702  E305               	bnc	u2190
  9512  003704  0EEC               	movlw	-20
  9513  003706  2AE3               	incf	plusw1,f,c
  9514  003708  E302               	bnc	u2190
  9515  00370A  0EED               	movlw	-19
  9516  00370C  2AE3               	incf	plusw1,f,c
  9517  00370E                     u2190:
  9518                           
  9519                           ;stkvar	_sign @ sp[(-10)+8]
  9520  00370E  0EFE               	movlw	-2
  9521  003710  6AE3               	clrf	plusw1,c
  9522  003712  2AE3               	incf	plusw1,f,c
  9523  003714                     l4506:
  9524                           
  9525                           ;stkvar	_dividend @ sp[(-10)+-8]
  9526  003714  0EF5               	movlw	-11
  9527  003716  AEE3               	btfss	plusw1,7,c
  9528  003718  D027               	goto	l4512
  9529                           
  9530                           ;stkvar	_dividend @ sp[(-10)+-8]
  9531                           ;stkvar	_dividend @ sp[(-10)+-8]
  9532  00371A  0EEE               	movlw	-18
  9533  00371C  6CE3               	negf	plusw1,c
  9534  00371E  0EEF               	movlw	-17
  9535  003720  1EE3               	comf	plusw1,f,c
  9536  003722  0EF0               	movlw	-16
  9537  003724  1EE3               	comf	plusw1,f,c
  9538  003726  0EF1               	movlw	-15
  9539  003728  1EE3               	comf	plusw1,f,c
  9540  00372A  0EF2               	movlw	-14
  9541  00372C  1EE3               	comf	plusw1,f,c
  9542  00372E  0EF3               	movlw	-13
  9543  003730  1EE3               	comf	plusw1,f,c
  9544  003732  0EF4               	movlw	-12
  9545  003734  1EE3               	comf	plusw1,f,c
  9546  003736  0EF5               	movlw	-11
  9547  003738  1EE3               	comf	plusw1,f,c
  9548  00373A  E314               	bnc	u2210
  9549  00373C  0EEF               	movlw	-17
  9550  00373E  2AE3               	incf	plusw1,f,c
  9551  003740  E311               	bnc	u2210
  9552  003742  0EF0               	movlw	-16
  9553  003744  2AE3               	incf	plusw1,f,c
  9554  003746  E30E               	bnc	u2210
  9555  003748  0EF1               	movlw	-15
  9556  00374A  2AE3               	incf	plusw1,f,c
  9557  00374C  E30B               	bnc	u2210
  9558  00374E  0EF2               	movlw	-14
  9559  003750  2AE3               	incf	plusw1,f,c
  9560  003752  E308               	bnc	u2210
  9561  003754  0EF3               	movlw	-13
  9562  003756  2AE3               	incf	plusw1,f,c
  9563  003758  E305               	bnc	u2210
  9564  00375A  0EF4               	movlw	-12
  9565  00375C  2AE3               	incf	plusw1,f,c
  9566  00375E  E302               	bnc	u2210
  9567  003760  0EF5               	movlw	-11
  9568  003762  2AE3               	incf	plusw1,f,c
  9569  003764                     u2210:
  9570                           
  9571                           ;stkvar	_sign @ sp[(-10)+8]
  9572  003764  0EFE               	movlw	-2
  9573  003766  70E3               	btg	plusw1,0,c
  9574  003768                     l4512:
  9575                           
  9576                           ;stkvar	_quotient @ sp[(-10)+0]
  9577  003768  0E07               	movlw	7
  9578  00376A  6E3A               	movwf	btemp,c
  9579  00376C  0EF6               	movlw	-10
  9580  00376E                     u2221:
  9581  00376E  6AE3               	clrf	plusw1,c
  9582  003770  2AE8               	incf	wreg,f,c
  9583  003772  063A               	decf	btemp,f,c
  9584  003774  E2FC               	bc	u2221
  9585                           
  9586                           ;stkvar	_divisor @ sp[(-10)+-16]
  9587  003776  0EE6               	movlw	-26
  9588  003778  50E3               	movf	plusw1,w,c
  9589  00377A  E116               	bnz	u2230
  9590  00377C  0EE7               	movlw	-25
  9591  00377E  50E3               	movf	plusw1,w,c
  9592  003780  E113               	bnz	u2230
  9593  003782  0EE8               	movlw	-24
  9594  003784  50E3               	movf	plusw1,w,c
  9595  003786  E110               	bnz	u2230
  9596  003788  0EE9               	movlw	-23
  9597  00378A  50E3               	movf	plusw1,w,c
  9598  00378C  E10D               	bnz	u2230
  9599  00378E  0EEA               	movlw	-22
  9600  003790  50E3               	movf	plusw1,w,c
  9601  003792  E10A               	bnz	u2230
  9602  003794  0EEB               	movlw	-21
  9603  003796  50E3               	movf	plusw1,w,c
  9604  003798  E107               	bnz	u2230
  9605  00379A  0EEC               	movlw	-20
  9606  00379C  50E3               	movf	plusw1,w,c
  9607  00379E  E104               	bnz	u2230
  9608  0037A0  0EED               	movlw	-19
  9609  0037A2  50E3               	movf	plusw1,w,c
  9610  0037A4  B4D8               	btfsc	status,2,c
  9611  0037A6  D088               	goto	u2260
  9612  0037A8                     u2230:
  9613                           
  9614                           ;stkvar	_counter @ sp[(-10)+9]
  9615  0037A8  0EFF               	movlw	-1
  9616  0037AA  6AE3               	clrf	plusw1,c
  9617  0037AC  D012               	goto	L17
  9618  0037AE                     l4518:
  9619                           
  9620                           ;stkvar	_divisor @ sp[(-10)+-16]
  9621  0037AE  90D8               	bcf	status,0,c
  9622  0037B0  0EE6               	movlw	-26
  9623  0037B2  36E3               	rlcf	plusw1,f,c
  9624  0037B4  0EE7               	movlw	-25
  9625  0037B6  36E3               	rlcf	plusw1,f,c
  9626  0037B8  0EE8               	movlw	-24
  9627  0037BA  36E3               	rlcf	plusw1,f,c
  9628  0037BC  0EE9               	movlw	-23
  9629  0037BE  36E3               	rlcf	plusw1,f,c
  9630  0037C0  0EEA               	movlw	-22
  9631  0037C2  36E3               	rlcf	plusw1,f,c
  9632  0037C4  0EEB               	movlw	-21
  9633  0037C6  36E3               	rlcf	plusw1,f,c
  9634  0037C8  0EEC               	movlw	-20
  9635  0037CA  36E3               	rlcf	plusw1,f,c
  9636  0037CC  0EED               	movlw	-19
  9637  0037CE  36E3               	rlcf	plusw1,f,c
  9638                           
  9639                           ;stkvar	_counter @ sp[(-10)+9]
  9640  0037D0  0EFF               	movlw	-1
  9641  0037D2                     L17:
  9642  0037D2  2AE3               	incf	plusw1,f,c
  9643                           
  9644                           ;stkvar	_divisor @ sp[(-10)+-16]
  9645  0037D4  0EED               	movlw	-19
  9646  0037D6  AEE3               	btfss	plusw1,7,c
  9647  0037D8  D7EA               	goto	l4518
  9648  0037DA                     u2240:
  9649                           
  9650                           ;stkvar	_quotient @ sp[(-10)+0]
  9651  0037DA  90D8               	bcf	status,0,c
  9652  0037DC  0EF6               	movlw	-10
  9653  0037DE  36E3               	rlcf	plusw1,f,c
  9654  0037E0  0EF7               	movlw	-9
  9655  0037E2  36E3               	rlcf	plusw1,f,c
  9656  0037E4  0EF8               	movlw	-8
  9657  0037E6  36E3               	rlcf	plusw1,f,c
  9658  0037E8  0EF9               	movlw	-7
  9659  0037EA  36E3               	rlcf	plusw1,f,c
  9660  0037EC  0EFA               	movlw	-6
  9661  0037EE  36E3               	rlcf	plusw1,f,c
  9662  0037F0  0EFB               	movlw	-5
  9663  0037F2  36E3               	rlcf	plusw1,f,c
  9664  0037F4  0EFC               	movlw	-4
  9665  0037F6  36E3               	rlcf	plusw1,f,c
  9666  0037F8  0EFD               	movlw	-3
  9667  0037FA  36E3               	rlcf	plusw1,f,c
  9668                           
  9669                           ;stkvar	_divisor @ sp[(-10)+-16]
  9670                           ;stkvar	_dividend @ sp[(-10)+-8]
  9671  0037FC  50E1               	movf	fsr1l,w,c
  9672  0037FE  0FEE               	addlw	-18
  9673  003800  6ED9               	movwf	fsr2l,c
  9674  003802  50E2               	movf	fsr1h,w,c
  9675  003804  6EDA               	movwf	fsr2h,c
  9676  003806  0EFF               	movlw	255
  9677  003808  22DA               	addwfc	fsr2h,f,c
  9678  00380A  0EE6               	movlw	-26
  9679  00380C  50E3               	movf	plusw1,w,c
  9680  00380E  5CDE               	subwf	postinc2,w,c
  9681  003810  0EE7               	movlw	-25
  9682  003812  50E3               	movf	plusw1,w,c
  9683  003814  58DE               	subwfb	postinc2,w,c
  9684  003816  0EE8               	movlw	-24
  9685  003818  50E3               	movf	plusw1,w,c
  9686  00381A  58DE               	subwfb	postinc2,w,c
  9687  00381C  0EE9               	movlw	-23
  9688  00381E  50E3               	movf	plusw1,w,c
  9689  003820  58DE               	subwfb	postinc2,w,c
  9690  003822  0EEA               	movlw	-22
  9691  003824  50E3               	movf	plusw1,w,c
  9692  003826  58DE               	subwfb	postinc2,w,c
  9693  003828  0EEB               	movlw	-21
  9694  00382A  50E3               	movf	plusw1,w,c
  9695  00382C  58DE               	subwfb	postinc2,w,c
  9696  00382E  0EEC               	movlw	-20
  9697  003830  50E3               	movf	plusw1,w,c
  9698  003832  58DE               	subwfb	postinc2,w,c
  9699  003834  0EED               	movlw	-19
  9700  003836  50E3               	movf	plusw1,w,c
  9701  003838  58DE               	subwfb	postinc2,w,c
  9702  00383A  A0D8               	btfss	status,0,c
  9703  00383C  D021               	goto	l4530
  9704                           
  9705                           ;stkvar	_divisor @ sp[(-10)+-16]
  9706                           ;stkvar	_dividend @ sp[(-10)+-8]
  9707  00383E  50E1               	movf	fsr1l,w,c
  9708  003840  0FEE               	addlw	-18
  9709  003842  6ED9               	movwf	fsr2l,c
  9710  003844  50E2               	movf	fsr1h,w,c
  9711  003846  6EDA               	movwf	fsr2h,c
  9712  003848  0EFF               	movlw	255
  9713  00384A  22DA               	addwfc	fsr2h,f,c
  9714  00384C  0EE6               	movlw	-26
  9715  00384E  50E3               	movf	plusw1,w,c
  9716  003850  5EDE               	subwf	postinc2,f,c
  9717  003852  0EE7               	movlw	-25
  9718  003854  50E3               	movf	plusw1,w,c
  9719  003856  5ADE               	subwfb	postinc2,f,c
  9720  003858  0EE8               	movlw	-24
  9721  00385A  50E3               	movf	plusw1,w,c
  9722  00385C  5ADE               	subwfb	postinc2,f,c
  9723  00385E  0EE9               	movlw	-23
  9724  003860  50E3               	movf	plusw1,w,c
  9725  003862  5ADE               	subwfb	postinc2,f,c
  9726  003864  0EEA               	movlw	-22
  9727  003866  50E3               	movf	plusw1,w,c
  9728  003868  5ADE               	subwfb	postinc2,f,c
  9729  00386A  0EEB               	movlw	-21
  9730  00386C  50E3               	movf	plusw1,w,c
  9731  00386E  5ADE               	subwfb	postinc2,f,c
  9732  003870  0EEC               	movlw	-20
  9733  003872  50E3               	movf	plusw1,w,c
  9734  003874  5ADE               	subwfb	postinc2,f,c
  9735  003876  0EED               	movlw	-19
  9736  003878  50E3               	movf	plusw1,w,c
  9737  00387A  5ADE               	subwfb	postinc2,f,c
  9738                           
  9739                           ;stkvar	_quotient @ sp[(-10)+0]
  9740  00387C  0EF6               	movlw	-10
  9741  00387E  80E3               	bsf	plusw1,0,c
  9742  003880                     l4530:
  9743                           
  9744                           ;stkvar	_divisor @ sp[(-10)+-16]
  9745  003880  90D8               	bcf	status,0,c
  9746  003882  0EED               	movlw	-19
  9747  003884  32E3               	rrcf	plusw1,f,c
  9748  003886  0EEC               	movlw	-20
  9749  003888  32E3               	rrcf	plusw1,f,c
  9750  00388A  0EEB               	movlw	-21
  9751  00388C  32E3               	rrcf	plusw1,f,c
  9752  00388E  0EEA               	movlw	-22
  9753  003890  32E3               	rrcf	plusw1,f,c
  9754  003892  0EE9               	movlw	-23
  9755  003894  32E3               	rrcf	plusw1,f,c
  9756  003896  0EE8               	movlw	-24
  9757  003898  32E3               	rrcf	plusw1,f,c
  9758  00389A  0EE7               	movlw	-25
  9759  00389C  32E3               	rrcf	plusw1,f,c
  9760  00389E  0EE6               	movlw	-26
  9761  0038A0  32E3               	rrcf	plusw1,f,c
  9762                           
  9763                           ;stkvar	_counter @ sp[(-10)+9]
  9764  0038A2  0EFF               	movlw	-1
  9765  0038A4  50E3               	movf	plusw1,w,c
  9766  0038A6  6E3A               	movwf	btemp,c
  9767  0038A8  0E01               	movlw	1
  9768  0038AA  5E3A               	subwf	btemp,f,c
  9769  0038AC  0EFF               	movlw	-1
  9770  0038AE  0060  F0EB  FFE3   	movff	btemp,plusw1
  9771  0038B4  A4D8               	btfss	status,2,c
  9772  0038B6  D791               	goto	u2240
  9773  0038B8                     u2260:
  9774                           
  9775                           ;stkvar	_sign @ sp[(-10)+8]
  9776  0038B8  0EFE               	movlw	-2
  9777  0038BA  50E3               	movf	plusw1,w,c
  9778  0038BC  B4D8               	btfsc	status,2,c
  9779  0038BE  D025               	goto	u2280
  9780                           
  9781                           ;stkvar	_quotient @ sp[(-10)+0]
  9782                           ;stkvar	_quotient @ sp[(-10)+0]
  9783  0038C0  0EF6               	movlw	-10
  9784  0038C2  6CE3               	negf	plusw1,c
  9785  0038C4  0EF7               	movlw	-9
  9786  0038C6  1EE3               	comf	plusw1,f,c
  9787  0038C8  0EF8               	movlw	-8
  9788  0038CA  1EE3               	comf	plusw1,f,c
  9789  0038CC  0EF9               	movlw	-7
  9790  0038CE  1EE3               	comf	plusw1,f,c
  9791  0038D0  0EFA               	movlw	-6
  9792  0038D2  1EE3               	comf	plusw1,f,c
  9793  0038D4  0EFB               	movlw	-5
  9794  0038D6  1EE3               	comf	plusw1,f,c
  9795  0038D8  0EFC               	movlw	-4
  9796  0038DA  1EE3               	comf	plusw1,f,c
  9797  0038DC  0EFD               	movlw	-3
  9798  0038DE  1EE3               	comf	plusw1,f,c
  9799  0038E0  E314               	bnc	u2280
  9800  0038E2  0EF7               	movlw	-9
  9801  0038E4  2AE3               	incf	plusw1,f,c
  9802  0038E6  E311               	bnc	u2280
  9803  0038E8  0EF8               	movlw	-8
  9804  0038EA  2AE3               	incf	plusw1,f,c
  9805  0038EC  E30E               	bnc	u2280
  9806  0038EE  0EF9               	movlw	-7
  9807  0038F0  2AE3               	incf	plusw1,f,c
  9808  0038F2  E30B               	bnc	u2280
  9809  0038F4  0EFA               	movlw	-6
  9810  0038F6  2AE3               	incf	plusw1,f,c
  9811  0038F8  E308               	bnc	u2280
  9812  0038FA  0EFB               	movlw	-5
  9813  0038FC  2AE3               	incf	plusw1,f,c
  9814  0038FE  E305               	bnc	u2280
  9815  003900  0EFC               	movlw	-4
  9816  003902  2AE3               	incf	plusw1,f,c
  9817  003904  E302               	bnc	u2280
  9818  003906  0EFD               	movlw	-3
  9819  003908  2AE3               	incf	plusw1,f,c
  9820  00390A                     u2280:
  9821                           
  9822                           ;stkvar	_quotient @ sp[(-10)+0]
  9823  00390A  0EF6               	movlw	246
  9824  00390C  24E1               	addwf	fsr1l,w,c
  9825  00390E  6ED9               	movwf	fsr2l,c
  9826  003910  0EFF               	movlw	255
  9827  003912  20E2               	addwfc	fsr1h,w,c
  9828  003914  6EDA               	movwf	fsr2h,c
  9829                           
  9830                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9831  003916  0E08               	movlw	8
  9832  003918  6E3A               	movwf	btemp,c
  9833  00391A  0EEE               	movlw	-18
  9834  00391C                     us229999:
  9835  00391C  006F FF7B FFE3     	movff	postinc2,plusw1
  9836  003922  28E8               	incf	wreg,w,c
  9837  003924  2E3A               	decfsz	btemp,f,c
  9838  003926  D7FA               	bra	us229999
  9839                           
  9840                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9841  003928  0EF6               	movlw	246
  9842  00392A  26E1               	addwf	fsr1l,f,c
  9843  00392C  0EFF               	movlw	255
  9844  00392E  22E2               	addwfc	fsr1h,f,c
  9845  003930  0012               	return		;funcret
  9846  003932                     __end_of___aodiv:
  9847                           	opt callstack 0
  9848                           
  9849 ;; *************** function _atoi *****************
  9850 ;; Defined at:
  9851 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  s               1  [STACK] PTR const unsigned char 
  9854 ;;		 -> STR_7(3), STR_6(3), STR_5(23), STR_4(6), 
  9855 ;;		 -> STR_3(10), STR_2(12), STR_1(61), 
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;  n               2  [STACK] int 
  9858 ;;  neg             2  [STACK] int 
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  2  [STACK] int 
  9861 ;; Registers used:
  9862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/1
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;Total ram usage:        0 bytes
  9873 ;; Hardware stack levels used:    1
  9874 ;; Hardware stack levels required when called:    4
  9875 ;; This function calls:
  9876 ;;		_isdigit
  9877 ;;		_isspace
  9878 ;; This function is called by:
  9879 ;;		_vfpfcnvrt
  9880 ;; This function uses a reentrant model
  9881 ;;
  9882                           
  9883                           	psect	text47
  9884  003DF0                     __ptext47:
  9885                           	opt callstack 0
  9886  003DF0                     _atoi:
  9887                           	opt callstack 0
  9888                           
  9889                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9890  003DF0  0E09               	movlw	9
  9891  003DF2  26E1               	addwf	fsr1l,f,c
  9892  003DF4  0E00               	movlw	0
  9893  003DF6  22E2               	addwfc	fsr1h,f,c
  9894                           
  9895                           ;stkvar	_n @ sp[(-9)+5]
  9896                           
  9897                           ;incstack = 0
  9898  003DF8  0EFC               	movlw	-4
  9899  003DFA  6AE3               	clrf	plusw1,c
  9900  003DFC  0EFD               	movlw	-3
  9901  003DFE  6AE3               	clrf	plusw1,c
  9902                           
  9903                           ;stkvar	_neg @ sp[(-9)+7]
  9904  003E00  0EFE               	movlw	-2
  9905  003E02  6AE3               	clrf	plusw1,c
  9906  003E04  0EFF               	movlw	-1
  9907  003E06  6AE3               	clrf	plusw1,c
  9908  003E08  D002               	goto	l2325
  9909  003E0A                     l4782:
  9910                           
  9911                           ;stkvar	_s @ sp[(-9)+-1]
  9912  003E0A  0EF6               	movlw	-10
  9913  003E0C  2AE3               	incf	plusw1,f,c
  9914  003E0E                     l2325:
  9915                           
  9916                           ;stkvar	_atoi$3915 @ sp[(-9)+4]
  9917  003E0E  0EFB               	movlw	-5
  9918  003E10  6AE3               	clrf	plusw1,c
  9919  003E12  2AE3               	incf	plusw1,f,c
  9920                           
  9921                           ;stkvar	_s @ sp[(-9)+-1]
  9922  003E14  50E1               	movf	fsr1l,w,c
  9923  003E16  0FF6               	addlw	-10
  9924  003E18  6ED9               	movwf	fsr2l,c
  9925  003E1A  50E2               	movf	fsr1h,w,c
  9926  003E1C  6EDA               	movwf	fsr2h,c
  9927  003E1E  0EFF               	movlw	255
  9928  003E20  22DA               	addwfc	fsr2h,f,c
  9929  003E22  006F FF7F FFF6     	movff	indf2,tblptrl
  9930  003E28                     	if	1	;There is more than 1 active tblptr byte
  9931  003E28  0E20               	movlw	high __smallconst
  9932  003E2A  6EF7               	movwf	tblptrh,c
  9933  003E2C                     	endif
  9934  003E2C                     	if	0	;tblptru may be non-zero
  9935  003E2C                     	endif
  9936  003E2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9937  003E2C  0E00               	movlw	low (__smallconst shr (0+16))
  9938  003E2E  6EF8               	movwf	tblptru,c
  9939  003E30                     	endif
  9940  003E30  0008               	tblrd		*
  9941  003E32  50F5               	movf	tablat,w,c
  9942  003E34  0A20               	xorlw	32
  9943  003E36  B4D8               	btfsc	status,2,c
  9944  003E38  D022               	goto	l4790
  9945  003E3A  0EF7               	movlw	247
  9946  003E3C  6E44               	movwf	btemp+10,c
  9947  003E3E  0EFF               	movlw	255
  9948  003E40  6E45               	movwf	btemp+11,c
  9949                           
  9950                           ;stkvar	_s @ sp[(-9)+-1]
  9951  003E42  50E1               	movf	fsr1l,w,c
  9952  003E44  0FF6               	addlw	-10
  9953  003E46  6ED9               	movwf	fsr2l,c
  9954  003E48  50E2               	movf	fsr1h,w,c
  9955  003E4A  6EDA               	movwf	fsr2h,c
  9956  003E4C  0EFF               	movlw	255
  9957  003E4E  22DA               	addwfc	fsr2h,f,c
  9958  003E50  006F FF7F FFF6     	movff	indf2,tblptrl
  9959  003E56                     	if	1	;There is more than 1 active tblptr byte
  9960  003E56  0E20               	movlw	high __smallconst
  9961  003E58  6EF7               	movwf	tblptrh,c
  9962  003E5A                     	endif
  9963  003E5A                     	if	0	;tblptru may be non-zero
  9964  003E5A                     	endif
  9965  003E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9966  003E5A  0E00               	movlw	low (__smallconst shr (0+16))
  9967  003E5C  6EF8               	movwf	tblptru,c
  9968  003E5E                     	endif
  9969  003E5E  0008               	tblrd		*
  9970  003E60  50F5               	movf	tablat,w,c
  9971  003E62  6E42               	movwf	btemp+8,c
  9972  003E64  6A43               	clrf	btemp+9,c
  9973  003E66  5044               	movf	btemp+10,w,c
  9974  003E68  2642               	addwf	btemp+8,f,c
  9975  003E6A  5045               	movf	btemp+11,w,c
  9976  003E6C  2243               	addwfc	btemp+9,f,c
  9977  003E6E  5043               	movf	btemp+9,w,c
  9978  003E70  E104               	bnz	u2880
  9979  003E72  0E05               	movlw	5
  9980  003E74  5C42               	subwf	btemp+8,w,c
  9981  003E76  A0D8               	btfss	status,0,c
  9982  003E78  D002               	goto	l4790
  9983  003E7A                     u2880:
  9984                           
  9985                           ;stkvar	_atoi$3915 @ sp[(-9)+4]
  9986  003E7A  0EFB               	movlw	-5
  9987  003E7C  6AE3               	clrf	plusw1,c
  9988  003E7E                     l4790:
  9989                           
  9990                           ;stkvar	_atoi$3915 @ sp[(-9)+4]
  9991  003E7E  0EFB               	movlw	-5
  9992  003E80  50E3               	movf	plusw1,w,c
  9993  003E82  6E44               	movwf	btemp+10,c
  9994  003E84  6A45               	clrf	btemp+11,c
  9995                           
  9996                           ;stkvar	_atoi$3914 @ sp[(-9)+2]
  9997  003E86  0EF9               	movlw	-7
  9998  003E88  0060  F113  FFE3   	movff	btemp+10,plusw1
  9999  003E8E  0EFA               	movlw	-6
 10000  003E90  0060  F117  FFE3   	movff	btemp+11,plusw1
 10001                           
 10002                           ;stkvar	_atoi$3914 @ sp[(-9)+2]
 10003  003E96  0EF9               	movlw	-7
 10004  003E98  006F FF8C  F03A    	movff	plusw1,btemp
 10005  003E9E  0EFA               	movlw	-6
 10006  003EA0  50E3               	movf	plusw1,w,c
 10007  003EA2  103A               	iorwf	btemp,w,c
 10008  003EA4  B4D8               	btfsc	status,2,c
 10009  003EA6  D010               	goto	l4800
 10010  003EA8  D7B0               	goto	l4782
 10011  003EAA                     l4796:
 10012  003EAA  0E01               	movlw	1
 10013  003EAC  6E44               	movwf	btemp+10,c
 10014  003EAE  0E00               	movlw	0
 10015  003EB0  6E45               	movwf	btemp+11,c
 10016                           
 10017                           ;stkvar	_neg @ sp[(-9)+7]
 10018  003EB2  0EFE               	movlw	-2
 10019  003EB4  0060  F113  FFE3   	movff	btemp+10,plusw1
 10020  003EBA  0EFF               	movlw	-1
 10021  003EBC  0060  F117  FFE3   	movff	btemp+11,plusw1
 10022  003EC2                     l4798:
 10023                           
 10024                           ;stkvar	_s @ sp[(-9)+-1]
 10025  003EC2  0EF6               	movlw	-10
 10026  003EC4  2AE3               	incf	plusw1,f,c
 10027  003EC6  D051               	goto	l4806
 10028  003EC8                     l4800:
 10029                           
 10030                           ;stkvar	_s @ sp[(-9)+-1]
 10031  003EC8  50E1               	movf	fsr1l,w,c
 10032  003ECA  0FF6               	addlw	-10
 10033  003ECC  6ED9               	movwf	fsr2l,c
 10034  003ECE  50E2               	movf	fsr1h,w,c
 10035  003ED0  6EDA               	movwf	fsr2h,c
 10036  003ED2  0EFF               	movlw	255
 10037  003ED4  22DA               	addwfc	fsr2h,f,c
 10038  003ED6  006F FF7F FFF6     	movff	indf2,tblptrl
 10039  003EDC                     	if	1	;There is more than 1 active tblptr byte
 10040  003EDC  0E20               	movlw	high __smallconst
 10041  003EDE  6EF7               	movwf	tblptrh,c
 10042  003EE0                     	endif
 10043  003EE0                     	if	0	;tblptru may be non-zero
 10044  003EE0                     	endif
 10045  003EE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10046  003EE0  0E00               	movlw	low (__smallconst shr (0+16))
 10047  003EE2  6EF8               	movwf	tblptru,c
 10048  003EE4                     	endif
 10049  003EE4  0008               	tblrd		*
 10050  003EE6  50F5               	movf	tablat,w,c
 10051  003EE8  6E44               	movwf	btemp+10,c
 10052  003EEA  6A45               	clrf	btemp+11,c
 10053                           
 10054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10055                           ; Switch size 1, requested type "simple"
 10056                           ; Number of cases is 1, Range of values is 0 to 0
 10057                           ; switch strategies available:
 10058                           ; Name         Instructions Cycles
 10059                           ; simple_byte            4     3 (average)
 10060                           ;	Chosen strategy is simple_byte
 10061  003EEC  5045               	movf	btemp+11,w,c
 10062  003EEE  0A00               	xorlw	0	; case 0
 10063  003EF0  A4D8               	btfss	status,2,c
 10064  003EF2  D03B               	goto	l4806
 10065                           
 10066                           ; Switch size 1, requested type "simple"
 10067                           ; Number of cases is 2, Range of values is 43 to 45
 10068                           ; switch strategies available:
 10069                           ; Name         Instructions Cycles
 10070                           ; simple_byte            7     4 (average)
 10071                           ;	Chosen strategy is simple_byte
 10072  003EF4  5044               	movf	btemp+10,w,c
 10073  003EF6  0A2B               	xorlw	43	; case 43
 10074  003EF8  B4D8               	btfsc	status,2,c
 10075  003EFA  D7E3               	goto	l4798
 10076  003EFC  0A06               	xorlw	6	; case 45
 10077  003EFE  B4D8               	btfsc	status,2,c
 10078  003F00  D7D4               	goto	l4796
 10079  003F02  D033               	goto	l4806
 10080  003F04                     l4802:
 10081                           
 10082                           ;stkvar	_n @ sp[(-9)+5]
 10083  003F04  0EFC               	movlw	-4
 10084  003F06  006F FF8C  F044    	movff	plusw1,btemp+10
 10085  003F0C  0EFD               	movlw	-3
 10086  003F0E  006F FF8C  F045    	movff	plusw1,btemp+11
 10087  003F14  0E0A               	movlw	10
 10088  003F16  0244               	mulwf	btemp+10,c
 10089  003F18  006F FFCC  F042    	movff	prodl,btemp+8
 10090  003F1E  006F FFD0  F043    	movff	prodh,btemp+9
 10091  003F24  0245               	mulwf	btemp+11,c
 10092  003F26  50F3               	movf	prodl,w,c
 10093  003F28  2643               	addwf	btemp+9,f,c
 10094                           
 10095                           ;stkvar	_s @ sp[(-9)+-1]
 10096  003F2A  50E1               	movf	fsr1l,w,c
 10097  003F2C  0FF6               	addlw	-10
 10098  003F2E  6ED9               	movwf	fsr2l,c
 10099  003F30  50E2               	movf	fsr1h,w,c
 10100  003F32  6EDA               	movwf	fsr2h,c
 10101  003F34  0EFF               	movlw	255
 10102  003F36  22DA               	addwfc	fsr2h,f,c
 10103  003F38  006F FF7F FFF6     	movff	indf2,tblptrl
 10104  003F3E                     	if	1	;There is more than 1 active tblptr byte
 10105  003F3E  0E20               	movlw	high __smallconst
 10106  003F40  6EF7               	movwf	tblptrh,c
 10107  003F42                     	endif
 10108  003F42                     	if	0	;tblptru may be non-zero
 10109  003F42                     	endif
 10110  003F42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10111  003F42  0E00               	movlw	low (__smallconst shr (0+16))
 10112  003F44  6EF8               	movwf	tblptru,c
 10113  003F46                     	endif
 10114  003F46  0008               	tblrd		*
 10115  003F48  50F5               	movf	tablat,w,c
 10116  003F4A  5E42               	subwf	btemp+8,f,c
 10117  003F4C  0E00               	movlw	0
 10118  003F4E  5A43               	subwfb	btemp+9,f,c
 10119  003F50  0E30               	movlw	48
 10120  003F52  2642               	addwf	btemp+8,f,c
 10121  003F54  0E00               	movlw	0
 10122  003F56  2243               	addwfc	btemp+9,f,c
 10123                           
 10124                           ;stkvar	_n @ sp[(-9)+5]
 10125  003F58  0EFC               	movlw	-4
 10126  003F5A  0060  F10B  FFE3   	movff	btemp+8,plusw1
 10127  003F60  0EFD               	movlw	-3
 10128  003F62  0060  F10F  FFE3   	movff	btemp+9,plusw1
 10129  003F68  D7AC               	goto	l4798
 10130  003F6A                     l4806:
 10131  003F6A  0ED0               	movlw	208
 10132  003F6C  6E44               	movwf	btemp+10,c
 10133  003F6E  0EFF               	movlw	255
 10134  003F70  6E45               	movwf	btemp+11,c
 10135                           
 10136                           ;stkvar	_s @ sp[(-9)+-1]
 10137  003F72  50E1               	movf	fsr1l,w,c
 10138  003F74  0FF6               	addlw	-10
 10139  003F76  6ED9               	movwf	fsr2l,c
 10140  003F78  50E2               	movf	fsr1h,w,c
 10141  003F7A  6EDA               	movwf	fsr2h,c
 10142  003F7C  0EFF               	movlw	255
 10143  003F7E  22DA               	addwfc	fsr2h,f,c
 10144  003F80  006F FF7F FFF6     	movff	indf2,tblptrl
 10145  003F86                     	if	1	;There is more than 1 active tblptr byte
 10146  003F86  0E20               	movlw	high __smallconst
 10147  003F88  6EF7               	movwf	tblptrh,c
 10148  003F8A                     	endif
 10149  003F8A                     	if	0	;tblptru may be non-zero
 10150  003F8A                     	endif
 10151  003F8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10152  003F8A  0E00               	movlw	low (__smallconst shr (0+16))
 10153  003F8C  6EF8               	movwf	tblptru,c
 10154  003F8E                     	endif
 10155  003F8E  0008               	tblrd		*
 10156  003F90  50F5               	movf	tablat,w,c
 10157  003F92  6E42               	movwf	btemp+8,c
 10158  003F94  6A43               	clrf	btemp+9,c
 10159  003F96  5044               	movf	btemp+10,w,c
 10160  003F98  2642               	addwf	btemp+8,f,c
 10161  003F9A  5045               	movf	btemp+11,w,c
 10162  003F9C  2243               	addwfc	btemp+9,f,c
 10163  003F9E  5043               	movf	btemp+9,w,c
 10164  003FA0  E106               	bnz	u2900
 10165  003FA2  0E0A               	movlw	10
 10166  003FA4  5C42               	subwf	btemp+8,w,c
 10167  003FA6  B0D8               	btfsc	status,0,c
 10168  003FA8  D002               	goto	u2900
 10169  003FAA  0E01               	movlw	1
 10170  003FAC  D001               	goto	u2910
 10171  003FAE                     u2900:
 10172  003FAE  0E00               	movlw	0
 10173  003FB0                     u2910:
 10174  003FB0  6E44               	movwf	btemp+10,c
 10175  003FB2  6A45               	clrf	btemp+11,c
 10176                           
 10177                           ;stkvar	_atoi$3916 @ sp[(-9)+0]
 10178  003FB4  0EF7               	movlw	-9
 10179  003FB6  0060  F113  FFE3   	movff	btemp+10,plusw1
 10180  003FBC  0EF8               	movlw	-8
 10181  003FBE  0060  F117  FFE3   	movff	btemp+11,plusw1
 10182                           
 10183                           ;stkvar	_atoi$3916 @ sp[(-9)+0]
 10184  003FC4  0EF7               	movlw	-9
 10185  003FC6  006F FF8C  F03A    	movff	plusw1,btemp
 10186  003FCC  0EF8               	movlw	-8
 10187  003FCE  50E3               	movf	plusw1,w,c
 10188  003FD0  103A               	iorwf	btemp,w,c
 10189  003FD2  A4D8               	btfss	status,2,c
 10190  003FD4  D797               	goto	l4802
 10191                           
 10192                           ;stkvar	_neg @ sp[(-9)+7]
 10193  003FD6  0EFE               	movlw	-2
 10194  003FD8  006F FF8C  F03A    	movff	plusw1,btemp
 10195  003FDE  0EFF               	movlw	-1
 10196  003FE0  50E3               	movf	plusw1,w,c
 10197  003FE2  103A               	iorwf	btemp,w,c
 10198  003FE4  A4D8               	btfss	status,2,c
 10199  003FE6  D00E               	goto	l4816
 10200                           
 10201                           ;stkvar	_n @ sp[(-9)+5]
 10202  003FE8  0EFC               	movlw	-4
 10203  003FEA  006F FF8C  F03A    	movff	plusw1,btemp
 10204  003FF0  1E3A               	comf	btemp,f,c
 10205  003FF2  0EFD               	movlw	-3
 10206  003FF4  006F FF8C  F03B    	movff	plusw1,btemp+1
 10207  003FFA  1E3B               	comf	btemp+1,f,c
 10208  003FFC  2A3A               	incf	btemp,f,c
 10209  003FFE  B4D8               	btfsc	status,2,c
 10210  004000  2A3B               	incf	btemp+1,f,c
 10211  004002  D008               	goto	l2349
 10212  004004                     l4816:
 10213                           
 10214                           ;stkvar	_n @ sp[(-9)+5]
 10215  004004  0EFC               	movlw	-4
 10216  004006  006F FF8C  F03A    	movff	plusw1,btemp
 10217  00400C  0EFD               	movlw	-3
 10218  00400E  006F FF8C  F03B    	movff	plusw1,btemp+1
 10219  004014                     l2349:
 10220                           
 10221                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
 10222  004014  0EF6               	movlw	246
 10223  004016  26E1               	addwf	fsr1l,f,c
 10224  004018  0EFF               	movlw	255
 10225  00401A  22E2               	addwfc	fsr1h,f,c
 10226  00401C  0012               	return		;funcret
 10227  00401E                     __end_of_atoi:
 10228                           	opt callstack 0
 10229                           
 10230 ;; *************** function _isspace *****************
 10231 ;; Defined at:
 10232 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  c               2  [STACK] int 
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;		None
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  2  [STACK] int 
 10239 ;; Registers used:
 10240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;Total ram usage:        0 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    3
 10253 ;; This function calls:
 10254 ;;		Nothing
 10255 ;; This function is called by:
 10256 ;;		_atoi
 10257 ;; This function uses a reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text48
 10261  0050D4                     __ptext48:
 10262                           	opt callstack 0
 10263  0050D4                     _isspace:
 10264                           	opt callstack 0
 10265                           
 10266                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10267  0050D4  52E6               	movf	postinc1,f,c
 10268                           
 10269                           ;stkvar	_isspace$3941 @ sp[(-1)+0]
 10270                           
 10271                           ;incstack = 0
 10272  0050D6  0EFF               	movlw	-1
 10273  0050D8  6AE3               	clrf	plusw1,c
 10274  0050DA  2AE3               	incf	plusw1,f,c
 10275                           
 10276                           ;stkvar	_c @ sp[(-1)+-2]
 10277  0050DC  0EFD               	movlw	-3
 10278  0050DE  006F FF8C  F03A    	movff	plusw1,btemp
 10279  0050E4  0E20               	movlw	32
 10280  0050E6  183A               	xorwf	btemp,w,c
 10281  0050E8  E104               	bnz	u2410
 10282  0050EA  0EFE               	movlw	-2
 10283  0050EC  50E3               	movf	plusw1,w,c
 10284  0050EE  B4D8               	btfsc	status,2,c
 10285  0050F0  D012               	goto	l4586
 10286  0050F2                     u2410:
 10287                           
 10288                           ;stkvar	_c @ sp[(-1)+-2]
 10289  0050F2  0EFD               	movlw	-3
 10290  0050F4  50E3               	movf	plusw1,w,c
 10291  0050F6  0FF7               	addlw	247
 10292  0050F8  6E44               	movwf	btemp+10,c
 10293  0050FA  0EFE               	movlw	-2
 10294  0050FC  006F FF8C  F045    	movff	plusw1,btemp+11
 10295  005102  0EFF               	movlw	255
 10296  005104  2245               	addwfc	btemp+11,f,c
 10297  005106  5045               	movf	btemp+11,w,c
 10298  005108  E104               	bnz	u2420
 10299  00510A  0E05               	movlw	5
 10300  00510C  5C44               	subwf	btemp+10,w,c
 10301  00510E  A0D8               	btfss	status,0,c
 10302  005110  D002               	goto	l4586
 10303  005112                     u2420:
 10304                           
 10305                           ;stkvar	_isspace$3941 @ sp[(-1)+0]
 10306  005112  0EFF               	movlw	-1
 10307  005114  6AE3               	clrf	plusw1,c
 10308  005116                     l4586:
 10309                           
 10310                           ;stkvar	_isspace$3941 @ sp[(-1)+0]
 10311  005116  0EFF               	movlw	-1
 10312  005118  50E3               	movf	plusw1,w,c
 10313  00511A  6E3A               	movwf	btemp,c
 10314  00511C  6A3B               	clrf	btemp+1,c
 10315                           
 10316                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10317  00511E  52E5               	movf	postdec1,f,c
 10318  005120  52E5               	movf	postdec1,f,c
 10319  005122  52E5               	movf	postdec1,f,c
 10320  005124  0012               	return		;funcret
 10321  005126                     __end_of_isspace:
 10322                           	opt callstack 0
 10323                           
 10324 ;; *************** function _isdigit *****************
 10325 ;; Defined at:
 10326 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;  c               2  [STACK] int 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;		None
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  2  [STACK] int 
 10333 ;; Registers used:
 10334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10344 ;;Total ram usage:        0 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; Hardware stack levels required when called:    3
 10347 ;; This function calls:
 10348 ;;		Nothing
 10349 ;; This function is called by:
 10350 ;;		_vfpfcnvrt
 10351 ;;		_atoi
 10352 ;; This function uses a reentrant model
 10353 ;;
 10354                           
 10355                           	psect	text49
 10356  0053E0                     __ptext49:
 10357                           	opt callstack 0
 10358  0053E0                     _isdigit:
 10359                           	opt callstack 24
 10360                           
 10361                           ;stkvar	_c @ sp[(0)+-2]
 10362                           
 10363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10364                           ;incstack = 0
 10365  0053E0  0EFE               	movlw	-2
 10366  0053E2  50E3               	movf	plusw1,w,c
 10367  0053E4  0FD0               	addlw	208
 10368  0053E6  6E44               	movwf	btemp+10,c
 10369  0053E8  0EFF               	movlw	-1
 10370  0053EA  006F FF8C  F045    	movff	plusw1,btemp+11
 10371  0053F0  0EFF               	movlw	255
 10372  0053F2  2245               	addwfc	btemp+11,f,c
 10373  0053F4  5045               	movf	btemp+11,w,c
 10374  0053F6  E106               	bnz	u2160
 10375  0053F8  0E0A               	movlw	10
 10376  0053FA  5C44               	subwf	btemp+10,w,c
 10377  0053FC  B0D8               	btfsc	status,0,c
 10378  0053FE  D002               	goto	u2160
 10379  005400  0E01               	movlw	1
 10380  005402  D001               	goto	u2170
 10381  005404                     u2160:
 10382  005404  0E00               	movlw	0
 10383  005406                     u2170:
 10384  005406  6E3A               	movwf	btemp,c
 10385  005408  6A3B               	clrf	btemp+1,c
 10386                           
 10387                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10388  00540A  52E5               	movf	postdec1,f,c
 10389  00540C  52E5               	movf	postdec1,f,c
 10390  00540E  0012               	return		;funcret
 10391  005410                     __end_of_isdigit:
 10392                           	opt callstack 0
 10393                           
 10394 ;; *************** function _SYSTEM_Initialize *****************
 10395 ;; Defined at:
 10396 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1  [STACK] void 
 10403 ;; Registers used:
 10404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, btemp+11
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 3F/3C
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10414 ;;Total ram usage:        0 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:    5
 10417 ;; This function calls:
 10418 ;;		_ADCC_Initialize
 10419 ;;		_CLC1_Initialize
 10420 ;;		_CLKREF_Initialize
 10421 ;;		_DMA1_Initialize
 10422 ;;		_DSM_Initialize
 10423 ;;		_EXT_INT_Initialize
 10424 ;;		_INTERRUPT_Initialize
 10425 ;;		_NCO1_Initialize
 10426 ;;		_OSCILLATOR_Initialize
 10427 ;;		_PIN_MANAGER_Initialize
 10428 ;;		_PMD_Initialize
 10429 ;;		_SPI1_Initialize
 10430 ;;		_TMR6_Initialize
 10431 ;;		_UART1_Initialize
 10432 ;;		_UART2_Initialize
 10433 ;; This function is called by:
 10434 ;;		_main
 10435 ;; This function uses a reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text50
 10439  005306                     __ptext50:
 10440                           	opt callstack 0
 10441  005306                     _SYSTEM_Initialize:
 10442                           	opt callstack 25
 10443                           
 10444                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10445                           
 10446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10447                           ;incstack = 0
 10448  005306  EC7D  F027         	call	_INTERRUPT_Initialize	;wreg free
 10449                           
 10450                           ; BSR set to: 57
 10451                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10452  00530A  ECD1  F02C         	call	_PMD_Initialize	;wreg free
 10453                           
 10454                           ; BSR set to: 57
 10455                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10456  00530E  ECF1  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10457                           
 10458                           ; BSR set to: 58
 10459                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10460  005312  ECC6  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10461                           
 10462                           ; BSR set to: 57
 10463                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10464  005316  ECB9  F028         	call	_ADCC_Initialize	;wreg free
 10465                           
 10466                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10467  00531A  EC92  F02C         	call	_NCO1_Initialize	;wreg free
 10468                           
 10469                           ; BSR set to: 63
 10470                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10471  00531E  EC93  F028         	call	_EXT_INT_Initialize	;wreg free
 10472                           
 10473                           ; BSR set to: 57
 10474                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10475  005322  EC13  F02B         	call	_TMR6_Initialize	;wreg free
 10476                           
 10477                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10478  005326  EC00  F02C         	call	_CLC1_Initialize	;wreg free
 10479                           
 10480                           ; BSR set to: 60
 10481                           ;mcc_generated_files/mcc.c: 61:     DSM_Initialize();
 10482  00532A  ECA0  F02C         	call	_DSM_Initialize	;wreg free
 10483                           
 10484                           ; BSR set to: 60
 10485                           ;mcc_generated_files/mcc.c: 62:     UART1_Initialize();
 10486  00532E  EC4B  F027         	call	_UART1_Initialize	;wreg free
 10487                           
 10488                           ; BSR set to: 57
 10489                           ;mcc_generated_files/mcc.c: 63:     UART2_Initialize();
 10490  005332  ECE0  F027         	call	_UART2_Initialize	;wreg free
 10491                           
 10492                           ; BSR set to: 57
 10493                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
 10494  005336  ECBB  F02C         	call	_SPI1_Initialize	;wreg free
 10495                           
 10496                           ; BSR set to: 61
 10497                           ;mcc_generated_files/mcc.c: 65:     DMA1_Initialize();
 10498  00533A  EC16  F027         	call	_DMA1_Initialize	;wreg free
 10499                           
 10500                           ; BSR set to: 59
 10501                           ;mcc_generated_files/mcc.c: 66:     CLKREF_Initialize();
 10502  00533E  EC02  F02D         	call	_CLKREF_Initialize	;wreg free
 10503                           
 10504                           ; BSR set to: 60
 10505                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10506  005342  0012               	return		;funcret
 10507  005344                     __end_of_SYSTEM_Initialize:
 10508                           	opt callstack 0
 10509                           
 10510 ;; *************** function _UART2_Initialize *****************
 10511 ;; Defined at:
 10512 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;		None
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;		None
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1  [STACK] void 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10521 ;; Tracked objects:
 10522 ;;		On entry : 3F/39
 10523 ;;		On exit  : 3F/39
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10530 ;;Total ram usage:        0 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:    4
 10533 ;; This function calls:
 10534 ;;		_UART2_SetRxInterruptHandler
 10535 ;;		_UART2_SetTxInterruptHandler
 10536 ;; This function is called by:
 10537 ;;		_SYSTEM_Initialize
 10538 ;; This function uses a reentrant model
 10539 ;;
 10540                           
 10541                           	psect	text51
 10542  004FC0                     __ptext51:
 10543                           	opt callstack 0
 10544  004FC0                     _UART2_Initialize:
 10545                           	opt callstack 25
 10546                           
 10547                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10548                           
 10549                           ; BSR set to: 60
 10550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10551                           ;incstack = 0
 10552  004FC0  0139               	movlb	57	; () banked
 10553  004FC2  9596               	bcf	150,2,b	;volatile
 10554                           
 10555                           ; BSR set to: 57
 10556                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10557  004FC4  0ECA               	movlw	low _UART2_Receive_ISR
 10558  004FC6  6EE6               	movwf	postinc1,c
 10559  004FC8  0E58               	movlw	high _UART2_Receive_ISR
 10560  004FCA  6EE6               	movwf	postinc1,c
 10561  004FCC  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10562  004FCE  6EE6               	movwf	postinc1,c
 10563  004FD0  ECD7  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10564                           
 10565                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10566  004FD4  0139               	movlb	57	; () banked
 10567  004FD6  9796               	bcf	150,3,b	;volatile
 10568                           
 10569                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10570  004FD8  0E3C               	movlw	low _UART2_Transmit_ISR
 10571  004FDA  6EE6               	movwf	postinc1,c
 10572  004FDC  0E54               	movlw	high _UART2_Transmit_ISR
 10573  004FDE  6EE6               	movwf	postinc1,c
 10574  004FE0  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10575  004FE2  6EE6               	movwf	postinc1,c
 10576  004FE4  ECC3  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10577                           
 10578                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10579  004FE8  013D               	movlb	61	; () banked
 10580  004FEA  6BD4               	clrf	212,b	;volatile
 10581                           
 10582                           ; BSR set to: 61
 10583                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10584  004FEC  6BD6               	clrf	214,b	;volatile
 10585                           
 10586                           ; BSR set to: 61
 10587                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10588  004FEE  6BD8               	clrf	216,b	;volatile
 10589                           
 10590                           ; BSR set to: 61
 10591                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10592  004FF0  0EB0               	movlw	176
 10593  004FF2  6FDA               	movwf	218,b	;volatile
 10594                           
 10595                           ; BSR set to: 61
 10596                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10597  004FF4  0E80               	movlw	128
 10598  004FF6  6FDB               	movwf	219,b	;volatile
 10599                           
 10600                           ; BSR set to: 61
 10601                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10602  004FF8  6BDC               	clrf	220,b	;volatile
 10603                           
 10604                           ; BSR set to: 61
 10605                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10606  004FFA  0E82               	movlw	130
 10607  004FFC  6FDD               	movwf	221,b	;volatile
 10608                           
 10609                           ; BSR set to: 61
 10610                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10611  004FFE  0E06               	movlw	6
 10612  005000  6FDE               	movwf	222,b	;volatile
 10613                           
 10614                           ; BSR set to: 61
 10615                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10616  005002  6BDF               	clrf	223,b	;volatile
 10617                           
 10618                           ; BSR set to: 61
 10619                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10620  005004  6BE0               	clrf	224,b	;volatile
 10621                           
 10622                           ; BSR set to: 61
 10623                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10624  005006  6BE1               	clrf	225,b	;volatile
 10625                           
 10626                           ; BSR set to: 61
 10627                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10628  005008  6BE2               	clrf	226,b	;volatile
 10629                           
 10630                           ; BSR set to: 61
 10631                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10632  00500A  6A33               	clrf	_uart2TxHead,c	;volatile
 10633                           
 10634                           ; BSR set to: 61
 10635                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10636  00500C  6A32               	clrf	_uart2TxTail,c	;volatile
 10637                           
 10638                           ; BSR set to: 61
 10639                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10640  00500E  0E40               	movlw	64
 10641  005010  6E31               	movwf	_uart2TxBufferRemaining,c	;volatile
 10642                           
 10643                           ; BSR set to: 61
 10644                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10645  005012  6A30               	clrf	_uart2RxHead,c	;volatile
 10646                           
 10647                           ; BSR set to: 61
 10648                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10649  005014  6A2F               	clrf	_uart2RxTail,c	;volatile
 10650                           
 10651                           ; BSR set to: 61
 10652                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10653  005016  6A2E               	clrf	_uart2RxCount,c	;volatile
 10654                           
 10655                           ; BSR set to: 61
 10656                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10657  005018  0139               	movlb	57	; () banked
 10658  00501A  8596               	bsf	150,2,b	;volatile
 10659                           
 10660                           ; BSR set to: 57
 10661                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10662  00501C  0012               	return		;funcret
 10663  00501E                     __end_of_UART2_Initialize:
 10664                           	opt callstack 0
 10665                           
 10666 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10667 ;; Defined at:
 10668 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10671 ;;		 -> UART2_Transmit_ISR(1), 
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1  [STACK] void 
 10676 ;; Registers used:
 10677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10678 ;; Tracked objects:
 10679 ;;		On entry : 3F/39
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;Total ram usage:        0 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:    3
 10690 ;; This function calls:
 10691 ;;		Nothing
 10692 ;; This function is called by:
 10693 ;;		_UART2_Initialize
 10694 ;; This function uses a reentrant model
 10695 ;;
 10696                           
 10697                           	psect	text52
 10698  005586                     __ptext52:
 10699                           	opt callstack 0
 10700  005586                     _UART2_SetTxInterruptHandler:
 10701                           	opt callstack 25
 10702                           
 10703                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10704                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10705                           
 10706                           ; BSR set to: 57
 10707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10708                           ;incstack = 0
 10709  005586  50E1               	movf	fsr1l,w,c
 10710  005588  0FFD               	addlw	-3
 10711  00558A  6ED9               	movwf	fsr2l,c
 10712  00558C  50E2               	movf	fsr1h,w,c
 10713  00558E  6EDA               	movwf	fsr2h,c
 10714  005590  0EFF               	movlw	255
 10715  005592  22DA               	addwfc	fsr2h,f,c
 10716  005594  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler
 10717  00559A  006F FF78  F015    	movff	postinc2,_UART2_TxInterruptHandler+1
 10718  0055A0  006F FF74  F016    	movff	postdec2,_UART2_TxInterruptHandler+2
 10719                           
 10720                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10721  0055A6  52E5               	movf	postdec1,f,c
 10722  0055A8  52E5               	movf	postdec1,f,c
 10723  0055AA  52E5               	movf	postdec1,f,c
 10724  0055AC  0012               	return		;funcret
 10725  0055AE                     __end_of_UART2_SetTxInterruptHandler:
 10726                           	opt callstack 0
 10727                           
 10728 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10729 ;; Defined at:
 10730 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10733 ;;		 -> UART2_Receive_ISR(1), 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1  [STACK] void 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10740 ;; Tracked objects:
 10741 ;;		On entry : 3F/39
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10749 ;;Total ram usage:        0 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    3
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_UART2_Initialize
 10756 ;; This function uses a reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text53
 10760  0055AE                     __ptext53:
 10761                           	opt callstack 0
 10762  0055AE                     _UART2_SetRxInterruptHandler:
 10763                           	opt callstack 25
 10764                           
 10765                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10766                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10767                           
 10768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10769                           ;incstack = 0
 10770  0055AE  50E1               	movf	fsr1l,w,c
 10771  0055B0  0FFD               	addlw	-3
 10772  0055B2  6ED9               	movwf	fsr2l,c
 10773  0055B4  50E2               	movf	fsr1h,w,c
 10774  0055B6  6EDA               	movwf	fsr2h,c
 10775  0055B8  0EFF               	movlw	255
 10776  0055BA  22DA               	addwfc	fsr2h,f,c
 10777  0055BC  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler
 10778  0055C2  006F FF78  F018    	movff	postinc2,_UART2_RxInterruptHandler+1
 10779  0055C8  006F FF74  F019    	movff	postdec2,_UART2_RxInterruptHandler+2
 10780                           
 10781                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10782  0055CE  52E5               	movf	postdec1,f,c
 10783  0055D0  52E5               	movf	postdec1,f,c
 10784  0055D2  52E5               	movf	postdec1,f,c
 10785  0055D4  0012               	return		;funcret
 10786  0055D6                     __end_of_UART2_SetRxInterruptHandler:
 10787                           	opt callstack 0
 10788                           
 10789 ;; *************** function _UART1_Initialize *****************
 10790 ;; Defined at:
 10791 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;		None
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;		None
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  1  [STACK] void 
 10798 ;; Registers used:
 10799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10800 ;; Tracked objects:
 10801 ;;		On entry : 3F/3C
 10802 ;;		On exit  : 3F/39
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10809 ;;Total ram usage:        0 bytes
 10810 ;; Hardware stack levels used:    1
 10811 ;; Hardware stack levels required when called:    4
 10812 ;; This function calls:
 10813 ;;		_UART1_SetRxInterruptHandler
 10814 ;;		_UART1_SetTxInterruptHandler
 10815 ;; This function is called by:
 10816 ;;		_SYSTEM_Initialize
 10817 ;; This function uses a reentrant model
 10818 ;;
 10819                           
 10820                           	psect	text54
 10821  004E96                     __ptext54:
 10822                           	opt callstack 0
 10823  004E96                     _UART1_Initialize:
 10824                           	opt callstack 25
 10825                           
 10826                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10827                           
 10828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10829                           ;incstack = 0
 10830  004E96  0139               	movlb	57	; () banked
 10831  004E98  9793               	bcf	147,3,b	;volatile
 10832                           
 10833                           ; BSR set to: 57
 10834                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10835  004E9A  0EAA               	movlw	low _UART1_Receive_ISR
 10836  004E9C  6EE6               	movwf	postinc1,c
 10837  004E9E  0E58               	movlw	high _UART1_Receive_ISR
 10838  004EA0  6EE6               	movwf	postinc1,c
 10839  004EA2  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10840  004EA4  6EE6               	movwf	postinc1,c
 10841  004EA6  ECFF  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10842                           
 10843                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 10844  004EAA  0139               	movlb	57	; () banked
 10845  004EAC  9993               	bcf	147,4,b	;volatile
 10846                           
 10847                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10848  004EAE  0E10               	movlw	low _UART1_Transmit_ISR
 10849  004EB0  6EE6               	movwf	postinc1,c
 10850  004EB2  0E54               	movlw	high _UART1_Transmit_ISR
 10851  004EB4  6EE6               	movwf	postinc1,c
 10852  004EB6  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10853  004EB8  6EE6               	movwf	postinc1,c
 10854  004EBA  ECEB  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10855                           
 10856                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 10857  004EBE  013D               	movlb	61	; () banked
 10858  004EC0  6BEC               	clrf	236,b	;volatile
 10859                           
 10860                           ; BSR set to: 61
 10861                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 10862  004EC2  6BED               	clrf	237,b	;volatile
 10863                           
 10864                           ; BSR set to: 61
 10865                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 10866  004EC4  6BEE               	clrf	238,b	;volatile
 10867                           
 10868                           ; BSR set to: 61
 10869                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 10870  004EC6  6BEF               	clrf	239,b	;volatile
 10871                           
 10872                           ; BSR set to: 61
 10873                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 10874  004EC8  6BF0               	clrf	240,b	;volatile
 10875                           
 10876                           ; BSR set to: 61
 10877                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 10878  004ECA  6BF1               	clrf	241,b	;volatile
 10879                           
 10880                           ; BSR set to: 61
 10881                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 10882  004ECC  0EB0               	movlw	176
 10883  004ECE  6FF2               	movwf	242,b	;volatile
 10884                           
 10885                           ; BSR set to: 61
 10886                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 10887  004ED0  0E80               	movlw	128
 10888  004ED2  6FF3               	movwf	243,b	;volatile
 10889                           
 10890                           ; BSR set to: 61
 10891                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 10892  004ED4  6BF4               	clrf	244,b	;volatile
 10893                           
 10894                           ; BSR set to: 61
 10895                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 10896  004ED6  0E82               	movlw	130
 10897  004ED8  6FF5               	movwf	245,b	;volatile
 10898                           
 10899                           ; BSR set to: 61
 10900                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 10901  004EDA  0E06               	movlw	6
 10902  004EDC  6FF6               	movwf	246,b	;volatile
 10903                           
 10904                           ; BSR set to: 61
 10905                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 10906  004EDE  6BF7               	clrf	247,b	;volatile
 10907                           
 10908                           ; BSR set to: 61
 10909                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 10910  004EE0  6BF8               	clrf	248,b	;volatile
 10911                           
 10912                           ; BSR set to: 61
 10913                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 10914  004EE2  6BF9               	clrf	249,b	;volatile
 10915                           
 10916                           ; BSR set to: 61
 10917                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 10918  004EE4  6BFA               	clrf	250,b	;volatile
 10919                           
 10920                           ; BSR set to: 61
 10921                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 10922  004EE6  6A39               	clrf	_uart1TxHead,c	;volatile
 10923                           
 10924                           ; BSR set to: 61
 10925                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 10926  004EE8  6A38               	clrf	_uart1TxTail,c	;volatile
 10927                           
 10928                           ; BSR set to: 61
 10929                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10930  004EEA  0E40               	movlw	64
 10931  004EEC  6E37               	movwf	_uart1TxBufferRemaining,c	;volatile
 10932                           
 10933                           ; BSR set to: 61
 10934                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 10935  004EEE  6A36               	clrf	_uart1RxHead,c	;volatile
 10936                           
 10937                           ; BSR set to: 61
 10938                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 10939  004EF0  6A35               	clrf	_uart1RxTail,c	;volatile
 10940                           
 10941                           ; BSR set to: 61
 10942                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 10943  004EF2  6A34               	clrf	_uart1RxCount,c	;volatile
 10944                           
 10945                           ; BSR set to: 61
 10946                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 10947  004EF4  0139               	movlb	57	; () banked
 10948  004EF6  8793               	bsf	147,3,b	;volatile
 10949                           
 10950                           ; BSR set to: 57
 10951                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10952  004EF8  0012               	return		;funcret
 10953  004EFA                     __end_of_UART1_Initialize:
 10954                           	opt callstack 0
 10955                           
 10956 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10957 ;; Defined at:
 10958 ;;		line 244 in file "mcc_generated_files/uart1.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10961 ;;		 -> UART1_Transmit_ISR(1), 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;		None
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1  [STACK] void 
 10966 ;; Registers used:
 10967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10968 ;; Tracked objects:
 10969 ;;		On entry : 3F/39
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10977 ;;Total ram usage:        0 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    3
 10980 ;; This function calls:
 10981 ;;		Nothing
 10982 ;; This function is called by:
 10983 ;;		_UART1_Initialize
 10984 ;; This function uses a reentrant model
 10985 ;;
 10986                           
 10987                           	psect	text55
 10988  0055D6                     __ptext55:
 10989                           	opt callstack 0
 10990  0055D6                     _UART1_SetTxInterruptHandler:
 10991                           	opt callstack 25
 10992                           
 10993                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10994                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10995                           
 10996                           ; BSR set to: 57
 10997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10998                           ;incstack = 0
 10999  0055D6  50E1               	movf	fsr1l,w,c
 11000  0055D8  0FFD               	addlw	-3
 11001  0055DA  6ED9               	movwf	fsr2l,c
 11002  0055DC  50E2               	movf	fsr1h,w,c
 11003  0055DE  6EDA               	movwf	fsr2h,c
 11004  0055E0  0EFF               	movlw	255
 11005  0055E2  22DA               	addwfc	fsr2h,f,c
 11006  0055E4  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler
 11007  0055EA  006F FF78  F00F    	movff	postinc2,_UART1_TxInterruptHandler+1
 11008  0055F0  006F FF74  F010    	movff	postdec2,_UART1_TxInterruptHandler+2
 11009                           
 11010                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11011  0055F6  52E5               	movf	postdec1,f,c
 11012  0055F8  52E5               	movf	postdec1,f,c
 11013  0055FA  52E5               	movf	postdec1,f,c
 11014  0055FC  0012               	return		;funcret
 11015  0055FE                     __end_of_UART1_SetTxInterruptHandler:
 11016                           	opt callstack 0
 11017                           
 11018 ;; *************** function _UART1_SetRxInterruptHandler *****************
 11019 ;; Defined at:
 11020 ;;		line 239 in file "mcc_generated_files/uart1.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11023 ;;		 -> UART1_Receive_ISR(1), 
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;		None
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1  [STACK] void 
 11028 ;; Registers used:
 11029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11030 ;; Tracked objects:
 11031 ;;		On entry : 3F/39
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11039 ;;Total ram usage:        0 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    3
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_UART1_Initialize
 11046 ;; This function uses a reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text56
 11050  0055FE                     __ptext56:
 11051                           	opt callstack 0
 11052  0055FE                     _UART1_SetRxInterruptHandler:
 11053                           	opt callstack 25
 11054                           
 11055                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 11056                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11057                           
 11058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11059                           ;incstack = 0
 11060  0055FE  50E1               	movf	fsr1l,w,c
 11061  005600  0FFD               	addlw	-3
 11062  005602  6ED9               	movwf	fsr2l,c
 11063  005604  50E2               	movf	fsr1h,w,c
 11064  005606  6EDA               	movwf	fsr2h,c
 11065  005608  0EFF               	movlw	255
 11066  00560A  22DA               	addwfc	fsr2h,f,c
 11067  00560C  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler
 11068  005612  006F FF78  F012    	movff	postinc2,_UART1_RxInterruptHandler+1
 11069  005618  006F FF74  F013    	movff	postdec2,_UART1_RxInterruptHandler+2
 11070                           
 11071                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11072  00561E  52E5               	movf	postdec1,f,c
 11073  005620  52E5               	movf	postdec1,f,c
 11074  005622  52E5               	movf	postdec1,f,c
 11075  005624  0012               	return		;funcret
 11076  005626                     __end_of_UART1_SetRxInterruptHandler:
 11077                           	opt callstack 0
 11078                           
 11079 ;; *************** function _TMR6_Initialize *****************
 11080 ;; Defined at:
 11081 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;		None
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;		None
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1  [STACK] void 
 11088 ;; Registers used:
 11089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11090 ;; Tracked objects:
 11091 ;;		On entry : 3F/39
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11099 ;;Total ram usage:        0 bytes
 11100 ;; Hardware stack levels used:    1
 11101 ;; Hardware stack levels required when called:    4
 11102 ;; This function calls:
 11103 ;;		_TMR6_SetInterruptHandler
 11104 ;; This function is called by:
 11105 ;;		_SYSTEM_Initialize
 11106 ;; This function uses a reentrant model
 11107 ;;
 11108                           
 11109                           	psect	text57
 11110  005626                     __ptext57:
 11111                           	opt callstack 0
 11112  005626                     _TMR6_Initialize:
 11113                           	opt callstack 25
 11114                           
 11115                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 11116                           
 11117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11118                           ;incstack = 0
 11119  005626  0E01               	movlw	1
 11120  005628  6E96               	movwf	16278,c	;volatile
 11121                           
 11122                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 11123  00562A  6A95               	clrf	16277,c	;volatile
 11124                           
 11125                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 11126  00562C  6A97               	clrf	16279,c	;volatile
 11127                           
 11128                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 11129  00562E  0E03               	movlw	3
 11130  005630  6E93               	movwf	16275,c	;volatile
 11131                           
 11132                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 11133  005632  6A92               	clrf	16274,c	;volatile
 11134                           
 11135                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 11136  005634  0139               	movlb	57	; () banked
 11137  005636  91A9               	bcf	169,0,b	;volatile
 11138                           
 11139                           ; BSR set to: 57
 11140                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 11141  005638  8199               	bsf	153,0,b	;volatile
 11142                           
 11143                           ; BSR set to: 57
 11144                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 11145  00563A  0E1E               	movlw	low _TMR6_DefaultInterruptHandler
 11146  00563C  6EE6               	movwf	postinc1,c
 11147  00563E  0E50               	movlw	high _TMR6_DefaultInterruptHandler
 11148  005640  6EE6               	movwf	postinc1,c
 11149  005642  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11150  005644  6EE6               	movwf	postinc1,c
 11151  005646  EC27  F02B         	call	_TMR6_SetInterruptHandler	;wreg free
 11152                           
 11153                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 11154  00564A  6894               	setf	16276,c	;volatile
 11155                           
 11156                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11157  00564C  0012               	return		;funcret
 11158  00564E                     __end_of_TMR6_Initialize:
 11159                           	opt callstack 0
 11160                           
 11161 ;; *************** function _TMR6_SetInterruptHandler *****************
 11162 ;; Defined at:
 11163 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11166 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;		None
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  1  [STACK] void 
 11171 ;; Registers used:
 11172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11173 ;; Tracked objects:
 11174 ;;		On entry : 3F/39
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11182 ;;Total ram usage:        0 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:    3
 11185 ;; This function calls:
 11186 ;;		Nothing
 11187 ;; This function is called by:
 11188 ;;		_TMR6_Initialize
 11189 ;; This function uses a reentrant model
 11190 ;;
 11191                           
 11192                           	psect	text58
 11193  00564E                     __ptext58:
 11194                           	opt callstack 0
 11195  00564E                     _TMR6_SetInterruptHandler:
 11196                           	opt callstack 25
 11197                           
 11198                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 11199                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11200                           
 11201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11202                           ;incstack = 0
 11203  00564E  50E1               	movf	fsr1l,w,c
 11204  005650  0FFD               	addlw	-3
 11205  005652  6ED9               	movwf	fsr2l,c
 11206  005654  50E2               	movf	fsr1h,w,c
 11207  005656  6EDA               	movwf	fsr2h,c
 11208  005658  0EFF               	movlw	255
 11209  00565A  22DA               	addwfc	fsr2h,f,c
 11210  00565C  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler
 11211  005662  006F FF78  F009    	movff	postinc2,_TMR6_InterruptHandler+1
 11212  005668  006F FF74  F00A    	movff	postdec2,_TMR6_InterruptHandler+2
 11213                           
 11214                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11215  00566E  52E5               	movf	postdec1,f,c
 11216  005670  52E5               	movf	postdec1,f,c
 11217  005672  52E5               	movf	postdec1,f,c
 11218  005674  0012               	return		;funcret
 11219  005676                     __end_of_TMR6_SetInterruptHandler:
 11220                           	opt callstack 0
 11221                           
 11222 ;; *************** function _SPI1_Initialize *****************
 11223 ;; Defined at:
 11224 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;		None
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;		None
 11229 ;; Return value:  Size  Location     Type
 11230 ;;                  1  [STACK] void 
 11231 ;; Registers used:
 11232 ;;		wreg, status,2
 11233 ;; Tracked objects:
 11234 ;;		On entry : 3F/39
 11235 ;;		On exit  : 3F/3D
 11236 ;;		Unchanged: 0/0
 11237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11242 ;;Total ram usage:        0 bytes
 11243 ;; Hardware stack levels used:    1
 11244 ;; Hardware stack levels required when called:    3
 11245 ;; This function calls:
 11246 ;;		Nothing
 11247 ;; This function is called by:
 11248 ;;		_SYSTEM_Initialize
 11249 ;; This function uses a reentrant model
 11250 ;;
 11251                           
 11252                           	psect	text59
 11253  005976                     __ptext59:
 11254                           	opt callstack 0
 11255  005976                     _SPI1_Initialize:
 11256                           	opt callstack 26
 11257                           
 11258                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11259                           
 11260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11261                           ;incstack = 0
 11262  005976  0E40               	movlw	64
 11263  005978  013D               	movlb	61	; () banked
 11264  00597A  6F15               	movwf	21,b	;volatile
 11265                           
 11266                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11267  00597C  0E03               	movlw	3
 11268  00597E  6F16               	movwf	22,b	;volatile
 11269                           
 11270                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11271  005980  0E4F               	movlw	79
 11272  005982  6F19               	movwf	25,b	;volatile
 11273                           
 11274                           ; BSR set to: 61
 11275                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11276  005984  6B1C               	clrf	28,b	;volatile
 11277                           
 11278                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11279  005986  0E83               	movlw	131
 11280  005988  6F14               	movwf	20,b	;volatile
 11281                           
 11282                           ; BSR set to: 61
 11283                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11284  00598A  0012               	return		;funcret
 11285  00598C                     __end_of_SPI1_Initialize:
 11286                           	opt callstack 0
 11287                           
 11288 ;; *************** function _PMD_Initialize *****************
 11289 ;; Defined at:
 11290 ;;		line 87 in file "mcc_generated_files/mcc.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;		None
 11293 ;; Auto vars:     Size  Location     Type
 11294 ;;		None
 11295 ;; Return value:  Size  Location     Type
 11296 ;;                  1  [STACK] void 
 11297 ;; Registers used:
 11298 ;;		None
 11299 ;; Tracked objects:
 11300 ;;		On entry : 3F/39
 11301 ;;		On exit  : 3F/39
 11302 ;;		Unchanged: 0/0
 11303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;Total ram usage:        0 bytes
 11309 ;; Hardware stack levels used:    1
 11310 ;; Hardware stack levels required when called:    3
 11311 ;; This function calls:
 11312 ;;		Nothing
 11313 ;; This function is called by:
 11314 ;;		_SYSTEM_Initialize
 11315 ;; This function uses a reentrant model
 11316 ;;
 11317                           
 11318                           	psect	text60
 11319  0059A2                     __ptext60:
 11320                           	opt callstack 0
 11321  0059A2                     _PMD_Initialize:
 11322                           	opt callstack 26
 11323                           
 11324                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 11325                           
 11326                           ; BSR set to: 61
 11327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11328                           ;incstack = 0
 11329  0059A2  0139               	movlb	57	; () banked
 11330  0059A4  6BC0               	clrf	192,b	;volatile
 11331                           
 11332                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 11333  0059A6  6BC1               	clrf	193,b	;volatile
 11334                           
 11335                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 11336  0059A8  6BC2               	clrf	194,b	;volatile
 11337                           
 11338                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 11339  0059AA  6BC3               	clrf	195,b	;volatile
 11340                           
 11341                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 11342  0059AC  6BC4               	clrf	196,b	;volatile
 11343                           
 11344                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 11345  0059AE  6BC5               	clrf	197,b	;volatile
 11346                           
 11347                           ;mcc_generated_files/mcc.c: 102:     PMD6 = 0x00;
 11348  0059B0  6BC6               	clrf	198,b	;volatile
 11349                           
 11350                           ;mcc_generated_files/mcc.c: 104:     PMD7 = 0x00;
 11351  0059B2  6BC7               	clrf	199,b	;volatile
 11352                           
 11353                           ; BSR set to: 57
 11354                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11355  0059B4  0012               	return		;funcret
 11356  0059B6                     __end_of_PMD_Initialize:
 11357                           	opt callstack 0
 11358                           
 11359 ;; *************** function _PIN_MANAGER_Initialize *****************
 11360 ;; Defined at:
 11361 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;		None
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1  [STACK] void 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2
 11370 ;; Tracked objects:
 11371 ;;		On entry : 3F/39
 11372 ;;		On exit  : 3F/3A
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    3
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_SYSTEM_Initialize
 11386 ;; This function uses a reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text61
 11390  0049E2                     __ptext61:
 11391                           	opt callstack 0
 11392  0049E2                     _PIN_MANAGER_Initialize:
 11393                           	opt callstack 26
 11394                           
 11395                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11396                           
 11397                           ; BSR set to: 57
 11398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11399                           ;incstack = 0
 11400  0049E2  0E07               	movlw	7
 11401  0049E4  6EBE               	movwf	16318,c	;volatile
 11402                           
 11403                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11404  0049E6  6ABD               	clrf	16317,c	;volatile
 11405                           
 11406                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11407  0049E8  6ABA               	clrf	16314,c	;volatile
 11408                           
 11409                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11410  0049EA  6ABF               	clrf	16319,c	;volatile
 11411                           
 11412                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11413  0049EC  6ABB               	clrf	16315,c	;volatile
 11414                           
 11415                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11416  0049EE  0E06               	movlw	6
 11417  0049F0  6EBC               	movwf	16316,c	;volatile
 11418                           
 11419                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11420  0049F2  6AC6               	clrf	16326,c	;volatile
 11421                           
 11422                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11423  0049F4  68C7               	setf	16327,c	;volatile
 11424                           
 11425                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11426  0049F6  0E8F               	movlw	143
 11427  0049F8  6EC2               	movwf	16322,c	;volatile
 11428                           
 11429                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11430  0049FA  0EBF               	movlw	191
 11431  0049FC  6EC3               	movwf	16323,c	;volatile
 11432                           
 11433                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11434  0049FE  0E91               	movlw	145
 11435  004A00  6EC4               	movwf	16324,c	;volatile
 11436                           
 11437                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFF;
 11438  004A02  68C5               	setf	16325,c	;volatile
 11439                           
 11440                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xFF;
 11441  004A04  013A               	movlb	58	; () banked
 11442  004A06  6970               	setf	112,b	;volatile
 11443                           
 11444                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11445  004A08  0E01               	movlw	1
 11446  004A0A  6F60               	movwf	96,b	;volatile
 11447                           
 11448                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11449  004A0C  0E38               	movlw	56
 11450  004A0E  6F50               	movwf	80,b	;volatile
 11451                           
 11452                           ; BSR set to: 58
 11453                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11454  004A10  6B80               	clrf	128,b	;volatile
 11455                           
 11456                           ; BSR set to: 58
 11457                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11458  004A12  6990               	setf	144,b	;volatile
 11459                           
 11460                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11461  004A14  0E8F               	movlw	143
 11462  004A16  6F40               	movwf	64,b	;volatile
 11463                           
 11464                           ; BSR set to: 58
 11465                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x00;
 11466  004A18  6B71               	clrf	113,b	;volatile
 11467                           
 11468                           ; BSR set to: 58
 11469                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11470  004A1A  6B91               	clrf	145,b	;volatile
 11471                           
 11472                           ; BSR set to: 58
 11473                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11474  004A1C  6B81               	clrf	129,b	;volatile
 11475                           
 11476                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11477  004A1E  0E87               	movlw	135
 11478  004A20  6F51               	movwf	81,b	;volatile
 11479                           
 11480                           ; BSR set to: 58
 11481                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11482  004A22  6B41               	clrf	65,b	;volatile
 11483                           
 11484                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11485  004A24  0E90               	movlw	144
 11486  004A26  6F61               	movwf	97,b	;volatile
 11487                           
 11488                           ; BSR set to: 58
 11489                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11490  004A28  6B82               	clrf	130,b	;volatile
 11491                           
 11492                           ; BSR set to: 58
 11493                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11494  004A2A  6B92               	clrf	146,b	;volatile
 11495                           
 11496                           ; BSR set to: 58
 11497                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11498  004A2C  6B42               	clrf	66,b	;volatile
 11499                           
 11500                           ; BSR set to: 58
 11501                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11502  004A2E  6B52               	clrf	82,b	;volatile
 11503                           
 11504                           ; BSR set to: 58
 11505                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11506  004A30  6B62               	clrf	98,b	;volatile
 11507                           
 11508                           ; BSR set to: 58
 11509                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11510  004A32  6B72               	clrf	114,b	;volatile
 11511                           
 11512                           ; BSR set to: 58
 11513                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11514  004A34  6943               	setf	67,b	;volatile
 11515                           
 11516                           ; BSR set to: 58
 11517                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11518  004A36  6953               	setf	83,b	;volatile
 11519                           
 11520                           ; BSR set to: 58
 11521                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11522  004A38  6963               	setf	99,b	;volatile
 11523                           
 11524                           ; BSR set to: 58
 11525                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11526  004A3A  6973               	setf	115,b	;volatile
 11527                           
 11528                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11529  004A3C  0E07               	movlw	7
 11530  004A3E  6F83               	movwf	131,b	;volatile
 11531                           
 11532                           ; BSR set to: 58
 11533                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11534  004A40  6993               	setf	147,b	;volatile
 11535                           
 11536                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11537  004A42  0E0F               	movlw	15
 11538  004A44  6FE8               	movwf	232,b	;volatile
 11539                           
 11540                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11541  004A46  0E16               	movlw	22
 11542  004A48  6F0E               	movwf	14,b	;volatile
 11543                           
 11544                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11545  004A4A  0E1E               	movlw	30
 11546  004A4C  6F13               	movwf	19,b	;volatile
 11547                           
 11548                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11549  004A4E  0E08               	movlw	8
 11550  004A50  6FC0               	movwf	192,b	;volatile
 11551                           
 11552                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11553  004A52  0E0A               	movlw	10
 11554  004A54  6FC2               	movwf	194,b	;volatile
 11555                           
 11556                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11557  004A56  0E09               	movlw	9
 11558  004A58  6FC1               	movwf	193,b	;volatile
 11559                           
 11560                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11561  004A5A  0E17               	movlw	23
 11562  004A5C  6FE5               	movwf	229,b	;volatile
 11563                           
 11564                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11565  004A5E  0E13               	movlw	19
 11566  004A60  6FDE               	movwf	222,b	;volatile
 11567                           
 11568                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11569  004A62  0E01               	movlw	1
 11570  004A64  6F04               	movwf	4,b	;volatile
 11571                           
 11572                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11573  004A66  0E26               	movlw	38
 11574  004A68  6F05               	movwf	5,b	;volatile
 11575                           
 11576                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11577  004A6A  0E28               	movlw	40
 11578  004A6C  6F06               	movwf	6,b	;volatile
 11579                           
 11580                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11581  004A6E  0E1F               	movlw	31
 11582  004A70  6F15               	movwf	21,b	;volatile
 11583                           
 11584                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11585  004A72  0E13               	movlw	19
 11586  004A74  6F16               	movwf	22,b	;volatile
 11587                           
 11588                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11589  004A76  0E14               	movlw	20
 11590  004A78  6FDF               	movwf	223,b	;volatile
 11591                           
 11592                           ; BSR set to: 58
 11593                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11594  004A7A  0012               	return		;funcret
 11595  004A7C                     __end_of_PIN_MANAGER_Initialize:
 11596                           	opt callstack 0
 11597                           
 11598 ;; *************** function _OSCILLATOR_Initialize *****************
 11599 ;; Defined at:
 11600 ;;		line 69 in file "mcc_generated_files/mcc.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;		None
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1  [STACK] void 
 11607 ;; Registers used:
 11608 ;;		wreg, status,2
 11609 ;; Tracked objects:
 11610 ;;		On entry : 3F/3A
 11611 ;;		On exit  : 3F/39
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;Total ram usage:        0 bytes
 11619 ;; Hardware stack levels used:    1
 11620 ;; Hardware stack levels required when called:    3
 11621 ;; This function calls:
 11622 ;;		Nothing
 11623 ;; This function is called by:
 11624 ;;		_SYSTEM_Initialize
 11625 ;; This function uses a reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text62
 11629  00598C                     __ptext62:
 11630                           	opt callstack 0
 11631  00598C                     _OSCILLATOR_Initialize:
 11632                           	opt callstack 26
 11633                           
 11634                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x20;
 11635                           
 11636                           ; BSR set to: 58
 11637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11638                           ;incstack = 0
 11639  00598C  0E20               	movlw	32
 11640  00598E  0139               	movlb	57	; () banked
 11641  005990  6FD9               	movwf	217,b	;volatile
 11642                           
 11643                           ; BSR set to: 57
 11644                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 11645  005992  6BDB               	clrf	219,b	;volatile
 11646                           
 11647                           ; BSR set to: 57
 11648                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 11649  005994  6BDD               	clrf	221,b	;volatile
 11650                           
 11651                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x02;
 11652  005996  0E02               	movlw	2
 11653  005998  6FDF               	movwf	223,b	;volatile
 11654                           
 11655                           ; BSR set to: 57
 11656                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 11657  00599A  6BDE               	clrf	222,b	;volatile
 11658  00599C                     l190:
 11659                           
 11660                           ; BSR set to: 57
 11661                           ;mcc_generated_files/mcc.c: 82:     while(PLLR == 0)
 11662  00599C  B1DC               	btfsc	220,0,b	;volatile
 11663  00599E  0012               	return	
 11664  0059A0  D7FD               	goto	l190
 11665  0059A2                     __end_of_OSCILLATOR_Initialize:
 11666                           	opt callstack 0
 11667                           
 11668 ;; *************** function _NCO1_Initialize *****************
 11669 ;; Defined at:
 11670 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1  [STACK] void 
 11677 ;; Registers used:
 11678 ;;		wreg, status,2
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/39
 11681 ;;		On exit  : 3F/3F
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11688 ;;Total ram usage:        0 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; Hardware stack levels required when called:    3
 11691 ;; This function calls:
 11692 ;;		Nothing
 11693 ;; This function is called by:
 11694 ;;		_SYSTEM_Initialize
 11695 ;; This function uses a reentrant model
 11696 ;;
 11697                           
 11698                           	psect	text63
 11699  005924                     __ptext63:
 11700                           	opt callstack 0
 11701  005924                     _NCO1_Initialize:
 11702                           	opt callstack 26
 11703                           
 11704                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 11705                           
 11706                           ; BSR set to: 57
 11707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11708                           ;incstack = 0
 11709  005924  013F               	movlb	63	; () banked
 11710  005926  6B3E               	clrf	62,b	;volatile
 11711                           
 11712                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 11713  005928  6B3F               	clrf	63,b	;volatile
 11714                           
 11715                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 11716  00592A  6B3A               	clrf	58,b	;volatile
 11717                           
 11718                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 11719  00592C  6B39               	clrf	57,b	;volatile
 11720                           
 11721                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 11722  00592E  6B38               	clrf	56,b	;volatile
 11723                           
 11724                           ; BSR set to: 63
 11725                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 11726  005930  0E06               	movlw	6
 11727  005932  6F3D               	movwf	61,b	;volatile
 11728                           
 11729                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 11730  005934  0EC7               	movlw	199
 11731  005936  6F3C               	movwf	60,b	;volatile
 11732                           
 11733                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 11734  005938  0EAE               	movlw	174
 11735  00593A  6F3B               	movwf	59,b	;volatile
 11736                           
 11737                           ; BSR set to: 63
 11738                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 11739  00593C  8F3E               	bsf	62,7,b	;volatile
 11740                           
 11741                           ; BSR set to: 63
 11742                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11743  00593E  0012               	return		;funcret
 11744  005940                     __end_of_NCO1_Initialize:
 11745                           	opt callstack 0
 11746                           
 11747 ;; *************** function _INTERRUPT_Initialize *****************
 11748 ;; Defined at:
 11749 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  state           1  [STACK] _Bool 
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1  [STACK] void 
 11756 ;; Registers used:
 11757 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 3F/39
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    3
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_SYSTEM_Initialize
 11774 ;; This function uses a reentrant model
 11775 ;;
 11776                           
 11777                           	psect	text64
 11778  004EFA                     __ptext64:
 11779                           	opt callstack 0
 11780  004EFA                     _INTERRUPT_Initialize:
 11781                           	opt callstack 0
 11782                           
 11783                           ; BSR set to: 63
 11784                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11785  004EFA  52E6               	movf	postinc1,f,c
 11786                           
 11787                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11788                           
 11789                           ;incstack = 0
 11790  004EFC  8AD2               	bsf	16338,5,c	;volatile
 11791                           
 11792                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11793  004EFE  AED2               	btfss	16338,7,c	;volatile
 11794  004F00  D003               	goto	u3220
 11795  004F02  6A45               	clrf	btemp+11,c
 11796  004F04  2A45               	incf	btemp+11,f,c
 11797  004F06  D001               	goto	u3238
 11798  004F08                     u3220:
 11799  004F08  6A45               	clrf	btemp+11,c
 11800  004F0A                     u3238:
 11801                           
 11802                           ;stkvar	_state @ sp[(-1)+0]
 11803  004F0A  0EFF               	movlw	-1
 11804  004F0C  0060  F117  FFE3   	movff	btemp+11,plusw1
 11805                           
 11806                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11807  004F12  9ED2               	bcf	16338,7,c	;volatile
 11808                           
 11809                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11810  004F14  0E55               	movlw	85
 11811  004F16  6ED4               	movwf	16340,c	;volatile
 11812                           
 11813                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11814  004F18  0EAA               	movlw	170
 11815  004F1A  6ED4               	movwf	16340,c	;volatile
 11816                           
 11817                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11818  004F1C  90D4               	bcf	16340,0,c	;volatile
 11819                           
 11820                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11821  004F1E  0138               	movlb	56	; () banked
 11822  004F20  6B9F               	clrf	159,b	;volatile
 11823                           
 11824                           ; BSR set to: 56
 11825                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11826  004F22  6B9E               	clrf	158,b	;volatile
 11827                           
 11828                           ; BSR set to: 56
 11829                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11830  004F24  0E08               	movlw	8
 11831  004F26  6F9D               	movwf	157,b	;volatile
 11832                           
 11833                           ; BSR set to: 56
 11834                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11835  004F28  0E55               	movlw	85
 11836  004F2A  6ED4               	movwf	16340,c	;volatile
 11837                           
 11838                           ; BSR set to: 56
 11839                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11840  004F2C  0EAA               	movlw	170
 11841  004F2E  6ED4               	movwf	16340,c	;volatile
 11842                           
 11843                           ; BSR set to: 56
 11844                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11845  004F30  80D4               	bsf	16340,0,c	;volatile
 11846                           
 11847                           ; BSR set to: 56
 11848                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11849                           ;stkvar	_state @ sp[(-1)+0]
 11850  004F32  0EFF               	movlw	-1
 11851  004F34  B0E3               	btfsc	plusw1,0,c
 11852  004F36  D002               	bra	u3245
 11853  004F38  9ED2               	bcf	16338,7,c	;volatile
 11854  004F3A  D001               	bra	u3246
 11855  004F3C                     u3245:
 11856  004F3C  8ED2               	bsf	16338,7,c	;volatile
 11857  004F3E                     u3246:
 11858                           
 11859                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 11860  004F3E  0139               	movlb	57	; () banked
 11861  004F40  8782               	bsf	130,3,b	;volatile
 11862                           
 11863                           ; BSR set to: 57
 11864                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 11865  004F42  8382               	bsf	130,1,b	;volatile
 11866                           
 11867                           ; BSR set to: 57
 11868                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 11869  004F44  8182               	bsf	130,0,b	;volatile
 11870                           
 11871                           ; BSR set to: 57
 11872                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 11873  004F46  8582               	bsf	130,2,b	;volatile
 11874                           
 11875                           ; BSR set to: 57
 11876                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 11877  004F48  8786               	bsf	134,3,b	;volatile
 11878                           
 11879                           ; BSR set to: 57
 11880                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 11881  004F4A  8586               	bsf	134,2,b	;volatile
 11882                           
 11883                           ; BSR set to: 57
 11884                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 11885  004F4C  8983               	bsf	131,4,b	;volatile
 11886                           
 11887                           ; BSR set to: 57
 11888                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 11889  004F4E  8783               	bsf	131,3,b	;volatile
 11890                           
 11891                           ; BSR set to: 57
 11892                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 11893  004F50  8181               	bsf	129,0,b	;volatile
 11894                           
 11895                           ; BSR set to: 57
 11896                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 11897  004F52  8185               	bsf	133,0,b	;volatile
 11898                           
 11899                           ; BSR set to: 57
 11900                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 11901  004F54  8B87               	bsf	135,5,b	;volatile
 11902                           
 11903                           ; BSR set to: 57
 11904                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 11905  004F56  8189               	bsf	137,0,b	;volatile
 11906                           
 11907                           ; BSR set to: 57
 11908                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 11909  004F58  8581               	bsf	129,2,b	;volatile
 11910                           
 11911                           ; BSR set to: 57
 11912                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 11913  004F5A  52E5               	movf	postdec1,f,c
 11914  004F5C  0012               	return		;funcret
 11915  004F5E                     __end_of_INTERRUPT_Initialize:
 11916                           	opt callstack 0
 11917                           
 11918 ;; *************** function _EXT_INT_Initialize *****************
 11919 ;; Defined at:
 11920 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;		None
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;		None
 11925 ;; Return value:  Size  Location     Type
 11926 ;;                  1  [STACK] void 
 11927 ;; Registers used:
 11928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11929 ;; Tracked objects:
 11930 ;;		On entry : 3F/3F
 11931 ;;		On exit  : 3F/39
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11938 ;;Total ram usage:        0 bytes
 11939 ;; Hardware stack levels used:    1
 11940 ;; Hardware stack levels required when called:    4
 11941 ;; This function calls:
 11942 ;;		_INT0_SetInterruptHandler
 11943 ;;		_INT1_SetInterruptHandler
 11944 ;;		_INT2_SetInterruptHandler
 11945 ;; This function is called by:
 11946 ;;		_SYSTEM_Initialize
 11947 ;; This function uses a reentrant model
 11948 ;;
 11949                           
 11950                           	psect	text65
 11951  005126                     __ptext65:
 11952                           	opt callstack 0
 11953  005126                     _EXT_INT_Initialize:
 11954                           	opt callstack 25
 11955                           
 11956                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 11957                           
 11958                           ; BSR set to: 57
 11959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11960                           ;incstack = 0
 11961  005126  0139               	movlb	57	; () banked
 11962  005128  91A1               	bcf	161,0,b	;volatile
 11963                           
 11964                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 11965  00512A  90D2               	bcf	16338,0,c	;volatile
 11966                           
 11967                           ; BSR set to: 57
 11968                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 11969  00512C  0E52               	movlw	low _INT0_DefaultInterruptHandler
 11970  00512E  6EE6               	movwf	postinc1,c
 11971  005130  0E5A               	movlw	high _INT0_DefaultInterruptHandler
 11972  005132  6EE6               	movwf	postinc1,c
 11973  005134  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 11974  005136  6EE6               	movwf	postinc1,c
 11975  005138  EC63  F02B         	call	_INT0_SetInterruptHandler	;wreg free
 11976                           
 11977                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 11978  00513C  0139               	movlb	57	; () banked
 11979  00513E  8191               	bsf	145,0,b	;volatile
 11980                           
 11981                           ; BSR set to: 57
 11982                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 11983  005140  91A5               	bcf	165,0,b	;volatile
 11984                           
 11985                           ; BSR set to: 57
 11986                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 11987  005142  92D2               	bcf	16338,1,c	;volatile
 11988                           
 11989                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 11990  005144  0E54               	movlw	low _INT1_DefaultInterruptHandler
 11991  005146  6EE6               	movwf	postinc1,c
 11992  005148  0E5A               	movlw	high _INT1_DefaultInterruptHandler
 11993  00514A  6EE6               	movwf	postinc1,c
 11994  00514C  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 11995  00514E  6EE6               	movwf	postinc1,c
 11996  005150  EC4F  F02B         	call	_INT1_SetInterruptHandler	;wreg free
 11997                           
 11998                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 11999  005154  0139               	movlb	57	; () banked
 12000  005156  8195               	bsf	149,0,b	;volatile
 12001                           
 12002                           ; BSR set to: 57
 12003                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 12004  005158  9BA7               	bcf	167,5,b	;volatile
 12005                           
 12006                           ; BSR set to: 57
 12007                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 12008  00515A  94D2               	bcf	16338,2,c	;volatile
 12009                           
 12010                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 12011  00515C  0E56               	movlw	low _INT2_DefaultInterruptHandler
 12012  00515E  6EE6               	movwf	postinc1,c
 12013  005160  0E5A               	movlw	high _INT2_DefaultInterruptHandler
 12014  005162  6EE6               	movwf	postinc1,c
 12015  005164  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 12016  005166  6EE6               	movwf	postinc1,c
 12017  005168  EC3B  F02B         	call	_INT2_SetInterruptHandler	;wreg free
 12018                           
 12019                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 12020  00516C  0139               	movlb	57	; () banked
 12021  00516E  8B97               	bsf	151,5,b	;volatile
 12022                           
 12023                           ; BSR set to: 57
 12024                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12025  005170  0012               	return		;funcret
 12026  005172                     __end_of_EXT_INT_Initialize:
 12027                           	opt callstack 0
 12028                           
 12029 ;; *************** function _INT2_SetInterruptHandler *****************
 12030 ;; Defined at:
 12031 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 12032 ;; Parameters:    Size  Location     Type
 12033 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12034 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1  [STACK] void 
 12039 ;; Registers used:
 12040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12041 ;; Tracked objects:
 12042 ;;		On entry : 3F/39
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; Hardware stack levels required when called:    3
 12053 ;; This function calls:
 12054 ;;		Nothing
 12055 ;; This function is called by:
 12056 ;;		_EXT_INT_Initialize
 12057 ;; This function uses a reentrant model
 12058 ;;
 12059                           
 12060                           	psect	text66
 12061  005676                     __ptext66:
 12062                           	opt callstack 0
 12063  005676                     _INT2_SetInterruptHandler:
 12064                           	opt callstack 25
 12065                           
 12066                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 12067                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12068                           
 12069                           ; BSR set to: 57
 12070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12071                           ;incstack = 0
 12072  005676  50E1               	movf	fsr1l,w,c
 12073  005678  0FFD               	addlw	-3
 12074  00567A  6ED9               	movwf	fsr2l,c
 12075  00567C  50E2               	movf	fsr1h,w,c
 12076  00567E  6EDA               	movwf	fsr2h,c
 12077  005680  0EFF               	movlw	255
 12078  005682  22DA               	addwfc	fsr2h,f,c
 12079  005684  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler
 12080  00568A  006F FF78  F01B    	movff	postinc2,_INT2_InterruptHandler+1
 12081  005690  006F FF74  F01C    	movff	postdec2,_INT2_InterruptHandler+2
 12082                           
 12083                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12084  005696  52E5               	movf	postdec1,f,c
 12085  005698  52E5               	movf	postdec1,f,c
 12086  00569A  52E5               	movf	postdec1,f,c
 12087  00569C  0012               	return		;funcret
 12088  00569E                     __end_of_INT2_SetInterruptHandler:
 12089                           	opt callstack 0
 12090                           
 12091 ;; *************** function _INT1_SetInterruptHandler *****************
 12092 ;; Defined at:
 12093 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12096 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;		None
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  1  [STACK] void 
 12101 ;; Registers used:
 12102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12103 ;; Tracked objects:
 12104 ;;		On entry : 3F/39
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12112 ;;Total ram usage:        0 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; Hardware stack levels required when called:    3
 12115 ;; This function calls:
 12116 ;;		Nothing
 12117 ;; This function is called by:
 12118 ;;		_EXT_INT_Initialize
 12119 ;; This function uses a reentrant model
 12120 ;;
 12121                           
 12122                           	psect	text67
 12123  00569E                     __ptext67:
 12124                           	opt callstack 0
 12125  00569E                     _INT1_SetInterruptHandler:
 12126                           	opt callstack 25
 12127                           
 12128                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 12129                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12130                           
 12131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12132                           ;incstack = 0
 12133  00569E  50E1               	movf	fsr1l,w,c
 12134  0056A0  0FFD               	addlw	-3
 12135  0056A2  6ED9               	movwf	fsr2l,c
 12136  0056A4  50E2               	movf	fsr1h,w,c
 12137  0056A6  6EDA               	movwf	fsr2h,c
 12138  0056A8  0EFF               	movlw	255
 12139  0056AA  22DA               	addwfc	fsr2h,f,c
 12140  0056AC  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler
 12141  0056B2  006F FF78  F01E    	movff	postinc2,_INT1_InterruptHandler+1
 12142  0056B8  006F FF74  F01F    	movff	postdec2,_INT1_InterruptHandler+2
 12143                           
 12144                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12145  0056BE  52E5               	movf	postdec1,f,c
 12146  0056C0  52E5               	movf	postdec1,f,c
 12147  0056C2  52E5               	movf	postdec1,f,c
 12148  0056C4  0012               	return		;funcret
 12149  0056C6                     __end_of_INT1_SetInterruptHandler:
 12150                           	opt callstack 0
 12151                           
 12152 ;; *************** function _INT0_SetInterruptHandler *****************
 12153 ;; Defined at:
 12154 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12157 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;		None
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1  [STACK] void 
 12162 ;; Registers used:
 12163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12164 ;; Tracked objects:
 12165 ;;		On entry : 3F/39
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12173 ;;Total ram usage:        0 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    3
 12176 ;; This function calls:
 12177 ;;		Nothing
 12178 ;; This function is called by:
 12179 ;;		_EXT_INT_Initialize
 12180 ;; This function uses a reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text68
 12184  0056C6                     __ptext68:
 12185                           	opt callstack 0
 12186  0056C6                     _INT0_SetInterruptHandler:
 12187                           	opt callstack 25
 12188                           
 12189                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 12190                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12191                           
 12192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12193                           ;incstack = 0
 12194  0056C6  50E1               	movf	fsr1l,w,c
 12195  0056C8  0FFD               	addlw	-3
 12196  0056CA  6ED9               	movwf	fsr2l,c
 12197  0056CC  50E2               	movf	fsr1h,w,c
 12198  0056CE  6EDA               	movwf	fsr2h,c
 12199  0056D0  0EFF               	movlw	255
 12200  0056D2  22DA               	addwfc	fsr2h,f,c
 12201  0056D4  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler
 12202  0056DA  006F FF78  F021    	movff	postinc2,_INT0_InterruptHandler+1
 12203  0056E0  006F FF74  F022    	movff	postdec2,_INT0_InterruptHandler+2
 12204                           
 12205                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12206  0056E6  52E5               	movf	postdec1,f,c
 12207  0056E8  52E5               	movf	postdec1,f,c
 12208  0056EA  52E5               	movf	postdec1,f,c
 12209  0056EC  0012               	return		;funcret
 12210  0056EE                     __end_of_INT0_SetInterruptHandler:
 12211                           	opt callstack 0
 12212                           
 12213 ;; *************** function _DSM_Initialize *****************
 12214 ;; Defined at:
 12215 ;;		line 58 in file "mcc_generated_files/dsm.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;		None
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;		None
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1  [STACK] void 
 12222 ;; Registers used:
 12223 ;;		wreg, status,2
 12224 ;; Tracked objects:
 12225 ;;		On entry : 3F/3C
 12226 ;;		On exit  : 3F/3C
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12233 ;;Total ram usage:        0 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:    3
 12236 ;; This function calls:
 12237 ;;		Nothing
 12238 ;; This function is called by:
 12239 ;;		_SYSTEM_Initialize
 12240 ;; This function uses a reentrant model
 12241 ;;
 12242                           
 12243                           	psect	text69
 12244  005940                     __ptext69:
 12245                           	opt callstack 0
 12246  005940                     _DSM_Initialize:
 12247                           	opt callstack 26
 12248                           
 12249                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 12250                           
 12251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12252                           ;incstack = 0
 12253  005940  013C               	movlb	60	; () banked
 12254  005942  99FA               	bcf	250,4,b	;volatile
 12255                           
 12256                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 12257  005944  81FB               	bsf	251,0,b	;volatile
 12258                           
 12259                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 12260  005946  93FB               	bcf	251,1,b	;volatile
 12261                           
 12262                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 12263  005948  89FB               	bsf	251,4,b	;volatile
 12264                           
 12265                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 12266  00594A  9BFB               	bcf	251,5,b	;volatile
 12267                           
 12268                           ; BSR set to: 60
 12269                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 12270  00594C  0E13               	movlw	19
 12271  00594E  6FFC               	movwf	252,b	;volatile
 12272                           
 12273                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 12274  005950  0E0E               	movlw	14
 12275  005952  6FFE               	movwf	254,b	;volatile
 12276                           
 12277                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 12278  005954  0E04               	movlw	4
 12279  005956  6FFD               	movwf	253,b	;volatile
 12280                           
 12281                           ; BSR set to: 60
 12282                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 12283  005958  8FFA               	bsf	250,7,b	;volatile
 12284                           
 12285                           ; BSR set to: 60
 12286                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12287  00595A  0012               	return		;funcret
 12288  00595C                     __end_of_DSM_Initialize:
 12289                           	opt callstack 0
 12290                           
 12291 ;; *************** function _DMA1_Initialize *****************
 12292 ;; Defined at:
 12293 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;		None
 12296 ;; Auto vars:     Size  Location     Type
 12297 ;;		None
 12298 ;; Return value:  Size  Location     Type
 12299 ;;                  1  [STACK] void 
 12300 ;; Registers used:
 12301 ;;		wreg, status,2
 12302 ;; Tracked objects:
 12303 ;;		On entry : 3F/3D
 12304 ;;		On exit  : 3F/3B
 12305 ;;		Unchanged: 0/0
 12306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;Total ram usage:        0 bytes
 12312 ;; Hardware stack levels used:    1
 12313 ;; Hardware stack levels required when called:    3
 12314 ;; This function calls:
 12315 ;;		Nothing
 12316 ;; This function is called by:
 12317 ;;		_SYSTEM_Initialize
 12318 ;; This function uses a reentrant model
 12319 ;;
 12320                           
 12321                           	psect	text70
 12322  004E2C                     __ptext70:
 12323                           	opt callstack 0
 12324  004E2C                     _DMA1_Initialize:
 12325                           	opt callstack 26
 12326                           
 12327                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12328                           
 12329                           ; BSR set to: 60
 12330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12331                           ;incstack = 0
 12332  004E2C  0E00               	movlw	0
 12333  004E2E  013B               	movlb	59	; () banked
 12334  004E30  6FF9               	movwf	249,b	;volatile
 12335  004E32  0E10               	movlw	16
 12336  004E34  6FFA               	movwf	250,b	;volatile
 12337  004E36  0E00               	movlw	0
 12338  004E38  6FFB               	movwf	251,b	;volatile
 12339                           
 12340                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12341  004E3A  0E3D               	movlw	61
 12342  004E3C  6FF1               	movwf	241,b	;volatile
 12343  004E3E  0E11               	movlw	17
 12344  004E40  6FF0               	movwf	240,b	;volatile
 12345                           
 12346                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12347  004E42  0E03               	movlw	3
 12348  004E44  6FFD               	movwf	253,b	;volatile
 12349                           
 12350                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12351  004E46  0E00               	movlw	0
 12352  004E48  6FF8               	movwf	248,b	;volatile
 12353  004E4A  0E01               	movlw	1
 12354  004E4C  6FF7               	movwf	247,b	;volatile
 12355                           
 12356                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12357  004E4E  0E00               	movlw	0
 12358  004E50  6FEF               	movwf	239,b	;volatile
 12359  004E52  0E01               	movlw	1
 12360  004E54  6FEE               	movwf	238,b	;volatile
 12361                           
 12362                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12363  004E56  0E15               	movlw	21
 12364  004E58  6FFF               	movwf	255,b	;volatile
 12365                           
 12366                           ; BSR set to: 59
 12367                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12368  004E5A  6BFE               	clrf	254,b	;volatile
 12369                           
 12370                           ; BSR set to: 59
 12371                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12372  004E5C  0139               	movlb	57	; () banked
 12373  004E5E  93A2               	bcf	162,1,b	;volatile
 12374                           
 12375                           ; BSR set to: 57
 12376                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12377  004E60  91A2               	bcf	162,0,b	;volatile
 12378                           
 12379                           ; BSR set to: 57
 12380                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12381  004E62  97A2               	bcf	162,3,b	;volatile
 12382                           
 12383                           ; BSR set to: 57
 12384                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12385  004E64  95A2               	bcf	162,2,b	;volatile
 12386                           
 12387                           ; BSR set to: 57
 12388                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12389  004E66  8392               	bsf	146,1,b	;volatile
 12390                           
 12391                           ; BSR set to: 57
 12392                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12393  004E68  8192               	bsf	146,0,b	;volatile
 12394                           
 12395                           ; BSR set to: 57
 12396                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12397  004E6A  8792               	bsf	146,3,b	;volatile
 12398                           
 12399                           ; BSR set to: 57
 12400                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12401  004E6C  8592               	bsf	146,2,b	;volatile
 12402                           
 12403                           ; BSR set to: 57
 12404                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12405  004E6E  6BF1               	clrf	241,b	;volatile
 12406                           
 12407                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12408  004E70  0E01               	movlw	1
 12409  004E72  6FF2               	movwf	242,b	;volatile
 12410                           
 12411                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12412  004E74  0E04               	movlw	4
 12413  004E76  6FF3               	movwf	243,b	;volatile
 12414                           
 12415                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12416  004E78  0E02               	movlw	2
 12417  004E7A  6FF4               	movwf	244,b	;volatile
 12418                           
 12419                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12420  004E7C  0E03               	movlw	3
 12421  004E7E  6FF7               	movwf	247,b	;volatile
 12422  004E80  9ED2               	bcf	16338,7,c	;# 
 12423  004E82  0139               	banksel	14831	;# 
 12424  004E84  0E55               	movlw	85	;# 
 12425  004E86  6FEF               	movwf	14831,b	;# 
 12426  004E88  0EAA               	movlw	170	;# 
 12427  004E8A  6FEF               	movwf	14831,b	;# 
 12428  004E8C  81EF               	bsf	14831,0,b	;# 
 12429  004E8E  8ED2               	bsf	16338,7,c	;# 
 12430                           
 12431                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12432  004E90  013B               	movlb	59	; () banked
 12433  004E92  6BFC               	clrf	252,b	;volatile
 12434                           
 12435                           ; BSR set to: 59
 12436                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12437  004E94  0012               	return		;funcret
 12438  004E96                     __end_of_DMA1_Initialize:
 12439                           	opt callstack 0
 12440                           
 12441 ;; *************** function _CLKREF_Initialize *****************
 12442 ;; Defined at:
 12443 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;		None
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;		None
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1  [STACK] void 
 12450 ;; Registers used:
 12451 ;;		wreg, status,2
 12452 ;; Tracked objects:
 12453 ;;		On entry : 3F/3B
 12454 ;;		On exit  : 3F/3C
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12461 ;;Total ram usage:        0 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:    3
 12464 ;; This function calls:
 12465 ;;		Nothing
 12466 ;; This function is called by:
 12467 ;;		_SYSTEM_Initialize
 12468 ;; This function uses a reentrant model
 12469 ;;
 12470                           
 12471                           	psect	text71
 12472  005A04                     __ptext71:
 12473                           	opt callstack 0
 12474  005A04                     _CLKREF_Initialize:
 12475                           	opt callstack 26
 12476                           
 12477                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12478                           
 12479                           ; BSR set to: 59
 12480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12481                           ;incstack = 0
 12482  005A04  013C               	movlb	60	; () banked
 12483  005A06  6BE6               	clrf	230,b	;volatile
 12484                           
 12485                           ; BSR set to: 60
 12486                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12487  005A08  0E94               	movlw	148
 12488  005A0A  6FE5               	movwf	229,b	;volatile
 12489                           
 12490                           ; BSR set to: 60
 12491                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12492  005A0C  0012               	return		;funcret
 12493  005A0E                     __end_of_CLKREF_Initialize:
 12494                           	opt callstack 0
 12495                           
 12496 ;; *************** function _CLC1_Initialize *****************
 12497 ;; Defined at:
 12498 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;		None
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;		None
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  1  [STACK] void 
 12505 ;; Registers used:
 12506 ;;		wreg, status,2
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/39
 12509 ;;		On exit  : 3F/3C
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12516 ;;Total ram usage:        0 bytes
 12517 ;; Hardware stack levels used:    1
 12518 ;; Hardware stack levels required when called:    3
 12519 ;; This function calls:
 12520 ;;		Nothing
 12521 ;; This function is called by:
 12522 ;;		_SYSTEM_Initialize
 12523 ;; This function uses a reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text72
 12527  005800                     __ptext72:
 12528                           	opt callstack 0
 12529  005800                     _CLC1_Initialize:
 12530                           	opt callstack 26
 12531                           
 12532                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12533                           
 12534                           ; BSR set to: 60
 12535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12536                           ;incstack = 0
 12537  005800  013C               	movlb	60	; () banked
 12538  005802  6B75               	clrf	117,b	;volatile
 12539                           
 12540                           ; BSR set to: 60
 12541                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12542  005804  0E04               	movlw	4
 12543  005806  6F76               	movwf	118,b	;volatile
 12544                           
 12545                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12546  005808  0E04               	movlw	4
 12547  00580A  6F77               	movwf	119,b	;volatile
 12548                           
 12549                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12550  00580C  0E04               	movlw	4
 12551  00580E  6F78               	movwf	120,b	;volatile
 12552                           
 12553                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12554  005810  0E04               	movlw	4
 12555  005812  6F79               	movwf	121,b	;volatile
 12556                           
 12557                           ; BSR set to: 60
 12558                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12559  005814  6B7A               	clrf	122,b	;volatile
 12560                           
 12561                           ; BSR set to: 60
 12562                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12563  005816  6B7B               	clrf	123,b	;volatile
 12564                           
 12565                           ; BSR set to: 60
 12566                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12567  005818  6B7C               	clrf	124,b	;volatile
 12568                           
 12569                           ; BSR set to: 60
 12570                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12571  00581A  6B7D               	clrf	125,b	;volatile
 12572                           
 12573                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12574  00581C  0E81               	movlw	129
 12575  00581E  6F74               	movwf	116,b	;volatile
 12576                           
 12577                           ; BSR set to: 60
 12578                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12579  005820  0012               	return		;funcret
 12580  005822                     __end_of_CLC1_Initialize:
 12581                           	opt callstack 0
 12582                           
 12583 ;; *************** function _ADCC_Initialize *****************
 12584 ;; Defined at:
 12585 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;		None
 12588 ;; Auto vars:     Size  Location     Type
 12589 ;;		None
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  1  [STACK] void 
 12592 ;; Registers used:
 12593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12594 ;; Tracked objects:
 12595 ;;		On entry : 3F/39
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12603 ;;Total ram usage:        0 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; Hardware stack levels required when called:    4
 12606 ;; This function calls:
 12607 ;;		_ADCC_SetADIInterruptHandler
 12608 ;; This function is called by:
 12609 ;;		_SYSTEM_Initialize
 12610 ;; This function uses a reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text73
 12614  005172                     __ptext73:
 12615                           	opt callstack 0
 12616  005172                     _ADCC_Initialize:
 12617                           	opt callstack 25
 12618                           
 12619                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12620                           
 12621                           ; BSR set to: 60
 12622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12623                           ;incstack = 0
 12624  005172  013E               	movlb	62	; () banked
 12625  005174  6BDE               	clrf	222,b	;volatile
 12626                           
 12627                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12628  005176  6BDF               	clrf	223,b	;volatile
 12629                           
 12630                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12631  005178  6BE0               	clrf	224,b	;volatile
 12632                           
 12633                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12634  00517A  6BE1               	clrf	225,b	;volatile
 12635                           
 12636                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12637  00517C  6BE4               	clrf	228,b	;volatile
 12638                           
 12639                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12640  00517E  6BE5               	clrf	229,b	;volatile
 12641                           
 12642                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12643  005180  6BEA               	clrf	234,b	;volatile
 12644                           
 12645                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12646  005182  6BEC               	clrf	236,b	;volatile
 12647                           
 12648                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12649  005184  6BF1               	clrf	241,b	;volatile
 12650                           
 12651                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12652  005186  6BF3               	clrf	243,b	;volatile
 12653                           
 12654                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12655  005188  6BF4               	clrf	244,b	;volatile
 12656                           
 12657                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12658  00518A  6BF5               	clrf	245,b	;volatile
 12659                           
 12660                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12661  00518C  6BF6               	clrf	246,b	;volatile
 12662                           
 12663                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12664  00518E  6BF7               	clrf	247,b	;volatile
 12665                           
 12666                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12667  005190  6BF9               	clrf	249,b	;volatile
 12668                           
 12669                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12670  005192  6BFA               	clrf	250,b	;volatile
 12671                           
 12672                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12673  005194  6BFB               	clrf	251,b	;volatile
 12674                           
 12675                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12676  005196  6BFC               	clrf	252,b	;volatile
 12677                           
 12678                           ; BSR set to: 62
 12679                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12680  005198  0E02               	movlw	2
 12681  00519A  6FFD               	movwf	253,b	;volatile
 12682                           
 12683                           ; BSR set to: 62
 12684                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12685  00519C  6BFE               	clrf	254,b	;volatile
 12686                           
 12687                           ; BSR set to: 62
 12688                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12689  00519E  6BFF               	clrf	255,b	;volatile
 12690                           
 12691                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12692  0051A0  0E94               	movlw	148
 12693  0051A2  6FF8               	movwf	248,b	;volatile
 12694                           
 12695                           ; BSR set to: 62
 12696                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12697  0051A4  0139               	movlb	57	; () banked
 12698  0051A6  95A1               	bcf	161,2,b	;volatile
 12699                           
 12700                           ; BSR set to: 57
 12701                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12702  0051A8  8591               	bsf	145,2,b	;volatile
 12703                           
 12704                           ; BSR set to: 57
 12705                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12706  0051AA  0E58               	movlw	low _ADCC_DefaultInterruptHandler
 12707  0051AC  6EE6               	movwf	postinc1,c
 12708  0051AE  0E5A               	movlw	high _ADCC_DefaultInterruptHandler
 12709  0051B0  6EE6               	movwf	postinc1,c
 12710  0051B2  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12711  0051B4  6EE6               	movwf	postinc1,c
 12712  0051B6  EC77  F02B         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12713                           
 12714                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12715  0051BA  0012               	return		;funcret
 12716  0051BC                     __end_of_ADCC_Initialize:
 12717                           	opt callstack 0
 12718                           
 12719 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12720 ;; Defined at:
 12721 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12724 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;		None
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  1  [STACK] void 
 12729 ;; Registers used:
 12730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12731 ;; Tracked objects:
 12732 ;;		On entry : 3F/39
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12740 ;;Total ram usage:        0 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:    3
 12743 ;; This function calls:
 12744 ;;		Nothing
 12745 ;; This function is called by:
 12746 ;;		_ADCC_Initialize
 12747 ;; This function uses a reentrant model
 12748 ;;
 12749                           
 12750                           	psect	text74
 12751  0056EE                     __ptext74:
 12752                           	opt callstack 0
 12753  0056EE                     _ADCC_SetADIInterruptHandler:
 12754                           	opt callstack 25
 12755                           
 12756                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12757                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12758                           
 12759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12760                           ;incstack = 0
 12761  0056EE  50E1               	movf	fsr1l,w,c
 12762  0056F0  0FFD               	addlw	-3
 12763  0056F2  6ED9               	movwf	fsr2l,c
 12764  0056F4  50E2               	movf	fsr1h,w,c
 12765  0056F6  6EDA               	movwf	fsr2h,c
 12766  0056F8  0EFF               	movlw	255
 12767  0056FA  22DA               	addwfc	fsr2h,f,c
 12768  0056FC  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12769  005702  006F FF78  F00C    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12770  005708  006F FF74  F00D    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12771                           
 12772                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12773  00570E  52E5               	movf	postdec1,f,c
 12774  005710  52E5               	movf	postdec1,f,c
 12775  005712  52E5               	movf	postdec1,f,c
 12776  005714  0012               	return		;funcret
 12777  005716                     __end_of_ADCC_SetADIInterruptHandler:
 12778                           	opt callstack 0
 12779                           
 12780 ;; *************** function _INT0_ISR *****************
 12781 ;; Defined at:
 12782 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;		None
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;		None
 12787 ;; Return value:  Size  Location     Type
 12788 ;;                  1    wreg      void 
 12789 ;; Registers used:
 12790 ;;		wreg, status,2, status,0, pclath, tosl
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12800 ;;Total ram usage:        0 bytes
 12801 ;; Hardware stack levels used:    1
 12802 ;; Hardware stack levels required when called:    2
 12803 ;; This function calls:
 12804 ;;		_INT0_CallBack
 12805 ;; This function is called by:
 12806 ;;		Interrupt level 2
 12807 ;; This function uses a non-reentrant model
 12808 ;;
 12809                           
 12810                           	psect	text75
 12811  0059B8                     __ptext75:
 12812                           	opt callstack 0
 12813  0059B8                     _INT0_ISR:
 12814                           	opt callstack 18
 12815                           
 12816                           ;incstack = 0
 12817  0059B8  EE13  F0D8         	lfsr	1,___inthi_sp
 12818                           
 12819                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 12820  0059BC  0139               	movlb	57	; () banked
 12821  0059BE  91A1               	bcf	161,0,b	;volatile
 12822                           
 12823                           ; BSR set to: 57
 12824                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 12825  0059C0  EC11  F02C         	call	_INT0_CallBack	;wreg free
 12826  0059C4  0011               	retfie		f
 12827  0059C6                     __end_of_INT0_ISR:
 12828                           	opt callstack 0
 12829                           
 12830 ;; *************** function _INT0_CallBack *****************
 12831 ;; Defined at:
 12832 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;		None
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;		None
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  1  [STACK] void 
 12839 ;; Registers used:
 12840 ;;		wreg, status,2, status,0, pclath, tosl
 12841 ;; Tracked objects:
 12842 ;;		On entry : 3F/39
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12850 ;;Total ram usage:        0 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    1
 12853 ;; This function calls:
 12854 ;;		Absolute function
 12855 ;;		_INT0_DefaultInterruptHandler
 12856 ;; This function is called by:
 12857 ;;		_INT0_ISR
 12858 ;; This function uses a reentrant model
 12859 ;;
 12860                           
 12861                           	psect	text76
 12862  005822                     __ptext76:
 12863                           	opt callstack 0
 12864  005822                     _INT0_CallBack:
 12865                           	opt callstack 18
 12866                           
 12867                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 12868                           
 12869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12870                           ;incstack = 0
 12871  005822  5020               	movf	_INT0_InterruptHandler,w,c
 12872  005824  1021               	iorwf	_INT0_InterruptHandler+1,w,c
 12873  005826  1022               	iorwf	_INT0_InterruptHandler+2,w,c
 12874  005828  B4D8               	btfsc	status,2,c
 12875  00582A  0012               	return	
 12876                           
 12877                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 12878  00582C  D801               	call	u145_48
 12879  00582E  0012               	return	
 12880  005830                     u145_48:
 12881  005830  0005               	push	
 12882  005832  6EFA               	movwf	pclath,c
 12883  005834  5020               	movf	_INT0_InterruptHandler,w,c
 12884  005836  6EFD               	movwf	tosl,c
 12885  005838  5021               	movf	_INT0_InterruptHandler+1,w,c
 12886  00583A  6EFE               	movwf	tosh,c
 12887  00583C  5022               	movf	_INT0_InterruptHandler+2,w,c
 12888  00583E  6EFF               	movwf	tosu,c
 12889  005840  50FA               	movf	pclath,w,c
 12890  005842  0012               	return		;indir
 12891  005844                     __end_of_INT0_CallBack:
 12892                           	opt callstack 0
 12893                           
 12894 ;; *************** function _INT0_DefaultInterruptHandler *****************
 12895 ;; Defined at:
 12896 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;		None
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;		None
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1  [STACK] void 
 12903 ;; Registers used:
 12904 ;;		None
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/39
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12914 ;;Total ram usage:        0 bytes
 12915 ;; Hardware stack levels used:    1
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		_EXT_INT_Initialize
 12920 ;;		_INT0_CallBack
 12921 ;; This function uses a reentrant model
 12922 ;;
 12923                           
 12924                           	psect	text77
 12925  005A52                     __ptext77:
 12926                           	opt callstack 0
 12927  005A52                     _INT0_DefaultInterruptHandler:
 12928                           	opt callstack 18
 12929                           
 12930                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 12931                           
 12932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12933                           ;incstack = 0
 12934  005A52  0012               	return		;funcret
 12935  005A54                     __end_of_INT0_DefaultInterruptHandler:
 12936                           	opt callstack 0
 12937                           
 12938 ;; *************** function _INT1_ISR *****************
 12939 ;; Defined at:
 12940 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;		None
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;		None
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  1    wreg      void 
 12947 ;; Registers used:
 12948 ;;		wreg, status,2, status,0, pclath, tosl
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12958 ;;Total ram usage:        0 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    2
 12961 ;; This function calls:
 12962 ;;		_INT1_CallBack
 12963 ;; This function is called by:
 12964 ;;		Interrupt level 2
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           	psect	text78
 12969  0059C8                     __ptext78:
 12970                           	opt callstack 0
 12971  0059C8                     _INT1_ISR:
 12972                           	opt callstack 18
 12973                           
 12974                           ;incstack = 0
 12975  0059C8  EE13  F0D8         	lfsr	1,___inthi_sp
 12976                           
 12977                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 12978  0059CC  0139               	movlb	57	; () banked
 12979  0059CE  91A5               	bcf	165,0,b	;volatile
 12980                           
 12981                           ; BSR set to: 57
 12982                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 12983  0059D0  EC22  F02C         	call	_INT1_CallBack	;wreg free
 12984  0059D4  0011               	retfie		f
 12985  0059D6                     __end_of_INT1_ISR:
 12986                           	opt callstack 0
 12987                           
 12988 ;; *************** function _INT1_CallBack *****************
 12989 ;; Defined at:
 12990 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 12991 ;; Parameters:    Size  Location     Type
 12992 ;;		None
 12993 ;; Auto vars:     Size  Location     Type
 12994 ;;		None
 12995 ;; Return value:  Size  Location     Type
 12996 ;;                  1  [STACK] void 
 12997 ;; Registers used:
 12998 ;;		wreg, status,2, status,0, pclath, tosl
 12999 ;; Tracked objects:
 13000 ;;		On entry : 3F/39
 13001 ;;		On exit  : 0/0
 13002 ;;		Unchanged: 0/0
 13003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13008 ;;Total ram usage:        0 bytes
 13009 ;; Hardware stack levels used:    1
 13010 ;; Hardware stack levels required when called:    1
 13011 ;; This function calls:
 13012 ;;		Absolute function
 13013 ;;		_INT1_DefaultInterruptHandler
 13014 ;; This function is called by:
 13015 ;;		_INT1_ISR
 13016 ;; This function uses a reentrant model
 13017 ;;
 13018                           
 13019                           	psect	text79
 13020  005844                     __ptext79:
 13021                           	opt callstack 0
 13022  005844                     _INT1_CallBack:
 13023                           	opt callstack 18
 13024                           
 13025                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 13026                           
 13027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13028                           ;incstack = 0
 13029  005844  501D               	movf	_INT1_InterruptHandler,w,c
 13030  005846  101E               	iorwf	_INT1_InterruptHandler+1,w,c
 13031  005848  101F               	iorwf	_INT1_InterruptHandler+2,w,c
 13032  00584A  B4D8               	btfsc	status,2,c
 13033  00584C  0012               	return	
 13034                           
 13035                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 13036  00584E  D801               	call	u147_48
 13037  005850  0012               	return	
 13038  005852                     u147_48:
 13039  005852  0005               	push	
 13040  005854  6EFA               	movwf	pclath,c
 13041  005856  501D               	movf	_INT1_InterruptHandler,w,c
 13042  005858  6EFD               	movwf	tosl,c
 13043  00585A  501E               	movf	_INT1_InterruptHandler+1,w,c
 13044  00585C  6EFE               	movwf	tosh,c
 13045  00585E  501F               	movf	_INT1_InterruptHandler+2,w,c
 13046  005860  6EFF               	movwf	tosu,c
 13047  005862  50FA               	movf	pclath,w,c
 13048  005864  0012               	return		;indir
 13049  005866                     __end_of_INT1_CallBack:
 13050                           	opt callstack 0
 13051                           
 13052 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13053 ;; Defined at:
 13054 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 13055 ;; Parameters:    Size  Location     Type
 13056 ;;		None
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;		None
 13059 ;; Return value:  Size  Location     Type
 13060 ;;                  1  [STACK] void 
 13061 ;; Registers used:
 13062 ;;		None
 13063 ;; Tracked objects:
 13064 ;;		On entry : 0/39
 13065 ;;		On exit  : 0/0
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13072 ;;Total ram usage:        0 bytes
 13073 ;; Hardware stack levels used:    1
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_EXT_INT_Initialize
 13078 ;;		_INT1_CallBack
 13079 ;; This function uses a reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text80
 13083  005A54                     __ptext80:
 13084                           	opt callstack 0
 13085  005A54                     _INT1_DefaultInterruptHandler:
 13086                           	opt callstack 18
 13087                           
 13088                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13089                           
 13090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13091                           ;incstack = 0
 13092  005A54  0012               	return		;funcret
 13093  005A56                     __end_of_INT1_DefaultInterruptHandler:
 13094                           	opt callstack 0
 13095                           
 13096 ;; *************** function _INT2_ISR *****************
 13097 ;; Defined at:
 13098 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;		None
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;		None
 13103 ;; Return value:  Size  Location     Type
 13104 ;;                  1    wreg      void 
 13105 ;; Registers used:
 13106 ;;		wreg, status,2, status,0, pclath, tosl
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;Total ram usage:        0 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:    2
 13119 ;; This function calls:
 13120 ;;		_INT2_CallBack
 13121 ;; This function is called by:
 13122 ;;		Interrupt level 2
 13123 ;; This function uses a non-reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text81
 13127  0059D8                     __ptext81:
 13128                           	opt callstack 0
 13129  0059D8                     _INT2_ISR:
 13130                           	opt callstack 18
 13131                           
 13132                           ;incstack = 0
 13133  0059D8  EE13  F0D8         	lfsr	1,___inthi_sp
 13134                           
 13135                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 13136  0059DC  0139               	movlb	57	; () banked
 13137  0059DE  9BA7               	bcf	167,5,b	;volatile
 13138                           
 13139                           ; BSR set to: 57
 13140                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 13141  0059E0  EC33  F02C         	call	_INT2_CallBack	;wreg free
 13142  0059E4  0011               	retfie		f
 13143  0059E6                     __end_of_INT2_ISR:
 13144                           	opt callstack 0
 13145                           
 13146 ;; *************** function _INT2_CallBack *****************
 13147 ;; Defined at:
 13148 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;		None
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;		None
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1  [STACK] void 
 13155 ;; Registers used:
 13156 ;;		wreg, status,2, status,0, pclath, tosl
 13157 ;; Tracked objects:
 13158 ;;		On entry : 3F/39
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13166 ;;Total ram usage:        0 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; Hardware stack levels required when called:    1
 13169 ;; This function calls:
 13170 ;;		Absolute function
 13171 ;;		_INT2_DefaultInterruptHandler
 13172 ;; This function is called by:
 13173 ;;		_INT2_ISR
 13174 ;; This function uses a reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text82
 13178  005866                     __ptext82:
 13179                           	opt callstack 0
 13180  005866                     _INT2_CallBack:
 13181                           	opt callstack 18
 13182                           
 13183                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 13184                           
 13185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13186                           ;incstack = 0
 13187  005866  501A               	movf	_INT2_InterruptHandler,w,c
 13188  005868  101B               	iorwf	_INT2_InterruptHandler+1,w,c
 13189  00586A  101C               	iorwf	_INT2_InterruptHandler+2,w,c
 13190  00586C  B4D8               	btfsc	status,2,c
 13191  00586E  0012               	return	
 13192                           
 13193                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 13194  005870  D801               	call	u149_48
 13195  005872  0012               	return	
 13196  005874                     u149_48:
 13197  005874  0005               	push	
 13198  005876  6EFA               	movwf	pclath,c
 13199  005878  501A               	movf	_INT2_InterruptHandler,w,c
 13200  00587A  6EFD               	movwf	tosl,c
 13201  00587C  501B               	movf	_INT2_InterruptHandler+1,w,c
 13202  00587E  6EFE               	movwf	tosh,c
 13203  005880  501C               	movf	_INT2_InterruptHandler+2,w,c
 13204  005882  6EFF               	movwf	tosu,c
 13205  005884  50FA               	movf	pclath,w,c
 13206  005886  0012               	return		;indir
 13207  005888                     __end_of_INT2_CallBack:
 13208                           	opt callstack 0
 13209                           
 13210 ;; *************** function _INT2_DefaultInterruptHandler *****************
 13211 ;; Defined at:
 13212 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;		None
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;		None
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  1  [STACK] void 
 13219 ;; Registers used:
 13220 ;;		None
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/39
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13230 ;;Total ram usage:        0 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; This function calls:
 13233 ;;		Nothing
 13234 ;; This function is called by:
 13235 ;;		_EXT_INT_Initialize
 13236 ;;		_INT2_CallBack
 13237 ;; This function uses a reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text83
 13241  005A56                     __ptext83:
 13242                           	opt callstack 0
 13243  005A56                     _INT2_DefaultInterruptHandler:
 13244                           	opt callstack 18
 13245                           
 13246                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13247                           
 13248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13249                           ;incstack = 0
 13250  005A56  0012               	return		;funcret
 13251  005A58                     __end_of_INT2_DefaultInterruptHandler:
 13252                           	opt callstack 0
 13253                           
 13254 ;; *************** function _Default_ISR *****************
 13255 ;; Defined at:
 13256 ;;		line 87 in file "mcc_generated_files/interrupt_manager.c"
 13257 ;; Parameters:    Size  Location     Type
 13258 ;;		None
 13259 ;; Auto vars:     Size  Location     Type
 13260 ;;		None
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  1    wreg      void 
 13263 ;; Registers used:
 13264 ;;		None
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13274 ;;Total ram usage:        0 bytes
 13275 ;; Hardware stack levels used:    1
 13276 ;; This function calls:
 13277 ;;		Nothing
 13278 ;; This function is called by:
 13279 ;;		Interrupt level 2
 13280 ;; This function uses a non-reentrant model
 13281 ;;
 13282                           
 13283                           	psect	text84
 13284  005A4C                     __ptext84:
 13285                           	opt callstack 0
 13286  005A4C                     _Default_ISR:
 13287                           	opt callstack 20
 13288                           
 13289                           ;incstack = 0
 13290  005A4C  EE13  F0D8         	lfsr	1,___inthi_sp
 13291  005A50  0011               	retfie		f
 13292  005A52                     __end_of_Default_ISR:
 13293                           	opt callstack 0
 13294                           
 13295 ;; *************** function _ADCC_ISR *****************
 13296 ;; Defined at:
 13297 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;		None
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;		None
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  1    wreg      void 
 13304 ;; Registers used:
 13305 ;;		wreg, status,2, status,0, pclath, tosl
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13315 ;;Total ram usage:        0 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:    1
 13318 ;; This function calls:
 13319 ;;		Absolute function
 13320 ;;		_ADCC_DefaultInterruptHandler
 13321 ;; This function is called by:
 13322 ;;		Interrupt level 2
 13323 ;; This function uses a non-reentrant model
 13324 ;;
 13325                           
 13326                           	psect	text85
 13327  0054BC                     __ptext85:
 13328                           	opt callstack 0
 13329  0054BC                     _ADCC_ISR:
 13330                           	opt callstack 19
 13331                           
 13332                           ;incstack = 0
 13333  0054BC  EE13  F0D8         	lfsr	1,___inthi_sp
 13334                           
 13335                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13336  0054C0  0139               	movlb	57	; () banked
 13337  0054C2  95A1               	bcf	161,2,b	;volatile
 13338                           
 13339                           ; BSR set to: 57
 13340                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13341  0054C4  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 13342  0054C6  100C               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13343  0054C8  100D               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13344  0054CA  B4D8               	btfsc	status,2,c
 13345  0054CC  0011               	retfie		f
 13346                           
 13347                           ; BSR set to: 57
 13348                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13349  0054CE  D801               	call	i2u182_48
 13350  0054D0  0011               	retfie		f
 13351  0054D2                     i2u182_48:
 13352  0054D2  0005               	push	
 13353  0054D4  6EFA               	movwf	pclath,c
 13354  0054D6  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 13355  0054D8  6EFD               	movwf	tosl,c
 13356  0054DA  500C               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13357  0054DC  6EFE               	movwf	tosh,c
 13358  0054DE  500D               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13359  0054E0  6EFF               	movwf	tosu,c
 13360  0054E2  50FA               	movf	pclath,w,c
 13361  0054E4  0012               	return		;indir
 13362  0054E6                     __end_of_ADCC_ISR:
 13363                           	opt callstack 0
 13364                           
 13365 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13366 ;; Defined at:
 13367 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;		None
 13370 ;; Auto vars:     Size  Location     Type
 13371 ;;		None
 13372 ;; Return value:  Size  Location     Type
 13373 ;;                  1  [STACK] void 
 13374 ;; Registers used:
 13375 ;;		None
 13376 ;; Tracked objects:
 13377 ;;		On entry : 3F/39
 13378 ;;		On exit  : 0/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13385 ;;Total ram usage:        0 bytes
 13386 ;; Hardware stack levels used:    1
 13387 ;; This function calls:
 13388 ;;		Nothing
 13389 ;; This function is called by:
 13390 ;;		_ADCC_Initialize
 13391 ;;		_ADCC_ISR
 13392 ;; This function uses a reentrant model
 13393 ;;
 13394                           
 13395                           	psect	text86
 13396  005A58                     __ptext86:
 13397                           	opt callstack 0
 13398  005A58                     _ADCC_DefaultInterruptHandler:
 13399                           	opt callstack 19
 13400                           
 13401                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13402                           
 13403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13404                           ;incstack = 0
 13405  005A58  0012               	return		;funcret
 13406  005A5A                     __end_of_ADCC_DefaultInterruptHandler:
 13407                           	opt callstack 0
 13408                           
 13409 ;; *************** function _UART1_tx_vect_isr *****************
 13410 ;; Defined at:
 13411 ;;		line 197 in file "mcc_generated_files/uart1.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;		None
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13429 ;;Total ram usage:        0 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    1
 13432 ;; This function calls:
 13433 ;;		Absolute function
 13434 ;;		_UART1_Transmit_ISR
 13435 ;; This function is called by:
 13436 ;;		Interrupt level 2
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text87
 13441  005718                     __ptext87:
 13442                           	opt callstack 0
 13443  005718                     _UART1_tx_vect_isr:
 13444                           	opt callstack 19
 13445                           
 13446                           ;incstack = 0
 13447  005718  EE13  F0D8         	lfsr	1,___inthi_sp
 13448                           
 13449                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 13450  00571C  500E               	movf	_UART1_TxInterruptHandler,w,c
 13451  00571E  100F               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13452  005720  1010               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13453  005722  B4D8               	btfsc	status,2,c
 13454  005724  0011               	retfie		f
 13455                           
 13456                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 13457  005726  D801               	call	i2u370_48
 13458  005728  0011               	retfie		f
 13459  00572A                     i2u370_48:
 13460  00572A  0005               	push	
 13461  00572C  6EFA               	movwf	pclath,c
 13462  00572E  500E               	movf	_UART1_TxInterruptHandler,w,c
 13463  005730  6EFD               	movwf	tosl,c
 13464  005732  500F               	movf	_UART1_TxInterruptHandler+1,w,c
 13465  005734  6EFE               	movwf	tosh,c
 13466  005736  5010               	movf	_UART1_TxInterruptHandler+2,w,c
 13467  005738  6EFF               	movwf	tosu,c
 13468  00573A  50FA               	movf	pclath,w,c
 13469  00573C  0012               	return		;indir
 13470  00573E                     __end_of_UART1_tx_vect_isr:
 13471                           	opt callstack 0
 13472                           
 13473 ;; *************** function _UART1_Transmit_ISR *****************
 13474 ;; Defined at:
 13475 ;;		line 211 in file "mcc_generated_files/uart1.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;		None
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;		None
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  1  [STACK] void 
 13482 ;; Registers used:
 13483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 3B/39
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13493 ;;Total ram usage:        0 bytes
 13494 ;; Hardware stack levels used:    1
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_UART1_Initialize
 13499 ;;		_UART1_tx_vect_isr
 13500 ;; This function uses a reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text88
 13504  005410                     __ptext88:
 13505                           	opt callstack 0
 13506  005410                     _UART1_Transmit_ISR:
 13507                           	opt callstack 19
 13508                           
 13509                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13510                           
 13511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13512                           ;incstack = 0
 13513  005410  0E40               	movlw	64
 13514  005412  6037               	cpfslt	_uart1TxBufferRemaining,c
 13515  005414  D010               	goto	l593
 13516                           
 13517                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13518  005416  0E40               	movlw	low _uart1TxBuffer
 13519  005418  2438               	addwf	_uart1TxTail,w,c	;volatile
 13520  00541A  6ED9               	movwf	fsr2l,c
 13521  00541C  6ADA               	clrf	fsr2h,c
 13522  00541E  0E01               	movlw	high _uart1TxBuffer
 13523  005420  22DA               	addwfc	fsr2h,f,c
 13524  005422  50DF               	movf	indf2,w,c
 13525  005424  013D               	movlb	61	; () banked
 13526  005426  6FEA               	movwf	234,b	;volatile
 13527                           
 13528                           ; BSR set to: 61
 13529  005428  2A38               	incf	_uart1TxTail,f,c	;volatile
 13530                           
 13531                           ; BSR set to: 61
 13532                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13533  00542A  0E3F               	movlw	63
 13534  00542C  6438               	cpfsgt	_uart1TxTail,c
 13535  00542E  D001               	goto	l5612
 13536                           
 13537                           ; BSR set to: 61
 13538                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 13539  005430  6A38               	clrf	_uart1TxTail,c	;volatile
 13540  005432                     l5612:
 13541                           
 13542                           ; BSR set to: 61
 13543                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 13544  005432  2A37               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13545                           
 13546                           ;mcc_generated_files/uart1.c: 220:  } else {
 13547  005434  0012               	return	
 13548  005436                     l593:
 13549                           
 13550                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 13551  005436  0139               	movlb	57	; () banked
 13552  005438  9993               	bcf	147,4,b	;volatile
 13553                           
 13554                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13555  00543A  0012               	return		;funcret
 13556  00543C                     __end_of_UART1_Transmit_ISR:
 13557                           	opt callstack 0
 13558                           
 13559 ;; *************** function _UART1_rx_vect_isr *****************
 13560 ;; Defined at:
 13561 ;;		line 204 in file "mcc_generated_files/uart1.c"
 13562 ;; Parameters:    Size  Location     Type
 13563 ;;		None
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;		None
 13566 ;; Return value:  Size  Location     Type
 13567 ;;                  1    wreg      void 
 13568 ;; Registers used:
 13569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13570 ;; Tracked objects:
 13571 ;;		On entry : 0/0
 13572 ;;		On exit  : 0/0
 13573 ;;		Unchanged: 0/0
 13574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13579 ;;Total ram usage:        0 bytes
 13580 ;; Hardware stack levels used:    1
 13581 ;; Hardware stack levels required when called:    1
 13582 ;; This function calls:
 13583 ;;		Absolute function
 13584 ;;		_UART1_Receive_ISR
 13585 ;; This function is called by:
 13586 ;;		Interrupt level 2
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           	psect	text89
 13591  005740                     __ptext89:
 13592                           	opt callstack 0
 13593  005740                     _UART1_rx_vect_isr:
 13594                           	opt callstack 19
 13595                           
 13596                           ;incstack = 0
 13597  005740  EE13  F0D8         	lfsr	1,___inthi_sp
 13598                           
 13599                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 13600  005744  5011               	movf	_UART1_RxInterruptHandler,w,c
 13601  005746  1012               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13602  005748  1013               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13603  00574A  B4D8               	btfsc	status,2,c
 13604  00574C  0011               	retfie		f
 13605                           
 13606                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 13607  00574E  D801               	call	i2u372_48
 13608  005750  0011               	retfie		f
 13609  005752                     i2u372_48:
 13610  005752  0005               	push	
 13611  005754  6EFA               	movwf	pclath,c
 13612  005756  5011               	movf	_UART1_RxInterruptHandler,w,c
 13613  005758  6EFD               	movwf	tosl,c
 13614  00575A  5012               	movf	_UART1_RxInterruptHandler+1,w,c
 13615  00575C  6EFE               	movwf	tosh,c
 13616  00575E  5013               	movf	_UART1_RxInterruptHandler+2,w,c
 13617  005760  6EFF               	movwf	tosu,c
 13618  005762  50FA               	movf	pclath,w,c
 13619  005764  0012               	return		;indir
 13620  005766                     __end_of_UART1_rx_vect_isr:
 13621                           	opt callstack 0
 13622                           
 13623 ;; *************** function _UART1_Receive_ISR *****************
 13624 ;; Defined at:
 13625 ;;		line 227 in file "mcc_generated_files/uart1.c"
 13626 ;; Parameters:    Size  Location     Type
 13627 ;;		None
 13628 ;; Auto vars:     Size  Location     Type
 13629 ;;		None
 13630 ;; Return value:  Size  Location     Type
 13631 ;;                  1  [STACK] void 
 13632 ;; Registers used:
 13633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13634 ;; Tracked objects:
 13635 ;;		On entry : 0/0
 13636 ;;		On exit  : 0/0
 13637 ;;		Unchanged: 0/0
 13638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13643 ;;Total ram usage:        0 bytes
 13644 ;; Hardware stack levels used:    1
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_UART1_Initialize
 13649 ;;		_UART1_rx_vect_isr
 13650 ;; This function uses a reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text90
 13654  0058AA                     __ptext90:
 13655                           	opt callstack 0
 13656  0058AA                     _UART1_Receive_ISR:
 13657                           	opt callstack 19
 13658                           
 13659                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13660                           
 13661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13662                           ;incstack = 0
 13663  0058AA  0E00               	movlw	low _uart1RxBuffer
 13664  0058AC  2436               	addwf	_uart1RxHead,w,c	;volatile
 13665  0058AE  6ED9               	movwf	fsr2l,c
 13666  0058B0  6ADA               	clrf	fsr2h,c
 13667  0058B2  0E01               	movlw	high _uart1RxBuffer
 13668  0058B4  22DA               	addwfc	fsr2h,f,c
 13669  0058B6  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13670  0058BC  2A36               	incf	_uart1RxHead,f,c	;volatile
 13671                           
 13672                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13673  0058BE  0E3F               	movlw	63
 13674  0058C0  6436               	cpfsgt	_uart1RxHead,c
 13675  0058C2  D001               	goto	l5622
 13676                           
 13677                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 13678  0058C4  6A36               	clrf	_uart1RxHead,c	;volatile
 13679  0058C6                     l5622:
 13680                           
 13681                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 13682  0058C6  2A34               	incf	_uart1RxCount,f,c	;volatile
 13683                           
 13684                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13685  0058C8  0012               	return		;funcret
 13686  0058CA                     __end_of_UART1_Receive_ISR:
 13687                           	opt callstack 0
 13688                           
 13689 ;; *************** function _UART2_tx_vect_isr *****************
 13690 ;; Defined at:
 13691 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13692 ;; Parameters:    Size  Location     Type
 13693 ;;		None
 13694 ;; Auto vars:     Size  Location     Type
 13695 ;;		None
 13696 ;; Return value:  Size  Location     Type
 13697 ;;                  1    wreg      void 
 13698 ;; Registers used:
 13699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13700 ;; Tracked objects:
 13701 ;;		On entry : 0/0
 13702 ;;		On exit  : 0/0
 13703 ;;		Unchanged: 0/0
 13704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13709 ;;Total ram usage:        0 bytes
 13710 ;; Hardware stack levels used:    1
 13711 ;; Hardware stack levels required when called:    1
 13712 ;; This function calls:
 13713 ;;		Absolute function
 13714 ;;		_UART2_Transmit_ISR
 13715 ;; This function is called by:
 13716 ;;		Interrupt level 2
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           	psect	text91
 13721  005768                     __ptext91:
 13722                           	opt callstack 0
 13723  005768                     _UART2_tx_vect_isr:
 13724                           	opt callstack 19
 13725                           
 13726                           ;incstack = 0
 13727  005768  EE13  F0D8         	lfsr	1,___inthi_sp
 13728                           
 13729                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13730  00576C  5014               	movf	_UART2_TxInterruptHandler,w,c
 13731  00576E  1015               	iorwf	_UART2_TxInterruptHandler+1,w,c
 13732  005770  1016               	iorwf	_UART2_TxInterruptHandler+2,w,c
 13733  005772  B4D8               	btfsc	status,2,c
 13734  005774  0011               	retfie		f
 13735                           
 13736                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13737  005776  D801               	call	i2u374_48
 13738  005778  0011               	retfie		f
 13739  00577A                     i2u374_48:
 13740  00577A  0005               	push	
 13741  00577C  6EFA               	movwf	pclath,c
 13742  00577E  5014               	movf	_UART2_TxInterruptHandler,w,c
 13743  005780  6EFD               	movwf	tosl,c
 13744  005782  5015               	movf	_UART2_TxInterruptHandler+1,w,c
 13745  005784  6EFE               	movwf	tosh,c
 13746  005786  5016               	movf	_UART2_TxInterruptHandler+2,w,c
 13747  005788  6EFF               	movwf	tosu,c
 13748  00578A  50FA               	movf	pclath,w,c
 13749  00578C  0012               	return		;indir
 13750  00578E                     __end_of_UART2_tx_vect_isr:
 13751                           	opt callstack 0
 13752                           
 13753 ;; *************** function _UART2_Transmit_ISR *****************
 13754 ;; Defined at:
 13755 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;		None
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;		None
 13760 ;; Return value:  Size  Location     Type
 13761 ;;                  1  [STACK] void 
 13762 ;; Registers used:
 13763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13764 ;; Tracked objects:
 13765 ;;		On entry : 0/0
 13766 ;;		On exit  : 3B/39
 13767 ;;		Unchanged: 0/0
 13768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13773 ;;Total ram usage:        0 bytes
 13774 ;; Hardware stack levels used:    1
 13775 ;; This function calls:
 13776 ;;		Nothing
 13777 ;; This function is called by:
 13778 ;;		_UART2_Initialize
 13779 ;;		_UART2_tx_vect_isr
 13780 ;; This function uses a reentrant model
 13781 ;;
 13782                           
 13783                           	psect	text92
 13784  00543C                     __ptext92:
 13785                           	opt callstack 0
 13786  00543C                     _UART2_Transmit_ISR:
 13787                           	opt callstack 19
 13788                           
 13789                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13790                           
 13791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13792                           ;incstack = 0
 13793  00543C  0E40               	movlw	64
 13794  00543E  6031               	cpfslt	_uart2TxBufferRemaining,c
 13795  005440  D010               	goto	l713
 13796                           
 13797                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 13798  005442  0E40               	movlw	low _uart2TxBuffer
 13799  005444  2432               	addwf	_uart2TxTail,w,c	;volatile
 13800  005446  6ED9               	movwf	fsr2l,c
 13801  005448  6ADA               	clrf	fsr2h,c
 13802  00544A  0E02               	movlw	high _uart2TxBuffer
 13803  00544C  22DA               	addwfc	fsr2h,f,c
 13804  00544E  50DF               	movf	indf2,w,c
 13805  005450  013D               	movlb	61	; () banked
 13806  005452  6FD2               	movwf	210,b	;volatile
 13807                           
 13808                           ; BSR set to: 61
 13809  005454  2A32               	incf	_uart2TxTail,f,c	;volatile
 13810                           
 13811                           ; BSR set to: 61
 13812                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 13813  005456  0E3F               	movlw	63
 13814  005458  6432               	cpfsgt	_uart2TxTail,c
 13815  00545A  D001               	goto	l5634
 13816                           
 13817                           ; BSR set to: 61
 13818                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 13819  00545C  6A32               	clrf	_uart2TxTail,c	;volatile
 13820  00545E                     l5634:
 13821                           
 13822                           ; BSR set to: 61
 13823                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 13824  00545E  2A31               	incf	_uart2TxBufferRemaining,f,c	;volatile
 13825                           
 13826                           ;mcc_generated_files/uart2.c: 224:     }
 13827  005460  0012               	return	
 13828  005462                     l713:
 13829                           
 13830                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 13831  005462  0139               	movlb	57	; () banked
 13832  005464  9796               	bcf	150,3,b	;volatile
 13833                           
 13834                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13835  005466  0012               	return		;funcret
 13836  005468                     __end_of_UART2_Transmit_ISR:
 13837                           	opt callstack 0
 13838                           
 13839 ;; *************** function _UART2_rx_vect_isr *****************
 13840 ;; Defined at:
 13841 ;;		line 203 in file "mcc_generated_files/uart2.c"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;		None
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;		None
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      void 
 13848 ;; Registers used:
 13849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13850 ;; Tracked objects:
 13851 ;;		On entry : 0/0
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; Hardware stack levels required when called:    1
 13862 ;; This function calls:
 13863 ;;		Absolute function
 13864 ;;		_UART2_Receive_ISR
 13865 ;; This function is called by:
 13866 ;;		Interrupt level 2
 13867 ;; This function uses a non-reentrant model
 13868 ;;
 13869                           
 13870                           	psect	text93
 13871  005790                     __ptext93:
 13872                           	opt callstack 0
 13873  005790                     _UART2_rx_vect_isr:
 13874                           	opt callstack 19
 13875                           
 13876                           ;incstack = 0
 13877  005790  EE13  F0D8         	lfsr	1,___inthi_sp
 13878                           
 13879                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 13880  005794  5017               	movf	_UART2_RxInterruptHandler,w,c
 13881  005796  1018               	iorwf	_UART2_RxInterruptHandler+1,w,c
 13882  005798  1019               	iorwf	_UART2_RxInterruptHandler+2,w,c
 13883  00579A  B4D8               	btfsc	status,2,c
 13884  00579C  0011               	retfie		f
 13885                           
 13886                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 13887  00579E  D801               	call	i2u376_48
 13888  0057A0  0011               	retfie		f
 13889  0057A2                     i2u376_48:
 13890  0057A2  0005               	push	
 13891  0057A4  6EFA               	movwf	pclath,c
 13892  0057A6  5017               	movf	_UART2_RxInterruptHandler,w,c
 13893  0057A8  6EFD               	movwf	tosl,c
 13894  0057AA  5018               	movf	_UART2_RxInterruptHandler+1,w,c
 13895  0057AC  6EFE               	movwf	tosh,c
 13896  0057AE  5019               	movf	_UART2_RxInterruptHandler+2,w,c
 13897  0057B0  6EFF               	movwf	tosu,c
 13898  0057B2  50FA               	movf	pclath,w,c
 13899  0057B4  0012               	return		;indir
 13900  0057B6                     __end_of_UART2_rx_vect_isr:
 13901                           	opt callstack 0
 13902                           
 13903 ;; *************** function _UART2_Receive_ISR *****************
 13904 ;; Defined at:
 13905 ;;		line 233 in file "mcc_generated_files/uart2.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;		None
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;		None
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  1  [STACK] void 
 13912 ;; Registers used:
 13913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13923 ;;Total ram usage:        0 bytes
 13924 ;; Hardware stack levels used:    1
 13925 ;; This function calls:
 13926 ;;		Nothing
 13927 ;; This function is called by:
 13928 ;;		_UART2_Initialize
 13929 ;;		_UART2_rx_vect_isr
 13930 ;; This function uses a reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text94
 13934  0058CA                     __ptext94:
 13935                           	opt callstack 0
 13936  0058CA                     _UART2_Receive_ISR:
 13937                           	opt callstack 19
 13938                           
 13939                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 13940                           
 13941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13942                           ;incstack = 0
 13943  0058CA  0E00               	movlw	low _uart2RxBuffer
 13944  0058CC  2430               	addwf	_uart2RxHead,w,c	;volatile
 13945  0058CE  6ED9               	movwf	fsr2l,c
 13946  0058D0  6ADA               	clrf	fsr2h,c
 13947  0058D2  0E02               	movlw	high _uart2RxBuffer
 13948  0058D4  22DA               	addwfc	fsr2h,f,c
 13949  0058D6  006F F743 FFDF     	movff	15824,indf2	;volatile
 13950  0058DC  2A30               	incf	_uart2RxHead,f,c	;volatile
 13951                           
 13952                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 13953  0058DE  0E3F               	movlw	63
 13954  0058E0  6430               	cpfsgt	_uart2RxHead,c
 13955  0058E2  D001               	goto	l5644
 13956                           
 13957                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 13958  0058E4  6A30               	clrf	_uart2RxHead,c	;volatile
 13959  0058E6                     l5644:
 13960                           
 13961                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 13962  0058E6  2A2E               	incf	_uart2RxCount,f,c	;volatile
 13963                           
 13964                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13965  0058E8  0012               	return		;funcret
 13966  0058EA                     __end_of_UART2_Receive_ISR:
 13967                           	opt callstack 0
 13968                           
 13969 ;; *************** function _TMR6_ISR *****************
 13970 ;; Defined at:
 13971 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 13972 ;; Parameters:    Size  Location     Type
 13973 ;;		None
 13974 ;; Auto vars:     Size  Location     Type
 13975 ;;		None
 13976 ;; Return value:  Size  Location     Type
 13977 ;;                  1    wreg      void 
 13978 ;; Registers used:
 13979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+11, tosl, prodl, prodh
 13980 ;; Tracked objects:
 13981 ;;		On entry : 0/0
 13982 ;;		On exit  : 0/0
 13983 ;;		Unchanged: 0/0
 13984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13989 ;;Total ram usage:        2 bytes
 13990 ;; Hardware stack levels used:    1
 13991 ;; Hardware stack levels required when called:    2
 13992 ;; This function calls:
 13993 ;;		_TMR6_CallBack
 13994 ;; This function is called by:
 13995 ;;		Interrupt level 2
 13996 ;; This function uses a non-reentrant model
 13997 ;;
 13998                           
 13999                           	psect	text95
 14000  0057B8                     __ptext95:
 14001                           	opt callstack 0
 14002  0057B8                     _TMR6_ISR:
 14003                           	opt callstack 18
 14004                           
 14005                           ;incstack = 0
 14006  0057B8  0060  F0E8  F05A   	movff	btemp,??_TMR6_ISR
 14007  0057BE  0060  F114  F05B   	movff	btemp+11,??_TMR6_ISR+1
 14008  0057C4  EE13  F0D8         	lfsr	1,___inthi_sp
 14009                           
 14010                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 14011  0057C8  0139               	movlb	57	; () banked
 14012  0057CA  91A9               	bcf	169,0,b	;volatile
 14013                           
 14014                           ; BSR set to: 57
 14015                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 14016  0057CC  EC44  F02C         	call	_TMR6_CallBack	;wreg free
 14017  0057D0  0060  F16C  F045   	movff	??_TMR6_ISR+1,btemp+11
 14018  0057D6  0060  F168  F03A   	movff	??_TMR6_ISR,btemp
 14019  0057DC  0011               	retfie		f
 14020  0057DE                     __end_of_TMR6_ISR:
 14021                           	opt callstack 0
 14022                           
 14023 ;; *************** function _TMR6_CallBack *****************
 14024 ;; Defined at:
 14025 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;		None
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;		None
 14030 ;; Return value:  Size  Location     Type
 14031 ;;                  1  [STACK] void 
 14032 ;; Registers used:
 14033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+11, tosl, prodl, prodh
 14034 ;; Tracked objects:
 14035 ;;		On entry : 3F/39
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14043 ;;Total ram usage:        0 bytes
 14044 ;; Hardware stack levels used:    1
 14045 ;; Hardware stack levels required when called:    1
 14046 ;; This function calls:
 14047 ;;		Absolute function
 14048 ;;		_TMR6_DefaultInterruptHandler
 14049 ;; This function is called by:
 14050 ;;		_TMR6_ISR
 14051 ;; This function uses a reentrant model
 14052 ;;
 14053                           
 14054                           	psect	text96
 14055  005888                     __ptext96:
 14056                           	opt callstack 0
 14057  005888                     _TMR6_CallBack:
 14058                           	opt callstack 18
 14059                           
 14060                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 14061                           
 14062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14063                           ;incstack = 0
 14064  005888  5008               	movf	_TMR6_InterruptHandler,w,c
 14065  00588A  1009               	iorwf	_TMR6_InterruptHandler+1,w,c
 14066  00588C  100A               	iorwf	_TMR6_InterruptHandler+2,w,c
 14067  00588E  B4D8               	btfsc	status,2,c
 14068  005890  0012               	return	
 14069                           
 14070                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 14071  005892  D801               	call	u345_48
 14072  005894  0012               	return	
 14073  005896                     u345_48:
 14074  005896  0005               	push	
 14075  005898  6EFA               	movwf	pclath,c
 14076  00589A  5008               	movf	_TMR6_InterruptHandler,w,c
 14077  00589C  6EFD               	movwf	tosl,c
 14078  00589E  5009               	movf	_TMR6_InterruptHandler+1,w,c
 14079  0058A0  6EFE               	movwf	tosh,c
 14080  0058A2  500A               	movf	_TMR6_InterruptHandler+2,w,c
 14081  0058A4  6EFF               	movwf	tosu,c
 14082  0058A6  50FA               	movf	pclath,w,c
 14083  0058A8  0012               	return		;indir
 14084  0058AA                     __end_of_TMR6_CallBack:
 14085                           	opt callstack 0
 14086                           
 14087 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14088 ;; Defined at:
 14089 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;		None
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;  i               1  [STACK] unsigned char 
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1  [STACK] void 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/39
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;Total ram usage:        0 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; This function calls:
 14110 ;;		Nothing
 14111 ;; This function is called by:
 14112 ;;		_TMR6_Initialize
 14113 ;;		_TMR6_CallBack
 14114 ;; This function uses a reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text97
 14118  00501E                     __ptext97:
 14119                           	opt callstack 0
 14120  00501E                     _TMR6_DefaultInterruptHandler:
 14121                           	opt callstack 0
 14122                           
 14123                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14124  00501E  52E6               	movf	postinc1,f,c
 14125                           
 14126                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 201:  LATEbits
      +                          .LATE0 = (uint8_t) ~LATEbits.LATE0;
 14127                           
 14128                           ;incstack = 0
 14129  005020  A0BE               	btfss	16318,0,c	;volatile
 14130  005022  D002               	goto	u328_40
 14131  005024  0E01               	movlw	1
 14132  005026  D001               	goto	u328_46
 14133  005028                     u328_40:
 14134  005028  0E00               	movlw	0
 14135  00502A                     u328_46:
 14136  00502A  0AFF               	xorlw	255
 14137  00502C  6E45               	movwf	btemp+11,c
 14138  00502E  50BE               	movf	16318,w,c	;volatile
 14139  005030  1845               	xorwf	btemp+11,w,c
 14140  005032  0BFE               	andlw	-2
 14141  005034  1845               	xorwf	btemp+11,w,c
 14142  005036  6EBE               	movwf	16318,c	;volatile
 14143                           
 14144                           ;mcc_generated_files/tmr6.c: 204:  for (i = 0; i < TMR_COUNT; i++) {
 14145                           ;stkvar	_i @ sp[(-1)+0]
 14146  005038  0EFF               	movlw	-1
 14147  00503A  6AE3               	clrf	plusw1,c
 14148  00503C                     l5438:
 14149                           
 14150                           ;mcc_generated_files/tmr6.c: 205:   if (tickCount[i] != 0) {
 14151                           ;stkvar	_i @ sp[(-1)+0]
 14152  00503C  0EFF               	movlw	-1
 14153  00503E  50E3               	movf	plusw1,w,c
 14154  005040  0D02               	mullw	2
 14155  005042  50F3               	movf	prodl,w,c
 14156  005044  0F79               	addlw	low _tickCount
 14157  005046  6ED9               	movwf	fsr2l,c
 14158  005048  6ADA               	clrf	fsr2h,c
 14159  00504A  50DE               	movf	postinc2,w,c
 14160  00504C  10DE               	iorwf	postinc2,w,c
 14161  00504E  B4D8               	btfsc	status,2,c
 14162  005050  D00A               	goto	l5442
 14163                           
 14164                           ;mcc_generated_files/tmr6.c: 206:    tickCount[i]--;
 14165                           ;stkvar	_i @ sp[(-1)+0]
 14166  005052  0EFF               	movlw	-1
 14167  005054  50E3               	movf	plusw1,w,c
 14168  005056  0D02               	mullw	2
 14169  005058  50F3               	movf	prodl,w,c
 14170  00505A  0F79               	addlw	low _tickCount
 14171  00505C  6ED9               	movwf	fsr2l,c
 14172  00505E  6ADA               	clrf	fsr2h,c
 14173  005060  06DE               	decf	postinc2,f,c
 14174  005062  0E00               	movlw	0
 14175  005064  5ADD               	subwfb	postdec2,f,c
 14176  005066                     l5442:
 14177                           
 14178                           ;mcc_generated_files/tmr6.c: 208:  }
 14179                           ;stkvar	_i @ sp[(-1)+0]
 14180  005066  0EFF               	movlw	-1
 14181  005068  2AE3               	incf	plusw1,f,c
 14182                           
 14183                           ;stkvar	_i @ sp[(-1)+0]
 14184  00506A  0EFF               	movlw	-1
 14185  00506C  006F FF8C  F03A    	movff	plusw1,btemp
 14186  005072  0E05               	movlw	5
 14187  005074  643A               	cpfsgt	btemp,c
 14188  005076  D7E2               	goto	l5438
 14189                           
 14190                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14191  005078  52E5               	movf	postdec1,f,c
 14192  00507A  0012               	return		;funcret
 14193  00507C                     __end_of_TMR6_DefaultInterruptHandler:
 14194                           	opt callstack 0
 14195                           
 14196 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14197 ;; Defined at:
 14198 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;		None
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1    wreg      void 
 14205 ;; Registers used:
 14206 ;;		None
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 3F/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14216 ;;Total ram usage:        0 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; This function calls:
 14219 ;;		Nothing
 14220 ;; This function is called by:
 14221 ;;		Interrupt level 2
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           	psect	text98
 14226  0059E8                     __ptext98:
 14227                           	opt callstack 0
 14228  0059E8                     _DMA1_DMASCNT_ISR:
 14229                           	opt callstack 20
 14230                           
 14231                           ;incstack = 0
 14232  0059E8  EE13  F0D8         	lfsr	1,___inthi_sp
 14233                           
 14234                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14235  0059EC  0139               	movlb	57	; () banked
 14236  0059EE  91A2               	bcf	162,0,b	;volatile
 14237                           
 14238                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14239  0059F0  0100               	movlb	0	; () banked
 14240  0059F2  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 14241                           
 14242                           ; BSR set to: 0
 14243  0059F4  0011               	retfie		f
 14244  0059F6                     __end_of_DMA1_DMASCNT_ISR:
 14245                           	opt callstack 0
 14246                           
 14247 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14248 ;; Defined at:
 14249 ;;		line 133 in file "mcc_generated_files/dma1.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;		None
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;		None
 14254 ;; Return value:  Size  Location     Type
 14255 ;;                  1    wreg      void 
 14256 ;; Registers used:
 14257 ;;		None
 14258 ;; Tracked objects:
 14259 ;;		On entry : 0/0
 14260 ;;		On exit  : 3F/39
 14261 ;;		Unchanged: 0/0
 14262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14267 ;;Total ram usage:        0 bytes
 14268 ;; Hardware stack levels used:    1
 14269 ;; This function calls:
 14270 ;;		Nothing
 14271 ;; This function is called by:
 14272 ;;		Interrupt level 2
 14273 ;; This function uses a non-reentrant model
 14274 ;;
 14275                           
 14276                           	psect	text99
 14277  005A10                     __ptext99:
 14278                           	opt callstack 0
 14279  005A10                     _DMA1_DMADCNT_ISR:
 14280                           	opt callstack 20
 14281                           
 14282                           ; BSR set to: 0
 14283                           ;incstack = 0
 14284  005A10  EE13  F0D8         	lfsr	1,___inthi_sp
 14285                           
 14286                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 14287  005A14  0139               	movlb	57	; () banked
 14288  005A16  93A2               	bcf	162,1,b	;volatile
 14289                           
 14290                           ; BSR set to: 57
 14291  005A18  0011               	retfie		f
 14292  005A1A                     __end_of_DMA1_DMADCNT_ISR:
 14293                           	opt callstack 0
 14294                           
 14295 ;; *************** function _DMA1_DMAA_ISR *****************
 14296 ;; Defined at:
 14297 ;;		line 143 in file "mcc_generated_files/dma1.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;		None
 14300 ;; Auto vars:     Size  Location     Type
 14301 ;;		None
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  1    wreg      void 
 14304 ;; Registers used:
 14305 ;;		None
 14306 ;; Tracked objects:
 14307 ;;		On entry : 0/0
 14308 ;;		On exit  : 3F/39
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14315 ;;Total ram usage:        0 bytes
 14316 ;; Hardware stack levels used:    1
 14317 ;; This function calls:
 14318 ;;		Nothing
 14319 ;; This function is called by:
 14320 ;;		Interrupt level 2
 14321 ;; This function uses a non-reentrant model
 14322 ;;
 14323                           
 14324                           	psect	text100
 14325  005A1C                     __ptext100:
 14326                           	opt callstack 0
 14327  005A1C                     _DMA1_DMAA_ISR:
 14328                           	opt callstack 20
 14329                           
 14330                           ; BSR set to: 57
 14331                           ;incstack = 0
 14332  005A1C  EE13  F0D8         	lfsr	1,___inthi_sp
 14333                           
 14334                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14335  005A20  0139               	movlb	57	; () banked
 14336  005A22  97A2               	bcf	162,3,b	;volatile
 14337                           
 14338                           ; BSR set to: 57
 14339  005A24  0011               	retfie		f
 14340  005A26                     __end_of_DMA1_DMAA_ISR:
 14341                           	opt callstack 0
 14342                           
 14343 ;; *************** function _DMA1_DMAOR_ISR *****************
 14344 ;; Defined at:
 14345 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;		None
 14348 ;; Auto vars:     Size  Location     Type
 14349 ;;		None
 14350 ;; Return value:  Size  Location     Type
 14351 ;;                  1    wreg      void 
 14352 ;; Registers used:
 14353 ;;		None
 14354 ;; Tracked objects:
 14355 ;;		On entry : 0/0
 14356 ;;		On exit  : 3F/39
 14357 ;;		Unchanged: 0/0
 14358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14363 ;;Total ram usage:        0 bytes
 14364 ;; Hardware stack levels used:    1
 14365 ;; This function calls:
 14366 ;;		Nothing
 14367 ;; This function is called by:
 14368 ;;		Interrupt level 2
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           	psect	text101
 14373  0059F8                     __ptext101:
 14374                           	opt callstack 0
 14375  0059F8                     _DMA1_DMAOR_ISR:
 14376                           	opt callstack 20
 14377                           
 14378                           ; BSR set to: 57
 14379                           ;incstack = 0
 14380  0059F8  EE13  F0D8         	lfsr	1,___inthi_sp
 14381                           
 14382                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14383  0059FC  0139               	movlb	57	; () banked
 14384  0059FE  95A2               	bcf	162,2,b	;volatile
 14385                           
 14386                           ;mcc_generated_files/dma1.c: 159:  LATEbits.LATE1 = 0;
 14387  005A00  92BE               	bcf	16318,1,c	;volatile
 14388                           
 14389                           ; BSR set to: 57
 14390  005A02  0011               	retfie		f
 14391  005A04                     __end_of_DMA1_DMAOR_ISR:
 14392                           	opt callstack 0
 14393                           
 14394                           ;
 14395                           ; Interrupt Vector Table @ 0x8
 14396                           ;
 14397                           
 14398                           	psect	ivt0x8
 14399  000008                     __pivt0x8:
 14400                           	opt callstack 0
 14401  000008                     ivt0x8_base:
 14402                           	opt callstack 0
 14403                           
 14404                           ; Vector 0 : SWINT
 14405  000008  1693               	dw	_Default_ISR shr (0+2)
 14406                           
 14407                           ; Vector 1 : HLVD
 14408  00000A  1693               	dw	_Default_ISR shr (0+2)
 14409                           
 14410                           ; Vector 2 : OSF
 14411  00000C  1693               	dw	_Default_ISR shr (0+2)
 14412                           
 14413                           ; Vector 3 : CSW
 14414  00000E  1693               	dw	_Default_ISR shr (0+2)
 14415                           
 14416                           ; Vector 4 : NVM
 14417  000010  1693               	dw	_Default_ISR shr (0+2)
 14418                           
 14419                           ; Vector 5 : SCAN
 14420  000012  1693               	dw	_Default_ISR shr (0+2)
 14421                           
 14422                           ; Vector 6 : CRC
 14423  000014  1693               	dw	_Default_ISR shr (0+2)
 14424                           
 14425                           ; Vector 7 : IOC
 14426  000016  1693               	dw	_Default_ISR shr (0+2)
 14427                           
 14428                           ; Vector 8 : INT0
 14429  000018  166E               	dw	_INT0_ISR shr (0+2)
 14430                           
 14431                           ; Vector 9 : ZCD
 14432  00001A  1693               	dw	_Default_ISR shr (0+2)
 14433                           
 14434                           ; Vector 10 : AD
 14435  00001C  152F               	dw	_ADCC_ISR shr (0+2)
 14436                           
 14437                           ; Vector 11 : ADT
 14438  00001E  1693               	dw	_Default_ISR shr (0+2)
 14439                           
 14440                           ; Vector 12 : CMP1
 14441  000020  1693               	dw	_Default_ISR shr (0+2)
 14442                           
 14443                           ; Vector 13 : SMT1
 14444  000022  1693               	dw	_Default_ISR shr (0+2)
 14445                           
 14446                           ; Vector 14 : SMT1PRA
 14447  000024  1693               	dw	_Default_ISR shr (0+2)
 14448                           
 14449                           ; Vector 15 : SMT1PRW
 14450  000026  1693               	dw	_Default_ISR shr (0+2)
 14451                           
 14452                           ; Vector 16 : DMA1SCNT
 14453  000028  167A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14454                           
 14455                           ; Vector 17 : DMA1DCNT
 14456  00002A  1684               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14457                           
 14458                           ; Vector 18 : DMA1OR
 14459  00002C  167E               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14460                           
 14461                           ; Vector 19 : DMA1A
 14462  00002E  1687               	dw	_DMA1_DMAA_ISR shr (0+2)
 14463                           
 14464                           ; Vector 20 : SPI1RX
 14465  000030  1693               	dw	_Default_ISR shr (0+2)
 14466                           
 14467                           ; Vector 21 : SPI1TX
 14468  000032  1693               	dw	_Default_ISR shr (0+2)
 14469                           
 14470                           ; Vector 22 : SPI1
 14471  000034  1693               	dw	_Default_ISR shr (0+2)
 14472                           
 14473                           ; Vector 23 : I2C1RX
 14474  000036  1693               	dw	_Default_ISR shr (0+2)
 14475                           
 14476                           ; Vector 24 : I2C1TX
 14477  000038  1693               	dw	_Default_ISR shr (0+2)
 14478                           
 14479                           ; Vector 25 : I2C1
 14480  00003A  1693               	dw	_Default_ISR shr (0+2)
 14481                           
 14482                           ; Vector 26 : I2C1E
 14483  00003C  1693               	dw	_Default_ISR shr (0+2)
 14484                           
 14485                           ; Vector 27 : U1RX
 14486  00003E  15D0               	dw	_UART1_rx_vect_isr shr (0+2)
 14487                           
 14488                           ; Vector 28 : U1TX
 14489  000040  15C6               	dw	_UART1_tx_vect_isr shr (0+2)
 14490                           
 14491                           ; Vector 29 : U1E
 14492  000042  1693               	dw	_Default_ISR shr (0+2)
 14493                           
 14494                           ; Vector 30 : U1
 14495  000044  1693               	dw	_Default_ISR shr (0+2)
 14496                           
 14497                           ; Vector 31 : TMR0
 14498  000046  1693               	dw	_Default_ISR shr (0+2)
 14499                           
 14500                           ; Vector 32 : TMR1
 14501  000048  1693               	dw	_Default_ISR shr (0+2)
 14502                           
 14503                           ; Vector 33 : TMR1G
 14504  00004A  1693               	dw	_Default_ISR shr (0+2)
 14505                           
 14506                           ; Vector 34 : TMR2
 14507  00004C  1693               	dw	_Default_ISR shr (0+2)
 14508                           
 14509                           ; Vector 35 : CCP1
 14510  00004E  1693               	dw	_Default_ISR shr (0+2)
 14511                           
 14512                           ; Vector 36 : Undefined
 14513  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14514                           
 14515                           ; Vector 37 : NCO1
 14516  000052  1693               	dw	_Default_ISR shr (0+2)
 14517                           
 14518                           ; Vector 38 : CWG1
 14519  000054  1693               	dw	_Default_ISR shr (0+2)
 14520                           
 14521                           ; Vector 39 : CLC1
 14522  000056  1693               	dw	_Default_ISR shr (0+2)
 14523                           
 14524                           ; Vector 40 : INT1
 14525  000058  1672               	dw	_INT1_ISR shr (0+2)
 14526                           
 14527                           ; Vector 41 : CMP2
 14528  00005A  1693               	dw	_Default_ISR shr (0+2)
 14529                           
 14530                           ; Vector 42 : DMA2SCNT
 14531  00005C  1693               	dw	_Default_ISR shr (0+2)
 14532                           
 14533                           ; Vector 43 : DMA2DCNT
 14534  00005E  1693               	dw	_Default_ISR shr (0+2)
 14535                           
 14536                           ; Vector 44 : DMA2OR
 14537  000060  1693               	dw	_Default_ISR shr (0+2)
 14538                           
 14539                           ; Vector 45 : DMA2A
 14540  000062  1693               	dw	_Default_ISR shr (0+2)
 14541                           
 14542                           ; Vector 46 : I2C2RX
 14543  000064  1693               	dw	_Default_ISR shr (0+2)
 14544                           
 14545                           ; Vector 47 : I2C2TX
 14546  000066  1693               	dw	_Default_ISR shr (0+2)
 14547                           
 14548                           ; Vector 48 : I2C2
 14549  000068  1693               	dw	_Default_ISR shr (0+2)
 14550                           
 14551                           ; Vector 49 : I2C2E
 14552  00006A  1693               	dw	_Default_ISR shr (0+2)
 14553                           
 14554                           ; Vector 50 : U2RX
 14555  00006C  15E4               	dw	_UART2_rx_vect_isr shr (0+2)
 14556                           
 14557                           ; Vector 51 : U2TX
 14558  00006E  15DA               	dw	_UART2_tx_vect_isr shr (0+2)
 14559                           
 14560                           ; Vector 52 : U2E
 14561  000070  1693               	dw	_Default_ISR shr (0+2)
 14562                           
 14563                           ; Vector 53 : U2
 14564  000072  1693               	dw	_Default_ISR shr (0+2)
 14565                           
 14566                           ; Vector 54 : TMR3
 14567  000074  1693               	dw	_Default_ISR shr (0+2)
 14568                           
 14569                           ; Vector 55 : TMR3G
 14570  000076  1693               	dw	_Default_ISR shr (0+2)
 14571                           
 14572                           ; Vector 56 : TMR4
 14573  000078  1693               	dw	_Default_ISR shr (0+2)
 14574                           
 14575                           ; Vector 57 : CCP2
 14576  00007A  1693               	dw	_Default_ISR shr (0+2)
 14577                           
 14578                           ; Vector 58 : Undefined
 14579  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 14580                           
 14581                           ; Vector 59 : CWG2
 14582  00007E  1693               	dw	_Default_ISR shr (0+2)
 14583                           
 14584                           ; Vector 60 : CLC2
 14585  000080  1693               	dw	_Default_ISR shr (0+2)
 14586                           
 14587                           ; Vector 61 : INT2
 14588  000082  1676               	dw	_INT2_ISR shr (0+2)
 14589                           
 14590                           ; Vector 62 : Undefined
 14591  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 14592                           
 14593                           ; Vector 63 : Undefined
 14594  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 14595                           
 14596                           ; Vector 64 : Undefined
 14597  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 14598                           
 14599                           ; Vector 65 : Undefined
 14600  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 14601                           
 14602                           ; Vector 66 : Undefined
 14603  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 14604                           
 14605                           ; Vector 67 : Undefined
 14606  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 14607                           
 14608                           ; Vector 68 : Undefined
 14609  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 14610                           
 14611                           ; Vector 69 : Undefined
 14612  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 14613                           
 14614                           ; Vector 70 : TMR5
 14615  000094  1693               	dw	_Default_ISR shr (0+2)
 14616                           
 14617                           ; Vector 71 : TMR5G
 14618  000096  1693               	dw	_Default_ISR shr (0+2)
 14619                           
 14620                           ; Vector 72 : TMR6
 14621  000098  15EE               	dw	_TMR6_ISR shr (0+2)
 14622                           
 14623                           ; Vector 73 : CCP3
 14624  00009A  1693               	dw	_Default_ISR shr (0+2)
 14625                           
 14626                           ; Vector 74 : CWG3
 14627  00009C  1693               	dw	_Default_ISR shr (0+2)
 14628                           
 14629                           ; Vector 75 : CLC3
 14630  00009E  1693               	dw	_Default_ISR shr (0+2)
 14631                           
 14632                           ; Vector 76 : Undefined
 14633  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 14634                           
 14635                           ; Vector 77 : Undefined
 14636  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 14637                           
 14638                           ; Vector 78 : Undefined
 14639  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 14640                           
 14641                           ; Vector 79 : Undefined
 14642  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 14643                           
 14644                           ; Vector 80 : CCP4
 14645  0000A8  1693               	dw	_Default_ISR shr (0+2)
 14646                           
 14647                           ; Vector 81 : CLC4
 14648  0000AA  1693               	dw	_Default_ISR shr (0+2)
 14649  0000AC                     ivt0x8_undefint:
 14650                           	opt callstack 0
 14651  0000AC  00FF               	reset	
 14652                           
 14653                           	psect	text102
 14654  000000                     __ptext102:
 14655                           	opt callstack 0
 14656                           
 14657                           	psect	rparam
 14658  0000                     
 14659                           	psect	temp
 14660  00003A                     btemp:
 14661                           	opt callstack 0
 14662  00003A                     	ds	32
 14663  0000                     wtemp0	set	btemp
 14664  0000                     wtemp1	set	btemp+2
 14665  0000                     wtemp2	set	btemp+4
 14666  0000                     wtemp3	set	btemp+6
 14667  0000                     wtemp4	set	btemp+8
 14668  0000                     wtemp5	set	btemp+10
 14669  0000                     wtemp8	set	btemp+1
 14670  0000                     ttemp0	set	btemp
 14671  0000                     ttemp1	set	btemp+3
 14672  0000                     ttemp2	set	btemp+6
 14673  0000                     ttemp3	set	btemp+9
 14674  0000                     ttemp5	set	btemp+1
 14675  0000                     ttemp6	set	btemp+4
 14676  0000                     ttemp7	set	btemp+8
 14677  0000                     ltemp0	set	btemp
 14678  0000                     ltemp1	set	btemp+4
 14679  0000                     ltemp2	set	btemp+8
 14680  0000                     lltemp0	set	btemp
 14681  0000                     lltemp1	set	btemp+8
 14682  0000                     lltemp2	set	btemp+16
 14683  0000                     lltemp3	set	btemp+24
 14684                           tosu	equ	0x3FFF
 14685                           tosh	equ	0x3FFE
 14686                           tosl	equ	0x3FFD
 14687                           stkptr	equ	0x3FFC
 14688                           pclatu	equ	0x3FFB
 14689                           pclath	equ	0x3FFA
 14690                           pcl	equ	0x3FF9
 14691                           tblptru	equ	0x3FF8
 14692                           tblptrh	equ	0x3FF7
 14693                           tblptrl	equ	0x3FF6
 14694                           tablat	equ	0x3FF5
 14695                           prodh	equ	0x3FF4
 14696                           prodl	equ	0x3FF3
 14697                           indf0	equ	0x3FEF
 14698                           postinc0	equ	0x3FEE
 14699                           postdec0	equ	0x3FED
 14700                           preinc0	equ	0x3FEC
 14701                           plusw0	equ	0x3FEB
 14702                           fsr0h	equ	0x3FEA
 14703                           fsr0l	equ	0x3FE9
 14704                           wreg	equ	0x3FE8
 14705                           indf1	equ	0x3FE7
 14706                           postinc1	equ	0x3FE6
 14707                           postdec1	equ	0x3FE5
 14708                           preinc1	equ	0x3FE4
 14709                           plusw1	equ	0x3FE3
 14710                           fsr1h	equ	0x3FE2
 14711                           fsr1l	equ	0x3FE1
 14712                           bsr	equ	0x3FE0
 14713                           indf2	equ	0x3FDF
 14714                           postinc2	equ	0x3FDE
 14715                           postdec2	equ	0x3FDD
 14716                           preinc2	equ	0x3FDC
 14717                           plusw2	equ	0x3FDB
 14718                           fsr2h	equ	0x3FDA
 14719                           fsr2l	equ	0x3FD9
 14720                           status	equ	0x3FD8


Data Sizes:
    Strings     103
    Constant    0
    Data        74
    BSS         596
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      59
    BANK0           160      0     156
    BANK1           256      0     195
    BANK2           256      0     195
    BANK3           256      0      67
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_5(CODE[23]), STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[12]), 
		 -> STR_1(CODE[61]), 

    s	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S3961_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    s	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), STR_4(CODE[6]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[61]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), STR_4(CODE[6]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cfmt	PTR unsigned char  size(1) Largest target is 61
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[23]), STR_4(CODE[6]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    F16554.header	PTR unsigned char  size(2) Largest target is 52
		 -> H12(BANK1[15]), H10(BANK1[52]), 

    byte_block	PTR unsigned char  size(2) Largest target is 52
		 -> H12(BANK1[15]), H10(BANK1[52]), 

    k	PTR unsigned char  size(2) Largest target is 52
		 -> H12(BANK1[15]), H10(BANK1[52]), 

    t_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    S3276response_type$header	PTR unsigned char  size(2) Largest target is 52
		 -> H12(BANK1[15]), H10(BANK1[52]), 

    block.header	PTR unsigned char  size(2) Largest target is 52
		 -> H12(BANK1[15]), H10(BANK1[52]), 

    r_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    byte_block	PTR unsigned char  size(2) Largest target is 52
		 -> H12(BANK1[15]), H10.block(BANK1[10]), H10(BANK1[52]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK2[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    S1989spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1989spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   27341
                  _SYSTEM_Initialize
                        _UART1_Write
                   _UART1_put_buffer
                             _WaitMs
                     _block_checksum
                 _eaDogM_WriteString
                       _init_display
                         _r_protocol
                          _secs_send
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1704
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      44
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35     9     26    9866
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1605
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteString                                   1     0      1   11027
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     4      3    9641
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    9542
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6    9255
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (9) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     9      1     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     221
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            2     2      0      90
                                              0 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_Write
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _block_checksum
   _eaDogM_WriteString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _ringBufS_flush
       _memset
     _start_lcd
     _strlen
     _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _secs_send
     _UART1_Write
     _UART1_is_tx_ready
     _UART1_put_buffer
     _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      43      11       26.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C3       9       76.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C3       7       76.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3B       1       93.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A0      58        0.0%
DATA                 0      0     2A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar  7 20:26:48 2019

                    _SPI1_Exchange8bit 58EA                                      _V 0085  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
                          __CFG_LVP$ON 000000                                    _H10 0180  
                                  _H12 01B4                                    l190 599C  
                                  l713 5462                                    l575 52A0  
                                  l568 52F2                                    l593 5436  
                                  l845 58F8                                    _GIE 01FE97  
                                  _abs 51BC                                    _pad 4500  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5822  
                         _run_checksum 54E6                     _UART1_Transmit_ISR 5410  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5844  
                         __CFG_ZCD$OFF 000000                                   l1206 5086  
                                 l1134 3542                                   l1143 35E6  
                                 l1129 3690                                   l1323 49DA  
                                 l1413 4028                                   l1327 4C2C  
                                 l1513 4554                                   l1441 43EA  
                                 l2325 3E0E                                   l2318 51FC  
                                 l1526 278E                                   l1553 3260  
                                 l1626 26A6                                   l2435 4CAE  
                                 l1387 396C                                   l2349 4014  
                                 l1574 2B4A                                   l5026 5096  
                                 l2397 44F6                                   l4422 4CDE  
                                 l4512 3768                                   l4424 4D00  
                                 l7000 4086                                   l4530 3880  
                                 l4506 3714                                   l5410 52CA  
                                 l7010 40C8                                   l4518 37AE  
                                 l4550 3C0E                                   l5078 57F8  
                                 l7030 4178                                   l4800 3EC8  
                                 l5520 54F2                                   l7016 411C  
                                 l7120 35B6                                   l5442 5066  
                                 l4802 3F04                                   l4490 4C9E  
                                 l7050 41D6                                   l7018 4128  
                                 l5612 5432                                   l4468 51EC  
                                 l6332 4D8A                                   l5540 4DE0  
                                 l5532 4DCE                                   l7044 41BC  
                                 l7036 418A                                   l7124 35BE  
                                 l7108 3560                                   l5438 503C  
                                 l5622 58C6                                   l4806 3F6A  
                                 l4566 3D42                                   l4558 3C96  
                                 l6318 4424                                   l6342 454C  
                                 l6414 2A9E                                   l6430 31E2  
                                 l6502 2C10                                   l5550 4DFA  
                                 l7046 41CA                                   l7054 41E4  
                                 l7150 365A                                   l7142 3610  
                                 l4816 4004                                   l6328 4D4C  
                                 l6352 45DC                                   l6344 455E  
                                 l6600 2226                                   l5552 4E14  
                                 l5528 4DC0                                   l7048 41CE  
                                 l7056 4226                                   l7128 35D6  
                                 l5634 545E                                   l4586 5116  
                                 l6338 4524                                   l6418 2ACE  
                                 l6450 32D2                                   l7154 365E  
                                 l7074 342C                                   l5644 58E6  
                                 l6348 459A                                   l6380 27C8  
                                 l6372 277E                                   l6460 3370  
                                 l5484 54A8                                   l7076 3432  
                                 l4790 3E7E                                   l4782 3E0A  
                                 l6454 3302                                   l6446 3296  
                                 l6542 2E52                                   l6518 2D06  
                                 l6526 2D80                                   l6702 2FE0  
                                 l6384 27E6                                   l6464 339C  
                                 l6560 20D8                                   l6394 29EC  
                                 l6482 2B3A                                   l6642 25E4  
                                 l6618 23CA                                   l6730 4AD4  
                                 l4796 3EAA                                   l6468 33D8  
                                 l6652 263C                                   l6628 2472  
                                 l6580 2102                                   l6572 20E4  
                                 l6564 20DC                                   l6556 20C2  
                                 l6716 30F8                                   l6708 304A  
                                 l4980 52C2                                   l4798 3EC2  
                                 l6494 2BB0                                   l6558 20C4  
                                 l6582 2152                                   l6488 2B74  
                                 l6648 2638                                   l6576 20E8  
                                 l6568 20E0                                   l6728 4A94  
                                 l4992 548A                                   l6672 470C  
                                 l6912 39D4                                   l6658 2658  
                                 l4978 52C0                                   l6754 4368  
                                 l6746 42BA                                   l6906 39B4  
                                 l6596 21EE                                   l6676 477E  
                                 l6940 3AC0                                   l6932 3A62  
                                 l6924 3A08                                   l6598 2214  
                                 l6870 48D8                                   l6766 43BC  
                                 l6758 4382                                   l6696 2F22  
                                 l6768 43E4                                   l6960 3B34  
                                 l6952 3B12                                   l6936 3A90  
                                 l6928 3A3E                                   l6962 3B42  
                                 l6970 3B5C                                   l6964 3B46  
                                 l6948 3B0E                                   l6972 3B9E  
                                 l6966 3B4E                                   l6886 3936  
                                 l6994 4066                                   STR_1 2001  
                                 STR_2 2032                                   STR_3 2055  
                                 STR_4 205F                                   STR_5 203E  
                                 STR_6 2065                                   u2100 53D6  
                                 u2020 53A4                                   u2110 523A  
                                 u2030 53A6                                   u2120 523C  
                                 u2210 3764                                   u2130 4C5C  
                                 u2140 4C5E                                   u2221 376E  
                                 _LATA 003FBA                                   u2230 37A8  
                                 u2310 3C08                                   _LATB 003FBB  
                                 _LATC 003FBC                                   u2160 5404  
                                 u2240 37DA                                   u2080 51D0  
                                 u4000 2A00                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2170 5406  
                                 u2410 50F2                                   u2330 3C5E  
                                 u2090 53D4                                   _LATF 003FBF  
                                 u4011 2A30                                   u3220 4F08  
                                 u2420 5112                                   u2260 38B8  
                                 u2340 3C90                                   u4020 2A46  
                                 u4021 2A44                                   u2190 370E  
                                 u2350 3CC2                                   u4030 2A5A  
                                 u2280 390A                                   u4040 2A5E  
                                 u2370 3D7A                                   u4130 32F8  
                                 u4210 2C08                                   u4060 2A74  
                                 u4220 2C5C                                   u3245 4F3C  
                                 u4301 2DCC                                   u3246 4F3E  
                                 u3238 4F0A                                   u2390 3DCC  
                                 u4310 2DE2                                   u4230 2C5E  
                                 u4311 2DE0                                   u4160 33FE  
                                 u4320 2DF6                                   u4400 226C  
                                 u4330 2DFA                                   u4250 2CBC  
                                 u4410 226E                                   u2900 3FAE  
                                 u4260 2CBE                                   u4180 2B20  
                                 u4420 2294                                   u2910 3FB0  
                                 u4280 2D7C                                   u4440 22E4  
                                 u4290 2D9C                                   u4610 48C8  
                                 _T6PR 003F93                                   u4540 316C  
                                 _PMD0 0039C0                                   u4285 2D5E  
                                 _PMD1 0039C1                                   u3830 4418  
                                 u4470 24C2                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u2880 3E7A  
                                 u3920 26E0                                   u4560 42B4  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u3850 4494                                   u3930 26E2  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u3950 2752                                   u3970 2764  
                                 u3990 27B4                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 5866                       __end_of_ADCC_ISR 54E6  
                        __CFG_FCMEN$ON 000000                                   _dbuf 00D5  
                                 _atoi 3DF0                                   _main 3418  
                                 _dtoa 26B0                                   _prec 0027  
                                 _nout 0023                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3176  
                                 btemp 003A                                   _xtoa 2B06  
    __size_of_INT2_SetInterruptHandler 0028                                   prodh 003FF4  
                                 prodl 003FF3                                   start 00AE  
            __end_of_SPI1_Exchange8bit 5908                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 5740                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005A  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 59C6  
                     __end_of_INT1_ISR 59D6                       __end_of_INT2_ISR 59E6  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 49E2  
        __end_of_OSCILLATOR_Initialize 59A2                                  PRLOCK 0039EF  
                      __end_of___aodiv 3932                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 3DF0                                  _ADPCH 003EF1  
                                _ADREF 003EFD                          __CFG_WDTE$OFF 000000  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005A  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 5A4C      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5718                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 57DE  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002D  
                                _flags 0029                                  _fputc 43F4  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 5246  
                                _fputs 4D3C                        __end_of_isdigit 5410  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005A  
                                _width 0025                                  _putch 595C  
                      __end_of_islower 53B0                        __end_of_isspace 5126  
             _INT1_SetInterruptHandler 569E                        __end_of_isupper 53E0  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 003A  
                                ltemp1 003E                                  ltemp2 0042  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                ttemp0 003A                                  ttemp1 003D  
                                ttemp2 0040                                  ttemp3 0043  
                                ttemp5 003B                                  ttemp6 003E  
                                ttemp7 0042                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5626            _UART1_SetRxInterruptHandler 55FE  
                                wtemp0 003A                                  wtemp1 003C  
                                wtemp2 003E                                  wtemp3 0040  
                                wtemp4 0042                                  wtemp5 0044  
                                wtemp8 003B                        __end_of_sprintf 488C  
                      __end_of_toupper 4CB8                    ??_UART1_tx_vect_isr 005A  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5766  
             __size_of_SPI1_Initialize 0016                  __end_of_ringBufS_init 5586  
                      __initialization 4B10                      _UART2_rx_vect_isr 5790  
                         __end_of_atoi 401E                           __end_of_main 36B2  
                         __end_of_dtoa 2B06                           __end_of_stoa 3418  
                         __end_of_xtoa 2E8A                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 005A                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005A              __end_of_UART1_tx_vect_isr 573E  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5626  
                     _UART1_Initialize 4E96                      _UART2_tx_vect_isr 5768  
                   _UART2_Transmit_ISR 543C                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005A  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                       __CFG_WDTCCS$SC 000000                                 u145_48 5830  
                               u147_48 5852                                 _SCANPR 0039F7  
                               u149_48 5874                                 u328_40 5028  
                               u328_46 502A                                 u345_48 5896  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 _OSCFRQ 0039DF  
                  ??_UART2_tx_vect_isr 005A              __end_of_UART2_rx_vect_isr 57B6  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5A04  
                     _UART2_Initialize 4FC0                                 _WaitMs 5492  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4BA2                                 _memset 2E8A  
                               clear_0 4B5A                                 clear_1 4B66  
                               clear_2 4B72                                 clear_3 4B7E  
                               clear_4 4B8A                                 _printf 4F5E  
                   _eaDogM_WriteString 488C                              ?_ADCC_ISR 005A  
                               _strlen 4CB8                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 5172                         _PMD_Initialize 59A2  
 __end_of_INT2_DefaultInterruptHandler 5A58  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 5A56              __end_of_UART2_tx_vect_isr 578E  
                               lltemp0 003A                                 lltemp1 0042  
                               lltemp2 004A                                 lltemp3 0052  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 50D4                       __end_of_vfprintf 4B10  
                           _StartTimer 5344                        _CLC1_Initialize 5800  
        __size_of_INTERRUPT_Initialize 0064                      _SYSTEM_Initialize 5306  
                           __accesstop 0060                __end_of__initialization 4B9C  
                            ?_INT0_ISR 005A                              ?_INT1_ISR 005A  
                            ?_INT2_ISR 005A              __end_of_CLKREF_Initialize 5A0E  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
               __end_of_ringBufS_flush 4C34                         __pcstackCOMRAM 005A  
                           ___inthi_sp 0CD8                           __pidataBANK0 5A36  
                         __pidataBANK1 5246                              ?_TMR6_ISR 005A  
                       ivt0x8_undefint 00AC                          __end_of_fputc 4500  
                        __end_of_fputs 4DBA                          __end_of_putch 5976  
              __end_of_TMR6_Initialize 564E                 __end_of_PMD_Initialize 59B6  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005A  
                __end_of_TMR6_CallBack 58AA            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 5A1C  
     __end_of_INT2_SetInterruptHandler 569E               _UART2_RxInterruptHandler 0017  
            __end_of_SYSTEM_Initialize 5344                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 5940  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 0020                             ??_INT0_ISR 005A  
                           ??_INT1_ISR 005A                             ??_INT2_ISR 005A  
                    __end_of_TimerDone 5800                       _DMA1_DMADCNT_ISR 5A10  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 5924  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 5676  
              __end_of_ADCC_Initialize 51BC                             ??_TMR6_ISR 005A  
                   __size_of_secs_send 01B8                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 58AA  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005A  
                     _DMA1_DMASCNT_ISR 59E8                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5822                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005A  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 0646  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 595C                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
                   __end_of_UART1_Read 5306      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000C  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 4EFA                        __size_of_WaitMs 002A  
                              ___aodiv 36B2                                ___aomod 3BB0  
            __end_of_UART1_Receive_ISR 58CA                           __psmallconst 2000  
                 __end_of_init_display 46F2                                __pcinit 4B10  
                      __size_of_memset 02EC                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 3418                                __ptext1 5908  
                              __ptext2 401E                                __ptext3 4DBA  
                              __ptext4 47C4                                __ptext5 3932  
                              __ptext6 423C                                __ptext7 46F2  
                              __ptext8 5468                                __ptext9 5A26  
                    _UART2_Receive_ISR 58CA                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 0084  
                              us240999 3DDE                                us420999 2B86  
                              us229999 391C                                us408999 3188  
                _OSCILLATOR_Initialize 598C                                us391999 26CA  
                         __size_of_abs 0046                                _r_block 0060  
                         __size_of_pad 0108                                _isalpha 5202  
                              _isdigit 53E0                                _islower 5380  
                              _isspace 50D4                        __CFG_WRTSAF$OFF 000000  
             __end_of_UART2_Initialize 501E                                _isupper 53B0  
           __size_of_SYSTEM_Initialize 003E                                _sprintf 47C4  
                              _toupper 4C34                   end_of_initialization 4B9C  
                    __end_of_secs_send 43F4               _INT2_SetInterruptHandler 5676  
             __size_of_secs_II_message 0072                             _r_protocol 3932  
  __end_of_UART1_SetTxInterruptHandler 55FE            _UART1_SetTxInterruptHandler 55D6  
  __end_of_UART2_SetRxInterruptHandler 55D6            _UART2_SetRxInterruptHandler 55AE  
                           _t_protocol 401E                      __end_of_vfpfcnvrt 26B0  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 5A4A  
            __end_of_UART2_Receive_ISR 58EA                         wdtdelay@dcount 0001  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005C  
                       _block_checksum 46F2                  _INT1_InterruptHandler 001D  
             _TMR6_SetInterruptHandler 564E   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 5716  
          _ADCC_SetADIInterruptHandler 56EE                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 4E2C  
                      _SPI1_Initialize 5976                       _UART1_put_buffer 5468  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 54BC  
         __end_of_INTERRUPT_Initialize 4F5E                 __end_of_block_checksum 47C4  
 __end_of_INT0_DefaultInterruptHandler 5A54  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 5A52             __size_of_UART1_Receive_ISR 0020  
                    __size_of_TMR6_ISR 0026            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3176                         __end_of_printf 4FC0  
             __end_of_DMA1_DMADCNT_ISR 5A1A                  __end_of_INT0_CallBack 5844  
                       __end_of_strlen 4D3C                    start_initialization 4B10  
      __size_of_PIN_MANAGER_Initialize 009A                            __end_of_abs 5202  
                __end_of_INT1_CallBack 5866                            __end_of_pad 4608  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 555E  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 5888  
                 secs_II_message@block 0005                          _uart1RxBuffer 0100  
                        _uart2RxBuffer 0200                          _uart1TxBuffer 0140  
             __end_of_DMA1_DMASCNT_ISR 59F6                          _uart2TxBuffer 0240  
                       _DMA1_DMAOR_ISR 59F8                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 00AC  
                            _TimerDone 57DE                          _ringBufS_init 555E  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 00F5                            __pdataBANK1 0180  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5172  
                      run_checksum@sum 002B                __end_of_DMA1_Initialize 4E96  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 56EE  
              __end_of_SPI1_Initialize 598C               _UART1_RxInterruptHandler 0011  
             _UART2_TxInterruptHandler 0014              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4608                 __end_of_DMA1_DMAOR_ISR 5A04  
                _INT2_InterruptHandler 001A                  _TMR6_InterruptHandler 0008  
               __size_of_TMR6_CallBack 0022                 _PIN_MANAGER_Initialize 49E2  
                 __end_of_wait_lcd_set 5A44                              __ptext100 5A1C  
                            __ptext101 59F8                              __ptext102 0000  
                   __end_of_StartTimer 5380                      __size_of_wdtdelay 0058  
                    __size_of_vfprintf 0094                               _ADCC_ISR 54BC  
                  __size_of_r_protocol 027E                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 021E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 007E  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 4EFA                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005A  
                             _INT0_ISR 59B8                               _INT1_ISR 59C8  
                             _INT2_ISR 59D8                               _LATCbits 003FBC  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 423C                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0280  
                            _ring_buf2 0300                               i2u182_48 54D2  
                             _PIR1bits 0039A1                               i2u370_48 572A  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u372_48 5752                               i2u374_48 577A  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u376_48 57A2  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR9bits 0039A9             __end_of_UART1_Transmit_ISR 543C  
                             _TMR6_ISR 57B8                              _vfpfcnvrt 206A  
                         _SPI1INTFbits 003D1A                              _start_lcd 5A44  
                        _TMR6_CallBack 5888               __end_of_UART1_put_buffer 5492  
                __size_of_send_lcd_cmd 0028                    __end_of_UART1_Write 52C8  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4B24                              copy_data1 4B46  
             _INT0_SetInterruptHandler 56C6                 _uart1TxBufferRemaining 0037  
  __end_of_UART2_SetTxInterruptHandler 55AE            _UART2_SetTxInterruptHandler 5586  
                         _uart1RxCount 0034                           _uart2RxCount 002E  
                             __Hrparam 0000                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 550E                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 5908  
                         _send_lcd_cmd 5536                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 5924  
                __end_of_DMA1_DMAA_ISR 5A26   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005A               __size_of_ADCC_Initialize 004A  
                     __size_of_isalpha 0044                       __size_of_isdigit 0030  
                             __pivt0x8 0008                       __size_of_islower 0030  
                     __size_of_isspace 0052                     ??_DMA1_DMADCNT_ISR 005C  
                             __ptext10 528A                               __ptext11 54E6  
                             __ptext20 507C                               __ptext12 5492  
                             __ptext21 58EA                               __ptext13 57DE  
                             __ptext30 206A                               __ptext22 555E  
                             __ptext14 5344                               __ptext31 2B06  
                             __ptext23 488C                               __ptext15 5A2E  
                             __ptext40 4D3C                               __ptext32 4C34  
                             __ptext24 5A3E                               __ptext16 52C8  
                             __ptext41 43F4                               __ptext33 5380  
                             __ptext25 5A44                               __ptext17 4608  
                             __ptext50 5306                               __ptext42 595C  
                             __ptext34 53B0                               __ptext26 4BA2  
                             __ptext18 550E                               __ptext51 4FC0  
                             __ptext43 4938                               __ptext35 5202  
                             __ptext27 2E8A                               __ptext19 5536  
                             __ptext60 59A2                               __ptext52 5586  
                             __ptext44 51BC                               __ptext36 3176  
                             __ptext28 4F5E                               __ptext61 49E2  
                             __ptext53 55AE                               __ptext45 3BB0  
                             __ptext37 26B0                               __ptext29 4A7C  
                             __ptext70 4E2C                               __ptext62 598C  
                             __ptext54 4E96                               __ptext46 36B2  
                             __ptext38 4500                               __ptext71 5A04  
                             __ptext63 5924                               __ptext55 55D6  
                             __ptext47 3DF0                               __ptext39 4CB8  
                             __ptext80 5A54                               __ptext72 5800  
                             __ptext64 4EFA                               __ptext56 55FE  
                             __ptext48 50D4                               __ptext81 59D8  
                             __ptext73 5172                               __ptext65 5126  
                             __ptext57 5626                               __ptext49 53E0  
                             __ptext90 58AA                               __ptext82 5866  
                             __ptext74 56EE                               __ptext66 5676  
                             __ptext58 564E                               __ptext91 5768  
                             __ptext83 5A56                               __ptext75 59B8  
                             __ptext67 569E                               __ptext59 5976  
                             __ptext92 543C                               __ptext84 5A4C  
                             __ptext76 5822                               __ptext68 56C6  
                             __ptext93 5790                               __ptext85 54BC  
                             __ptext77 5A52                               __ptext69 5940  
                             __ptext94 58CA                               __ptext86 5A58  
                             __ptext78 59C8                               __ptext95 57B8  
                             __ptext87 5718                               __ptext79 5844  
                             __ptext96 5888                               __ptext88 5410  
                             __ptext97 501E                               __ptext89 5740  
                             __ptext98 59E8                               __ptext99 5A10  
                     __size_of_isupper 0030                        _secs_II_message 4DBA  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_toupper 0084                       _ringBufS_put_dma 4938  
                        __size_of_atoi 022E                          __size_of_main 029A  
                        __size_of_dtoa 0456                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02A2                          __size_of_xtoa 0384  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005A  
                          _IVTLOCKbits 003FD4              _ADCC_ADI_InterruptHandler 000B  
                            stoa@F1139 00F5                     ??_DMA1_DMASCNT_ISR 005C  
                             _spi_link 006D                               _wdtdelay 507C  
           __end_of_UART2_Transmit_ISR 5468                               _vfprintf 4A7C  
                    _UART1_is_rx_ready 5A2E                            _UART1_Write 528A  
 __end_of_INT1_DefaultInterruptHandler 5A56  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 5A54                      _UART1_is_tx_ready 5A26  
                        ??_Default_ISR 005A                     __end_of_r_protocol 3BB0  
                          _uart1RxHead 0036                            _uart1TxHead 0039  
                          _uart2RxHead 0030                            _uart1RxTail 0035  
                          _uart2TxHead 0033                            _uart1TxTail 0038  
                          _uart2RxTail 002F                            _uart2TxTail 0032  
                         _wait_lcd_set 5A3E                     _EXT_INT_Initialize 5126  
 __end_of_TMR6_DefaultInterruptHandler 507C  __size_of_TMR6_DefaultInterruptHandler 005E  
         _TMR6_DefaultInterruptHandler 501E                     __end_of_t_protocol 423C  
 __end_of_ADCC_DefaultInterruptHandler 5A5A  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 5A58                               intlevel2 0000  
                    _send_lcd_cmd_long 550E                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 4938                __end_of_NCO1_Initialize 5940  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 5A36  
                           _UART1_Read 52C8                 __size_of_INT1_CallBack 0022  
            __end_of_UART1_is_tx_ready 5A2E                 __size_of_INT2_CallBack 0022  
               _uart2TxBufferRemaining 0031                __end_of_secs_II_message 4E2C  
     __end_of_INT1_SetInterruptHandler 56C6              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 005C               _UART1_TxInterruptHandler 000E  
            __end_of_send_lcd_cmd_long 5536                    __end_of_Default_ISR 5A52  
       __end_of_PIN_MANAGER_Initialize 4A7C                  __size_of_run_checksum 0028  
            __size_of_UART2_Initialize 005E  
