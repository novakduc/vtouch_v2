

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec  6 01:54:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=4,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=4,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=4,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=4,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=4,class=CODE,delta=1
   166                           	psect	text142,global,reloc=4,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=4,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=4,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=4,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text162,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_h	offset=-1 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_i	offset=-1 (param)
   241 ;;_cmd	offset=-1 (param)
   242 ;;_i	offset	0
   243 ;;_chan	offset=-1 (param)
   244 ;;_to_what	offset=-2 (param)
   245 ;;_u	offset	0
   246 ;;_s	offset=-2 (param)
   247 ;;_index	offset=-1 (param)
   248 ;;_arg	offset	0
   249 ;;_exp	offset	4
   250 ;;_sign	offset=-1 (param)
   251 ;;_val	offset=-5 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_flipper	offset=-1 (param)
   254 ;;_f	offset	0
   255 ;;_ap	offset	6
   256 ;;_s	offset=-3 (param)
   257 ;;_fmt	offset=-5 (param)
   258 ;;_line	offset=-1 (param)
   259 ;;_vterm	offset=-2 (param)
   260 ;;_numMilliseconds	offset=-2 (param)
   261 ;;_vterm	offset=-1 (param)
   262 ;;_r	offset=-1 (param)
   263 ;;_c	offset=-2 (param)
   264 ;;_strPtr	offset=-4 (param)
   265 ;;_strPtr	offset=-1 (param)
   266 ;;_delay	offset=-4 (param)
   267 ;;_strPtr	offset=-2 (param)
   268 ;;__this	offset=-2 (param)
   269 ;;_clearBuffer	offset=-3 (param)
   270 ;;_s	offset	0
   271 ;;_k	offset	2
   272 ;;_dest	offset=-2 (param)
   273 ;;_c	offset=-4 (param)
   274 ;;_n	offset=-6 (param)
   275 ;;_ap	offset	0
   276 ;;_fmt	offset=-3 (param)
   277 ;;_cfmt	offset	0
   278 ;;_fp	offset=-2 (param)
   279 ;;_fmt	offset=-4 (param)
   280 ;;_ap	offset=-6 (param)
   281 ;;_vfpfcnvrt$5036	offset	0
   282 ;;_vfpfcnvrt$5042	offset	2
   283 ;;_vfpfcnvrt$5035	offset	4
   284 ;;_llu	offset	6
   285 ;;_ll	offset	14
   286 ;;_f	offset	22
   287 ;;_ct	offset	26
   288 ;;_cp	offset	29
   289 ;;_c	offset	31
   290 ;;_fp	offset=-2 (param)
   291 ;;_fmt	offset=-4 (param)
   292 ;;_ap	offset=-6 (param)
   293 ;;_xtoa$5021	offset	0
   294 ;;_xtoa$5020	offset	2
   295 ;;_n	offset	4
   296 ;;_c	offset	12
   297 ;;_i	offset	14
   298 ;;_w	offset	16
   299 ;;_p	offset	18
   300 ;;_fp	offset=-2 (param)
   301 ;;_d	offset=-10 (param)
   302 ;;_x	offset=-11 (param)
   303 ;;_toupper$5681	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_r	offset	0
   308 ;;_l	offset	2
   309 ;;__l	offset=-2 (param)
   310 ;;__r	offset=-4 (param)
   311 ;;_n	offset=-6 (param)
   312 ;;_nuls	offset	0
   313 ;;_l	offset	7
   314 ;;_p	offset	9
   315 ;;_cp	offset	11
   316 ;;_w	offset	13
   317 ;;_i	offset	15
   318 ;;_fp	offset=-2 (param)
   319 ;;_s	offset=-4 (param)
   320 ;;_efgtoa$5000	offset	0
   321 ;;_efgtoa$4999	offset	2
   322 ;;_efgtoa$4998	offset	4
   323 ;;_efgtoa$4994	offset	6
   324 ;;_efgtoa$4990	offset	8
   325 ;;_efgtoa$4989	offset	10
   326 ;;_u	offset	12
   327 ;;_g	offset	16
   328 ;;_l	offset	20
   329 ;;_h	offset	24
   330 ;;_ou	offset	28
   331 ;;_n	offset	32
   332 ;;_e	offset	34
   333 ;;_i	offset	36
   334 ;;_w	offset	38
   335 ;;_p	offset	40
   336 ;;_sign	offset	42
   337 ;;_d	offset	44
   338 ;;_ne	offset	46
   339 ;;_m	offset	48
   340 ;;_pp	offset	50
   341 ;;_t	offset	52
   342 ;;_mode	offset	54
   343 ;;_nmode	offset	55
   344 ;;_fp	offset=-2 (param)
   345 ;;_f	offset=-6 (param)
   346 ;;_c	offset=-7 (param)
   347 ;;_tolower$5666	offset	0
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_d	offset	0
   351 ;;_s	offset	2
   352 ;;_dest	offset=-2 (param)
   353 ;;_src	offset=-4 (param)
   354 ;;_u	offset	0
   355 ;;_m	offset	4
   356 ;;_e	offset	8
   357 ;;_x	offset=-4 (param)
   358 ;;_u	offset	0
   359 ;;_e	offset	4
   360 ;;_x	offset=-4 (param)
   361 ;;_exp1	offset	0
   362 ;;_sign1	offset	1
   363 ;;_f1	offset=-4 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_ff1	offset=-4 (param)
   366 ;;_ff2	offset=-8 (param)
   367 ;;_ff1	offset=-4 (param)
   368 ;;_ff2	offset=-8 (param)
   369 ;;_grs	offset	0
   370 ;;_rem	offset	4
   371 ;;_new_exp	offset	8
   372 ;;_aexp	offset	10
   373 ;;_bexp	offset	11
   374 ;;_sign	offset	12
   375 ;;_b	offset=-4 (param)
   376 ;;_a	offset=-8 (param)
   377 ;;_sign	offset	0
   378 ;;_counter	offset	1
   379 ;;_dividend	offset=-2 (param)
   380 ;;_divisor	offset=-4 (param)
   381 ;;_quotient	offset	0
   382 ;;_sign	offset	2
   383 ;;_counter	offset	3
   384 ;;_dividend	offset=-2 (param)
   385 ;;_divisor	offset=-4 (param)
   386 ;;_dtoa$4966	offset	0
   387 ;;_n	offset	2
   388 ;;_i	offset	10
   389 ;;_s	offset	12
   390 ;;_w	offset	14
   391 ;;_p	offset	16
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_a	offset=-2 (param)
   395 ;;_sign	offset	0
   396 ;;_counter	offset	1
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_quotient	offset	0
   400 ;;_sign	offset	8
   401 ;;_counter	offset	9
   402 ;;_dividend	offset=-8 (param)
   403 ;;_divisor	offset=-16 (param)
   404 ;;_w	offset	0
   405 ;;_fp	offset=-2 (param)
   406 ;;_c	offset=-3 (param)
   407 ;;_w	offset	0
   408 ;;_i	offset	2
   409 ;;_fp	offset=-2 (param)
   410 ;;_buf	offset=-4 (param)
   411 ;;_p	offset=-6 (param)
   412 ;;_a	offset	0
   413 ;;_s	offset=-2 (param)
   414 ;;_i	offset	0
   415 ;;_c	offset	2
   416 ;;_s	offset=-2 (param)
   417 ;;_fp	offset=-4 (param)
   418 ;;_c	offset=-2 (param)
   419 ;;_fp	offset=-4 (param)
   420 ;;_c	offset=-1 (param)
   421 ;;__this	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_atoi$5519	offset	0
   424 ;;_atoi$5517	offset	2
   425 ;;_atoi$5518	offset	4
   426 ;;_n	offset	5
   427 ;;_neg	offset	7
   428 ;;_s	offset=-2 (param)
   429 ;;_isspace$5557	offset	0
   430 ;;_c	offset=-2 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_vterm	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_level	offset=-2 (param)
   436 ;;_dutyValue	offset=-2 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_count	offset=-3 (param)
   440 ;;_h	offset=-1 (param)
   441 ;;_lp_speed	offset	0
   442 ;;_new	offset=-4 (param)
   443 ;;_bn	offset=-5 (param)
   444 ;;_slow	offset=-6 (param)
   445 ;;_b	offset=-4 (param)
   446 ;;_a	offset=-8 (param)
   447 ;;_grs	offset	0
   448 ;;_bexp	offset	1
   449 ;;_aexp	offset	2
   450 ;;_signs	offset	3
   451 ;;_b	offset=-4 (param)
   452 ;;_a	offset=-8 (param)
   453 ;;_prod	offset	0
   454 ;;_grs	offset	4
   455 ;;_temp	offset	8
   456 ;;_bexp	offset	10
   457 ;;_aexp	offset	11
   458 ;;_sign	offset	12
   459 ;;_b	offset=-4 (param)
   460 ;;_a	offset=-8 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_state	offset	0
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_i	offset	0
   474 ;;_sw_value	offset	1
   475 ;;_timerVal	offset=-2 (param)
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_exp1	offset	0
   478 ;;_sign1	offset	1
   479 ;;_f1	offset=-4 (param)
   480 ;;_prod	offset	0
   481 ;;_grs	offset	4
   482 ;;_temp	offset	8
   483 ;;_bexp	offset	10
   484 ;;_aexp	offset	11
   485 ;;_sign	offset	12
   486 ;;_b	offset=-4 (param)
   487 ;;_a	offset=-8 (param)
   488 ;;_ff1	offset=-4 (param)
   489 ;;_ff2	offset=-8 (param)
   490 ;;_ff1	offset=-4 (param)
   491 ;;_ff2	offset=-8 (param)
   492 ;;_grs	offset	0
   493 ;;_rem	offset	4
   494 ;;_new_exp	offset	8
   495 ;;_aexp	offset	10
   496 ;;_bexp	offset	11
   497 ;;_sign	offset	12
   498 ;;_b	offset=-4 (param)
   499 ;;_a	offset=-8 (param)
   500 ;;_grs	offset	0
   501 ;;_bexp	offset	1
   502 ;;_aexp	offset	2
   503 ;;_signs	offset	3
   504 ;;_b	offset=-4 (param)
   505 ;;_a	offset=-8 (param)
   506 ;;_channel	offset=-1 (param)
   507 ;;_i	offset	0
   508                           
   509                           	psect	idataBANK0
   510  018D3A                     __pidataBANK0:
   511                           	opt callstack 0
   512                           
   513                           ;initializer for _R
   514  018D3A  0000               	dw	0
   515  018D3C  0000               	dw	0
   516  018D3E  0000               	dw	0
   517  018D40  0000               	dw	0
   518  018D42  0000               	dw	0
   519  018D44  0000               	dw	0
   520  018D46  0000               	dw	0
   521  018D48  0000               	dw	0
   522  018D4A  0000               	dw	0
   523  018D4C  0000               	dw	0
   524  018D4E  0000               	dw	0
   525  018D50  0000               	dw	0
   526  018D52  0000               	dw	0
   527  018D54  0000               	dw	0
   528  018D56  0000               	dw	0
   529  018D58  0000               	dw	0
   530  018D5A  0F67               	dw	3943
   531  018D5C  0F8F               	dw	3983
   532  018D5E  00                 	db	0
   533  018D5F  0000               	dw	0
   534  018D61  00                 	db	0
   535                           
   536                           ;initializer for stoa@F1166
   537  018D62  28                 	db	40
   538  018D63  6E                 	db	110
   539  018D64  75                 	db	117
   540  018D65  6C                 	db	108
   541  018D66  6C                 	db	108
   542  018D67  29                 	db	41
   543  018D68  00                 	db	0
   544                           
   545                           ;initializer for _H
   546  018D69  00                 	db	0
   547  018D6A  00                 	db	0
   548  018D6B  01                 	db	1
   549  018D6C  00                 	db	0
   550  018D6D  01                 	db	1
   551  018D6E  00                 	db	0
   552  018D6F  00                 	db	0
   553                           
   554                           	psect	idataBANK1
   555  017C56                     __pidataBANK1:
   556                           	opt callstack 0
   557                           
   558                           ;initializer for _C
   559  017C56  0000               	dw	0
   560  017C58  0000               	dw	0
   561  017C5A  0000               	dw	0
   562  017C5C  0000               	dw	0
   563  017C5E  0000               	dw	0
   564  017C60  0000               	dw	0
   565  017C62  0000               	dw	0
   566  017C64  0000               	dw	0
   567  017C66  0000               	dw	0
   568  017C68  0000               	dw	0
   569  017C6A  0000               	dw	0
   570  017C6C  0000               	dw	0
   571  017C6E  0000               	dw	0
   572  017C70  0000               	dw	0
   573  017C72  0000               	dw	0
   574  017C74  0000               	dw	0
   575  017C76  0000               	dw	0
   576  017C78  0000               	dw	0
   577  017C7A  0000               	dw	0
   578  017C7C  0000               	dw	0
   579  017C7E  0000               	dw	0
   580  017C80  0000               	dw	0
   581  017C82  0000               	dw	0
   582  017C84  0000               	dw	0
   583  017C86  0000               	dw	0
   584  017C88  0000               	dw	0
   585  017C8A  0000               	dw	0
   586  017C8C  0000               	dw	0
   587  017C8E  0000               	dw	0
   588  017C90  0000               	dw	0
   589  017C92  0000               	dw	0
   590  017C94  0000               	dw	0
   591  017C96  0000               	dw	0
   592  017C98  0000               	dw	0
   593  017C9A  0000               	dw	0
   594  017C9C  0000               	dw	0
   595  017C9E  0000               	dw	0
   596  017CA0  0000               	dw	0
   597  017CA2  0000               	dw	0
   598  017CA4  0000               	dw	0
   599  017CA6  0000               	dw	0
   600  017CA8  0000               	dw	0
   601  017CAA  0000               	dw	0
   602  017CAC  0000               	dw	0
   603  017CAE  0000               	dw	0
   604  017CB0  0000               	dw	0
   605  017CB2  0000               	dw	0
   606  017CB4  0000               	dw	0
   607  017CB6  0000               	dw	0
   608  017CB8  0000               	dw	0
   609  017CBA  0000               	dw	0
   610  017CBC  0000               	dw	0
   611  017CBE  0000               	dw	0
   612  017CC0  0000               	dw	0
   613  017CC2  0000               	dw	0
   614  017CC4  0000               	dw	0
   615  017CC6  0000               	dw	0
   616  017CC8  0000               	dw	0
   617  017CCA  0000               	dw	0
   618  017CCC  0000               	dw	0
   619  017CCE  0000               	dw	0
   620  017CD0  0000               	dw	0
   621  017CD2  0000               	dw	0
   622  017CD4  42FA               	dw	17146
   623  017CD6  00                 	db	0
   624  017CD7  00                 	db	0
   625  017CD8  00                 	db	0
   626  017CD9  00                 	db	0
   627  017CDA  00                 	db	0
   628  017CDB  00                 	db	0
   629  017CDC  00                 	db	0
   630  017CDD  00                 	db	0
   631  017CDE  00                 	db	0
   632  017CDF  00                 	db	0
   633  017CE0  00                 	db	0
   634  017CE1  00                 	db	0
   635  017CE2  00                 	db	0
   636  017CE3  00                 	db	0
   637  017CE4  00                 	db	0
   638  017CE5  00                 	db	0
   639  017CE6  00                 	db	0
   640  017CE7  00                 	db	0
   641  017CE8  00                 	db	0
   642  017CE9  00                 	db	0
   643  017CEA  00                 	db	0
   644  017CEB  00                 	db	0
   645  017CEC  00                 	db	0
   646  017CED  00                 	db	0
   647  017CEE  00                 	db	0
   648  017CEF  00                 	db	0
   649  017CF0  00                 	db	0
   650  017CF1  00                 	db	0
   651  017CF2  00                 	db	0
   652  017CF3  00                 	db	0
   653  017CF4  00                 	db	0
   654  017CF5  00                 	db	0
   655  017CF6  00                 	db	0
   656  017CF7  00                 	db	0
   657  017CF8  00                 	db	0
   658  017CF9  00                 	db	0
   659  017CFA  00                 	db	0
   660                           
   661                           ;initializer for _port_data
   662  017CFB  FF                 	db	255
   663  017CFC  00                 	db	0
   664  017CFD  FF                 	db	255
   665  017CFE  00                 	db	0
   666  017CFF  FF                 	db	255
   667  017D00  00                 	db	0
   668  017D01  FF                 	db	255
   669  017D02  00                 	db	0
   670  017D03  FF                 	db	255
   671  017D04  00                 	db	0
   672  017D05  FF                 	db	255
   673  017D06  00                 	db	0
   674  017D07  FF                 	db	255
   675  017D08  00                 	db	0
   676  017D09  FF                 	db	255
   677  017D0A  00                 	db	0
   678                           
   679                           	psect	idataBANK2
   680  017AE2                     __pidataBANK2:
   681                           	opt callstack 0
   682                           
   683                           ;initializer for _V
   684  017AE2  00                 	db	0
   685  017AE3  00                 	db	0
   686  017AE4  00                 	db	0
   687  017AE5  00                 	db	0
   688  017AE6  00                 	db	0
   689  017AE7  00                 	db	0
   690  017AE8  00                 	db	0
   691  017AE9  00                 	db	0
   692  017AEA  00                 	db	0
   693  017AEB  00                 	db	0
   694  017AEC  00                 	db	0
   695  017AED  00                 	db	0
   696  017AEE  00                 	db	0
   697  017AEF  00                 	db	0
   698  017AF0  00                 	db	0
   699  017AF1  00                 	db	0
   700  017AF2  00                 	db	0
   701  017AF3  00                 	db	0
   702  017AF4  00                 	db	0
   703  017AF5  00                 	db	0
   704  017AF6  00                 	db	0
   705  017AF7  00                 	db	0
   706  017AF8  00                 	db	0
   707  017AF9  00                 	db	0
   708  017AFA  00                 	db	0
   709  017AFB  00                 	db	0
   710  017AFC  00                 	db	0
   711  017AFD  00                 	db	0
   712  017AFE  00                 	db	0
   713  017AFF  00                 	db	0
   714  017B00  00                 	db	0
   715  017B01  00                 	db	0
   716  017B02  00                 	db	0
   717  017B03  00                 	db	0
   718  017B04  00                 	db	0
   719  017B05  00                 	db	0
   720  017B06  00                 	db	0
   721  017B07  00                 	db	0
   722  017B08  00                 	db	0
   723  017B09  00                 	db	0
   724  017B0A  00                 	db	0
   725  017B0B  00                 	db	0
   726  017B0C  00                 	db	0
   727  017B0D  00                 	db	0
   728  017B0E  00                 	db	0
   729  017B0F  00                 	db	0
   730  017B10  00                 	db	0
   731  017B11  00                 	db	0
   732  017B12  00                 	db	0
   733  017B13  00                 	db	0
   734  017B14  00                 	db	0
   735  017B15  00                 	db	0
   736  017B16  00                 	db	0
   737  017B17  00                 	db	0
   738  017B18  00                 	db	0
   739  017B19  00                 	db	0
   740  017B1A  00                 	db	0
   741  017B1B  00                 	db	0
   742  017B1C  00                 	db	0
   743  017B1D  00                 	db	0
   744  017B1E  00                 	db	0
   745  017B1F  00                 	db	0
   746  017B20  00                 	db	0
   747  017B21  00                 	db	0
   748  017B22  00                 	db	0
   749  017B23  00                 	db	0
   750  017B24  00                 	db	0
   751  017B25  00                 	db	0
   752  017B26  00                 	db	0
   753  017B27  00                 	db	0
   754  017B28  00                 	db	0
   755  017B29  00                 	db	0
   756  017B2A  00                 	db	0
   757  017B2B  00                 	db	0
   758  017B2C  00                 	db	0
   759  017B2D  00                 	db	0
   760  017B2E  00                 	db	0
   761  017B2F  00                 	db	0
   762  017B30  00                 	db	0
   763  017B31  00                 	db	0
   764  017B32  00                 	db	0
   765  017B33  00                 	db	0
   766  017B34  00                 	db	0
   767  017B35  00                 	db	0
   768  017B36  00                 	db	0
   769  017B37  00                 	db	0
   770  017B38  00                 	db	0
   771  017B39  00                 	db	0
   772  017B3A  00                 	db	0
   773  017B3B  00                 	db	0
   774  017B3C  00                 	db	0
   775  017B3D  00                 	db	0
   776  017B3E  00                 	db	0
   777  017B3F  00                 	db	0
   778  017B40  00                 	db	0
   779  017B41  00                 	db	0
   780  017B42  00                 	db	0
   781  017B43  00                 	db	0
   782  017B44  00                 	db	0
   783  017B45  00                 	db	0
   784  017B46  00                 	db	0
   785  017B47  00                 	db	0
   786  017B48  00                 	db	0
   787  017B49  00                 	db	0
   788  017B4A  00                 	db	0
   789  017B4B  00                 	db	0
   790  017B4C  00                 	db	0
   791  017B4D  00                 	db	0
   792  017B4E  00                 	db	0
   793  017B4F  00                 	db	0
   794  017B50  00                 	db	0
   795  017B51  00                 	db	0
   796  017B52  00                 	db	0
   797  017B53  00                 	db	0
   798  017B54  00                 	db	0
   799  017B55  00                 	db	0
   800  017B56  00                 	db	0
   801  017B57  00                 	db	0
   802  017B58  00                 	db	0
   803  017B59  00                 	db	0
   804  017B5A  00                 	db	0
   805  017B5B  00                 	db	0
   806  017B5C  00                 	db	0
   807  017B5D  00                 	db	0
   808  017B5E  00                 	db	0
   809  017B5F  00                 	db	0
   810  017B60  00                 	db	0
   811  017B61  00                 	db	0
   812  017B62  00                 	db	0
   813  017B63  0000               	dw	0
   814  017B65  0000               	dw	0
   815  017B67  0000               	dw	0
   816  017B69  0000               	dw	0
   817  017B6B  00                 	db	0
   818  017B6C  00                 	db	0
   819  017B6D  00                 	db	0
   820  017B6E  00                 	db	0
   821  017B6F  00                 	db	0
   822  017B70  00                 	db	0
   823  017B71  0000               	dw	0
   824  017B73  0000               	dw	0
   825  017B75  0000               	dw	0
   826  017B77  0000               	dw	0
   827  017B79  0000               	dw	0
   828  017B7B  0000               	dw	0
   829  017B7D  00                 	db	0
   830  017B7E  00                 	db	0
   831  017B7F  00                 	db	0
   832  017B80  00                 	db	0
   833  017B81  00                 	db	0
   834  017B82  00                 	db	0
   835  017B83  00                 	db	0
   836  017B84  00                 	db	0
   837  017B85  00                 	db	0
   838  017B86  00                 	db	0
   839  017B87  0000               	dw	0
   840  017B89  0000               	dw	0
   841  017B8B  2D                 	db	45
   842  017B8C  00                 	db	0
   843  017B8D  00                 	db	0
   844  017B8E  0000               	dw	0
   845  017B90  0000               	dw	0
   846  017B92  0000               	dw	0
   847  017B94  0000               	dw	0
   848  017B96  0000               	dw	0
   849  017B98  0000               	dw	0
   850  017B9A  0000               	dw	0
   851  017B9C  0000               	dw	0
   852                           
   853                           	psect	mediumconst
   854  00FDB0                     __pmediumconst:
   855                           	opt callstack 0
   856  00FDB0  00                 	db	0
   857  00FDB1                     _T:
   858                           	opt callstack 0
   859  00FDB1  63                 	db	99
   860  00FDB2  6F                 	db	111
   861  00FDB3  6D                 	db	109
   862  00FDB4  6D                 	db	109
   863  00FDB5  61                 	db	97
   864  00FDB6  6E                 	db	110
   865  00FDB7  64                 	db	100
   866  00FDB8  73                 	db	115
   867  00FDB9  20                 	db	32
   868  00FDBA  31                 	db	49
   869  00FDBB  00                 	db	0
   870  00FDBC  00                 	db	0
   871  00FDBD  00                 	db	0
   872  00FDBE  00                 	db	0
   873  00FDBF  00                 	db	0
   874  00FDC0  00                 	db	0
   875  00FDC1  00                 	db	0
   876  00FDC2  00                 	db	0
   877  00FDC3  64                 	db	100
   878  00FDC4  69                 	db	105
   879  00FDC5  73                 	db	115
   880  00FDC6  70                 	db	112
   881  00FDC7  6C                 	db	108
   882  00FDC8  61                 	db	97
   883  00FDC9  79                 	db	121
   884  00FDCA  73                 	db	115
   885  00FDCB  20                 	db	32
   886  00FDCC  31                 	db	49
   887  00FDCD  00                 	db	0
   888  00FDCE  00                 	db	0
   889  00FDCF  00                 	db	0
   890  00FDD0  00                 	db	0
   891  00FDD1  00                 	db	0
   892  00FDD2  00                 	db	0
   893  00FDD3  00                 	db	0
   894  00FDD4  00                 	db	0
   895  00FDD5  63                 	db	99
   896  00FDD6  6F                 	db	111
   897  00FDD7  6D                 	db	109
   898  00FDD8  6D                 	db	109
   899  00FDD9  61                 	db	97
   900  00FDDA  6E                 	db	110
   901  00FDDB  64                 	db	100
   902  00FDDC  73                 	db	115
   903  00FDDD  20                 	db	32
   904  00FDDE  32                 	db	50
   905  00FDDF  00                 	db	0
   906  00FDE0  00                 	db	0
   907  00FDE1  00                 	db	0
   908  00FDE2  00                 	db	0
   909  00FDE3  00                 	db	0
   910  00FDE4  00                 	db	0
   911  00FDE5  00                 	db	0
   912  00FDE6  00                 	db	0
   913  00FDE7  64                 	db	100
   914  00FDE8  69                 	db	105
   915  00FDE9  73                 	db	115
   916  00FDEA  70                 	db	112
   917  00FDEB  6C                 	db	108
   918  00FDEC  61                 	db	97
   919  00FDED  79                 	db	121
   920  00FDEE  73                 	db	115
   921  00FDEF  20                 	db	32
   922  00FDF0  32                 	db	50
   923  00FDF1  00                 	db	0
   924  00FDF2  00                 	db	0
   925  00FDF3  00                 	db	0
   926  00FDF4  00                 	db	0
   927  00FDF5  00                 	db	0
   928  00FDF6  00                 	db	0
   929  00FDF7  00                 	db	0
   930  00FDF8  00                 	db	0
   931  00FDF9  63                 	db	99
   932  00FDFA  6F                 	db	111
   933  00FDFB  6D                 	db	109
   934  00FDFC  6D                 	db	109
   935  00FDFD  61                 	db	97
   936  00FDFE  6E                 	db	110
   937  00FDFF  64                 	db	100
   938  00FE00  73                 	db	115
   939  00FE01  20                 	db	32
   940  00FE02  33                 	db	51
   941  00FE03  00                 	db	0
   942  00FE04  00                 	db	0
   943  00FE05  00                 	db	0
   944  00FE06  00                 	db	0
   945  00FE07  00                 	db	0
   946  00FE08  00                 	db	0
   947  00FE09  00                 	db	0
   948  00FE0A  00                 	db	0
   949  00FE0B  64                 	db	100
   950  00FE0C  69                 	db	105
   951  00FE0D  73                 	db	115
   952  00FE0E  70                 	db	112
   953  00FE0F  6C                 	db	108
   954  00FE10  61                 	db	97
   955  00FE11  79                 	db	121
   956  00FE12  73                 	db	115
   957  00FE13  20                 	db	32
   958  00FE14  33                 	db	51
   959  00FE15  00                 	db	0
   960  00FE16  00                 	db	0
   961  00FE17  00                 	db	0
   962  00FE18  00                 	db	0
   963  00FE19  00                 	db	0
   964  00FE1A  00                 	db	0
   965  00FE1B  00                 	db	0
   966  00FE1C  00                 	db	0
   967  00FE1D  63                 	db	99
   968  00FE1E  6F                 	db	111
   969  00FE1F  6D                 	db	109
   970  00FE20  6D                 	db	109
   971  00FE21  61                 	db	97
   972  00FE22  6E                 	db	110
   973  00FE23  64                 	db	100
   974  00FE24  73                 	db	115
   975  00FE25  20                 	db	32
   976  00FE26  34                 	db	52
   977  00FE27  00                 	db	0
   978  00FE28  00                 	db	0
   979  00FE29  00                 	db	0
   980  00FE2A  00                 	db	0
   981  00FE2B  00                 	db	0
   982  00FE2C  00                 	db	0
   983  00FE2D  00                 	db	0
   984  00FE2E  00                 	db	0
   985  00FE2F  64                 	db	100
   986  00FE30  69                 	db	105
   987  00FE31  73                 	db	115
   988  00FE32  70                 	db	112
   989  00FE33  6C                 	db	108
   990  00FE34  61                 	db	97
   991  00FE35  79                 	db	121
   992  00FE36  73                 	db	115
   993  00FE37  20                 	db	32
   994  00FE38  34                 	db	52
   995  00FE39  00                 	db	0
   996  00FE3A  00                 	db	0
   997  00FE3B  00                 	db	0
   998  00FE3C  00                 	db	0
   999  00FE3D  00                 	db	0
  1000  00FE3E  00                 	db	0
  1001  00FE3F  00                 	db	0
  1002  00FE40  00                 	db	0
  1003  00FE41                     __end_of_T:
  1004                           	opt callstack 0
  1005  0000                     _IVTADL	set	14493
  1006  0000                     _IVTADH	set	14494
  1007  0000                     _IVTADU	set	14495
  1008  0000                     _PIR6bits	set	14758
  1009  0000                     _PIR4bits	set	14756
  1010  0000                     _PIE8bits	set	14744
  1011  0000                     _PIR8bits	set	14760
  1012  0000                     _SCANPR	set	14839
  1013  0000                     _DMA2PR	set	14836
  1014  0000                     _DMA1PR	set	14835
  1015  0000                     _MAINPR	set	14834
  1016  0000                     _ISRPR	set	14833
  1017  0000                     _PIE2bits	set	14738
  1018  0000                     _PIR2bits	set	14754
  1019  0000                     _PIE9bits	set	14745
  1020  0000                     _PIR9bits	set	14761
  1021  0000                     _PIE6bits	set	14742
  1022  0000                     _PIE3bits	set	14739
  1023  0000                     _PMD7	set	14791
  1024  0000                     _PMD6	set	14790
  1025  0000                     _PMD5	set	14789
  1026  0000                     _PMD4	set	14788
  1027  0000                     _PMD3	set	14787
  1028  0000                     _PMD2	set	14786
  1029  0000                     _PMD1	set	14785
  1030  0000                     _PMD0	set	14784
  1031  0000                     _OSCTUNE	set	14814
  1032  0000                     _OSCFRQ	set	14815
  1033  0000                     _OSCEN	set	14813
  1034  0000                     _OSCCON3	set	14811
  1035  0000                     _OSCCON1	set	14809
  1036  0000                     _IPR8bits	set	14728
  1037  0000                     _IPR9bits	set	14729
  1038  0000                     _IPR5bits	set	14725
  1039  0000                     _IPR1bits	set	14721
  1040  0000                     _IPR3bits	set	14723
  1041  0000                     _IPR6bits	set	14726
  1042  0000                     _IPR2bits	set	14722
  1043  0000                     _PIE5bits	set	14741
  1044  0000                     _PIE1bits	set	14737
  1045  0000                     _PIR5bits	set	14757
  1046  0000                     _PIR1bits	set	14753
  1047  0000                     _PLLR	set	118496
  1048  0000                     _SPI1SDIPPS	set	15071
  1049  0000                     _U1RXPPS	set	15077
  1050  0000                     _RC6PPS	set	14870
  1051  0000                     _RC5PPS	set	14869
  1052  0000                     _INT1PPS	set	15041
  1053  0000                     _RD1PPS	set	14873
  1054  0000                     _INT0PPS	set	15040
  1055  0000                     _RC3PPS	set	14867
  1056  0000                     _RB6PPS	set	14862
  1057  0000                     _SPI1SCKPPS	set	15070
  1058  0000                     _U2RXPPS	set	15080
  1059  0000                     _SLRCONF	set	14995
  1060  0000                     _SLRCONE	set	14979
  1061  0000                     _SLRCOND	set	14963
  1062  0000                     _SLRCONC	set	14947
  1063  0000                     _SLRCONB	set	14931
  1064  0000                     _SLRCONA	set	14915
  1065  0000                     _ODCOND	set	14962
  1066  0000                     _ODCONC	set	14946
  1067  0000                     _ODCONB	set	14930
  1068  0000                     _ODCONA	set	14914
  1069  0000                     _ODCONF	set	14994
  1070  0000                     _ODCONE	set	14978
  1071  0000                     _WPUC	set	14945
  1072  0000                     _WPUA	set	14913
  1073  0000                     _WPUB	set	14929
  1074  0000                     _WPUE	set	14977
  1075  0000                     _WPUF	set	14993
  1076  0000                     _WPUD	set	14961
  1077  0000                     _ANSELA	set	14912
  1078  0000                     _ANSELF	set	14992
  1079  0000                     _ANSELE	set	14976
  1080  0000                     _ANSELB	set	14928
  1081  0000                     _ANSELC	set	14944
  1082  0000                     _ANSELD	set	14960
  1083  0000                     _DMA2SSA	set	15321
  1084  0000                     _DMA1SSA	set	15353
  1085  0000                     _DMA2DSZ	set	15310
  1086  0000                     _DMA2SSZ	set	15319
  1087  0000                     _DMA2DSA	set	15312
  1088  0000                     _DMA1DSZ	set	15342
  1089  0000                     _DMA1SSZ	set	15351
  1090  0000                     _DMA1DSA	set	15344
  1091  0000                     _DMA1CON0bits	set	15356
  1092  0000                     _DMA1CON1bits	set	15357
  1093  0000                     _DMA2CON0	set	15324
  1094  0000                     _DMA2AIRQ	set	15326
  1095  0000                     _DMA2SIRQ	set	15327
  1096  0000                     _DMA2CON1	set	15325
  1097  0000                     _DMA1CON0	set	15356
  1098  0000                     _DMA1AIRQ	set	15358
  1099  0000                     _DMA1SIRQ	set	15359
  1100  0000                     _DMA1CON1	set	15357
  1101  0000                     _CLKRCON	set	15589
  1102  0000                     _CLKRCLK	set	15590
  1103  0000                     _SPI1INTFbits	set	15642
  1104  0000                     _SPI1RXB	set	15632
  1105  0000                     _SPI1TXB	set	15633
  1106  0000                     _SPI1TCNTL	set	15634
  1107  0000                     _SPI1CON0	set	15636
  1108  0000                     _SPI1CLK	set	15644
  1109  0000                     _SPI1BAUD	set	15641
  1110  0000                     _SPI1CON2	set	15638
  1111  0000                     _SPI1CON1	set	15637
  1112  0000                     _U2RXB	set	15824
  1113  0000                     _U2TXB	set	15826
  1114  0000                     _U2ERRIE	set	15842
  1115  0000                     _U2ERRIR	set	15841
  1116  0000                     _U2UIR	set	15840
  1117  0000                     _U2FIFO	set	15839
  1118  0000                     _U2BRGH	set	15838
  1119  0000                     _U2BRGL	set	15837
  1120  0000                     _U2CON2	set	15836
  1121  0000                     _U2CON1	set	15835
  1122  0000                     _U2CON0	set	15834
  1123  0000                     _U2P3L	set	15832
  1124  0000                     _U2P2L	set	15830
  1125  0000                     _U2P1L	set	15828
  1126  0000                     _U1RXB	set	15848
  1127  0000                     _U1TXB	set	15850
  1128  0000                     _U1ERRIE	set	15866
  1129  0000                     _U1ERRIR	set	15865
  1130  0000                     _U1UIR	set	15864
  1131  0000                     _U1FIFO	set	15863
  1132  0000                     _U1BRGH	set	15862
  1133  0000                     _U1BRGL	set	15861
  1134  0000                     _U1CON2	set	15860
  1135  0000                     _U1CON1	set	15859
  1136  0000                     _U1CON0	set	15858
  1137  0000                     _U1P3H	set	15857
  1138  0000                     _U1P3L	set	15856
  1139  0000                     _U1P2H	set	15855
  1140  0000                     _U1P2L	set	15854
  1141  0000                     _U1P1H	set	15853
  1142  0000                     _U1P1L	set	15852
  1143  0000                     _FVRCON	set	16065
  1144  0000                     _ADFLTRL	set	16102
  1145  0000                     _ADFLTRH	set	16103
  1146  0000                     _ADCON0bits	set	16120
  1147  0000                     _ADCON0	set	16120
  1148  0000                     _ADCLK	set	16127
  1149  0000                     _ADACT	set	16126
  1150  0000                     _ADREF	set	16125
  1151  0000                     _ADSTAT	set	16124
  1152  0000                     _ADCON3	set	16123
  1153  0000                     _ADCON2	set	16122
  1154  0000                     _ADCON1	set	16121
  1155  0000                     _ADPREH	set	16119
  1156  0000                     _ADPREL	set	16118
  1157  0000                     _ADCAP	set	16117
  1158  0000                     _ADACQH	set	16116
  1159  0000                     _ADACQL	set	16115
  1160  0000                     _ADPCH	set	16113
  1161  0000                     _ADRPT	set	16108
  1162  0000                     _ADACCU	set	16106
  1163  0000                     _ADSTPTH	set	16101
  1164  0000                     _ADSTPTL	set	16100
  1165  0000                     _ADUTHH	set	16097
  1166  0000                     _ADUTHL	set	16096
  1167  0000                     _ADLTHH	set	16095
  1168  0000                     _ADLTHL	set	16094
  1169  0000                     _CCPTMRS1bits	set	16223
  1170  0000                     _PORTFbits	set	16335
  1171  0000                     _LATCbits	set	16316
  1172  0000                     _LATDbits	set	16317
  1173  0000                     _PORTBbits	set	16331
  1174  0000                     _T3CONbits	set	16294
  1175  0000                     _T3CON	set	16294
  1176  0000                     _TMR3L	set	16292
  1177  0000                     _TMR3H	set	16293
  1178  0000                     _T3CLK	set	16297
  1179  0000                     _T3GATE	set	16296
  1180  0000                     _T3GCON	set	16295
  1181  0000                     _T2CON	set	16300
  1182  0000                     _T2TMR	set	16298
  1183  0000                     _T2PR	set	16299
  1184  0000                     _T2RST	set	16303
  1185  0000                     _T2HLT	set	16301
  1186  0000                     _T2CLKCON	set	16302
  1187  0000                     _PWM8DCL	set	16224
  1188  0000                     _PWM8DCH	set	16225
  1189  0000                     _PWM8CON	set	16226
  1190  0000                     _LATEbits	set	16318
  1191  0000                     _T5CONbits	set	16282
  1192  0000                     _T5CON	set	16282
  1193  0000                     _TMR5L	set	16280
  1194  0000                     _TMR5H	set	16281
  1195  0000                     _T5CLK	set	16285
  1196  0000                     _T5GATE	set	16284
  1197  0000                     _T5GCON	set	16283
  1198  0000                     _T6CON	set	16276
  1199  0000                     _T6TMR	set	16274
  1200  0000                     _T6PR	set	16275
  1201  0000                     _T6RST	set	16279
  1202  0000                     _T6HLT	set	16277
  1203  0000                     _T6CLKCON	set	16278
  1204  0000                     _TRISD	set	16325
  1205  0000                     _TRISC	set	16324
  1206  0000                     _TRISB	set	16323
  1207  0000                     _TRISA	set	16322
  1208  0000                     _TRISF	set	16327
  1209  0000                     _TRISE	set	16326
  1210  0000                     _LATC	set	16316
  1211  0000                     _LATB	set	16315
  1212  0000                     _LATF	set	16319
  1213  0000                     _LATA	set	16314
  1214  0000                     _LATD	set	16317
  1215  0000                     _LATE	set	16318
  1216  0000                     _IVTLOCKbits	set	16340
  1217  0000                     _IVTLOCK	set	16340
  1218  0000                     _INTCON0bits	set	16338
  1219  0000                     _GIE	set	130711
  1220  00FE41                     
  1221                           ; BSR set to: 57
  1222  00FE41  20                 	db	32
  1223  00FE42  4D                 	db	77	;'M'
  1224  00FE43  65                 	db	101	;'e'
  1225  00FE44  73                 	db	115	;'s'
  1226  00FE45  67                 	db	103	;'g'
  1227  00FE46  20                 	db	32
  1228  00FE47  25                 	db	37
  1229  00FE48  64                 	db	100	;'d'
  1230  00FE49  20                 	db	32
  1231  00FE4A  53                 	db	83	;'S'
  1232  00FE4B  74                 	db	116	;'t'
  1233  00FE4C  61                 	db	97	;'a'
  1234  00FE4D  63                 	db	99	;'c'
  1235  00FE4E  6B                 	db	107	;'k'
  1236  00FE4F  20                 	db	32
  1237  00FE50  25                 	db	37
  1238  00FE51  64                 	db	100	;'d'
  1239  00FE52  20                 	db	32
  1240  00FE53  20                 	db	32
  1241  00FE54  20                 	db	32
  1242  00FE55  20                 	db	32
  1243  00FE56  20                 	db	32
  1244  00FE57  20                 	db	32
  1245  00FE58  00                 	db	0
  1246  00FE59                     STR_19:
  1247                           
  1248                           ; BSR set to: 57
  1249  00FE59  42                 	db	66	;'B'
  1250  00FE5A  41                 	db	65	;'A'
  1251  00FE5B  48                 	db	72	;'H'
  1252  00FE5C  20                 	db	32
  1253  00FE5D  25                 	db	37
  1254  00FE5E  33                 	db	51	;'3'
  1255  00FE5F  2E                 	db	46
  1256  00FE60  32                 	db	50	;'2'
  1257  00FE61  66                 	db	102	;'f'
  1258  00FE62  20                 	db	32
  1259  00FE63  50                 	db	80	;'P'
  1260  00FE64  25                 	db	37
  1261  00FE65  33                 	db	51	;'3'
  1262  00FE66  2E                 	db	46
  1263  00FE67  32                 	db	50	;'2'
  1264  00FE68  66                 	db	102	;'f'
  1265  00FE69  20                 	db	32
  1266  00FE6A  20                 	db	32
  1267  00FE6B  20                 	db	32
  1268  00FE6C  00                 	db	0
  1269  00FE6D                     STR_39:
  1270                           
  1271                           ; BSR set to: 57
  1272  00FE6D  20                 	db	32
  1273  00FE6E  20                 	db	32
  1274  00FE6F  20                 	db	32
  1275  00FE70  20                 	db	32
  1276  00FE71  20                 	db	32
  1277  00FE72  20                 	db	32
  1278  00FE73  20                 	db	32
  1279  00FE74  20                 	db	32
  1280  00FE75  20                 	db	32
  1281  00FE76  20                 	db	32
  1282  00FE77  20                 	db	32
  1283  00FE78  20                 	db	32
  1284  00FE79  20                 	db	32
  1285  00FE7A  20                 	db	32
  1286  00FE7B  20                 	db	32
  1287  00FE7C  20                 	db	32
  1288  00FE7D  20                 	db	32
  1289  00FE7E  20                 	db	32
  1290  00FE7F  00                 	db	0
  1291  00FE80                     STR_29:
  1292                           
  1293                           ; BSR set to: 57
  1294  00FE80  48                 	db	72	;'H'
  1295  00FE81  45                 	db	69	;'E'
  1296  00FE82  4C                 	db	76	;'L'
  1297  00FE83  50                 	db	80	;'P'
  1298  00FE84  20                 	db	32
  1299  00FE85  25                 	db	37
  1300  00FE86  73                 	db	115	;'s'
  1301  00FE87  20                 	db	32
  1302  00FE88  20                 	db	32
  1303  00FE89  20                 	db	32
  1304  00FE8A  20                 	db	32
  1305  00FE8B  20                 	db	32
  1306  00FE8C  20                 	db	32
  1307  00FE8D  20                 	db	32
  1308  00FE8E  20                 	db	32
  1309  00FE8F  20                 	db	32
  1310  00FE90  20                 	db	32
  1311  00FE91  20                 	db	32
  1312  00FE92  00                 	db	0
  1313  00FE93                     
  1314                           ; BSR set to: 57
  1315  00FE93  44                 	db	68	;'D'
  1316  00FE94  49                 	db	73	;'I'
  1317  00FE95  53                 	db	83	;'S'
  1318  00FE96  50                 	db	80	;'P'
  1319  00FE97  4C                 	db	76	;'L'
  1320  00FE98  41                 	db	65	;'A'
  1321  00FE99  59                 	db	89	;'Y'
  1322  00FE9A  20                 	db	32
  1323  00FE9B  25                 	db	37
  1324  00FE9C  73                 	db	115	;'s'
  1325  00FE9D  20                 	db	32
  1326  00FE9E  20                 	db	32
  1327  00FE9F  20                 	db	32
  1328  00FEA0  20                 	db	32
  1329  00FEA1  20                 	db	32
  1330  00FEA2  20                 	db	32
  1331  00FEA3  20                 	db	32
  1332  00FEA4  20                 	db	32
  1333  00FEA5  00                 	db	0
  1334  00FEA6                     STR_20:
  1335                           
  1336                           ; BSR set to: 57
  1337  00FEA6  53                 	db	83	;'S'
  1338  00FEA7  4F                 	db	79	;'O'
  1339  00FEA8  43                 	db	67	;'C'
  1340  00FEA9  20                 	db	32
  1341  00FEAA  25                 	db	37
  1342  00FEAB  64                 	db	100	;'d'
  1343  00FEAC  20                 	db	32
  1344  00FEAD  52                 	db	82	;'R'
  1345  00FEAE  55                 	db	85	;'U'
  1346  00FEAF  4E                 	db	78	;'N'
  1347  00FEB0  20                 	db	32
  1348  00FEB1  25                 	db	37
  1349  00FEB2  64                 	db	100	;'d'
  1350  00FEB3  20                 	db	32
  1351  00FEB4  20                 	db	32
  1352  00FEB5  20                 	db	32
  1353  00FEB6  20                 	db	32
  1354  00FEB7  20                 	db	32
  1355  00FEB8  00                 	db	0
  1356  00FEB9                     STR_12:
  1357                           
  1358                           ; BSR set to: 57
  1359  00FEB9  50                 	db	80	;'P'
  1360  00FEBA  56                 	db	86	;'V'
  1361  00FEBB  20                 	db	32
  1362  00FEBC  20                 	db	32
  1363  00FEBD  20                 	db	32
  1364  00FEBE  50                 	db	80	;'P'
  1365  00FEBF  57                 	db	87	;'W'
  1366  00FEC0  52                 	db	82	;'R'
  1367  00FEC1  20                 	db	32
  1368  00FEC2  25                 	db	37
  1369  00FEC3  33                 	db	51	;'3'
  1370  00FEC4  2E                 	db	46
  1371  00FEC5  32                 	db	50	;'2'
  1372  00FEC6  66                 	db	102	;'f'
  1373  00FEC7  20                 	db	32
  1374  00FEC8  20                 	db	32
  1375  00FEC9  20                 	db	32
  1376  00FECA  20                 	db	32
  1377  00FECB  00                 	db	0
  1378  00FECC                     STR_14:
  1379                           
  1380                           ; BSR set to: 57
  1381  00FECC  49                 	db	73	;'I'
  1382  00FECD  4E                 	db	78	;'N'
  1383  00FECE  56                 	db	86	;'V'
  1384  00FECF  20                 	db	32
  1385  00FED0  20                 	db	32
  1386  00FED1  50                 	db	80	;'P'
  1387  00FED2  57                 	db	87	;'W'
  1388  00FED3  52                 	db	82	;'R'
  1389  00FED4  20                 	db	32
  1390  00FED5  25                 	db	37
  1391  00FED6  33                 	db	51	;'3'
  1392  00FED7  2E                 	db	46
  1393  00FED8  32                 	db	50	;'2'
  1394  00FED9  66                 	db	102	;'f'
  1395  00FEDA  20                 	db	32
  1396  00FEDB  20                 	db	32
  1397  00FEDC  20                 	db	32
  1398  00FEDD  20                 	db	32
  1399  00FEDE  00                 	db	0
  1400  00FEDF                     STR_13:
  1401                           
  1402                           ; BSR set to: 57
  1403  00FEDF  4C                 	db	76	;'L'
  1404  00FEE0  4F                 	db	79	;'O'
  1405  00FEE1  41                 	db	65	;'A'
  1406  00FEE2  44                 	db	68	;'D'
  1407  00FEE3  20                 	db	32
  1408  00FEE4  50                 	db	80	;'P'
  1409  00FEE5  57                 	db	87	;'W'
  1410  00FEE6  52                 	db	82	;'R'
  1411  00FEE7  20                 	db	32
  1412  00FEE8  25                 	db	37
  1413  00FEE9  33                 	db	51	;'3'
  1414  00FEEA  2E                 	db	46
  1415  00FEEB  32                 	db	50	;'2'
  1416  00FEEC  66                 	db	102	;'f'
  1417  00FEED  20                 	db	32
  1418  00FEEE  20                 	db	32
  1419  00FEEF  20                 	db	32
  1420  00FEF0  20                 	db	32
  1421  00FEF1  00                 	db	0
  1422  00FEF2                     STR_18:
  1423                           
  1424                           ; BSR set to: 57
  1425  00FEF2  42                 	db	66	;'B'
  1426  00FEF3  41                 	db	65	;'A'
  1427  00FEF4  54                 	db	84	;'T'
  1428  00FEF5  54                 	db	84	;'T'
  1429  00FEF6  20                 	db	32
  1430  00FEF7  50                 	db	80	;'P'
  1431  00FEF8  57                 	db	87	;'W'
  1432  00FEF9  52                 	db	82	;'R'
  1433  00FEFA  20                 	db	32
  1434  00FEFB  25                 	db	37
  1435  00FEFC  33                 	db	51	;'3'
  1436  00FEFD  2E                 	db	46
  1437  00FEFE  32                 	db	50	;'2'
  1438  00FEFF  66                 	db	102	;'f'
  1439  00FF00  20                 	db	32
  1440  00FF01  20                 	db	32
  1441  00FF02  20                 	db	32
  1442  00FF03  20                 	db	32
  1443  00FF04  00                 	db	0
  1444  00FF05                     STR_16:
  1445                           
  1446                           ; BSR set to: 57
  1447  00FF05  42                 	db	66	;'B'
  1448  00FF06  56                 	db	86	;'V'
  1449  00FF07  20                 	db	32
  1450  00FF08  25                 	db	37
  1451  00FF09  32                 	db	50	;'2'
  1452  00FF0A  2E                 	db	46
  1453  00FF0B  32                 	db	50	;'2'
  1454  00FF0C  66                 	db	102	;'f'
  1455  00FF0D  20                 	db	32
  1456  00FF0E  42                 	db	66	;'B'
  1457  00FF0F  41                 	db	65	;'A'
  1458  00FF10  20                 	db	32
  1459  00FF11  25                 	db	37
  1460  00FF12  32                 	db	50	;'2'
  1461  00FF13  2E                 	db	46
  1462  00FF14  32                 	db	50	;'2'
  1463  00FF15  66                 	db	102	;'f'
  1464  00FF16  20                 	db	32
  1465  00FF17  00                 	db	0
  1466  00FF18                     STR_17:
  1467                           
  1468                           ; BSR set to: 57
  1469  00FF18  43                 	db	67	;'C'
  1470  00FF19  56                 	db	86	;'V'
  1471  00FF1A  20                 	db	32
  1472  00FF1B  25                 	db	37
  1473  00FF1C  32                 	db	50	;'2'
  1474  00FF1D  2E                 	db	46
  1475  00FF1E  32                 	db	50	;'2'
  1476  00FF1F  66                 	db	102	;'f'
  1477  00FF20  20                 	db	32
  1478  00FF21  4C                 	db	76	;'L'
  1479  00FF22  41                 	db	65	;'A'
  1480  00FF23  20                 	db	32
  1481  00FF24  25                 	db	37
  1482  00FF25  32                 	db	50	;'2'
  1483  00FF26  2E                 	db	46
  1484  00FF27  32                 	db	50	;'2'
  1485  00FF28  66                 	db	102	;'f'
  1486  00FF29  20                 	db	32
  1487  00FF2A  00                 	db	0
  1488  00FF2B                     STR_15:
  1489                           
  1490                           ; BSR set to: 57
  1491  00FF2B  50                 	db	80	;'P'
  1492  00FF2C  56                 	db	86	;'V'
  1493  00FF2D  20                 	db	32
  1494  00FF2E  25                 	db	37
  1495  00FF2F  32                 	db	50	;'2'
  1496  00FF30  2E                 	db	46
  1497  00FF31  32                 	db	50	;'2'
  1498  00FF32  66                 	db	102	;'f'
  1499  00FF33  20                 	db	32
  1500  00FF34  50                 	db	80	;'P'
  1501  00FF35  41                 	db	65	;'A'
  1502  00FF36  20                 	db	32
  1503  00FF37  25                 	db	37
  1504  00FF38  32                 	db	50	;'2'
  1505  00FF39  2E                 	db	46
  1506  00FF3A  32                 	db	50	;'2'
  1507  00FF3B  66                 	db	102	;'f'
  1508  00FF3C  20                 	db	32
  1509  00FF3D  00                 	db	0
  1510  00FF3E                     STR_8:
  1511                           
  1512                           ; BSR set to: 57
  1513  00FF3E  20                 	db	32
  1514  00FF3F  56                 	db	86	;'V'
  1515  00FF40  54                 	db	84	;'T'
  1516  00FF41  45                 	db	69	;'E'
  1517  00FF42  52                 	db	82	;'R'
  1518  00FF43  4D                 	db	77	;'M'
  1519  00FF44  20                 	db	32
  1520  00FF45  23                 	db	35
  1521  00FF46  32                 	db	50	;'2'
  1522  00FF47  20                 	db	32
  1523  00FF48  20                 	db	32
  1524  00FF49  20                 	db	32
  1525  00FF4A  20                 	db	32
  1526  00FF4B  20                 	db	32
  1527  00FF4C  20                 	db	32
  1528  00FF4D  20                 	db	32
  1529  00FF4E  00                 	db	0
  1530  00FF4F                     STR_4:
  1531                           
  1532                           ; BSR set to: 57
  1533  00FF4F  20                 	db	32
  1534  00FF50  4E                 	db	78	;'N'
  1535  00FF51  53                 	db	83	;'S'
  1536  00FF52  41                 	db	65	;'A'
  1537  00FF53  53                 	db	83	;'S'
  1538  00FF54  50                 	db	80	;'P'
  1539  00FF55  4F                 	db	79	;'O'
  1540  00FF56  4F                 	db	79	;'O'
  1541  00FF57  4B                 	db	75	;'K'
  1542  00FF58  20                 	db	32
  1543  00FF59  20                 	db	32
  1544  00FF5A  20                 	db	32
  1545  00FF5B  20                 	db	32
  1546  00FF5C  20                 	db	32
  1547  00FF5D  20                 	db	32
  1548  00FF5E  20                 	db	32
  1549  00FF5F  00                 	db	0
  1550  00FF60                     STR_1:
  1551                           
  1552                           ; BSR set to: 57
  1553  00FF60  20                 	db	32
  1554  00FF61  4D                 	db	77	;'M'
  1555  00FF62  42                 	db	66	;'B'
  1556  00FF63  4D                 	db	77	;'M'
  1557  00FF64  43                 	db	67	;'C'
  1558  00FF65  20                 	db	32
  1559  00FF66  53                 	db	83	;'S'
  1560  00FF67  4F                 	db	79	;'O'
  1561  00FF68  4C                 	db	76	;'L'
  1562  00FF69  41                 	db	65	;'A'
  1563  00FF6A  52                 	db	82	;'R'
  1564  00FF6B  4D                 	db	77	;'M'
  1565  00FF6C  4F                 	db	79	;'O'
  1566  00FF6D  4E                 	db	78	;'N'
  1567  00FF6E  20                 	db	32
  1568  00FF6F  20                 	db	32
  1569  00FF70  00                 	db	0
  1570  00FF71                     STR_5:
  1571                           
  1572                           ; BSR set to: 57
  1573  00FF71  20                 	db	32
  1574  00FF72  53                 	db	83	;'S'
  1575  00FF73  45                 	db	69	;'E'
  1576  00FF74  51                 	db	81	;'Q'
  1577  00FF75  55                 	db	85	;'U'
  1578  00FF76  45                 	db	69	;'E'
  1579  00FF77  4E                 	db	78	;'N'
  1580  00FF78  43                 	db	67	;'C'
  1581  00FF79  45                 	db	69	;'E'
  1582  00FF7A  20                 	db	32
  1583  00FF7B  54                 	db	84	;'T'
  1584  00FF7C  45                 	db	69	;'E'
  1585  00FF7D  53                 	db	83	;'S'
  1586  00FF7E  54                 	db	84	;'T'
  1587  00FF7F  20                 	db	32
  1588  00FF80  20                 	db	32
  1589  00FF81  00                 	db	0
  1590  00FF82                     STR_11:
  1591                           
  1592                           ; BSR set to: 57
  1593  00FF82  25                 	db	37
  1594  00FF83  64                 	db	100	;'d'
  1595  00FF84  20                 	db	32
  1596  00FF85  25                 	db	37
  1597  00FF86  32                 	db	50	;'2'
  1598  00FF87  2E                 	db	46
  1599  00FF88  34                 	db	52	;'4'
  1600  00FF89  66                 	db	102	;'f'
  1601  00FF8A  2C                 	db	44
  1602  00FF8B  20                 	db	32
  1603  00FF8C  25                 	db	37
  1604  00FF8D  64                 	db	100	;'d'
  1605  00FF8E  20                 	db	32
  1606  00FF8F  20                 	db	32
  1607  00FF90  20                 	db	32
  1608  00FF91  23                 	db	35
  1609  00FF92  00                 	db	0
  1610  00FF93                     STR_9:
  1611                           
  1612                           ; BSR set to: 57
  1613  00FF93  25                 	db	37
  1614  00FF94  64                 	db	100	;'d'
  1615  00FF95  20                 	db	32
  1616  00FF96  25                 	db	37
  1617  00FF97  32                 	db	50	;'2'
  1618  00FF98  2E                 	db	46
  1619  00FF99  34                 	db	52	;'4'
  1620  00FF9A  66                 	db	102	;'f'
  1621  00FF9B  20                 	db	32
  1622  00FF9C  20                 	db	32
  1623  00FF9D  20                 	db	32
  1624  00FF9E  25                 	db	37
  1625  00FF9F  64                 	db	100	;'d'
  1626  00FFA0  20                 	db	32
  1627  00FFA1  20                 	db	32
  1628  00FFA2  00                 	db	0
  1629  00FFA3                     STR_33:
  1630                           
  1631                           ; BSR set to: 57
  1632  00FFA3  76                 	db	118	;'v'
  1633  00FFA4  74                 	db	116	;'t'
  1634  00FFA5  65                 	db	101	;'e'
  1635  00FFA6  72                 	db	114	;'r'
  1636  00FFA7  6D                 	db	109	;'m'
  1637  00FFA8  20                 	db	32
  1638  00FFA9  25                 	db	37
  1639  00FFAA  78                 	db	120	;'x'
  1640  00FFAB  3A                 	db	58	;':'
  1641  00FFAC  25                 	db	37
  1642  00FFAD  78                 	db	120	;'x'
  1643  00FFAE  20                 	db	32
  1644  00FFAF  20                 	db	32
  1645  00FFB0  20                 	db	32
  1646  00FFB1  00                 	db	0
  1647  00FFB2                     STR_2:
  1648                           
  1649                           ; BSR set to: 57
  1650  00FFB2  20                 	db	32
  1651  00FFB3  56                 	db	86	;'V'
  1652  00FFB4  65                 	db	101	;'e'
  1653  00FFB5  72                 	db	114	;'r'
  1654  00FFB6  73                 	db	115	;'s'
  1655  00FFB7  69                 	db	105	;'i'
  1656  00FFB8  6F                 	db	111	;'o'
  1657  00FFB9  6E                 	db	110	;'n'
  1658  00FFBA  20                 	db	32
  1659  00FFBB  25                 	db	37
  1660  00FFBC  73                 	db	115	;'s'
  1661  00FFBD  20                 	db	32
  1662  00FFBE  20                 	db	32
  1663  00FFBF  20                 	db	32
  1664  00FFC0  00                 	db	0
  1665  00FFC1                     STR_27:
  1666                           
  1667                           ; BSR set to: 57
  1668  00FFC1  44                 	db	68	;'D'
  1669  00FFC2  65                 	db	101	;'e'
  1670  00FFC3  63                 	db	99	;'c'
  1671  00FFC4  20                 	db	32
  1672  00FFC5  20                 	db	32
  1673  00FFC6  34                 	db	52	;'4'
  1674  00FFC7  20                 	db	32
  1675  00FFC8  32                 	db	50	;'2'
  1676  00FFC9  30                 	db	48	;'0'
  1677  00FFCA  31                 	db	49	;'1'
  1678  00FFCB  39                 	db	57	;'9'
  1679  00FFCC  00                 	db	0
  1680  00FFCD                     STR_31:
  1681                           
  1682                           ; BSR set to: 57
  1683  00FFCD  25                 	db	37
  1684  00FFCE  73                 	db	115	;'s'
  1685  00FFCF  20                 	db	32
  1686  00FFD0  20                 	db	32
  1687  00FFD1  20                 	db	32
  1688  00FFD2  20                 	db	32
  1689  00FFD3  20                 	db	32
  1690  00FFD4  20                 	db	32
  1691  00FFD5  20                 	db	32
  1692  00FFD6  00                 	db	0
  1693  00FFD7                     STR_28:
  1694                           
  1695                           ; BSR set to: 57
  1696  00FFD7  32                 	db	50	;'2'
  1697  00FFD8  33                 	db	51	;'3'
  1698  00FFD9  3A                 	db	58	;':'
  1699  00FFDA  30                 	db	48	;'0'
  1700  00FFDB  30                 	db	48	;'0'
  1701  00FFDC  3A                 	db	58	;':'
  1702  00FFDD  35                 	db	53	;'5'
  1703  00FFDE  39                 	db	57	;'9'
  1704  00FFDF  00                 	db	0
  1705  00FFE0                     STR_3:
  1706                           
  1707                           ; BSR set to: 57
  1708  00FFE0  30                 	db	48	;'0'
  1709  00FFE1  2E                 	db	46
  1710  00FFE2  39                 	db	57	;'9'
  1711  00FFE3  39                 	db	57	;'9'
  1712  00FFE4  38                 	db	56	;'8'
  1713  00FFE5  00                 	db	0
  1714  00FFE6                     STR_46:
  1715                           
  1716                           ; BSR set to: 57
  1717  00FFE6  49                 	db	73	;'I'
  1718  00FFE7  4E                 	db	78	;'N'
  1719  00FFE8  46                 	db	70	;'F'
  1720  00FFE9  00                 	db	0
  1721  00FFEA                     STR_50:
  1722                           
  1723                           ; BSR set to: 57
  1724  00FFEA  4E                 	db	78	;'N'
  1725  00FFEB  41                 	db	65	;'A'
  1726  00FFEC  4E                 	db	78	;'N'
  1727  00FFED  00                 	db	0
  1728  00FFEE                     STR_47:
  1729                           
  1730                           ; BSR set to: 57
  1731  00FFEE  69                 	db	105	;'i'
  1732  00FFEF  6E                 	db	110	;'n'
  1733  00FFF0  66                 	db	102	;'f'
  1734  00FFF1  00                 	db	0
  1735  00FFF2                     STR_51:
  1736                           
  1737                           ; BSR set to: 57
  1738  00FFF2  6E                 	db	110	;'n'
  1739  00FFF3  61                 	db	97	;'a'
  1740  00FFF4  6E                 	db	110	;'n'
  1741  00FFF5  00                 	db	0
  1742  00FFF6                     STR_54:
  1743                           
  1744                           ; BSR set to: 57
  1745  00FFF6  6C                 	db	108	;'l'
  1746  00FFF7  66                 	db	102	;'f'
  1747  00FFF8  00                 	db	0
  1748  00FFF9                     STR_25:
  1749                           
  1750                           ; BSR set to: 57
  1751  00FFF9  25                 	db	37
  1752  00FFFA  63                 	db	99	;'c'
  1753  00FFFB  00                 	db	0
  1754  00FFFC                     STR_24:
  1755                           
  1756                           ; BSR set to: 57
  1757  00FFFC  25                 	db	37
  1758  00FFFD  73                 	db	115	;'s'
  1759  00FFFE  00                 	db	0
  1760  0000                     
  1761                           ; #config settings
  1762  00FFFF  00                 	db	0	; dummy byte at the end
  1763  0000                     
  1764                           	psect	cinit
  1765  017694                     __pcinit:
  1766                           	opt callstack 0
  1767  017694                     start_initialization:
  1768                           	opt callstack 0
  1769  017694                     __initialization:
  1770                           	opt callstack 0
  1771                           
  1772                           ; Initialize objects allocated to BANK2 (188 bytes)
  1773                           ; load TBLPTR registers with __pidataBANK2
  1774  017694  0EE2               	movlw	low __pidataBANK2
  1775  017696  6EF6               	movwf	tblptrl,c
  1776  017698  0E7A               	movlw	high __pidataBANK2
  1777  01769A  6EF7               	movwf	tblptrh,c
  1778  01769C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1779  01769E  6EF8               	movwf	tblptru,c
  1780  0176A0  EE00  F200         	lfsr	0,__pdataBANK2
  1781  0176A4  EE20 F0BC          	lfsr	2,188
  1782  0176A8                     copy_data0:
  1783  0176A8  0009               	tblrd		*+
  1784  0176AA  006F FFD7 FFEE     	movff	tablat,postinc0
  1785  0176B0  50DD               	movf	postdec2,w,c
  1786  0176B2  50D9               	movf	fsr2l,w,c
  1787  0176B4  E1F9               	bnz	copy_data0
  1788                           
  1789                           ; Initialize objects allocated to BANK1 (181 bytes)
  1790                           ; load TBLPTR registers with __pidataBANK1
  1791  0176B6  0E56               	movlw	low __pidataBANK1
  1792  0176B8  6EF6               	movwf	tblptrl,c
  1793  0176BA  0E7C               	movlw	high __pidataBANK1
  1794  0176BC  6EF7               	movwf	tblptrh,c
  1795  0176BE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1796  0176C0  6EF8               	movwf	tblptru,c
  1797  0176C2  EE00  F100         	lfsr	0,__pdataBANK1
  1798  0176C6  EE20 F0B5          	lfsr	2,181
  1799  0176CA                     copy_data1:
  1800  0176CA  0009               	tblrd		*+
  1801  0176CC  006F FFD7 FFEE     	movff	tablat,postinc0
  1802  0176D2  50DD               	movf	postdec2,w,c
  1803  0176D4  50D9               	movf	fsr2l,w,c
  1804  0176D6  E1F9               	bnz	copy_data1
  1805                           
  1806                           ; Initialize objects allocated to BANK0 (54 bytes)
  1807                           ; load TBLPTR registers with __pidataBANK0
  1808  0176D8  0E3A               	movlw	low __pidataBANK0
  1809  0176DA  6EF6               	movwf	tblptrl,c
  1810  0176DC  0E8D               	movlw	high __pidataBANK0
  1811  0176DE  6EF7               	movwf	tblptrh,c
  1812  0176E0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1813  0176E2  6EF8               	movwf	tblptru,c
  1814  0176E4  EE00  F0C3         	lfsr	0,__pdataBANK0
  1815  0176E8  EE20 F036          	lfsr	2,54
  1816  0176EC                     copy_data2:
  1817  0176EC  0009               	tblrd		*+
  1818  0176EE  006F FFD7 FFEE     	movff	tablat,postinc0
  1819  0176F4  50DD               	movf	postdec2,w,c
  1820  0176F6  50D9               	movf	fsr2l,w,c
  1821  0176F8  E1F9               	bnz	copy_data2
  1822                           
  1823                           ; Clear objects allocated to BIGRAM (290 bytes)
  1824  0176FA  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1825  0176FE  EE20 F122          	lfsr	2,290
  1826  017702                     clear_0:
  1827  017702  6AEE               	clrf	postinc0,c
  1828  017704  50DD               	movf	postdec2,w,c
  1829  017706  50D9               	movf	fsr2l,w,c
  1830  017708  E1FC               	bnz	clear_0
  1831  01770A  50DA               	movf	fsr2h,w,c
  1832  01770C  E1FA               	bnz	clear_0
  1833                           
  1834                           ; Clear objects allocated to BANK6 (255 bytes)
  1835  01770E  EE01  F200         	lfsr	0,__pbssBANK6
  1836  017712  EE20 F0FF          	lfsr	2,255
  1837  017716                     clear_1:
  1838  017716  6AEE               	clrf	postinc0,c
  1839  017718  50DD               	movf	postdec2,w,c
  1840  01771A  50D9               	movf	fsr2l,w,c
  1841  01771C  E1FC               	bnz	clear_1
  1842  01771E  50DA               	movf	fsr2h,w,c
  1843  017720  E1FA               	bnz	clear_1
  1844                           
  1845                           ; Clear objects allocated to BANK5 (255 bytes)
  1846  017722  EE01  F100         	lfsr	0,__pbssBANK5
  1847  017726  EE20 F0FF          	lfsr	2,255
  1848  01772A                     clear_2:
  1849  01772A  6AEE               	clrf	postinc0,c
  1850  01772C  50DD               	movf	postdec2,w,c
  1851  01772E  50D9               	movf	fsr2l,w,c
  1852  017730  E1FC               	bnz	clear_2
  1853  017732  50DA               	movf	fsr2h,w,c
  1854  017734  E1FA               	bnz	clear_2
  1855                           
  1856                           ; Clear objects allocated to BANK4 (134 bytes)
  1857  017736  EE01  F000         	lfsr	0,__pbssBANK4
  1858  01773A  0E86               	movlw	134
  1859  01773C                     clear_3:
  1860  01773C  6AEE               	clrf	postinc0,c
  1861  01773E  06E8               	decf	wreg,f,c
  1862  017740  E1FD               	bnz	clear_3
  1863                           
  1864                           ; Clear objects allocated to BANK3 (228 bytes)
  1865  017742  EE00  F300         	lfsr	0,__pbssBANK3
  1866  017746  0EE4               	movlw	228
  1867  017748                     clear_4:
  1868  017748  6AEE               	clrf	postinc0,c
  1869  01774A  06E8               	decf	wreg,f,c
  1870  01774C  E1FD               	bnz	clear_4
  1871                           
  1872                           ; Clear objects allocated to BANK2 (64 bytes)
  1873  01774E  EE00  F2BC         	lfsr	0,__pbssBANK2
  1874  017752  0E40               	movlw	64
  1875  017754                     clear_5:
  1876  017754  6AEE               	clrf	postinc0,c
  1877  017756  06E8               	decf	wreg,f,c
  1878  017758  E1FD               	bnz	clear_5
  1879                           
  1880                           ; Clear objects allocated to BANK1 (32 bytes)
  1881  01775A  EE00  F1B5         	lfsr	0,__pbssBANK1
  1882  01775E  0E20               	movlw	32
  1883  017760                     clear_6:
  1884  017760  6AEE               	clrf	postinc0,c
  1885  017762  06E8               	decf	wreg,f,c
  1886  017764  E1FD               	bnz	clear_6
  1887                           
  1888                           ; Clear objects allocated to BANK0 (99 bytes)
  1889  017766  EE00  F060         	lfsr	0,__pbssBANK0
  1890  01776A  0E63               	movlw	99
  1891  01776C                     clear_7:
  1892  01776C  6AEE               	clrf	postinc0,c
  1893  01776E  06E8               	decf	wreg,f,c
  1894  017770  E1FD               	bnz	clear_7
  1895                           
  1896                           ; Clear objects allocated to COMRAM (36 bytes)
  1897  017772  EE00  F001         	lfsr	0,__pbssCOMRAM
  1898  017776  0E24               	movlw	36
  1899  017778                     clear_8:
  1900  017778  6AEE               	clrf	postinc0,c
  1901  01777A  06E8               	decf	wreg,f,c
  1902  01777C  E1FD               	bnz	clear_8
  1903                           
  1904                           ;
  1905                           ; Setup IVTBASE
  1906                           ;
  1907  01777E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1908  017780  6ED5               	movwf	213,c
  1909  017782  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1910  017784  6ED6               	movwf	214,c
  1911  017786  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1912  017788  6ED7               	movwf	215,c
  1913  01778A                     end_of_initialization:
  1914                           	opt callstack 0
  1915  01778A                     __end_of__initialization:
  1916                           	opt callstack 0
  1917  01778A  0100               	movlb	0
  1918  01778C  EFC1  F08E         	goto	_main	;jump to C main() function
  1919                           
  1920                           	psect	bssCOMRAM
  1921  000001                     __pbssCOMRAM:
  1922                           	opt callstack 0
  1923  000001                     _UART2_RxInterruptHandler:
  1924                           	opt callstack 0
  1925  000001                     	ds	3
  1926  000004                     _INT1_InterruptHandler:
  1927                           	opt callstack 0
  1928  000004                     	ds	3
  1929  000007                     _INT0_InterruptHandler:
  1930                           	opt callstack 0
  1931  000007                     	ds	3
  1932  00000A                     _width:
  1933                           	opt callstack 0
  1934  00000A                     	ds	2
  1935  00000C                     _prec:
  1936                           	opt callstack 0
  1937  00000C                     	ds	2
  1938  00000E                     _flags:
  1939                           	opt callstack 0
  1940  00000E                     	ds	2
  1941  000010                     TMR3_ISR@CountCallBack:
  1942                           	opt callstack 0
  1943  000010                     	ds	2
  1944  000012                     _timer3ReloadVal:
  1945                           	opt callstack 0
  1946  000012                     	ds	2
  1947  000014                     TMR5_ISR@CountCallBack:
  1948                           	opt callstack 0
  1949  000014                     	ds	2
  1950  000016                     _timer5ReloadVal:
  1951                           	opt callstack 0
  1952  000016                     	ds	2
  1953  000018                     _mode_sw:
  1954                           	opt callstack 0
  1955  000018                     	ds	1
  1956  000019                     _uart2RxCount:
  1957                           	opt callstack 0
  1958  000019                     	ds	1
  1959  00001A                     _uart2RxTail:
  1960                           	opt callstack 0
  1961  00001A                     	ds	1
  1962  00001B                     _uart2RxHead:
  1963                           	opt callstack 0
  1964  00001B                     	ds	1
  1965  00001C                     _uart2TxBufferRemaining:
  1966                           	opt callstack 0
  1967  00001C                     	ds	1
  1968  00001D                     _uart2TxTail:
  1969                           	opt callstack 0
  1970  00001D                     	ds	1
  1971  00001E                     _uart2TxHead:
  1972                           	opt callstack 0
  1973  00001E                     	ds	1
  1974  00001F                     _uart1RxCount:
  1975                           	opt callstack 0
  1976  00001F                     	ds	1
  1977  000020                     _uart1RxTail:
  1978                           	opt callstack 0
  1979  000020                     	ds	1
  1980  000021                     _uart1RxHead:
  1981                           	opt callstack 0
  1982  000021                     	ds	1
  1983  000022                     _uart1TxBufferRemaining:
  1984                           	opt callstack 0
  1985  000022                     	ds	1
  1986  000023                     _uart1TxTail:
  1987                           	opt callstack 0
  1988  000023                     	ds	1
  1989  000024                     _uart1TxHead:
  1990                           	opt callstack 0
  1991  000024                     	ds	1
  1992                           
  1993                           	psect	bssBANK0
  1994  000060                     __pbssBANK0:
  1995                           	opt callstack 0
  1996  000060                     _S:
  1997                           	opt callstack 0
  1998  000060                     	ds	41
  1999  000089                     _spi_link:
  2000                           	opt callstack 0
  2001  000089                     	ds	12
  2002  000095                     floorf@F524:
  2003                           	opt callstack 0
  2004  000095                     	ds	4
  2005  000099                     ___fpclassifyf@F463:
  2006                           	opt callstack 0
  2007  000099                     	ds	4
  2008  00009D                     _utctime:
  2009                           	opt callstack 0
  2010  00009D                     	ds	4
  2011  0000A1                     wdtdelay@dcount:
  2012                           	opt callstack 0
  2013  0000A1                     	ds	4
  2014  0000A5                     _P:
  2015                           	opt callstack 0
  2016  0000A5                     	ds	4
  2017  0000A9                     _TMR3_InterruptHandler:
  2018                           	opt callstack 0
  2019  0000A9                     	ds	3
  2020  0000AC                     _TMR5_InterruptHandler:
  2021                           	opt callstack 0
  2022  0000AC                     	ds	3
  2023  0000AF                     _TMR6_InterruptHandler:
  2024                           	opt callstack 0
  2025  0000AF                     	ds	3
  2026  0000B2                     _ADCC_ADTI_InterruptHandler:
  2027                           	opt callstack 0
  2028  0000B2                     	ds	3
  2029  0000B5                     _ADCC_ADI_InterruptHandler:
  2030                           	opt callstack 0
  2031  0000B5                     	ds	3
  2032  0000B8                     _UART1_TxInterruptHandler:
  2033                           	opt callstack 0
  2034  0000B8                     	ds	3
  2035  0000BB                     _UART1_RxInterruptHandler:
  2036                           	opt callstack 0
  2037  0000BB                     	ds	3
  2038  0000BE                     _UART2_TxInterruptHandler:
  2039                           	opt callstack 0
  2040  0000BE                     	ds	3
  2041  0000C1                     _nout:
  2042                           	opt callstack 0
  2043  0000C1                     	ds	2
  2044                           
  2045                           	psect	dataBANK0
  2046  0000C3                     __pdataBANK0:
  2047                           	opt callstack 0
  2048  0000C3                     _R:
  2049                           	opt callstack 0
  2050  0000C3                     	ds	40
  2051  0000EB                     stoa@F1166:
  2052                           	opt callstack 0
  2053  0000EB                     	ds	7
  2054  0000F2                     _H:
  2055                           	opt callstack 0
  2056  0000F2                     	ds	7
  2057                           
  2058                           	psect	bssBANK1
  2059  0001B5                     __pbssBANK1:
  2060                           	opt callstack 0
  2061  0001B5                     _tickCount:
  2062                           	opt callstack 0
  2063  0001B5                     	ds	24
  2064  0001CD                     _seed:
  2065                           	opt callstack 0
  2066  0001CD                     	ds	8
  2067                           
  2068                           	psect	dataBANK1
  2069  000100                     __pdataBANK1:
  2070                           	opt callstack 0
  2071  000100                     _C:
  2072                           	opt callstack 0
  2073  000100                     	ds	165
  2074  0001A5                     _port_data:
  2075                           	opt callstack 0
  2076  0001A5                     	ds	16
  2077                           
  2078                           	psect	bssBANK2
  2079  0002BC                     __pbssBANK2:
  2080                           	opt callstack 0
  2081  0002BC                     _uart1TxBuffer:
  2082                           	opt callstack 0
  2083  0002BC                     	ds	64
  2084                           
  2085                           	psect	dataBANK2
  2086  000200                     __pdataBANK2:
  2087                           	opt callstack 0
  2088  000200                     _V:
  2089                           	opt callstack 0
  2090  000200                     	ds	188
  2091                           
  2092                           	psect	bssBANK3
  2093  000300                     __pbssBANK3:
  2094                           	opt callstack 0
  2095  000300                     lp_filter@smooth:
  2096                           	opt callstack 0
  2097  000300                     	ds	84
  2098  000354                     _uart2TxBuffer:
  2099                           	opt callstack 0
  2100  000354                     	ds	64
  2101  000394                     _dbuf:
  2102                           	opt callstack 0
  2103  000394                     	ds	80
  2104                           
  2105                           	psect	bssBANK4
  2106  000400                     __pbssBANK4:
  2107                           	opt callstack 0
  2108  000400                     _ring_buf2:
  2109                           	opt callstack 0
  2110  000400                     	ds	67
  2111  000443                     _ring_buf1:
  2112                           	opt callstack 0
  2113  000443                     	ds	67
  2114                           
  2115                           	psect	bssBANK5
  2116  000500                     __pbssBANK5:
  2117                           	opt callstack 0
  2118  000500                     _uart1RxBuffer:
  2119                           	opt callstack 0
  2120  000500                     	ds	255
  2121                           
  2122                           	psect	bssBANK6
  2123  000600                     __pbssBANK6:
  2124                           	opt callstack 0
  2125  000600                     _uart2RxBuffer:
  2126                           	opt callstack 0
  2127  000600                     	ds	255
  2128                           
  2129                           	psect	bssBIGRAM
  2130  0006FF                     __pbssBIGRAM:
  2131                           	opt callstack 0
  2132  0006FF                     _D:
  2133                           	opt callstack 0
  2134  0006FF                     	ds	290
  2135                           
  2136                           	psect	cstackBANK1
  2137  0001D5                     __pcstackBANK1:
  2138                           	opt callstack 0
  2139  0001D5                     ??_TMR3_ISR:
  2140                           
  2141                           ; 1 bytes @ 0x0
  2142  0001D5                     	ds	13
  2143                           
  2144                           	psect	cstackCOMRAM
  2145  000045                     __pcstackCOMRAM:
  2146                           	opt callstack 0
  2147  000045                     ??_ADCC_ThresholdISR:
  2148  000045                     
  2149                           ; 1 bytes @ 0x0
  2150  000045                     	ds	5
  2151  00004A                     ??_TMR6_ISR:
  2152                           
  2153                           ; 1 bytes @ 0x5
  2154  00004A                     	ds	1
  2155  00004B                     ??_INT1_ISR:
  2156  00004B                     
  2157                           ; 1 bytes @ 0x6
  2158  00004B                     	ds	4
  2159  00004F                     ??_TMR5_ISR:
  2160                           
  2161                           ; 1 bytes @ 0xA
  2162  00004F                     	ds	4
  2163                           
  2164 ;;
  2165 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2166 ;;
  2167 ;; *************** function _main *****************
  2168 ;; Defined at:
  2169 ;;		line 171 in file "main.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  k               1  [STACK] unsigned char 
  2174 ;;  j               1  [STACK] unsigned char 
  2175 ;;  i               1  [STACK] unsigned char 
  2176 ;;  inp_index       1  [STACK] unsigned char 
  2177 ;;  mode            1  [STACK] enum E17022
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1  [STACK] void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels required when called:   20
  2193 ;; This function calls:
  2194 ;;		_SYSTEM_Initialize
  2195 ;;		_StartTimer
  2196 ;;		_TimerDone
  2197 ;;		_WaitMs
  2198 ;;		_calc_model_data
  2199 ;;		_check_adc_scan
  2200 ;;		_check_enter_button
  2201 ;;		_check_help
  2202 ;;		_clear_adc_scan
  2203 ;;		_clear_hid_pflags
  2204 ;;		_convert_adc_data
  2205 ;;		_eaDogM_WriteCommand
  2206 ;;		_get_raw_result
  2207 ;;		_get_switch
  2208 ;;		_get_vterm_ptr
  2209 ;;		_hid_display
  2210 ;;		_init_bsoc
  2211 ;;		_init_display
  2212 ;;		_lp_filter
  2213 ;;		_mode_lamp_dim
  2214 ;;		_set_display_info
  2215 ;;		_set_vterm
  2216 ;;		_sprintf
  2217 ;;		_srand
  2218 ;;		_start_adc_scan
  2219 ;;		_start_switch_handler
  2220 ;;		_static_soc
  2221 ;;		_update_lcd
  2222 ;; This function is called by:
  2223 ;;		Startup code after reset
  2224 ;; This function uses a reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text0
  2228  011D82                     __ptext0:
  2229                           	opt callstack 0
  2230  011D82                     _main:
  2231                           	opt callstack 0
  2232                           
  2233                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2234  011D82  0E05               	movlw	5
  2235  011D84  26E1               	addwf	fsr1l,f,c
  2236  011D86  0E00               	movlw	0
  2237  011D88  22E2               	addwfc	fsr1h,f,c
  2238                           
  2239                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2240                           ;stkvar	_inp_index @ sp[(-5)+3]
  2241                           
  2242                           ;incstack = 0
  2243  011D8A  0EFE               	movlw	-2
  2244  011D8C  6AE3               	clrf	plusw1,c
  2245                           
  2246                           ;stkvar	_i @ sp[(-5)+2]
  2247  011D8E  0EFD               	movlw	-3
  2248  011D90  6AE3               	clrf	plusw1,c
  2249                           
  2250                           ;stkvar	_j @ sp[(-5)+1]
  2251  011D92  0EFC               	movlw	-4
  2252  011D94  6AE3               	clrf	plusw1,c
  2253  011D96  2AE3               	incf	plusw1,f,c
  2254                           
  2255                           ;stkvar	_k @ sp[(-5)+0]
  2256  011D98  0EFB               	movlw	-5
  2257  011D9A  6AE3               	clrf	plusw1,c
  2258  011D9C  82E3               	bsf	plusw1,1,c
  2259                           
  2260                           ;main.c: 177:  SYSTEM_Initialize();
  2261  011D9E  ECCA  F0C4         	call	_SYSTEM_Initialize	;wreg free
  2262                           
  2263                           ; BSR set to: 60
  2264                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2265  011DA2  8ED2               	bsf	210,7,c	;volatile
  2266                           
  2267                           ; BSR set to: 60
  2268                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2269  011DA4  8CD2               	bsf	210,6,c	;volatile
  2270                           
  2271                           ; BSR set to: 60
  2272                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2273  011DA6  0102               	movlb	2	; () banked
  2274  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2275                           
  2276                           ; BSR set to: 2
  2277                           ;main.c: 190:  WaitMs(300);
  2278  011DAA  0E2C               	movlw	44
  2279  011DAC  6EE6               	movwf	postinc1,c
  2280  011DAE  0E01               	movlw	1
  2281  011DB0  6EE6               	movwf	postinc1,c
  2282  011DB2  ECB8  F0C6         	call	_WaitMs	;wreg free
  2283                           
  2284                           ;main.c: 191:  if (PORTBbits.RB0) {
  2285  011DB6  A0CB               	btfss	203,0,c	;volatile
  2286  011DB8  D004               	goto	l11088
  2287                           
  2288                           ;main.c: 192:   mode = UI_STATE_HOST;
  2289                           ;stkvar	_mode @ sp[(-5)+4]
  2290  011DBA  0EFF               	movlw	-1
  2291  011DBC  6AE3               	clrf	plusw1,c
  2292  011DBE  2AE3               	incf	plusw1,f,c
  2293                           
  2294                           ;main.c: 193:  } else {
  2295  011DC0  D004               	goto	l11090
  2296  011DC2                     l11088:
  2297                           
  2298                           ;main.c: 194:   mode = UI_STATE_LOG;
  2299                           ;stkvar	_mode @ sp[(-5)+4]
  2300  011DC2  0EFF               	movlw	-1
  2301  011DC4  6AE3               	clrf	plusw1,c
  2302  011DC6  80E3               	bsf	plusw1,0,c
  2303  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2304  011DCA                     l11090:
  2305                           
  2306                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2307                           ;stkvar	_mode @ sp[(-5)+4]
  2308  011DCA  0EFF               	movlw	-1
  2309  011DCC  04E3               	decf	plusw1,w,c
  2310  011DCE  A4D8               	btfss	status,2,c
  2311  011DD0  D007               	goto	l1338
  2312                           
  2313                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2314  011DD2  80BD               	bsf	189,0,c	;volatile
  2315                           
  2316                           ;main.c: 199:   V.mode_pwm = 70;
  2317  011DD4  0E00               	movlw	0
  2318  011DD6  0102               	movlb	2	; () banked
  2319  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2320  011DDA  0E46               	movlw	70
  2321  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2322                           
  2323                           ;main.c: 200:  } else {
  2324  011DDE  D004               	goto	l11094
  2325  011DE0                     l1338:
  2326  011DE0  90BD               	bcf	189,0,c	;volatile
  2327                           
  2328                           ;main.c: 202:   V.mode_pwm = 0;
  2329  011DE2  0102               	movlb	2	; () banked
  2330  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2331  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2332  011DE8                     l11094:
  2333                           
  2334                           ; BSR set to: 2
  2335                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2336  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2337  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2338  011DF4  ECA5  F0CA         	call	_mode_lamp_dim	;wreg free
  2339  011DF8  D0D4               	goto	l11142
  2340  011DFA                     l11096:
  2341                           
  2342                           ; BSR set to: 2
  2343                           ;main.c: 215:    init_display();
  2344  011DFA  ECC8  F0BB         	call	_init_display	;wreg free
  2345                           
  2346                           ; BSR set to: 61
  2347                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2348  011DFE  0E0C               	movlw	12
  2349  011E00  6EE6               	movwf	postinc1,c
  2350  011E02  EC02  F0CB         	call	_eaDogM_WriteCommand	;wreg free
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;main.c: 218:    V.ui_state = mode;
  2354                           ;stkvar	_mode @ sp[(-5)+4]
  2355  011E06  0EFF               	movlw	-1
  2356  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;main.c: 219:    srand(1957);
  2360  011E0E  0EA5               	movlw	165
  2361  011E10  6EE6               	movwf	postinc1,c
  2362  011E12  0E07               	movlw	7
  2363  011E14  6EE6               	movwf	postinc1,c
  2364  011E16  EC08  F0C7         	call	_srand	;wreg free
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;main.c: 220:    set_vterm(0);
  2368  011E1A  0E00               	movlw	0
  2369  011E1C  6EE6               	movwf	postinc1,c
  2370  011E1E  EC40  F0CA         	call	_set_vterm	;wreg free
  2371                           
  2372                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2373  011E22  0E60               	movlw	low STR_1
  2374  011E24  6EE6               	movwf	postinc1,c
  2375  011E26  0EFF               	movlw	high STR_1
  2376  011E28  6EE6               	movwf	postinc1,c
  2377  011E2A  0E00               	movlw	0
  2378  011E2C  6EE6               	movwf	postinc1,c
  2379  011E2E  0E00               	movlw	0
  2380  011E30  6EE6               	movwf	postinc1,c
  2381  011E32  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2382  011E36  0060  F097  FFE6   	movff	btemp,postinc1
  2383  011E3C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2384  011E42  0E04               	movlw	4
  2385  011E44  6EE6               	movwf	postinc1,c
  2386  011E46  EC44  F0BA         	call	_sprintf	;wreg free
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.998");
  2390  011E4A  0EE0               	movlw	low STR_3
  2391  011E4C  6EE6               	movwf	postinc1,c
  2392  011E4E  0EFF               	movlw	high STR_3
  2393  011E50  6EE6               	movwf	postinc1,c
  2394  011E52  0EB2               	movlw	low STR_2
  2395  011E54  6EE6               	movwf	postinc1,c
  2396  011E56  0EFF               	movlw	high STR_2
  2397  011E58  6EE6               	movwf	postinc1,c
  2398  011E5A  0E00               	movlw	0
  2399  011E5C  6EE6               	movwf	postinc1,c
  2400  011E5E  0E01               	movlw	1
  2401  011E60  6EE6               	movwf	postinc1,c
  2402  011E62  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2403  011E66  0060  F097  FFE6   	movff	btemp,postinc1
  2404  011E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2405  011E72  0E06               	movlw	6
  2406  011E74  6EE6               	movwf	postinc1,c
  2407  011E76  EC44  F0BA         	call	_sprintf	;wreg free
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2411  011E7A  0E4F               	movlw	low STR_4
  2412  011E7C  6EE6               	movwf	postinc1,c
  2413  011E7E  0EFF               	movlw	high STR_4
  2414  011E80  6EE6               	movwf	postinc1,c
  2415  011E82  0E00               	movlw	0
  2416  011E84  6EE6               	movwf	postinc1,c
  2417  011E86  0E02               	movlw	2
  2418  011E88  6EE6               	movwf	postinc1,c
  2419  011E8A  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2420  011E8E  0060  F097  FFE6   	movff	btemp,postinc1
  2421  011E94  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2422  011E9A  0E04               	movlw	4
  2423  011E9C  6EE6               	movwf	postinc1,c
  2424  011E9E  EC44  F0BA         	call	_sprintf	;wreg free
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2428  011EA2  0E71               	movlw	low STR_5
  2429  011EA4  6EE6               	movwf	postinc1,c
  2430  011EA6  0EFF               	movlw	high STR_5
  2431  011EA8  6EE6               	movwf	postinc1,c
  2432  011EAA  0E02               	movlw	2
  2433  011EAC  6EE6               	movwf	postinc1,c
  2434  011EAE  0E00               	movlw	0
  2435  011EB0  6EE6               	movwf	postinc1,c
  2436  011EB2  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2437  011EB6  0060  F097  FFE6   	movff	btemp,postinc1
  2438  011EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2439  011EC2  0E04               	movlw	4
  2440  011EC4  6EE6               	movwf	postinc1,c
  2441  011EC6  EC44  F0BA         	call	_sprintf	;wreg free
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.998");
  2445  011ECA  0EE0               	movlw	low STR_3
  2446  011ECC  6EE6               	movwf	postinc1,c
  2447  011ECE  0EFF               	movlw	high STR_3
  2448  011ED0  6EE6               	movwf	postinc1,c
  2449  011ED2  0EB2               	movlw	low STR_2
  2450  011ED4  6EE6               	movwf	postinc1,c
  2451  011ED6  0EFF               	movlw	high STR_2
  2452  011ED8  6EE6               	movwf	postinc1,c
  2453  011EDA  0E02               	movlw	2
  2454  011EDC  6EE6               	movwf	postinc1,c
  2455  011EDE  0E01               	movlw	1
  2456  011EE0  6EE6               	movwf	postinc1,c
  2457  011EE2  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2458  011EE6  0060  F097  FFE6   	movff	btemp,postinc1
  2459  011EEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2460  011EF2  0E06               	movlw	6
  2461  011EF4  6EE6               	movwf	postinc1,c
  2462  011EF6  EC44  F0BA         	call	_sprintf	;wreg free
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2466  011EFA  0E3E               	movlw	low STR_8
  2467  011EFC  6EE6               	movwf	postinc1,c
  2468  011EFE  0EFF               	movlw	high STR_8
  2469  011F00  6EE6               	movwf	postinc1,c
  2470  011F02  0E02               	movlw	2
  2471  011F04  6EE6               	movwf	postinc1,c
  2472  011F06  0E02               	movlw	2
  2473  011F08  6EE6               	movwf	postinc1,c
  2474  011F0A  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2475  011F0E  0060  F097  FFE6   	movff	btemp,postinc1
  2476  011F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2477  011F1A  0E04               	movlw	4
  2478  011F1C  6EE6               	movwf	postinc1,c
  2479  011F1E  EC44  F0BA         	call	_sprintf	;wreg free
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;main.c: 227:    update_lcd(0);
  2483  011F22  0E00               	movlw	0
  2484  011F24  6EE6               	movwf	postinc1,c
  2485  011F26  ECBC  F0B9         	call	_update_lcd	;wreg free
  2486                           
  2487                           ;main.c: 228:    WaitMs(3000);
  2488  011F2A  0EB8               	movlw	184
  2489  011F2C  6EE6               	movwf	postinc1,c
  2490  011F2E  0E0B               	movlw	11
  2491  011F30  6EE6               	movwf	postinc1,c
  2492  011F32  ECB8  F0C6         	call	_WaitMs	;wreg free
  2493                           
  2494                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2495  011F36  0EFA               	movlw	250
  2496  011F38  6EE6               	movwf	postinc1,c
  2497  011F3A  0E00               	movlw	0
  2498  011F3C  6EE6               	movwf	postinc1,c
  2499  011F3E  0E0A               	movlw	10
  2500  011F40  6EE6               	movwf	postinc1,c
  2501  011F42  ECE2  F0C5         	call	_StartTimer	;wreg free
  2502                           
  2503                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2504  011F46  0EC8               	movlw	200
  2505  011F48  6EE6               	movwf	postinc1,c
  2506  011F4A  0E00               	movlw	0
  2507  011F4C  6EE6               	movwf	postinc1,c
  2508  011F4E  0E01               	movlw	1
  2509  011F50  6EE6               	movwf	postinc1,c
  2510  011F52  ECE2  F0C5         	call	_StartTimer	;wreg free
  2511                           
  2512                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2513  011F56  0EB8               	movlw	184
  2514  011F58  6EE6               	movwf	postinc1,c
  2515  011F5A  0E0B               	movlw	11
  2516  011F5C  6EE6               	movwf	postinc1,c
  2517  011F5E  0E07               	movlw	7
  2518  011F60  6EE6               	movwf	postinc1,c
  2519  011F62  ECE2  F0C5         	call	_StartTimer	;wreg free
  2520                           
  2521                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2522  011F66  0EDC               	movlw	220
  2523  011F68  6EE6               	movwf	postinc1,c
  2524  011F6A  0E05               	movlw	5
  2525  011F6C  6EE6               	movwf	postinc1,c
  2526  011F6E  0E0B               	movlw	11
  2527  011F70  6EE6               	movwf	postinc1,c
  2528  011F72  ECE2  F0C5         	call	_StartTimer	;wreg free
  2529                           
  2530                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2531  011F76  0EB8               	movlw	184
  2532  011F78  6EE6               	movwf	postinc1,c
  2533  011F7A  0E0B               	movlw	11
  2534  011F7C  6EE6               	movwf	postinc1,c
  2535  011F7E  0E09               	movlw	9
  2536  011F80  6EE6               	movwf	postinc1,c
  2537  011F82  ECE2  F0C5         	call	_StartTimer	;wreg free
  2538                           
  2539                           ;main.c: 235:    start_adc_scan();
  2540  011F86  ECD5  F0C2         	call	_start_adc_scan	;wreg free
  2541                           
  2542                           ;main.c: 236:    start_switch_handler();
  2543  011F8A  EC12  F0CA         	call	_start_switch_handler	;wreg free
  2544                           
  2545                           ; BSR set to: 57
  2546                           ;main.c: 237:    static_soc();
  2547  011F8E  ECEE  F0C6         	call	_static_soc	;wreg free
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;main.c: 238:    init_bsoc();
  2551  011F92  ECF1  F0CA         	call	_init_bsoc	;wreg free
  2552                           
  2553                           ;main.c: 240:    break;
  2554  011F96  D01C               	goto	l11144
  2555  011F98                     l1346:
  2556                           
  2557                           ; BSR set to: 2
  2558                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2559  011F98  0100               	movlb	0	; () banked
  2560  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2561                           
  2562                           ;main.c: 247:    break;
  2563  011F9C  D019               	goto	l11144
  2564  011F9E                     l1348:
  2565                           
  2566                           ; BSR set to: 2
  2567                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2568  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2569                           
  2570                           ;main.c: 251:    break;
  2571  011FA0  D017               	goto	l11144
  2572  011FA2                     l11142:
  2573  011FA2  0102               	movlb	2	; () banked
  2574  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2575  011FA6  6E2F               	movwf	(btemp+10)^0,c
  2576  011FA8  6A30               	clrf	(btemp+11)^0,c
  2577                           
  2578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2579                           ; Switch size 1, requested type "simple"
  2580                           ; Number of cases is 1, Range of values is 0 to 0
  2581                           ; switch strategies available:
  2582                           ; Name         Instructions Cycles
  2583                           ; simple_byte            4     3 (average)
  2584                           ;	Chosen strategy is simple_byte
  2585  011FAA  5030               	movf	(btemp+11)^0,w,c
  2586  011FAC  0A00               	xorlw	0	; case 0
  2587  011FAE  A4D8               	btfss	status,2,c
  2588  011FB0  D7F6               	goto	l1348
  2589                           
  2590                           ; BSR set to: 2
  2591                           ; Switch size 1, requested type "simple"
  2592                           ; Number of cases is 5, Range of values is 0 to 5
  2593                           ; switch strategies available:
  2594                           ; Name         Instructions Cycles
  2595                           ; simple_byte           16     9 (average)
  2596                           ;	Chosen strategy is simple_byte
  2597  011FB2  502F               	movf	(btemp+10)^0,w,c
  2598  011FB4  0A00               	xorlw	0	; case 0
  2599  011FB6  B4D8               	btfsc	status,2,c
  2600  011FB8  D720               	goto	l11096
  2601  011FBA  0A01               	xorlw	1	; case 1
  2602  011FBC  B4D8               	btfsc	status,2,c
  2603  011FBE  D008               	goto	l11144
  2604  011FC0  0A02               	xorlw	2	; case 3
  2605  011FC2  B4D8               	btfsc	status,2,c
  2606  011FC4  D005               	goto	l11144
  2607  011FC6  0A07               	xorlw	7	; case 4
  2608  011FC8  B4D8               	btfsc	status,2,c
  2609  011FCA  D7E6               	goto	l1346
  2610  011FCC  0A01               	xorlw	1	; case 5
  2611  011FCE  D7E7               	goto	l1348
  2612  011FD0                     l11144:
  2613                           
  2614                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2615  011FD0  0E01               	movlw	1
  2616  011FD2  6EE6               	movwf	postinc1,c
  2617  011FD4  EC43  F0C8         	call	_TimerDone	;wreg free
  2618  011FD8  5025               	movf	btemp^0,w,c
  2619  011FDA  B4D8               	btfsc	status,2,c
  2620  011FDC  D013               	goto	l11156
  2621  011FDE  EC41  F0CB         	call	_check_adc_scan	;wreg free
  2622  011FE2  5025               	movf	btemp^0,w,c
  2623  011FE4  B4D8               	btfsc	status,2,c
  2624  011FE6  D00E               	goto	l11156
  2625                           
  2626                           ;main.c: 258:    convert_adc_data();
  2627  011FE8  ECCF  F0BD         	call	_convert_adc_data	;wreg free
  2628                           
  2629                           ;main.c: 262:    clear_adc_scan();
  2630  011FEC  EC49  F0CB         	call	_clear_adc_scan	;wreg free
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;main.c: 263:    start_adc_scan();
  2634  011FF0  ECD5  F0C2         	call	_start_adc_scan	;wreg free
  2635                           
  2636                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2637  011FF4  0EC8               	movlw	200
  2638  011FF6  6EE6               	movwf	postinc1,c
  2639  011FF8  0E00               	movlw	0
  2640  011FFA  6EE6               	movwf	postinc1,c
  2641  011FFC  0E01               	movlw	1
  2642  011FFE  6EE6               	movwf	postinc1,c
  2643  012000  ECE2  F0C5         	call	_StartTimer	;wreg free
  2644  012004                     l11156:
  2645                           
  2646                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2647                           
  2648                           ;main.c: 267:   if (V.ticks) {
  2649  012004  0E0A               	movlw	10
  2650  012006  6EE6               	movwf	postinc1,c
  2651  012008  EC43  F0C8         	call	_TimerDone	;wreg free
  2652  01200C  5025               	movf	btemp^0,w,c
  2653  01200E  B4D8               	btfsc	status,2,c
  2654  012010  D27F               	goto	l11198
  2655                           
  2656                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2657  012012  0E09               	movlw	9
  2658  012014  6EE6               	movwf	postinc1,c
  2659  012016  EC43  F0C8         	call	_TimerDone	;wreg free
  2660  01201A  5025               	movf	btemp^0,w,c
  2661  01201C  B4D8               	btfsc	status,2,c
  2662  01201E  D004               	goto	l11164
  2663                           
  2664                           ;main.c: 273:     set_display_info(DIS_STR);
  2665  012020  0E00               	movlw	0
  2666  012022  6EE6               	movwf	postinc1,c
  2667  012024  EC4F  F0CA         	call	_set_display_info	;wreg free
  2668  012028                     l11164:
  2669                           
  2670                           ;main.c: 275:    calc_model_data();
  2671  012028  ECD8  F0A9         	call	_calc_model_data	;wreg free
  2672                           
  2673                           ; BSR set to: 1
  2674                           ;main.c: 282:     hid_display(&H);
  2675                           
  2676                           ;main.c: 277:    if (0) {
  2677  01202C  0EF2               	movlw	_H& (0+255)
  2678  01202E  6EE6               	movwf	postinc1,c
  2679  012030  ECC9  F0BA         	call	_hid_display	;wreg free
  2680                           
  2681                           ;main.c: 283:     switch (H.hid_display) {
  2682  012034  D248               	goto	l11190
  2683  012036                     l1356:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;main.c: 285:      V.calib = 0;
  2687  012036  0102               	movlb	2	; () banked
  2688  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2689                           
  2690                           ; BSR set to: 2
  2691                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2692  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2693  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2694  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2695  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2696  012052  0EB9               	movlw	low STR_12
  2697  012054  6EE6               	movwf	postinc1,c
  2698  012056  0EFE               	movlw	high STR_12
  2699  012058  6EE6               	movwf	postinc1,c
  2700  01205A  0E00               	movlw	0
  2701  01205C  6EE6               	movwf	postinc1,c
  2702  01205E  0E00               	movlw	0
  2703  012060  6EE6               	movwf	postinc1,c
  2704  012062  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2705  012066  0060  F097  FFE6   	movff	btemp,postinc1
  2706  01206C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2707  012072  0E08               	movlw	8
  2708  012074  6EE6               	movwf	postinc1,c
  2709  012076  EC44  F0BA         	call	_sprintf	;wreg free
  2710                           
  2711                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2712  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2713  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2714  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2715  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2716  012092  0EDF               	movlw	low STR_13
  2717  012094  6EE6               	movwf	postinc1,c
  2718  012096  0EFE               	movlw	high STR_13
  2719  012098  6EE6               	movwf	postinc1,c
  2720  01209A  0E00               	movlw	0
  2721  01209C  6EE6               	movwf	postinc1,c
  2722  01209E  0E01               	movlw	1
  2723  0120A0  6EE6               	movwf	postinc1,c
  2724  0120A2  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2725  0120A6  0060  F097  FFE6   	movff	btemp,postinc1
  2726  0120AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2727  0120B2  0E08               	movlw	8
  2728  0120B4  6EE6               	movwf	postinc1,c
  2729  0120B6  EC44  F0BA         	call	_sprintf	;wreg free
  2730                           
  2731                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2732  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2733  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2734  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2735  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2736  0120D2  0ECC               	movlw	low STR_14
  2737  0120D4  6EE6               	movwf	postinc1,c
  2738  0120D6  0EFE               	movlw	high STR_14
  2739  0120D8  6EE6               	movwf	postinc1,c
  2740  0120DA  0E00               	movlw	0
  2741  0120DC  6EE6               	movwf	postinc1,c
  2742  0120DE  0E02               	movlw	2
  2743  0120E0  6EE6               	movwf	postinc1,c
  2744  0120E2  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2745  0120E6  0060  F097  FFE6   	movff	btemp,postinc1
  2746  0120EC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2747  0120F2  0E08               	movlw	8
  2748  0120F4  6EE6               	movwf	postinc1,c
  2749  0120F6  EC44  F0BA         	call	_sprintf	;wreg free
  2750                           
  2751                           ;main.c: 289:      break;
  2752  0120FA  D1FA               	goto	l11192
  2753  0120FC                     l1358:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;main.c: 291:      V.calib = 0;
  2757  0120FC  0102               	movlb	2	; () banked
  2758  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2759                           
  2760                           ; BSR set to: 2
  2761                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2762  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2763  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2764  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2765  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2766  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2767  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2768  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2769  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2770  012130  0E2B               	movlw	low STR_15
  2771  012132  6EE6               	movwf	postinc1,c
  2772  012134  0EFF               	movlw	high STR_15
  2773  012136  6EE6               	movwf	postinc1,c
  2774  012138  0E00               	movlw	0
  2775  01213A  6EE6               	movwf	postinc1,c
  2776  01213C  0E00               	movlw	0
  2777  01213E  6EE6               	movwf	postinc1,c
  2778  012140  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2779  012144  0060  F097  FFE6   	movff	btemp,postinc1
  2780  01214A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2781  012150  0E0C               	movlw	12
  2782  012152  6EE6               	movwf	postinc1,c
  2783  012154  EC44  F0BA         	call	_sprintf	;wreg free
  2784                           
  2785                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2786  012158  0060  F403  FFE6   	movff	_C,postinc1
  2787  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2788  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2789  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2790  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2791  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2792  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2793  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2794  012188  0E05               	movlw	low STR_16
  2795  01218A  6EE6               	movwf	postinc1,c
  2796  01218C  0EFF               	movlw	high STR_16
  2797  01218E  6EE6               	movwf	postinc1,c
  2798  012190  0E00               	movlw	0
  2799  012192  6EE6               	movwf	postinc1,c
  2800  012194  0E01               	movlw	1
  2801  012196  6EE6               	movwf	postinc1,c
  2802  012198  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2803  01219C  0060  F097  FFE6   	movff	btemp,postinc1
  2804  0121A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2805  0121A8  0E0C               	movlw	12
  2806  0121AA  6EE6               	movwf	postinc1,c
  2807  0121AC  EC44  F0BA         	call	_sprintf	;wreg free
  2808                           
  2809                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2810  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2811  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2812  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2813  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2814  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2815  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2816  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2817  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2818  0121E0  0E18               	movlw	low STR_17
  2819  0121E2  6EE6               	movwf	postinc1,c
  2820  0121E4  0EFF               	movlw	high STR_17
  2821  0121E6  6EE6               	movwf	postinc1,c
  2822  0121E8  0E00               	movlw	0
  2823  0121EA  6EE6               	movwf	postinc1,c
  2824  0121EC  0E02               	movlw	2
  2825  0121EE  6EE6               	movwf	postinc1,c
  2826  0121F0  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2827  0121F4  0060  F097  FFE6   	movff	btemp,postinc1
  2828  0121FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2829  012200  0E0C               	movlw	12
  2830  012202  6EE6               	movwf	postinc1,c
  2831  012204  EC44  F0BA         	call	_sprintf	;wreg free
  2832                           
  2833                           ;main.c: 295:      break;
  2834  012208  D173               	goto	l11192
  2835  01220A                     l1359:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;main.c: 297:      V.calib = 0;
  2839  01220A  0102               	movlb	2	; () banked
  2840  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2841                           
  2842                           ; BSR set to: 2
  2843                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  2844  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2845  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2846  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2847  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2848  012226  0EF2               	movlw	low STR_18
  2849  012228  6EE6               	movwf	postinc1,c
  2850  01222A  0EFE               	movlw	high STR_18
  2851  01222C  6EE6               	movwf	postinc1,c
  2852  01222E  0E00               	movlw	0
  2853  012230  6EE6               	movwf	postinc1,c
  2854  012232  0E00               	movlw	0
  2855  012234  6EE6               	movwf	postinc1,c
  2856  012236  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2857  01223A  0060  F097  FFE6   	movff	btemp,postinc1
  2858  012240  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2859  012246  0E08               	movlw	8
  2860  012248  6EE6               	movwf	postinc1,c
  2861  01224A  EC44  F0BA         	call	_sprintf	;wreg free
  2862                           
  2863                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  2864  01224E  0060  F623  FFE6   	movff	_C+136,postinc1
  2865  012254  0060  F627  FFE6   	movff	_C+137,postinc1
  2866  01225A  0060  F62B  FFE6   	movff	_C+138,postinc1
  2867  012260  0060  F62F  FFE6   	movff	_C+139,postinc1
  2868  012266  0060  F613  FFE6   	movff	_C+132,postinc1
  2869  01226C  0060  F617  FFE6   	movff	_C+133,postinc1
  2870  012272  0060  F61B  FFE6   	movff	_C+134,postinc1
  2871  012278  0060  F61F  FFE6   	movff	_C+135,postinc1
  2872  01227E  0E59               	movlw	low STR_19
  2873  012280  6EE6               	movwf	postinc1,c
  2874  012282  0EFE               	movlw	high STR_19
  2875  012284  6EE6               	movwf	postinc1,c
  2876  012286  0E00               	movlw	0
  2877  012288  6EE6               	movwf	postinc1,c
  2878  01228A  0E01               	movlw	1
  2879  01228C  6EE6               	movwf	postinc1,c
  2880  01228E  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2881  012292  0060  F097  FFE6   	movff	btemp,postinc1
  2882  012298  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2883  01229E  0E0C               	movlw	12
  2884  0122A0  6EE6               	movwf	postinc1,c
  2885  0122A2  EC44  F0BA         	call	_sprintf	;wreg free
  2886                           
  2887                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2888  0122A6  0060  F683  FFE6   	movff	_C+160,postinc1
  2889  0122AC  0060  F687  FFE6   	movff	_C+161,postinc1
  2890  0122B2  0060  F68B  FFE6   	movff	_C+162,postinc1
  2891  0122B8  0060  F68F  FFE6   	movff	_C+163,postinc1
  2892  0122BE  0EA6               	movlw	low STR_20
  2893  0122C0  6EE6               	movwf	postinc1,c
  2894  0122C2  0EFE               	movlw	high STR_20
  2895  0122C4  6EE6               	movwf	postinc1,c
  2896  0122C6  0E00               	movlw	0
  2897  0122C8  6EE6               	movwf	postinc1,c
  2898  0122CA  0E02               	movlw	2
  2899  0122CC  6EE6               	movwf	postinc1,c
  2900  0122CE  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  2901  0122D2  0060  F097  FFE6   	movff	btemp,postinc1
  2902  0122D8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2903  0122DE  0E08               	movlw	8
  2904  0122E0  6EE6               	movwf	postinc1,c
  2905  0122E2  EC44  F0BA         	call	_sprintf	;wreg free
  2906                           
  2907                           ;main.c: 301:      break;
  2908  0122E6  D104               	goto	l11192
  2909  0122E8                     l11176:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;main.c: 303:      if (!V.calib) {
  2913  0122E8  0102               	movlb	2	; () banked
  2914  0122EA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2915  0122EC  A4D8               	btfss	status,2,c
  2916  0122EE  D02D               	goto	l11180
  2917                           
  2918                           ; BSR set to: 2
  2919                           ;main.c: 304:       lp_filter(0.0, i, -1);
  2920  0122F0  0EFF               	movlw	255
  2921  0122F2  6EE6               	movwf	postinc1,c
  2922                           
  2923                           ;stkvar	_i @ sp[(-6)+2]
  2924  0122F4  0EFC               	movlw	-4
  2925  0122F6  50E3               	movf	plusw1,w,c
  2926  0122F8  6EE6               	movwf	postinc1,c
  2927  0122FA  0E00               	movlw	0
  2928  0122FC  6EE6               	movwf	postinc1,c
  2929  0122FE  0E00               	movlw	0
  2930  012300  6EE6               	movwf	postinc1,c
  2931  012302  0E00               	movlw	0
  2932  012304  6EE6               	movwf	postinc1,c
  2933  012306  0E00               	movlw	0
  2934  012308  6EE6               	movwf	postinc1,c
  2935  01230A  EC2D  F0B3         	call	_lp_filter	;wreg free
  2936                           
  2937                           ;main.c: 305:       lp_filter(0.0, j, -1);
  2938  01230E  0EFF               	movlw	255
  2939  012310  6EE6               	movwf	postinc1,c
  2940                           
  2941                           ;stkvar	_j @ sp[(-6)+1]
  2942  012312  0EFB               	movlw	-5
  2943  012314  50E3               	movf	plusw1,w,c
  2944  012316  6EE6               	movwf	postinc1,c
  2945  012318  0E00               	movlw	0
  2946  01231A  6EE6               	movwf	postinc1,c
  2947  01231C  0E00               	movlw	0
  2948  01231E  6EE6               	movwf	postinc1,c
  2949  012320  0E00               	movlw	0
  2950  012322  6EE6               	movwf	postinc1,c
  2951  012324  0E00               	movlw	0
  2952  012326  6EE6               	movwf	postinc1,c
  2953  012328  EC2D  F0B3         	call	_lp_filter	;wreg free
  2954                           
  2955                           ;main.c: 306:       lp_filter(0.0, k, -1);
  2956  01232C  0EFF               	movlw	255
  2957  01232E  6EE6               	movwf	postinc1,c
  2958                           
  2959                           ;stkvar	_k @ sp[(-6)+0]
  2960  012330  0EFA               	movlw	-6
  2961  012332  50E3               	movf	plusw1,w,c
  2962  012334  6EE6               	movwf	postinc1,c
  2963  012336  0E00               	movlw	0
  2964  012338  6EE6               	movwf	postinc1,c
  2965  01233A  0E00               	movlw	0
  2966  01233C  6EE6               	movwf	postinc1,c
  2967  01233E  0E00               	movlw	0
  2968  012340  6EE6               	movwf	postinc1,c
  2969  012342  0E00               	movlw	0
  2970  012344  6EE6               	movwf	postinc1,c
  2971  012346  EC2D  F0B3         	call	_lp_filter	;wreg free
  2972  01234A                     l11180:
  2973                           
  2974                           ;main.c: 308:      V.calib = 1;
  2975  01234A  0E01               	movlw	1
  2976  01234C  0102               	movlb	2	; () banked
  2977  01234E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2978                           
  2979                           ; BSR set to: 2
  2980                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2981  012350  0E02               	movlw	2
  2982  012352  6EE6               	movwf	postinc1,c
  2983  012354  EC2F  F0C8         	call	_get_switch	;wreg free
  2984  012358  5025               	movf	btemp^0,w,c
  2985  01235A  6EE6               	movwf	postinc1,c
  2986  01235C  0E00               	movlw	0
  2987  01235E  6EE6               	movwf	postinc1,c
  2988                           
  2989                           ;stkvar	_i @ sp[(-7)+2]
  2990  012360  0EFB               	movlw	-5
  2991  012362  50E3               	movf	plusw1,w,c
  2992  012364  0D04               	mullw	4
  2993  012366  0E00               	movlw	low _C
  2994  012368  24F3               	addwf	243,w,c
  2995  01236A  6ED9               	movwf	fsr2l,c
  2996  01236C  0E01               	movlw	high _C
  2997  01236E  20F4               	addwfc	prodh,w,c
  2998  012370  6EDA               	movwf	fsr2h,c
  2999  012372  006F FF7B FFE6     	movff	postinc2,postinc1
  3000  012378  006F FF7B FFE6     	movff	postinc2,postinc1
  3001  01237E  006F FF7B FFE6     	movff	postinc2,postinc1
  3002  012384  006F FF7B FFE6     	movff	postinc2,postinc1
  3003                           
  3004                           ;stkvar	_i @ sp[(-11)+2]
  3005  01238A  0EF7               	movlw	-9
  3006  01238C  50E3               	movf	plusw1,w,c
  3007  01238E  6EE6               	movwf	postinc1,c
  3008  012390  EC31  F0CA         	call	_get_raw_result	;wreg free
  3009  012394  0060  F097  FFE6   	movff	btemp,postinc1
  3010  01239A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3011  0123A0  0E93               	movlw	low STR_9
  3012  0123A2  6EE6               	movwf	postinc1,c
  3013  0123A4  0EFF               	movlw	high STR_9
  3014  0123A6  6EE6               	movwf	postinc1,c
  3015  0123A8  0E00               	movlw	0
  3016  0123AA  6EE6               	movwf	postinc1,c
  3017  0123AC  0E00               	movlw	0
  3018  0123AE  6EE6               	movwf	postinc1,c
  3019  0123B0  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  3020  0123B4  0060  F097  FFE6   	movff	btemp,postinc1
  3021  0123BA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3022  0123C0  0E0C               	movlw	12
  3023  0123C2  6EE6               	movwf	postinc1,c
  3024  0123C4  EC44  F0BA         	call	_sprintf	;wreg free
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3028  0123C8  0E03               	movlw	3
  3029  0123CA  6EE6               	movwf	postinc1,c
  3030  0123CC  EC2F  F0C8         	call	_get_switch	;wreg free
  3031  0123D0  5025               	movf	btemp^0,w,c
  3032  0123D2  6EE6               	movwf	postinc1,c
  3033  0123D4  0E00               	movlw	0
  3034  0123D6  6EE6               	movwf	postinc1,c
  3035                           
  3036                           ;stkvar	_j @ sp[(-7)+1]
  3037  0123D8  0EFA               	movlw	-6
  3038  0123DA  50E3               	movf	plusw1,w,c
  3039  0123DC  0D04               	mullw	4
  3040  0123DE  0E00               	movlw	low _C
  3041  0123E0  24F3               	addwf	243,w,c
  3042  0123E2  6ED9               	movwf	fsr2l,c
  3043  0123E4  0E01               	movlw	high _C
  3044  0123E6  20F4               	addwfc	prodh,w,c
  3045  0123E8  6EDA               	movwf	fsr2h,c
  3046  0123EA  006F FF7B FFE6     	movff	postinc2,postinc1
  3047  0123F0  006F FF7B FFE6     	movff	postinc2,postinc1
  3048  0123F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3049  0123FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3050                           
  3051                           ;stkvar	_j @ sp[(-11)+1]
  3052  012402  0EF6               	movlw	-10
  3053  012404  50E3               	movf	plusw1,w,c
  3054  012406  6EE6               	movwf	postinc1,c
  3055  012408  EC31  F0CA         	call	_get_raw_result	;wreg free
  3056  01240C  0060  F097  FFE6   	movff	btemp,postinc1
  3057  012412  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3058  012418  0E93               	movlw	low STR_9
  3059  01241A  6EE6               	movwf	postinc1,c
  3060  01241C  0EFF               	movlw	high STR_9
  3061  01241E  6EE6               	movwf	postinc1,c
  3062  012420  0E00               	movlw	0
  3063  012422  6EE6               	movwf	postinc1,c
  3064  012424  0E01               	movlw	1
  3065  012426  6EE6               	movwf	postinc1,c
  3066  012428  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  3067  01242C  0060  F097  FFE6   	movff	btemp,postinc1
  3068  012432  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3069  012438  0E0C               	movlw	12
  3070  01243A  6EE6               	movwf	postinc1,c
  3071  01243C  EC44  F0BA         	call	_sprintf	;wreg free
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3075                           ;stkvar	_inp_index @ sp[(-5)+3]
  3076  012440  0EFE               	movlw	-2
  3077  012442  50E3               	movf	plusw1,w,c
  3078  012444  6E2F               	movwf	(btemp+10)^0,c
  3079  012446  6A30               	clrf	(btemp+11)^0,c
  3080  012448  0E01               	movlw	1
  3081  01244A  262F               	addwf	(btemp+10)^0,f,c
  3082  01244C  0E00               	movlw	0
  3083  01244E  2230               	addwfc	(btemp+11)^0,f,c
  3084  012450  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  3085  012456  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  3086                           
  3087                           ;stkvar	_k @ sp[(-7)+0]
  3088  01245C  0EF9               	movlw	-7
  3089  01245E  50E3               	movf	plusw1,w,c
  3090  012460  0D04               	mullw	4
  3091  012462  0E00               	movlw	low _C
  3092  012464  24F3               	addwf	243,w,c
  3093  012466  6ED9               	movwf	fsr2l,c
  3094  012468  0E01               	movlw	high _C
  3095  01246A  20F4               	addwfc	prodh,w,c
  3096  01246C  6EDA               	movwf	fsr2h,c
  3097  01246E  006F FF7B FFE6     	movff	postinc2,postinc1
  3098  012474  006F FF7B FFE6     	movff	postinc2,postinc1
  3099  01247A  006F FF7B FFE6     	movff	postinc2,postinc1
  3100  012480  006F FF7B FFE6     	movff	postinc2,postinc1
  3101                           
  3102                           ;stkvar	_k @ sp[(-11)+0]
  3103  012486  0EF5               	movlw	-11
  3104  012488  50E3               	movf	plusw1,w,c
  3105  01248A  6EE6               	movwf	postinc1,c
  3106  01248C  EC31  F0CA         	call	_get_raw_result	;wreg free
  3107  012490  0060  F097  FFE6   	movff	btemp,postinc1
  3108  012496  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3109  01249C  0E82               	movlw	low STR_11
  3110  01249E  6EE6               	movwf	postinc1,c
  3111  0124A0  0EFF               	movlw	high STR_11
  3112  0124A2  6EE6               	movwf	postinc1,c
  3113  0124A4  0E00               	movlw	0
  3114  0124A6  6EE6               	movwf	postinc1,c
  3115  0124A8  0E02               	movlw	2
  3116  0124AA  6EE6               	movwf	postinc1,c
  3117  0124AC  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  3118  0124B0  0060  F097  FFE6   	movff	btemp,postinc1
  3119  0124B6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3120  0124BC  0E0C               	movlw	12
  3121  0124BE  6EE6               	movwf	postinc1,c
  3122  0124C0  EC44  F0BA         	call	_sprintf	;wreg free
  3123                           
  3124                           ;main.c: 312:      break;
  3125  0124C4  D015               	goto	l11192
  3126  0124C6                     l11190:
  3127  0124C6  0100               	movlb	0	; () banked
  3128  0124C8  51F2               	movf	_H& (0+255),w,b
  3129  0124CA  6E2F               	movwf	(btemp+10)^0,c
  3130  0124CC  6A30               	clrf	(btemp+11)^0,c
  3131                           
  3132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3133                           ; Switch size 1, requested type "simple"
  3134                           ; Number of cases is 1, Range of values is 0 to 0
  3135                           ; switch strategies available:
  3136                           ; Name         Instructions Cycles
  3137                           ; simple_byte            4     3 (average)
  3138                           ;	Chosen strategy is simple_byte
  3139  0124CE  5030               	movf	(btemp+11)^0,w,c
  3140  0124D0  0A00               	xorlw	0	; case 0
  3141  0124D2  A4D8               	btfss	status,2,c
  3142  0124D4  D00D               	goto	l11192
  3143                           
  3144                           ; BSR set to: 0
  3145                           ; Switch size 1, requested type "simple"
  3146                           ; Number of cases is 4, Range of values is 0 to 3
  3147                           ; switch strategies available:
  3148                           ; Name         Instructions Cycles
  3149                           ; simple_byte           13     7 (average)
  3150                           ;	Chosen strategy is simple_byte
  3151  0124D6  502F               	movf	(btemp+10)^0,w,c
  3152  0124D8  0A00               	xorlw	0	; case 0
  3153  0124DA  B4D8               	btfsc	status,2,c
  3154  0124DC  D60F               	goto	l1358
  3155  0124DE  0A01               	xorlw	1	; case 1
  3156  0124E0  B4D8               	btfsc	status,2,c
  3157  0124E2  D5A9               	goto	l1356
  3158  0124E4  0A03               	xorlw	3	; case 2
  3159  0124E6  B4D8               	btfsc	status,2,c
  3160  0124E8  D690               	goto	l1359
  3161  0124EA  0A01               	xorlw	1	; case 3
  3162  0124EC  B4D8               	btfsc	status,2,c
  3163  0124EE  D6FC               	goto	l11176
  3164  0124F0                     l11192:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;main.c: 316:     clear_hid_pflags(&H);
  3168  0124F0  0EF2               	movlw	_H& (0+255)
  3169  0124F2  6EE6               	movwf	postinc1,c
  3170  0124F4  EC97  F0C9         	call	_clear_hid_pflags	;wreg free
  3171                           
  3172                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3173  0124F8  0EFA               	movlw	250
  3174  0124FA  6EE6               	movwf	postinc1,c
  3175  0124FC  0E00               	movlw	0
  3176  0124FE  6EE6               	movwf	postinc1,c
  3177  012500  0E0A               	movlw	10
  3178  012502  6EE6               	movwf	postinc1,c
  3179  012504  ECE2  F0C5         	call	_StartTimer	;wreg free
  3180                           
  3181                           ;main.c: 319:    update_lcd(0);
  3182  012508  0E00               	movlw	0
  3183  01250A  6EE6               	movwf	postinc1,c
  3184  01250C  ECBC  F0B9         	call	_update_lcd	;wreg free
  3185  012510                     l11198:
  3186                           
  3187                           ;main.c: 325:   check_help(V.flipper);
  3188  012510  0102               	movlb	2	; () banked
  3189  012512  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3190  012514  6EE6               	movwf	postinc1,c
  3191  012516  EC3E  F0B0         	call	_check_help	;wreg free
  3192                           
  3193                           ;main.c: 327:   if (check_enter_button(&H)) {
  3194  01251A  0EF2               	movlw	_H& (0+255)
  3195  01251C  6EE6               	movwf	postinc1,c
  3196  01251E  EC02  F0C6         	call	_check_enter_button	;wreg free
  3197  012522  5025               	movf	btemp^0,w,c
  3198  012524  B4D8               	btfsc	status,2,c
  3199  012526  D062               	goto	l1363
  3200                           
  3201                           ;main.c: 328:    V.calib = 0;
  3202  012528  0102               	movlb	2	; () banked
  3203  01252A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3204                           
  3205                           ; BSR set to: 2
  3206                           ;main.c: 329:    inp_index += 3;
  3207                           ;stkvar	_inp_index @ sp[(-5)+3]
  3208  01252C  0EFE               	movlw	-2
  3209  01252E  006F FF8C  F025    	movff	plusw1,btemp
  3210  012534  0E03               	movlw	3
  3211  012536  2625               	addwf	btemp^0,f,c
  3212  012538  0EFE               	movlw	-2
  3213  01253A  0060  F097  FFE3   	movff	btemp,plusw1
  3214                           
  3215                           ;main.c: 330:    if (inp_index > 9)
  3216                           ;stkvar	_inp_index @ sp[(-5)+3]
  3217  012540  0EFE               	movlw	-2
  3218  012542  006F FF8C  F025    	movff	plusw1,btemp
  3219  012548  0E09               	movlw	9
  3220  01254A  6425               	cpfsgt	btemp^0,c
  3221  01254C  D03A               	goto	l11226
  3222                           
  3223                           ; BSR set to: 2
  3224                           ;main.c: 331:     inp_index = 0;
  3225                           ;stkvar	_inp_index @ sp[(-5)+3]
  3226  01254E  0EFE               	movlw	-2
  3227  012550  6AE3               	clrf	plusw1,c
  3228  012552  D037               	goto	l11226
  3229  012554                     l11208:
  3230                           
  3231                           ; BSR set to: 2
  3232                           ;main.c: 334:     i = C_BATT;
  3233                           ;stkvar	_i @ sp[(-5)+2]
  3234  012554  0EFD               	movlw	-3
  3235  012556  6AE3               	clrf	plusw1,c
  3236                           
  3237                           ; BSR set to: 2
  3238                           ;main.c: 335:     j = C_PV;
  3239                           ;stkvar	_j @ sp[(-5)+1]
  3240  012558  0EFC               	movlw	-4
  3241  01255A  6AE3               	clrf	plusw1,c
  3242  01255C  2AE3               	incf	plusw1,f,c
  3243                           
  3244                           ; BSR set to: 2
  3245                           ;main.c: 336:     k = V_CC;
  3246                           ;stkvar	_k @ sp[(-5)+0]
  3247  01255E  0EFB               	movlw	-5
  3248  012560  6AE3               	clrf	plusw1,c
  3249  012562  82E3               	bsf	plusw1,1,c
  3250                           
  3251                           ;main.c: 337:     break;
  3252  012564  D043               	goto	l1363
  3253  012566                     l11214:
  3254                           
  3255                           ; BSR set to: 2
  3256                           ;main.c: 339:     i = V_BAT;
  3257                           ;stkvar	_i @ sp[(-5)+2]
  3258  012566  0EFD               	movlw	-3
  3259  012568  6AE3               	clrf	plusw1,c
  3260  01256A  84E3               	bsf	plusw1,2,c
  3261                           
  3262                           ;main.c: 340:     j = V_PV;
  3263                           ;stkvar	_j @ sp[(-5)+1]
  3264  01256C  0EFC               	movlw	-4
  3265  01256E  6AE3               	clrf	plusw1,c
  3266  012570  80E3               	bsf	plusw1,0,c
  3267  012572  84E3               	bsf	plusw1,2,c	;indir
  3268                           
  3269                           ;main.c: 341:     k = V_CBUS;
  3270                           ;stkvar	_k @ sp[(-5)+0]
  3271  012574  0EFB               	movlw	-5
  3272  012576  6AE3               	clrf	plusw1,c
  3273  012578  82E3               	bsf	plusw1,1,c
  3274  01257A  84E3               	bsf	plusw1,2,c	;indir
  3275                           
  3276                           ;main.c: 342:     break;
  3277  01257C  D037               	goto	l1363
  3278  01257E                     l11216:
  3279                           
  3280                           ; BSR set to: 2
  3281                           ;main.c: 344:     i = V_BBAT;
  3282                           ;stkvar	_i @ sp[(-5)+2]
  3283  01257E  0EFD               	movlw	-3
  3284  012580  6AE3               	clrf	plusw1,c
  3285  012582  82E3               	bsf	plusw1,1,c
  3286  012584  86E3               	bsf	plusw1,3,c	;indir
  3287                           
  3288                           ; BSR set to: 2
  3289                           ;main.c: 345:     j = V_TEMP;
  3290  012586  0E0B               	movlw	11
  3291  012588  6E30               	movwf	(btemp+11)^0,c
  3292                           
  3293                           ;stkvar	_j @ sp[(-5)+1]
  3294  01258A  0EFC               	movlw	-4
  3295  01258C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3296                           
  3297                           ; BSR set to: 2
  3298                           ;main.c: 346:     k = V_INVERTER;
  3299                           ;stkvar	_k @ sp[(-5)+0]
  3300  012592  0EFB               	movlw	-5
  3301  012594  6AE3               	clrf	plusw1,c
  3302  012596  84E3               	bsf	plusw1,2,c
  3303  012598  86E3               	bsf	plusw1,3,c	;indir
  3304                           
  3305                           ;main.c: 347:     break;
  3306  01259A  D028               	goto	l1363
  3307  01259C                     l11222:
  3308                           
  3309                           ; BSR set to: 2
  3310                           ;main.c: 349:     i = channel_ANB5;
  3311  01259C  0E0D               	movlw	13
  3312  01259E  6E30               	movwf	(btemp+11)^0,c
  3313                           
  3314                           ;stkvar	_i @ sp[(-5)+2]
  3315  0125A0  0EFD               	movlw	-3
  3316  0125A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3317                           
  3318                           ;main.c: 350:     j = channel_ANB5;
  3319  0125A8  0E0D               	movlw	13
  3320  0125AA  6E30               	movwf	(btemp+11)^0,c
  3321                           
  3322                           ;stkvar	_j @ sp[(-5)+1]
  3323  0125AC  0EFC               	movlw	-4
  3324  0125AE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3325                           
  3326                           ;main.c: 351:     k = channel_ANB5;
  3327  0125B4  0E0D               	movlw	13
  3328  0125B6  6E30               	movwf	(btemp+11)^0,c
  3329                           
  3330                           ;stkvar	_k @ sp[(-5)+0]
  3331  0125B8  0EFB               	movlw	-5
  3332  0125BA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3333                           
  3334                           ;main.c: 352:     break;
  3335  0125C0  D015               	goto	l1363
  3336  0125C2                     l11226:
  3337                           
  3338                           ; BSR set to: 2
  3339                           ;stkvar	_inp_index @ sp[(-5)+3]
  3340  0125C2  0EFE               	movlw	-2
  3341  0125C4  50E3               	movf	plusw1,w,c
  3342  0125C6  6E2F               	movwf	(btemp+10)^0,c
  3343  0125C8  6A30               	clrf	(btemp+11)^0,c
  3344                           
  3345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3346                           ; Switch size 1, requested type "simple"
  3347                           ; Number of cases is 1, Range of values is 0 to 0
  3348                           ; switch strategies available:
  3349                           ; Name         Instructions Cycles
  3350                           ; simple_byte            4     3 (average)
  3351                           ;	Chosen strategy is simple_byte
  3352  0125CA  5030               	movf	(btemp+11)^0,w,c
  3353  0125CC  0A00               	xorlw	0	; case 0
  3354  0125CE  A4D8               	btfss	status,2,c
  3355  0125D0  D00D               	goto	l1363
  3356                           
  3357                           ; BSR set to: 2
  3358                           ; Switch size 1, requested type "simple"
  3359                           ; Number of cases is 4, Range of values is 0 to 9
  3360                           ; switch strategies available:
  3361                           ; Name         Instructions Cycles
  3362                           ; simple_byte           13     7 (average)
  3363                           ;	Chosen strategy is simple_byte
  3364  0125D2  502F               	movf	(btemp+10)^0,w,c
  3365  0125D4  0A00               	xorlw	0	; case 0
  3366  0125D6  B4D8               	btfsc	status,2,c
  3367  0125D8  D7BD               	goto	l11208
  3368  0125DA  0A03               	xorlw	3	; case 3
  3369  0125DC  B4D8               	btfsc	status,2,c
  3370  0125DE  D7C3               	goto	l11214
  3371  0125E0  0A05               	xorlw	5	; case 6
  3372  0125E2  B4D8               	btfsc	status,2,c
  3373  0125E4  D7CC               	goto	l11216
  3374  0125E6  0A0F               	xorlw	15	; case 9
  3375  0125E8  B4D8               	btfsc	status,2,c
  3376  0125EA  D7D8               	goto	l11222
  3377  0125EC                     l1363:
  3378                           
  3379                           ;main.c: 361:   if (V.set_sequ) {
  3380  0125EC  0102               	movlb	2	; () banked
  3381  0125EE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3382  0125F0  D4D8               	goto	l11142
  3383                           
  3384                           ; BSR set to: 2
  3385                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3386  0125F2  0E07               	movlw	7
  3387  0125F4  6EE6               	movwf	postinc1,c
  3388  0125F6  EC43  F0C8         	call	_TimerDone	;wreg free
  3389  0125FA  5025               	movf	btemp^0,w,c
  3390  0125FC  B4D8               	btfsc	status,2,c
  3391  0125FE  D00B               	goto	l11236
  3392                           
  3393                           ;main.c: 363:     V.set_sequ = 0;
  3394  012600  0102               	movlb	2	; () banked
  3395  012602  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3396                           
  3397                           ; BSR set to: 2
  3398                           ;main.c: 364:     set_vterm(0);
  3399  012604  0E00               	movlw	0
  3400  012606  6EE6               	movwf	postinc1,c
  3401  012608  EC40  F0CA         	call	_set_vterm	;wreg free
  3402                           
  3403                           ;main.c: 365:     update_lcd(0);
  3404  01260C  0E00               	movlw	0
  3405  01260E  6EE6               	movwf	postinc1,c
  3406  012610  ECBC  F0B9         	call	_update_lcd	;wreg free
  3407                           
  3408                           ;main.c: 366:    } else {
  3409  012614  D4C6               	goto	l11142
  3410  012616                     l11236:
  3411                           
  3412                           ;main.c: 367:     set_vterm(2);
  3413  012616  0E02               	movlw	2
  3414  012618  6EE6               	movwf	postinc1,c
  3415  01261A  EC40  F0CA         	call	_set_vterm	;wreg free
  3416                           
  3417                           ;main.c: 368:     update_lcd(2);
  3418  01261E  0E02               	movlw	2
  3419  012620  6EE6               	movwf	postinc1,c
  3420  012622  ECBC  F0B9         	call	_update_lcd	;wreg free
  3421  012626  D4BD               	goto	l11142
  3422  012628                     __end_of_main:
  3423                           	opt callstack 0
  3424                           
  3425 ;; *************** function _static_soc *****************
  3426 ;; Defined at:
  3427 ;;		line 84 in file "mbmc.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1  [STACK] void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2
  3436 ;; Tracked objects:
  3437 ;;		On entry : 3F/39
  3438 ;;		On exit  : 3F/1
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    7
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text1
  3456  018DDC                     __ptext1:
  3457                           	opt callstack 0
  3458  018DDC                     _static_soc:
  3459                           	opt callstack 23
  3460                           
  3461                           ;mbmc.c: 86:  C.static_ah = C.bank_ah;
  3462                           
  3463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3464                           ;incstack = 0
  3465  018DDC  C17C  F180         	movff	_C+124,_C+128	;volatile
  3466  018DE0  C17D  F181         	movff	_C+125,_C+129	;volatile
  3467  018DE4  C17E  F182         	movff	_C+126,_C+130	;volatile
  3468  018DE8  C17F  F183         	movff	_C+127,_C+131	;volatile
  3469                           
  3470                           ;mbmc.c: 87:  C.runtime = 120;
  3471  018DEC  0E00               	movlw	0
  3472  018DEE  0101               	movlb	1	; () banked
  3473  018DF0  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
  3474  018DF2  0E78               	movlw	120
  3475  018DF4  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
  3476                           
  3477                           ;mbmc.c: 88:  C.soc = 100;
  3478  018DF6  0E00               	movlw	0
  3479  018DF8  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
  3480  018DFA  0E64               	movlw	100
  3481  018DFC  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
  3482                           
  3483                           ; BSR set to: 1
  3484                           ;mbmc.c: 89:  C.dynamic_ah = C.static_ah;
  3485  018DFE  C180  F184         	movff	_C+128,_C+132	;volatile
  3486  018E02  C181  F185         	movff	_C+129,_C+133	;volatile
  3487  018E06  C182  F186         	movff	_C+130,_C+134	;volatile
  3488  018E0A  C183  F187         	movff	_C+131,_C+135	;volatile
  3489                           
  3490                           ; BSR set to: 1
  3491                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3492  018E0E  0012               	return		;funcret
  3493  018E10                     __end_of_static_soc:
  3494                           	opt callstack 0
  3495                           
  3496 ;; *************** function _start_switch_handler *****************
  3497 ;; Defined at:
  3498 ;;		line 119 in file "dio.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1  [STACK] void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3507 ;; Tracked objects:
  3508 ;;		On entry : 1/0
  3509 ;;		On exit  : 3F/39
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3516 ;;Total ram usage:        0 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    8
  3519 ;; This function calls:
  3520 ;;		_INT1_SetInterruptHandler
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text2
  3527  019424                     __ptext2:
  3528                           	opt callstack 0
  3529  019424                     _start_switch_handler:
  3530                           	opt callstack 22
  3531                           
  3532                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3533                           
  3534                           ; BSR set to: 1
  3535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3536                           ;incstack = 0
  3537  019424  0139               	movlb	57	; () banked
  3538  019426  9195               	bcf	149,0,b	;volatile
  3539                           
  3540                           ; BSR set to: 57
  3541                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3542  019428  0E00               	movlw	low _switch_handler
  3543  01942A  6EE6               	movwf	postinc1,c
  3544  01942C  0E6F               	movlw	high _switch_handler
  3545  01942E  6EE6               	movwf	postinc1,c
  3546  019430  0E01               	movlw	low (_switch_handler shr (0+16))
  3547  019432  6EE6               	movwf	postinc1,c
  3548  019434  ECE3  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
  3549                           
  3550                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3551  019438  0E02               	movlw	2
  3552  01943A  0100               	movlb	0	; () banked
  3553  01943C  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3557  01943E  0139               	movlb	57	; () banked
  3558  019440  8195               	bsf	149,0,b	;volatile
  3559                           
  3560                           ; BSR set to: 57
  3561                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3562  019442  0012               	return		;funcret
  3563  019444                     __end_of_start_switch_handler:
  3564                           	opt callstack 0
  3565                           
  3566 ;; *************** function _start_adc_scan *****************
  3567 ;; Defined at:
  3568 ;;		line 33 in file "daq.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1  [STACK] _Bool 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 1/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    8
  3589 ;; This function calls:
  3590 ;;		_ADCC_DischargeSampleCapacitor
  3591 ;;		_ADCC_SetADIInterruptHandler
  3592 ;;		_ADCC_SetADTIInterruptHandler
  3593 ;;		_ADCC_StartConversion
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text3
  3600  0185AA                     __ptext3:
  3601                           	opt callstack 0
  3602  0185AA                     _start_adc_scan:
  3603                           	opt callstack 22
  3604                           
  3605                           ;daq.c: 35:  if (R.done)
  3606                           
  3607                           ; BSR set to: 57
  3608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3609                           ;incstack = 0
  3610  0185AA  0100               	movlb	0	; () banked
  3611  0185AC  51EA               	movf	(_R+39)& (0+255),w,b	;volatile
  3612  0185AE  A4D8               	btfss	status,2,c
  3613  0185B0  0012               	return	
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;daq.c: 38:  R.scan_index = 0;
  3617  0185B2  6BE7               	clrf	(_R+36)& (0+255),b	;volatile
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3621  0185B4  013A               	movlb	58	; () banked
  3622  0185B6  5140               	movf	64,w,b	;volatile
  3623  0185B8  006E F940  F025    	movff	14928,btemp	;volatile
  3624  0185BE  6A26               	clrf	(btemp+1)^0,c
  3625  0185C0  0060  F094  F026   	movff	btemp,btemp+1
  3626  0185C6  6A25               	clrf	btemp^0,c
  3627  0185C8  2625               	addwf	btemp^0,f,c
  3628  0185CA  0E00               	movlw	0
  3629  0185CC  2226               	addwfc	(btemp+1)^0,f,c
  3630  0185CE  0E77               	movlw	119
  3631  0185D0  1425               	andwf	btemp^0,w,c
  3632  0185D2  0100               	movlb	0	; () banked
  3633  0185D4  6FE8               	movwf	(_R+37)& (0+255),b	;volatile
  3634  0185D6  0E3C               	movlw	60
  3635  0185D8  1426               	andwf	(btemp+1)^0,w,c
  3636  0185DA  6FE9               	movwf	(_R+38)& (0+255),b	;volatile
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3640  0185DC  0EBA               	movlw	low _adc_int_handler
  3641  0185DE  6EE6               	movwf	postinc1,c
  3642  0185E0  0E96               	movlw	high _adc_int_handler
  3643  0185E2  6EE6               	movwf	postinc1,c
  3644  0185E4  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3645  0185E6  6EE6               	movwf	postinc1,c
  3646  0185E8  EC1F  F0C9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3647                           
  3648                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3649  0185EC  0E86               	movlw	low _adc_int_t_handler
  3650  0185EE  6EE6               	movwf	postinc1,c
  3651  0185F0  0E83               	movlw	high _adc_int_t_handler
  3652  0185F2  6EE6               	movwf	postinc1,c
  3653  0185F4  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3654  0185F6  6EE6               	movwf	postinc1,c
  3655  0185F8  EC0B  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3656                           
  3657                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3658  0185FC  EC35  F0CB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3659                           
  3660                           ; BSR set to: 62
  3661                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3662  018600  0100               	movlb	0	; () banked
  3663  018602  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
  3664  018604  0B0F               	andlw	15
  3665  018606  6EE6               	movwf	postinc1,c
  3666  018608  ECE8  F0CA         	call	_ADCC_StartConversion	;wreg free
  3667                           
  3668                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3669  01860C  0012               	return		;funcret
  3670  01860E                     __end_of_start_adc_scan:
  3671                           	opt callstack 0
  3672                           
  3673 ;; *************** function _ADCC_StartConversion *****************
  3674 ;; Defined at:
  3675 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  channel         1  [STACK] enum E16136
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1  [STACK] void 
  3682 ;; Registers used:
  3683 ;;		fsr1l, fsr1h
  3684 ;; Tracked objects:
  3685 ;;		On entry : 3F/0
  3686 ;;		On exit  : 3F/3E
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    7
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_start_adc_scan
  3700 ;;		_adc_int_t_handler
  3701 ;; This function uses a reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text4
  3705  0195D0                     __ptext4:
  3706                           	opt callstack 0
  3707  0195D0                     _ADCC_StartConversion:
  3708                           	opt callstack 4
  3709                           
  3710                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3711                           ;stkvar	_channel @ sp[(0)+-1]
  3712                           
  3713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3714                           ;incstack = 0
  3715  0195D0  0EFF               	movlw	-1
  3716  0195D2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3717                           
  3718                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3719  0195D8  013E               	movlb	62	; () banked
  3720  0195DA  8FF8               	bsf	248,7,b	;volatile
  3721                           
  3722                           ; BSR set to: 62
  3723                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3724  0195DC  81F8               	bsf	248,0,b	;volatile
  3725                           
  3726                           ; BSR set to: 62
  3727                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3728  0195DE  52E5               	movf	postdec1,f,c
  3729  0195E0  0012               	return		;funcret
  3730  0195E2                     __end_of_ADCC_StartConversion:
  3731                           	opt callstack 0
  3732                           
  3733 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3734 ;; Defined at:
  3735 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1  [STACK] void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 3F/3E
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    7
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_start_adc_scan
  3760 ;;		_adc_int_t_handler
  3761 ;; This function uses a reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text5
  3765  01966A                     __ptext5:
  3766                           	opt callstack 0
  3767  01966A                     _ADCC_DischargeSampleCapacitor:
  3768                           	opt callstack 4
  3769                           
  3770                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3771                           
  3772                           ; BSR set to: 62
  3773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3774                           ;incstack = 0
  3775  01966A  0E3B               	movlw	59
  3776  01966C  013E               	movlb	62	; () banked
  3777  01966E  6FF1               	movwf	241,b	;volatile
  3778                           
  3779                           ; BSR set to: 62
  3780                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3781  019670  0012               	return		;funcret
  3782  019672                     __end_of_ADCC_DischargeSampleCapacitor:
  3783                           	opt callstack 0
  3784                           
  3785 ;; *************** function _srand *****************
  3786 ;; Defined at:
  3787 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  s               2  [STACK] unsigned int 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1  [STACK] void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3796 ;; Tracked objects:
  3797 ;;		On entry : 3F/0
  3798 ;;		On exit  : 3F/1
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    7
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text6
  3816  018E10                     __ptext6:
  3817                           	opt callstack 0
  3818  018E10                     _srand:
  3819                           	opt callstack 23
  3820                           
  3821                           ;stkvar	_s @ sp[(0)+-2]
  3822                           
  3823                           ; BSR set to: 62
  3824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3825                           ;incstack = 0
  3826  018E10  0EFE               	movlw	-2
  3827  018E12  50E3               	movf	plusw1,w,c
  3828  018E14  0FFF               	addlw	255
  3829  018E16  6E2F               	movwf	(btemp+10)^0,c
  3830  018E18  0EFF               	movlw	-1
  3831  018E1A  006F FF8C  F030    	movff	plusw1,btemp+11
  3832  018E20  0EFF               	movlw	255
  3833  018E22  2230               	addwfc	(btemp+11)^0,f,c
  3834  018E24  0060  F0BC  F1CD   	movff	btemp+10,_seed
  3835  018E2A  0060  F0C0  F1CE   	movff	btemp+11,_seed+1
  3836  018E30  0101               	movlb	1	; () banked
  3837  018E32  6BCF               	clrf	(_seed+2)& (0+255),b
  3838  018E34  6BD0               	clrf	(_seed+3)& (0+255),b
  3839  018E36  6BD1               	clrf	(_seed+4)& (0+255),b
  3840  018E38  6BD2               	clrf	(_seed+5)& (0+255),b
  3841  018E3A  6BD3               	clrf	(_seed+6)& (0+255),b
  3842  018E3C  6BD4               	clrf	(_seed+7)& (0+255),b
  3843                           
  3844                           ; BSR set to: 1
  3845                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3846  018E3E  52E5               	movf	postdec1,f,c
  3847  018E40  52E5               	movf	postdec1,f,c
  3848  018E42  0012               	return		;funcret
  3849  018E44                     __end_of_srand:
  3850                           	opt callstack 0
  3851                           
  3852 ;; *************** function _init_display *****************
  3853 ;; Defined at:
  3854 ;;		line 37 in file "eadog.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1  [STACK] void 
  3861 ;; Registers used:
  3862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/2
  3865 ;;		On exit  : 3F/3D
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    9
  3875 ;; This function calls:
  3876 ;;		_ringBufS_init
  3877 ;;		_send_lcd_cmd
  3878 ;;		_send_lcd_cmd_long
  3879 ;;		_wdtdelay
  3880 ;; This function is called by:
  3881 ;;		_main
  3882 ;; This function uses a reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text7
  3886  017790                     __ptext7:
  3887                           	opt callstack 0
  3888  017790                     _init_display:
  3889                           	opt callstack 21
  3890                           
  3891                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3892                           
  3893                           ; BSR set to: 1
  3894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3895                           ;incstack = 0
  3896  017790  0E43               	movlw	low _ring_buf1
  3897  017792  0100               	movlb	0	; () banked
  3898  017794  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3899  017796  0E04               	movlw	high _ring_buf1
  3900  017798  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3901                           
  3902                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3903  01779A  0E00               	movlw	low _ring_buf2
  3904  01779C  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3905  01779E  0E04               	movlw	high _ring_buf2
  3906  0177A0  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3910  0177A2  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  3911  0177A8  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  3912  0177AE  EC1B  F0C8         	call	_ringBufS_init	;wreg free
  3913                           
  3914                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3915  0177B2  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  3916  0177B8  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  3917  0177BE  EC1B  F0C8         	call	_ringBufS_init	;wreg free
  3918                           
  3919                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3920  0177C2  84BE               	bsf	190,2,c	;volatile
  3921  0177C4  84BC               	bsf	188,2,c	;volatile
  3922                           
  3923                           ;eadog.c: 58:  wdtdelay(350000);
  3924  0177C6  0E30               	movlw	48
  3925  0177C8  6EE6               	movwf	postinc1,c
  3926  0177CA  0E57               	movlw	87
  3927  0177CC  6EE6               	movwf	postinc1,c
  3928  0177CE  0E05               	movlw	5
  3929  0177D0  6EE6               	movwf	postinc1,c
  3930  0177D2  0E00               	movlw	0
  3931  0177D4  6EE6               	movwf	postinc1,c
  3932  0177D6  ECCA  F0C3         	call	_wdtdelay	;wreg free
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  3936  0177DA  0E39               	movlw	57
  3937  0177DC  6EE6               	movwf	postinc1,c
  3938  0177DE  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  3942  0177E2  0E1D               	movlw	29
  3943  0177E4  6EE6               	movwf	postinc1,c
  3944  0177E6  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  3948  0177EA  0E50               	movlw	80
  3949  0177EC  6EE6               	movwf	postinc1,c
  3950  0177EE  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  3954  0177F2  0E6C               	movlw	108
  3955  0177F4  6EE6               	movwf	postinc1,c
  3956  0177F6  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  3960  0177FA  0E76               	movlw	118
  3961  0177FC  6EE6               	movwf	postinc1,c
  3962  0177FE  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  3966  017802  0E38               	movlw	56
  3967  017804  6EE6               	movwf	postinc1,c
  3968  017806  ECF3  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  3972  01780A  0E0F               	movlw	15
  3973  01780C  6EE6               	movwf	postinc1,c
  3974  01780E  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  3978  017812  0E01               	movlw	1
  3979  017814  6EE6               	movwf	postinc1,c
  3980  017816  ECF3  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  3984  01781A  0E02               	movlw	2
  3985  01781C  6EE6               	movwf	postinc1,c
  3986  01781E  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  3990  017822  0E06               	movlw	6
  3991  017824  6EE6               	movwf	postinc1,c
  3992  017826  EC07  F0C8         	call	_send_lcd_cmd	;wreg free
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;eadog.c: 69:  wdtdelay(30);
  3996  01782A  0E1E               	movlw	30
  3997  01782C  6EE6               	movwf	postinc1,c
  3998  01782E  0E00               	movlw	0
  3999  017830  6EE6               	movwf	postinc1,c
  4000  017832  0E00               	movlw	0
  4001  017834  6EE6               	movwf	postinc1,c
  4002  017836  0E00               	movlw	0
  4003  017838  6EE6               	movwf	postinc1,c
  4004  01783A  ECCA  F0C3         	call	_wdtdelay	;wreg free
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  4008  01783E  0E02               	movlw	2
  4009  017840  013D               	movlb	61	; () banked
  4010  017842  6F16               	movwf	22,b	;volatile
  4011                           
  4012                           ; BSR set to: 61
  4013                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  4014  017844  0E40               	movlw	64
  4015  017846  6F15               	movwf	21,b	;volatile
  4016                           
  4017                           ; BSR set to: 61
  4018                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  4019  017848  0E83               	movlw	131
  4020  01784A  6F14               	movwf	20,b	;volatile
  4021                           
  4022                           ; BSR set to: 61
  4023                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4024  01784C  931A               	bcf	26,1,b	;volatile
  4025                           
  4026                           ; BSR set to: 61
  4027                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4028  01784E  0E3F               	movlw	-193
  4029  017850  013B               	movlb	59	; () banked
  4030  017852  17FD               	andwf	253,f,b	;volatile
  4031                           
  4032                           ; BSR set to: 59
  4033                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4034  017854  9BFD               	bcf	253,5,b	;volatile
  4035                           
  4036                           ; BSR set to: 59
  4037                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4038  017856  51FD               	movf	253,w,b	;volatile
  4039  017858  0BF9               	andlw	-7
  4040  01785A  0902               	iorlw	2
  4041  01785C  6FFD               	movwf	253,b	;volatile
  4042                           
  4043                           ; BSR set to: 59
  4044                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4045  01785E  0EE7               	movlw	-25
  4046  017860  17FD               	andwf	253,f,b	;volatile
  4047                           
  4048                           ; BSR set to: 59
  4049                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4050  017862  81FD               	bsf	253,0,b	;volatile
  4051                           
  4052                           ; BSR set to: 59
  4053                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4054  017864  0E43               	movlw	low _ring_buf1
  4055  017866  6FF9               	movwf	249,b	;volatile
  4056  017868  0E04               	movlw	high _ring_buf1
  4057  01786A  6FFA               	movwf	250,b	;volatile
  4058  01786C  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4059  01786E  6FFB               	movwf	251,b	;volatile
  4060                           
  4061                           ; BSR set to: 59
  4062                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4063  017870  9BFC               	bcf	252,5,b	;volatile
  4064                           
  4065                           ; BSR set to: 59
  4066                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4067  017872  013D               	movlb	61	; () banked
  4068  017874  831A               	bsf	26,1,b	;volatile
  4069                           
  4070                           ; BSR set to: 61
  4071                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4072  017876  94BE               	bcf	190,2,c	;volatile
  4073                           
  4074                           ; BSR set to: 61
  4075                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4076  017878  0012               	return		;funcret
  4077  01787A                     __end_of_init_display:
  4078                           	opt callstack 0
  4079                           
  4080 ;; *************** function _send_lcd_cmd_long *****************
  4081 ;; Defined at:
  4082 ;;		line 127 in file "eadog.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  cmd             1  [STACK] const unsigned char 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1  [STACK] void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4091 ;; Tracked objects:
  4092 ;;		On entry : 3F/0
  4093 ;;		On exit  : 3F/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    8
  4103 ;; This function calls:
  4104 ;;		_SPI1_Exchange8bit
  4105 ;;		_wdtdelay
  4106 ;; This function is called by:
  4107 ;;		_init_display
  4108 ;; This function uses a reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text8
  4112  018FE6                     __ptext8:
  4113                           	opt callstack 0
  4114  018FE6                     _send_lcd_cmd_long:
  4115                           	opt callstack 21
  4116                           
  4117                           ; BSR set to: 61
  4118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4119                           ;incstack = 0
  4120                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4121  018FE6  92BC               	bcf	188,1,c	;volatile
  4122                           
  4123                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4124  018FE8  94BC               	bcf	188,2,c	;volatile
  4125                           
  4126                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4127                           ;stkvar	_cmd @ sp[(0)+-1]
  4128  018FEA  0EFF               	movlw	-1
  4129  018FEC  50E3               	movf	plusw1,w,c
  4130  018FEE  6EE6               	movwf	postinc1,c
  4131  018FF0  EC22  F0CA         	call	_SPI1_Exchange8bit	;wreg free
  4132                           
  4133                           ; BSR set to: 57
  4134                           ;eadog.c: 132:  wdtdelay(800);
  4135  018FF4  0E20               	movlw	32
  4136  018FF6  6EE6               	movwf	postinc1,c
  4137  018FF8  0E03               	movlw	3
  4138  018FFA  6EE6               	movwf	postinc1,c
  4139  018FFC  0E00               	movlw	0
  4140  018FFE  6EE6               	movwf	postinc1,c
  4141  019000  0E00               	movlw	0
  4142  019002  6EE6               	movwf	postinc1,c
  4143  019004  ECCA  F0C3         	call	_wdtdelay	;wreg free
  4144                           
  4145                           ; BSR set to: 0
  4146  019008  82BC               	bsf	188,1,c	;volatile
  4147                           
  4148                           ; BSR set to: 0
  4149                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4150  01900A  52E5               	movf	postdec1,f,c
  4151  01900C  0012               	return		;funcret
  4152  01900E                     __end_of_send_lcd_cmd_long:
  4153                           	opt callstack 0
  4154                           
  4155 ;; *************** function _send_lcd_cmd *****************
  4156 ;; Defined at:
  4157 ;;		line 115 in file "eadog.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  cmd             1  [STACK] const unsigned char 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1  [STACK] void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4166 ;; Tracked objects:
  4167 ;;		On entry : 3F/0
  4168 ;;		On exit  : 3F/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    8
  4178 ;; This function calls:
  4179 ;;		_SPI1_Exchange8bit
  4180 ;;		_wdtdelay
  4181 ;; This function is called by:
  4182 ;;		_init_display
  4183 ;; This function uses a reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text9
  4187  01900E                     __ptext9:
  4188                           	opt callstack 0
  4189  01900E                     _send_lcd_cmd:
  4190                           	opt callstack 21
  4191                           
  4192                           ; BSR set to: 0
  4193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4194                           ;incstack = 0
  4195                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4196  01900E  92BC               	bcf	188,1,c	;volatile
  4197                           
  4198                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4199  019010  94BC               	bcf	188,2,c	;volatile
  4200                           
  4201                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4202                           ;stkvar	_cmd @ sp[(0)+-1]
  4203  019012  0EFF               	movlw	-1
  4204  019014  50E3               	movf	plusw1,w,c
  4205  019016  6EE6               	movwf	postinc1,c
  4206  019018  EC22  F0CA         	call	_SPI1_Exchange8bit	;wreg free
  4207                           
  4208                           ; BSR set to: 57
  4209                           ;eadog.c: 120:  wdtdelay(30);
  4210  01901C  0E1E               	movlw	30
  4211  01901E  6EE6               	movwf	postinc1,c
  4212  019020  0E00               	movlw	0
  4213  019022  6EE6               	movwf	postinc1,c
  4214  019024  0E00               	movlw	0
  4215  019026  6EE6               	movwf	postinc1,c
  4216  019028  0E00               	movlw	0
  4217  01902A  6EE6               	movwf	postinc1,c
  4218  01902C  ECCA  F0C3         	call	_wdtdelay	;wreg free
  4219                           
  4220                           ; BSR set to: 0
  4221  019030  82BC               	bsf	188,1,c	;volatile
  4222                           
  4223                           ; BSR set to: 0
  4224                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4225  019032  52E5               	movf	postdec1,f,c
  4226  019034  0012               	return		;funcret
  4227  019036                     __end_of_send_lcd_cmd:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function _SPI1_Exchange8bit *****************
  4231 ;; Defined at:
  4232 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  data            1  [STACK] unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1  [STACK] unsigned char 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 3F/39
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    7
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_send_lcd_cmd
  4257 ;;		_send_lcd_cmd_long
  4258 ;; This function uses a reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text10
  4262  019444                     __ptext10:
  4263                           	opt callstack 0
  4264  019444                     _SPI1_Exchange8bit:
  4265                           	opt callstack 21
  4266                           
  4267                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4268                           
  4269                           ; BSR set to: 0
  4270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4271                           ;incstack = 0
  4272  019444  0E01               	movlw	1
  4273  019446  013D               	movlb	61	; () banked
  4274  019448  6F12               	movwf	18,b	;volatile
  4275                           
  4276                           ; BSR set to: 61
  4277                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4278                           ;stkvar	_data @ sp[(0)+-1]
  4279  01944A  0EFF               	movlw	-1
  4280  01944C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4281  019452                     l837:
  4282                           
  4283                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4284  019452  0139               	movlb	57	; () banked
  4285  019454  A9A2               	btfss	162,4,b	;volatile
  4286  019456  D7FD               	goto	l837
  4287                           
  4288                           ; BSR set to: 57
  4289                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4290  019458  006F F440  F025    	movff	15632,btemp	;volatile
  4291                           
  4292                           ; BSR set to: 57
  4293                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4294  01945E  52E5               	movf	postdec1,f,c
  4295  019460  0012               	return		;funcret
  4296  019462                     __end_of_SPI1_Exchange8bit:
  4297                           	opt callstack 0
  4298                           
  4299 ;; *************** function _ringBufS_init *****************
  4300 ;; Defined at:
  4301 ;;		line 22 in file "ringbufs.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  _this           2  [STACK] PTR volatile struct ring
  4304 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1  [STACK] void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    8
  4323 ;; This function calls:
  4324 ;;		_memset
  4325 ;; This function is called by:
  4326 ;;		_init_display
  4327 ;; This function uses a reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text11
  4331  019036                     __ptext11:
  4332                           	opt callstack 0
  4333  019036                     _ringBufS_init:
  4334                           	opt callstack 21
  4335                           
  4336                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4337                           
  4338                           ; BSR set to: 57
  4339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4340                           ;incstack = 0
  4341  019036  0E43               	movlw	67
  4342  019038  6EE6               	movwf	postinc1,c
  4343  01903A  0E00               	movlw	0
  4344  01903C  6EE6               	movwf	postinc1,c
  4345  01903E  0E00               	movlw	0
  4346  019040  6EE6               	movwf	postinc1,c
  4347  019042  0E00               	movlw	0
  4348  019044  6EE6               	movwf	postinc1,c
  4349                           
  4350                           ;stkvar	__this @ sp[(-4)+-2]
  4351  019046  0EFA               	movlw	-6
  4352  019048  006F FF8F FFE6     	movff	plusw1,postinc1
  4353  01904E  006F FF8F FFE6     	movff	plusw1,postinc1
  4354  019054  EC62  F0A8         	call	_memset	;wreg free
  4355                           
  4356                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4357  019058  52E5               	movf	postdec1,f,c
  4358  01905A  52E5               	movf	postdec1,f,c
  4359  01905C  0012               	return		;funcret
  4360  01905E                     __end_of_ringBufS_init:
  4361                           	opt callstack 0
  4362                           
  4363 ;; *************** function _init_bsoc *****************
  4364 ;; Defined at:
  4365 ;;		line 40 in file "bsoc.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1  [STACK] void 
  4372 ;; Registers used:
  4373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4374 ;; Tracked objects:
  4375 ;;		On entry : 3F/1
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    8
  4386 ;; This function calls:
  4387 ;;		_TMR3_SetInterruptHandler
  4388 ;; This function is called by:
  4389 ;;		_main
  4390 ;; This function uses a reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text12
  4394  0195E2                     __ptext12:
  4395                           	opt callstack 0
  4396  0195E2                     _init_bsoc:
  4397                           	opt callstack 22
  4398                           
  4399                           ;bsoc.c: 42:  TMR3_SetInterruptHandler(calc_bsoc);
  4400                           
  4401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4402                           ;incstack = 0
  4403  0195E2  0E88               	movlw	low _calc_bsoc
  4404  0195E4  6EE6               	movwf	postinc1,c
  4405  0195E6  0E3B               	movlw	high _calc_bsoc
  4406  0195E8  6EE6               	movwf	postinc1,c
  4407  0195EA  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4408  0195EC  6EE6               	movwf	postinc1,c
  4409  0195EE  ECCF  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
  4410                           
  4411                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4412  0195F2  0012               	return		;funcret
  4413  0195F4                     __end_of_init_bsoc:
  4414                           	opt callstack 0
  4415                           
  4416 ;; *************** function _hid_display *****************
  4417 ;; Defined at:
  4418 ;;		line 17 in file "hid.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  h               1  [STACK] PTR struct H_data
  4421 ;;		 -> H(7), 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1  [STACK] PTR struct H_data
  4426 ;; Registers used:
  4427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4428 ;; Tracked objects:
  4429 ;;		On entry : 3F/1
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    9
  4440 ;; This function calls:
  4441 ;;		_hid_input
  4442 ;; This function is called by:
  4443 ;;		_main
  4444 ;; This function uses a reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text13
  4448  017592                     __ptext13:
  4449                           	opt callstack 0
  4450  017592                     _hid_display:
  4451                           	opt callstack 21
  4452                           
  4453                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4454                           ;stkvar	_h @ sp[(0)+-1]
  4455                           
  4456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4457                           ;incstack = 0
  4458  017592  0EFF               	movlw	-1
  4459  017594  50E3               	movf	plusw1,w,c
  4460  017596  6EE6               	movwf	postinc1,c
  4461  017598  ECB3  F0C0         	call	_hid_input	;wreg free
  4462                           
  4463                           ;hid.c: 21:  switch (h->h_state) {
  4464  01759C  D066               	goto	l9516
  4465  01759E                     l9494:
  4466                           
  4467                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4468                           ;stkvar	_h @ sp[(0)+-1]
  4469  01759E  0EFF               	movlw	-1
  4470  0175A0  50E3               	movf	plusw1,w,c
  4471  0175A2  6ED9               	movwf	fsr2l,c
  4472  0175A4  6ADA               	clrf	fsr2h,c
  4473  0175A6  0E01               	movlw	1
  4474  0175A8  26D9               	addwf	fsr2l,f,c
  4475  0175AA  0E01               	movlw	1
  4476  0175AC  6EDF               	movwf	indf2,c
  4477                           
  4478                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4479                           ;stkvar	_h @ sp[(0)+-1]
  4480  0175AE  0EFF               	movlw	-1
  4481  0175B0  50E3               	movf	plusw1,w,c
  4482  0175B2  6ED9               	movwf	fsr2l,c
  4483  0175B4  6ADA               	clrf	fsr2h,c
  4484  0175B6  0E00               	movlw	0
  4485  0175B8  6EDF               	movwf	indf2,c
  4486                           
  4487                           ;hid.c: 25:   h->wait_enter = 1;
  4488                           ;stkvar	_h @ sp[(0)+-1]
  4489  0175BA  0EFF               	movlw	-1
  4490  0175BC  50E3               	movf	plusw1,w,c
  4491  0175BE  6ED9               	movwf	fsr2l,c
  4492  0175C0  6ADA               	clrf	fsr2h,c
  4493  0175C2  0E04               	movlw	4
  4494  0175C4  26D9               	addwf	fsr2l,f,c
  4495  0175C6  0E01               	movlw	1
  4496  0175C8  6EDF               	movwf	indf2,c
  4497                           
  4498                           ;hid.c: 26:   h->wait_select = 1;
  4499                           ;stkvar	_h @ sp[(0)+-1]
  4500  0175CA  0EFF               	movlw	-1
  4501  0175CC  50E3               	movf	plusw1,w,c
  4502  0175CE  6ED9               	movwf	fsr2l,c
  4503  0175D0  6ADA               	clrf	fsr2h,c
  4504  0175D2  0E02               	movlw	2
  4505  0175D4  26D9               	addwf	fsr2l,f,c
  4506  0175D6  0E01               	movlw	1
  4507  0175D8  6EDF               	movwf	indf2,c
  4508                           
  4509                           ;hid.c: 27:   h->select_p = SW_OFF;
  4510                           ;stkvar	_h @ sp[(0)+-1]
  4511  0175DA  0EFF               	movlw	-1
  4512  0175DC  50E3               	movf	plusw1,w,c
  4513  0175DE  6ED9               	movwf	fsr2l,c
  4514  0175E0  6ADA               	clrf	fsr2h,c
  4515  0175E2  0E03               	movlw	3
  4516  0175E4  26D9               	addwf	fsr2l,f,c
  4517  0175E6  0E00               	movlw	0
  4518  0175E8  6EDF               	movwf	indf2,c
  4519                           
  4520                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4521                           ;stkvar	_h @ sp[(0)+-1]
  4522  0175EA  0EFF               	movlw	-1
  4523  0175EC  50E3               	movf	plusw1,w,c
  4524  0175EE  6ED9               	movwf	fsr2l,c
  4525  0175F0  6ADA               	clrf	fsr2h,c
  4526  0175F2  0E05               	movlw	5
  4527  0175F4  26D9               	addwf	fsr2l,f,c
  4528  0175F6  0E00               	movlw	0
  4529  0175F8  D036               	goto	L1
  4530  0175FA                     l9506:
  4531                           
  4532                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4533                           ;stkvar	_h @ sp[(0)+-1]
  4534  0175FA  0EFF               	movlw	-1
  4535  0175FC  50E3               	movf	plusw1,w,c
  4536  0175FE  6ED9               	movwf	fsr2l,c
  4537  017600  6ADA               	clrf	fsr2h,c
  4538  017602  0E02               	movlw	2
  4539  017604  26D9               	addwf	fsr2l,f,c
  4540  017606  50DF               	movf	indf2,w,c
  4541  017608  A4D8               	btfss	status,2,c
  4542  01760A  D042               	goto	l1894
  4543                           
  4544                           ;stkvar	_h @ sp[(0)+-1]
  4545  01760C  0EFF               	movlw	-1
  4546  01760E  50E3               	movf	plusw1,w,c
  4547  017610  6ED9               	movwf	fsr2l,c
  4548  017612  6ADA               	clrf	fsr2h,c
  4549  017614  0E03               	movlw	3
  4550  017616  26D9               	addwf	fsr2l,f,c
  4551  017618  50DF               	movf	indf2,w,c
  4552  01761A  A4D8               	btfss	status,2,c
  4553  01761C  D039               	goto	l1894
  4554                           
  4555                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4556                           ;stkvar	_h @ sp[(0)+-1]
  4557  01761E  0EFF               	movlw	-1
  4558  017620  50E3               	movf	plusw1,w,c
  4559  017622  6ED9               	movwf	fsr2l,c
  4560  017624  6ADA               	clrf	fsr2h,c
  4561  017626  0E06               	movlw	6
  4562  017628  26D9               	addwf	fsr2l,f,c
  4563                           
  4564                           ;stkvar	_h @ sp[(0)+-1]
  4565  01762A  0EFF               	movlw	-1
  4566  01762C  50E3               	movf	plusw1,w,c
  4567  01762E  6EE9               	movwf	fsr0l,c
  4568  017630  6AEA               	clrf	fsr0h,c
  4569  017632  0E06               	movlw	6
  4570  017634  26E9               	addwf	fsr0l,f,c
  4571  017636  2AEF               	incf	indf0,f,c
  4572  017638  50EF               	movf	indf0,w,c
  4573  01763A  0B03               	andlw	3
  4574  01763C  6EDF               	movwf	indf2,c
  4575                           
  4576                           ;hid.c: 34:    h->hid_display = h->sequence;
  4577                           ;stkvar	_h @ sp[(0)+-1]
  4578  01763E  0EFF               	movlw	-1
  4579  017640  50E3               	movf	plusw1,w,c
  4580  017642  6ED9               	movwf	fsr2l,c
  4581  017644  6ADA               	clrf	fsr2h,c
  4582  017646  0E06               	movlw	6
  4583  017648  26D9               	addwf	fsr2l,f,c
  4584                           
  4585                           ;stkvar	_h @ sp[(0)+-1]
  4586  01764A  0EFF               	movlw	-1
  4587  01764C  50E3               	movf	plusw1,w,c
  4588  01764E  6EE9               	movwf	fsr0l,c
  4589  017650  6AEA               	clrf	fsr0h,c
  4590  017652  006F FF7F FFEF     	movff	indf2,indf0
  4591                           
  4592                           ;hid.c: 35:    h->wait_select = 1;
  4593                           ;stkvar	_h @ sp[(0)+-1]
  4594  017658  0EFF               	movlw	-1
  4595  01765A  50E3               	movf	plusw1,w,c
  4596  01765C  6ED9               	movwf	fsr2l,c
  4597  01765E  6ADA               	clrf	fsr2h,c
  4598  017660  0E02               	movlw	2
  4599  017662  26D9               	addwf	fsr2l,f,c
  4600  017664  0E01               	movlw	1
  4601  017666                     L1:
  4602  017666  6EDF               	movwf	indf2,c
  4603  017668  D013               	goto	l1894
  4604  01766A                     l9516:
  4605                           
  4606                           ;stkvar	_h @ sp[(0)+-1]
  4607  01766A  0EFF               	movlw	-1
  4608  01766C  50E3               	movf	plusw1,w,c
  4609  01766E  6ED9               	movwf	fsr2l,c
  4610  017670  6ADA               	clrf	fsr2h,c
  4611  017672  0E01               	movlw	1
  4612  017674  26D9               	addwf	fsr2l,f,c
  4613  017676  50DF               	movf	indf2,w,c
  4614  017678  6E2F               	movwf	(btemp+10)^0,c
  4615  01767A  6A30               	clrf	(btemp+11)^0,c
  4616                           
  4617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4618                           ; Switch size 1, requested type "simple"
  4619                           ; Number of cases is 1, Range of values is 0 to 0
  4620                           ; switch strategies available:
  4621                           ; Name         Instructions Cycles
  4622                           ; simple_byte            4     3 (average)
  4623                           ;	Chosen strategy is simple_byte
  4624  01767C  5030               	movf	(btemp+11)^0,w,c
  4625  01767E  0A00               	xorlw	0	; case 0
  4626  017680  A4D8               	btfss	status,2,c
  4627  017682  D7BB               	goto	l9506
  4628                           
  4629                           ; Switch size 1, requested type "simple"
  4630                           ; Number of cases is 2, Range of values is 0 to 1
  4631                           ; switch strategies available:
  4632                           ; Name         Instructions Cycles
  4633                           ; simple_byte            7     4 (average)
  4634                           ;	Chosen strategy is simple_byte
  4635  017684  502F               	movf	(btemp+10)^0,w,c
  4636  017686  0A00               	xorlw	0	; case 0
  4637  017688  B4D8               	btfsc	status,2,c
  4638  01768A  D789               	goto	l9494
  4639  01768C  0A01               	xorlw	1	; case 1
  4640  01768E  D7B5               	goto	l9506
  4641  017690                     l1894:
  4642                           
  4643                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4644  017690  52E5               	movf	postdec1,f,c
  4645  017692  0012               	return		;funcret
  4646  017694                     __end_of_hid_display:
  4647                           	opt callstack 0
  4648                           
  4649 ;; *************** function _hid_input *****************
  4650 ;; Defined at:
  4651 ;;		line 3 in file "hid.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  h               1  [STACK] PTR struct H_data
  4654 ;;		 -> H(7), 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1  [STACK] PTR struct H_data
  4659 ;; Registers used:
  4660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/1
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    8
  4673 ;; This function calls:
  4674 ;;		_get_switch
  4675 ;; This function is called by:
  4676 ;;		_hid_display
  4677 ;; This function uses a reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text14
  4681  018166                     __ptext14:
  4682                           	opt callstack 0
  4683  018166                     _hid_input:
  4684                           	opt callstack 21
  4685                           
  4686                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4687                           
  4688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4689                           ;incstack = 0
  4690  018166  0E02               	movlw	2
  4691  018168  6EE6               	movwf	postinc1,c
  4692  01816A  EC2F  F0C8         	call	_get_switch	;wreg free
  4693  01816E  5025               	movf	btemp^0,w,c
  4694  018170  B4D8               	btfsc	status,2,c
  4695  018172  D01C               	goto	l9206
  4696                           
  4697                           ;hid.c: 6:   h->wait_select = 0;
  4698                           ;stkvar	_h @ sp[(0)+-1]
  4699  018174  0EFF               	movlw	-1
  4700  018176  50E3               	movf	plusw1,w,c
  4701  018178  6ED9               	movwf	fsr2l,c
  4702  01817A  6ADA               	clrf	fsr2h,c
  4703  01817C  0E02               	movlw	2
  4704  01817E  26D9               	addwf	fsr2l,f,c
  4705  018180  0E00               	movlw	0
  4706  018182  6EDF               	movwf	indf2,c
  4707                           
  4708                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4709  018184  0E02               	movlw	2
  4710  018186  6EE6               	movwf	postinc1,c
  4711  018188  EC2F  F0C8         	call	_get_switch	;wreg free
  4712  01818C  5025               	movf	btemp^0,w,c
  4713  01818E  B4D8               	btfsc	status,2,c
  4714  018190  D003               	goto	u8570
  4715  018192  6A30               	clrf	(btemp+11)^0,c
  4716  018194  2A30               	incf	(btemp+11)^0,f,c
  4717  018196  D001               	goto	u8588
  4718  018198                     u8570:
  4719  018198  6A30               	clrf	(btemp+11)^0,c
  4720  01819A                     u8588:
  4721                           
  4722                           ;stkvar	_h @ sp[(0)+-1]
  4723  01819A  0EFF               	movlw	-1
  4724  01819C  50E3               	movf	plusw1,w,c
  4725  01819E  6ED9               	movwf	fsr2l,c
  4726  0181A0  6ADA               	clrf	fsr2h,c
  4727  0181A2  0E03               	movlw	3
  4728  0181A4  26D9               	addwf	fsr2l,f,c
  4729  0181A6  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4730  0181AC                     l9206:
  4731                           
  4732                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4733  0181AC  0E03               	movlw	3
  4734  0181AE  6EE6               	movwf	postinc1,c
  4735  0181B0  EC2F  F0C8         	call	_get_switch	;wreg free
  4736  0181B4  5025               	movf	btemp^0,w,c
  4737  0181B6  B4D8               	btfsc	status,2,c
  4738  0181B8  D01C               	goto	l1885
  4739                           
  4740                           ;hid.c: 11:   h->wait_enter = 0;
  4741                           ;stkvar	_h @ sp[(0)+-1]
  4742  0181BA  0EFF               	movlw	-1
  4743  0181BC  50E3               	movf	plusw1,w,c
  4744  0181BE  6ED9               	movwf	fsr2l,c
  4745  0181C0  6ADA               	clrf	fsr2h,c
  4746  0181C2  0E04               	movlw	4
  4747  0181C4  26D9               	addwf	fsr2l,f,c
  4748  0181C6  0E00               	movlw	0
  4749  0181C8  6EDF               	movwf	indf2,c
  4750                           
  4751                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4752  0181CA  0E03               	movlw	3
  4753  0181CC  6EE6               	movwf	postinc1,c
  4754  0181CE  EC2F  F0C8         	call	_get_switch	;wreg free
  4755  0181D2  5025               	movf	btemp^0,w,c
  4756  0181D4  B4D8               	btfsc	status,2,c
  4757  0181D6  D003               	goto	u8600
  4758  0181D8  6A30               	clrf	(btemp+11)^0,c
  4759  0181DA  2A30               	incf	(btemp+11)^0,f,c
  4760  0181DC  D001               	goto	u8618
  4761  0181DE                     u8600:
  4762  0181DE  6A30               	clrf	(btemp+11)^0,c
  4763  0181E0                     u8618:
  4764                           
  4765                           ;stkvar	_h @ sp[(0)+-1]
  4766  0181E0  0EFF               	movlw	-1
  4767  0181E2  50E3               	movf	plusw1,w,c
  4768  0181E4  6ED9               	movwf	fsr2l,c
  4769  0181E6  6ADA               	clrf	fsr2h,c
  4770  0181E8  0E05               	movlw	5
  4771  0181EA  26D9               	addwf	fsr2l,f,c
  4772  0181EC  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4773  0181F2                     l1885:
  4774                           
  4775                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4776  0181F2  52E5               	movf	postdec1,f,c
  4777  0181F4  0012               	return		;funcret
  4778  0181F6                     __end_of_hid_input:
  4779                           	opt callstack 0
  4780                           
  4781 ;; *************** function _get_switch *****************
  4782 ;; Defined at:
  4783 ;;		line 18 in file "dio.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  i               1  [STACK] unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1  [STACK] enum E17030
  4790 ;; Registers used:
  4791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/2
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    7
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;;		_hid_input
  4809 ;; This function uses a reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text15
  4813  01905E                     __ptext15:
  4814                           	opt callstack 0
  4815  01905E                     _get_switch:
  4816                           	opt callstack 21
  4817                           
  4818                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4819                           ;stkvar	_i @ sp[(0)+-1]
  4820                           
  4821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4822                           ;incstack = 0
  4823  01905E  0EFF               	movlw	-1
  4824  019060  006F FF8C  F025    	movff	plusw1,btemp
  4825  019066  0E03               	movlw	3
  4826  019068  6425               	cpfsgt	btemp^0,c
  4827  01906A  D002               	goto	l7890
  4828                           
  4829                           ;dio.c: 21:   return SW_OFF;
  4830  01906C  0E00               	movlw	0
  4831  01906E  D008               	goto	L2
  4832  019070                     l7890:
  4833                           
  4834                           ;dio.c: 23:  return S.button[i].sw;
  4835                           ;stkvar	_i @ sp[(0)+-1]
  4836  019070  0EFF               	movlw	-1
  4837  019072  50E3               	movf	plusw1,w,c
  4838  019074  0D05               	mullw	5
  4839  019076  50F3               	movf	243,w,c
  4840  019078  0F60               	addlw	low _S
  4841  01907A  6ED9               	movwf	fsr2l,c
  4842  01907C  6ADA               	clrf	fsr2h,c
  4843  01907E  50DF               	movf	indf2,w,c
  4844  019080                     L2:
  4845  019080  6E25               	movwf	btemp^0,c
  4846                           
  4847                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4848  019082  52E5               	movf	postdec1,f,c
  4849  019084  0012               	return		;funcret
  4850  019086                     __end_of_get_switch:
  4851                           	opt callstack 0
  4852                           
  4853 ;; *************** function _eaDogM_WriteCommand *****************
  4854 ;; Defined at:
  4855 ;;		line 173 in file "eadog.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  cmd             1  [STACK] const unsigned char 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1  [STACK] void 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4864 ;; Tracked objects:
  4865 ;;		On entry : 3F/3D
  4866 ;;		On exit  : 3F/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:   17
  4876 ;; This function calls:
  4877 ;;		_send_lcd_cmd_dma
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text16
  4884  019604                     __ptext16:
  4885                           	opt callstack 0
  4886  019604                     _eaDogM_WriteCommand:
  4887                           	opt callstack 13
  4888                           
  4889                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  4890                           ;stkvar	_cmd @ sp[(0)+-1]
  4891                           
  4892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4893                           ;incstack = 0
  4894  019604  0EFF               	movlw	-1
  4895  019606  50E3               	movf	plusw1,w,c
  4896  019608  6EE6               	movwf	postinc1,c
  4897  01960A  EC51  F0C4         	call	_send_lcd_cmd_dma	;wreg free
  4898                           
  4899                           ; BSR set to: 0
  4900                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4901  01960E  52E5               	movf	postdec1,f,c
  4902  019610  0012               	return		;funcret
  4903  019612                     __end_of_eaDogM_WriteCommand:
  4904                           	opt callstack 0
  4905                           
  4906 ;; *************** function _convert_adc_data *****************
  4907 ;; Defined at:
  4908 ;;		line 40 in file "mbmc.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  i               1  [STACK] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1  [STACK] void 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/1
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:   10
  4929 ;; This function calls:
  4930 ;;		_conv_raw_result
  4931 ;;		_lp_filter
  4932 ;; This function is called by:
  4933 ;;		_main
  4934 ;; This function uses a reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text17
  4938  017B9E                     __ptext17:
  4939                           	opt callstack 0
  4940  017B9E                     _convert_adc_data:
  4941                           	opt callstack 0
  4942                           
  4943                           ; BSR set to: 0
  4944                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4945  017B9E  52E6               	movf	postinc1,f,c
  4946                           
  4947                           ;mbmc.c: 42:  uint8_t i = 0;
  4948                           ;stkvar	_i @ sp[(-1)+0]
  4949                           
  4950                           ;incstack = 0
  4951  017BA0  0EFF               	movlw	-1
  4952  017BA2  6AE3               	clrf	plusw1,c
  4953  017BA4                     l9466:
  4954                           
  4955                           ;mbmc.c: 45:   if (V.calib) {
  4956  017BA4  0102               	movlb	2	; () banked
  4957  017BA6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4958  017BA8  B4D8               	btfsc	status,2,c
  4959  017BAA  D01B               	goto	l9470
  4960                           
  4961                           ; BSR set to: 2
  4962                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4963  017BAC  0E01               	movlw	1
  4964  017BAE  6EE6               	movwf	postinc1,c
  4965                           
  4966                           ;stkvar	_i @ sp[(-2)+0]
  4967  017BB0  0EFE               	movlw	-2
  4968  017BB2  50E3               	movf	plusw1,w,c
  4969  017BB4  6EE6               	movwf	postinc1,c
  4970  017BB6  0E01               	movlw	1
  4971  017BB8  6EE6               	movwf	postinc1,c
  4972                           
  4973                           ;stkvar	_i @ sp[(-4)+0]
  4974  017BBA  0EFC               	movlw	-4
  4975  017BBC  50E3               	movf	plusw1,w,c
  4976  017BBE  6EE6               	movwf	postinc1,c
  4977  017BC0  EC39  F0A0         	call	_conv_raw_result	;wreg free
  4978  017BC4  0060  F097  FFE6   	movff	btemp,postinc1
  4979  017BCA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4980  017BD0  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4981  017BD6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4982  017BDC  EC2D  F0B3         	call	_lp_filter	;wreg free
  4983  017BE0  D01A               	goto	L3
  4984  017BE2                     l9470:
  4985                           
  4986                           ; BSR set to: 2
  4987                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4988  017BE2  0E00               	movlw	0
  4989  017BE4  6EE6               	movwf	postinc1,c
  4990                           
  4991                           ;stkvar	_i @ sp[(-2)+0]
  4992  017BE6  0EFE               	movlw	-2
  4993  017BE8  50E3               	movf	plusw1,w,c
  4994  017BEA  6EE6               	movwf	postinc1,c
  4995  017BEC  0E00               	movlw	0
  4996  017BEE  6EE6               	movwf	postinc1,c
  4997                           
  4998                           ;stkvar	_i @ sp[(-4)+0]
  4999  017BF0  0EFC               	movlw	-4
  5000  017BF2  50E3               	movf	plusw1,w,c
  5001  017BF4  6EE6               	movwf	postinc1,c
  5002  017BF6  EC39  F0A0         	call	_conv_raw_result	;wreg free
  5003  017BFA  0060  F097  FFE6   	movff	btemp,postinc1
  5004  017C00  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5005  017C06  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5006  017C0C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5007  017C12  EC2D  F0B3         	call	_lp_filter	;wreg free
  5008  017C16                     L3:
  5009                           
  5010                           ;stkvar	_i @ sp[(-1)+0]
  5011  017C16  0EFF               	movlw	-1
  5012  017C18  50E3               	movf	plusw1,w,c
  5013  017C1A  0D04               	mullw	4
  5014  017C1C  0E00               	movlw	low _C
  5015  017C1E  24F3               	addwf	243,w,c
  5016  017C20  6ED9               	movwf	fsr2l,c
  5017  017C22  0E01               	movlw	high _C
  5018  017C24  20F4               	addwfc	prodh,w,c
  5019  017C26  6EDA               	movwf	fsr2h,c
  5020  017C28  0060  F097  FFDE   	movff	btemp,postinc2
  5021  017C2E  0060  F09B  FFDE   	movff	btemp+1,postinc2
  5022  017C34  0060  F09F  FFDE   	movff	btemp+2,postinc2
  5023  017C3A  0060  F0A3  FFDE   	movff	btemp+3,postinc2
  5024                           
  5025                           ;mbmc.c: 50:  } while (++i < 16);
  5026                           ;stkvar	_i @ sp[(-1)+0]
  5027  017C40  0EFF               	movlw	-1
  5028  017C42  2AE3               	incf	plusw1,f,c
  5029  017C44  0EFF               	movlw	-1
  5030  017C46  006F FF8C  F025    	movff	plusw1,btemp
  5031  017C4C  0E0F               	movlw	15
  5032  017C4E  6425               	cpfsgt	btemp^0,c
  5033  017C50  D7A9               	goto	l9466
  5034                           
  5035                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5036  017C52  52E5               	movf	postdec1,f,c
  5037  017C54  0012               	return		;funcret
  5038  017C56                     __end_of_convert_adc_data:
  5039                           	opt callstack 0
  5040                           
  5041 ;; *************** function _conv_raw_result *****************
  5042 ;; Defined at:
  5043 ;;		line 80 in file "daq.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  chan            1  [STACK] const enum E16136
  5046 ;;  to_what         1  [STACK] const enum E16198
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;		None
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  4  [STACK] float 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5053 ;; Tracked objects:
  5054 ;;		On entry : 3F/2
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5062 ;;Total ram usage:        0 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    9
  5065 ;; This function calls:
  5066 ;;		___fldiv
  5067 ;;		___flmul
  5068 ;;		___flsub
  5069 ;;		___xxtofl
  5070 ;;		_get_raw_result
  5071 ;;		_nanf
  5072 ;; This function is called by:
  5073 ;;		_convert_adc_data
  5074 ;; This function uses a reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text18
  5078  014072                     __ptext18:
  5079                           	opt callstack 0
  5080  014072                     _conv_raw_result:
  5081                           	opt callstack 20
  5082                           
  5083                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5084                           
  5085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5086                           ;incstack = 0
  5087  014072  D242               	goto	l9140
  5088  014074                     l9086:
  5089                           
  5090                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5091                           ;stkvar	_chan @ sp[(0)+-1]
  5092  014074  0EFF               	movlw	-1
  5093  014076  006F FF8C  F030    	movff	plusw1,btemp+11
  5094  01407C  0E77               	movlw	119
  5095  01407E  6E2D               	movwf	(btemp+8)^0,c
  5096  014080  0E3C               	movlw	60
  5097  014082  6E2E               	movwf	(btemp+9)^0,c
  5098  014084  2A30               	incf	(btemp+11)^0,f,c
  5099  014086  D003               	goto	u8344
  5100  014088                     u8345:
  5101  014088  342E               	rlcf	(btemp+9)^0,w,c
  5102  01408A  322E               	rrcf	(btemp+9)^0,f,c
  5103  01408C  322D               	rrcf	(btemp+8)^0,f,c
  5104  01408E                     u8344:
  5105  01408E  2E30               	decfsz	(btemp+11)^0,f,c
  5106  014090  D7FB               	goto	u8345
  5107  014092  B02D               	btfsc	(btemp+8)^0,0,c
  5108  014094  D007               	goto	l9092
  5109                           
  5110                           ;daq.c: 86:    return nanf("");
  5111  014096  0E7F               	movlw	low (STR_39+18)
  5112  014098  6EE6               	movwf	postinc1,c
  5113  01409A  0EFE               	movlw	high (STR_39+18)
  5114  01409C  6EE6               	movwf	postinc1,c
  5115  01409E  EC39  F0C3         	call	_nanf	;wreg free
  5116  0140A2  D23A               	goto	l1765
  5117  0140A4                     l9092:
  5118                           
  5119                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5120                           ;stkvar	_chan @ sp[(0)+-1]
  5121  0140A4  0EFF               	movlw	-1
  5122  0140A6  006F FF8C  F030    	movff	plusw1,btemp+11
  5123  0140AC  0E03               	movlw	3
  5124  0140AE  6E2D               	movwf	(btemp+8)^0,c
  5125  0140B0  0E00               	movlw	0
  5126  0140B2  6E2E               	movwf	(btemp+9)^0,c
  5127  0140B4  2A30               	incf	(btemp+11)^0,f,c
  5128  0140B6  D003               	goto	u8364
  5129  0140B8                     u8365:
  5130  0140B8  342E               	rlcf	(btemp+9)^0,w,c
  5131  0140BA  322E               	rrcf	(btemp+9)^0,f,c
  5132  0140BC  322D               	rrcf	(btemp+8)^0,f,c
  5133  0140BE                     u8364:
  5134  0140BE  2E30               	decfsz	(btemp+11)^0,f,c
  5135  0140C0  D7FB               	goto	u8365
  5136  0140C2  A02D               	btfss	(btemp+8)^0,0,c
  5137  0140C4  D0EB               	goto	l9106
  5138                           
  5139                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5140                           ;stkvar	_chan @ sp[(0)+-1]
  5141  0140C6  0EFF               	movlw	-1
  5142  0140C8  006F FF8C  F030    	movff	plusw1,btemp+11
  5143  0140CE  0E01               	movlw	1
  5144  0140D0  6E2D               	movwf	(btemp+8)^0,c
  5145  0140D2  0E00               	movlw	0
  5146  0140D4  6E2E               	movwf	(btemp+9)^0,c
  5147  0140D6  2A30               	incf	(btemp+11)^0,f,c
  5148  0140D8  D003               	goto	u8384
  5149  0140DA                     u8385:
  5150  0140DA  342E               	rlcf	(btemp+9)^0,w,c
  5151  0140DC  322E               	rrcf	(btemp+9)^0,f,c
  5152  0140DE  322D               	rrcf	(btemp+8)^0,f,c
  5153  0140E0                     u8384:
  5154  0140E0  2E30               	decfsz	(btemp+11)^0,f,c
  5155  0140E2  D7FB               	goto	u8385
  5156  0140E4  A02D               	btfss	(btemp+8)^0,0,c
  5157  0140E6  D06D               	goto	l9102
  5158                           
  5159                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5160  0140E8  0E7B               	movlw	123
  5161  0140EA  6EE6               	movwf	postinc1,c
  5162  0140EC  0E14               	movlw	20
  5163  0140EE  6EE6               	movwf	postinc1,c
  5164  0140F0  0EAE               	movlw	174
  5165  0140F2  6EE6               	movwf	postinc1,c
  5166  0140F4  0E3D               	movlw	61
  5167  0140F6  6EE6               	movwf	postinc1,c
  5168  0140F8  0060  F38C  F02D   	movff	_R+32,btemp+8	;volatile
  5169  0140FE  0060  F390  F02E   	movff	_R+33,btemp+9	;volatile
  5170  014104  0E00               	movlw	0
  5171  014106  BE2E               	btfsc	(btemp+9)^0,7,c
  5172  014108  0EFF               	movlw	255
  5173  01410A  6E2F               	movwf	(btemp+10)^0,c
  5174  01410C  6E30               	movwf	(btemp+11)^0,c
  5175  01410E  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5176  014114  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5177  01411A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5178  014120  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5179  014126  0E01               	movlw	1
  5180  014128  6EE6               	movwf	postinc1,c
  5181  01412A  EC47  F0B1         	call	___xxtofl	;wreg free
  5182  01412E  0060  F097  FFE6   	movff	btemp,postinc1
  5183  014134  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5184  01413A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5185  014140  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5186                           
  5187                           ;stkvar	_chan @ sp[(-8)+-1]
  5188  014146  0EF7               	movlw	-9
  5189  014148  50E3               	movf	plusw1,w,c
  5190  01414A  6EE6               	movwf	postinc1,c
  5191  01414C  EC31  F0CA         	call	_get_raw_result	;wreg free
  5192  014150  0060  F094  F02F   	movff	btemp,btemp+10
  5193  014156  0060  F098  F030   	movff	btemp+1,btemp+11
  5194  01415C  502F               	movf	(btemp+10)^0,w,c
  5195  01415E  6E29               	movwf	(btemp+4)^0,c
  5196  014160  5030               	movf	(btemp+11)^0,w,c
  5197  014162  6E2A               	movwf	(btemp+5)^0,c
  5198  014164  6A2B               	clrf	(btemp+6)^0,c
  5199  014166  6A2C               	clrf	(btemp+7)^0,c
  5200  014168  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5201  01416E  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5202  014174  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5203  01417A  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5204  014180  0E00               	movlw	0
  5205  014182  6EE6               	movwf	postinc1,c
  5206  014184  EC47  F0B1         	call	___xxtofl	;wreg free
  5207  014188  0060  F097  FFE6   	movff	btemp,postinc1
  5208  01418E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5209  014194  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5210  01419A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5211  0141A0  EC36  F0C5         	call	___flsub	;wreg free
  5212  0141A4  0060  F097  FFE6   	movff	btemp,postinc1
  5213  0141AA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5214  0141B0  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5215  0141B6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5216  0141BC  EC14  F093         	call	___flmul	;wreg free
  5217  0141C0  D1AB               	goto	l1765
  5218  0141C2                     l9102:
  5219                           
  5220                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5221  0141C2  0E29               	movlw	41
  5222  0141C4  6EE6               	movwf	postinc1,c
  5223  0141C6  0E5C               	movlw	92
  5224  0141C8  6EE6               	movwf	postinc1,c
  5225  0141CA  0E0F               	movlw	15
  5226  0141CC  6EE6               	movwf	postinc1,c
  5227  0141CE  0E3D               	movlw	61
  5228  0141D0  6EE6               	movwf	postinc1,c
  5229  0141D2  0060  F394  F02D   	movff	_R+34,btemp+8	;volatile
  5230  0141D8  0060  F398  F02E   	movff	_R+35,btemp+9	;volatile
  5231  0141DE  0E00               	movlw	0
  5232  0141E0  BE2E               	btfsc	(btemp+9)^0,7,c
  5233  0141E2  0EFF               	movlw	255
  5234  0141E4  6E2F               	movwf	(btemp+10)^0,c
  5235  0141E6  6E30               	movwf	(btemp+11)^0,c
  5236  0141E8  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5237  0141EE  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5238  0141F4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5239  0141FA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5240  014200  0E01               	movlw	1
  5241  014202  6EE6               	movwf	postinc1,c
  5242  014204  EC47  F0B1         	call	___xxtofl	;wreg free
  5243  014208  0060  F097  FFE6   	movff	btemp,postinc1
  5244  01420E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5245  014214  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5246  01421A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5247                           
  5248                           ;stkvar	_chan @ sp[(-8)+-1]
  5249  014220  0EF7               	movlw	-9
  5250  014222  50E3               	movf	plusw1,w,c
  5251  014224  6EE6               	movwf	postinc1,c
  5252  014226  EC31  F0CA         	call	_get_raw_result	;wreg free
  5253  01422A  0060  F094  F02F   	movff	btemp,btemp+10
  5254  014230  0060  F098  F030   	movff	btemp+1,btemp+11
  5255  014236  502F               	movf	(btemp+10)^0,w,c
  5256  014238  6E29               	movwf	(btemp+4)^0,c
  5257  01423A  5030               	movf	(btemp+11)^0,w,c
  5258  01423C  6E2A               	movwf	(btemp+5)^0,c
  5259  01423E  6A2B               	clrf	(btemp+6)^0,c
  5260  014240  6A2C               	clrf	(btemp+7)^0,c
  5261  014242  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5262  014248  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5263  01424E  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5264  014254  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5265  01425A  0E00               	movlw	0
  5266  01425C  6EE6               	movwf	postinc1,c
  5267  01425E  EC47  F0B1         	call	___xxtofl	;wreg free
  5268  014262  0060  F097  FFE6   	movff	btemp,postinc1
  5269  014268  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5270  01426E  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5271  014274  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5272  01427A  EC36  F0C5         	call	___flsub	;wreg free
  5273  01427E  0060  F097  FFE6   	movff	btemp,postinc1
  5274  014284  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5275  01428A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5276  014290  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5277  014296  EC14  F093         	call	___flmul	;wreg free
  5278  01429A  D13E               	goto	l1765
  5279  01429C                     l9106:
  5280                           
  5281                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5282                           ;stkvar	_chan @ sp[(0)+-1]
  5283  01429C  0EFF               	movlw	-1
  5284  01429E  006F FF8C  F030    	movff	plusw1,btemp+11
  5285  0142A4  0E00               	movlw	0
  5286  0142A6  6E2D               	movwf	(btemp+8)^0,c
  5287  0142A8  0E08               	movlw	8
  5288  0142AA  6E2E               	movwf	(btemp+9)^0,c
  5289  0142AC  2A30               	incf	(btemp+11)^0,f,c
  5290  0142AE  D003               	goto	u8404
  5291  0142B0                     u8405:
  5292  0142B0  342E               	rlcf	(btemp+9)^0,w,c
  5293  0142B2  322E               	rrcf	(btemp+9)^0,f,c
  5294  0142B4  322D               	rrcf	(btemp+8)^0,f,c
  5295  0142B6                     u8404:
  5296  0142B6  2E30               	decfsz	(btemp+11)^0,f,c
  5297  0142B8  D7FB               	goto	u8405
  5298  0142BA  A02D               	btfss	(btemp+8)^0,0,c
  5299  0142BC  D008               	goto	l9114
  5300                           
  5301                           ;daq.c: 96:     return 25.0;
  5302  0142BE  0E00               	movlw	0
  5303  0142C0  6E25               	movwf	btemp^0,c
  5304  0142C2  0E00               	movlw	0
  5305  0142C4  6E26               	movwf	(btemp+1)^0,c
  5306  0142C6  0EC8               	movlw	200
  5307  0142C8  6E27               	movwf	(btemp+2)^0,c
  5308  0142CA  0E41               	movlw	65
  5309  0142CC  D113               	goto	L4
  5310  0142CE                     l9114:
  5311                           
  5312                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5313  0142CE  0E00               	movlw	0
  5314  0142D0  6EE6               	movwf	postinc1,c
  5315  0142D2  0E00               	movlw	0
  5316  0142D4  6EE6               	movwf	postinc1,c
  5317  0142D6  0E7A               	movlw	122
  5318  0142D8  6EE6               	movwf	postinc1,c
  5319  0142DA  0E44               	movlw	68
  5320  0142DC  6EE6               	movwf	postinc1,c
  5321  0142DE  0E61               	movlw	97
  5322  0142E0  6EE6               	movwf	postinc1,c
  5323  0142E2  0E03               	movlw	3
  5324  0142E4  6EE6               	movwf	postinc1,c
  5325  0142E6  0E84               	movlw	132
  5326  0142E8  6EE6               	movwf	postinc1,c
  5327  0142EA  0E40               	movlw	64
  5328  0142EC  6EE6               	movwf	postinc1,c
  5329                           
  5330                           ;stkvar	_chan @ sp[(-8)+-1]
  5331  0142EE  0EF7               	movlw	-9
  5332  0142F0  50E3               	movf	plusw1,w,c
  5333  0142F2  6EE6               	movwf	postinc1,c
  5334  0142F4  EC31  F0CA         	call	_get_raw_result	;wreg free
  5335  0142F8  0060  F094  F02F   	movff	btemp,btemp+10
  5336  0142FE  0060  F098  F030   	movff	btemp+1,btemp+11
  5337  014304  502F               	movf	(btemp+10)^0,w,c
  5338  014306  6E29               	movwf	(btemp+4)^0,c
  5339  014308  5030               	movf	(btemp+11)^0,w,c
  5340  01430A  6E2A               	movwf	(btemp+5)^0,c
  5341  01430C  6A2B               	clrf	(btemp+6)^0,c
  5342  01430E  6A2C               	clrf	(btemp+7)^0,c
  5343  014310  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5344  014316  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5345  01431C  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5346  014322  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5347  014328  0E00               	movlw	0
  5348  01432A  6EE6               	movwf	postinc1,c
  5349  01432C  EC47  F0B1         	call	___xxtofl	;wreg free
  5350  014330  0060  F097  FFE6   	movff	btemp,postinc1
  5351  014336  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5352  01433C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5353  014342  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5354  014348  EC14  F093         	call	___flmul	;wreg free
  5355  01434C  0060  F097  FFE6   	movff	btemp,postinc1
  5356  014352  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5357  014358  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5358  01435E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5359  014364  EC07  F09B         	call	___fldiv	;wreg free
  5360  014368  D0D7               	goto	l1765
  5361  01436A                     l9118:
  5362                           
  5363                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5364                           ;stkvar	_chan @ sp[(0)+-1]
  5365  01436A  0EFF               	movlw	-1
  5366  01436C  006F FF8C  F030    	movff	plusw1,btemp+11
  5367  014372  0E03               	movlw	3
  5368  014374  6E2D               	movwf	(btemp+8)^0,c
  5369  014376  0E00               	movlw	0
  5370  014378  6E2E               	movwf	(btemp+9)^0,c
  5371  01437A  2A30               	incf	(btemp+11)^0,f,c
  5372  01437C  D003               	goto	u8424
  5373  01437E                     u8425:
  5374  01437E  342E               	rlcf	(btemp+9)^0,w,c
  5375  014380  322E               	rrcf	(btemp+9)^0,f,c
  5376  014382  322D               	rrcf	(btemp+8)^0,f,c
  5377  014384                     u8424:
  5378  014384  2E30               	decfsz	(btemp+11)^0,f,c
  5379  014386  D7FB               	goto	u8425
  5380  014388  B02D               	btfsc	(btemp+8)^0,0,c
  5381  01438A  D011               	goto	u8450
  5382                           
  5383                           ;stkvar	_chan @ sp[(0)+-1]
  5384  01438C  0EFF               	movlw	-1
  5385  01438E  006F FF8C  F030    	movff	plusw1,btemp+11
  5386  014394  0E00               	movlw	0
  5387  014396  6E2D               	movwf	(btemp+8)^0,c
  5388  014398  0E08               	movlw	8
  5389  01439A  6E2E               	movwf	(btemp+9)^0,c
  5390  01439C  2A30               	incf	(btemp+11)^0,f,c
  5391  01439E  D003               	goto	u8444
  5392  0143A0                     u8445:
  5393  0143A0  342E               	rlcf	(btemp+9)^0,w,c
  5394  0143A2  322E               	rrcf	(btemp+9)^0,f,c
  5395  0143A4  322D               	rrcf	(btemp+8)^0,f,c
  5396  0143A6                     u8444:
  5397  0143A6  2E30               	decfsz	(btemp+11)^0,f,c
  5398  0143A8  D7FB               	goto	u8445
  5399  0143AA  A02D               	btfss	(btemp+8)^0,0,c
  5400  0143AC  D04E               	goto	l9126
  5401  0143AE                     u8450:
  5402                           
  5403                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5404  0143AE  0E00               	movlw	0
  5405  0143B0  6EE6               	movwf	postinc1,c
  5406  0143B2  0E00               	movlw	0
  5407  0143B4  6EE6               	movwf	postinc1,c
  5408  0143B6  0E7A               	movlw	122
  5409  0143B8  6EE6               	movwf	postinc1,c
  5410  0143BA  0E44               	movlw	68
  5411  0143BC  6EE6               	movwf	postinc1,c
  5412  0143BE  0E00               	movlw	0
  5413  0143C0  6EE6               	movwf	postinc1,c
  5414  0143C2  0E00               	movlw	0
  5415  0143C4  6EE6               	movwf	postinc1,c
  5416  0143C6  0E20               	movlw	32
  5417  0143C8  6EE6               	movwf	postinc1,c
  5418  0143CA  0E3F               	movlw	63
  5419  0143CC  6EE6               	movwf	postinc1,c
  5420                           
  5421                           ;stkvar	_chan @ sp[(-8)+-1]
  5422  0143CE  0EF7               	movlw	-9
  5423  0143D0  50E3               	movf	plusw1,w,c
  5424  0143D2  6EE6               	movwf	postinc1,c
  5425  0143D4  EC31  F0CA         	call	_get_raw_result	;wreg free
  5426  0143D8  0060  F094  F02F   	movff	btemp,btemp+10
  5427  0143DE  0060  F098  F030   	movff	btemp+1,btemp+11
  5428  0143E4  502F               	movf	(btemp+10)^0,w,c
  5429  0143E6  6E29               	movwf	(btemp+4)^0,c
  5430  0143E8  5030               	movf	(btemp+11)^0,w,c
  5431  0143EA  6E2A               	movwf	(btemp+5)^0,c
  5432  0143EC  6A2B               	clrf	(btemp+6)^0,c
  5433  0143EE  6A2C               	clrf	(btemp+7)^0,c
  5434  0143F0  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5435  0143F6  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5436  0143FC  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5437  014402  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5438  014408  0E00               	movlw	0
  5439  01440A  6EE6               	movwf	postinc1,c
  5440  01440C  EC47  F0B1         	call	___xxtofl	;wreg free
  5441  014410  0060  F097  FFE6   	movff	btemp,postinc1
  5442  014416  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5443  01441C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5444  014422  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5445  014428  EC14  F093         	call	___flmul	;wreg free
  5446  01442C  0060  F097  FFE6   	movff	btemp,postinc1
  5447  014432  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5448  014438  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5449  01443E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5450  014444  EC07  F09B         	call	___fldiv	;wreg free
  5451  014448  D067               	goto	l1765
  5452  01444A                     l9126:
  5453                           
  5454                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5455  01444A  0E00               	movlw	0
  5456  01444C  6EE6               	movwf	postinc1,c
  5457  01444E  0E00               	movlw	0
  5458  014450  6EE6               	movwf	postinc1,c
  5459  014452  0E7A               	movlw	122
  5460  014454  6EE6               	movwf	postinc1,c
  5461  014456  0E44               	movlw	68
  5462  014458  6EE6               	movwf	postinc1,c
  5463  01445A  0E61               	movlw	97
  5464  01445C  6EE6               	movwf	postinc1,c
  5465  01445E  0E03               	movlw	3
  5466  014460  6EE6               	movwf	postinc1,c
  5467  014462  0E84               	movlw	132
  5468  014464  6EE6               	movwf	postinc1,c
  5469  014466  0E40               	movlw	64
  5470  014468  6EE6               	movwf	postinc1,c
  5471                           
  5472                           ;stkvar	_chan @ sp[(-8)+-1]
  5473  01446A  0EF7               	movlw	-9
  5474  01446C  50E3               	movf	plusw1,w,c
  5475  01446E  6EE6               	movwf	postinc1,c
  5476  014470  EC31  F0CA         	call	_get_raw_result	;wreg free
  5477  014474  0060  F094  F02F   	movff	btemp,btemp+10
  5478  01447A  0060  F098  F030   	movff	btemp+1,btemp+11
  5479  014480  502F               	movf	(btemp+10)^0,w,c
  5480  014482  6E29               	movwf	(btemp+4)^0,c
  5481  014484  5030               	movf	(btemp+11)^0,w,c
  5482  014486  6E2A               	movwf	(btemp+5)^0,c
  5483  014488  6A2B               	clrf	(btemp+6)^0,c
  5484  01448A  6A2C               	clrf	(btemp+7)^0,c
  5485  01448C  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5486  014492  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5487  014498  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5488  01449E  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5489  0144A4  0E00               	movlw	0
  5490  0144A6  6EE6               	movwf	postinc1,c
  5491  0144A8  EC47  F0B1         	call	___xxtofl	;wreg free
  5492  0144AC  0060  F097  FFE6   	movff	btemp,postinc1
  5493  0144B2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5494  0144B8  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5495  0144BE  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5496  0144C4  EC14  F093         	call	___flmul	;wreg free
  5497  0144C8  0060  F097  FFE6   	movff	btemp,postinc1
  5498  0144CE  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5499  0144D4  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5500  0144DA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5501  0144E0  EC07  F09B         	call	___fldiv	;wreg free
  5502  0144E4  D019               	goto	l1765
  5503  0144E6                     l9132:
  5504                           
  5505                           ;daq.c: 109:   return 0.0;
  5506  0144E6  0E00               	movlw	0
  5507  0144E8  6E25               	movwf	btemp^0,c
  5508  0144EA  0E00               	movlw	0
  5509  0144EC  6E26               	movwf	(btemp+1)^0,c
  5510  0144EE  0E00               	movlw	0
  5511  0144F0  6E27               	movwf	(btemp+2)^0,c
  5512  0144F2  0E00               	movlw	0
  5513  0144F4                     L4:
  5514  0144F4  6E28               	movwf	(btemp+3)^0,c
  5515  0144F6  D010               	goto	l1765
  5516  0144F8                     l9140:
  5517                           
  5518                           ;stkvar	_to_what @ sp[(0)+-2]
  5519  0144F8  0EFE               	movlw	-2
  5520  0144FA  50E3               	movf	plusw1,w,c
  5521  0144FC  6E2F               	movwf	(btemp+10)^0,c
  5522  0144FE  6A30               	clrf	(btemp+11)^0,c
  5523                           
  5524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5525                           ; Switch size 1, requested type "simple"
  5526                           ; Number of cases is 1, Range of values is 0 to 0
  5527                           ; switch strategies available:
  5528                           ; Name         Instructions Cycles
  5529                           ; simple_byte            4     3 (average)
  5530                           ;	Chosen strategy is simple_byte
  5531  014500  5030               	movf	(btemp+11)^0,w,c
  5532  014502  0A00               	xorlw	0	; case 0
  5533  014504  A4D8               	btfss	status,2,c
  5534  014506  D7EF               	goto	l9132
  5535                           
  5536                           ; Switch size 1, requested type "simple"
  5537                           ; Number of cases is 2, Range of values is 0 to 1
  5538                           ; switch strategies available:
  5539                           ; Name         Instructions Cycles
  5540                           ; simple_byte            7     4 (average)
  5541                           ;	Chosen strategy is simple_byte
  5542  014508  502F               	movf	(btemp+10)^0,w,c
  5543  01450A  0A00               	xorlw	0	; case 0
  5544  01450C  B4D8               	btfsc	status,2,c
  5545  01450E  D5B2               	goto	l9086
  5546  014510  0A01               	xorlw	1	; case 1
  5547  014512  B4D8               	btfsc	status,2,c
  5548  014514  D72A               	goto	l9118
  5549  014516  D7E7               	goto	l9132
  5550  014518                     l1765:
  5551                           
  5552                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5553  014518  52E5               	movf	postdec1,f,c
  5554  01451A  52E5               	movf	postdec1,f,c
  5555  01451C  0012               	return		;funcret
  5556  01451E                     __end_of_conv_raw_result:
  5557                           	opt callstack 0
  5558                           
  5559 ;; *************** function _nanf *****************
  5560 ;; Defined at:
  5561 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  s               2  [STACK] PTR const unsigned char 
  5564 ;;		 -> STR_45(1), 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  u               4  [STACK] struct .
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  4  [STACK] float 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/2
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5580 ;;Total ram usage:        0 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    7
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_conv_raw_result
  5587 ;; This function uses a reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text19
  5591  018672                     __ptext19:
  5592                           	opt callstack 0
  5593  018672                     _nanf:
  5594                           	opt callstack 0
  5595                           
  5596                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5597  018672  52E6               	movf	postinc1,f,c
  5598  018674  52E6               	movf	postinc1,f,c
  5599  018676  52E6               	movf	postinc1,f,c
  5600  018678  52E6               	movf	postinc1,f,c
  5601                           
  5602                           ;incstack = 0
  5603  01867A  0EFF               	movlw	255
  5604  01867C  6E2D               	movwf	(btemp+8)^0,c
  5605  01867E  0EFF               	movlw	255
  5606  018680  6E2E               	movwf	(btemp+9)^0,c
  5607  018682  0EFF               	movlw	255
  5608  018684  6E2F               	movwf	(btemp+10)^0,c
  5609  018686  0E7F               	movlw	127
  5610  018688  6E30               	movwf	(btemp+11)^0,c
  5611                           
  5612                           ;stkvar	_u @ sp[(-4)+0]
  5613  01868A  0EFC               	movlw	-4
  5614  01868C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5615  018692  0EFD               	movlw	-3
  5616  018694  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5617  01869A  0EFE               	movlw	-2
  5618  01869C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5619  0186A2  0EFF               	movlw	-1
  5620  0186A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5621                           
  5622                           ;stkvar	_u @ sp[(-4)+0]
  5623  0186AA  0EFC               	movlw	-4
  5624  0186AC  006F FF8C  F025    	movff	plusw1,btemp
  5625  0186B2  0EFD               	movlw	-3
  5626  0186B4  006F FF8C  F026    	movff	plusw1,btemp+1
  5627  0186BA  0EFE               	movlw	-2
  5628  0186BC  006F FF8C  F027    	movff	plusw1,btemp+2
  5629  0186C2  0EFF               	movlw	-1
  5630  0186C4  006F FF8C  F028    	movff	plusw1,btemp+3
  5631                           
  5632                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5633  0186CA  0EFA               	movlw	250
  5634  0186CC  26E1               	addwf	fsr1l,f,c
  5635  0186CE  0EFF               	movlw	255
  5636  0186D0  22E2               	addwfc	fsr1h,f,c
  5637  0186D2  0012               	return		;funcret
  5638  0186D4                     __end_of_nanf:
  5639                           	opt callstack 0
  5640                           
  5641 ;; *************** function _get_raw_result *****************
  5642 ;; Defined at:
  5643 ;;		line 72 in file "daq.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  index           1  [STACK] const enum E16136
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  2  [STACK] unsigned short 
  5650 ;; Registers used:
  5651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/2
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5661 ;;Total ram usage:        0 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    7
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_main
  5668 ;;		_conv_raw_result
  5669 ;; This function uses a reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text20
  5673  019462                     __ptext20:
  5674                           	opt callstack 0
  5675  019462                     _get_raw_result:
  5676                           	opt callstack 23
  5677                           
  5678                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5679                           ;stkvar	_index @ sp[(0)+-1]
  5680                           
  5681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5682                           ;incstack = 0
  5683  019462  0EFF               	movlw	-1
  5684  019464  50E3               	movf	plusw1,w,c
  5685  019466  0D02               	mullw	2
  5686  019468  50F3               	movf	243,w,c
  5687  01946A  0FC3               	addlw	low _R
  5688  01946C  6ED9               	movwf	fsr2l,c
  5689  01946E  6ADA               	clrf	fsr2h,c
  5690  019470  006F FF78  F025    	movff	postinc2,btemp
  5691  019476  006F FF74  F026    	movff	postdec2,btemp+1
  5692                           
  5693                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5694  01947C  52E5               	movf	postdec1,f,c
  5695  01947E  0012               	return		;funcret
  5696  019480                     __end_of_get_raw_result:
  5697                           	opt callstack 0
  5698                           
  5699 ;; *************** function ___xxtofl *****************
  5700 ;; Defined at:
  5701 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  sign            1  [STACK] unsigned char 
  5704 ;;  val             4  [STACK] long 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  arg             4  [STACK] unsigned long 
  5707 ;;  exp             1  [STACK] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  4  [STACK] unsigned char 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/2
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5721 ;;Total ram usage:        0 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    7
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_conv_raw_result
  5728 ;; This function uses a reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text21
  5732  01628E                     __ptext21:
  5733                           	opt callstack 0
  5734  01628E                     ___xxtofl:
  5735                           	opt callstack 0
  5736                           
  5737                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5738  01628E  0E05               	movlw	5
  5739  016290  26E1               	addwf	fsr1l,f,c
  5740  016292  0E00               	movlw	0
  5741  016294  22E2               	addwfc	fsr1h,f,c
  5742                           
  5743                           ;stkvar	_sign @ sp[(-5)+-1]
  5744                           
  5745                           ;incstack = 0
  5746  016296  0EFA               	movlw	-6
  5747  016298  50E3               	movf	plusw1,w,c
  5748  01629A  B4D8               	btfsc	status,2,c
  5749  01629C  D01D               	goto	l8524
  5750                           
  5751                           ;stkvar	_val @ sp[(-5)+-5]
  5752  01629E  0EF9               	movlw	-7
  5753  0162A0  AEE3               	btfss	plusw1,7,c
  5754  0162A2  D01A               	goto	l8524
  5755                           
  5756                           ;stkvar	_val @ sp[(-5)+-5]
  5757  0162A4  0EF6               	movlw	-10
  5758  0162A6  006F FF8C  F02D    	movff	plusw1,btemp+8
  5759  0162AC  0EF7               	movlw	-9
  5760  0162AE  006F FF8C  F02E    	movff	plusw1,btemp+9
  5761  0162B4  0EF8               	movlw	-8
  5762  0162B6  006F FF8C  F02F    	movff	plusw1,btemp+10
  5763  0162BC  0EF9               	movlw	-7
  5764  0162BE  006F FF8C  F030    	movff	plusw1,btemp+11
  5765  0162C4  1E2D               	comf	(btemp+8)^0,f,c
  5766  0162C6  1E2E               	comf	(btemp+9)^0,f,c
  5767  0162C8  1E2F               	comf	(btemp+10)^0,f,c
  5768  0162CA  1E30               	comf	(btemp+11)^0,f,c
  5769  0162CC  2A2D               	incf	(btemp+8)^0,f,c
  5770  0162CE  0E00               	movlw	0
  5771  0162D0  222E               	addwfc	(btemp+9)^0,f,c
  5772  0162D2  222F               	addwfc	(btemp+10)^0,f,c
  5773  0162D4  2230               	addwfc	(btemp+11)^0,f,c
  5774  0162D6  D010               	goto	L5
  5775  0162D8                     l8524:
  5776                           
  5777                           ;stkvar	_val @ sp[(-5)+-5]
  5778  0162D8  0EF6               	movlw	-10
  5779  0162DA  006F FF8C  F02D    	movff	plusw1,btemp+8
  5780  0162E0  0EF7               	movlw	-9
  5781  0162E2  006F FF8C  F02E    	movff	plusw1,btemp+9
  5782  0162E8  0EF8               	movlw	-8
  5783  0162EA  006F FF8C  F02F    	movff	plusw1,btemp+10
  5784  0162F0  0EF9               	movlw	-7
  5785  0162F2  006F FF8C  F030    	movff	plusw1,btemp+11
  5786  0162F8                     L5:
  5787                           
  5788                           ;stkvar	_arg @ sp[(-5)+0]
  5789  0162F8  0EFB               	movlw	-5
  5790  0162FA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5791  016300  0EFC               	movlw	-4
  5792  016302  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5793  016308  0EFD               	movlw	-3
  5794  01630A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5795  016310  0EFE               	movlw	-2
  5796  016312  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5797                           
  5798                           ;stkvar	_val @ sp[(-5)+-5]
  5799  016318  0EF6               	movlw	-10
  5800  01631A  50E3               	movf	plusw1,w,c
  5801  01631C  E113               	bnz	l8532
  5802  01631E  0EF7               	movlw	-9
  5803  016320  50E3               	movf	plusw1,w,c
  5804  016322  E110               	bnz	l8532
  5805  016324  0EF8               	movlw	-8
  5806  016326  50E3               	movf	plusw1,w,c
  5807  016328  E10D               	bnz	l8532
  5808  01632A  0EF9               	movlw	-7
  5809  01632C  50E3               	movf	plusw1,w,c
  5810  01632E  A4D8               	btfss	status,2,c
  5811  016330  D009               	goto	l8532
  5812  016332  0E00               	movlw	0
  5813  016334  6E25               	movwf	btemp^0,c
  5814  016336  0E00               	movlw	0
  5815  016338  6E26               	movwf	(btemp+1)^0,c
  5816  01633A  0E00               	movlw	0
  5817  01633C  6E27               	movwf	(btemp+2)^0,c
  5818  01633E  0E00               	movlw	0
  5819  016340  6E28               	movwf	(btemp+3)^0,c
  5820  016342  D0A2               	goto	l2883
  5821  016344                     l8532:
  5822  016344  0E96               	movlw	150
  5823  016346  6E30               	movwf	(btemp+11)^0,c
  5824                           
  5825                           ;stkvar	_exp @ sp[(-5)+4]
  5826  016348  0EFF               	movlw	-1
  5827  01634A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5828  016350  D00B               	goto	l8536
  5829  016352                     l8534:
  5830                           
  5831                           ;stkvar	_exp @ sp[(-5)+4]
  5832  016352  0EFF               	movlw	-1
  5833  016354  2AE3               	incf	plusw1,f,c
  5834                           
  5835                           ;stkvar	_arg @ sp[(-5)+0]
  5836  016356  90D8               	bcf	status,0,c
  5837  016358  0EFE               	movlw	-2
  5838  01635A  32E3               	rrcf	plusw1,f,c
  5839  01635C  0EFD               	movlw	-3
  5840  01635E  32E3               	rrcf	plusw1,f,c
  5841  016360  0EFC               	movlw	-4
  5842  016362  32E3               	rrcf	plusw1,f,c
  5843  016364  0EFB               	movlw	-5
  5844  016366  32E3               	rrcf	plusw1,f,c
  5845  016368                     l8536:
  5846                           
  5847                           ;stkvar	_arg @ sp[(-5)+0]
  5848  016368  50E1               	movf	fsr1l,w,c
  5849  01636A  0FFB               	addlw	-5
  5850  01636C  6ED9               	movwf	fsr2l,c
  5851  01636E  50E2               	movf	fsr1h,w,c
  5852  016370  6EDA               	movwf	fsr2h,c
  5853  016372  0EFF               	movlw	255
  5854  016374  22DA               	addwfc	fsr2h,f,c
  5855  016376  52DE               	movf	postinc2,f,c
  5856  016378  52DE               	movf	postinc2,f,c
  5857  01637A  52DE               	movf	postinc2,f,c
  5858  01637C  0EFE               	movlw	254
  5859  01637E  14DD               	andwf	postdec2,w,c
  5860  016380  B4D8               	btfsc	status,2,c
  5861  016382  D018               	goto	l8544
  5862  016384  D7E6               	goto	l8534
  5863  016386                     l8538:
  5864                           
  5865                           ;stkvar	_exp @ sp[(-5)+4]
  5866  016386  0EFF               	movlw	-1
  5867  016388  2AE3               	incf	plusw1,f,c
  5868                           
  5869                           ;stkvar	_arg @ sp[(-5)+0]
  5870  01638A  50E1               	movf	fsr1l,w,c
  5871  01638C  0FFB               	addlw	-5
  5872  01638E  6ED9               	movwf	fsr2l,c
  5873  016390  50E2               	movf	fsr1h,w,c
  5874  016392  6EDA               	movwf	fsr2h,c
  5875  016394  0EFF               	movlw	255
  5876  016396  22DA               	addwfc	fsr2h,f,c
  5877  016398  2ADE               	incf	postinc2,f,c
  5878  01639A  0E00               	movlw	0
  5879  01639C  22DE               	addwfc	postinc2,f,c
  5880  01639E  22DE               	addwfc	postinc2,f,c
  5881  0163A0  22DE               	addwfc	postinc2,f,c
  5882                           
  5883                           ;stkvar	_arg @ sp[(-5)+0]
  5884  0163A2  90D8               	bcf	status,0,c
  5885  0163A4  0EFE               	movlw	-2
  5886  0163A6  32E3               	rrcf	plusw1,f,c
  5887  0163A8  0EFD               	movlw	-3
  5888  0163AA  32E3               	rrcf	plusw1,f,c
  5889  0163AC  0EFC               	movlw	-4
  5890  0163AE  32E3               	rrcf	plusw1,f,c
  5891  0163B0  0EFB               	movlw	-5
  5892  0163B2  32E3               	rrcf	plusw1,f,c
  5893  0163B4                     l8544:
  5894                           
  5895                           ;stkvar	_arg @ sp[(-5)+0]
  5896  0163B4  50E1               	movf	fsr1l,w,c
  5897  0163B6  0FFB               	addlw	-5
  5898  0163B8  6ED9               	movwf	fsr2l,c
  5899  0163BA  50E2               	movf	fsr1h,w,c
  5900  0163BC  6EDA               	movwf	fsr2h,c
  5901  0163BE  0EFF               	movlw	255
  5902  0163C0  22DA               	addwfc	fsr2h,f,c
  5903  0163C2  52DE               	movf	postinc2,f,c
  5904  0163C4  52DE               	movf	postinc2,f,c
  5905  0163C6  52DE               	movf	postinc2,f,c
  5906  0163C8  0EFF               	movlw	255
  5907  0163CA  14DD               	andwf	postdec2,w,c
  5908  0163CC  B4D8               	btfsc	status,2,c
  5909  0163CE  D00C               	goto	l8548
  5910  0163D0  D7DA               	goto	l8538
  5911  0163D2                     l8546:
  5912                           
  5913                           ;stkvar	_exp @ sp[(-5)+4]
  5914  0163D2  0EFF               	movlw	-1
  5915  0163D4  06E3               	decf	plusw1,f,c
  5916                           
  5917                           ;stkvar	_arg @ sp[(-5)+0]
  5918  0163D6  90D8               	bcf	status,0,c
  5919  0163D8  0EFB               	movlw	-5
  5920  0163DA  36E3               	rlcf	plusw1,f,c
  5921  0163DC  0EFC               	movlw	-4
  5922  0163DE  36E3               	rlcf	plusw1,f,c
  5923  0163E0  0EFD               	movlw	-3
  5924  0163E2  36E3               	rlcf	plusw1,f,c
  5925  0163E4  0EFE               	movlw	-2
  5926  0163E6  36E3               	rlcf	plusw1,f,c
  5927  0163E8                     l8548:
  5928                           
  5929                           ;stkvar	_arg @ sp[(-5)+0]
  5930  0163E8  0EFD               	movlw	-3
  5931  0163EA  BEE3               	btfsc	plusw1,7,c
  5932  0163EC  D007               	goto	u8140
  5933                           
  5934                           ;stkvar	_exp @ sp[(-5)+4]
  5935  0163EE  0EFF               	movlw	-1
  5936  0163F0  006F FF8C  F025    	movff	plusw1,btemp
  5937  0163F6  0E02               	movlw	2
  5938  0163F8  6025               	cpfslt	btemp^0,c
  5939  0163FA  D7EB               	goto	l8546
  5940  0163FC                     u8140:
  5941                           
  5942                           ;stkvar	_exp @ sp[(-5)+4]
  5943  0163FC  0EFF               	movlw	-1
  5944  0163FE  B0E3               	btfsc	plusw1,0,c
  5945  016400  D002               	goto	l8556
  5946                           
  5947                           ;stkvar	_arg @ sp[(-5)+0]
  5948  016402  0EFD               	movlw	-3
  5949  016404  9EE3               	bcf	plusw1,7,c
  5950  016406                     l8556:
  5951                           
  5952                           ;stkvar	_exp @ sp[(-5)+4]
  5953  016406  50E1               	movf	fsr1l,w,c
  5954  016408  0FFF               	addlw	-1
  5955  01640A  6ED9               	movwf	fsr2l,c
  5956  01640C  50E2               	movf	fsr1h,w,c
  5957  01640E  6EDA               	movwf	fsr2h,c
  5958  016410  0EFF               	movlw	255
  5959  016412  22DA               	addwfc	fsr2h,f,c
  5960  016414  90D8               	bcf	status,0,c
  5961  016416  32DF               	rrcf	indf2,f,c
  5962                           
  5963                           ;stkvar	_exp @ sp[(-5)+4]
  5964  016418  0EFF               	movlw	-1
  5965  01641A  006F FF8C  F030    	movff	plusw1,btemp+11
  5966  016420  0060  F0C0  F029   	movff	btemp+11,btemp+4
  5967  016426  6A2A               	clrf	(btemp+5)^0,c
  5968  016428  6A2B               	clrf	(btemp+6)^0,c
  5969  01642A  6A2C               	clrf	(btemp+7)^0,c
  5970  01642C  0060  F0A4  F02C   	movff	btemp+4,btemp+7
  5971  016432  6A2B               	clrf	(btemp+6)^0,c
  5972  016434  6A2A               	clrf	(btemp+5)^0,c
  5973  016436  6A29               	clrf	(btemp+4)^0,c
  5974                           
  5975                           ;stkvar	_arg @ sp[(-5)+0]
  5976  016438  50E1               	movf	fsr1l,w,c
  5977  01643A  0FFB               	addlw	-5
  5978  01643C  6ED9               	movwf	fsr2l,c
  5979  01643E  50E2               	movf	fsr1h,w,c
  5980  016440  6EDA               	movwf	fsr2h,c
  5981  016442  0EFF               	movlw	255
  5982  016444  22DA               	addwfc	fsr2h,f,c
  5983  016446  5029               	movf	(btemp+4)^0,w,c
  5984  016448  12DE               	iorwf	postinc2,f,c
  5985  01644A  502A               	movf	(btemp+5)^0,w,c
  5986  01644C  12DE               	iorwf	postinc2,f,c
  5987  01644E  502B               	movf	(btemp+6)^0,w,c
  5988  016450  12DE               	iorwf	postinc2,f,c
  5989  016452  502C               	movf	(btemp+7)^0,w,c
  5990  016454  12DE               	iorwf	postinc2,f,c
  5991                           
  5992                           ;stkvar	_sign @ sp[(-5)+-1]
  5993  016456  0EFA               	movlw	-6
  5994  016458  50E3               	movf	plusw1,w,c
  5995  01645A  B4D8               	btfsc	status,2,c
  5996  01645C  D005               	goto	l8566
  5997                           
  5998                           ;stkvar	_val @ sp[(-5)+-5]
  5999  01645E  0EF9               	movlw	-7
  6000  016460  AEE3               	btfss	plusw1,7,c
  6001  016462  D002               	goto	l8566
  6002                           
  6003                           ;stkvar	_arg @ sp[(-5)+0]
  6004  016464  0EFE               	movlw	-2
  6005  016466  8EE3               	bsf	plusw1,7,c
  6006  016468                     l8566:
  6007                           
  6008                           ;stkvar	_arg @ sp[(-5)+0]
  6009  016468  0EFB               	movlw	-5
  6010  01646A  006F FF8C  F025    	movff	plusw1,btemp
  6011  016470  0EFC               	movlw	-4
  6012  016472  006F FF8C  F026    	movff	plusw1,btemp+1
  6013  016478  0EFD               	movlw	-3
  6014  01647A  006F FF8C  F027    	movff	plusw1,btemp+2
  6015  016480  0EFE               	movlw	-2
  6016  016482  006F FF8C  F028    	movff	plusw1,btemp+3
  6017  016488                     l2883:
  6018                           
  6019                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6020  016488  0EF6               	movlw	246
  6021  01648A  26E1               	addwf	fsr1l,f,c
  6022  01648C  0EFF               	movlw	255
  6023  01648E  22E2               	addwfc	fsr1h,f,c
  6024  016490  0012               	return		;funcret
  6025  016492                     __end_of___xxtofl:
  6026                           	opt callstack 0
  6027                           
  6028 ;; *************** function _clear_hid_pflags *****************
  6029 ;; Defined at:
  6030 ;;		line 51 in file "hid.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  h               1  [STACK] PTR struct H_data
  6033 ;;		 -> H(7), 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1  [STACK] void 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6040 ;; Tracked objects:
  6041 ;;		On entry : 3F/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    7
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;; This function uses a reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text22
  6060  01932E                     __ptext22:
  6061                           	opt callstack 0
  6062  01932E                     _clear_hid_pflags:
  6063                           	opt callstack 23
  6064                           
  6065                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6066                           ;stkvar	_h @ sp[(0)+-1]
  6067                           
  6068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6069                           ;incstack = 0
  6070  01932E  0EFF               	movlw	-1
  6071  019330  50E3               	movf	plusw1,w,c
  6072  019332  6ED9               	movwf	fsr2l,c
  6073  019334  6ADA               	clrf	fsr2h,c
  6074  019336  0E03               	movlw	3
  6075  019338  26D9               	addwf	fsr2l,f,c
  6076  01933A  0E00               	movlw	0
  6077  01933C  6EDF               	movwf	indf2,c
  6078                           
  6079                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6080                           ;stkvar	_h @ sp[(0)+-1]
  6081  01933E  0EFF               	movlw	-1
  6082  019340  50E3               	movf	plusw1,w,c
  6083  019342  6ED9               	movwf	fsr2l,c
  6084  019344  6ADA               	clrf	fsr2h,c
  6085  019346  0E05               	movlw	5
  6086  019348  26D9               	addwf	fsr2l,f,c
  6087  01934A  0E00               	movlw	0
  6088  01934C  6EDF               	movwf	indf2,c
  6089                           
  6090                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6091  01934E  52E5               	movf	postdec1,f,c
  6092  019350  0012               	return		;funcret
  6093  019352                     __end_of_clear_hid_pflags:
  6094                           	opt callstack 0
  6095                           
  6096 ;; *************** function _clear_adc_scan *****************
  6097 ;; Defined at:
  6098 ;;		line 64 in file "daq.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1  [STACK] void 
  6105 ;; Registers used:
  6106 ;;		None
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/1
  6109 ;;		On exit  : 3F/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    7
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_main
  6123 ;; This function uses a reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text23
  6127  019692                     __ptext23:
  6128                           	opt callstack 0
  6129  019692                     _clear_adc_scan:
  6130                           	opt callstack 23
  6131                           
  6132                           ;daq.c: 66:  R.done = 0;
  6133                           
  6134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6135                           ;incstack = 0
  6136  019692  0100               	movlb	0	; () banked
  6137  019694  6BEA               	clrf	(_R+39)& (0+255),b	;volatile
  6138                           
  6139                           ; BSR set to: 0
  6140                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6141  019696  0012               	return		;funcret
  6142  019698                     __end_of_clear_adc_scan:
  6143                           	opt callstack 0
  6144                           
  6145 ;; *************** function _check_help *****************
  6146 ;; Defined at:
  6147 ;;		line 40 in file "mconfig.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  flipper         1  [STACK] const _Bool 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  estatus         1    0        _Bool 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1  [STACK] _Bool 
  6154 ;; Registers used:
  6155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6156 ;; Tracked objects:
  6157 ;;		On entry : 3F/2
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;Total ram usage:        0 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:   19
  6168 ;; This function calls:
  6169 ;;		_StartTimer
  6170 ;;		_TimerDone
  6171 ;;		_display_help
  6172 ;;		_display_info
  6173 ;;		_get_vterm_ptr
  6174 ;;		_help_button
  6175 ;;		_mode_lamp_bright
  6176 ;;		_mode_lamp_dim
  6177 ;;		_set_display_info
  6178 ;;		_set_temp_display_help
  6179 ;;		_set_vterm
  6180 ;;		_sprintf
  6181 ;;		_update_lcd
  6182 ;;		_vterm_dump
  6183 ;; This function is called by:
  6184 ;;		_main
  6185 ;; This function uses a reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text24
  6189  01607C                     __ptext24:
  6190                           	opt callstack 0
  6191  01607C                     _check_help:
  6192                           	opt callstack 11
  6193                           
  6194                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6195                           
  6196                           ; BSR set to: 0
  6197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6198                           ;incstack = 0
  6199  01607C  EC81  F0C6         	call	_help_button	;wreg free
  6200  016080  5025               	movf	btemp^0,w,c
  6201  016082  B4D8               	btfsc	status,2,c
  6202  016084  D0D0               	goto	l11040
  6203  016086  EC39  F0CB         	call	_display_info	;wreg free
  6204  01608A  0425               	decf	btemp^0,w,c
  6205  01608C  B4D8               	btfsc	status,2,c
  6206  01608E  D0CB               	goto	l11040
  6207                           
  6208                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6209  016090  0EDC               	movlw	220
  6210  016092  6EE6               	movwf	postinc1,c
  6211  016094  0E05               	movlw	5
  6212  016096  6EE6               	movwf	postinc1,c
  6213  016098  0E0B               	movlw	11
  6214  01609A  6EE6               	movwf	postinc1,c
  6215  01609C  ECE2  F0C5         	call	_StartTimer	;wreg free
  6216                           
  6217                           ;mconfig.c: 48:   if (V.debug)
  6218  0160A0  0102               	movlb	2	; () banked
  6219  0160A2  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6220                           
  6221                           ; BSR set to: 2
  6222                           ;mconfig.c: 49:    vterm_dump();
  6223  0160A4  ECE9  F0B6         	call	_vterm_dump	;wreg free
  6224                           
  6225                           ;mconfig.c: 51:   set_vterm(1);
  6226  0160A8  0E01               	movlw	1
  6227  0160AA  6EE6               	movwf	postinc1,c
  6228  0160AC  EC40  F0CA         	call	_set_vterm	;wreg free
  6229                           
  6230                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6231  0160B0  EC39  F0CB         	call	_display_info	;wreg free
  6232  0160B4  5025               	movf	btemp^0,w,c
  6233  0160B6  6EE6               	movwf	postinc1,c
  6234  0160B8  ECFA  F0CA         	call	_set_temp_display_help	;wreg free
  6235                           
  6236                           ; BSR set to: 2
  6237                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6238  0160BC  0E01               	movlw	1
  6239  0160BE  6EE6               	movwf	postinc1,c
  6240  0160C0  EC4F  F0CA         	call	_set_display_info	;wreg free
  6241                           
  6242                           ;mconfig.c: 54:   if (flipper) {
  6243                           ;stkvar	_flipper @ sp[(0)+-1]
  6244  0160C4  0EFF               	movlw	-1
  6245  0160C6  50E3               	movf	plusw1,w,c
  6246  0160C8  B4D8               	btfsc	status,2,c
  6247  0160CA  D019               	goto	l11026
  6248                           
  6249                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6250  0160CC  0EC1               	movlw	low STR_27
  6251  0160CE  6EE6               	movwf	postinc1,c
  6252  0160D0  0EFF               	movlw	high STR_27
  6253  0160D2  6EE6               	movwf	postinc1,c
  6254  0160D4  0E80               	movlw	low STR_29
  6255  0160D6  6EE6               	movwf	postinc1,c
  6256  0160D8  0EFE               	movlw	high STR_29
  6257  0160DA  6EE6               	movwf	postinc1,c
  6258  0160DC  0E01               	movlw	1
  6259  0160DE  6EE6               	movwf	postinc1,c
  6260  0160E0  0E00               	movlw	0
  6261  0160E2  6EE6               	movwf	postinc1,c
  6262  0160E4  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6263  0160E8  0060  F097  FFE6   	movff	btemp,postinc1
  6264  0160EE  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6265  0160F4  0E06               	movlw	6
  6266  0160F6  6EE6               	movwf	postinc1,c
  6267  0160F8  EC44  F0BA         	call	_sprintf	;wreg free
  6268                           
  6269                           ;mconfig.c: 56:   } else {
  6270  0160FC  D018               	goto	l1669
  6271  0160FE                     l11026:
  6272                           
  6273                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6274  0160FE  0ED7               	movlw	low STR_28
  6275  016100  6EE6               	movwf	postinc1,c
  6276  016102  0EFF               	movlw	high STR_28
  6277  016104  6EE6               	movwf	postinc1,c
  6278  016106  0E80               	movlw	low STR_29
  6279  016108  6EE6               	movwf	postinc1,c
  6280  01610A  0EFE               	movlw	high STR_29
  6281  01610C  6EE6               	movwf	postinc1,c
  6282  01610E  0E01               	movlw	1
  6283  016110  6EE6               	movwf	postinc1,c
  6284  016112  0E00               	movlw	0
  6285  016114  6EE6               	movwf	postinc1,c
  6286  016116  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6287  01611A  0060  F097  FFE6   	movff	btemp,postinc1
  6288  016120  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6289  016126  0E06               	movlw	6
  6290  016128  6EE6               	movwf	postinc1,c
  6291  01612A  EC44  F0BA         	call	_sprintf	;wreg free
  6292  01612E                     l1669:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6296  01612E  0102               	movlb	2	; () banked
  6297  016130  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6298  016132  32E8               	rrcf	wreg,f,c
  6299  016134  32E8               	rrcf	wreg,f,c
  6300  016136  0B03               	andlw	3
  6301  016138  0D24               	mullw	36
  6302  01613A  0E12               	movlw	18
  6303  01613C  26F3               	addwf	243,f,c
  6304  01613E  0E00               	movlw	0
  6305  016140  22F4               	addwfc	244,f,c
  6306  016142  0EB1               	movlw	low _T
  6307  016144  6E2F               	movwf	(btemp+10)^0,c
  6308  016146  0EFD               	movlw	high _T
  6309  016148  6E30               	movwf	(btemp+11)^0,c
  6310  01614A  50F3               	movf	243,w,c
  6311  01614C  262F               	addwf	(btemp+10)^0,f,c
  6312  01614E  50F4               	movf	244,w,c
  6313  016150  2230               	addwfc	(btemp+11)^0,f,c
  6314  016152  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6315  016158  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6316  01615E  0ECD               	movlw	low STR_31
  6317  016160  6EE6               	movwf	postinc1,c
  6318  016162  0EFF               	movlw	high STR_31
  6319  016164  6EE6               	movwf	postinc1,c
  6320  016166  0E01               	movlw	1
  6321  016168  6EE6               	movwf	postinc1,c
  6322  01616A  0E01               	movlw	1
  6323  01616C  6EE6               	movwf	postinc1,c
  6324  01616E  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6325  016172  0060  F097  FFE6   	movff	btemp,postinc1
  6326  016178  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6327  01617E  0E06               	movlw	6
  6328  016180  6EE6               	movwf	postinc1,c
  6329  016182  EC44  F0BA         	call	_sprintf	;wreg free
  6330                           
  6331                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6332  016186  0102               	movlb	2	; () banked
  6333  016188  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6334  01618A  32E8               	rrcf	wreg,f,c
  6335  01618C  32E8               	rrcf	wreg,f,c
  6336  01618E  0B03               	andlw	3
  6337  016190  0D24               	mullw	36
  6338  016192  0EB1               	movlw	low _T
  6339  016194  6E2F               	movwf	(btemp+10)^0,c
  6340  016196  0EFD               	movlw	high _T
  6341  016198  6E30               	movwf	(btemp+11)^0,c
  6342  01619A  50F3               	movf	243,w,c
  6343  01619C  262F               	addwf	(btemp+10)^0,f,c
  6344  01619E  50F4               	movf	244,w,c
  6345  0161A0  2230               	addwfc	(btemp+11)^0,f,c
  6346  0161A2  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6347  0161A8  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6348  0161AE  0ECD               	movlw	low STR_31
  6349  0161B0  6EE6               	movwf	postinc1,c
  6350  0161B2  0EFF               	movlw	high STR_31
  6351  0161B4  6EE6               	movwf	postinc1,c
  6352  0161B6  0E01               	movlw	1
  6353  0161B8  6EE6               	movwf	postinc1,c
  6354  0161BA  0E02               	movlw	2
  6355  0161BC  6EE6               	movwf	postinc1,c
  6356  0161BE  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6357  0161C2  0060  F097  FFE6   	movff	btemp,postinc1
  6358  0161C8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6359  0161CE  0E06               	movlw	6
  6360  0161D0  6EE6               	movwf	postinc1,c
  6361  0161D2  EC44  F0BA         	call	_sprintf	;wreg free
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;mconfig.c: 61:   V.help_id++;
  6365  0161D6  EE20  F29B         	lfsr	2,_V+155	;volatile
  6366  0161DA  38DF               	swapf	223,w,c
  6367  0161DC  6E30               	movwf	(btemp+11)^0,c
  6368  0161DE  3230               	rrcf	(btemp+11)^0,f,c
  6369  0161E0  3030               	rrcf	(btemp+11)^0,w,c
  6370  0161E2  0B03               	andlw	3
  6371  0161E4  6E30               	movwf	(btemp+11)^0,c
  6372  0161E6  2A30               	incf	(btemp+11)^0,f,c
  6373  0161E8  3A30               	swapf	(btemp+11)^0,f,c
  6374  0161EA  3630               	rlcf	(btemp+11)^0,f,c
  6375  0161EC  3630               	rlcf	(btemp+11)^0,f,c
  6376  0161EE  50DF               	movf	223,w,c
  6377  0161F0  1830               	xorwf	(btemp+11)^0,w,c
  6378  0161F2  0B3F               	andlw	-193
  6379  0161F4  1830               	xorwf	(btemp+11)^0,w,c
  6380  0161F6  6EDF               	movwf	223,c
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6384  0161F8  0EB8               	movlw	184
  6385  0161FA  6EE6               	movwf	postinc1,c
  6386  0161FC  0E0B               	movlw	11
  6387  0161FE  6EE6               	movwf	postinc1,c
  6388  016200  0E09               	movlw	9
  6389  016202  6EE6               	movwf	postinc1,c
  6390  016204  ECE2  F0C5         	call	_StartTimer	;wreg free
  6391                           
  6392                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6393  016208  0EB8               	movlw	184
  6394  01620A  6EE6               	movwf	postinc1,c
  6395  01620C  0E0B               	movlw	11
  6396  01620E  6EE6               	movwf	postinc1,c
  6397  016210  0E07               	movlw	7
  6398  016212  6EE6               	movwf	postinc1,c
  6399  016214  ECE2  F0C5         	call	_StartTimer	;wreg free
  6400                           
  6401                           ;mconfig.c: 64:   mode_lamp_bright();
  6402  016218  EC09  F0CB         	call	_mode_lamp_bright	;wreg free
  6403                           
  6404                           ;mconfig.c: 65:   update_lcd(1);
  6405  01621C  0E01               	movlw	1
  6406  01621E  6EE6               	movwf	postinc1,c
  6407  016220  ECBC  F0B9         	call	_update_lcd	;wreg free
  6408                           
  6409                           ;mconfig.c: 67:  } else {
  6410  016224  D032               	goto	l1670
  6411  016226                     l11040:
  6412                           
  6413                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6414  016226  0E09               	movlw	9
  6415  016228  6EE6               	movwf	postinc1,c
  6416  01622A  EC43  F0C8         	call	_TimerDone	;wreg free
  6417  01622E  5025               	movf	btemp^0,w,c
  6418  016230  B4D8               	btfsc	status,2,c
  6419  016232  D02B               	goto	l1670
  6420                           
  6421                           ;mconfig.c: 69:    set_vterm(0);
  6422  016234  0E00               	movlw	0
  6423  016236  6EE6               	movwf	postinc1,c
  6424  016238  EC40  F0CA         	call	_set_vterm	;wreg free
  6425                           
  6426                           ;mconfig.c: 70:    V.help = 0;
  6427  01623C  0102               	movlb	2	; () banked
  6428  01623E  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6429                           
  6430                           ; BSR set to: 2
  6431                           ;mconfig.c: 71:    set_display_info(display_help());
  6432  016240  EC3D  F0CB         	call	_display_help	;wreg free
  6433  016244  5025               	movf	btemp^0,w,c
  6434  016246  6EE6               	movwf	postinc1,c
  6435  016248  EC4F  F0CA         	call	_set_display_info	;wreg free
  6436                           
  6437                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6438  01624C  0060  FA57  FFE6   	movff	_V+149,postinc1
  6439  016252  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6440  016258  ECA5  F0CA         	call	_mode_lamp_dim	;wreg free
  6441                           
  6442                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6443  01625C  0E0B               	movlw	11
  6444  01625E  6EE6               	movwf	postinc1,c
  6445  016260  EC43  F0C8         	call	_TimerDone	;wreg free
  6446  016264  5025               	movf	btemp^0,w,c
  6447  016266  B4D8               	btfsc	status,2,c
  6448  016268  D010               	goto	l1670
  6449                           
  6450                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6451  01626A  0102               	movlb	2	; () banked
  6452  01626C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6453  01626E  A4D8               	btfss	status,2,c
  6454  016270  D002               	goto	u10790
  6455  016272  0E01               	movlw	1
  6456  016274  D001               	goto	u10800
  6457  016276                     u10790:
  6458  016276  0E00               	movlw	0
  6459  016278                     u10800:
  6460  016278  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6461                           
  6462                           ; BSR set to: 2
  6463                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6464  01627A  0EDC               	movlw	220
  6465  01627C  6EE6               	movwf	postinc1,c
  6466  01627E  0E05               	movlw	5
  6467  016280  6EE6               	movwf	postinc1,c
  6468  016282  0E0B               	movlw	11
  6469  016284  6EE6               	movwf	postinc1,c
  6470  016286  ECE2  F0C5         	call	_StartTimer	;wreg free
  6471  01628A                     l1670:
  6472                           
  6473                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6474  01628A  52E5               	movf	postdec1,f,c
  6475  01628C  0012               	return		;funcret
  6476  01628E                     __end_of_check_help:
  6477                           	opt callstack 0
  6478                           
  6479 ;; *************** function _vterm_dump *****************
  6480 ;; Defined at:
  6481 ;;		line 121 in file "mconfig.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;		None
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;		None
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1  [STACK] void 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6490 ;; Tracked objects:
  6491 ;;		On entry : 3F/2
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6499 ;;Total ram usage:        0 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:   18
  6502 ;; This function calls:
  6503 ;;		_WaitMs
  6504 ;;		_eaDogM_WriteStringAtPos
  6505 ;;		_get_vterm_ptr
  6506 ;;		_sprintf
  6507 ;;		_wait_lcd_done
  6508 ;; This function is called by:
  6509 ;;		_check_help
  6510 ;; This function uses a reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text25
  6514  016DD2                     __ptext25:
  6515                           	opt callstack 0
  6516  016DD2                     _vterm_dump:
  6517                           	opt callstack 11
  6518                           
  6519                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6520                           
  6521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6522                           ;incstack = 0
  6523  016DD2  0E01               	movlw	1
  6524  016DD4  6EE6               	movwf	postinc1,c
  6525  016DD6  0E00               	movlw	0
  6526  016DD8  6EE6               	movwf	postinc1,c
  6527  016DDA  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6528  016DDE  0060  F097  FFE6   	movff	btemp,postinc1
  6529  016DE4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6530  016DEA  0E00               	movlw	0
  6531  016DEC  6EE6               	movwf	postinc1,c
  6532  016DEE  0E00               	movlw	0
  6533  016DF0  6EE6               	movwf	postinc1,c
  6534  016DF2  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6535  016DF6  0060  F097  FFE6   	movff	btemp,postinc1
  6536  016DFC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6537  016E02  0EA3               	movlw	low STR_33
  6538  016E04  6EE6               	movwf	postinc1,c
  6539  016E06  0EFF               	movlw	high STR_33
  6540  016E08  6EE6               	movwf	postinc1,c
  6541  016E0A  0E01               	movlw	low (_V+1)
  6542  016E0C  6EE6               	movwf	postinc1,c
  6543  016E0E  0E02               	movlw	high (_V+1)
  6544  016E10  6EE6               	movwf	postinc1,c
  6545  016E12  0E08               	movlw	8
  6546  016E14  6EE6               	movwf	postinc1,c
  6547  016E16  EC44  F0BA         	call	_sprintf	;wreg free
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;mconfig.c: 124:  wait_lcd_done();
  6551  016E1A  EC7C  F0CA         	call	_wait_lcd_done	;wreg free
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6555  016E1E  0E01               	movlw	low (_V+1)
  6556  016E20  6EE6               	movwf	postinc1,c
  6557  016E22  0E02               	movlw	high (_V+1)
  6558  016E24  6EE6               	movwf	postinc1,c
  6559  016E26  0E00               	movlw	0
  6560  016E28  6EE6               	movwf	postinc1,c
  6561  016E2A  0E00               	movlw	0
  6562  016E2C  6EE6               	movwf	postinc1,c
  6563  016E2E  ECD3  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6564                           
  6565                           ; BSR set to: 59
  6566                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6567  016E32  0E01               	movlw	1
  6568  016E34  6EE6               	movwf	postinc1,c
  6569  016E36  0E01               	movlw	1
  6570  016E38  6EE6               	movwf	postinc1,c
  6571  016E3A  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6572  016E3E  0060  F097  FFE6   	movff	btemp,postinc1
  6573  016E44  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6574  016E4A  0E00               	movlw	0
  6575  016E4C  6EE6               	movwf	postinc1,c
  6576  016E4E  0E01               	movlw	1
  6577  016E50  6EE6               	movwf	postinc1,c
  6578  016E52  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6579  016E56  0060  F097  FFE6   	movff	btemp,postinc1
  6580  016E5C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6581  016E62  0EA3               	movlw	low STR_33
  6582  016E64  6EE6               	movwf	postinc1,c
  6583  016E66  0EFF               	movlw	high STR_33
  6584  016E68  6EE6               	movwf	postinc1,c
  6585  016E6A  0E01               	movlw	low (_V+1)
  6586  016E6C  6EE6               	movwf	postinc1,c
  6587  016E6E  0E02               	movlw	high (_V+1)
  6588  016E70  6EE6               	movwf	postinc1,c
  6589  016E72  0E08               	movlw	8
  6590  016E74  6EE6               	movwf	postinc1,c
  6591  016E76  EC44  F0BA         	call	_sprintf	;wreg free
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;mconfig.c: 127:  wait_lcd_done();
  6595  016E7A  EC7C  F0CA         	call	_wait_lcd_done	;wreg free
  6596                           
  6597                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6598  016E7E  0E01               	movlw	low (_V+1)
  6599  016E80  6EE6               	movwf	postinc1,c
  6600  016E82  0E02               	movlw	high (_V+1)
  6601  016E84  6EE6               	movwf	postinc1,c
  6602  016E86  0E00               	movlw	0
  6603  016E88  6EE6               	movwf	postinc1,c
  6604  016E8A  0E01               	movlw	1
  6605  016E8C  6EE6               	movwf	postinc1,c
  6606  016E8E  ECD3  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6607                           
  6608                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6609  016E92  0E01               	movlw	1
  6610  016E94  6EE6               	movwf	postinc1,c
  6611  016E96  0E02               	movlw	2
  6612  016E98  6EE6               	movwf	postinc1,c
  6613  016E9A  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6614  016E9E  0060  F097  FFE6   	movff	btemp,postinc1
  6615  016EA4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6616  016EAA  0E00               	movlw	0
  6617  016EAC  6EE6               	movwf	postinc1,c
  6618  016EAE  0E02               	movlw	2
  6619  016EB0  6EE6               	movwf	postinc1,c
  6620  016EB2  EC84  F0C7         	call	_get_vterm_ptr	;wreg free
  6621  016EB6  0060  F097  FFE6   	movff	btemp,postinc1
  6622  016EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6623  016EC2  0EA3               	movlw	low STR_33
  6624  016EC4  6EE6               	movwf	postinc1,c
  6625  016EC6  0EFF               	movlw	high STR_33
  6626  016EC8  6EE6               	movwf	postinc1,c
  6627  016ECA  0E01               	movlw	low (_V+1)
  6628  016ECC  6EE6               	movwf	postinc1,c
  6629  016ECE  0E02               	movlw	high (_V+1)
  6630  016ED0  6EE6               	movwf	postinc1,c
  6631  016ED2  0E08               	movlw	8
  6632  016ED4  6EE6               	movwf	postinc1,c
  6633  016ED6  EC44  F0BA         	call	_sprintf	;wreg free
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;mconfig.c: 130:  wait_lcd_done();
  6637  016EDA  EC7C  F0CA         	call	_wait_lcd_done	;wreg free
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6641  016EDE  0E01               	movlw	low (_V+1)
  6642  016EE0  6EE6               	movwf	postinc1,c
  6643  016EE2  0E02               	movlw	high (_V+1)
  6644  016EE4  6EE6               	movwf	postinc1,c
  6645  016EE6  0E00               	movlw	0
  6646  016EE8  6EE6               	movwf	postinc1,c
  6647  016EEA  0E02               	movlw	2
  6648  016EEC  6EE6               	movwf	postinc1,c
  6649  016EEE  ECD3  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6650                           
  6651                           ; BSR set to: 59
  6652                           ;mconfig.c: 132:  WaitMs(3000);
  6653  016EF2  0EB8               	movlw	184
  6654  016EF4  6EE6               	movwf	postinc1,c
  6655  016EF6  0E0B               	movlw	11
  6656  016EF8  6EE6               	movwf	postinc1,c
  6657  016EFA  ECB8  F0C6         	call	_WaitMs	;wreg free
  6658                           
  6659                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6660  016EFE  0012               	return		;funcret
  6661  016F00                     __end_of_vterm_dump:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function _sprintf *****************
  6665 ;; Defined at:
  6666 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  s               2  [STACK] PTR unsigned char 
  6669 ;;		 -> D.lcd(288), D(290), V(188), 
  6670 ;;  fmt             2  [STACK] PTR const unsigned char 
  6671 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6672 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6673 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6674 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6675 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6676 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  6677 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6678 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6679 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6680 ;;		 -> STR_1(17), 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  f               6  [STACK] struct _IO_FILE
  6683 ;;  ap              2  [STACK] PTR void [1]
  6684 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6685 ;;  ret             2    0        int 
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  2  [STACK] int 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/1
  6692 ;;		On exit  : 3F/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:   15
  6702 ;; This function calls:
  6703 ;;		_vfprintf
  6704 ;; This function is called by:
  6705 ;;		_main
  6706 ;;		_check_help
  6707 ;;		_vterm_dump
  6708 ;; This function uses a reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text26
  6712  017488                     __ptext26:
  6713                           	opt callstack 0
  6714  017488                     _sprintf:
  6715                           	opt callstack 0
  6716                           
  6717                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6718  017488  0E08               	movlw	8
  6719  01748A  26E1               	addwf	fsr1l,f,c
  6720  01748C  0E00               	movlw	0
  6721  01748E  22E2               	addwfc	fsr1h,f,c
  6722                           
  6723                           ;incstack = 0
  6724  017490  0EFE               	movlw	254
  6725  017492  6E2F               	movwf	(btemp+10)^0,c
  6726  017494  0EFF               	movlw	255
  6727  017496  6E30               	movwf	(btemp+11)^0,c
  6728                           
  6729                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6730  017498  0EF5               	movlw	245
  6731  01749A  24E1               	addwf	fsr1l,w,c
  6732  01749C  6E2D               	movwf	(btemp+8)^0,c
  6733  01749E  0EFF               	movlw	255
  6734  0174A0  20E2               	addwfc	fsr1h,w,c
  6735  0174A2  6E2E               	movwf	(btemp+9)^0,c
  6736  0174A4  502F               	movf	(btemp+10)^0,w,c
  6737  0174A6  262D               	addwf	(btemp+8)^0,f,c
  6738  0174A8  5030               	movf	(btemp+11)^0,w,c
  6739  0174AA  222E               	addwfc	(btemp+9)^0,f,c
  6740                           
  6741                           ;stkvar	_ap @ sp[(-8)+6]
  6742  0174AC  0EFF               	movlw	-1
  6743  0174AE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  6744  0174B4  0EFE               	movlw	-2
  6745  0174B6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  6746                           
  6747                           ;stkvar	_s @ sp[(-8)+-3]
  6748  0174BC  0EF5               	movlw	-11
  6749  0174BE  006F FF8C  F02F    	movff	plusw1,btemp+10
  6750  0174C4  0EF6               	movlw	-10
  6751  0174C6  006F FF8C  F030    	movff	plusw1,btemp+11
  6752                           
  6753                           ;stkvar	_f @ sp[(-8)+0]
  6754  0174CC  0EF9               	movlw	-7
  6755  0174CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  6756  0174D4  0EF8               	movlw	-8
  6757  0174D6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  6758                           
  6759                           ;stkvar	_f @ sp[(-8)+0]
  6760  0174DC  0EFA               	movlw	250
  6761  0174DE  24E1               	addwf	fsr1l,w,c
  6762  0174E0  6ED9               	movwf	fsr2l,c
  6763  0174E2  0EFF               	movlw	255
  6764  0174E4  20E2               	addwfc	fsr1h,w,c
  6765  0174E6  6EDA               	movwf	fsr2h,c
  6766  0174E8  0E00               	movlw	0
  6767  0174EA  6EDE               	movwf	postinc2,c
  6768  0174EC  0E00               	movlw	0
  6769  0174EE  6EDD               	movwf	postdec2,c
  6770                           
  6771                           ;stkvar	_f @ sp[(-8)+0]
  6772  0174F0  0EFC               	movlw	252
  6773  0174F2  24E1               	addwf	fsr1l,w,c
  6774  0174F4  6ED9               	movwf	fsr2l,c
  6775  0174F6  0EFF               	movlw	255
  6776  0174F8  20E2               	addwfc	fsr1h,w,c
  6777  0174FA  6EDA               	movwf	fsr2h,c
  6778  0174FC  0E00               	movlw	0
  6779  0174FE  6EDE               	movwf	postinc2,c
  6780  017500  0E00               	movlw	0
  6781  017502  6EDD               	movwf	postdec2,c
  6782                           
  6783                           ;stkvar	_ap @ sp[(-8)+6]
  6784  017504  0EFE               	movlw	254
  6785  017506  24E1               	addwf	fsr1l,w,c
  6786  017508  6E25               	movwf	btemp^0,c
  6787  01750A  0EFF               	movlw	255
  6788  01750C  20E2               	addwfc	fsr1h,w,c
  6789  01750E  6E26               	movwf	(btemp+1)^0,c
  6790  017510  0060  F097  FFE6   	movff	btemp,postinc1
  6791  017516  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6792                           
  6793                           ;stkvar	_fmt @ sp[(-10)+-5]
  6794  01751C  0EF1               	movlw	-15
  6795  01751E  006F FF8F FFE6     	movff	plusw1,postinc1
  6796  017524  006F FF8F FFE6     	movff	plusw1,postinc1
  6797                           
  6798                           ;stkvar	_f @ sp[(-12)+0]
  6799  01752A  0EF4               	movlw	244
  6800  01752C  24E1               	addwf	fsr1l,w,c
  6801  01752E  6E25               	movwf	btemp^0,c
  6802  017530  0EFF               	movlw	255
  6803  017532  20E2               	addwfc	fsr1h,w,c
  6804  017534  6E26               	movwf	(btemp+1)^0,c
  6805  017536  0060  F097  FFE6   	movff	btemp,postinc1
  6806  01753C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6807  017542  EC86  F0BE         	call	_vfprintf	;wreg free
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;stkvar	_f @ sp[(-8)+0]
  6811  017546  0EFA               	movlw	250
  6812  017548  24E1               	addwf	fsr1l,w,c
  6813  01754A  6ED9               	movwf	fsr2l,c
  6814  01754C  0EFF               	movlw	255
  6815  01754E  20E2               	addwfc	fsr1h,w,c
  6816  017550  6EDA               	movwf	fsr2h,c
  6817  017552  006F FF78  F02F    	movff	postinc2,btemp+10
  6818  017558  006F FF74  F030    	movff	postdec2,btemp+11
  6819                           
  6820                           ;stkvar	_s @ sp[(-8)+-3]
  6821  01755E  0EF5               	movlw	-11
  6822  017560  006F FF8C  F02D    	movff	plusw1,btemp+8
  6823  017566  0EF6               	movlw	-10
  6824  017568  006F FF8C  F02E    	movff	plusw1,btemp+9
  6825  01756E  502F               	movf	(btemp+10)^0,w,c
  6826  017570  242D               	addwf	(btemp+8)^0,w,c
  6827  017572  6ED9               	movwf	fsr2l,c
  6828  017574  5030               	movf	(btemp+11)^0,w,c
  6829  017576  202E               	addwfc	(btemp+9)^0,w,c
  6830  017578  6EDA               	movwf	fsr2h,c
  6831  01757A  0E00               	movlw	0
  6832  01757C  6EDF               	movwf	indf2,c
  6833                           
  6834                           ; BSR set to: 0
  6835                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6836  01757E  0EF8               	movlw	248
  6837  017580  26E1               	addwf	fsr1l,f,c
  6838  017582  0EFF               	movlw	255
  6839  017584  22E2               	addwfc	fsr1h,f,c
  6840  017586  52E5               	movf	postdec1,f,c
  6841  017588  50E7               	movf	indf1,w,c
  6842  01758A  5EE1               	subwf	fsr1l,f,c
  6843  01758C  0E00               	movlw	0
  6844  01758E  5AE2               	subwfb	fsr1h,f,c
  6845  017590  0012               	return		;funcret
  6846  017592                     __end_of_sprintf:
  6847                           	opt callstack 0
  6848                           
  6849 ;; *************** function _get_vterm_ptr *****************
  6850 ;; Defined at:
  6851 ;;		line 116 in file "mconfig.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  line            1  [STACK] const unsigned char 
  6854 ;;  vterm           1  [STACK] const unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  2  [STACK] PTR unsigned char 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/1
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    7
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_main
  6877 ;;		_check_help
  6878 ;;		_vterm_dump
  6879 ;; This function uses a reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text27
  6883  018F08                     __ptext27:
  6884                           	opt callstack 0
  6885  018F08                     _get_vterm_ptr:
  6886                           	opt callstack 23
  6887                           
  6888                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6889                           ;stkvar	_vterm @ sp[(0)+-2]
  6890                           
  6891                           ; BSR set to: 0
  6892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6893                           ;incstack = 0
  6894  018F08  0EFE               	movlw	-2
  6895  018F0A  50E3               	movf	plusw1,w,c
  6896  018F0C  0B03               	andlw	3
  6897  018F0E  0D48               	mullw	72
  6898  018F10  0EFF               	movlw	low _D
  6899  018F12  6E25               	movwf	btemp^0,c
  6900  018F14  0E06               	movlw	high _D
  6901  018F16  6E26               	movwf	(btemp+1)^0,c
  6902  018F18  50F3               	movf	243,w,c
  6903  018F1A  2625               	addwf	btemp^0,f,c
  6904  018F1C  50F4               	movf	244,w,c
  6905  018F1E  2226               	addwfc	(btemp+1)^0,f,c
  6906                           
  6907                           ;stkvar	_line @ sp[(0)+-1]
  6908  018F20  0EFF               	movlw	-1
  6909  018F22  50E3               	movf	plusw1,w,c
  6910  018F24  0B03               	andlw	3
  6911  018F26  0D18               	mullw	24
  6912  018F28  50F3               	movf	243,w,c
  6913  018F2A  2625               	addwf	btemp^0,f,c
  6914  018F2C  50F4               	movf	244,w,c
  6915  018F2E  2226               	addwfc	(btemp+1)^0,f,c
  6916                           
  6917                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6918  018F30  52E5               	movf	postdec1,f,c
  6919  018F32  52E5               	movf	postdec1,f,c
  6920  018F34  0012               	return		;funcret
  6921  018F36                     __end_of_get_vterm_ptr:
  6922                           	opt callstack 0
  6923                           
  6924 ;; *************** function _WaitMs *****************
  6925 ;; Defined at:
  6926 ;;		line 32 in file "timers.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  numMilliseco    2  [STACK] const unsigned short 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1  [STACK] void 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/2
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    8
  6947 ;; This function calls:
  6948 ;;		_StartTimer
  6949 ;;		_TimerDone
  6950 ;; This function is called by:
  6951 ;;		_main
  6952 ;;		_vterm_dump
  6953 ;; This function uses a reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text28
  6957  018D70                     __ptext28:
  6958                           	opt callstack 0
  6959  018D70                     _WaitMs:
  6960                           	opt callstack 20
  6961                           
  6962                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6963                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6964                           
  6965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6966                           ;incstack = 0
  6967  018D70  0EFE               	movlw	-2
  6968  018D72  006F FF8F FFE6     	movff	plusw1,postinc1
  6969  018D78  006F FF8F FFE6     	movff	plusw1,postinc1
  6970  018D7E  0E00               	movlw	0
  6971  018D80  6EE6               	movwf	postinc1,c
  6972  018D82  ECE2  F0C5         	call	_StartTimer	;wreg free
  6973                           
  6974                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6975  018D86  D005               	goto	l7860
  6976  018D88                     l1599:
  6977                           
  6978                           ;timers.c: 36:   __nop();
  6979  018D88  F000               	nop	
  6980                           
  6981                           ;timers.c: 37:   __nop();
  6982  018D8A  F000               	nop	
  6983                           
  6984                           ;timers.c: 38:   __nop();
  6985  018D8C  F000               	nop	
  6986                           
  6987                           ;timers.c: 39:   __nop();
  6988  018D8E  F000               	nop	
  6989  018D90  0004               	clrwdt		;# 
  6990  018D92                     l7860:
  6991                           
  6992                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6993  018D92  0E00               	movlw	0
  6994  018D94  6EE6               	movwf	postinc1,c
  6995  018D96  EC43  F0C8         	call	_TimerDone	;wreg free
  6996  018D9A  5025               	movf	btemp^0,w,c
  6997  018D9C  B4D8               	btfsc	status,2,c
  6998  018D9E  D7F4               	goto	l1599
  6999                           
  7000                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7001  018DA0  52E5               	movf	postdec1,f,c
  7002  018DA2  52E5               	movf	postdec1,f,c
  7003  018DA4  0012               	return		;funcret
  7004  018DA6                     __end_of_WaitMs:
  7005                           	opt callstack 0
  7006                           
  7007 ;; *************** function _update_lcd *****************
  7008 ;; Defined at:
  7009 ;;		line 85 in file "mconfig.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  vterm           1  [STACK] unsigned char 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1  [STACK] unsigned char 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7027 ;;Total ram usage:        0 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:   18
  7030 ;; This function calls:
  7031 ;;		_eaDogM_WriteStringAtPos
  7032 ;;		_wait_lcd_done
  7033 ;; This function is called by:
  7034 ;;		_main
  7035 ;;		_check_help
  7036 ;; This function uses a reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text29
  7040  017378                     __ptext29:
  7041                           	opt callstack 0
  7042  017378                     _update_lcd:
  7043                           	opt callstack 12
  7044                           
  7045                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7046                           ;stkvar	_vterm @ sp[(0)+-1]
  7047                           
  7048                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7049                           ;incstack = 0
  7050  017378  0EFF               	movlw	-1
  7051  01737A  006F FF8C  F025    	movff	plusw1,btemp
  7052  017380  0E03               	movlw	3
  7053  017382  1625               	andwf	btemp^0,f,c
  7054  017384  0EFF               	movlw	-1
  7055  017386  0060  F097  FFE3   	movff	btemp,plusw1
  7056                           
  7057                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7058  01738C  EE22  F01F         	lfsr	2,_D+288
  7059  017390  A0DF               	btfss	indf2,0,c
  7060  017392  D004               	goto	l10906
  7061                           
  7062                           ;stkvar	_vterm @ sp[(0)+-1]
  7063  017394  0EFF               	movlw	-1
  7064  017396  50E3               	movf	plusw1,w,c
  7065  017398  B4D8               	btfsc	status,2,c
  7066  01739A  D074               	goto	l1677
  7067  01739C                     l10906:
  7068                           
  7069                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7070                           ;stkvar	_vterm @ sp[(0)+-1]
  7071  01739C  0EFF               	movlw	-1
  7072  01739E  50E3               	movf	plusw1,w,c
  7073  0173A0  0D48               	mullw	72
  7074  0173A2  0E0F               	movlw	low (_D+16)
  7075  0173A4  24F3               	addwf	243,w,c
  7076  0173A6  6ED9               	movwf	fsr2l,c
  7077  0173A8  0E07               	movlw	high (_D+16)
  7078  0173AA  20F4               	addwfc	prodh,w,c
  7079  0173AC  6EDA               	movwf	fsr2h,c
  7080  0173AE  0E00               	movlw	0
  7081  0173B0  6EDF               	movwf	indf2,c
  7082                           
  7083                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7084                           ;stkvar	_vterm @ sp[(0)+-1]
  7085  0173B2  0EFF               	movlw	-1
  7086  0173B4  50E3               	movf	plusw1,w,c
  7087  0173B6  0D48               	mullw	72
  7088  0173B8  0E27               	movlw	low (_D+40)
  7089  0173BA  24F3               	addwf	243,w,c
  7090  0173BC  6ED9               	movwf	fsr2l,c
  7091  0173BE  0E07               	movlw	high (_D+40)
  7092  0173C0  20F4               	addwfc	prodh,w,c
  7093  0173C2  6EDA               	movwf	fsr2h,c
  7094  0173C4  0E00               	movlw	0
  7095  0173C6  6EDF               	movwf	indf2,c
  7096                           
  7097                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7098                           ;stkvar	_vterm @ sp[(0)+-1]
  7099  0173C8  0EFF               	movlw	-1
  7100  0173CA  50E3               	movf	plusw1,w,c
  7101  0173CC  0D48               	mullw	72
  7102  0173CE  0E3F               	movlw	low (_D+64)
  7103  0173D0  24F3               	addwf	243,w,c
  7104  0173D2  6ED9               	movwf	fsr2l,c
  7105  0173D4  0E07               	movlw	high (_D+64)
  7106  0173D6  20F4               	addwfc	prodh,w,c
  7107  0173D8  6EDA               	movwf	fsr2h,c
  7108  0173DA  0E00               	movlw	0
  7109  0173DC  6EDF               	movwf	indf2,c
  7110                           
  7111                           ;mconfig.c: 95:  wait_lcd_done();
  7112  0173DE  EC7C  F0CA         	call	_wait_lcd_done	;wreg free
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7116                           ;stkvar	_vterm @ sp[(0)+-1]
  7117  0173E2  0EFF               	movlw	-1
  7118  0173E4  50E3               	movf	plusw1,w,c
  7119  0173E6  0D48               	mullw	72
  7120  0173E8  0EFF               	movlw	low _D
  7121  0173EA  6E2F               	movwf	(btemp+10)^0,c
  7122  0173EC  0E06               	movlw	high _D
  7123  0173EE  6E30               	movwf	(btemp+11)^0,c
  7124  0173F0  50F3               	movf	243,w,c
  7125  0173F2  262F               	addwf	(btemp+10)^0,f,c
  7126  0173F4  50F4               	movf	244,w,c
  7127  0173F6  2230               	addwfc	(btemp+11)^0,f,c
  7128  0173F8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7129  0173FE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7130  017404  0E00               	movlw	0
  7131  017406  6EE6               	movwf	postinc1,c
  7132  017408  0E00               	movlw	0
  7133  01740A  6EE6               	movwf	postinc1,c
  7134  01740C  ECD3  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7135                           
  7136                           ; BSR set to: 59
  7137                           ;mconfig.c: 97:  wait_lcd_done();
  7138  017410  EC7C  F0CA         	call	_wait_lcd_done	;wreg free
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7142                           ;stkvar	_vterm @ sp[(0)+-1]
  7143  017414  0EFF               	movlw	-1
  7144  017416  50E3               	movf	plusw1,w,c
  7145  017418  0D48               	mullw	72
  7146  01741A  0EFF               	movlw	low _D
  7147  01741C  6E2F               	movwf	(btemp+10)^0,c
  7148  01741E  0E06               	movlw	high _D
  7149  017420  6E30               	movwf	(btemp+11)^0,c
  7150  017422  0E18               	movlw	24
  7151  017424  262F               	addwf	(btemp+10)^0,f,c
  7152  017426  0E00               	movlw	0
  7153  017428  2230               	addwfc	(btemp+11)^0,f,c
  7154  01742A  50F3               	movf	243,w,c
  7155  01742C  262F               	addwf	(btemp+10)^0,f,c
  7156  01742E  50F4               	movf	244,w,c
  7157  017430  2230               	addwfc	(btemp+11)^0,f,c
  7158  017432  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7159  017438  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7160  01743E  0E00               	movlw	0
  7161  017440  6EE6               	movwf	postinc1,c
  7162  017442  0E01               	movlw	1
  7163  017444  6EE6               	movwf	postinc1,c
  7164  017446  ECD3  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7165                           
  7166                           ; BSR set to: 59
  7167                           ;mconfig.c: 99:  wait_lcd_done();
  7168  01744A  EC7C  F0CA         	call	_wait_lcd_done	;wreg free
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7172                           ;stkvar	_vterm @ sp[(0)+-1]
  7173  01744E  0EFF               	movlw	-1
  7174  017450  50E3               	movf	plusw1,w,c
  7175  017452  0D48               	mullw	72
  7176  017454  0EFF               	movlw	low _D
  7177  017456  6E2F               	movwf	(btemp+10)^0,c
  7178  017458  0E06               	movlw	high _D
  7179  01745A  6E30               	movwf	(btemp+11)^0,c
  7180  01745C  0E30               	movlw	48
  7181  01745E  262F               	addwf	(btemp+10)^0,f,c
  7182  017460  0E00               	movlw	0
  7183  017462  2230               	addwfc	(btemp+11)^0,f,c
  7184  017464  50F3               	movf	243,w,c
  7185  017466  262F               	addwf	(btemp+10)^0,f,c
  7186  017468  50F4               	movf	244,w,c
  7187  01746A  2230               	addwfc	(btemp+11)^0,f,c
  7188  01746C  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7189  017472  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7190  017478  0E00               	movlw	0
  7191  01747A  6EE6               	movwf	postinc1,c
  7192  01747C  0E02               	movlw	2
  7193  01747E  6EE6               	movwf	postinc1,c
  7194  017480  ECD3  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7195  017484                     l1677:
  7196                           
  7197                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7198  017484  52E5               	movf	postdec1,f,c
  7199  017486  0012               	return		;funcret
  7200  017488                     __end_of_update_lcd:
  7201                           	opt callstack 0
  7202                           
  7203 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7204 ;; Defined at:
  7205 ;;		line 265 in file "eadog.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  r               1  [STACK] const unsigned char 
  7208 ;;  c               1  [STACK] const unsigned char 
  7209 ;;  strPtr          2  [STACK] PTR unsigned char 
  7210 ;;		 -> D.lcd(288), D(290), V(188), 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;		None
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1  [STACK] void 
  7215 ;; Registers used:
  7216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7217 ;; Tracked objects:
  7218 ;;		On entry : 3F/0
  7219 ;;		On exit  : 3F/3B
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7226 ;;Total ram usage:        0 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:   17
  7229 ;; This function calls:
  7230 ;;		_eaDogM_WriteString
  7231 ;;		_send_lcd_cmd_dma
  7232 ;; This function is called by:
  7233 ;;		_update_lcd
  7234 ;;		_vterm_dump
  7235 ;; This function uses a reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text30
  7239  018DA6                     __ptext30:
  7240                           	opt callstack 0
  7241  018DA6                     _eaDogM_WriteStringAtPos:
  7242                           	opt callstack 12
  7243                           
  7244                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7245                           ;stkvar	_c @ sp[(0)+-2]
  7246                           
  7247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7248                           ;incstack = 0
  7249  018DA6  0EFE               	movlw	-2
  7250  018DA8  006F FF8C  F030    	movff	plusw1,btemp+11
  7251                           
  7252                           ;stkvar	_r @ sp[(0)+-1]
  7253  018DAE  0EFF               	movlw	-1
  7254  018DB0  50E3               	movf	plusw1,w,c
  7255  018DB2  0D10               	mullw	16
  7256  018DB4  50F3               	movf	243,w,c
  7257  018DB6  2430               	addwf	(btemp+11)^0,w,c
  7258  018DB8  0F80               	addlw	128
  7259  018DBA  6EE6               	movwf	postinc1,c
  7260  018DBC  EC51  F0C4         	call	_send_lcd_cmd_dma	;wreg free
  7261                           
  7262                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7263                           ;stkvar	_strPtr @ sp[(0)+-4]
  7264  018DC0  0EFC               	movlw	-4
  7265  018DC2  006F FF8F FFE6     	movff	plusw1,postinc1
  7266  018DC8  006F FF8F FFE6     	movff	plusw1,postinc1
  7267  018DCE  EC31  F0BF         	call	_eaDogM_WriteString	;wreg free
  7268                           
  7269                           ; BSR set to: 59
  7270                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7271  018DD2  52E5               	movf	postdec1,f,c
  7272  018DD4  52E5               	movf	postdec1,f,c
  7273  018DD6  52E5               	movf	postdec1,f,c
  7274  018DD8  52E5               	movf	postdec1,f,c
  7275  018DDA  0012               	return		;funcret
  7276  018DDC                     __end_of_eaDogM_WriteStringAtPos:
  7277                           	opt callstack 0
  7278                           
  7279 ;; *************** function _send_lcd_cmd_dma *****************
  7280 ;; Defined at:
  7281 ;;		line 218 in file "eadog.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  strPtr          1  [STACK] unsigned char 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;		None
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1  [STACK] void 
  7288 ;; Registers used:
  7289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/3D
  7292 ;;		On exit  : 3F/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7299 ;;Total ram usage:        0 bytes
  7300 ;; Hardware stack levels used:    1
  7301 ;; Hardware stack levels required when called:   16
  7302 ;; This function calls:
  7303 ;;		_printf
  7304 ;;		_ringBufS_flush
  7305 ;;		_start_lcd
  7306 ;;		_wait_lcd_done
  7307 ;;		_wait_lcd_set
  7308 ;; This function is called by:
  7309 ;;		_eaDogM_WriteCommand
  7310 ;;		_eaDogM_WriteStringAtPos
  7311 ;; This function uses a reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text31
  7315  0188A2                     __ptext31:
  7316                           	opt callstack 0
  7317  0188A2                     _send_lcd_cmd_dma:
  7318                           	opt callstack 12
  7319                           
  7320                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7321                           
  7322                           ; BSR set to: 59
  7323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7324                           ;incstack = 0
  7325  0188A2  EC4C  F0CB         	call	_wait_lcd_set	;wreg free
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7329  0188A6  0E00               	movlw	0
  7330  0188A8  6EE6               	movwf	postinc1,c
  7331  0188AA  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7332  0188B0  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7333  0188B6  EC21  F0C0         	call	_ringBufS_flush	;wreg free
  7334  0188BA  92BC               	bcf	188,1,c	;volatile
  7335  0188BC  94BC               	bcf	188,2,c	;volatile
  7336                           
  7337                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7338  0188BE  013B               	movlb	59	; () banked
  7339  0188C0  9FFC               	bcf	252,7,b	;volatile
  7340                           
  7341                           ; BSR set to: 59
  7342                           ;eadog.c: 227:  DMA1SSZ = 1;
  7343  0188C2  0E00               	movlw	0
  7344  0188C4  6FF8               	movwf	248,b	;volatile
  7345  0188C6  0E01               	movlw	1
  7346  0188C8  6FF7               	movwf	247,b	;volatile
  7347                           
  7348                           ; BSR set to: 59
  7349                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7350  0188CA  8FFC               	bsf	252,7,b	;volatile
  7351                           
  7352                           ; BSR set to: 59
  7353                           ;eadog.c: 229:  printf("%c", strPtr);
  7354                           ;stkvar	_strPtr @ sp[(0)+-1]
  7355  0188CC  0EFF               	movlw	-1
  7356  0188CE  50E3               	movf	plusw1,w,c
  7357  0188D0  6EE6               	movwf	postinc1,c
  7358  0188D2  0E00               	movlw	0
  7359  0188D4  6EE6               	movwf	postinc1,c
  7360  0188D6  0EF9               	movlw	low STR_25
  7361  0188D8  6EE6               	movwf	postinc1,c
  7362  0188DA  0EFF               	movlw	high STR_25
  7363  0188DC  6EE6               	movwf	postinc1,c
  7364  0188DE  0E04               	movlw	4
  7365  0188E0  6EE6               	movwf	postinc1,c
  7366  0188E2  EC6A  F0C3         	call	_printf	;wreg free
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;eadog.c: 230:  start_lcd();
  7370  0188E6  EC4F  F0CB         	call	_start_lcd	;wreg free
  7371                           
  7372                           ; BSR set to: 59
  7373                           ;eadog.c: 231:  wait_lcd_done();
  7374  0188EA  EC7C  F0CA         	call	_wait_lcd_done	;wreg free
  7375                           
  7376                           ; BSR set to: 0
  7377  0188EE  82BC               	bsf	188,1,c	;volatile
  7378                           
  7379                           ; BSR set to: 0
  7380                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7381  0188F0  52E5               	movf	postdec1,f,c
  7382  0188F2  0012               	return		;funcret
  7383  0188F4                     __end_of_send_lcd_cmd_dma:
  7384                           	opt callstack 0
  7385                           
  7386 ;; *************** function _wait_lcd_done *****************
  7387 ;; Defined at:
  7388 ;;		line 154 in file "eadog.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1  [STACK] void 
  7395 ;; Registers used:
  7396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 3F/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    8
  7409 ;; This function calls:
  7410 ;;		_wdtdelay
  7411 ;; This function is called by:
  7412 ;;		_send_lcd_cmd_dma
  7413 ;;		_update_lcd
  7414 ;;		_vterm_dump
  7415 ;; This function uses a reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text32
  7419  0194F8                     __ptext32:
  7420                           	opt callstack 0
  7421  0194F8                     _wait_lcd_done:
  7422                           	opt callstack 21
  7423                           
  7424                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7425                           
  7426                           ; BSR set to: 0
  7427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7428                           ;incstack = 0
  7429  0194F8  0100               	movlb	0	; () banked
  7430  0194FA  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7431  0194FC  D7FD               	goto	_wait_lcd_done
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;eadog.c: 157:  wdtdelay(50);
  7435  0194FE  0E32               	movlw	50
  7436  019500  6EE6               	movwf	postinc1,c
  7437  019502  0E00               	movlw	0
  7438  019504  6EE6               	movwf	postinc1,c
  7439  019506  0E00               	movlw	0
  7440  019508  6EE6               	movwf	postinc1,c
  7441  01950A  0E00               	movlw	0
  7442  01950C  6EE6               	movwf	postinc1,c
  7443  01950E  ECCA  F0C3         	call	_wdtdelay	;wreg free
  7444                           
  7445                           ; BSR set to: 0
  7446                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7447  019512  0012               	return		;funcret
  7448  019514                     __end_of_wait_lcd_done:
  7449                           	opt callstack 0
  7450                           
  7451 ;; *************** function _wdtdelay *****************
  7452 ;; Defined at:
  7453 ;;		line 22 in file "eadog.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  delay           4  [STACK] const unsigned long 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1  [STACK] void 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 3F/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    7
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_init_display
  7478 ;;		_send_lcd_cmd
  7479 ;;		_send_lcd_cmd_long
  7480 ;;		_wait_lcd_done
  7481 ;; This function uses a reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text33
  7485  018794                     __ptext33:
  7486                           	opt callstack 0
  7487  018794                     _wdtdelay:
  7488                           	opt callstack 21
  7489                           
  7490                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7491                           
  7492                           ; BSR set to: 0
  7493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7494                           ;incstack = 0
  7495  018794  0100               	movlb	0	; () banked
  7496  018796  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7497  018798  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7498  01879A  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7499  01879C  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7500  01879E                     l1444:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;eadog.c: 27:   __nop();
  7504  01879E  F000               	nop	
  7505  0187A0  0004               	clrwdt		;# 
  7506                           
  7507                           ;eadog.c: 29:  };
  7508  0187A2  0E01               	movlw	1
  7509  0187A4  0100               	movlb	0	; () banked
  7510  0187A6  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7511  0187A8  0E00               	movlw	0
  7512  0187AA  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7513  0187AC  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7514  0187AE  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;stkvar	_delay @ sp[(0)+-4]
  7518  0187B0  0EFC               	movlw	-4
  7519  0187B2  006F FF8C  F025    	movff	plusw1,btemp
  7520  0187B8  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7521  0187BA  5C25               	subwf	btemp^0,w,c
  7522  0187BC  0EFD               	movlw	-3
  7523  0187BE  006F FF8C  F025    	movff	plusw1,btemp
  7524  0187C4  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7525  0187C6  5825               	subwfb	btemp^0,w,c
  7526  0187C8  0EFE               	movlw	-2
  7527  0187CA  006F FF8C  F025    	movff	plusw1,btemp
  7528  0187D0  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7529  0187D2  5825               	subwfb	btemp^0,w,c
  7530  0187D4  0EFF               	movlw	-1
  7531  0187D6  006F FF8C  F025    	movff	plusw1,btemp
  7532  0187DC  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7533  0187DE  5825               	subwfb	btemp^0,w,c
  7534  0187E0  B0D8               	btfsc	status,0,c
  7535  0187E2  D7DD               	goto	l1444
  7536                           
  7537                           ; BSR set to: 0
  7538                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7539  0187E4  52E5               	movf	postdec1,f,c
  7540  0187E6  52E5               	movf	postdec1,f,c
  7541  0187E8  52E5               	movf	postdec1,f,c
  7542  0187EA  52E5               	movf	postdec1,f,c
  7543  0187EC  0012               	return		;funcret
  7544  0187EE                     __end_of_wdtdelay:
  7545                           	opt callstack 0
  7546                           
  7547 ;; *************** function _eaDogM_WriteString *****************
  7548 ;; Defined at:
  7549 ;;		line 197 in file "eadog.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  strPtr          2  [STACK] PTR unsigned char 
  7552 ;;		 -> D.lcd(288), D(290), V(188), 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1  [STACK] void 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7559 ;; Tracked objects:
  7560 ;;		On entry : 3F/0
  7561 ;;		On exit  : 3F/3B
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7568 ;;Total ram usage:        0 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:   16
  7571 ;; This function calls:
  7572 ;;		_printf
  7573 ;;		_ringBufS_flush
  7574 ;;		_start_lcd
  7575 ;;		_strlen
  7576 ;;		_wait_lcd_set
  7577 ;; This function is called by:
  7578 ;;		_eaDogM_WriteStringAtPos
  7579 ;; This function uses a reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text34
  7583  017E62                     __ptext34:
  7584                           	opt callstack 0
  7585  017E62                     _eaDogM_WriteString:
  7586                           	opt callstack 12
  7587                           
  7588                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7589                           
  7590                           ; BSR set to: 0
  7591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7592                           ;incstack = 0
  7593  017E62  EC4C  F0CB         	call	_wait_lcd_set	;wreg free
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7597  017E66  0E00               	movlw	0
  7598  017E68  6EE6               	movwf	postinc1,c
  7599  017E6A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7600  017E70  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7601  017E76  EC21  F0C0         	call	_ringBufS_flush	;wreg free
  7602  017E7A  94BC               	bcf	188,2,c	;volatile
  7603                           
  7604                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7605                           ;stkvar	_strPtr @ sp[(0)+-2]
  7606  017E7C  0EFE               	movlw	-2
  7607  017E7E  006F FF8F FFE6     	movff	plusw1,postinc1
  7608  017E84  006F FF8F FFE6     	movff	plusw1,postinc1
  7609  017E8A  EC84  F0BF         	call	_strlen	;wreg free
  7610  017E8E  5026               	movf	(btemp+1)^0,w,c
  7611  017E90  E104               	bnz	u10700
  7612  017E92  0E41               	movlw	65
  7613  017E94  5C25               	subwf	btemp^0,w,c
  7614  017E96  A0D8               	btfss	status,0,c
  7615  017E98  D010               	goto	l10872
  7616  017E9A                     u10700:
  7617                           
  7618                           ;stkvar	_strPtr @ sp[(0)+-2]
  7619  017E9A  0EFE               	movlw	-2
  7620  017E9C  006F FF8C  F02F    	movff	plusw1,btemp+10
  7621  017EA2  0EFF               	movlw	-1
  7622  017EA4  006F FF8C  F030    	movff	plusw1,btemp+11
  7623  017EAA  0E40               	movlw	64
  7624  017EAC  242F               	addwf	(btemp+10)^0,w,c
  7625  017EAE  6ED9               	movwf	fsr2l,c
  7626  017EB0  0E00               	movlw	0
  7627  017EB2  2030               	addwfc	(btemp+11)^0,w,c
  7628  017EB4  6EDA               	movwf	fsr2h,c
  7629  017EB6  0E00               	movlw	0
  7630  017EB8  6EDF               	movwf	indf2,c
  7631  017EBA                     l10872:
  7632                           
  7633                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  7634  017EBA  013B               	movlb	59	; () banked
  7635  017EBC  9FFC               	bcf	252,7,b	;volatile
  7636                           
  7637                           ; BSR set to: 59
  7638                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  7639                           ;stkvar	_strPtr @ sp[(0)+-2]
  7640  017EBE  0EFE               	movlw	-2
  7641  017EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  7642  017EC6  006F FF8F FFE6     	movff	plusw1,postinc1
  7643  017ECC  EC84  F0BF         	call	_strlen	;wreg free
  7644  017ED0  0060  F097  FBF7   	movff	btemp,15351	;volatile
  7645  017ED6  0060  F09B  FBF8   	movff	btemp+1,15352	;volatile
  7646                           
  7647                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  7648  017EDC  013B               	movlb	59	; () banked
  7649  017EDE  8FFC               	bsf	252,7,b	;volatile
  7650                           
  7651                           ; BSR set to: 59
  7652                           ;eadog.c: 208:  printf("%s", strPtr);
  7653                           ;stkvar	_strPtr @ sp[(0)+-2]
  7654  017EE0  0EFE               	movlw	-2
  7655  017EE2  006F FF8F FFE6     	movff	plusw1,postinc1
  7656  017EE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7657  017EEE  0EFC               	movlw	low STR_24
  7658  017EF0  6EE6               	movwf	postinc1,c
  7659  017EF2  0EFF               	movlw	high STR_24
  7660  017EF4  6EE6               	movwf	postinc1,c
  7661  017EF6  0E04               	movlw	4
  7662  017EF8  6EE6               	movwf	postinc1,c
  7663  017EFA  EC6A  F0C3         	call	_printf	;wreg free
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;eadog.c: 209:  start_lcd();
  7667  017EFE  EC4F  F0CB         	call	_start_lcd	;wreg free
  7668                           
  7669                           ; BSR set to: 59
  7670                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7671  017F02  52E5               	movf	postdec1,f,c
  7672  017F04  52E5               	movf	postdec1,f,c
  7673  017F06  0012               	return		;funcret
  7674  017F08                     __end_of_eaDogM_WriteString:
  7675                           	opt callstack 0
  7676                           
  7677 ;; *************** function _wait_lcd_set *****************
  7678 ;; Defined at:
  7679 ;;		line 144 in file "eadog.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;		None
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1  [STACK] void 
  7686 ;; Registers used:
  7687 ;;		None
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/3D
  7690 ;;		On exit  : 3F/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7697 ;;Total ram usage:        0 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    7
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_eaDogM_WriteString
  7704 ;;		_send_lcd_cmd_dma
  7705 ;; This function uses a reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text35
  7709  019698                     __ptext35:
  7710                           	opt callstack 0
  7711  019698                     _wait_lcd_set:
  7712                           	opt callstack 20
  7713                           
  7714                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  7715                           
  7716                           ; BSR set to: 59
  7717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7718                           ;incstack = 0
  7719  019698  0100               	movlb	0	; () banked
  7720  01969A  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  7721                           
  7722                           ; BSR set to: 0
  7723                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7724  01969C  0012               	return		;funcret
  7725  01969E                     __end_of_wait_lcd_set:
  7726                           	opt callstack 0
  7727                           
  7728 ;; *************** function _start_lcd *****************
  7729 ;; Defined at:
  7730 ;;		line 139 in file "eadog.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;		None
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;		None
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  1  [STACK] void 
  7737 ;; Registers used:
  7738 ;;		None
  7739 ;; Tracked objects:
  7740 ;;		On entry : 3F/0
  7741 ;;		On exit  : 3F/3B
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7748 ;;Total ram usage:        0 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    7
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_eaDogM_WriteString
  7755 ;;		_send_lcd_cmd_dma
  7756 ;; This function uses a reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text36
  7760  01969E                     __ptext36:
  7761                           	opt callstack 0
  7762  01969E                     _start_lcd:
  7763                           	opt callstack 20
  7764                           
  7765                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  7766                           
  7767                           ; BSR set to: 0
  7768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7769                           ;incstack = 0
  7770  01969E  013B               	movlb	59	; () banked
  7771  0196A0  8DFC               	bsf	252,6,b	;volatile
  7772                           
  7773                           ; BSR set to: 59
  7774                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7775  0196A2  0012               	return		;funcret
  7776  0196A4                     __end_of_start_lcd:
  7777                           	opt callstack 0
  7778                           
  7779 ;; *************** function _ringBufS_flush *****************
  7780 ;; Defined at:
  7781 ;;		line 76 in file "ringbufs.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7784 ;;		 -> ring_buf1(67), 
  7785 ;;  clearBuffer     1  [STACK] const char 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1  [STACK] void 
  7790 ;; Registers used:
  7791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7792 ;; Tracked objects:
  7793 ;;		On entry : 3F/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7801 ;;Total ram usage:        0 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    8
  7804 ;; This function calls:
  7805 ;;		_memset
  7806 ;; This function is called by:
  7807 ;;		_eaDogM_WriteString
  7808 ;;		_send_lcd_cmd_dma
  7809 ;; This function uses a reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text37
  7813  018042                     __ptext37:
  7814                           	opt callstack 0
  7815  018042                     _ringBufS_flush:
  7816                           	opt callstack 19
  7817                           
  7818                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7819                           ;stkvar	__this @ sp[(0)+-2]
  7820                           
  7821                           ; BSR set to: 59
  7822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7823                           ;incstack = 0
  7824  018042  0EFE               	movlw	-2
  7825  018044  006F FF8C  F02F    	movff	plusw1,btemp+10
  7826  01804A  0EFF               	movlw	-1
  7827  01804C  006F FF8C  F030    	movff	plusw1,btemp+11
  7828  018052  0E42               	movlw	66
  7829  018054  242F               	addwf	(btemp+10)^0,w,c
  7830  018056  6ED9               	movwf	fsr2l,c
  7831  018058  0E00               	movlw	0
  7832  01805A  2030               	addwfc	(btemp+11)^0,w,c
  7833  01805C  6EDA               	movwf	fsr2h,c
  7834  01805E  0E00               	movlw	0
  7835  018060  6EDF               	movwf	indf2,c
  7836                           
  7837                           ;ringbufs.c: 79:  _this->head = 0;
  7838                           ;stkvar	__this @ sp[(0)+-2]
  7839  018062  0EFE               	movlw	-2
  7840  018064  006F FF8C  F02F    	movff	plusw1,btemp+10
  7841  01806A  0EFF               	movlw	-1
  7842  01806C  006F FF8C  F030    	movff	plusw1,btemp+11
  7843  018072  0E40               	movlw	64
  7844  018074  242F               	addwf	(btemp+10)^0,w,c
  7845  018076  6ED9               	movwf	fsr2l,c
  7846  018078  0E00               	movlw	0
  7847  01807A  2030               	addwfc	(btemp+11)^0,w,c
  7848  01807C  6EDA               	movwf	fsr2h,c
  7849  01807E  0E00               	movlw	0
  7850  018080  6EDF               	movwf	indf2,c
  7851                           
  7852                           ;ringbufs.c: 80:  _this->tail = 0;
  7853                           ;stkvar	__this @ sp[(0)+-2]
  7854  018082  0EFE               	movlw	-2
  7855  018084  006F FF8C  F02F    	movff	plusw1,btemp+10
  7856  01808A  0EFF               	movlw	-1
  7857  01808C  006F FF8C  F030    	movff	plusw1,btemp+11
  7858  018092  0E41               	movlw	65
  7859  018094  242F               	addwf	(btemp+10)^0,w,c
  7860  018096  6ED9               	movwf	fsr2l,c
  7861  018098  0E00               	movlw	0
  7862  01809A  2030               	addwfc	(btemp+11)^0,w,c
  7863  01809C  6EDA               	movwf	fsr2h,c
  7864  01809E  0E00               	movlw	0
  7865  0180A0  6EDF               	movwf	indf2,c
  7866                           
  7867                           ;ringbufs.c: 81:  if (clearBuffer) {
  7868                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7869  0180A2  0EFD               	movlw	-3
  7870  0180A4  50E3               	movf	plusw1,w,c
  7871  0180A6  B4D8               	btfsc	status,2,c
  7872  0180A8  D011               	goto	l1584
  7873                           
  7874                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7875  0180AA  0E40               	movlw	64
  7876  0180AC  6EE6               	movwf	postinc1,c
  7877  0180AE  0E00               	movlw	0
  7878  0180B0  6EE6               	movwf	postinc1,c
  7879  0180B2  0E00               	movlw	0
  7880  0180B4  6EE6               	movwf	postinc1,c
  7881  0180B6  0E00               	movlw	0
  7882  0180B8  6EE6               	movwf	postinc1,c
  7883                           
  7884                           ;stkvar	__this @ sp[(-4)+-2]
  7885  0180BA  0EFA               	movlw	-6
  7886  0180BC  006F FF8F FFE6     	movff	plusw1,postinc1
  7887  0180C2  006F FF8F FFE6     	movff	plusw1,postinc1
  7888  0180C8  EC62  F0A8         	call	_memset	;wreg free
  7889  0180CC                     l1584:
  7890                           
  7891                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7892  0180CC  52E5               	movf	postdec1,f,c
  7893  0180CE  52E5               	movf	postdec1,f,c
  7894  0180D0  52E5               	movf	postdec1,f,c
  7895  0180D2  0012               	return		;funcret
  7896  0180D4                     __end_of_ringBufS_flush:
  7897                           	opt callstack 0
  7898                           
  7899 ;; *************** function _memset *****************
  7900 ;; Defined at:
  7901 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  dest            2  [STACK] PTR void 
  7904 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7905 ;;  c               2  [STACK] int 
  7906 ;;  n               2  [STACK] unsigned int 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  s               2  [STACK] PTR unsigned char 
  7909 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7910 ;;  k               2  [STACK] unsigned int 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  2  [STACK] PTR void 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7924 ;;Total ram usage:        0 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    7
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_ringBufS_init
  7931 ;;		_ringBufS_flush
  7932 ;; This function uses a reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text38
  7936  0150C4                     __ptext38:
  7937                           	opt callstack 0
  7938  0150C4                     _memset:
  7939                           	opt callstack 0
  7940                           
  7941                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7942  0150C4  52E6               	movf	postinc1,f,c
  7943  0150C6  52E6               	movf	postinc1,f,c
  7944  0150C8  52E6               	movf	postinc1,f,c
  7945  0150CA  52E6               	movf	postinc1,f,c
  7946                           
  7947                           ;stkvar	_dest @ sp[(-4)+-2]
  7948                           
  7949                           ;incstack = 0
  7950  0150CC  0EFA               	movlw	-6
  7951  0150CE  006F FF8C  F02F    	movff	plusw1,btemp+10
  7952  0150D4  0EFB               	movlw	-5
  7953  0150D6  006F FF8C  F030    	movff	plusw1,btemp+11
  7954                           
  7955                           ;stkvar	_s @ sp[(-4)+0]
  7956  0150DC  0EFD               	movlw	-3
  7957  0150DE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  7958  0150E4  0EFC               	movlw	-4
  7959  0150E6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  7960                           
  7961                           ;stkvar	_n @ sp[(-4)+-6]
  7962  0150EC  0EF6               	movlw	-10
  7963  0150EE  006F FF8C  F025    	movff	plusw1,btemp
  7964  0150F4  0EF7               	movlw	-9
  7965  0150F6  50E3               	movf	plusw1,w,c
  7966  0150F8  1025               	iorwf	btemp^0,w,c
  7967  0150FA  B4D8               	btfsc	status,2,c
  7968  0150FC  D154               	goto	u10670
  7969                           
  7970                           ;stkvar	_c @ sp[(-4)+-4]
  7971                           ;stkvar	_s @ sp[(-4)+0]
  7972  0150FE  0EFC               	movlw	-4
  7973  015100  006F FF8F FFD9     	movff	plusw1,fsr2l
  7974  015106  0EFD               	movlw	-3
  7975  015108  006F FF8F FFDA     	movff	plusw1,fsr2h
  7976  01510E  0EF8               	movlw	-8
  7977  015110  006F FF8F FFDF     	movff	plusw1,indf2
  7978                           
  7979                           ;stkvar	_c @ sp[(-4)+-4]
  7980                           ;stkvar	_n @ sp[(-4)+-6]
  7981                           ;stkvar	_s @ sp[(-4)+0]
  7982  015116  0EFC               	movlw	-4
  7983  015118  006F FF8C  F02F    	movff	plusw1,btemp+10
  7984  01511E  0EFD               	movlw	-3
  7985  015120  006F FF8C  F030    	movff	plusw1,btemp+11
  7986  015126  0EF6               	movlw	-10
  7987  015128  50E3               	movf	plusw1,w,c
  7988  01512A  262F               	addwf	(btemp+10)^0,f,c
  7989  01512C  0EF7               	movlw	-9
  7990  01512E  50E3               	movf	plusw1,w,c
  7991  015130  2230               	addwfc	(btemp+11)^0,f,c
  7992  015132  0EFF               	movlw	255
  7993  015134  242F               	addwf	(btemp+10)^0,w,c
  7994  015136  6ED9               	movwf	fsr2l,c
  7995  015138  0EFF               	movlw	255
  7996  01513A  2030               	addwfc	(btemp+11)^0,w,c
  7997  01513C  6EDA               	movwf	fsr2h,c
  7998  01513E  0EF8               	movlw	-8
  7999  015140  006F FF8F FFDF     	movff	plusw1,indf2
  8000                           
  8001                           ;stkvar	_n @ sp[(-4)+-6]
  8002  015146  0EF7               	movlw	-9
  8003  015148  50E3               	movf	plusw1,w,c
  8004  01514A  E108               	bnz	l10788
  8005  01514C  0EF6               	movlw	-10
  8006  01514E  006F FF8C  F025    	movff	plusw1,btemp
  8007  015154  0E03               	movlw	3
  8008  015156  5E25               	subwf	btemp^0,f,c
  8009  015158  A0D8               	btfss	status,0,c
  8010  01515A  D125               	goto	u10670
  8011  01515C                     l10788:
  8012                           
  8013                           ;stkvar	_c @ sp[(-4)+-4]
  8014                           ;stkvar	_s @ sp[(-4)+0]
  8015  01515C  0EFC               	movlw	-4
  8016  01515E  006F FF8C  F02F    	movff	plusw1,btemp+10
  8017  015164  0EFD               	movlw	-3
  8018  015166  006F FF8C  F030    	movff	plusw1,btemp+11
  8019  01516C  0E01               	movlw	1
  8020  01516E  242F               	addwf	(btemp+10)^0,w,c
  8021  015170  6ED9               	movwf	fsr2l,c
  8022  015172  0E00               	movlw	0
  8023  015174  2030               	addwfc	(btemp+11)^0,w,c
  8024  015176  6EDA               	movwf	fsr2h,c
  8025  015178  0EF8               	movlw	-8
  8026  01517A  006F FF8F FFDF     	movff	plusw1,indf2
  8027                           
  8028                           ;stkvar	_c @ sp[(-4)+-4]
  8029                           ;stkvar	_s @ sp[(-4)+0]
  8030  015180  0EFC               	movlw	-4
  8031  015182  006F FF8C  F02F    	movff	plusw1,btemp+10
  8032  015188  0EFD               	movlw	-3
  8033  01518A  006F FF8C  F030    	movff	plusw1,btemp+11
  8034  015190  0E02               	movlw	2
  8035  015192  242F               	addwf	(btemp+10)^0,w,c
  8036  015194  6ED9               	movwf	fsr2l,c
  8037  015196  0E00               	movlw	0
  8038  015198  2030               	addwfc	(btemp+11)^0,w,c
  8039  01519A  6EDA               	movwf	fsr2h,c
  8040  01519C  0EF8               	movlw	-8
  8041  01519E  006F FF8F FFDF     	movff	plusw1,indf2
  8042                           
  8043                           ;stkvar	_c @ sp[(-4)+-4]
  8044                           ;stkvar	_n @ sp[(-4)+-6]
  8045                           ;stkvar	_s @ sp[(-4)+0]
  8046  0151A4  0EFC               	movlw	-4
  8047  0151A6  006F FF8C  F02F    	movff	plusw1,btemp+10
  8048  0151AC  0EFD               	movlw	-3
  8049  0151AE  006F FF8C  F030    	movff	plusw1,btemp+11
  8050  0151B4  0EF6               	movlw	-10
  8051  0151B6  50E3               	movf	plusw1,w,c
  8052  0151B8  262F               	addwf	(btemp+10)^0,f,c
  8053  0151BA  0EF7               	movlw	-9
  8054  0151BC  50E3               	movf	plusw1,w,c
  8055  0151BE  2230               	addwfc	(btemp+11)^0,f,c
  8056  0151C0  0EFE               	movlw	254
  8057  0151C2  242F               	addwf	(btemp+10)^0,w,c
  8058  0151C4  6ED9               	movwf	fsr2l,c
  8059  0151C6  0EFF               	movlw	255
  8060  0151C8  2030               	addwfc	(btemp+11)^0,w,c
  8061  0151CA  6EDA               	movwf	fsr2h,c
  8062  0151CC  0EF8               	movlw	-8
  8063  0151CE  006F FF8F FFDF     	movff	plusw1,indf2
  8064                           
  8065                           ;stkvar	_c @ sp[(-4)+-4]
  8066                           ;stkvar	_n @ sp[(-4)+-6]
  8067                           ;stkvar	_s @ sp[(-4)+0]
  8068  0151D4  0EFC               	movlw	-4
  8069  0151D6  006F FF8C  F02F    	movff	plusw1,btemp+10
  8070  0151DC  0EFD               	movlw	-3
  8071  0151DE  006F FF8C  F030    	movff	plusw1,btemp+11
  8072  0151E4  0EF6               	movlw	-10
  8073  0151E6  50E3               	movf	plusw1,w,c
  8074  0151E8  262F               	addwf	(btemp+10)^0,f,c
  8075  0151EA  0EF7               	movlw	-9
  8076  0151EC  50E3               	movf	plusw1,w,c
  8077  0151EE  2230               	addwfc	(btemp+11)^0,f,c
  8078  0151F0  0EFD               	movlw	253
  8079  0151F2  242F               	addwf	(btemp+10)^0,w,c
  8080  0151F4  6ED9               	movwf	fsr2l,c
  8081  0151F6  0EFF               	movlw	255
  8082  0151F8  2030               	addwfc	(btemp+11)^0,w,c
  8083  0151FA  6EDA               	movwf	fsr2h,c
  8084  0151FC  0EF8               	movlw	-8
  8085  0151FE  006F FF8F FFDF     	movff	plusw1,indf2
  8086                           
  8087                           ;stkvar	_n @ sp[(-4)+-6]
  8088  015204  0EF7               	movlw	-9
  8089  015206  50E3               	movf	plusw1,w,c
  8090  015208  E108               	bnz	l10794
  8091  01520A  0EF6               	movlw	-10
  8092  01520C  006F FF8C  F025    	movff	plusw1,btemp
  8093  015212  0E07               	movlw	7
  8094  015214  5E25               	subwf	btemp^0,f,c
  8095  015216  A0D8               	btfss	status,0,c
  8096  015218  D0C6               	goto	u10670
  8097  01521A                     l10794:
  8098                           
  8099                           ;stkvar	_c @ sp[(-4)+-4]
  8100                           ;stkvar	_s @ sp[(-4)+0]
  8101  01521A  0EFC               	movlw	-4
  8102  01521C  006F FF8C  F02F    	movff	plusw1,btemp+10
  8103  015222  0EFD               	movlw	-3
  8104  015224  006F FF8C  F030    	movff	plusw1,btemp+11
  8105  01522A  0E03               	movlw	3
  8106  01522C  242F               	addwf	(btemp+10)^0,w,c
  8107  01522E  6ED9               	movwf	fsr2l,c
  8108  015230  0E00               	movlw	0
  8109  015232  2030               	addwfc	(btemp+11)^0,w,c
  8110  015234  6EDA               	movwf	fsr2h,c
  8111  015236  0EF8               	movlw	-8
  8112  015238  006F FF8F FFDF     	movff	plusw1,indf2
  8113                           
  8114                           ;stkvar	_c @ sp[(-4)+-4]
  8115                           ;stkvar	_n @ sp[(-4)+-6]
  8116                           ;stkvar	_s @ sp[(-4)+0]
  8117  01523E  0EFC               	movlw	-4
  8118  015240  006F FF8C  F02F    	movff	plusw1,btemp+10
  8119  015246  0EFD               	movlw	-3
  8120  015248  006F FF8C  F030    	movff	plusw1,btemp+11
  8121  01524E  0EF6               	movlw	-10
  8122  015250  50E3               	movf	plusw1,w,c
  8123  015252  262F               	addwf	(btemp+10)^0,f,c
  8124  015254  0EF7               	movlw	-9
  8125  015256  50E3               	movf	plusw1,w,c
  8126  015258  2230               	addwfc	(btemp+11)^0,f,c
  8127  01525A  0EFC               	movlw	252
  8128  01525C  242F               	addwf	(btemp+10)^0,w,c
  8129  01525E  6ED9               	movwf	fsr2l,c
  8130  015260  0EFF               	movlw	255
  8131  015262  2030               	addwfc	(btemp+11)^0,w,c
  8132  015264  6EDA               	movwf	fsr2h,c
  8133  015266  0EF8               	movlw	-8
  8134  015268  006F FF8F FFDF     	movff	plusw1,indf2
  8135                           
  8136                           ;stkvar	_n @ sp[(-4)+-6]
  8137  01526E  0EF7               	movlw	-9
  8138  015270  50E3               	movf	plusw1,w,c
  8139  015272  E108               	bnz	l10800
  8140  015274  0EF6               	movlw	-10
  8141  015276  006F FF8C  F025    	movff	plusw1,btemp
  8142  01527C  0E09               	movlw	9
  8143  01527E  5E25               	subwf	btemp^0,f,c
  8144  015280  A0D8               	btfss	status,0,c
  8145  015282  D091               	goto	u10670
  8146  015284                     l10800:
  8147                           
  8148                           ;stkvar	_s @ sp[(-4)+0]
  8149  015284  0EFC               	movlw	-4
  8150  015286  006F FF8C  F02F    	movff	plusw1,btemp+10
  8151  01528C  1E2F               	comf	(btemp+10)^0,f,c
  8152  01528E  0EFD               	movlw	-3
  8153  015290  006F FF8C  F030    	movff	plusw1,btemp+11
  8154  015296  1E30               	comf	(btemp+11)^0,f,c
  8155  015298  2A2F               	incf	(btemp+10)^0,f,c
  8156  01529A  B4D8               	btfsc	status,2,c
  8157  01529C  2A30               	incf	(btemp+11)^0,f,c
  8158  01529E  0E03               	movlw	3
  8159  0152A0  162F               	andwf	(btemp+10)^0,f,c
  8160  0152A2  0E00               	movlw	0
  8161  0152A4  1630               	andwf	(btemp+11)^0,f,c
  8162                           
  8163                           ;stkvar	_k @ sp[(-4)+2]
  8164  0152A6  0EFE               	movlw	-2
  8165  0152A8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8166  0152AE  0EFF               	movlw	-1
  8167  0152B0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8168                           
  8169                           ;stkvar	_k @ sp[(-4)+2]
  8170                           ;stkvar	_s @ sp[(-4)+0]
  8171  0152B6  0EFC               	movlw	-4
  8172  0152B8  50E3               	movf	plusw1,w,c
  8173  0152BA  6E25               	movwf	btemp^0,c
  8174  0152BC  0EFE               	movlw	-2
  8175  0152BE  50E3               	movf	plusw1,w,c
  8176  0152C0  2625               	addwf	btemp^0,f,c
  8177  0152C2  0EFC               	movlw	-4
  8178  0152C4  0060  F097  FFE3   	movff	btemp,plusw1
  8179  0152CA  0EFD               	movlw	-3
  8180  0152CC  50E3               	movf	plusw1,w,c
  8181  0152CE  6E25               	movwf	btemp^0,c
  8182  0152D0  0EFF               	movlw	-1
  8183  0152D2  50E3               	movf	plusw1,w,c
  8184  0152D4  2225               	addwfc	btemp^0,f,c
  8185  0152D6  0EFD               	movlw	-3
  8186  0152D8  0060  F097  FFE3   	movff	btemp,plusw1
  8187                           
  8188                           ;stkvar	_k @ sp[(-4)+2]
  8189                           ;stkvar	_n @ sp[(-4)+-6]
  8190  0152DE  0EF6               	movlw	-10
  8191  0152E0  50E3               	movf	plusw1,w,c
  8192  0152E2  6E25               	movwf	btemp^0,c
  8193  0152E4  0EFE               	movlw	-2
  8194  0152E6  50E3               	movf	plusw1,w,c
  8195  0152E8  5E25               	subwf	btemp^0,f,c
  8196  0152EA  0EF6               	movlw	-10
  8197  0152EC  0060  F097  FFE3   	movff	btemp,plusw1
  8198  0152F2  0EF7               	movlw	-9
  8199  0152F4  50E3               	movf	plusw1,w,c
  8200  0152F6  6E25               	movwf	btemp^0,c
  8201  0152F8  0EFF               	movlw	-1
  8202  0152FA  50E3               	movf	plusw1,w,c
  8203  0152FC  5A25               	subwfb	btemp^0,f,c
  8204  0152FE  0EF7               	movlw	-9
  8205  015300  0060  F097  FFE3   	movff	btemp,plusw1
  8206  015306  0EFC               	movlw	252
  8207  015308  6E2F               	movwf	(btemp+10)^0,c
  8208  01530A  0EFF               	movlw	255
  8209  01530C  6E30               	movwf	(btemp+11)^0,c
  8210                           
  8211                           ;stkvar	_n @ sp[(-4)+-6]
  8212  01530E  0EF6               	movlw	-10
  8213  015310  006F FF8C  F025    	movff	plusw1,btemp
  8214  015316  502F               	movf	(btemp+10)^0,w,c
  8215  015318  1625               	andwf	btemp^0,f,c
  8216  01531A  0EF6               	movlw	-10
  8217  01531C  0060  F097  FFE3   	movff	btemp,plusw1
  8218  015322  0EF7               	movlw	-9
  8219  015324  006F FF8C  F025    	movff	plusw1,btemp
  8220  01532A  5030               	movf	(btemp+11)^0,w,c
  8221  01532C  1625               	andwf	btemp^0,f,c
  8222  01532E  0EF7               	movlw	-9
  8223  015330  D02E               	goto	L6
  8224  015332                     l10808:
  8225                           
  8226                           ;stkvar	_c @ sp[(-4)+-4]
  8227                           ;stkvar	_s @ sp[(-4)+0]
  8228  015332  0EFC               	movlw	-4
  8229  015334  006F FF8F FFD9     	movff	plusw1,fsr2l
  8230  01533A  0EFD               	movlw	-3
  8231  01533C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8232  015342  0EF8               	movlw	-8
  8233  015344  006F FF8F FFDF     	movff	plusw1,indf2
  8234                           
  8235                           ;stkvar	_n @ sp[(-4)+-6]
  8236  01534A  0EF6               	movlw	-10
  8237  01534C  006F FF8C  F025    	movff	plusw1,btemp
  8238  015352  0E01               	movlw	1
  8239  015354  5E25               	subwf	btemp^0,f,c
  8240  015356  0EF6               	movlw	-10
  8241  015358  0060  F097  FFE3   	movff	btemp,plusw1
  8242  01535E  0EF7               	movlw	-9
  8243  015360  006F FF8C  F025    	movff	plusw1,btemp
  8244  015366  0E00               	movlw	0
  8245  015368  5A25               	subwfb	btemp^0,f,c
  8246  01536A  0EF7               	movlw	-9
  8247  01536C  0060  F097  FFE3   	movff	btemp,plusw1
  8248                           
  8249                           ;stkvar	_s @ sp[(-4)+0]
  8250  015372  0EFC               	movlw	-4
  8251  015374  50E3               	movf	plusw1,w,c
  8252  015376  0F01               	addlw	1
  8253  015378  6E25               	movwf	btemp^0,c
  8254  01537A  0EFC               	movlw	-4
  8255  01537C  0060  F097  FFE3   	movff	btemp,plusw1
  8256  015382  6A25               	clrf	btemp^0,c
  8257  015384  0EFD               	movlw	-3
  8258  015386  50E3               	movf	plusw1,w,c
  8259  015388  2025               	addwfc	btemp^0,w,c
  8260  01538A  6E25               	movwf	btemp^0,c
  8261  01538C  0EFD               	movlw	-3
  8262  01538E                     L6:
  8263  01538E  0060  F097  FFE3   	movff	btemp,plusw1
  8264                           
  8265                           ;stkvar	_n @ sp[(-4)+-6]
  8266  015394  0EF6               	movlw	-10
  8267  015396  006F FF8C  F025    	movff	plusw1,btemp
  8268  01539C  0EF7               	movlw	-9
  8269  01539E  50E3               	movf	plusw1,w,c
  8270  0153A0  1025               	iorwf	btemp^0,w,c
  8271  0153A2  A4D8               	btfss	status,2,c
  8272  0153A4  D7C6               	goto	l10808
  8273  0153A6                     u10670:
  8274                           
  8275                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8276  0153A6  0EF6               	movlw	246
  8277  0153A8  26E1               	addwf	fsr1l,f,c
  8278  0153AA  0EFF               	movlw	255
  8279  0153AC  22E2               	addwfc	fsr1h,f,c
  8280  0153AE  0012               	return		;funcret
  8281  0153B0                     __end_of_memset:
  8282                           	opt callstack 0
  8283                           
  8284 ;; *************** function _printf *****************
  8285 ;; Defined at:
  8286 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  fmt             2  [STACK] PTR const unsigned char 
  8289 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  ap              2  [STACK] PTR void [1]
  8292 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8293 ;;  ret             2    0        int 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  2  [STACK] int 
  8296 ;; Registers used:
  8297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8298 ;; Tracked objects:
  8299 ;;		On entry : 3F/3B
  8300 ;;		On exit  : 3F/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8307 ;;Total ram usage:        0 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:   15
  8310 ;; This function calls:
  8311 ;;		_vfprintf
  8312 ;; This function is called by:
  8313 ;;		_eaDogM_WriteString
  8314 ;;		_send_lcd_cmd_dma
  8315 ;; This function uses a reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text39
  8319  0186D4                     __ptext39:
  8320                           	opt callstack 0
  8321  0186D4                     _printf:
  8322                           	opt callstack 0
  8323                           
  8324                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8325  0186D4  52E6               	movf	postinc1,f,c
  8326  0186D6  52E6               	movf	postinc1,f,c
  8327                           
  8328                           ;stkvar	?_printf @ sp[(-2)+-3]
  8329                           
  8330                           ;incstack = 0
  8331  0186D8  0EFB               	movlw	251
  8332  0186DA  24E1               	addwf	fsr1l,w,c
  8333  0186DC  6E2F               	movwf	(btemp+10)^0,c
  8334  0186DE  0EFF               	movlw	255
  8335  0186E0  20E2               	addwfc	fsr1h,w,c
  8336  0186E2  6E30               	movwf	(btemp+11)^0,c
  8337                           
  8338                           ;stkvar	_ap @ sp[(-2)+0]
  8339  0186E4  0EFF               	movlw	-1
  8340  0186E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8341  0186EC  0EFE               	movlw	-2
  8342  0186EE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8343                           
  8344                           ;stkvar	_ap @ sp[(-2)+0]
  8345  0186F4  0EFE               	movlw	254
  8346  0186F6  24E1               	addwf	fsr1l,w,c
  8347  0186F8  6E25               	movwf	btemp^0,c
  8348  0186FA  0EFF               	movlw	255
  8349  0186FC  20E2               	addwfc	fsr1h,w,c
  8350  0186FE  6E26               	movwf	(btemp+1)^0,c
  8351  018700  0060  F097  FFE6   	movff	btemp,postinc1
  8352  018706  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8353                           
  8354                           ;stkvar	_fmt @ sp[(-4)+-3]
  8355  01870C  0EF9               	movlw	-7
  8356  01870E  006F FF8F FFE6     	movff	plusw1,postinc1
  8357  018714  006F FF8F FFE6     	movff	plusw1,postinc1
  8358  01871A  0E00               	movlw	0
  8359  01871C  6EE6               	movwf	postinc1,c
  8360  01871E  0E00               	movlw	0
  8361  018720  6EE6               	movwf	postinc1,c
  8362  018722  EC86  F0BE         	call	_vfprintf	;wreg free
  8363                           
  8364                           ; BSR set to: 0
  8365                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8366  018726  52E5               	movf	postdec1,f,c
  8367  018728  52E5               	movf	postdec1,f,c
  8368  01872A  52E5               	movf	postdec1,f,c
  8369  01872C  50E7               	movf	indf1,w,c
  8370  01872E  5EE1               	subwf	fsr1l,f,c
  8371  018730  0E00               	movlw	0
  8372  018732  5AE2               	subwfb	fsr1h,f,c
  8373  018734  0012               	return		;funcret
  8374  018736                     __end_of_printf:
  8375                           	opt callstack 0
  8376                           
  8377 ;; *************** function _vfprintf *****************
  8378 ;; Defined at:
  8379 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8382 ;;		 -> f(6), NULL(0), 
  8383 ;;  fmt             2  [STACK] PTR const unsigned char 
  8384 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8385 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8386 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8387 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8388 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8389 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8390 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8391 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8392 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8393 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8394 ;;  ap              2  [STACK] PTR PTR void 
  8395 ;;		 -> ap(2), ap(2), 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  cfmt            2  [STACK] PTR unsigned char 
  8398 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8399 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8400 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8401 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8402 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8403 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8404 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8405 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8406 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8407 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  2  [STACK] int 
  8410 ;; Registers used:
  8411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/1
  8414 ;;		On exit  : 3F/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:   14
  8424 ;; This function calls:
  8425 ;;		_vfpfcnvrt
  8426 ;; This function is called by:
  8427 ;;		_sprintf
  8428 ;;		_printf
  8429 ;; This function uses a reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text40
  8433  017D0C                     __ptext40:
  8434                           	opt callstack 0
  8435  017D0C                     _vfprintf:
  8436                           	opt callstack 0
  8437                           
  8438                           ; BSR set to: 0
  8439                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8440  017D0C  52E6               	movf	postinc1,f,c
  8441  017D0E  52E6               	movf	postinc1,f,c
  8442                           
  8443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8444                           ;stkvar	_fmt @ sp[(-2)+-4]
  8445                           
  8446                           ;incstack = 0
  8447  017D10  0EFA               	movlw	-6
  8448  017D12  006F FF8C  F02F    	movff	plusw1,btemp+10
  8449  017D18  0EFB               	movlw	-5
  8450  017D1A  006F FF8C  F030    	movff	plusw1,btemp+11
  8451                           
  8452                           ;stkvar	_cfmt @ sp[(-2)+0]
  8453  017D20  0EFF               	movlw	-1
  8454  017D22  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8455  017D28  0EFE               	movlw	-2
  8456  017D2A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8457                           
  8458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8459  017D30  0100               	movlb	0	; () banked
  8460  017D32  6BC1               	clrf	_nout& (0+255),b
  8461  017D34  6BC2               	clrf	(_nout+1)& (0+255),b
  8462                           
  8463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8464  017D36  D021               	goto	l10822
  8465  017D38                     l10820:
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8469                           ;stkvar	_ap @ sp[(-2)+-6]
  8470  017D38  0EF8               	movlw	-8
  8471  017D3A  006F FF8F FFE6     	movff	plusw1,postinc1
  8472  017D40  006F FF8F FFE6     	movff	plusw1,postinc1
  8473                           
  8474                           ;stkvar	_cfmt @ sp[(-4)+0]
  8475  017D46  0EFC               	movlw	252
  8476  017D48  24E1               	addwf	fsr1l,w,c
  8477  017D4A  6E25               	movwf	btemp^0,c
  8478  017D4C  0EFF               	movlw	255
  8479  017D4E  20E2               	addwfc	fsr1h,w,c
  8480  017D50  6E26               	movwf	(btemp+1)^0,c
  8481  017D52  0060  F097  FFE6   	movff	btemp,postinc1
  8482  017D58  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8483                           
  8484                           ;stkvar	_fp @ sp[(-6)+-2]
  8485  017D5E  0EF8               	movlw	-8
  8486  017D60  006F FF8F FFE6     	movff	plusw1,postinc1
  8487  017D66  006F FF8F FFE6     	movff	plusw1,postinc1
  8488  017D6C  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8489  017D70  5025               	movf	btemp^0,w,c
  8490  017D72  0100               	movlb	0	; () banked
  8491  017D74  27C1               	addwf	_nout& (0+255),f,b
  8492  017D76  5026               	movf	(btemp+1)^0,w,c
  8493  017D78  23C2               	addwfc	(_nout+1)& (0+255),f,b
  8494  017D7A                     l10822:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8498                           ;stkvar	_cfmt @ sp[(-2)+0]
  8499  017D7A  50E1               	movf	fsr1l,w,c
  8500  017D7C  0FFE               	addlw	-2
  8501  017D7E  6ED9               	movwf	fsr2l,c
  8502  017D80  50E2               	movf	fsr1h,w,c
  8503  017D82  6EDA               	movwf	fsr2h,c
  8504  017D84  0EFF               	movlw	255
  8505  017D86  22DA               	addwfc	fsr2h,f,c
  8506  017D88  006F FF7B FFF6     	movff	postinc2,tblptrl
  8507  017D8E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8508  017D94                     	if	0	;tblptru may be non-zero
  8509  017D94                     	endif
  8510  017D94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8511  017D94  0E00               	movlw	low (__mediumconst shr (0+16))
  8512  017D96  6EF8               	movwf	tblptru,c
  8513  017D98                     	endif
  8514  017D98  0008               	tblrd		*
  8515  017D9A  50F5               	movf	tablat,w,c
  8516  017D9C  0900               	iorlw	0
  8517  017D9E  A4D8               	btfss	status,2,c
  8518  017DA0  D7CB               	goto	l10820
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8522  017DA2  0060  F304  F025   	movff	_nout,btemp
  8523  017DA8  0060  F308  F026   	movff	_nout+1,btemp+1
  8524                           
  8525                           ; BSR set to: 0
  8526                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8527  017DAE  0EF8               	movlw	248
  8528  017DB0  26E1               	addwf	fsr1l,f,c
  8529  017DB2  0EFF               	movlw	255
  8530  017DB4  22E2               	addwfc	fsr1h,f,c
  8531  017DB6  0012               	return		;funcret
  8532  017DB8                     __end_of_vfprintf:
  8533                           	opt callstack 0
  8534                           
  8535 ;; *************** function _vfpfcnvrt *****************
  8536 ;; Defined at:
  8537 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8540 ;;		 -> f(6), NULL(0), 
  8541 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8542 ;;		 -> cfmt(2), 
  8543 ;;  ap              2  [STACK] PTR PTR void 
  8544 ;;		 -> ap(2), ap(2), 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  llu             8  [STACK] unsigned long long 
  8547 ;;  ll              8  [STACK] long long 
  8548 ;;  f               4  [STACK] long long 
  8549 ;;  ct              3  [STACK] unsigned char [3]
  8550 ;;  vp              3    0        PTR void 
  8551 ;;  cp              2  [STACK] PTR unsigned char 
  8552 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8553 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8554 ;;		 -> STR_3(6), V(188), 
  8555 ;;  i               2    0        int 
  8556 ;;  done            2    0        int 
  8557 ;;  c               1  [STACK] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  2  [STACK] int 
  8560 ;; Registers used:
  8561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8571 ;;Total ram usage:        0 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:   13
  8574 ;; This function calls:
  8575 ;;		_atoi
  8576 ;;		_ctoa
  8577 ;;		_dtoa
  8578 ;;		_efgtoa
  8579 ;;		_fputc
  8580 ;;		_isdigit
  8581 ;;		_isupper
  8582 ;;		_stoa
  8583 ;;		_strncmp
  8584 ;;		_tolower
  8585 ;;		_xtoa
  8586 ;; This function is called by:
  8587 ;;		_vfprintf
  8588 ;; This function uses a reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text41
  8592  011244                     __ptext41:
  8593                           	opt callstack 0
  8594  011244                     _vfpfcnvrt:
  8595                           	opt callstack 0
  8596                           
  8597                           ; BSR set to: 0
  8598                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8599  011244  0E20               	movlw	32
  8600  011246  26E1               	addwf	fsr1l,f,c
  8601  011248  0E00               	movlw	0
  8602  01124A  22E2               	addwfc	fsr1h,f,c
  8603                           
  8604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8605                           ;stkvar	_fmt @ sp[(-32)+-4]
  8606                           
  8607                           ;incstack = 0
  8608  01124C  0EDC               	movlw	-36
  8609  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8610  011254  0EDD               	movlw	-35
  8611  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8612  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8613  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8614  011268                     	if	0	;tblptru may be non-zero
  8615  011268                     	endif
  8616  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8617  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8618  01126A  6EF8               	movwf	tblptru,c
  8619  01126C                     	endif
  8620  01126C  0008               	tblrd		*
  8621  01126E  50F5               	movf	tablat,w,c
  8622  011270  0A25               	xorlw	37
  8623  011272  A4D8               	btfss	status,2,c
  8624  011274  EF92  F08E         	goto	l10766
  8625                           
  8626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8627                           ;stkvar	_fmt @ sp[(-32)+-4]
  8628  011278  0EDC               	movlw	-36
  8629  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8630  011280  0EDD               	movlw	-35
  8631  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8632  011288  2ADE               	incf	postinc2,f,c
  8633  01128A  0E00               	movlw	0
  8634  01128C  22DD               	addwfc	postdec2,f,c
  8635                           
  8636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8637  01128E  6A0A               	clrf	_width^0,c
  8638  011290  6A0B               	clrf	(_width+1)^0,c
  8639  011292  6A0E               	clrf	_flags^0,c
  8640  011294  6A0F               	clrf	(_flags+1)^0,c
  8641                           
  8642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8643  011296  680C               	setf	_prec^0,c
  8644  011298  680D               	setf	(_prec+1)^0,c
  8645                           
  8646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8647                           ;stkvar	_fmt @ sp[(-32)+-4]
  8648  01129A  0EDC               	movlw	-36
  8649  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8650  0112A2  0EDD               	movlw	-35
  8651  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8652  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8653  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8654  0112B6                     	if	0	;tblptru may be non-zero
  8655  0112B6                     	endif
  8656  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8657  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8658  0112B8  6EF8               	movwf	tblptru,c
  8659  0112BA                     	endif
  8660  0112BA  0008               	tblrd		*
  8661  0112BC  50F5               	movf	tablat,w,c
  8662  0112BE  0A2A               	xorlw	42
  8663  0112C0  A4D8               	btfss	status,2,c
  8664  0112C2  D031               	goto	l10630
  8665                           
  8666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8667                           ;stkvar	_fmt @ sp[(-32)+-4]
  8668  0112C4  0EDC               	movlw	-36
  8669  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8670  0112CC  0EDD               	movlw	-35
  8671  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8672  0112D4  2ADE               	incf	postinc2,f,c
  8673  0112D6  0E00               	movlw	0
  8674  0112D8  22DD               	addwfc	postdec2,f,c
  8675                           
  8676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8677                           ;stkvar	_ap @ sp[(-32)+-6]
  8678  0112DA  0EDA               	movlw	-38
  8679  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8680  0112E2  0EDB               	movlw	-37
  8681  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8682  0112EA  0E02               	movlw	2
  8683  0112EC  5EDE               	subwf	postinc2,f,c
  8684  0112EE  0E00               	movlw	0
  8685  0112F0  5ADD               	subwfb	postdec2,f,c
  8686  0112F2  006F FF78  F02F    	movff	postinc2,btemp+10
  8687  0112F8  006F FF74  F030    	movff	postdec2,btemp+11
  8688  0112FE  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8689  011304  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8690  01130A  006F FF78  F00A    	movff	postinc2,_width
  8691  011310  006F FF74  F00B    	movff	postdec2,_width+1
  8692                           
  8693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8694  011316  AE0B               	btfss	(_width+1)^0,7,c
  8695  011318  D066               	goto	u10430
  8696                           
  8697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8698  01131A  800E               	bsf	_flags^0,0,c
  8699                           
  8700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8701  01131C  6C0A               	negf	_width^0,c
  8702  01131E  1E0B               	comf	(_width+1)^0,f,c
  8703  011320  B0D8               	btfsc	status,0,c
  8704  011322  2A0B               	incf	(_width+1)^0,f,c
  8705  011324  D060               	goto	u10430
  8706  011326                     l10630:
  8707                           
  8708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8709                           ;stkvar	_fmt @ sp[(-32)+-4]
  8710  011326  0EDC               	movlw	-36
  8711  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8712  01132E  0EDD               	movlw	-35
  8713  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8714  011336  006F FF78  F02F    	movff	postinc2,btemp+10
  8715  01133C  006F FF74  F030    	movff	postdec2,btemp+11
  8716  011342  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8717  011348  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8718  01134E  ECE4  F0AD         	call	_atoi	;wreg free
  8719  011352  0060  F094  F00A   	movff	btemp,_width
  8720  011358  0060  F098  F00B   	movff	btemp+1,_width+1
  8721                           
  8722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8723  01135E  D00B               	goto	l10634
  8724  011360                     l10632:
  8725                           
  8726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8727                           ;stkvar	_fmt @ sp[(-32)+-4]
  8728  011360  0EDC               	movlw	-36
  8729  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8730  011368  0EDD               	movlw	-35
  8731  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8732  011370  2ADE               	incf	postinc2,f,c
  8733  011372  0E00               	movlw	0
  8734  011374  22DD               	addwfc	postdec2,f,c
  8735  011376                     l10634:
  8736  011376  0ED0               	movlw	208
  8737  011378  6E2F               	movwf	(btemp+10)^0,c
  8738  01137A  0EFF               	movlw	255
  8739  01137C  6E30               	movwf	(btemp+11)^0,c
  8740                           
  8741                           ;stkvar	_fmt @ sp[(-32)+-4]
  8742  01137E  0EDC               	movlw	-36
  8743  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8744  011386  0EDD               	movlw	-35
  8745  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8746  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8747  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8748  01139A                     	if	0	;tblptru may be non-zero
  8749  01139A                     	endif
  8750  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8751  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8752  01139C  6EF8               	movwf	tblptru,c
  8753  01139E                     	endif
  8754  01139E  0008               	tblrd		*
  8755  0113A0  50F5               	movf	tablat,w,c
  8756  0113A2  6E2D               	movwf	(btemp+8)^0,c
  8757  0113A4  6A2E               	clrf	(btemp+9)^0,c
  8758  0113A6  502F               	movf	(btemp+10)^0,w,c
  8759  0113A8  262D               	addwf	(btemp+8)^0,f,c
  8760  0113AA  5030               	movf	(btemp+11)^0,w,c
  8761  0113AC  222E               	addwfc	(btemp+9)^0,f,c
  8762  0113AE  502E               	movf	(btemp+9)^0,w,c
  8763  0113B0  E106               	bnz	u10410
  8764  0113B2  0E0A               	movlw	10
  8765  0113B4  5C2D               	subwf	(btemp+8)^0,w,c
  8766  0113B6  B0D8               	btfsc	status,0,c
  8767  0113B8  D002               	goto	u10410
  8768  0113BA  0E01               	movlw	1
  8769  0113BC  D001               	goto	u10420
  8770  0113BE                     u10410:
  8771  0113BE  0E00               	movlw	0
  8772  0113C0                     u10420:
  8773  0113C0  6E2F               	movwf	(btemp+10)^0,c
  8774  0113C2  6A30               	clrf	(btemp+11)^0,c
  8775                           
  8776                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8777  0113C4  0EE4               	movlw	-28
  8778  0113C6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8779  0113CC  0EE5               	movlw	-27
  8780  0113CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8781                           
  8782                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8783  0113D4  0EE4               	movlw	-28
  8784  0113D6  006F FF8C  F025    	movff	plusw1,btemp
  8785  0113DC  0EE5               	movlw	-27
  8786  0113DE  50E3               	movf	plusw1,w,c
  8787  0113E0  1025               	iorwf	btemp^0,w,c
  8788  0113E2  A4D8               	btfss	status,2,c
  8789  0113E4  D7BD               	goto	l10632
  8790  0113E6                     u10430:
  8791                           
  8792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8793                           ;stkvar	_fmt @ sp[(-32)+-4]
  8794  0113E6  0EDC               	movlw	-36
  8795  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8796  0113EE  0EDD               	movlw	-35
  8797  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8798  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8799  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8800  011402                     	if	0	;tblptru may be non-zero
  8801  011402                     	endif
  8802  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8803  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8804  011404  6EF8               	movwf	tblptru,c
  8805  011406                     	endif
  8806  011406  0008               	tblrd		*
  8807  011408  50F5               	movf	tablat,w,c
  8808  01140A  0A2E               	xorlw	46
  8809  01140C  A4D8               	btfss	status,2,c
  8810  01140E  D0AC               	goto	u10480
  8811                           
  8812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8813  011410  6A0C               	clrf	_prec^0,c
  8814  011412  6A0D               	clrf	(_prec+1)^0,c
  8815                           
  8816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8817                           ;stkvar	_fmt @ sp[(-32)+-4]
  8818  011414  0EDC               	movlw	-36
  8819  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8820  01141C  0EDD               	movlw	-35
  8821  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8822  011424  2ADE               	incf	postinc2,f,c
  8823  011426  0E00               	movlw	0
  8824  011428  22DD               	addwfc	postdec2,f,c
  8825                           
  8826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8827                           ;stkvar	_fmt @ sp[(-32)+-4]
  8828  01142A  0EDC               	movlw	-36
  8829  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8830  011432  0EDD               	movlw	-35
  8831  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8832  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8833  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8834  011446                     	if	0	;tblptru may be non-zero
  8835  011446                     	endif
  8836  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8837  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8838  011448  6EF8               	movwf	tblptru,c
  8839  01144A                     	endif
  8840  01144A  0008               	tblrd		*
  8841  01144C  50F5               	movf	tablat,w,c
  8842  01144E  0A2A               	xorlw	42
  8843  011450  A4D8               	btfss	status,2,c
  8844  011452  D02A               	goto	l10652
  8845                           
  8846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8847                           ;stkvar	_fmt @ sp[(-32)+-4]
  8848  011454  0EDC               	movlw	-36
  8849  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8850  01145C  0EDD               	movlw	-35
  8851  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8852  011464  2ADE               	incf	postinc2,f,c
  8853  011466  0E00               	movlw	0
  8854  011468  22DD               	addwfc	postdec2,f,c
  8855                           
  8856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8857                           ;stkvar	_ap @ sp[(-32)+-6]
  8858  01146A  0EDA               	movlw	-38
  8859  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8860  011472  0EDB               	movlw	-37
  8861  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8862  01147A  0E02               	movlw	2
  8863  01147C  5EDE               	subwf	postinc2,f,c
  8864  01147E  0E00               	movlw	0
  8865  011480  5ADD               	subwfb	postdec2,f,c
  8866  011482  006F FF78  F02F    	movff	postinc2,btemp+10
  8867  011488  006F FF74  F030    	movff	postdec2,btemp+11
  8868  01148E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8869  011494  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8870  01149A  006F FF78  F00C    	movff	postinc2,_prec
  8871  0114A0  006F FF74  F00D    	movff	postdec2,_prec+1
  8872                           
  8873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8874  0114A6  D060               	goto	u10480
  8875  0114A8                     l10652:
  8876                           
  8877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8878                           ;stkvar	_fmt @ sp[(-32)+-4]
  8879  0114A8  0EDC               	movlw	-36
  8880  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8881  0114B0  0EDD               	movlw	-35
  8882  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8883  0114B8  006F FF78  F02F    	movff	postinc2,btemp+10
  8884  0114BE  006F FF74  F030    	movff	postdec2,btemp+11
  8885  0114C4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8886  0114CA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8887  0114D0  ECE4  F0AD         	call	_atoi	;wreg free
  8888  0114D4  0060  F094  F00C   	movff	btemp,_prec
  8889  0114DA  0060  F098  F00D   	movff	btemp+1,_prec+1
  8890                           
  8891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8892  0114E0  D00B               	goto	l10656
  8893  0114E2                     l10654:
  8894                           
  8895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8896                           ;stkvar	_fmt @ sp[(-32)+-4]
  8897  0114E2  0EDC               	movlw	-36
  8898  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8899  0114EA  0EDD               	movlw	-35
  8900  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8901  0114F2  2ADE               	incf	postinc2,f,c
  8902  0114F4  0E00               	movlw	0
  8903  0114F6  22DD               	addwfc	postdec2,f,c
  8904  0114F8                     l10656:
  8905  0114F8  0ED0               	movlw	208
  8906  0114FA  6E2F               	movwf	(btemp+10)^0,c
  8907  0114FC  0EFF               	movlw	255
  8908  0114FE  6E30               	movwf	(btemp+11)^0,c
  8909                           
  8910                           ;stkvar	_fmt @ sp[(-32)+-4]
  8911  011500  0EDC               	movlw	-36
  8912  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8913  011508  0EDD               	movlw	-35
  8914  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8915  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8916  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8917  01151C                     	if	0	;tblptru may be non-zero
  8918  01151C                     	endif
  8919  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8920  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8921  01151E  6EF8               	movwf	tblptru,c
  8922  011520                     	endif
  8923  011520  0008               	tblrd		*
  8924  011522  50F5               	movf	tablat,w,c
  8925  011524  6E2D               	movwf	(btemp+8)^0,c
  8926  011526  6A2E               	clrf	(btemp+9)^0,c
  8927  011528  502F               	movf	(btemp+10)^0,w,c
  8928  01152A  262D               	addwf	(btemp+8)^0,f,c
  8929  01152C  5030               	movf	(btemp+11)^0,w,c
  8930  01152E  222E               	addwfc	(btemp+9)^0,f,c
  8931  011530  502E               	movf	(btemp+9)^0,w,c
  8932  011532  E106               	bnz	u10460
  8933  011534  0E0A               	movlw	10
  8934  011536  5C2D               	subwf	(btemp+8)^0,w,c
  8935  011538  B0D8               	btfsc	status,0,c
  8936  01153A  D002               	goto	u10460
  8937  01153C  0E01               	movlw	1
  8938  01153E  D001               	goto	u10470
  8939  011540                     u10460:
  8940  011540  0E00               	movlw	0
  8941  011542                     u10470:
  8942  011542  6E2F               	movwf	(btemp+10)^0,c
  8943  011544  6A30               	clrf	(btemp+11)^0,c
  8944                           
  8945                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8946  011546  0EE0               	movlw	-32
  8947  011548  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8948  01154E  0EE1               	movlw	-31
  8949  011550  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8950                           
  8951                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8952  011556  0EE0               	movlw	-32
  8953  011558  006F FF8C  F025    	movff	plusw1,btemp
  8954  01155E  0EE1               	movlw	-31
  8955  011560  50E3               	movf	plusw1,w,c
  8956  011562  1025               	iorwf	btemp^0,w,c
  8957  011564  A4D8               	btfss	status,2,c
  8958  011566  D7BD               	goto	l10654
  8959  011568                     u10480:
  8960                           
  8961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8962                           ;stkvar	_fmt @ sp[(-32)+-4]
  8963  011568  0EDC               	movlw	-36
  8964  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8965  011570  0EDD               	movlw	-35
  8966  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8967  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8968  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8969  011584                     	if	0	;tblptru may be non-zero
  8970  011584                     	endif
  8971  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8972  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8973  011586  6EF8               	movwf	tblptru,c
  8974  011588                     	endif
  8975  011588  0008               	tblrd		*
  8976  01158A  50F5               	movf	tablat,w,c
  8977  01158C  6EE6               	movwf	postinc1,c
  8978  01158E  0E00               	movlw	0
  8979  011590  6EE6               	movwf	postinc1,c
  8980  011592  EC81  F0C1         	call	_tolower	;wreg free
  8981                           
  8982                           ;stkvar	_ct @ sp[(-32)+26]
  8983  011596  0EFA               	movlw	-6
  8984  011598  0060  F097  FFE3   	movff	btemp,plusw1
  8985                           
  8986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8987                           ;stkvar	_ct @ sp[(-32)+26]
  8988  01159E  0EFA               	movlw	-6
  8989  0115A0  50E3               	movf	plusw1,w,c
  8990  0115A2  B4D8               	btfsc	status,2,c
  8991  0115A4  D05B               	goto	l10672
  8992                           
  8993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8994                           ;stkvar	_ct @ sp[(-32)+26]
  8995  0115A6  0EFB               	movlw	251
  8996  0115A8  24E1               	addwf	fsr1l,w,c
  8997  0115AA  6ED9               	movwf	fsr2l,c
  8998  0115AC  0EFF               	movlw	255
  8999  0115AE  20E2               	addwfc	fsr1h,w,c
  9000  0115B0  6EDA               	movwf	fsr2h,c
  9001                           
  9002                           ;stkvar	_fmt @ sp[(-32)+-4]
  9003  0115B2  0EDC               	movlw	-36
  9004  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9005  0115BA  0EDD               	movlw	-35
  9006  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9007  0115C2  006F FFB8  F02F    	movff	postinc0,btemp+10
  9008  0115C8  006F FFB4  F030    	movff	postdec0,btemp+11
  9009  0115CE  0E01               	movlw	1
  9010  0115D0  262F               	addwf	(btemp+10)^0,f,c
  9011  0115D2  0E00               	movlw	0
  9012  0115D4  2230               	addwfc	(btemp+11)^0,f,c
  9013  0115D6  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9014  0115DC  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9015  0115E2                     	if	0	;tblptru may be non-zero
  9016  0115E2                     	endif
  9017  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9018  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9019  0115E4  6EF8               	movwf	tblptru,c
  9020  0115E6                     	endif
  9021  0115E6  0008               	tblrd		*
  9022  0115E8  50F5               	movf	tablat,w,c
  9023  0115EA  6EE6               	movwf	postinc1,c
  9024  0115EC  0E00               	movlw	0
  9025  0115EE  6EE6               	movwf	postinc1,c
  9026  0115F0  EC81  F0C1         	call	_tolower	;wreg free
  9027  0115F4  5025               	movf	btemp^0,w,c
  9028  0115F6  6EDF               	movwf	indf2,c
  9029                           
  9030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9031                           ;stkvar	_ct @ sp[(-32)+26]
  9032  0115F8  0EFB               	movlw	251
  9033  0115FA  24E1               	addwf	fsr1l,w,c
  9034  0115FC  6ED9               	movwf	fsr2l,c
  9035  0115FE  0EFF               	movlw	255
  9036  011600  20E2               	addwfc	fsr1h,w,c
  9037  011602  6EDA               	movwf	fsr2h,c
  9038  011604  50DF               	movf	indf2,w,c
  9039  011606  B4D8               	btfsc	status,2,c
  9040  011608  D029               	goto	l10672
  9041                           
  9042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9043                           ;stkvar	_ct @ sp[(-32)+26]
  9044  01160A  0EFC               	movlw	252
  9045  01160C  24E1               	addwf	fsr1l,w,c
  9046  01160E  6ED9               	movwf	fsr2l,c
  9047  011610  0EFF               	movlw	255
  9048  011612  20E2               	addwfc	fsr1h,w,c
  9049  011614  6EDA               	movwf	fsr2h,c
  9050                           
  9051                           ;stkvar	_fmt @ sp[(-32)+-4]
  9052  011616  0EDC               	movlw	-36
  9053  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9054  01161E  0EDD               	movlw	-35
  9055  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9056  011626  006F FFB8  F02F    	movff	postinc0,btemp+10
  9057  01162C  006F FFB4  F030    	movff	postdec0,btemp+11
  9058  011632  0E02               	movlw	2
  9059  011634  262F               	addwf	(btemp+10)^0,f,c
  9060  011636  0E00               	movlw	0
  9061  011638  2230               	addwfc	(btemp+11)^0,f,c
  9062  01163A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9063  011640  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9064  011646                     	if	0	;tblptru may be non-zero
  9065  011646                     	endif
  9066  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9067  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9068  011648  6EF8               	movwf	tblptru,c
  9069  01164A                     	endif
  9070  01164A  0008               	tblrd		*
  9071  01164C  50F5               	movf	tablat,w,c
  9072  01164E  6EE6               	movwf	postinc1,c
  9073  011650  0E00               	movlw	0
  9074  011652  6EE6               	movwf	postinc1,c
  9075  011654  EC81  F0C1         	call	_tolower	;wreg free
  9076  011658  5025               	movf	btemp^0,w,c
  9077  01165A  6EDF               	movwf	indf2,c
  9078  01165C                     l10672:
  9079                           
  9080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9081                           ;stkvar	_fmt @ sp[(-32)+-4]
  9082  01165C  0EDC               	movlw	-36
  9083  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9084  011664  0EDD               	movlw	-35
  9085  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9086  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9087  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9088  011678                     	if	0	;tblptru may be non-zero
  9089  011678                     	endif
  9090  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9091  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9092  01167A  6EF8               	movwf	tblptru,c
  9093  01167C                     	endif
  9094  01167C  0008               	tblrd		*
  9095  01167E  50F5               	movf	tablat,w,c
  9096  011680  0A63               	xorlw	99
  9097  011682  A4D8               	btfss	status,2,c
  9098  011684  D036               	goto	l10682
  9099                           
  9100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9101                           ;stkvar	_fmt @ sp[(-32)+-4]
  9102  011686  0EDC               	movlw	-36
  9103  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9104  01168E  0EDD               	movlw	-35
  9105  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9106  011696  2ADE               	incf	postinc2,f,c
  9107  011698  0E00               	movlw	0
  9108  01169A  22DD               	addwfc	postdec2,f,c
  9109                           
  9110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9111                           ;stkvar	_ap @ sp[(-32)+-6]
  9112  01169C  0EDA               	movlw	-38
  9113  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9114  0116A4  0EDB               	movlw	-37
  9115  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9116  0116AC  0E02               	movlw	2
  9117  0116AE  5EDE               	subwf	postinc2,f,c
  9118  0116B0  0E00               	movlw	0
  9119  0116B2  5ADD               	subwfb	postdec2,f,c
  9120  0116B4  006F FF78  F02F    	movff	postinc2,btemp+10
  9121  0116BA  006F FF74  F030    	movff	postdec2,btemp+11
  9122  0116C0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9123  0116C6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9124  0116CC  50DF               	movf	indf2,w,c
  9125  0116CE  6E30               	movwf	(btemp+11)^0,c
  9126                           
  9127                           ;stkvar	_c @ sp[(-32)+31]
  9128  0116D0  0EFF               	movlw	-1
  9129  0116D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9130                           
  9131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9132                           ;stkvar	_c @ sp[(-32)+31]
  9133  0116D8  0EFF               	movlw	-1
  9134  0116DA  50E3               	movf	plusw1,w,c
  9135  0116DC  6EE6               	movwf	postinc1,c
  9136                           
  9137                           ;stkvar	_fp @ sp[(-33)+-2]
  9138  0116DE  0EDD               	movlw	-35
  9139  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9140  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9141  0116EC  ECFB  F0C0         	call	_ctoa	;wreg free
  9142  0116F0  D343               	goto	l2200
  9143  0116F2                     l10682:
  9144                           
  9145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9146                           ;stkvar	_fmt @ sp[(-32)+-4]
  9147  0116F2  0EDC               	movlw	-36
  9148  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9149  0116FA  0EDD               	movlw	-35
  9150  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9151  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9152  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9153  01170E                     	if	0	;tblptru may be non-zero
  9154  01170E                     	endif
  9155  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9156  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9157  011710  6EF8               	movwf	tblptru,c
  9158  011712                     	endif
  9159  011712  0008               	tblrd		*
  9160  011714  50F5               	movf	tablat,w,c
  9161  011716  0A64               	xorlw	100
  9162  011718  B4D8               	btfsc	status,2,c
  9163  01171A  D015               	goto	u10530
  9164                           
  9165                           ;stkvar	_fmt @ sp[(-32)+-4]
  9166  01171C  0EDC               	movlw	-36
  9167  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9168  011724  0EDD               	movlw	-35
  9169  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9170  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9171  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9172  011738                     	if	0	;tblptru may be non-zero
  9173  011738                     	endif
  9174  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9175  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9176  01173A  6EF8               	movwf	tblptru,c
  9177  01173C                     	endif
  9178  01173C  0008               	tblrd		*
  9179  01173E  50F5               	movf	tablat,w,c
  9180  011740  0A69               	xorlw	105
  9181  011742  A4D8               	btfss	status,2,c
  9182  011744  D075               	goto	l10694
  9183  011746                     u10530:
  9184                           
  9185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9186                           ;stkvar	_fmt @ sp[(-32)+-4]
  9187  011746  0EDC               	movlw	-36
  9188  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9189  01174E  0EDD               	movlw	-35
  9190  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9191  011756  2ADE               	incf	postinc2,f,c
  9192  011758  0E00               	movlw	0
  9193  01175A  22DD               	addwfc	postdec2,f,c
  9194                           
  9195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9196                           ;stkvar	_ap @ sp[(-32)+-6]
  9197  01175C  0EDA               	movlw	-38
  9198  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9199  011764  0EDB               	movlw	-37
  9200  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9201  01176C  0E02               	movlw	2
  9202  01176E  5EDE               	subwf	postinc2,f,c
  9203  011770  0E00               	movlw	0
  9204  011772  5ADD               	subwfb	postdec2,f,c
  9205  011774  006F FF78  F02F    	movff	postinc2,btemp+10
  9206  01177A  006F FF74  F030    	movff	postdec2,btemp+11
  9207  011780  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9208  011786  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9209  01178C  006F FF78  F02F    	movff	postinc2,btemp+10
  9210  011792  006F FF74  F030    	movff	postdec2,btemp+11
  9211                           
  9212                           ;stkvar	_ll @ sp[(-32)+14]
  9213  011798  0EEE               	movlw	-18
  9214  01179A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9215  0117A0  0EEF               	movlw	-17
  9216  0117A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9217  0117A8  6A25               	clrf	btemp^0,c
  9218  0117AA  BEE3               	btfsc	plusw1,7,c
  9219  0117AC  6825               	setf	btemp^0,c
  9220  0117AE  0EF0               	movlw	-16
  9221  0117B0  0060  F097  FFE3   	movff	btemp,plusw1
  9222  0117B6  0EF1               	movlw	-15
  9223  0117B8  0060  F097  FFE3   	movff	btemp,plusw1
  9224  0117BE  0EF2               	movlw	-14
  9225  0117C0  0060  F097  FFE3   	movff	btemp,plusw1
  9226  0117C6  0EF3               	movlw	-13
  9227  0117C8  0060  F097  FFE3   	movff	btemp,plusw1
  9228  0117CE  0EF4               	movlw	-12
  9229  0117D0  0060  F097  FFE3   	movff	btemp,plusw1
  9230  0117D6  0EF5               	movlw	-11
  9231  0117D8  0060  F097  FFE3   	movff	btemp,plusw1
  9232                           
  9233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9234                           ;stkvar	_ll @ sp[(-32)+14]
  9235  0117DE  50E1               	movf	fsr1l,w,c
  9236  0117E0  0FEE               	addlw	-18
  9237  0117E2  6ED9               	movwf	fsr2l,c
  9238  0117E4  50E2               	movf	fsr1h,w,c
  9239  0117E6  6EDA               	movwf	fsr2h,c
  9240  0117E8  0EFF               	movlw	255
  9241  0117EA  22DA               	addwfc	fsr2h,f,c
  9242  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9243  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9244  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9245  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9246  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9247  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9248  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9249  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9250                           
  9251                           ;stkvar	_fp @ sp[(-40)+-2]
  9252  01181C  0ED6               	movlw	-42
  9253  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9254  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9255  01182A  EC8F  F0A2         	call	_dtoa	;wreg free
  9256  01182E  D2A4               	goto	l2200
  9257  011830                     l10694:
  9258                           
  9259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9260                           ;stkvar	_ct @ sp[(-32)+26]
  9261  011830  0EFA               	movlw	-6
  9262  011832  006F FF8C  F025    	movff	plusw1,btemp
  9263  011838  0E66               	movlw	102
  9264  01183A  1825               	xorwf	btemp^0,w,c
  9265  01183C  A4D8               	btfss	status,2,c
  9266  01183E  D06E               	goto	l10706
  9267                           
  9268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9269                           ;stkvar	_fmt @ sp[(-32)+-4]
  9270  011840  0EDC               	movlw	-36
  9271  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9272  011848  0EDD               	movlw	-35
  9273  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9274  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9275  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9276  01185C                     	if	0	;tblptru may be non-zero
  9277  01185C                     	endif
  9278  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9279  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9280  01185E  6EF8               	movwf	tblptru,c
  9281  011860                     	endif
  9282                           
  9283                           ;stkvar	_c @ sp[(-32)+31]
  9284  011860  0008               	tblrd		*
  9285  011862  0EFF               	movlw	-1
  9286  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9287                           
  9288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9289                           ;stkvar	_fmt @ sp[(-32)+-4]
  9290  01186A  0EDC               	movlw	-36
  9291  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9292  011872  0EDD               	movlw	-35
  9293  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9294  01187A  2ADE               	incf	postinc2,f,c
  9295  01187C  0E00               	movlw	0
  9296  01187E  22DD               	addwfc	postdec2,f,c
  9297                           
  9298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9299                           ;stkvar	_ap @ sp[(-32)+-6]
  9300  011880  0EDA               	movlw	-38
  9301  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9302  011888  0EDB               	movlw	-37
  9303  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9304  011890  0E04               	movlw	4
  9305  011892  5EDE               	subwf	postinc2,f,c
  9306  011894  0E00               	movlw	0
  9307  011896  5ADD               	subwfb	postdec2,f,c
  9308  011898  006F FF78  F02F    	movff	postinc2,btemp+10
  9309  01189E  006F FF74  F030    	movff	postdec2,btemp+11
  9310  0118A4  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9311  0118AA  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9312  0118B0  006F FF78  F02D    	movff	postinc2,btemp+8
  9313  0118B6  006F FF78  F02E    	movff	postinc2,btemp+9
  9314  0118BC  006F FF78  F02F    	movff	postinc2,btemp+10
  9315  0118C2  006F FF78  F030    	movff	postinc2,btemp+11
  9316                           
  9317                           ;stkvar	_f @ sp[(-32)+22]
  9318  0118C8  0EF6               	movlw	-10
  9319  0118CA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9320  0118D0  0EF7               	movlw	-9
  9321  0118D2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9322  0118D8  0EF8               	movlw	-8
  9323  0118DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9324  0118E0  0EF9               	movlw	-7
  9325  0118E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9326  0118E8                     l10702:
  9327                           
  9328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9329                           ;stkvar	_c @ sp[(-32)+31]
  9330  0118E8  0EFF               	movlw	-1
  9331  0118EA  50E3               	movf	plusw1,w,c
  9332  0118EC  6EE6               	movwf	postinc1,c
  9333                           
  9334                           ;stkvar	_f @ sp[(-33)+22]
  9335  0118EE  0EF5               	movlw	-11
  9336  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9337  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9338  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9339  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9340                           
  9341                           ;stkvar	_fp @ sp[(-37)+-2]
  9342  011908  0ED9               	movlw	-39
  9343  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9344  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9345  011916  EC00  F080         	call	_efgtoa	;wreg free
  9346  01191A  D22E               	goto	l2200
  9347  01191C                     l10706:
  9348                           
  9349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9350  01191C  0E02               	movlw	2
  9351  01191E  6EE6               	movwf	postinc1,c
  9352  011920  0E00               	movlw	0
  9353  011922  6EE6               	movwf	postinc1,c
  9354  011924  0EF6               	movlw	low STR_54
  9355  011926  6EE6               	movwf	postinc1,c
  9356  011928  0EFF               	movlw	high STR_54
  9357  01192A  6EE6               	movwf	postinc1,c
  9358                           
  9359                           ;stkvar	_ct @ sp[(-36)+26]
  9360  01192C  0EF6               	movlw	246
  9361  01192E  24E1               	addwf	fsr1l,w,c
  9362  011930  6E25               	movwf	btemp^0,c
  9363  011932  0EFF               	movlw	255
  9364  011934  20E2               	addwfc	fsr1h,w,c
  9365  011936  6E26               	movwf	(btemp+1)^0,c
  9366  011938  0060  F097  FFE6   	movff	btemp,postinc1
  9367  01193E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  9368  011944  EC49  F0B2         	call	_strncmp	;wreg free
  9369  011948  5025               	movf	btemp^0,w,c
  9370  01194A  1026               	iorwf	(btemp+1)^0,w,c
  9371  01194C  A4D8               	btfss	status,2,c
  9372  01194E  D096               	goto	l10726
  9373                           
  9374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9375                           ;stkvar	_fmt @ sp[(-32)+-4]
  9376  011950  0EDC               	movlw	-36
  9377  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9378  011958  0EDD               	movlw	-35
  9379  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9380  011960  006F FF78  F02F    	movff	postinc2,btemp+10
  9381  011966  006F FF74  F030    	movff	postdec2,btemp+11
  9382  01196C  0E01               	movlw	1
  9383  01196E  262F               	addwf	(btemp+10)^0,f,c
  9384  011970  0E00               	movlw	0
  9385  011972  2230               	addwfc	(btemp+11)^0,f,c
  9386  011974  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9387  01197A  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9388  011980                     	if	0	;tblptru may be non-zero
  9389  011980                     	endif
  9390  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9391  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9392  011982  6EF8               	movwf	tblptru,c
  9393  011984                     	endif
  9394                           
  9395                           ;stkvar	_c @ sp[(-32)+31]
  9396  011984  0008               	tblrd		*
  9397  011986  0EFF               	movlw	-1
  9398  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9399  01198E  0EBF               	movlw	191
  9400  011990  6E2F               	movwf	(btemp+10)^0,c
  9401  011992  0EFF               	movlw	255
  9402  011994  6E30               	movwf	(btemp+11)^0,c
  9403                           
  9404                           ;stkvar	_fmt @ sp[(-32)+-4]
  9405  011996  0EDC               	movlw	-36
  9406  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9407  01199E  0EDD               	movlw	-35
  9408  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9409  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9410  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9411  0119B2                     	if	0	;tblptru may be non-zero
  9412  0119B2                     	endif
  9413  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9414  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9415  0119B4  6EF8               	movwf	tblptru,c
  9416  0119B6                     	endif
  9417  0119B6  0008               	tblrd		*
  9418  0119B8  50F5               	movf	tablat,w,c
  9419  0119BA  6E2D               	movwf	(btemp+8)^0,c
  9420  0119BC  6A2E               	clrf	(btemp+9)^0,c
  9421  0119BE  502F               	movf	(btemp+10)^0,w,c
  9422  0119C0  262D               	addwf	(btemp+8)^0,f,c
  9423  0119C2  5030               	movf	(btemp+11)^0,w,c
  9424  0119C4  222E               	addwfc	(btemp+9)^0,f,c
  9425  0119C6  502E               	movf	(btemp+9)^0,w,c
  9426  0119C8  E106               	bnz	u10560
  9427  0119CA  0E1A               	movlw	26
  9428  0119CC  5C2D               	subwf	(btemp+8)^0,w,c
  9429  0119CE  B0D8               	btfsc	status,0,c
  9430  0119D0  D002               	goto	u10560
  9431  0119D2  0E01               	movlw	1
  9432  0119D4  D001               	goto	u10570
  9433  0119D6                     u10560:
  9434  0119D6  0E00               	movlw	0
  9435  0119D8                     u10570:
  9436  0119D8  6E2F               	movwf	(btemp+10)^0,c
  9437  0119DA  6A30               	clrf	(btemp+11)^0,c
  9438                           
  9439                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9440  0119DC  0EE2               	movlw	-30
  9441  0119DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9442  0119E4  0EE3               	movlw	-29
  9443  0119E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9444                           
  9445                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9446  0119EC  0EE2               	movlw	-30
  9447  0119EE  006F FF8C  F025    	movff	plusw1,btemp
  9448  0119F4  0EE3               	movlw	-29
  9449  0119F6  50E3               	movf	plusw1,w,c
  9450  0119F8  1025               	iorwf	btemp^0,w,c
  9451                           
  9452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9453                           ;stkvar	_ap @ sp[(-32)+-6]
  9454                           
  9455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9456                           
  9457                           ;stkvar	_f @ sp[(-32)+22]
  9458                           
  9459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9460                           ;stkvar	_ap @ sp[(-32)+-6]
  9461  0119FA  0EDA               	movlw	-38
  9462  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9463  011A02  0EDB               	movlw	-37
  9464  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9465  011A0A  0E04               	movlw	4
  9466  011A0C  5EDE               	subwf	postinc2,f,c
  9467  011A0E  0E00               	movlw	0
  9468  011A10  5ADD               	subwfb	postdec2,f,c
  9469  011A12  006F FF78  F02F    	movff	postinc2,btemp+10
  9470  011A18  006F FF74  F030    	movff	postdec2,btemp+11
  9471  011A1E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9472  011A24  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9473  011A2A  006F FF78  F02D    	movff	postinc2,btemp+8
  9474  011A30  006F FF78  F02E    	movff	postinc2,btemp+9
  9475  011A36  006F FF78  F02F    	movff	postinc2,btemp+10
  9476  011A3C  006F FF78  F030    	movff	postinc2,btemp+11
  9477                           
  9478                           ;stkvar	_f @ sp[(-32)+22]
  9479  011A42  0EF6               	movlw	-10
  9480  011A44  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9481  011A4A  0EF7               	movlw	-9
  9482  011A4C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9483  011A52  0EF8               	movlw	-8
  9484  011A54  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9485  011A5A  0EF9               	movlw	-7
  9486  011A5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9487                           
  9488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9489                           ;stkvar	_fmt @ sp[(-32)+-4]
  9490  011A62  0EDC               	movlw	-36
  9491  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9492  011A6A  0EDD               	movlw	-35
  9493  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9494  011A72  0E02               	movlw	2
  9495  011A74  26DE               	addwf	postinc2,f,c
  9496  011A76  0E00               	movlw	0
  9497  011A78  22DD               	addwfc	postdec2,f,c
  9498  011A7A  D736               	goto	l10702
  9499  011A7C                     l10726:
  9500                           
  9501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9502                           ;stkvar	_fmt @ sp[(-32)+-4]
  9503  011A7C  0EDC               	movlw	-36
  9504  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9505  011A84  0EDD               	movlw	-35
  9506  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9507  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9508  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9509  011A98                     	if	0	;tblptru may be non-zero
  9510  011A98                     	endif
  9511  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9512  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9513  011A9A  6EF8               	movwf	tblptru,c
  9514  011A9C                     	endif
  9515  011A9C  0008               	tblrd		*
  9516  011A9E  50F5               	movf	tablat,w,c
  9517  011AA0  0A73               	xorlw	115
  9518  011AA2  A4D8               	btfss	status,2,c
  9519  011AA4  D042               	goto	l10736
  9520                           
  9521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9522                           ;stkvar	_fmt @ sp[(-32)+-4]
  9523  011AA6  0EDC               	movlw	-36
  9524  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9525  011AAE  0EDD               	movlw	-35
  9526  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9527  011AB6  2ADE               	incf	postinc2,f,c
  9528  011AB8  0E00               	movlw	0
  9529  011ABA  22DD               	addwfc	postdec2,f,c
  9530                           
  9531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9532                           ;stkvar	_ap @ sp[(-32)+-6]
  9533  011ABC  0EDA               	movlw	-38
  9534  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9535  011AC4  0EDB               	movlw	-37
  9536  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9537  011ACC  0E02               	movlw	2
  9538  011ACE  5EDE               	subwf	postinc2,f,c
  9539  011AD0  0E00               	movlw	0
  9540  011AD2  5ADD               	subwfb	postdec2,f,c
  9541  011AD4  006F FF78  F02F    	movff	postinc2,btemp+10
  9542  011ADA  006F FF74  F030    	movff	postdec2,btemp+11
  9543  011AE0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9544  011AE6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9545  011AEC  006F FF78  F02F    	movff	postinc2,btemp+10
  9546  011AF2  006F FF74  F030    	movff	postdec2,btemp+11
  9547                           
  9548                           ;stkvar	_cp @ sp[(-32)+29]
  9549  011AF8  0EFE               	movlw	-2
  9550  011AFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9551  011B00  0EFD               	movlw	-3
  9552  011B02  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9553                           
  9554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9555                           ;stkvar	_cp @ sp[(-32)+29]
  9556  011B08  0EFD               	movlw	-3
  9557  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9558  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9559                           
  9560                           ;stkvar	_fp @ sp[(-34)+-2]
  9561  011B16  0EDC               	movlw	-36
  9562  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9563  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9564  011B24  EC45  F0AB         	call	_stoa	;wreg free
  9565  011B28  D127               	goto	l2200
  9566  011B2A                     l10736:
  9567                           
  9568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9569                           ;stkvar	_fmt @ sp[(-32)+-4]
  9570  011B2A  0EDC               	movlw	-36
  9571  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9572  011B32  0EDD               	movlw	-35
  9573  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9574  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9575  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9576  011B46                     	if	0	;tblptru may be non-zero
  9577  011B46                     	endif
  9578  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9579  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9580  011B48  6EF8               	movwf	tblptru,c
  9581  011B4A                     	endif
  9582  011B4A  0008               	tblrd		*
  9583  011B4C  50F5               	movf	tablat,w,c
  9584  011B4E  0A78               	xorlw	120
  9585  011B50  B4D8               	btfsc	status,2,c
  9586  011B52  D015               	goto	u10610
  9587                           
  9588                           ;stkvar	_fmt @ sp[(-32)+-4]
  9589  011B54  0EDC               	movlw	-36
  9590  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9591  011B5C  0EDD               	movlw	-35
  9592  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9593  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9594  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9595  011B70                     	if	0	;tblptru may be non-zero
  9596  011B70                     	endif
  9597  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9598  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9599  011B72  6EF8               	movwf	tblptru,c
  9600  011B74                     	endif
  9601  011B74  0008               	tblrd		*
  9602  011B76  50F5               	movf	tablat,w,c
  9603  011B78  0A58               	xorlw	88
  9604  011B7A  A4D8               	btfss	status,2,c
  9605  011B7C  D094               	goto	l10750
  9606  011B7E                     u10610:
  9607                           
  9608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9609                           ;stkvar	_fmt @ sp[(-32)+-4]
  9610  011B7E  0EDC               	movlw	-36
  9611  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9612  011B86  0EDD               	movlw	-35
  9613  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9614  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9615  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9616  011B9A                     	if	0	;tblptru may be non-zero
  9617  011B9A                     	endif
  9618  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9619  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9620  011B9C  6EF8               	movwf	tblptru,c
  9621  011B9E                     	endif
  9622                           
  9623                           ;stkvar	_c @ sp[(-32)+31]
  9624  011B9E  0008               	tblrd		*
  9625  011BA0  0EFF               	movlw	-1
  9626  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9627                           
  9628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9629                           ;stkvar	_fmt @ sp[(-32)+-4]
  9630  011BA8  0EDC               	movlw	-36
  9631  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9632  011BB0  0EDD               	movlw	-35
  9633  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9634  011BB8  2ADE               	incf	postinc2,f,c
  9635  011BBA  0E00               	movlw	0
  9636  011BBC  22DD               	addwfc	postdec2,f,c
  9637                           
  9638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9639                           ;stkvar	_ap @ sp[(-32)+-6]
  9640  011BBE  0EDA               	movlw	-38
  9641  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9642  011BC6  0EDB               	movlw	-37
  9643  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9644  011BCE  0E02               	movlw	2
  9645  011BD0  5EDE               	subwf	postinc2,f,c
  9646  011BD2  0E00               	movlw	0
  9647  011BD4  5ADD               	subwfb	postdec2,f,c
  9648  011BD6  006F FF78  F02F    	movff	postinc2,btemp+10
  9649  011BDC  006F FF74  F030    	movff	postdec2,btemp+11
  9650  011BE2  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9651  011BE8  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9652  011BEE  006F FF78  F02F    	movff	postinc2,btemp+10
  9653  011BF4  006F FF74  F030    	movff	postdec2,btemp+11
  9654  011BFA  502F               	movf	(btemp+10)^0,w,c
  9655  011BFC  6E35               	movwf	(btemp+16)^0,c
  9656  011BFE  5030               	movf	(btemp+11)^0,w,c
  9657  011C00  6E36               	movwf	(btemp+17)^0,c
  9658  011C02  6A37               	clrf	(btemp+18)^0,c
  9659  011C04  6A38               	clrf	(btemp+19)^0,c
  9660  011C06  6A39               	clrf	(btemp+20)^0,c
  9661  011C08  6A3A               	clrf	(btemp+21)^0,c
  9662  011C0A  6A3B               	clrf	(btemp+22)^0,c
  9663  011C0C  6A3C               	clrf	(btemp+23)^0,c
  9664                           
  9665                           ;stkvar	_llu @ sp[(-32)+6]
  9666  011C0E  0EE6               	movlw	-26
  9667  011C10  0060  F0D7  FFE3   	movff	btemp+16,plusw1
  9668  011C16  0EE7               	movlw	-25
  9669  011C18  0060  F0DB  FFE3   	movff	btemp+17,plusw1
  9670  011C1E  0EE8               	movlw	-24
  9671  011C20  0060  F0DF  FFE3   	movff	btemp+18,plusw1
  9672  011C26  0EE9               	movlw	-23
  9673  011C28  0060  F0E3  FFE3   	movff	btemp+19,plusw1
  9674  011C2E  0EEA               	movlw	-22
  9675  011C30  0060  F0E7  FFE3   	movff	btemp+20,plusw1
  9676  011C36  0EEB               	movlw	-21
  9677  011C38  0060  F0EB  FFE3   	movff	btemp+21,plusw1
  9678  011C3E  0EEC               	movlw	-20
  9679  011C40  0060  F0EF  FFE3   	movff	btemp+22,plusw1
  9680  011C46  0EED               	movlw	-19
  9681  011C48  0060  F0F3  FFE3   	movff	btemp+23,plusw1
  9682                           
  9683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9684                           ;stkvar	_c @ sp[(-32)+31]
  9685  011C4E  0EFF               	movlw	-1
  9686  011C50  50E3               	movf	plusw1,w,c
  9687  011C52  6EE6               	movwf	postinc1,c
  9688                           
  9689                           ;stkvar	_llu @ sp[(-33)+6]
  9690  011C54  50E1               	movf	fsr1l,w,c
  9691  011C56  0FE5               	addlw	-27
  9692  011C58  6ED9               	movwf	fsr2l,c
  9693  011C5A  50E2               	movf	fsr1h,w,c
  9694  011C5C  6EDA               	movwf	fsr2h,c
  9695  011C5E  0EFF               	movlw	255
  9696  011C60  22DA               	addwfc	fsr2h,f,c
  9697  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9698  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9699  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9700  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9701  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9702  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9703  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9704  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9705                           
  9706                           ;stkvar	_fp @ sp[(-41)+-2]
  9707  011C92  0ED5               	movlw	-43
  9708  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9709  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9710  011CA0  ECCF  F0A4         	call	_xtoa	;wreg free
  9711  011CA4  D069               	goto	l2200
  9712  011CA6                     l10750:
  9713                           
  9714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9715                           ;stkvar	_fmt @ sp[(-32)+-4]
  9716  011CA6  0EDC               	movlw	-36
  9717  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9718  011CAE  0EDD               	movlw	-35
  9719  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9720  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9721  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9722  011CC2                     	if	0	;tblptru may be non-zero
  9723  011CC2                     	endif
  9724  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9725  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9726  011CC4  6EF8               	movwf	tblptru,c
  9727  011CC6                     	endif
  9728  011CC6  0008               	tblrd		*
  9729  011CC8  50F5               	movf	tablat,w,c
  9730  011CCA  0A25               	xorlw	37
  9731  011CCC  A4D8               	btfss	status,2,c
  9732  011CCE  D01A               	goto	l10760
  9733                           
  9734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9735                           ;stkvar	_fmt @ sp[(-32)+-4]
  9736  011CD0  0EDC               	movlw	-36
  9737  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9738  011CD8  0EDD               	movlw	-35
  9739  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9740  011CE0  2ADE               	incf	postinc2,f,c
  9741  011CE2  0E00               	movlw	0
  9742  011CE4  22DD               	addwfc	postdec2,f,c
  9743                           
  9744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9745                           ;stkvar	_fp @ sp[(-32)+-2]
  9746  011CE6  0EDE               	movlw	-34
  9747  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9748  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9749  011CF4  0E25               	movlw	37
  9750  011CF6  6EE6               	movwf	postinc1,c
  9751  011CF8  0E00               	movlw	0
  9752  011CFA  6EE6               	movwf	postinc1,c
  9753  011CFC  EC14  F0B8         	call	_fputc	;wreg free
  9754  011D00                     l10756:
  9755                           
  9756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9757  011D00  0E01               	movlw	1
  9758  011D02  D00C               	goto	L7
  9759  011D04                     l10760:
  9760                           
  9761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9762                           ;stkvar	_fmt @ sp[(-32)+-4]
  9763  011D04  0EDC               	movlw	-36
  9764  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9765  011D0C  0EDD               	movlw	-35
  9766  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9767  011D14  2ADE               	incf	postinc2,f,c
  9768  011D16  0E00               	movlw	0
  9769  011D18  22DD               	addwfc	postdec2,f,c
  9770                           
  9771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9772  011D1A  0E00               	movlw	0
  9773  011D1C                     L7:
  9774  011D1C  6E25               	movwf	btemp^0,c
  9775  011D1E  0E00               	movlw	0
  9776  011D20  6E26               	movwf	(btemp+1)^0,c
  9777  011D22  D02A               	goto	l2200
  9778  011D24                     l10766:
  9779                           
  9780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9781                           ;stkvar	_fp @ sp[(-32)+-2]
  9782  011D24  0EDE               	movlw	-34
  9783  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9784  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9785                           
  9786                           ;stkvar	_fmt @ sp[(-34)+-4]
  9787  011D32  0EDA               	movlw	-38
  9788  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9789  011D3A  0EDB               	movlw	-37
  9790  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9791  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9792  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9793  011D4E                     	if	0	;tblptru may be non-zero
  9794  011D4E                     	endif
  9795  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9796  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9797  011D50  6EF8               	movwf	tblptru,c
  9798  011D52                     	endif
  9799  011D52  0008               	tblrd		*
  9800  011D54  50F5               	movf	tablat,w,c
  9801  011D56  6EE6               	movwf	postinc1,c
  9802  011D58  0E00               	movlw	0
  9803  011D5A  6EE6               	movwf	postinc1,c
  9804  011D5C  EC14  F0B8         	call	_fputc	;wreg free
  9805                           
  9806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9807                           ;stkvar	_fmt @ sp[(-32)+-4]
  9808  011D60  0EDC               	movlw	-36
  9809  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9810  011D68  0EDD               	movlw	-35
  9811  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9812  011D70  2ADE               	incf	postinc2,f,c
  9813  011D72  0E00               	movlw	0
  9814  011D74  22DD               	addwfc	postdec2,f,c
  9815  011D76  D7C4               	goto	l10756
  9816  011D78                     l2200:
  9817                           
  9818                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9819  011D78  0EDA               	movlw	218
  9820  011D7A  26E1               	addwf	fsr1l,f,c
  9821  011D7C  0EFF               	movlw	255
  9822  011D7E  22E2               	addwfc	fsr1h,f,c
  9823  011D80  0012               	return		;funcret
  9824  011D82                     __end_of_vfpfcnvrt:
  9825                           	opt callstack 0
  9826                           
  9827 ;; *************** function _xtoa *****************
  9828 ;; Defined at:
  9829 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9832 ;;		 -> f(6), NULL(0), 
  9833 ;;  d               8  [STACK] unsigned long long 
  9834 ;;  x               1  [STACK] unsigned char 
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;  n               8  [STACK] unsigned long long 
  9837 ;;  c               2  [STACK] int 
  9838 ;;  i               2  [STACK] int 
  9839 ;;  w               2  [STACK] int 
  9840 ;;  p               2  [STACK] int 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  2  [STACK] int 
  9843 ;; Registers used:
  9844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9854 ;;Total ram usage:        0 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:   12
  9857 ;; This function calls:
  9858 ;;		_isalpha
  9859 ;;		_isupper
  9860 ;;		_pad
  9861 ;;		_toupper
  9862 ;; This function is called by:
  9863 ;;		_vfpfcnvrt
  9864 ;; This function uses a reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text42
  9868  01499E                     __ptext42:
  9869                           	opt callstack 0
  9870  01499E                     _xtoa:
  9871                           	opt callstack 0
  9872                           
  9873                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9874  01499E  0E14               	movlw	20
  9875  0149A0  26E1               	addwf	fsr1l,f,c
  9876  0149A2  0E00               	movlw	0
  9877  0149A4  22E2               	addwfc	fsr1h,f,c
  9878                           
  9879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9880                           
  9881                           ;incstack = 0
  9882  0149A6  AE0D               	btfss	(_prec+1)^0,7,c
  9883                           
  9884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9885  0149A8  920E               	bcf	_flags^0,1,c
  9886                           
  9887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9888  0149AA  BE0D               	btfsc	(_prec+1)^0,7,c
  9889  0149AC  D005               	goto	u10210
  9890  0149AE  500D               	movf	(_prec+1)^0,w,c
  9891  0149B0  E110               	bnz	l10548
  9892  0149B2  040C               	decf	_prec^0,w,c
  9893  0149B4  B0D8               	btfsc	status,0,c
  9894  0149B6  D00D               	goto	l10548
  9895  0149B8                     u10210:
  9896  0149B8  0E01               	movlw	1
  9897  0149BA  6E2F               	movwf	(btemp+10)^0,c
  9898  0149BC  0E00               	movlw	0
  9899  0149BE  6E30               	movwf	(btemp+11)^0,c
  9900                           
  9901                           ;stkvar	_p @ sp[(-20)+18]
  9902  0149C0  0EFE               	movlw	-2
  9903  0149C2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9904  0149C8  0EFF               	movlw	-1
  9905  0149CA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9906  0149D0  D008               	goto	l2150
  9907  0149D2                     l10548:
  9908                           
  9909                           ;stkvar	_p @ sp[(-20)+18]
  9910  0149D2  0EFE               	movlw	-2
  9911  0149D4  0060  F033  FFE3   	movff	_prec,plusw1
  9912  0149DA  0EFF               	movlw	-1
  9913  0149DC  0060  F037  FFE3   	movff	_prec+1,plusw1
  9914  0149E2                     l2150:
  9915                           
  9916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9917                           ;stkvar	_w @ sp[(-20)+16]
  9918  0149E2  0EFC               	movlw	-4
  9919  0149E4  0060  F02B  FFE3   	movff	_width,plusw1
  9920  0149EA  0EFD               	movlw	-3
  9921  0149EC  0060  F02F  FFE3   	movff	_width+1,plusw1
  9922                           
  9923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9924  0149F2  A80E               	btfss	_flags^0,4,c
  9925  0149F4  D00B               	goto	l10554
  9926                           
  9927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9928                           ;stkvar	_w @ sp[(-20)+16]
  9929  0149F6  50E1               	movf	fsr1l,w,c
  9930  0149F8  0FFC               	addlw	-4
  9931  0149FA  6ED9               	movwf	fsr2l,c
  9932  0149FC  50E2               	movf	fsr1h,w,c
  9933  0149FE  6EDA               	movwf	fsr2h,c
  9934  014A00  0EFF               	movlw	255
  9935  014A02  22DA               	addwfc	fsr2h,f,c
  9936  014A04  0EFE               	movlw	254
  9937  014A06  26DE               	addwf	postinc2,f,c
  9938  014A08  0EFF               	movlw	255
  9939  014A0A  22DD               	addwfc	postdec2,f,c
  9940  014A0C                     l10554:
  9941                           
  9942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9943                           ;stkvar	_d @ sp[(-20)+-10]
  9944  014A0C  0EE2               	movlw	226
  9945  014A0E  24E1               	addwf	fsr1l,w,c
  9946  014A10  6ED9               	movwf	fsr2l,c
  9947  014A12  0EFF               	movlw	255
  9948  014A14  20E2               	addwfc	fsr1h,w,c
  9949  014A16  6EDA               	movwf	fsr2h,c
  9950                           
  9951                           ;stkvar	_n @ sp[(-20)+4]
  9952  014A18  0E08               	movlw	8
  9953  014A1A  6E25               	movwf	btemp^0,c
  9954  014A1C  0EF0               	movlw	-16
  9955  014A1E                     us1023999:
  9956  014A1E  006F FF7B FFE3     	movff	postinc2,plusw1
  9957  014A24  28E8               	incf	wreg,w,c
  9958  014A26  2E25               	decfsz	btemp^0,f,c
  9959  014A28  D7FA               	bra	us1023999
  9960                           
  9961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9962  014A2A  0E4F               	movlw	79
  9963  014A2C  6E2F               	movwf	(btemp+10)^0,c
  9964  014A2E  0E00               	movlw	0
  9965  014A30  6E30               	movwf	(btemp+11)^0,c
  9966                           
  9967                           ;stkvar	_i @ sp[(-20)+14]
  9968  014A32  0EFA               	movlw	-6
  9969  014A34  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9970  014A3A  0EFB               	movlw	-5
  9971  014A3C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9972                           
  9973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9974  014A42  0103               	movlb	3	; () banked
  9975  014A44  6BE3               	clrf	(_dbuf+79)& (0+255),b
  9976                           
  9977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9978  014A46  D0EE               	goto	l10592
  9979  014A48                     l10560:
  9980                           
  9981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9982                           ;stkvar	_i @ sp[(-20)+14]
  9983  014A48  50E1               	movf	fsr1l,w,c
  9984  014A4A  0FFA               	addlw	-6
  9985  014A4C  6ED9               	movwf	fsr2l,c
  9986  014A4E  50E2               	movf	fsr1h,w,c
  9987  014A50  6EDA               	movwf	fsr2h,c
  9988  014A52  0EFF               	movlw	255
  9989  014A54  22DA               	addwfc	fsr2h,f,c
  9990  014A56  06DE               	decf	postinc2,f,c
  9991  014A58  0E00               	movlw	0
  9992  014A5A  5ADD               	subwfb	postdec2,f,c
  9993                           
  9994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9995                           ;stkvar	_n @ sp[(-20)+4]
  9996  014A5C  0EF0               	movlw	-16
  9997  014A5E  006F FF8C  F02F    	movff	plusw1,btemp+10
  9998  014A64  0EF1               	movlw	-15
  9999  014A66  006F FF8C  F030    	movff	plusw1,btemp+11
 10000  014A6C  0E0F               	movlw	15
 10001  014A6E  162F               	andwf	(btemp+10)^0,f,c
 10002  014A70  0E00               	movlw	0
 10003  014A72  1630               	andwf	(btemp+11)^0,f,c
 10004                           
 10005                           ;stkvar	_c @ sp[(-20)+12]
 10006  014A74  0EF8               	movlw	-8
 10007  014A76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10008  014A7C  0EF9               	movlw	-7
 10009  014A7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10010                           
 10011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 10012                           ;stkvar	_c @ sp[(-20)+12]
 10013  014A84  0EF9               	movlw	-7
 10014  014A86  BEE3               	btfsc	plusw1,7,c
 10015  014A88  D00F               	goto	l10568
 10016  014A8A  0EF9               	movlw	-7
 10017  014A8C  50E3               	movf	plusw1,w,c
 10018  014A8E  E108               	bnz	u10240
 10019  014A90  0EF8               	movlw	-8
 10020  014A92  006F FF8C  F025    	movff	plusw1,btemp
 10021  014A98  0E0A               	movlw	10
 10022  014A9A  5E25               	subwf	btemp^0,f,c
 10023  014A9C  A0D8               	btfss	status,0,c
 10024  014A9E  D004               	goto	l10568
 10025  014AA0                     u10240:
 10026                           
 10027                           ;stkvar	_c @ sp[(-20)+12]
 10028  014AA0  0EF8               	movlw	-8
 10029  014AA2  50E3               	movf	plusw1,w,c
 10030  014AA4  0F57               	addlw	87
 10031  014AA6  D003               	goto	L8
 10032  014AA8                     l10568:
 10033                           
 10034                           ;stkvar	_c @ sp[(-20)+12]
 10035  014AA8  0EF8               	movlw	-8
 10036  014AAA  50E3               	movf	plusw1,w,c
 10037  014AAC  0F30               	addlw	48
 10038  014AAE                     L8:
 10039  014AAE  6E2F               	movwf	(btemp+10)^0,c
 10040  014AB0  0EF9               	movlw	-7
 10041  014AB2  006F FF8C  F030    	movff	plusw1,btemp+11
 10042  014AB8  0E00               	movlw	0
 10043  014ABA  2230               	addwfc	(btemp+11)^0,f,c
 10044                           
 10045                           ;stkvar	_c @ sp[(-20)+12]
 10046  014ABC  0EF8               	movlw	-8
 10047  014ABE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10048  014AC4  0EF9               	movlw	-7
 10049  014AC6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10050  014ACC  0EBF               	movlw	191
 10051  014ACE  6E2F               	movwf	(btemp+10)^0,c
 10052  014AD0  0EFF               	movlw	255
 10053  014AD2  6E30               	movwf	(btemp+11)^0,c
 10054                           
 10055                           ;stkvar	_x @ sp[(-20)+-11]
 10056  014AD4  0EE1               	movlw	-31
 10057  014AD6  50E3               	movf	plusw1,w,c
 10058  014AD8  6E2D               	movwf	(btemp+8)^0,c
 10059  014ADA  6A2E               	clrf	(btemp+9)^0,c
 10060  014ADC  502F               	movf	(btemp+10)^0,w,c
 10061  014ADE  262D               	addwf	(btemp+8)^0,f,c
 10062  014AE0  5030               	movf	(btemp+11)^0,w,c
 10063  014AE2  222E               	addwfc	(btemp+9)^0,f,c
 10064  014AE4  502E               	movf	(btemp+9)^0,w,c
 10065  014AE6  E106               	bnz	u10250
 10066  014AE8  0E1A               	movlw	26
 10067  014AEA  5C2D               	subwf	(btemp+8)^0,w,c
 10068  014AEC  B0D8               	btfsc	status,0,c
 10069  014AEE  D002               	goto	u10250
 10070  014AF0  0E01               	movlw	1
 10071  014AF2  D001               	goto	u10260
 10072  014AF4                     u10250:
 10073  014AF4  0E00               	movlw	0
 10074  014AF6                     u10260:
 10075  014AF6  6E2F               	movwf	(btemp+10)^0,c
 10076  014AF8  6A30               	clrf	(btemp+11)^0,c
 10077                           
 10078                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10079  014AFA  0EEE               	movlw	-18
 10080  014AFC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10081  014B02  0EEF               	movlw	-17
 10082  014B04  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10083                           
 10084                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10085  014B0A  0EEE               	movlw	-18
 10086  014B0C  006F FF8C  F025    	movff	plusw1,btemp
 10087  014B12  0EEF               	movlw	-17
 10088  014B14  50E3               	movf	plusw1,w,c
 10089  014B16  1025               	iorwf	btemp^0,w,c
 10090  014B18  B4D8               	btfsc	status,2,c
 10091  014B1A  D041               	goto	l10584
 10092  014B1C  0E9F               	movlw	159
 10093  014B1E  6E2F               	movwf	(btemp+10)^0,c
 10094  014B20  0EFF               	movlw	255
 10095  014B22  6E30               	movwf	(btemp+11)^0,c
 10096                           
 10097                           ;stkvar	_c @ sp[(-20)+12]
 10098  014B24  0EF8               	movlw	-8
 10099  014B26  006F FF8C  F02D    	movff	plusw1,btemp+8
 10100  014B2C  0EF9               	movlw	-7
 10101  014B2E  006F FF8C  F02E    	movff	plusw1,btemp+9
 10102  014B34  0E20               	movlw	32
 10103  014B36  122D               	iorwf	(btemp+8)^0,f,c
 10104  014B38  0E00               	movlw	0
 10105  014B3A  122E               	iorwf	(btemp+9)^0,f,c
 10106  014B3C  502F               	movf	(btemp+10)^0,w,c
 10107  014B3E  262D               	addwf	(btemp+8)^0,f,c
 10108  014B40  5030               	movf	(btemp+11)^0,w,c
 10109  014B42  222E               	addwfc	(btemp+9)^0,f,c
 10110  014B44  502E               	movf	(btemp+9)^0,w,c
 10111  014B46  E106               	bnz	u10280
 10112  014B48  0E1A               	movlw	26
 10113  014B4A  5C2D               	subwf	(btemp+8)^0,w,c
 10114  014B4C  B0D8               	btfsc	status,0,c
 10115  014B4E  D002               	goto	u10280
 10116  014B50  0E01               	movlw	1
 10117  014B52  D001               	goto	u10290
 10118  014B54                     u10280:
 10119  014B54  0E00               	movlw	0
 10120  014B56                     u10290:
 10121  014B56  6E2F               	movwf	(btemp+10)^0,c
 10122  014B58  6A30               	clrf	(btemp+11)^0,c
 10123                           
 10124                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10125  014B5A  0EEC               	movlw	-20
 10126  014B5C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10127  014B62  0EED               	movlw	-19
 10128  014B64  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10129                           
 10130                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10131  014B6A  0EEC               	movlw	-20
 10132  014B6C  006F FF8C  F025    	movff	plusw1,btemp
 10133  014B72  0EED               	movlw	-19
 10134  014B74  50E3               	movf	plusw1,w,c
 10135  014B76  1025               	iorwf	btemp^0,w,c
 10136  014B78  B4D8               	btfsc	status,2,c
 10137  014B7A  D011               	goto	l10584
 10138                           
 10139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10140                           ;stkvar	_c @ sp[(-20)+12]
 10141  014B7C  0EF8               	movlw	-8
 10142  014B7E  006F FF8F FFE6     	movff	plusw1,postinc1
 10143  014B84  006F FF8F FFE6     	movff	plusw1,postinc1
 10144  014B8A  EC3F  F0C1         	call	_toupper	;wreg free
 10145                           
 10146                           ;stkvar	_c @ sp[(-20)+12]
 10147  014B8E  0EF8               	movlw	-8
 10148  014B90  0060  F097  FFE3   	movff	btemp,plusw1
 10149  014B96  0EF9               	movlw	-7
 10150  014B98  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10151  014B9E                     l10584:
 10152                           
 10153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10154                           ;stkvar	_c @ sp[(-20)+12]
 10155                           ;stkvar	_i @ sp[(-20)+14]
 10156  014B9E  0EFA               	movlw	-6
 10157  014BA0  006F FF8C  F02F    	movff	plusw1,btemp+10
 10158  014BA6  0EFB               	movlw	-5
 10159  014BA8  006F FF8C  F030    	movff	plusw1,btemp+11
 10160  014BAE  0E94               	movlw	low _dbuf
 10161  014BB0  242F               	addwf	(btemp+10)^0,w,c
 10162  014BB2  6ED9               	movwf	fsr2l,c
 10163  014BB4  0E03               	movlw	high _dbuf
 10164  014BB6  2030               	addwfc	(btemp+11)^0,w,c
 10165  014BB8  6EDA               	movwf	fsr2h,c
 10166  014BBA  0EF8               	movlw	-8
 10167  014BBC  006F FF8F FFDF     	movff	plusw1,indf2
 10168                           
 10169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10170                           ;stkvar	_p @ sp[(-20)+18]
 10171  014BC2  50E1               	movf	fsr1l,w,c
 10172  014BC4  0FFE               	addlw	-2
 10173  014BC6  6ED9               	movwf	fsr2l,c
 10174  014BC8  50E2               	movf	fsr1h,w,c
 10175  014BCA  6EDA               	movwf	fsr2h,c
 10176  014BCC  0EFF               	movlw	255
 10177  014BCE  22DA               	addwfc	fsr2h,f,c
 10178  014BD0  06DE               	decf	postinc2,f,c
 10179  014BD2  0E00               	movlw	0
 10180  014BD4  5ADD               	subwfb	postdec2,f,c
 10181                           
 10182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10183                           ;stkvar	_w @ sp[(-20)+16]
 10184  014BD6  50E1               	movf	fsr1l,w,c
 10185  014BD8  0FFC               	addlw	-4
 10186  014BDA  6ED9               	movwf	fsr2l,c
 10187  014BDC  50E2               	movf	fsr1h,w,c
 10188  014BDE  6EDA               	movwf	fsr2h,c
 10189  014BE0  0EFF               	movlw	255
 10190  014BE2  22DA               	addwfc	fsr2h,f,c
 10191  014BE4  06DE               	decf	postinc2,f,c
 10192  014BE6  0E00               	movlw	0
 10193  014BE8  5ADD               	subwfb	postdec2,f,c
 10194                           
 10195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10196  014BEA  0E04               	movlw	4
 10197  014BEC  6E30               	movwf	(btemp+11)^0,c
 10198                           
 10199                           ;stkvar	_n @ sp[(-20)+4]
 10200  014BEE  50E1               	movf	fsr1l,w,c
 10201  014BF0  0FF0               	addlw	-16
 10202  014BF2  6ED9               	movwf	fsr2l,c
 10203  014BF4  50E2               	movf	fsr1h,w,c
 10204  014BF6  6EDA               	movwf	fsr2h,c
 10205  014BF8  0EFF               	movlw	255
 10206  014BFA  22DA               	addwfc	fsr2h,f,c
 10207  014BFC  2830               	incf	(btemp+11)^0,w,c
 10208  014BFE  52DE               	movf	postinc2,f,c
 10209  014C00  D00F               	goto	u10310
 10210  014C02                     u10315:
 10211  014C02  52DE               	movf	postinc2,f,c
 10212  014C04  52DE               	movf	postinc2,f,c
 10213  014C06  52DE               	movf	postinc2,f,c
 10214  014C08  52DE               	movf	postinc2,f,c
 10215  014C0A  52DE               	movf	postinc2,f,c
 10216  014C0C  52DE               	movf	postinc2,f,c
 10217  014C0E  90D8               	bcf	status,0,c
 10218  014C10  32DD               	rrcf	postdec2,f,c
 10219  014C12  32DD               	rrcf	postdec2,f,c
 10220  014C14  32DD               	rrcf	postdec2,f,c
 10221  014C16  32DD               	rrcf	postdec2,f,c
 10222  014C18  32DD               	rrcf	postdec2,f,c
 10223  014C1A  32DD               	rrcf	postdec2,f,c
 10224  014C1C  32DD               	rrcf	postdec2,f,c
 10225  014C1E  32DE               	rrcf	postinc2,f,c
 10226  014C20                     u10310:
 10227  014C20  2EE8               	decfsz	wreg,f,c
 10228  014C22  D7EF               	goto	u10315
 10229  014C24                     l10592:
 10230                           
 10231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10232                           ;stkvar	_i @ sp[(-20)+14]
 10233  014C24  0EFB               	movlw	-5
 10234  014C26  BEE3               	btfsc	plusw1,7,c
 10235  014C28  D03A               	goto	u10360
 10236  014C2A  0EFB               	movlw	-5
 10237  014C2C  50E3               	movf	plusw1,w,c
 10238  014C2E  E108               	bnz	u10320
 10239  014C30  0EFA               	movlw	-6
 10240  014C32  006F FF8C  F025    	movff	plusw1,btemp
 10241  014C38  0E02               	movlw	2
 10242  014C3A  5E25               	subwf	btemp^0,f,c
 10243  014C3C  A0D8               	btfss	status,0,c
 10244  014C3E  D02F               	goto	u10360
 10245  014C40                     u10320:
 10246                           
 10247                           ;stkvar	_n @ sp[(-20)+4]
 10248  014C40  0EF0               	movlw	-16
 10249  014C42  50E3               	movf	plusw1,w,c
 10250  014C44  E115               	bnz	u10331
 10251  014C46  0EF1               	movlw	-15
 10252  014C48  50E3               	movf	plusw1,w,c
 10253  014C4A  E112               	bnz	u10331
 10254  014C4C  0EF2               	movlw	-14
 10255  014C4E  50E3               	movf	plusw1,w,c
 10256  014C50  E10F               	bnz	u10331
 10257  014C52  0EF3               	movlw	-13
 10258  014C54  50E3               	movf	plusw1,w,c
 10259  014C56  E10C               	bnz	u10331
 10260  014C58  0EF4               	movlw	-12
 10261  014C5A  50E3               	movf	plusw1,w,c
 10262  014C5C  E109               	bnz	u10331
 10263  014C5E  0EF5               	movlw	-11
 10264  014C60  50E3               	movf	plusw1,w,c
 10265  014C62  E106               	bnz	u10331
 10266  014C64  0EF6               	movlw	-10
 10267  014C66  50E3               	movf	plusw1,w,c
 10268  014C68  E103               	bnz	u10331
 10269  014C6A  0EF7               	movlw	-9
 10270  014C6C  50E3               	movf	plusw1,w,c
 10271  014C6E  A4D8               	btfss	status,2,c
 10272  014C70                     u10331:
 10273  014C70  D6EB               	goto	l10560
 10274                           
 10275                           ;stkvar	_p @ sp[(-20)+18]
 10276  014C72  0EFF               	movlw	-1
 10277  014C74  BEE3               	btfsc	plusw1,7,c
 10278  014C76  D007               	goto	u10340
 10279  014C78  0EFF               	movlw	-1
 10280  014C7A  50E3               	movf	plusw1,w,c
 10281  014C7C  E103               	bnz	u10341
 10282  014C7E  0EFE               	movlw	-2
 10283  014C80  04E3               	decf	plusw1,w,c
 10284  014C82  B0D8               	btfsc	status,0,c
 10285  014C84                     u10341:
 10286  014C84  D6E1               	goto	l10560
 10287  014C86                     u10340:
 10288                           
 10289                           ;stkvar	_w @ sp[(-20)+16]
 10290  014C86  0EFD               	movlw	-3
 10291  014C88  BEE3               	btfsc	plusw1,7,c
 10292  014C8A  D009               	goto	u10360
 10293  014C8C  0EFD               	movlw	-3
 10294  014C8E  50E3               	movf	plusw1,w,c
 10295  014C90  E104               	bnz	u10350
 10296  014C92  0EFC               	movlw	-4
 10297  014C94  04E3               	decf	plusw1,w,c
 10298  014C96  A0D8               	btfss	status,0,c
 10299  014C98  D002               	goto	u10360
 10300  014C9A                     u10350:
 10301  014C9A  B20E               	btfsc	_flags^0,1,c
 10302  014C9C  D6D5               	goto	l10560
 10303  014C9E                     u10360:
 10304                           
 10305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10306  014C9E  A80E               	btfss	_flags^0,4,c
 10307  014CA0  D036               	goto	l10608
 10308                           
 10309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10310                           ;stkvar	_i @ sp[(-20)+14]
 10311  014CA2  50E1               	movf	fsr1l,w,c
 10312  014CA4  0FFA               	addlw	-6
 10313  014CA6  6ED9               	movwf	fsr2l,c
 10314  014CA8  50E2               	movf	fsr1h,w,c
 10315  014CAA  6EDA               	movwf	fsr2h,c
 10316  014CAC  0EFF               	movlw	255
 10317  014CAE  22DA               	addwfc	fsr2h,f,c
 10318  014CB0  06DE               	decf	postinc2,f,c
 10319  014CB2  0E00               	movlw	0
 10320  014CB4  5ADD               	subwfb	postdec2,f,c
 10321                           
 10322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10323                           ;stkvar	_x @ sp[(-20)+-11]
 10324                           ;stkvar	_i @ sp[(-20)+14]
 10325  014CB6  0EFA               	movlw	-6
 10326  014CB8  006F FF8C  F02F    	movff	plusw1,btemp+10
 10327  014CBE  0EFB               	movlw	-5
 10328  014CC0  006F FF8C  F030    	movff	plusw1,btemp+11
 10329  014CC6  0E94               	movlw	low _dbuf
 10330  014CC8  242F               	addwf	(btemp+10)^0,w,c
 10331  014CCA  6ED9               	movwf	fsr2l,c
 10332  014CCC  0E03               	movlw	high _dbuf
 10333  014CCE  2030               	addwfc	(btemp+11)^0,w,c
 10334  014CD0  6EDA               	movwf	fsr2h,c
 10335  014CD2  0EE1               	movlw	-31
 10336  014CD4  006F FF8F FFDF     	movff	plusw1,indf2
 10337                           
 10338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10339                           ;stkvar	_i @ sp[(-20)+14]
 10340  014CDA  50E1               	movf	fsr1l,w,c
 10341  014CDC  0FFA               	addlw	-6
 10342  014CDE  6ED9               	movwf	fsr2l,c
 10343  014CE0  50E2               	movf	fsr1h,w,c
 10344  014CE2  6EDA               	movwf	fsr2h,c
 10345  014CE4  0EFF               	movlw	255
 10346  014CE6  22DA               	addwfc	fsr2h,f,c
 10347  014CE8  06DE               	decf	postinc2,f,c
 10348  014CEA  0E00               	movlw	0
 10349  014CEC  5ADD               	subwfb	postdec2,f,c
 10350                           
 10351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10352                           ;stkvar	_i @ sp[(-20)+14]
 10353  014CEE  0EFA               	movlw	-6
 10354  014CF0  006F FF8C  F02F    	movff	plusw1,btemp+10
 10355  014CF6  0EFB               	movlw	-5
 10356  014CF8  006F FF8C  F030    	movff	plusw1,btemp+11
 10357  014CFE  0E94               	movlw	low _dbuf
 10358  014D00  242F               	addwf	(btemp+10)^0,w,c
 10359  014D02  6ED9               	movwf	fsr2l,c
 10360  014D04  0E03               	movlw	high _dbuf
 10361  014D06  2030               	addwfc	(btemp+11)^0,w,c
 10362  014D08  6EDA               	movwf	fsr2h,c
 10363  014D0A  0E30               	movlw	48
 10364  014D0C  6EDF               	movwf	indf2,c
 10365  014D0E                     l10608:
 10366                           
 10367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10368                           ;stkvar	_w @ sp[(-20)+16]
 10369  014D0E  0EFC               	movlw	-4
 10370  014D10  006F FF8F FFE6     	movff	plusw1,postinc1
 10371  014D16  006F FF8F FFE6     	movff	plusw1,postinc1
 10372                           
 10373                           ;stkvar	_i @ sp[(-22)+14]
 10374  014D1C  0E94               	movlw	low _dbuf
 10375  014D1E  6E2F               	movwf	(btemp+10)^0,c
 10376  014D20  0E03               	movlw	high _dbuf
 10377  014D22  6E30               	movwf	(btemp+11)^0,c
 10378  014D24  0EF8               	movlw	-8
 10379  014D26  50E3               	movf	plusw1,w,c
 10380  014D28  262F               	addwf	(btemp+10)^0,f,c
 10381  014D2A  0EF9               	movlw	-7
 10382  014D2C  50E3               	movf	plusw1,w,c
 10383  014D2E  2230               	addwfc	(btemp+11)^0,f,c
 10384  014D30  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 10385  014D36  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 10386                           
 10387                           ;stkvar	_fp @ sp[(-24)+-2]
 10388  014D3C  0EE6               	movlw	-26
 10389  014D3E  006F FF8F FFE6     	movff	plusw1,postinc1
 10390  014D44  006F FF8F FFE6     	movff	plusw1,postinc1
 10391  014D4A  EC32  F0B9         	call	_pad	;wreg free
 10392                           
 10393                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10394  014D4E  0EE1               	movlw	225
 10395  014D50  26E1               	addwf	fsr1l,f,c
 10396  014D52  0EFF               	movlw	255
 10397  014D54  22E2               	addwfc	fsr1h,f,c
 10398  014D56  0012               	return		;funcret
 10399  014D58                     __end_of_xtoa:
 10400                           	opt callstack 0
 10401                           
 10402 ;; *************** function _toupper *****************
 10403 ;; Defined at:
 10404 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  c               2  [STACK] int 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  2  [STACK] int 
 10411 ;; Registers used:
 10412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/3
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10422 ;;Total ram usage:        0 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; Hardware stack levels required when called:    8
 10425 ;; This function calls:
 10426 ;;		_islower
 10427 ;; This function is called by:
 10428 ;;		_xtoa
 10429 ;; This function uses a reentrant model
 10430 ;;
 10431                           
 10432                           	psect	text43
 10433  01827E                     __ptext43:
 10434                           	opt callstack 0
 10435  01827E                     _toupper:
 10436                           	opt callstack 0
 10437                           
 10438                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10439  01827E  52E6               	movf	postinc1,f,c
 10440  018280  52E6               	movf	postinc1,f,c
 10441                           
 10442                           ;stkvar	_c @ sp[(-2)+-2]
 10443                           
 10444                           ;incstack = 0
 10445  018282  0EFC               	movlw	-4
 10446  018284  50E3               	movf	plusw1,w,c
 10447  018286  0F9F               	addlw	159
 10448  018288  6E2F               	movwf	(btemp+10)^0,c
 10449  01828A  0EFD               	movlw	-3
 10450  01828C  006F FF8C  F030    	movff	plusw1,btemp+11
 10451  018292  0EFF               	movlw	255
 10452  018294  2230               	addwfc	(btemp+11)^0,f,c
 10453  018296  5030               	movf	(btemp+11)^0,w,c
 10454  018298  E106               	bnz	u5070
 10455  01829A  0E1A               	movlw	26
 10456  01829C  5C2F               	subwf	(btemp+10)^0,w,c
 10457  01829E  B0D8               	btfsc	status,0,c
 10458  0182A0  D002               	goto	u5070
 10459  0182A2  0E01               	movlw	1
 10460  0182A4  D001               	goto	u5080
 10461  0182A6                     u5070:
 10462  0182A6  0E00               	movlw	0
 10463  0182A8                     u5080:
 10464  0182A8  6E2F               	movwf	(btemp+10)^0,c
 10465  0182AA  6A30               	clrf	(btemp+11)^0,c
 10466                           
 10467                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10468  0182AC  0EFE               	movlw	-2
 10469  0182AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10470  0182B4  0EFF               	movlw	-1
 10471  0182B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10472                           
 10473                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10474  0182BC  0EFE               	movlw	-2
 10475  0182BE  006F FF8C  F025    	movff	plusw1,btemp
 10476  0182C4  0EFF               	movlw	-1
 10477  0182C6  50E3               	movf	plusw1,w,c
 10478  0182C8  1025               	iorwf	btemp^0,w,c
 10479  0182CA  B4D8               	btfsc	status,2,c
 10480  0182CC  D00D               	goto	l6748
 10481                           
 10482                           ;stkvar	_c @ sp[(-2)+-2]
 10483  0182CE  0EFC               	movlw	-4
 10484  0182D0  006F FF8C  F025    	movff	plusw1,btemp
 10485  0182D6  0EFD               	movlw	-3
 10486  0182D8  006F FF8C  F026    	movff	plusw1,btemp+1
 10487  0182DE  0E5F               	movlw	95
 10488  0182E0  1625               	andwf	btemp^0,f,c
 10489  0182E2  0E00               	movlw	0
 10490  0182E4  1626               	andwf	(btemp+1)^0,f,c
 10491  0182E6  D008               	goto	l3083
 10492  0182E8                     l6748:
 10493                           
 10494                           ;stkvar	_c @ sp[(-2)+-2]
 10495  0182E8  0EFC               	movlw	-4
 10496  0182EA  006F FF8C  F025    	movff	plusw1,btemp
 10497  0182F0  0EFD               	movlw	-3
 10498  0182F2  006F FF8C  F026    	movff	plusw1,btemp+1
 10499  0182F8                     l3083:
 10500                           
 10501                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10502  0182F8  52E5               	movf	postdec1,f,c
 10503  0182FA  52E5               	movf	postdec1,f,c
 10504  0182FC  52E5               	movf	postdec1,f,c
 10505  0182FE  52E5               	movf	postdec1,f,c
 10506  018300  0012               	return		;funcret
 10507  018302                     __end_of_toupper:
 10508                           	opt callstack 0
 10509                           
 10510 ;; *************** function _islower *****************
 10511 ;; Defined at:
 10512 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  c               2  [STACK] int 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;		None
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  2  [STACK] int 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10530 ;;Total ram usage:        0 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:    7
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		_toupper
 10537 ;; This function uses a reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text44
 10541  018E78                     __ptext44:
 10542                           	opt callstack 0
 10543  018E78                     _islower:
 10544                           	opt callstack 15
 10545                           
 10546                           ;stkvar	_c @ sp[(0)+-2]
 10547                           
 10548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10549                           ;incstack = 0
 10550  018E78  0EFE               	movlw	-2
 10551  018E7A  50E3               	movf	plusw1,w,c
 10552  018E7C  0F9F               	addlw	159
 10553  018E7E  6E2F               	movwf	(btemp+10)^0,c
 10554  018E80  0EFF               	movlw	-1
 10555  018E82  006F FF8C  F030    	movff	plusw1,btemp+11
 10556  018E88  0EFF               	movlw	255
 10557  018E8A  2230               	addwfc	(btemp+11)^0,f,c
 10558  018E8C  5030               	movf	(btemp+11)^0,w,c
 10559  018E8E  E106               	bnz	u4760
 10560  018E90  0E1A               	movlw	26
 10561  018E92  5C2F               	subwf	(btemp+10)^0,w,c
 10562  018E94  B0D8               	btfsc	status,0,c
 10563  018E96  D002               	goto	u4760
 10564  018E98  0E01               	movlw	1
 10565  018E9A  D001               	goto	u4770
 10566  018E9C                     u4760:
 10567  018E9C  0E00               	movlw	0
 10568  018E9E                     u4770:
 10569  018E9E  6E25               	movwf	btemp^0,c
 10570  018EA0  6A26               	clrf	(btemp+1)^0,c
 10571                           
 10572                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10573  018EA2  52E5               	movf	postdec1,f,c
 10574  018EA4  52E5               	movf	postdec1,f,c
 10575  018EA6  0012               	return		;funcret
 10576  018EA8                     __end_of_islower:
 10577                           	opt callstack 0
 10578                           
 10579 ;; *************** function _isalpha *****************
 10580 ;; Defined at:
 10581 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  c               2  [STACK] int 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  2  [STACK] int 
 10588 ;; Registers used:
 10589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;Total ram usage:        0 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    7
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_xtoa
 10606 ;; This function uses a reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text45
 10610  018B3E                     __ptext45:
 10611                           	opt callstack 0
 10612  018B3E                     _isalpha:
 10613                           	opt callstack 16
 10614                           
 10615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10616                           ;incstack = 0
 10617  018B3E  0E9F               	movlw	159
 10618  018B40  6E2F               	movwf	(btemp+10)^0,c
 10619  018B42  0EFF               	movlw	255
 10620  018B44  6E30               	movwf	(btemp+11)^0,c
 10621                           
 10622                           ;stkvar	_c @ sp[(0)+-2]
 10623  018B46  0EFE               	movlw	-2
 10624  018B48  006F FF8C  F02D    	movff	plusw1,btemp+8
 10625  018B4E  0EFF               	movlw	-1
 10626  018B50  006F FF8C  F02E    	movff	plusw1,btemp+9
 10627  018B56  0E20               	movlw	32
 10628  018B58  122D               	iorwf	(btemp+8)^0,f,c
 10629  018B5A  0E00               	movlw	0
 10630  018B5C  122E               	iorwf	(btemp+9)^0,f,c
 10631  018B5E  502F               	movf	(btemp+10)^0,w,c
 10632  018B60  262D               	addwf	(btemp+8)^0,f,c
 10633  018B62  5030               	movf	(btemp+11)^0,w,c
 10634  018B64  222E               	addwfc	(btemp+9)^0,f,c
 10635  018B66  502E               	movf	(btemp+9)^0,w,c
 10636  018B68  E106               	bnz	u5050
 10637  018B6A  0E1A               	movlw	26
 10638  018B6C  5C2D               	subwf	(btemp+8)^0,w,c
 10639  018B6E  B0D8               	btfsc	status,0,c
 10640  018B70  D002               	goto	u5050
 10641  018B72  0E01               	movlw	1
 10642  018B74  D001               	goto	u5060
 10643  018B76                     u5050:
 10644  018B76  0E00               	movlw	0
 10645  018B78                     u5060:
 10646  018B78  6E25               	movwf	btemp^0,c
 10647  018B7A  6A26               	clrf	(btemp+1)^0,c
 10648                           
 10649                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10650  018B7C  52E5               	movf	postdec1,f,c
 10651  018B7E  52E5               	movf	postdec1,f,c
 10652  018B80  0012               	return		;funcret
 10653  018B82                     __end_of_isalpha:
 10654                           	opt callstack 0
 10655                           
 10656 ;; *************** function _strncmp *****************
 10657 ;; Defined at:
 10658 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  _l              2  [STACK] PTR const unsigned char 
 10661 ;;		 -> ct(3), 
 10662 ;;  _r              2  [STACK] PTR const unsigned char 
 10663 ;;		 -> STR_56(3), 
 10664 ;;  n               2  [STACK] unsigned int 
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;  r               2  [STACK] PTR const unsigned char 
 10667 ;;		 -> STR_56(3), 
 10668 ;;  l               2  [STACK] PTR const unsigned char 
 10669 ;;		 -> ct(3), 
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  2  [STACK] int 
 10672 ;; Registers used:
 10673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10683 ;;Total ram usage:        0 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    7
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_vfpfcnvrt
 10690 ;; This function uses a reentrant model
 10691 ;;
 10692                           
 10693                           	psect	text46
 10694  016492                     __ptext46:
 10695                           	opt callstack 0
 10696  016492                     _strncmp:
 10697                           	opt callstack 0
 10698                           
 10699                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10700  016492  52E6               	movf	postinc1,f,c
 10701  016494  52E6               	movf	postinc1,f,c
 10702  016496  52E6               	movf	postinc1,f,c
 10703  016498  52E6               	movf	postinc1,f,c
 10704                           
 10705                           ;stkvar	__l @ sp[(-4)+-2]
 10706                           
 10707                           ;incstack = 0
 10708  01649A  0EFA               	movlw	-6
 10709  01649C  006F FF8C  F02F    	movff	plusw1,btemp+10
 10710  0164A2  0EFB               	movlw	-5
 10711  0164A4  006F FF8C  F030    	movff	plusw1,btemp+11
 10712                           
 10713                           ;stkvar	_l @ sp[(-4)+2]
 10714  0164AA  0EFF               	movlw	-1
 10715  0164AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10716  0164B2  0EFE               	movlw	-2
 10717  0164B4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10718                           
 10719                           ;stkvar	__r @ sp[(-4)+-4]
 10720  0164BA  0EF8               	movlw	-8
 10721  0164BC  006F FF8C  F02F    	movff	plusw1,btemp+10
 10722  0164C2  0EF9               	movlw	-7
 10723  0164C4  006F FF8C  F030    	movff	plusw1,btemp+11
 10724                           
 10725                           ;stkvar	_r @ sp[(-4)+0]
 10726  0164CA  0EFD               	movlw	-3
 10727  0164CC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10728  0164D2  0EFC               	movlw	-4
 10729  0164D4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10730                           
 10731                           ;stkvar	_n @ sp[(-4)+-6]
 10732  0164DA  0EF6               	movlw	-10
 10733  0164DC  006F FF8C  F025    	movff	plusw1,btemp
 10734  0164E2  0E01               	movlw	1
 10735  0164E4  5E25               	subwf	btemp^0,f,c
 10736  0164E6  0EF6               	movlw	-10
 10737  0164E8  0060  F097  FFE3   	movff	btemp,plusw1
 10738  0164EE  0EF7               	movlw	-9
 10739  0164F0  006F FF8C  F025    	movff	plusw1,btemp
 10740  0164F6  0E00               	movlw	0
 10741  0164F8  5A25               	subwfb	btemp^0,f,c
 10742  0164FA  0EF7               	movlw	-9
 10743  0164FC  0060  F097  FFE3   	movff	btemp,plusw1
 10744  016502  0EF6               	movlw	-10
 10745  016504  28E3               	incf	plusw1,w,c
 10746  016506  E13F               	bnz	l7510
 10747  016508  0EF7               	movlw	-9
 10748  01650A  28E3               	incf	plusw1,w,c
 10749  01650C  A4D8               	btfss	status,2,c
 10750  01650E  D03B               	goto	l7510
 10751  016510  0E00               	movlw	0
 10752  016512  6E25               	movwf	btemp^0,c
 10753  016514  0E00               	movlw	0
 10754  016516  6E26               	movwf	(btemp+1)^0,c
 10755  016518  D09B               	goto	l3055
 10756  01651A                     l7508:
 10757                           
 10758                           ;stkvar	_l @ sp[(-4)+2]
 10759  01651A  0EFE               	movlw	-2
 10760  01651C  50E3               	movf	plusw1,w,c
 10761  01651E  0F01               	addlw	1
 10762  016520  6E25               	movwf	btemp^0,c
 10763  016522  0EFE               	movlw	-2
 10764  016524  0060  F097  FFE3   	movff	btemp,plusw1
 10765  01652A  6A25               	clrf	btemp^0,c
 10766  01652C  0EFF               	movlw	-1
 10767  01652E  50E3               	movf	plusw1,w,c
 10768  016530  2025               	addwfc	btemp^0,w,c
 10769  016532  6E25               	movwf	btemp^0,c
 10770  016534  0EFF               	movlw	-1
 10771  016536  0060  F097  FFE3   	movff	btemp,plusw1
 10772                           
 10773                           ;stkvar	_r @ sp[(-4)+0]
 10774  01653C  0EFC               	movlw	-4
 10775  01653E  50E3               	movf	plusw1,w,c
 10776  016540  0F01               	addlw	1
 10777  016542  6E25               	movwf	btemp^0,c
 10778  016544  0EFC               	movlw	-4
 10779  016546  0060  F097  FFE3   	movff	btemp,plusw1
 10780  01654C  6A25               	clrf	btemp^0,c
 10781  01654E  0EFD               	movlw	-3
 10782  016550  50E3               	movf	plusw1,w,c
 10783  016552  2025               	addwfc	btemp^0,w,c
 10784  016554  6E25               	movwf	btemp^0,c
 10785  016556  0EFD               	movlw	-3
 10786  016558  0060  F097  FFE3   	movff	btemp,plusw1
 10787                           
 10788                           ;stkvar	_n @ sp[(-4)+-6]
 10789  01655E  0EF6               	movlw	-10
 10790  016560  006F FF8C  F025    	movff	plusw1,btemp
 10791  016566  0E01               	movlw	1
 10792  016568  5E25               	subwf	btemp^0,f,c
 10793  01656A  0EF6               	movlw	-10
 10794  01656C  0060  F097  FFE3   	movff	btemp,plusw1
 10795  016572  0EF7               	movlw	-9
 10796  016574  006F FF8C  F025    	movff	plusw1,btemp
 10797  01657A  0E00               	movlw	0
 10798  01657C  5A25               	subwfb	btemp^0,f,c
 10799  01657E  0EF7               	movlw	-9
 10800  016580  0060  F097  FFE3   	movff	btemp,plusw1
 10801  016586                     l7510:
 10802                           
 10803                           ;stkvar	_l @ sp[(-4)+2]
 10804  016586  0EFE               	movlw	-2
 10805  016588  006F FF8F FFD9     	movff	plusw1,fsr2l
 10806  01658E  0EFF               	movlw	-1
 10807  016590  006F FF8F FFDA     	movff	plusw1,fsr2h
 10808  016596  50DF               	movf	indf2,w,c
 10809  016598  B4D8               	btfsc	status,2,c
 10810  01659A  D03B               	goto	u6610
 10811                           
 10812                           ;stkvar	_r @ sp[(-4)+0]
 10813  01659C  50E1               	movf	fsr1l,w,c
 10814  01659E  0FFC               	addlw	-4
 10815  0165A0  6ED9               	movwf	fsr2l,c
 10816  0165A2  50E2               	movf	fsr1h,w,c
 10817  0165A4  6EDA               	movwf	fsr2h,c
 10818  0165A6  0EFF               	movlw	255
 10819  0165A8  22DA               	addwfc	fsr2h,f,c
 10820  0165AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10821  0165B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10822  0165B6                     	if	0	;tblptru may be non-zero
 10823  0165B6                     	endif
 10824  0165B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10825  0165B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10826  0165B8  6EF8               	movwf	tblptru,c
 10827  0165BA                     	endif
 10828  0165BA  0008               	tblrd		*
 10829  0165BC  50F5               	movf	tablat,w,c
 10830  0165BE  0900               	iorlw	0
 10831  0165C0  B4D8               	btfsc	status,2,c
 10832  0165C2  D027               	goto	u6610
 10833                           
 10834                           ;stkvar	_n @ sp[(-4)+-6]
 10835  0165C4  0EF6               	movlw	-10
 10836  0165C6  006F FF8C  F025    	movff	plusw1,btemp
 10837  0165CC  0EF7               	movlw	-9
 10838  0165CE  50E3               	movf	plusw1,w,c
 10839  0165D0  1025               	iorwf	btemp^0,w,c
 10840  0165D2  B4D8               	btfsc	status,2,c
 10841  0165D4  D01E               	goto	u6610
 10842                           
 10843                           ;stkvar	_l @ sp[(-4)+2]
 10844  0165D6  0EFE               	movlw	-2
 10845  0165D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10846  0165DE  0EFF               	movlw	-1
 10847  0165E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10848  0165E6  50DF               	movf	indf2,w,c
 10849  0165E8  6E30               	movwf	(btemp+11)^0,c
 10850                           
 10851                           ;stkvar	_r @ sp[(-4)+0]
 10852  0165EA  50E1               	movf	fsr1l,w,c
 10853  0165EC  0FFC               	addlw	-4
 10854  0165EE  6ED9               	movwf	fsr2l,c
 10855  0165F0  50E2               	movf	fsr1h,w,c
 10856  0165F2  6EDA               	movwf	fsr2h,c
 10857  0165F4  0EFF               	movlw	255
 10858  0165F6  22DA               	addwfc	fsr2h,f,c
 10859  0165F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 10860  0165FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 10861  016604                     	if	0	;tblptru may be non-zero
 10862  016604                     	endif
 10863  016604                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10864  016604  0E00               	movlw	low (__mediumconst shr (0+16))
 10865  016606  6EF8               	movwf	tblptru,c
 10866  016608                     	endif
 10867  016608  0008               	tblrd		*
 10868  01660A  50F5               	movf	tablat,w,c
 10869  01660C  1830               	xorwf	(btemp+11)^0,w,c
 10870  01660E  B4D8               	btfsc	status,2,c
 10871  016610  D784               	goto	l7508
 10872  016612                     u6610:
 10873                           
 10874                           ;stkvar	_l @ sp[(-4)+2]
 10875  016612  0EFE               	movlw	-2
 10876  016614  006F FF8F FFD9     	movff	plusw1,fsr2l
 10877  01661A  0EFF               	movlw	-1
 10878  01661C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10879  016622  50DF               	movf	indf2,w,c
 10880  016624  6E25               	movwf	btemp^0,c
 10881  016626  6A26               	clrf	(btemp+1)^0,c
 10882                           
 10883                           ;stkvar	_r @ sp[(-4)+0]
 10884  016628  50E1               	movf	fsr1l,w,c
 10885  01662A  0FFC               	addlw	-4
 10886  01662C  6ED9               	movwf	fsr2l,c
 10887  01662E  50E2               	movf	fsr1h,w,c
 10888  016630  6EDA               	movwf	fsr2h,c
 10889  016632  0EFF               	movlw	255
 10890  016634  22DA               	addwfc	fsr2h,f,c
 10891  016636  006F FF7B FFF6     	movff	postinc2,tblptrl
 10892  01663C  006F FF77 FFF7     	movff	postdec2,tblptrh
 10893  016642                     	if	0	;tblptru may be non-zero
 10894  016642                     	endif
 10895  016642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10896  016642  0E00               	movlw	low (__mediumconst shr (0+16))
 10897  016644  6EF8               	movwf	tblptru,c
 10898  016646                     	endif
 10899  016646  0008               	tblrd		*
 10900  016648  50F5               	movf	tablat,w,c
 10901  01664A  5E25               	subwf	btemp^0,f,c
 10902  01664C  0E00               	movlw	0
 10903  01664E  5A26               	subwfb	(btemp+1)^0,f,c
 10904  016650                     l3055:
 10905                           
 10906                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10907  016650  0EF6               	movlw	246
 10908  016652  26E1               	addwf	fsr1l,f,c
 10909  016654  0EFF               	movlw	255
 10910  016656  22E2               	addwfc	fsr1h,f,c
 10911  016658  0012               	return		;funcret
 10912  01665A                     __end_of_strncmp:
 10913                           	opt callstack 0
 10914                           
 10915 ;; *************** function _stoa *****************
 10916 ;; Defined at:
 10917 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10920 ;;		 -> f(6), NULL(0), 
 10921 ;;  s               2  [STACK] PTR unsigned char 
 10922 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10923 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10924 ;;		 -> STR_3(6), V(188), 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  nuls            7  [STACK] unsigned char [7]
 10927 ;;  l               2  [STACK] int 
 10928 ;;  p               2  [STACK] int 
 10929 ;;  cp              2  [STACK] PTR unsigned char 
 10930 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10931 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10932 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10933 ;;  w               2  [STACK] int 
 10934 ;;  i               2  [STACK] int 
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  2  [STACK] int 
 10937 ;; Registers used:
 10938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10948 ;;Total ram usage:        0 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:   10
 10951 ;; This function calls:
 10952 ;;		_fputc
 10953 ;;		_strlen
 10954 ;; This function is called by:
 10955 ;;		_vfpfcnvrt
 10956 ;; This function uses a reentrant model
 10957 ;;
 10958                           
 10959                           	psect	text47
 10960  01568A                     __ptext47:
 10961                           	opt callstack 0
 10962  01568A                     _stoa:
 10963                           	opt callstack 0
 10964                           
 10965                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10966  01568A  0E11               	movlw	17
 10967  01568C  26E1               	addwf	fsr1l,f,c
 10968  01568E  0E00               	movlw	0
 10969  015690  22E2               	addwfc	fsr1h,f,c
 10970                           
 10971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10972                           
 10973                           ;incstack = 0
 10974  015692  EE20  F0EB         	lfsr	2,stoa@F1166
 10975                           
 10976                           ;stkvar	_nuls @ sp[(-17)+0]
 10977  015696  0E07               	movlw	7
 10978  015698  6E25               	movwf	btemp^0,c
 10979  01569A  0EEF               	movlw	-17
 10980  01569C                     us1010999:
 10981  01569C  006F FF7B FFE3     	movff	postinc2,plusw1
 10982  0156A2  28E8               	incf	wreg,w,c
 10983  0156A4  2E25               	decfsz	btemp^0,f,c
 10984  0156A6  D7FA               	bra	us1010999
 10985                           
 10986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10987                           ;stkvar	_s @ sp[(-17)+-4]
 10988  0156A8  0EEB               	movlw	-21
 10989  0156AA  006F FF8C  F02F    	movff	plusw1,btemp+10
 10990  0156B0  0EEC               	movlw	-20
 10991  0156B2  006F FF8C  F030    	movff	plusw1,btemp+11
 10992                           
 10993                           ;stkvar	_cp @ sp[(-17)+11]
 10994  0156B8  0EFB               	movlw	-5
 10995  0156BA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10996  0156C0  0EFA               	movlw	-6
 10997  0156C2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10998                           
 10999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 11000                           ;stkvar	_cp @ sp[(-17)+11]
 11001  0156C8  0EFA               	movlw	-6
 11002  0156CA  006F FF8C  F025    	movff	plusw1,btemp
 11003  0156D0  0EFB               	movlw	-5
 11004  0156D2  50E3               	movf	plusw1,w,c
 11005  0156D4  1025               	iorwf	btemp^0,w,c
 11006  0156D6  A4D8               	btfss	status,2,c
 11007  0156D8  D00E               	goto	l10496
 11008                           
 11009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11010                           ;stkvar	_nuls @ sp[(-17)+0]
 11011  0156DA  0EEF               	movlw	239
 11012  0156DC  24E1               	addwf	fsr1l,w,c
 11013  0156DE  6E2F               	movwf	(btemp+10)^0,c
 11014  0156E0  0EFF               	movlw	255
 11015  0156E2  20E2               	addwfc	fsr1h,w,c
 11016  0156E4  6E30               	movwf	(btemp+11)^0,c
 11017                           
 11018                           ;stkvar	_cp @ sp[(-17)+11]
 11019  0156E6  0EFB               	movlw	-5
 11020  0156E8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11021  0156EE  0EFA               	movlw	-6
 11022  0156F0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11023  0156F6                     l10496:
 11024                           
 11025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11026                           ;stkvar	_cp @ sp[(-17)+11]
 11027  0156F6  0EFA               	movlw	-6
 11028  0156F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11029  0156FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11030  015704  EC84  F0BF         	call	_strlen	;wreg free
 11031                           
 11032                           ;stkvar	_l @ sp[(-17)+7]
 11033  015708  0EF6               	movlw	-10
 11034  01570A  0060  F097  FFE3   	movff	btemp,plusw1
 11035  015710  0EF7               	movlw	-9
 11036  015712  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11037                           
 11038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11039                           ;stkvar	_p @ sp[(-17)+9]
 11040  015718  0EF8               	movlw	-8
 11041  01571A  0060  F033  FFE3   	movff	_prec,plusw1
 11042  015720  0EF9               	movlw	-7
 11043  015722  0060  F037  FFE3   	movff	_prec+1,plusw1
 11044                           
 11045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11046                           ;stkvar	_p @ sp[(-17)+9]
 11047  015728  0EF9               	movlw	-7
 11048  01572A  BEE3               	btfsc	plusw1,7,c
 11049  01572C  D023               	goto	l2129
 11050                           
 11051                           ;stkvar	_l @ sp[(-17)+7]
 11052                           ;stkvar	_p @ sp[(-17)+9]
 11053  01572E  50E1               	movf	fsr1l,w,c
 11054  015730  0FF8               	addlw	-8
 11055  015732  6ED9               	movwf	fsr2l,c
 11056  015734  50E2               	movf	fsr1h,w,c
 11057  015736  6EDA               	movwf	fsr2h,c
 11058  015738  0EFF               	movlw	255
 11059  01573A  22DA               	addwfc	fsr2h,f,c
 11060  01573C  0EF6               	movlw	-10
 11061  01573E  50E3               	movf	plusw1,w,c
 11062  015740  5CDE               	subwf	postinc2,w,c
 11063  015742  50DE               	movf	postinc2,w,c
 11064  015744  0A80               	xorlw	128
 11065  015746  6E25               	movwf	btemp^0,c
 11066  015748  0EF7               	movlw	-9
 11067  01574A  50E3               	movf	plusw1,w,c
 11068  01574C  0A80               	xorlw	128
 11069  01574E  5825               	subwfb	btemp^0,w,c
 11070  015750  B0D8               	btfsc	status,0,c
 11071  015752  D010               	goto	l2129
 11072                           
 11073                           ;stkvar	_p @ sp[(-17)+9]
 11074                           ;stkvar	_l @ sp[(-17)+7]
 11075  015754  0EF8               	movlw	-8
 11076  015756  006F FF8C  F025    	movff	plusw1,btemp
 11077  01575C  0EF6               	movlw	-10
 11078  01575E  0060  F097  FFE3   	movff	btemp,plusw1
 11079  015764  0EF9               	movlw	-7
 11080  015766  006F FF8C  F025    	movff	plusw1,btemp
 11081  01576C  0EF7               	movlw	-9
 11082  01576E  0060  F097  FFE3   	movff	btemp,plusw1
 11083  015774                     l2129:
 11084                           
 11085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11086                           ;stkvar	_l @ sp[(-17)+7]
 11087                           ;stkvar	_p @ sp[(-17)+9]
 11088  015774  0EF6               	movlw	-10
 11089  015776  006F FF8C  F025    	movff	plusw1,btemp
 11090  01577C  0EF8               	movlw	-8
 11091  01577E  0060  F097  FFE3   	movff	btemp,plusw1
 11092  015784  0EF7               	movlw	-9
 11093  015786  006F FF8C  F025    	movff	plusw1,btemp
 11094  01578C  0EF9               	movlw	-7
 11095  01578E  0060  F097  FFE3   	movff	btemp,plusw1
 11096                           
 11097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11098                           ;stkvar	_w @ sp[(-17)+13]
 11099  015794  0EFC               	movlw	-4
 11100  015796  0060  F02B  FFE3   	movff	_width,plusw1
 11101  01579C  0EFD               	movlw	-3
 11102  01579E  0060  F02F  FFE3   	movff	_width+1,plusw1
 11103                           
 11104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11105  0157A4  A00E               	btfss	_flags^0,0,c
 11106  0157A6  D01F               	goto	l10516
 11107  0157A8  D031               	goto	u10150
 11108  0157AA                     l10512:
 11109                           
 11110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11111                           ;stkvar	_fp @ sp[(-17)+-2]
 11112  0157AA  0EED               	movlw	-19
 11113  0157AC  006F FF8F FFE6     	movff	plusw1,postinc1
 11114  0157B2  006F FF8F FFE6     	movff	plusw1,postinc1
 11115  0157B8  0E20               	movlw	32
 11116  0157BA  6EE6               	movwf	postinc1,c
 11117  0157BC  0E00               	movlw	0
 11118  0157BE  6EE6               	movwf	postinc1,c
 11119  0157C0  EC14  F0B8         	call	_fputc	;wreg free
 11120                           
 11121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11122                           ;stkvar	_l @ sp[(-17)+7]
 11123  0157C4  0EF6               	movlw	-10
 11124  0157C6  50E3               	movf	plusw1,w,c
 11125  0157C8  0F01               	addlw	1
 11126  0157CA  6E25               	movwf	btemp^0,c
 11127  0157CC  0EF6               	movlw	-10
 11128  0157CE  0060  F097  FFE3   	movff	btemp,plusw1
 11129  0157D4  6A25               	clrf	btemp^0,c
 11130  0157D6  0EF7               	movlw	-9
 11131  0157D8  50E3               	movf	plusw1,w,c
 11132  0157DA  2025               	addwfc	btemp^0,w,c
 11133  0157DC  6E25               	movwf	btemp^0,c
 11134  0157DE  0EF7               	movlw	-9
 11135  0157E0  0060  F097  FFE3   	movff	btemp,plusw1
 11136  0157E6                     l10516:
 11137                           
 11138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11139                           ;stkvar	_w @ sp[(-17)+13]
 11140                           ;stkvar	_l @ sp[(-17)+7]
 11141  0157E6  50E1               	movf	fsr1l,w,c
 11142  0157E8  0FF6               	addlw	-10
 11143  0157EA  6ED9               	movwf	fsr2l,c
 11144  0157EC  50E2               	movf	fsr1h,w,c
 11145  0157EE  6EDA               	movwf	fsr2h,c
 11146  0157F0  0EFF               	movlw	255
 11147  0157F2  22DA               	addwfc	fsr2h,f,c
 11148  0157F4  0EFC               	movlw	-4
 11149  0157F6  50E3               	movf	plusw1,w,c
 11150  0157F8  5CDE               	subwf	postinc2,w,c
 11151  0157FA  50DE               	movf	postinc2,w,c
 11152  0157FC  0A80               	xorlw	128
 11153  0157FE  6E25               	movwf	btemp^0,c
 11154  015800  0EFD               	movlw	-3
 11155  015802  50E3               	movf	plusw1,w,c
 11156  015804  0A80               	xorlw	128
 11157  015806  5825               	subwfb	btemp^0,w,c
 11158  015808  A0D8               	btfss	status,0,c
 11159  01580A  D7CF               	goto	l10512
 11160  01580C                     u10150:
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11163                           ;stkvar	_i @ sp[(-17)+15]
 11164  01580C  0EFE               	movlw	-2
 11165  01580E  6AE3               	clrf	plusw1,c
 11166  015810  0EFF               	movlw	-1
 11167  015812  6AE3               	clrf	plusw1,c
 11168                           
 11169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11170  015814  D045               	goto	l10526
 11171  015816                     l10520:
 11172                           
 11173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11174                           ;stkvar	_fp @ sp[(-17)+-2]
 11175  015816  0EED               	movlw	-19
 11176  015818  006F FF8F FFE6     	movff	plusw1,postinc1
 11177  01581E  006F FF8F FFE6     	movff	plusw1,postinc1
 11178                           
 11179                           ;stkvar	_cp @ sp[(-19)+11]
 11180  015824  0EF8               	movlw	-8
 11181  015826  006F FF8F FFF6     	movff	plusw1,tblptrl
 11182  01582C  0EF9               	movlw	-7
 11183  01582E  006F FF8F FFF7     	movff	plusw1,tblptrh
 11184  015834  0E00               	movlw	low (__mediumconst shr (0+16))
 11185  015836  6EF8               	movwf	tblptru,c
 11186  015838  0E1F               	movlw	(high __ramtop+-1)
 11187  01583A  64F7               	cpfsgt	tblptrh,c
 11188  01583C  D003               	bra	u10167
 11189  01583E  0008               	tblrd		*
 11190  015840  50F5               	movf	tablat,w,c
 11191  015842  D007               	bra	u10160
 11192  015844                     u10167:
 11193  015844  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11194  01584A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11195  015850  50EF               	movf	indf0,w,c
 11196  015852                     u10160:
 11197  015852  6EE6               	movwf	postinc1,c
 11198  015854  0E00               	movlw	0
 11199  015856  6EE6               	movwf	postinc1,c
 11200  015858  EC14  F0B8         	call	_fputc	;wreg free
 11201                           
 11202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11203                           ;stkvar	_cp @ sp[(-17)+11]
 11204  01585C  0EFA               	movlw	-6
 11205  01585E  50E3               	movf	plusw1,w,c
 11206  015860  0F01               	addlw	1
 11207  015862  6E25               	movwf	btemp^0,c
 11208  015864  0EFA               	movlw	-6
 11209  015866  0060  F097  FFE3   	movff	btemp,plusw1
 11210  01586C  6A25               	clrf	btemp^0,c
 11211  01586E  0EFB               	movlw	-5
 11212  015870  50E3               	movf	plusw1,w,c
 11213  015872  2025               	addwfc	btemp^0,w,c
 11214  015874  6E25               	movwf	btemp^0,c
 11215  015876  0EFB               	movlw	-5
 11216  015878  0060  F097  FFE3   	movff	btemp,plusw1
 11217                           
 11218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11219                           ;stkvar	_i @ sp[(-17)+15]
 11220  01587E  0EFE               	movlw	-2
 11221  015880  50E3               	movf	plusw1,w,c
 11222  015882  0F01               	addlw	1
 11223  015884  6E25               	movwf	btemp^0,c
 11224  015886  0EFE               	movlw	-2
 11225  015888  0060  F097  FFE3   	movff	btemp,plusw1
 11226  01588E  6A25               	clrf	btemp^0,c
 11227  015890  0EFF               	movlw	-1
 11228  015892  50E3               	movf	plusw1,w,c
 11229  015894  2025               	addwfc	btemp^0,w,c
 11230  015896  6E25               	movwf	btemp^0,c
 11231  015898  0EFF               	movlw	-1
 11232  01589A  0060  F097  FFE3   	movff	btemp,plusw1
 11233  0158A0                     l10526:
 11234                           
 11235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11236                           ;stkvar	_p @ sp[(-17)+9]
 11237                           ;stkvar	_i @ sp[(-17)+15]
 11238  0158A0  50E1               	movf	fsr1l,w,c
 11239  0158A2  0FFE               	addlw	-2
 11240  0158A4  6ED9               	movwf	fsr2l,c
 11241  0158A6  50E2               	movf	fsr1h,w,c
 11242  0158A8  6EDA               	movwf	fsr2h,c
 11243  0158AA  0EFF               	movlw	255
 11244  0158AC  22DA               	addwfc	fsr2h,f,c
 11245  0158AE  0EF8               	movlw	-8
 11246  0158B0  50E3               	movf	plusw1,w,c
 11247  0158B2  5CDE               	subwf	postinc2,w,c
 11248  0158B4  50DE               	movf	postinc2,w,c
 11249  0158B6  0A80               	xorlw	128
 11250  0158B8  6E25               	movwf	btemp^0,c
 11251  0158BA  0EF9               	movlw	-7
 11252  0158BC  50E3               	movf	plusw1,w,c
 11253  0158BE  0A80               	xorlw	128
 11254  0158C0  5825               	subwfb	btemp^0,w,c
 11255  0158C2  A0D8               	btfss	status,0,c
 11256  0158C4  D7A8               	goto	l10520
 11257                           
 11258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11259  0158C6  B00E               	btfsc	_flags^0,0,c
 11260  0158C8  D01F               	goto	l10534
 11261  0158CA  D031               	goto	u10190
 11262  0158CC                     l10530:
 11263                           
 11264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11265                           ;stkvar	_fp @ sp[(-17)+-2]
 11266  0158CC  0EED               	movlw	-19
 11267  0158CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11268  0158D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11269  0158DA  0E20               	movlw	32
 11270  0158DC  6EE6               	movwf	postinc1,c
 11271  0158DE  0E00               	movlw	0
 11272  0158E0  6EE6               	movwf	postinc1,c
 11273  0158E2  EC14  F0B8         	call	_fputc	;wreg free
 11274                           
 11275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11276                           ;stkvar	_l @ sp[(-17)+7]
 11277  0158E6  0EF6               	movlw	-10
 11278  0158E8  50E3               	movf	plusw1,w,c
 11279  0158EA  0F01               	addlw	1
 11280  0158EC  6E25               	movwf	btemp^0,c
 11281  0158EE  0EF6               	movlw	-10
 11282  0158F0  0060  F097  FFE3   	movff	btemp,plusw1
 11283  0158F6  6A25               	clrf	btemp^0,c
 11284  0158F8  0EF7               	movlw	-9
 11285  0158FA  50E3               	movf	plusw1,w,c
 11286  0158FC  2025               	addwfc	btemp^0,w,c
 11287  0158FE  6E25               	movwf	btemp^0,c
 11288  015900  0EF7               	movlw	-9
 11289  015902  0060  F097  FFE3   	movff	btemp,plusw1
 11290  015908                     l10534:
 11291                           
 11292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11293                           ;stkvar	_w @ sp[(-17)+13]
 11294                           ;stkvar	_l @ sp[(-17)+7]
 11295  015908  50E1               	movf	fsr1l,w,c
 11296  01590A  0FF6               	addlw	-10
 11297  01590C  6ED9               	movwf	fsr2l,c
 11298  01590E  50E2               	movf	fsr1h,w,c
 11299  015910  6EDA               	movwf	fsr2h,c
 11300  015912  0EFF               	movlw	255
 11301  015914  22DA               	addwfc	fsr2h,f,c
 11302  015916  0EFC               	movlw	-4
 11303  015918  50E3               	movf	plusw1,w,c
 11304  01591A  5CDE               	subwf	postinc2,w,c
 11305  01591C  50DE               	movf	postinc2,w,c
 11306  01591E  0A80               	xorlw	128
 11307  015920  6E25               	movwf	btemp^0,c
 11308  015922  0EFD               	movlw	-3
 11309  015924  50E3               	movf	plusw1,w,c
 11310  015926  0A80               	xorlw	128
 11311  015928  5825               	subwfb	btemp^0,w,c
 11312  01592A  A0D8               	btfss	status,0,c
 11313  01592C  D7CF               	goto	l10530
 11314  01592E                     u10190:
 11315                           
 11316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11317                           ;stkvar	_l @ sp[(-17)+7]
 11318  01592E  0EF6               	movlw	-10
 11319  015930  006F FF8C  F025    	movff	plusw1,btemp
 11320  015936  0EF7               	movlw	-9
 11321  015938  006F FF8C  F026    	movff	plusw1,btemp+1
 11322                           
 11323                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11324  01593E  0EEB               	movlw	235
 11325  015940  26E1               	addwf	fsr1l,f,c
 11326  015942  0EFF               	movlw	255
 11327  015944  22E2               	addwfc	fsr1h,f,c
 11328  015946  0012               	return		;funcret
 11329  015948                     __end_of_stoa:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function _efgtoa *****************
 11333 ;; Defined at:
 11334 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11337 ;;		 -> f(6), NULL(0), 
 11338 ;;  f               4  [STACK] PTR struct _IO_FILE
 11339 ;;  c               1  [STACK] unsigned char 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  u               4  [STACK] unsigned char 
 11342 ;;  g               4  [STACK] unsigned char 
 11343 ;;  l               4  [STACK] unsigned char 
 11344 ;;  h               4  [STACK] unsigned char 
 11345 ;;  ou              4  [STACK] unsigned char 
 11346 ;;  n               2  [STACK] int 
 11347 ;;  e               2  [STACK] int 
 11348 ;;  i               2  [STACK] int 
 11349 ;;  w               2  [STACK] int 
 11350 ;;  p               2  [STACK] int 
 11351 ;;  sign            2  [STACK] int 
 11352 ;;  d               2  [STACK] int 
 11353 ;;  ne              2  [STACK] int 
 11354 ;;  m               2  [STACK] int 
 11355 ;;  pp              2  [STACK] int 
 11356 ;;  t               2  [STACK] int 
 11357 ;;  mode            1  [STACK] unsigned char 
 11358 ;;  nmode           1  [STACK] unsigned char 
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  2  [STACK] int 
 11361 ;; Registers used:
 11362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11372 ;;Total ram usage:        0 bytes
 11373 ;; Hardware stack levels used:    1
 11374 ;; Hardware stack levels required when called:   12
 11375 ;; This function calls:
 11376 ;;		___awdiv
 11377 ;;		___awmod
 11378 ;;		___fladd
 11379 ;;		___fldiv
 11380 ;;		___fleq
 11381 ;;		___flge
 11382 ;;		___flmul
 11383 ;;		___flneg
 11384 ;;		___flsub
 11385 ;;		___fltol
 11386 ;;		___fpclassifyf
 11387 ;;		_floorf
 11388 ;;		_isupper
 11389 ;;		_pad
 11390 ;;		_strcpy
 11391 ;;		_tolower
 11392 ;; This function is called by:
 11393 ;;		_vfpfcnvrt
 11394 ;; This function uses a reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text48
 11398  010000                     __ptext48:
 11399                           	opt callstack 0
 11400  010000                     _efgtoa:
 11401                           	opt callstack 0
 11402                           
 11403                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11404  010000  0E38               	movlw	56
 11405  010002  26E1               	addwf	fsr1l,f,c
 11406  010004  0E00               	movlw	0
 11407  010006  22E2               	addwfc	fsr1h,f,c
 11408                           
 11409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11410                           ;stkvar	_sign @ sp[(-56)+42]
 11411                           
 11412                           ;incstack = 0
 11413  010008  0EF2               	movlw	-14
 11414  01000A  6AE3               	clrf	plusw1,c
 11415  01000C  0EF3               	movlw	-13
 11416  01000E  6AE3               	clrf	plusw1,c
 11417                           
 11418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11419                           ;stkvar	_f @ sp[(-56)+-6]
 11420  010010  0EC2               	movlw	-62
 11421  010012  006F FF8C  F02D    	movff	plusw1,btemp+8
 11422  010018  0EC3               	movlw	-61
 11423  01001A  006F FF8C  F02E    	movff	plusw1,btemp+9
 11424  010020  0EC4               	movlw	-60
 11425  010022  006F FF8C  F02F    	movff	plusw1,btemp+10
 11426  010028  0EC5               	movlw	-59
 11427  01002A  006F FF8C  F030    	movff	plusw1,btemp+11
 11428                           
 11429                           ;stkvar	_g @ sp[(-56)+16]
 11430  010030  0ED8               	movlw	-40
 11431  010032  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11432  010038  0ED9               	movlw	-39
 11433  01003A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11434  010040  0EDA               	movlw	-38
 11435  010042  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11436  010048  0EDB               	movlw	-37
 11437  01004A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11438                           
 11439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11440                           ;stkvar	_g @ sp[(-56)+16]
 11441  010050  0EDB               	movlw	-37
 11442  010052  AEE3               	btfss	plusw1,7,c
 11443  010054  D02B               	goto	l10194
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11446  010056  0E01               	movlw	1
 11447  010058  6E2F               	movwf	(btemp+10)^0,c
 11448  01005A  0E00               	movlw	0
 11449  01005C  6E30               	movwf	(btemp+11)^0,c
 11450                           
 11451                           ;stkvar	_sign @ sp[(-56)+42]
 11452  01005E  0EF2               	movlw	-14
 11453  010060  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11454  010066  0EF3               	movlw	-13
 11455  010068  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11456                           
 11457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11458                           ;stkvar	_g @ sp[(-56)+16]
 11459  01006E  0ED8               	movlw	-40
 11460  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11461  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11462  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11463  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11464  010088  ECEF  F0C4         	call	___flneg	;wreg free
 11465                           
 11466                           ;stkvar	_g @ sp[(-56)+16]
 11467  01008C  0ED8               	movlw	-40
 11468  01008E  0060  F097  FFE3   	movff	btemp,plusw1
 11469  010094  0ED9               	movlw	-39
 11470  010096  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11471  01009C  0EDA               	movlw	-38
 11472  01009E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11473  0100A4  0EDB               	movlw	-37
 11474  0100A6  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11475  0100AC                     l10194:
 11476                           
 11477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11478                           ;stkvar	_n @ sp[(-56)+32]
 11479  0100AC  0EE8               	movlw	-24
 11480  0100AE  6AE3               	clrf	plusw1,c
 11481  0100B0  0EE9               	movlw	-23
 11482  0100B2  6AE3               	clrf	plusw1,c
 11483                           
 11484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11485                           ;stkvar	_w @ sp[(-56)+38]
 11486  0100B4  0EEE               	movlw	-18
 11487  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 11488  0100BC  0EEF               	movlw	-17
 11489  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11490                           
 11491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11492                           ;stkvar	_sign @ sp[(-56)+42]
 11493  0100C4  0EF2               	movlw	-14
 11494  0100C6  006F FF8C  F025    	movff	plusw1,btemp
 11495  0100CC  0EF3               	movlw	-13
 11496  0100CE  50E3               	movf	plusw1,w,c
 11497  0100D0  1025               	iorwf	btemp^0,w,c
 11498  0100D2  A4D8               	btfss	status,2,c
 11499  0100D4  D002               	goto	u9600
 11500  0100D6  A40E               	btfss	_flags^0,2,c
 11501  0100D8  D036               	goto	l10214
 11502  0100DA                     u9600:
 11503                           
 11504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11505                           ;stkvar	_sign @ sp[(-56)+42]
 11506  0100DA  0EF2               	movlw	-14
 11507  0100DC  006F FF8C  F025    	movff	plusw1,btemp
 11508  0100E2  0EF3               	movlw	-13
 11509  0100E4  50E3               	movf	plusw1,w,c
 11510  0100E6  1025               	iorwf	btemp^0,w,c
 11511  0100E8  A4D8               	btfss	status,2,c
 11512  0100EA  D002               	goto	l10206
 11513  0100EC  0E2B               	movlw	43
 11514  0100EE  D001               	goto	L9
 11515  0100F0                     l10206:
 11516  0100F0  0E2D               	movlw	45
 11517  0100F2                     L9:
 11518  0100F2  6E2F               	movwf	(btemp+10)^0,c
 11519  0100F4  0E00               	movlw	0
 11520  0100F6  6E30               	movwf	(btemp+11)^0,c
 11521                           
 11522                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11523  0100F8  0ED2               	movlw	-46
 11524  0100FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11525  010100  0ED3               	movlw	-45
 11526  010102  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11527                           
 11528                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11529  010108  0ED2               	movlw	-46
 11530  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11531                           
 11532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11533                           ;stkvar	_n @ sp[(-56)+32]
 11534  010110  0EE8               	movlw	-24
 11535  010112  50E3               	movf	plusw1,w,c
 11536  010114  0F01               	addlw	1
 11537  010116  6E25               	movwf	btemp^0,c
 11538  010118  0EE8               	movlw	-24
 11539  01011A  0060  F097  FFE3   	movff	btemp,plusw1
 11540  010120  6A25               	clrf	btemp^0,c
 11541  010122  0EE9               	movlw	-23
 11542  010124  50E3               	movf	plusw1,w,c
 11543  010126  2025               	addwfc	btemp^0,w,c
 11544  010128  6E25               	movwf	btemp^0,c
 11545  01012A  0EE9               	movlw	-23
 11546  01012C  0060  F097  FFE3   	movff	btemp,plusw1
 11547                           
 11548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11549                           ;stkvar	_w @ sp[(-56)+38]
 11550  010132  50E1               	movf	fsr1l,w,c
 11551  010134  0FEE               	addlw	-18
 11552  010136  6ED9               	movwf	fsr2l,c
 11553  010138  50E2               	movf	fsr1h,w,c
 11554  01013A  6EDA               	movwf	fsr2h,c
 11555  01013C  0EFF               	movlw	255
 11556  01013E  22DA               	addwfc	fsr2h,f,c
 11557  010140  06DE               	decf	postinc2,f,c
 11558  010142  0E00               	movlw	0
 11559  010144  5ADD               	subwfb	postdec2,f,c
 11560  010146                     l10214:
 11561                           
 11562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11563                           ;stkvar	_g @ sp[(-56)+16]
 11564  010146  0ED8               	movlw	-40
 11565  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11566  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11567  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11568  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11569  010160  EC0D  F0B4         	call	___fpclassifyf	;wreg free
 11570  010164  0425               	decf	btemp^0,w,c
 11571  010166  1026               	iorwf	(btemp+1)^0,w,c
 11572  010168  A4D8               	btfss	status,2,c
 11573  01016A  D076               	goto	l10232
 11574  01016C  0EBF               	movlw	191
 11575  01016E  6E2F               	movwf	(btemp+10)^0,c
 11576  010170  0EFF               	movlw	255
 11577  010172  6E30               	movwf	(btemp+11)^0,c
 11578                           
 11579                           ;stkvar	_c @ sp[(-56)+-7]
 11580  010174  0EC1               	movlw	-63
 11581  010176  50E3               	movf	plusw1,w,c
 11582  010178  6E2D               	movwf	(btemp+8)^0,c
 11583  01017A  6A2E               	clrf	(btemp+9)^0,c
 11584  01017C  502F               	movf	(btemp+10)^0,w,c
 11585  01017E  262D               	addwf	(btemp+8)^0,f,c
 11586  010180  5030               	movf	(btemp+11)^0,w,c
 11587  010182  222E               	addwfc	(btemp+9)^0,f,c
 11588  010184  502E               	movf	(btemp+9)^0,w,c
 11589  010186  E106               	bnz	u9630
 11590  010188  0E1A               	movlw	26
 11591  01018A  5C2D               	subwf	(btemp+8)^0,w,c
 11592  01018C  B0D8               	btfsc	status,0,c
 11593  01018E  D002               	goto	u9630
 11594  010190  0E01               	movlw	1
 11595  010192  D001               	goto	u9640
 11596  010194                     u9630:
 11597  010194  0E00               	movlw	0
 11598  010196                     u9640:
 11599  010196  6E2F               	movwf	(btemp+10)^0,c
 11600  010198  6A30               	clrf	(btemp+11)^0,c
 11601                           
 11602                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11603  01019A  0ED0               	movlw	-48
 11604  01019C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11605  0101A2  0ED1               	movlw	-47
 11606  0101A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11607                           
 11608                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11609  0101AA  0ED0               	movlw	-48
 11610  0101AC  006F FF8C  F025    	movff	plusw1,btemp
 11611  0101B2  0ED1               	movlw	-47
 11612  0101B4  50E3               	movf	plusw1,w,c
 11613  0101B6  1025               	iorwf	btemp^0,w,c
 11614  0101B8  B4D8               	btfsc	status,2,c
 11615  0101BA  D017               	goto	l10224
 11616                           
 11617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11618  0101BC  0EE6               	movlw	low STR_46
 11619  0101BE  6EE6               	movwf	postinc1,c
 11620  0101C0  0EFF               	movlw	high STR_46
 11621  0101C2  6EE6               	movwf	postinc1,c
 11622                           
 11623                           ;stkvar	_n @ sp[(-58)+32]
 11624  0101C4  0E94               	movlw	low _dbuf
 11625  0101C6  6E2F               	movwf	(btemp+10)^0,c
 11626  0101C8  0E03               	movlw	high _dbuf
 11627  0101CA  6E30               	movwf	(btemp+11)^0,c
 11628  0101CC  0EE6               	movlw	-26
 11629  0101CE  50E3               	movf	plusw1,w,c
 11630  0101D0  262F               	addwf	(btemp+10)^0,f,c
 11631  0101D2  0EE7               	movlw	-25
 11632  0101D4  50E3               	movf	plusw1,w,c
 11633  0101D6  2230               	addwfc	(btemp+11)^0,f,c
 11634  0101D8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11635  0101DE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11636  0101E4  EC3D  F0BC         	call	_strcpy	;wreg free
 11637                           
 11638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11639  0101E8  D016               	goto	l10226
 11640  0101EA                     l10224:
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11643  0101EA  0EEE               	movlw	low STR_47
 11644  0101EC  6EE6               	movwf	postinc1,c
 11645  0101EE  0EFF               	movlw	high STR_47
 11646  0101F0  6EE6               	movwf	postinc1,c
 11647                           
 11648                           ;stkvar	_n @ sp[(-58)+32]
 11649  0101F2  0E94               	movlw	low _dbuf
 11650  0101F4  6E2F               	movwf	(btemp+10)^0,c
 11651  0101F6  0E03               	movlw	high _dbuf
 11652  0101F8  6E30               	movwf	(btemp+11)^0,c
 11653  0101FA  0EE6               	movlw	-26
 11654  0101FC  50E3               	movf	plusw1,w,c
 11655  0101FE  262F               	addwf	(btemp+10)^0,f,c
 11656  010200  0EE7               	movlw	-25
 11657  010202  50E3               	movf	plusw1,w,c
 11658  010204  2230               	addwfc	(btemp+11)^0,f,c
 11659  010206  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11660  01020C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11661  010212  EC3D  F0BC         	call	_strcpy	;wreg free
 11662  010216                     l10226:
 11663                           
 11664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11665                           ;stkvar	_w @ sp[(-56)+38]
 11666  010216  50E1               	movf	fsr1l,w,c
 11667  010218  0FEE               	addlw	-18
 11668  01021A  6ED9               	movwf	fsr2l,c
 11669  01021C  50E2               	movf	fsr1h,w,c
 11670  01021E  6EDA               	movwf	fsr2h,c
 11671  010220  0EFF               	movlw	255
 11672  010222  22DA               	addwfc	fsr2h,f,c
 11673  010224  0EFD               	movlw	253
 11674  010226  26DE               	addwf	postinc2,f,c
 11675  010228  0EFF               	movlw	255
 11676  01022A  22DD               	addwfc	postdec2,f,c
 11677  01022C                     l10228:
 11678                           
 11679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11680                           ;stkvar	_w @ sp[(-56)+38]
 11681  01022C  0EEE               	movlw	-18
 11682  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11683  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11684  01023A  0E94               	movlw	low _dbuf
 11685  01023C  6EE6               	movwf	postinc1,c
 11686  01023E  0E03               	movlw	high _dbuf
 11687  010240  6EE6               	movwf	postinc1,c
 11688                           
 11689                           ;stkvar	_fp @ sp[(-60)+-2]
 11690  010242  0EC2               	movlw	-62
 11691  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11692  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11693  010250  EC32  F0B9         	call	_pad	;wreg free
 11694  010254  EF1D  F089         	goto	l2047
 11695  010258                     l10232:
 11696                           
 11697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11698                           ;stkvar	_g @ sp[(-56)+16]
 11699  010258  0ED8               	movlw	-40
 11700  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11701  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11702  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11703  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11704  010272  EC0D  F0B4         	call	___fpclassifyf	;wreg free
 11705  010276  5025               	movf	btemp^0,w,c
 11706  010278  1026               	iorwf	(btemp+1)^0,w,c
 11707  01027A  A4D8               	btfss	status,2,c
 11708  01027C  D056               	goto	l10250
 11709  01027E  0EBF               	movlw	191
 11710  010280  6E2F               	movwf	(btemp+10)^0,c
 11711  010282  0EFF               	movlw	255
 11712  010284  6E30               	movwf	(btemp+11)^0,c
 11713                           
 11714                           ;stkvar	_c @ sp[(-56)+-7]
 11715  010286  0EC1               	movlw	-63
 11716  010288  50E3               	movf	plusw1,w,c
 11717  01028A  6E2D               	movwf	(btemp+8)^0,c
 11718  01028C  6A2E               	clrf	(btemp+9)^0,c
 11719  01028E  502F               	movf	(btemp+10)^0,w,c
 11720  010290  262D               	addwf	(btemp+8)^0,f,c
 11721  010292  5030               	movf	(btemp+11)^0,w,c
 11722  010294  222E               	addwfc	(btemp+9)^0,f,c
 11723  010296  502E               	movf	(btemp+9)^0,w,c
 11724  010298  E106               	bnz	u9670
 11725  01029A  0E1A               	movlw	26
 11726  01029C  5C2D               	subwf	(btemp+8)^0,w,c
 11727  01029E  B0D8               	btfsc	status,0,c
 11728  0102A0  D002               	goto	u9670
 11729  0102A2  0E01               	movlw	1
 11730  0102A4  D001               	goto	u9680
 11731  0102A6                     u9670:
 11732  0102A6  0E00               	movlw	0
 11733  0102A8                     u9680:
 11734  0102A8  6E2F               	movwf	(btemp+10)^0,c
 11735  0102AA  6A30               	clrf	(btemp+11)^0,c
 11736                           
 11737                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11738  0102AC  0ECE               	movlw	-50
 11739  0102AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11740  0102B4  0ECF               	movlw	-49
 11741  0102B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11742                           
 11743                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11744  0102BC  0ECE               	movlw	-50
 11745  0102BE  006F FF8C  F025    	movff	plusw1,btemp
 11746  0102C4  0ECF               	movlw	-49
 11747  0102C6  50E3               	movf	plusw1,w,c
 11748  0102C8  1025               	iorwf	btemp^0,w,c
 11749  0102CA  B4D8               	btfsc	status,2,c
 11750  0102CC  D017               	goto	l10242
 11751                           
 11752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11753  0102CE  0EEA               	movlw	low STR_50
 11754  0102D0  6EE6               	movwf	postinc1,c
 11755  0102D2  0EFF               	movlw	high STR_50
 11756  0102D4  6EE6               	movwf	postinc1,c
 11757                           
 11758                           ;stkvar	_n @ sp[(-58)+32]
 11759  0102D6  0E94               	movlw	low _dbuf
 11760  0102D8  6E2F               	movwf	(btemp+10)^0,c
 11761  0102DA  0E03               	movlw	high _dbuf
 11762  0102DC  6E30               	movwf	(btemp+11)^0,c
 11763  0102DE  0EE6               	movlw	-26
 11764  0102E0  50E3               	movf	plusw1,w,c
 11765  0102E2  262F               	addwf	(btemp+10)^0,f,c
 11766  0102E4  0EE7               	movlw	-25
 11767  0102E6  50E3               	movf	plusw1,w,c
 11768  0102E8  2230               	addwfc	(btemp+11)^0,f,c
 11769  0102EA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11770  0102F0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11771  0102F6  EC3D  F0BC         	call	_strcpy	;wreg free
 11772                           
 11773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11774  0102FA  D78D               	goto	l10226
 11775  0102FC                     l10242:
 11776                           
 11777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11778  0102FC  0EF2               	movlw	low STR_51
 11779  0102FE  6EE6               	movwf	postinc1,c
 11780  010300  0EFF               	movlw	high STR_51
 11781  010302  6EE6               	movwf	postinc1,c
 11782                           
 11783                           ;stkvar	_n @ sp[(-58)+32]
 11784  010304  0E94               	movlw	low _dbuf
 11785  010306  6E2F               	movwf	(btemp+10)^0,c
 11786  010308  0E03               	movlw	high _dbuf
 11787  01030A  6E30               	movwf	(btemp+11)^0,c
 11788  01030C  0EE6               	movlw	-26
 11789  01030E  50E3               	movf	plusw1,w,c
 11790  010310  262F               	addwf	(btemp+10)^0,f,c
 11791  010312  0EE7               	movlw	-25
 11792  010314  50E3               	movf	plusw1,w,c
 11793  010316  2230               	addwfc	(btemp+11)^0,f,c
 11794  010318  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11795  01031E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11796  010324  EC3D  F0BC         	call	_strcpy	;wreg free
 11797  010328  D776               	goto	l10226
 11798  01032A                     l10250:
 11799                           
 11800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11801  01032A  0E00               	movlw	0
 11802  01032C  6E2D               	movwf	(btemp+8)^0,c
 11803  01032E  0E00               	movlw	0
 11804  010330  6E2E               	movwf	(btemp+9)^0,c
 11805  010332  0E80               	movlw	128
 11806  010334  6E2F               	movwf	(btemp+10)^0,c
 11807  010336  0E3F               	movlw	63
 11808  010338  6E30               	movwf	(btemp+11)^0,c
 11809                           
 11810                           ;stkvar	_u @ sp[(-56)+12]
 11811  01033A  0ED4               	movlw	-44
 11812  01033C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11813  010342  0ED5               	movlw	-43
 11814  010344  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11815  01034A  0ED6               	movlw	-42
 11816  01034C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11817  010352  0ED7               	movlw	-41
 11818  010354  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11819                           
 11820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11821                           ;stkvar	_e @ sp[(-56)+34]
 11822  01035A  0EEA               	movlw	-22
 11823  01035C  6AE3               	clrf	plusw1,c
 11824  01035E  0EEB               	movlw	-21
 11825  010360  6AE3               	clrf	plusw1,c
 11826                           
 11827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11828  010362  0E00               	movlw	0
 11829  010364  6EE6               	movwf	postinc1,c
 11830  010366  0E00               	movlw	0
 11831  010368  6EE6               	movwf	postinc1,c
 11832  01036A  0E00               	movlw	0
 11833  01036C  6EE6               	movwf	postinc1,c
 11834  01036E  0E00               	movlw	0
 11835  010370  6EE6               	movwf	postinc1,c
 11836                           
 11837                           ;stkvar	_g @ sp[(-60)+16]
 11838  010372  0ED4               	movlw	-44
 11839  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11840  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11841  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11842  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11843  01038C  EC0F  F0BD         	call	___fleq	;wreg free
 11844  010390  A025               	btfss	btemp& (0+255),0,c
 11845  010392  D039               	goto	l10262
 11846  010394  D0BC               	goto	u9720
 11847  010396                     l10258:
 11848                           
 11849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11850  010396  0E00               	movlw	0
 11851  010398  6EE6               	movwf	postinc1,c
 11852  01039A  0E00               	movlw	0
 11853  01039C  6EE6               	movwf	postinc1,c
 11854  01039E  0E20               	movlw	32
 11855  0103A0  6EE6               	movwf	postinc1,c
 11856  0103A2  0E41               	movlw	65
 11857  0103A4  6EE6               	movwf	postinc1,c
 11858                           
 11859                           ;stkvar	_u @ sp[(-60)+12]
 11860  0103A6  0ED0               	movlw	-48
 11861  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11862  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11863  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11864  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11865  0103C0  EC14  F093         	call	___flmul	;wreg free
 11866                           
 11867                           ;stkvar	_u @ sp[(-56)+12]
 11868  0103C4  0ED4               	movlw	-44
 11869  0103C6  0060  F097  FFE3   	movff	btemp,plusw1
 11870  0103CC  0ED5               	movlw	-43
 11871  0103CE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11872  0103D4  0ED6               	movlw	-42
 11873  0103D6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11874  0103DC  0ED7               	movlw	-41
 11875  0103DE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11876                           
 11877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11878                           ;stkvar	_e @ sp[(-56)+34]
 11879  0103E4  0EEA               	movlw	-22
 11880  0103E6  50E3               	movf	plusw1,w,c
 11881  0103E8  0F01               	addlw	1
 11882  0103EA  6E25               	movwf	btemp^0,c
 11883  0103EC  0EEA               	movlw	-22
 11884  0103EE  0060  F097  FFE3   	movff	btemp,plusw1
 11885  0103F4  6A25               	clrf	btemp^0,c
 11886  0103F6  0EEB               	movlw	-21
 11887  0103F8  50E3               	movf	plusw1,w,c
 11888  0103FA  2025               	addwfc	btemp^0,w,c
 11889  0103FC  6E25               	movwf	btemp^0,c
 11890  0103FE  0EEB               	movlw	-21
 11891  010400  0060  F097  FFE3   	movff	btemp,plusw1
 11892  010406                     l10262:
 11893                           
 11894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11895  010406  0E00               	movlw	0
 11896  010408  6EE6               	movwf	postinc1,c
 11897  01040A  0E00               	movlw	0
 11898  01040C  6EE6               	movwf	postinc1,c
 11899  01040E  0E20               	movlw	32
 11900  010410  6EE6               	movwf	postinc1,c
 11901  010412  0E41               	movlw	65
 11902  010414  6EE6               	movwf	postinc1,c
 11903                           
 11904                           ;stkvar	_u @ sp[(-60)+12]
 11905  010416  0ED0               	movlw	-48
 11906  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11907  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11908  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11909  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11910  010430  EC14  F093         	call	___flmul	;wreg free
 11911  010434  0060  F097  FFE6   	movff	btemp,postinc1
 11912  01043A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 11913  010440  0060  F09F  FFE6   	movff	btemp+2,postinc1
 11914  010446  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 11915                           
 11916                           ;stkvar	_g @ sp[(-60)+16]
 11917  01044C  0ED4               	movlw	-44
 11918  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11919  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11920  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11921  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11922  010466  EC91  F0B5         	call	___flge	;wreg free
 11923  01046A  A025               	btfss	btemp& (0+255),0,c
 11924  01046C  D032               	goto	l10268
 11925  01046E  D793               	goto	l10258
 11926  010470                     l10264:
 11927                           
 11928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11929  010470  0E00               	movlw	0
 11930  010472  6EE6               	movwf	postinc1,c
 11931  010474  0E00               	movlw	0
 11932  010476  6EE6               	movwf	postinc1,c
 11933  010478  0E20               	movlw	32
 11934  01047A  6EE6               	movwf	postinc1,c
 11935  01047C  0E41               	movlw	65
 11936  01047E  6EE6               	movwf	postinc1,c
 11937                           
 11938                           ;stkvar	_u @ sp[(-60)+12]
 11939  010480  0ED0               	movlw	-48
 11940  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11941  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11942  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11943  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11944  01049A  EC07  F09B         	call	___fldiv	;wreg free
 11945                           
 11946                           ;stkvar	_u @ sp[(-56)+12]
 11947  01049E  0ED4               	movlw	-44
 11948  0104A0  0060  F097  FFE3   	movff	btemp,plusw1
 11949  0104A6  0ED5               	movlw	-43
 11950  0104A8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11951  0104AE  0ED6               	movlw	-42
 11952  0104B0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11953  0104B6  0ED7               	movlw	-41
 11954  0104B8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11955                           
 11956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11957                           ;stkvar	_e @ sp[(-56)+34]
 11958  0104BE  50E1               	movf	fsr1l,w,c
 11959  0104C0  0FEA               	addlw	-22
 11960  0104C2  6ED9               	movwf	fsr2l,c
 11961  0104C4  50E2               	movf	fsr1h,w,c
 11962  0104C6  6EDA               	movwf	fsr2h,c
 11963  0104C8  0EFF               	movlw	255
 11964  0104CA  22DA               	addwfc	fsr2h,f,c
 11965  0104CC  06DE               	decf	postinc2,f,c
 11966  0104CE  0E00               	movlw	0
 11967  0104D0  5ADD               	subwfb	postdec2,f,c
 11968  0104D2                     l10268:
 11969                           
 11970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11971                           ;stkvar	_u @ sp[(-56)+12]
 11972  0104D2  0ED4               	movlw	-44
 11973  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11974  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11975  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11976  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11977                           
 11978                           ;stkvar	_g @ sp[(-60)+16]
 11979  0104EC  0ED4               	movlw	-44
 11980  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11981  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11982  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11983  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11984  010506  EC91  F0B5         	call	___flge	;wreg free
 11985  01050A  A025               	btfss	btemp& (0+255),0,c
 11986  01050C  D7B1               	goto	l10264
 11987  01050E                     u9720:
 11988                           
 11989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11990                           ;stkvar	_c @ sp[(-56)+-7]
 11991  01050E  0EC1               	movlw	-63
 11992  010510  50E3               	movf	plusw1,w,c
 11993  010512  6EE6               	movwf	postinc1,c
 11994  010514  0E00               	movlw	0
 11995  010516  6EE6               	movwf	postinc1,c
 11996  010518  EC81  F0C1         	call	_tolower	;wreg free
 11997                           
 11998                           ;stkvar	_mode @ sp[(-56)+54]
 11999  01051C  0EFE               	movlw	-2
 12000  01051E  0060  F097  FFE3   	movff	btemp,plusw1
 12001                           
 12002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 12003                           ;stkvar	_mode @ sp[(-56)+54]
 12004                           ;stkvar	_nmode @ sp[(-56)+55]
 12005  010524  0EFE               	movlw	-2
 12006  010526  006F FF8C  F025    	movff	plusw1,btemp
 12007  01052C  0EFF               	movlw	-1
 12008  01052E  0060  F097  FFE3   	movff	btemp,plusw1
 12009                           
 12010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 12011                           ;stkvar	_mode @ sp[(-56)+54]
 12012  010534  0EFE               	movlw	-2
 12013  010536  006F FF8C  F025    	movff	plusw1,btemp
 12014  01053C  0E67               	movlw	103
 12015  01053E  1825               	xorwf	btemp^0,w,c
 12016  010540  A4D8               	btfss	status,2,c
 12017  010542  D025               	goto	l10286
 12018                           
 12019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 12020  010544  500C               	movf	_prec^0,w,c
 12021  010546  100D               	iorwf	(_prec+1)^0,w,c
 12022  010548  A4D8               	btfss	status,2,c
 12023  01054A  D004               	goto	l10280
 12024                           
 12025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12026  01054C  0E00               	movlw	0
 12027  01054E  6E0D               	movwf	(_prec+1)^0,c
 12028  010550  0E01               	movlw	1
 12029  010552  6E0C               	movwf	_prec^0,c
 12030  010554                     l10280:
 12031                           
 12032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12033  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 12034  010556  D005               	goto	u9750
 12035  010558  500D               	movf	(_prec+1)^0,w,c
 12036  01055A  E110               	bnz	l10284
 12037  01055C  040C               	decf	_prec^0,w,c
 12038  01055E  B0D8               	btfsc	status,0,c
 12039  010560  D00D               	goto	l10284
 12040  010562                     u9750:
 12041  010562  0E06               	movlw	6
 12042  010564  6E2F               	movwf	(btemp+10)^0,c
 12043  010566  0E00               	movlw	0
 12044  010568  6E30               	movwf	(btemp+11)^0,c
 12045                           
 12046                           ;stkvar	_p @ sp[(-56)+40]
 12047  01056A  0EF0               	movlw	-16
 12048  01056C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12049  010572  0EF1               	movlw	-15
 12050  010574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12051  01057A  D00C               	goto	l10292
 12052  01057C                     l10284:
 12053                           
 12054                           ;stkvar	_p @ sp[(-56)+40]
 12055  01057C  0EF0               	movlw	-16
 12056  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 12057  010584  0EF1               	movlw	-15
 12058  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 12059  01058C  D003               	goto	l10292
 12060  01058E                     l10286:
 12061                           
 12062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12063  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 12064  010590  D7F5               	goto	l10284
 12065  010592  D7E7               	goto	u9750
 12066  010594                     l10292:
 12067                           
 12068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12069                           ;stkvar	_mode @ sp[(-56)+54]
 12070  010594  0EFE               	movlw	-2
 12071  010596  006F FF8C  F025    	movff	plusw1,btemp
 12072  01059C  0E67               	movlw	103
 12073  01059E  1825               	xorwf	btemp^0,w,c
 12074  0105A0  A4D8               	btfss	status,2,c
 12075  0105A2  D02F               	goto	l10302
 12076                           
 12077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12078                           ;stkvar	_e @ sp[(-56)+34]
 12079  0105A4  0EEB               	movlw	-21
 12080  0105A6  AEE3               	btfss	plusw1,7,c
 12081  0105A8  D00E               	goto	u9780
 12082  0105AA  0EEA               	movlw	-22
 12083  0105AC  006F FF8C  F025    	movff	plusw1,btemp
 12084  0105B2  0EFC               	movlw	252
 12085  0105B4  5E25               	subwf	btemp^0,f,c
 12086  0105B6  0EEB               	movlw	-21
 12087  0105B8  006F FF8C  F025    	movff	plusw1,btemp
 12088  0105BE  0EFF               	movlw	255
 12089  0105C0  5A25               	subwfb	btemp^0,f,c
 12090  0105C2  A0D8               	btfss	status,0,c
 12091  0105C4  D018               	goto	l10300
 12092  0105C6                     u9780:
 12093                           
 12094                           ;stkvar	_e @ sp[(-56)+34]
 12095                           ;stkvar	_p @ sp[(-56)+40]
 12096  0105C6  0EF0               	movlw	-16
 12097  0105C8  50E3               	movf	plusw1,w,c
 12098  0105CA  0FFF               	addlw	255
 12099  0105CC  6E2F               	movwf	(btemp+10)^0,c
 12100  0105CE  0EF1               	movlw	-15
 12101  0105D0  006F FF8C  F030    	movff	plusw1,btemp+11
 12102  0105D6  0EFF               	movlw	255
 12103  0105D8  2230               	addwfc	(btemp+11)^0,f,c
 12104  0105DA  0EEA               	movlw	-22
 12105  0105DC  50E3               	movf	plusw1,w,c
 12106  0105DE  5C2F               	subwf	(btemp+10)^0,w,c
 12107  0105E0  5030               	movf	(btemp+11)^0,w,c
 12108  0105E2  0A80               	xorlw	128
 12109  0105E4  6E25               	movwf	btemp^0,c
 12110  0105E6  0EEB               	movlw	-21
 12111  0105E8  50E3               	movf	plusw1,w,c
 12112  0105EA  0A80               	xorlw	128
 12113  0105EC  5825               	subwfb	btemp^0,w,c
 12114  0105EE  A0D8               	btfss	status,0,c
 12115  0105F0  D002               	goto	l10300
 12116                           
 12117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12118  0105F2  0E66               	movlw	102
 12119  0105F4  D001               	goto	L10
 12120  0105F6                     l10300:
 12121                           
 12122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12123  0105F6  0E65               	movlw	101
 12124  0105F8                     L10:
 12125  0105F8  6E30               	movwf	(btemp+11)^0,c
 12126                           
 12127                           ;stkvar	_nmode @ sp[(-56)+55]
 12128  0105FA  0EFF               	movlw	-1
 12129  0105FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12130  010602                     l10302:
 12131                           
 12132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12133                           ;stkvar	_p @ sp[(-56)+40]
 12134                           ;stkvar	_m @ sp[(-56)+48]
 12135  010602  0EF0               	movlw	-16
 12136  010604  006F FF8C  F025    	movff	plusw1,btemp
 12137  01060A  0EF8               	movlw	-8
 12138  01060C  0060  F097  FFE3   	movff	btemp,plusw1
 12139  010612  0EF1               	movlw	-15
 12140  010614  006F FF8C  F025    	movff	plusw1,btemp
 12141  01061A  0EF9               	movlw	-7
 12142  01061C  0060  F097  FFE3   	movff	btemp,plusw1
 12143                           
 12144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12145                           ;stkvar	_mode @ sp[(-56)+54]
 12146  010622  0EFE               	movlw	-2
 12147  010624  006F FF8C  F025    	movff	plusw1,btemp
 12148  01062A  0E67               	movlw	103
 12149  01062C  1825               	xorwf	btemp^0,w,c
 12150  01062E  A4D8               	btfss	status,2,c
 12151  010630  D00B               	goto	u9820
 12152                           
 12153                           ;stkvar	_nmode @ sp[(-56)+55]
 12154  010632  0EFF               	movlw	-1
 12155  010634  006F FF8C  F025    	movff	plusw1,btemp
 12156  01063A  0E66               	movlw	102
 12157  01063C  1825               	xorwf	btemp^0,w,c
 12158  01063E  A4D8               	btfss	status,2,c
 12159  010640  D014               	goto	l2076
 12160                           
 12161                           ;stkvar	_e @ sp[(-56)+34]
 12162  010642  0EEB               	movlw	-21
 12163  010644  AEE3               	btfss	plusw1,7,c
 12164  010646  D011               	goto	l2076
 12165  010648                     u9820:
 12166                           
 12167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12168                           ;stkvar	_m @ sp[(-56)+48]
 12169  010648  0EF8               	movlw	-8
 12170  01064A  50E3               	movf	plusw1,w,c
 12171  01064C  0F01               	addlw	1
 12172  01064E  6E25               	movwf	btemp^0,c
 12173  010650  0EF8               	movlw	-8
 12174  010652  0060  F097  FFE3   	movff	btemp,plusw1
 12175  010658  6A25               	clrf	btemp^0,c
 12176  01065A  0EF9               	movlw	-7
 12177  01065C  50E3               	movf	plusw1,w,c
 12178  01065E  2025               	addwfc	btemp^0,w,c
 12179  010660  6E25               	movwf	btemp^0,c
 12180  010662  0EF9               	movlw	-7
 12181  010664  0060  F097  FFE3   	movff	btemp,plusw1
 12182  01066A                     l2076:
 12183                           
 12184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12185                           ;stkvar	_nmode @ sp[(-56)+55]
 12186  01066A  0EFF               	movlw	-1
 12187  01066C  006F FF8C  F025    	movff	plusw1,btemp
 12188  010672  0E66               	movlw	102
 12189  010674  1825               	xorwf	btemp^0,w,c
 12190  010676  A4D8               	btfss	status,2,c
 12191  010678  D03B               	goto	l10322
 12192                           
 12193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12194                           ;stkvar	_e @ sp[(-56)+34]
 12195  01067A  0EEB               	movlw	-21
 12196  01067C  AEE3               	btfss	plusw1,7,c
 12197  01067E  D01C               	goto	l10318
 12198                           
 12199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12200  010680  0E00               	movlw	0
 12201  010682  6E2D               	movwf	(btemp+8)^0,c
 12202  010684  0E00               	movlw	0
 12203  010686  6E2E               	movwf	(btemp+9)^0,c
 12204  010688  0E80               	movlw	128
 12205  01068A  6E2F               	movwf	(btemp+10)^0,c
 12206  01068C  0E3F               	movlw	63
 12207  01068E  6E30               	movwf	(btemp+11)^0,c
 12208                           
 12209                           ;stkvar	_u @ sp[(-56)+12]
 12210  010690  0ED4               	movlw	-44
 12211  010692  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12212  010698  0ED5               	movlw	-43
 12213  01069A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12214  0106A0  0ED6               	movlw	-42
 12215  0106A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12216  0106A8  0ED7               	movlw	-41
 12217  0106AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12218                           
 12219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12220                           ;stkvar	_e @ sp[(-56)+34]
 12221  0106B0  0EEA               	movlw	-22
 12222  0106B2  6AE3               	clrf	plusw1,c
 12223  0106B4  0EEB               	movlw	-21
 12224  0106B6  6AE3               	clrf	plusw1,c
 12225  0106B8                     l10318:
 12226                           
 12227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12228                           ;stkvar	_mode @ sp[(-56)+54]
 12229  0106B8  0EFE               	movlw	-2
 12230  0106BA  006F FF8C  F025    	movff	plusw1,btemp
 12231  0106C0  0E67               	movlw	103
 12232  0106C2  1825               	xorwf	btemp^0,w,c
 12233  0106C4  B4D8               	btfsc	status,2,c
 12234  0106C6  D014               	goto	l10322
 12235                           
 12236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12237                           ;stkvar	_e @ sp[(-56)+34]
 12238                           ;stkvar	_m @ sp[(-56)+48]
 12239  0106C8  0EF8               	movlw	-8
 12240  0106CA  50E3               	movf	plusw1,w,c
 12241  0106CC  6E25               	movwf	btemp^0,c
 12242  0106CE  0EEA               	movlw	-22
 12243  0106D0  50E3               	movf	plusw1,w,c
 12244  0106D2  2625               	addwf	btemp^0,f,c
 12245  0106D4  0EF8               	movlw	-8
 12246  0106D6  0060  F097  FFE3   	movff	btemp,plusw1
 12247  0106DC  0EF9               	movlw	-7
 12248  0106DE  50E3               	movf	plusw1,w,c
 12249  0106E0  6E25               	movwf	btemp^0,c
 12250  0106E2  0EEB               	movlw	-21
 12251  0106E4  50E3               	movf	plusw1,w,c
 12252  0106E6  2225               	addwfc	btemp^0,f,c
 12253  0106E8  0EF9               	movlw	-7
 12254  0106EA  0060  F097  FFE3   	movff	btemp,plusw1
 12255  0106F0                     l10322:
 12256                           
 12257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12258                           ;stkvar	_i @ sp[(-56)+36]
 12259  0106F0  0EEC               	movlw	-20
 12260  0106F2  6AE3               	clrf	plusw1,c
 12261  0106F4  0EED               	movlw	-19
 12262  0106F6  6AE3               	clrf	plusw1,c
 12263                           
 12264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12265                           ;stkvar	_g @ sp[(-56)+16]
 12266  0106F8  0ED8               	movlw	-40
 12267  0106FA  006F FF8C  F02D    	movff	plusw1,btemp+8
 12268  010700  0ED9               	movlw	-39
 12269  010702  006F FF8C  F02E    	movff	plusw1,btemp+9
 12270  010708  0EDA               	movlw	-38
 12271  01070A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12272  010710  0EDB               	movlw	-37
 12273  010712  006F FF8C  F030    	movff	plusw1,btemp+11
 12274                           
 12275                           ;stkvar	_h @ sp[(-56)+24]
 12276  010718  0EE0               	movlw	-32
 12277  01071A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12278  010720  0EE1               	movlw	-31
 12279  010722  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12280  010728  0EE2               	movlw	-30
 12281  01072A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12282  010730  0EE3               	movlw	-29
 12283  010732  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12284                           
 12285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12286                           ;stkvar	_u @ sp[(-56)+12]
 12287  010738  0ED4               	movlw	-44
 12288  01073A  006F FF8C  F02D    	movff	plusw1,btemp+8
 12289  010740  0ED5               	movlw	-43
 12290  010742  006F FF8C  F02E    	movff	plusw1,btemp+9
 12291  010748  0ED6               	movlw	-42
 12292  01074A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12293  010750  0ED7               	movlw	-41
 12294  010752  006F FF8C  F030    	movff	plusw1,btemp+11
 12295                           
 12296                           ;stkvar	_ou @ sp[(-56)+28]
 12297  010758  0EE4               	movlw	-28
 12298  01075A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12299  010760  0EE5               	movlw	-27
 12300  010762  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12301  010768  0EE6               	movlw	-26
 12302  01076A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12303  010770  0EE7               	movlw	-25
 12304  010772  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12305                           
 12306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12307  010778  D0D6               	goto	l10338
 12308  01077A                     l10328:
 12309                           
 12310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12311                           ;stkvar	_u @ sp[(-56)+12]
 12312  01077A  0ED4               	movlw	-44
 12313  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12314  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12315  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12316  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12317                           
 12318                           ;stkvar	_h @ sp[(-60)+24]
 12319  010794  0EDC               	movlw	-36
 12320  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12322  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  0107AE  EC07  F09B         	call	___fldiv	;wreg free
 12325  0107B2  0060  F097  FFE6   	movff	btemp,postinc1
 12326  0107B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12327  0107BE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12328  0107C4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12329  0107CA  ECAC  F0A6         	call	_floorf	;wreg free
 12330                           
 12331                           ;stkvar	_l @ sp[(-56)+20]
 12332  0107CE  0EDC               	movlw	-36
 12333  0107D0  0060  F097  FFE3   	movff	btemp,plusw1
 12334  0107D6  0EDD               	movlw	-35
 12335  0107D8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12336  0107DE  0EDE               	movlw	-34
 12337  0107E0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12338  0107E6  0EDF               	movlw	-33
 12339  0107E8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12340                           
 12341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12342                           ;stkvar	_l @ sp[(-56)+20]
 12343  0107EE  0EDC               	movlw	-36
 12344  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12348  010808  ECD8  F0B4         	call	___fltol	;wreg free
 12349  01080C  0060  F094  F02F   	movff	btemp,btemp+10
 12350  010812  0060  F098  F030   	movff	btemp+1,btemp+11
 12351                           
 12352                           ;stkvar	_d @ sp[(-56)+44]
 12353  010818  0EF4               	movlw	-12
 12354  01081A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12355  010820  0EF5               	movlw	-11
 12356  010822  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12357                           
 12358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12359                           ;stkvar	_u @ sp[(-56)+12]
 12360  010828  0ED4               	movlw	-44
 12361  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12362  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12363  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12364  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12365                           
 12366                           ;stkvar	_l @ sp[(-60)+20]
 12367  010842  0ED8               	movlw	-40
 12368  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12369  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12370  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12372  01085C  EC14  F093         	call	___flmul	;wreg free
 12373  010860  0060  F097  FFE6   	movff	btemp,postinc1
 12374  010866  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12375  01086C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12376  010872  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12377                           
 12378                           ;stkvar	_h @ sp[(-60)+24]
 12379  010878  0EDC               	movlw	-36
 12380  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12381  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12382  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12383  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12384  010892  EC36  F0C5         	call	___flsub	;wreg free
 12385                           
 12386                           ;stkvar	_h @ sp[(-56)+24]
 12387  010896  0EE0               	movlw	-32
 12388  010898  0060  F097  FFE3   	movff	btemp,plusw1
 12389  01089E  0EE1               	movlw	-31
 12390  0108A0  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12391  0108A6  0EE2               	movlw	-30
 12392  0108A8  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12393  0108AE  0EE3               	movlw	-29
 12394  0108B0  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12395                           
 12396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12397  0108B6  0E00               	movlw	0
 12398  0108B8  6EE6               	movwf	postinc1,c
 12399  0108BA  0E00               	movlw	0
 12400  0108BC  6EE6               	movwf	postinc1,c
 12401  0108BE  0E20               	movlw	32
 12402  0108C0  6EE6               	movwf	postinc1,c
 12403  0108C2  0E41               	movlw	65
 12404  0108C4  6EE6               	movwf	postinc1,c
 12405                           
 12406                           ;stkvar	_u @ sp[(-60)+12]
 12407  0108C6  0ED0               	movlw	-48
 12408  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12409  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12410  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12411  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12412  0108E0  EC07  F09B         	call	___fldiv	;wreg free
 12413                           
 12414                           ;stkvar	_u @ sp[(-56)+12]
 12415  0108E4  0ED4               	movlw	-44
 12416  0108E6  0060  F097  FFE3   	movff	btemp,plusw1
 12417  0108EC  0ED5               	movlw	-43
 12418  0108EE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12419  0108F4  0ED6               	movlw	-42
 12420  0108F6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12421  0108FC  0ED7               	movlw	-41
 12422  0108FE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12423                           
 12424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12425                           ;stkvar	_i @ sp[(-56)+36]
 12426  010904  0EEC               	movlw	-20
 12427  010906  50E3               	movf	plusw1,w,c
 12428  010908  0F01               	addlw	1
 12429  01090A  6E25               	movwf	btemp^0,c
 12430  01090C  0EEC               	movlw	-20
 12431  01090E  0060  F097  FFE3   	movff	btemp,plusw1
 12432  010914  6A25               	clrf	btemp^0,c
 12433  010916  0EED               	movlw	-19
 12434  010918  50E3               	movf	plusw1,w,c
 12435  01091A  2025               	addwfc	btemp^0,w,c
 12436  01091C  6E25               	movwf	btemp^0,c
 12437  01091E  0EED               	movlw	-19
 12438  010920  0060  F097  FFE3   	movff	btemp,plusw1
 12439  010926                     l10338:
 12440                           
 12441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12442                           ;stkvar	_m @ sp[(-56)+48]
 12443                           ;stkvar	_i @ sp[(-56)+36]
 12444  010926  50E1               	movf	fsr1l,w,c
 12445  010928  0FEC               	addlw	-20
 12446  01092A  6ED9               	movwf	fsr2l,c
 12447  01092C  50E2               	movf	fsr1h,w,c
 12448  01092E  6EDA               	movwf	fsr2h,c
 12449  010930  0EFF               	movlw	255
 12450  010932  22DA               	addwfc	fsr2h,f,c
 12451  010934  0EF8               	movlw	-8
 12452  010936  50E3               	movf	plusw1,w,c
 12453  010938  5CDE               	subwf	postinc2,w,c
 12454  01093A  50DE               	movf	postinc2,w,c
 12455  01093C  0A80               	xorlw	128
 12456  01093E  6E25               	movwf	btemp^0,c
 12457  010940  0EF9               	movlw	-7
 12458  010942  50E3               	movf	plusw1,w,c
 12459  010944  0A80               	xorlw	128
 12460  010946  5825               	subwfb	btemp^0,w,c
 12461  010948  A0D8               	btfss	status,0,c
 12462  01094A  D717               	goto	l10328
 12463                           
 12464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12465  01094C  0E00               	movlw	0
 12466  01094E  6EE6               	movwf	postinc1,c
 12467  010950  0E00               	movlw	0
 12468  010952  6EE6               	movwf	postinc1,c
 12469  010954  0EA0               	movlw	160
 12470  010956  6EE6               	movwf	postinc1,c
 12471  010958  0E40               	movlw	64
 12472  01095A  6EE6               	movwf	postinc1,c
 12473                           
 12474                           ;stkvar	_u @ sp[(-60)+12]
 12475  01095C  0ED0               	movlw	-48
 12476  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12477  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12478  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12479  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12480  010976  EC14  F093         	call	___flmul	;wreg free
 12481                           
 12482                           ;stkvar	_l @ sp[(-56)+20]
 12483  01097A  0EDC               	movlw	-36
 12484  01097C  0060  F097  FFE3   	movff	btemp,plusw1
 12485  010982  0EDD               	movlw	-35
 12486  010984  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12487  01098A  0EDE               	movlw	-34
 12488  01098C  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12489  010992  0EDF               	movlw	-33
 12490  010994  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12491                           
 12492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12493                           ;stkvar	_l @ sp[(-56)+20]
 12494  01099A  0EDC               	movlw	-36
 12495  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12496  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12497  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12498  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12499                           
 12500                           ;stkvar	_h @ sp[(-60)+24]
 12501  0109B4  0EDC               	movlw	-36
 12502  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12503  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12504  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12505  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12506  0109CE  EC91  F0B5         	call	___flge	;wreg free
 12507  0109D2  A025               	btfss	btemp& (0+255),0,c
 12508  0109D4  D021               	goto	u9890
 12509                           
 12510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12511                           ;stkvar	_l @ sp[(-56)+20]
 12512                           
 12513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12514                           
 12515                           ;stkvar	_l @ sp[(-56)+20]
 12516                           
 12517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12518  0109D6  0EDC               	movlw	-36
 12519  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12520  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12521  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12522  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12523                           
 12524                           ;stkvar	_h @ sp[(-60)+24]
 12525  0109F0  0EDC               	movlw	-36
 12526  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12527  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12528  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12529  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12530  010A0A  EC0F  F0BD         	call	___fleq	;wreg free
 12531  010A0E  A025               	btfss	btemp& (0+255),0,c
 12532  010A10  D01B               	goto	l10352
 12533                           
 12534                           ;stkvar	_d @ sp[(-56)+44]
 12535  010A12  0EF4               	movlw	-12
 12536  010A14  B0E3               	btfsc	plusw1,0,c
 12537  010A16  D018               	goto	l10352
 12538  010A18                     u9890:
 12539                           
 12540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12541  010A18  0E00               	movlw	0
 12542  010A1A  6E2D               	movwf	(btemp+8)^0,c
 12543  010A1C  0E00               	movlw	0
 12544  010A1E  6E2E               	movwf	(btemp+9)^0,c
 12545  010A20  0E00               	movlw	0
 12546  010A22  6E2F               	movwf	(btemp+10)^0,c
 12547  010A24  0E00               	movlw	0
 12548  010A26  6E30               	movwf	(btemp+11)^0,c
 12549                           
 12550                           ;stkvar	_l @ sp[(-56)+20]
 12551  010A28  0EDC               	movlw	-36
 12552  010A2A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12553  010A30  0EDD               	movlw	-35
 12554  010A32  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12555  010A38  0EDE               	movlw	-34
 12556  010A3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12557  010A40  0EDF               	movlw	-33
 12558  010A42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12559  010A48                     l10352:
 12560                           
 12561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12562                           ;stkvar	_l @ sp[(-56)+20]
 12563  010A48  0EDC               	movlw	-36
 12564  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12565  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12566  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12567  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12568                           
 12569                           ;stkvar	_g @ sp[(-60)+16]
 12570  010A62  0ED4               	movlw	-44
 12571  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12572  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12573  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12574  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12575  010A7C  EC29  F097         	call	___fladd	;wreg free
 12576                           
 12577                           ;stkvar	_h @ sp[(-56)+24]
 12578  010A80  0EE0               	movlw	-32
 12579  010A82  0060  F097  FFE3   	movff	btemp,plusw1
 12580  010A88  0EE1               	movlw	-31
 12581  010A8A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12582  010A90  0EE2               	movlw	-30
 12583  010A92  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12584  010A98  0EE3               	movlw	-29
 12585  010A9A  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12586                           
 12587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12588                           ;stkvar	_ou @ sp[(-56)+28]
 12589  010AA0  0EE4               	movlw	-28
 12590  010AA2  006F FF8C  F02D    	movff	plusw1,btemp+8
 12591  010AA8  0EE5               	movlw	-27
 12592  010AAA  006F FF8C  F02E    	movff	plusw1,btemp+9
 12593  010AB0  0EE6               	movlw	-26
 12594  010AB2  006F FF8C  F02F    	movff	plusw1,btemp+10
 12595  010AB8  0EE7               	movlw	-25
 12596  010ABA  006F FF8C  F030    	movff	plusw1,btemp+11
 12597                           
 12598                           ;stkvar	_u @ sp[(-56)+12]
 12599  010AC0  0ED4               	movlw	-44
 12600  010AC2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12601  010AC8  0ED5               	movlw	-43
 12602  010ACA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12603  010AD0  0ED6               	movlw	-42
 12604  010AD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12605  010AD8  0ED7               	movlw	-41
 12606  010ADA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12607                           
 12608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12609                           ;stkvar	_nmode @ sp[(-56)+55]
 12610  010AE0  0EFF               	movlw	-1
 12611  010AE2  006F FF8C  F025    	movff	plusw1,btemp
 12612  010AE8  0E65               	movlw	101
 12613  010AEA  1825               	xorwf	btemp^0,w,c
 12614  010AEC  B4D8               	btfsc	status,2,c
 12615  010AEE  D011               	goto	l10360
 12616                           
 12617                           ;stkvar	_e @ sp[(-56)+34]
 12618                           ;stkvar	_ne @ sp[(-56)+46]
 12619  010AF0  0EEA               	movlw	-22
 12620  010AF2  006F FF8C  F025    	movff	plusw1,btemp
 12621  010AF8  0EF6               	movlw	-10
 12622  010AFA  0060  F097  FFE3   	movff	btemp,plusw1
 12623  010B00  0EEB               	movlw	-21
 12624  010B02  006F FF8C  F025    	movff	plusw1,btemp
 12625  010B08  0EF7               	movlw	-9
 12626  010B0A  0060  F097  FFE3   	movff	btemp,plusw1
 12627  010B10  D004               	goto	l2091
 12628  010B12                     l10360:
 12629                           
 12630                           ;stkvar	_ne @ sp[(-56)+46]
 12631  010B12  0EF6               	movlw	-10
 12632  010B14  6AE3               	clrf	plusw1,c
 12633  010B16  0EF7               	movlw	-9
 12634  010B18  6AE3               	clrf	plusw1,c
 12635  010B1A                     l2091:
 12636                           
 12637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12638                           ;stkvar	_pp @ sp[(-56)+50]
 12639  010B1A  0EFA               	movlw	-6
 12640  010B1C  6AE3               	clrf	plusw1,c
 12641  010B1E  0EFB               	movlw	-5
 12642  010B20  6AE3               	clrf	plusw1,c
 12643                           
 12644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12645                           ;stkvar	_t @ sp[(-56)+52]
 12646  010B22  0EFC               	movlw	-4
 12647  010B24  6AE3               	clrf	plusw1,c
 12648  010B26  0EFD               	movlw	-3
 12649  010B28  6AE3               	clrf	plusw1,c
 12650                           
 12651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12652                           ;stkvar	_i @ sp[(-56)+36]
 12653  010B2A  0EEC               	movlw	-20
 12654  010B2C  6AE3               	clrf	plusw1,c
 12655  010B2E  0EED               	movlw	-19
 12656  010B30  6AE3               	clrf	plusw1,c
 12657                           
 12658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12659  010B32  D1B7               	goto	l10412
 12660  010B34                     l10362:
 12661                           
 12662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12663                           ;stkvar	_u @ sp[(-56)+12]
 12664  010B34  0ED4               	movlw	-44
 12665  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12666  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12667  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12668  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12669                           
 12670                           ;stkvar	_h @ sp[(-60)+24]
 12671  010B4E  0EDC               	movlw	-36
 12672  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12673  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12674  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12675  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12676  010B68  EC07  F09B         	call	___fldiv	;wreg free
 12677  010B6C  0060  F097  FFE6   	movff	btemp,postinc1
 12678  010B72  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12679  010B78  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12680  010B7E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12681  010B84  ECAC  F0A6         	call	_floorf	;wreg free
 12682                           
 12683                           ;stkvar	_l @ sp[(-56)+20]
 12684  010B88  0EDC               	movlw	-36
 12685  010B8A  0060  F097  FFE3   	movff	btemp,plusw1
 12686  010B90  0EDD               	movlw	-35
 12687  010B92  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12688  010B98  0EDE               	movlw	-34
 12689  010B9A  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12690  010BA0  0EDF               	movlw	-33
 12691  010BA2  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12692                           
 12693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12694                           ;stkvar	_l @ sp[(-56)+20]
 12695  010BA8  0EDC               	movlw	-36
 12696  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12697  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12698  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12699  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12700  010BC2  ECD8  F0B4         	call	___fltol	;wreg free
 12701  010BC6  0060  F094  F02F   	movff	btemp,btemp+10
 12702  010BCC  0060  F098  F030   	movff	btemp+1,btemp+11
 12703                           
 12704                           ;stkvar	_d @ sp[(-56)+44]
 12705  010BD2  0EF4               	movlw	-12
 12706  010BD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12707  010BDA  0EF5               	movlw	-11
 12708  010BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12709                           
 12710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12711  010BE2  B80E               	btfsc	_flags^0,4,c
 12712  010BE4  D026               	goto	l10376
 12713                           
 12714                           ;stkvar	_d @ sp[(-56)+44]
 12715  010BE6  0EF4               	movlw	-12
 12716  010BE8  006F FF8C  F025    	movff	plusw1,btemp
 12717  010BEE  0EF5               	movlw	-11
 12718  010BF0  50E3               	movf	plusw1,w,c
 12719  010BF2  1025               	iorwf	btemp^0,w,c
 12720  010BF4  A4D8               	btfss	status,2,c
 12721  010BF6  D01D               	goto	l10376
 12722                           
 12723                           ;stkvar	_mode @ sp[(-56)+54]
 12724  010BF8  0EFE               	movlw	-2
 12725  010BFA  006F FF8C  F025    	movff	plusw1,btemp
 12726  010C00  0E67               	movlw	103
 12727  010C02  1825               	xorwf	btemp^0,w,c
 12728  010C04  A4D8               	btfss	status,2,c
 12729  010C06  D015               	goto	l10376
 12730                           
 12731                           ;stkvar	_ne @ sp[(-56)+46]
 12732  010C08  0EF7               	movlw	-9
 12733  010C0A  AEE3               	btfss	plusw1,7,c
 12734  010C0C  D012               	goto	l10376
 12735                           
 12736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12737                           ;stkvar	_t @ sp[(-56)+52]
 12738  010C0E  0EFC               	movlw	-4
 12739  010C10  50E3               	movf	plusw1,w,c
 12740  010C12  0F01               	addlw	1
 12741  010C14  6E25               	movwf	btemp^0,c
 12742  010C16  0EFC               	movlw	-4
 12743  010C18  0060  F097  FFE3   	movff	btemp,plusw1
 12744  010C1E  6A25               	clrf	btemp^0,c
 12745  010C20  0EFD               	movlw	-3
 12746  010C22  50E3               	movf	plusw1,w,c
 12747  010C24  2025               	addwfc	btemp^0,w,c
 12748  010C26  6E25               	movwf	btemp^0,c
 12749  010C28  0EFD               	movlw	-3
 12750  010C2A  0060  F097  FFE3   	movff	btemp,plusw1
 12751                           
 12752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12753  010C30  D0AF               	goto	l10404
 12754  010C32                     l10376:
 12755                           
 12756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12757                           ;stkvar	_pp @ sp[(-56)+50]
 12758  010C32  0EFA               	movlw	-6
 12759  010C34  006F FF8C  F025    	movff	plusw1,btemp
 12760  010C3A  0EFB               	movlw	-5
 12761  010C3C  50E3               	movf	plusw1,w,c
 12762  010C3E  1025               	iorwf	btemp^0,w,c
 12763  010C40  A4D8               	btfss	status,2,c
 12764  010C42  D070               	goto	l10396
 12765                           
 12766                           ;stkvar	_ne @ sp[(-56)+46]
 12767  010C44  0EF7               	movlw	-9
 12768  010C46  AEE3               	btfss	plusw1,7,c
 12769  010C48  D06D               	goto	l10396
 12770                           
 12771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12772                           ;stkvar	_n @ sp[(-56)+32]
 12773  010C4A  0EE8               	movlw	-24
 12774  010C4C  006F FF8C  F02F    	movff	plusw1,btemp+10
 12775  010C52  0EE9               	movlw	-23
 12776  010C54  006F FF8C  F030    	movff	plusw1,btemp+11
 12777  010C5A  0E94               	movlw	low _dbuf
 12778  010C5C  242F               	addwf	(btemp+10)^0,w,c
 12779  010C5E  6ED9               	movwf	fsr2l,c
 12780  010C60  0E03               	movlw	high _dbuf
 12781  010C62  2030               	addwfc	(btemp+11)^0,w,c
 12782  010C64  6EDA               	movwf	fsr2h,c
 12783  010C66  0E2E               	movlw	46
 12784  010C68  6EDF               	movwf	indf2,c
 12785                           
 12786                           ;stkvar	_n @ sp[(-56)+32]
 12787  010C6A  0EE8               	movlw	-24
 12788  010C6C  50E3               	movf	plusw1,w,c
 12789  010C6E  0F01               	addlw	1
 12790  010C70  6E25               	movwf	btemp^0,c
 12791  010C72  0EE8               	movlw	-24
 12792  010C74  0060  F097  FFE3   	movff	btemp,plusw1
 12793  010C7A  6A25               	clrf	btemp^0,c
 12794  010C7C  0EE9               	movlw	-23
 12795  010C7E  50E3               	movf	plusw1,w,c
 12796  010C80  2025               	addwfc	btemp^0,w,c
 12797  010C82  6E25               	movwf	btemp^0,c
 12798  010C84  0EE9               	movlw	-23
 12799  010C86  0060  F097  FFE3   	movff	btemp,plusw1
 12800                           
 12801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12802                           ;stkvar	_w @ sp[(-56)+38]
 12803  010C8C  50E1               	movf	fsr1l,w,c
 12804  010C8E  0FEE               	addlw	-18
 12805  010C90  6ED9               	movwf	fsr2l,c
 12806  010C92  50E2               	movf	fsr1h,w,c
 12807  010C94  6EDA               	movwf	fsr2h,c
 12808  010C96  0EFF               	movlw	255
 12809  010C98  22DA               	addwfc	fsr2h,f,c
 12810  010C9A  06DE               	decf	postinc2,f,c
 12811  010C9C  0E00               	movlw	0
 12812  010C9E  5ADD               	subwfb	postdec2,f,c
 12813                           
 12814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12815  010CA0  0E01               	movlw	1
 12816  010CA2  6E2F               	movwf	(btemp+10)^0,c
 12817  010CA4  0E00               	movlw	0
 12818  010CA6  6E30               	movwf	(btemp+11)^0,c
 12819                           
 12820                           ;stkvar	_pp @ sp[(-56)+50]
 12821  010CA8  0EFA               	movlw	-6
 12822  010CAA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12823  010CB0  0EFB               	movlw	-5
 12824  010CB2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12825  010CB8  D035               	goto	l10396
 12826  010CBA                     l10388:
 12827                           
 12828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12829                           ;stkvar	_n @ sp[(-56)+32]
 12830  010CBA  0EE8               	movlw	-24
 12831  010CBC  006F FF8C  F02F    	movff	plusw1,btemp+10
 12832  010CC2  0EE9               	movlw	-23
 12833  010CC4  006F FF8C  F030    	movff	plusw1,btemp+11
 12834  010CCA  0E94               	movlw	low _dbuf
 12835  010CCC  242F               	addwf	(btemp+10)^0,w,c
 12836  010CCE  6ED9               	movwf	fsr2l,c
 12837  010CD0  0E03               	movlw	high _dbuf
 12838  010CD2  2030               	addwfc	(btemp+11)^0,w,c
 12839  010CD4  6EDA               	movwf	fsr2h,c
 12840  010CD6  0E30               	movlw	48
 12841  010CD8  6EDF               	movwf	indf2,c
 12842                           
 12843                           ;stkvar	_n @ sp[(-56)+32]
 12844  010CDA  0EE8               	movlw	-24
 12845  010CDC  50E3               	movf	plusw1,w,c
 12846  010CDE  0F01               	addlw	1
 12847  010CE0  6E25               	movwf	btemp^0,c
 12848  010CE2  0EE8               	movlw	-24
 12849  010CE4  0060  F097  FFE3   	movff	btemp,plusw1
 12850  010CEA  6A25               	clrf	btemp^0,c
 12851  010CEC  0EE9               	movlw	-23
 12852  010CEE  50E3               	movf	plusw1,w,c
 12853  010CF0  2025               	addwfc	btemp^0,w,c
 12854  010CF2  6E25               	movwf	btemp^0,c
 12855  010CF4  0EE9               	movlw	-23
 12856  010CF6  0060  F097  FFE3   	movff	btemp,plusw1
 12857                           
 12858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12859                           ;stkvar	_w @ sp[(-56)+38]
 12860  010CFC  50E1               	movf	fsr1l,w,c
 12861  010CFE  0FEE               	addlw	-18
 12862  010D00  6ED9               	movwf	fsr2l,c
 12863  010D02  50E2               	movf	fsr1h,w,c
 12864  010D04  6EDA               	movwf	fsr2h,c
 12865  010D06  0EFF               	movlw	255
 12866  010D08  22DA               	addwfc	fsr2h,f,c
 12867  010D0A  06DE               	decf	postinc2,f,c
 12868  010D0C  0E00               	movlw	0
 12869  010D0E  5ADD               	subwfb	postdec2,f,c
 12870                           
 12871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12872                           ;stkvar	_t @ sp[(-56)+52]
 12873  010D10  50E1               	movf	fsr1l,w,c
 12874  010D12  0FFC               	addlw	-4
 12875  010D14  6ED9               	movwf	fsr2l,c
 12876  010D16  50E2               	movf	fsr1h,w,c
 12877  010D18  6EDA               	movwf	fsr2h,c
 12878  010D1A  0EFF               	movlw	255
 12879  010D1C  22DA               	addwfc	fsr2h,f,c
 12880  010D1E  06DE               	decf	postinc2,f,c
 12881  010D20  0E00               	movlw	0
 12882  010D22  5ADD               	subwfb	postdec2,f,c
 12883  010D24                     l10396:
 12884                           
 12885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12886                           ;stkvar	_t @ sp[(-56)+52]
 12887  010D24  0EFC               	movlw	-4
 12888  010D26  006F FF8C  F025    	movff	plusw1,btemp
 12889  010D2C  0EFD               	movlw	-3
 12890  010D2E  50E3               	movf	plusw1,w,c
 12891  010D30  1025               	iorwf	btemp^0,w,c
 12892  010D32  A4D8               	btfss	status,2,c
 12893  010D34  D7C2               	goto	l10388
 12894                           
 12895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12896                           ;stkvar	_n @ sp[(-56)+32]
 12897  010D36  0EE8               	movlw	-24
 12898  010D38  006F FF8C  F02F    	movff	plusw1,btemp+10
 12899  010D3E  0EE9               	movlw	-23
 12900  010D40  006F FF8C  F030    	movff	plusw1,btemp+11
 12901  010D46  0E94               	movlw	low _dbuf
 12902  010D48  242F               	addwf	(btemp+10)^0,w,c
 12903  010D4A  6ED9               	movwf	fsr2l,c
 12904  010D4C  0E03               	movlw	high _dbuf
 12905  010D4E  2030               	addwfc	(btemp+11)^0,w,c
 12906  010D50  6EDA               	movwf	fsr2h,c
 12907                           
 12908                           ;stkvar	_d @ sp[(-56)+44]
 12909  010D52  0EF4               	movlw	-12
 12910  010D54  50E3               	movf	plusw1,w,c
 12911  010D56  0F30               	addlw	48
 12912  010D58  6EDF               	movwf	indf2,c
 12913                           
 12914                           ;stkvar	_n @ sp[(-56)+32]
 12915  010D5A  0EE8               	movlw	-24
 12916  010D5C  50E3               	movf	plusw1,w,c
 12917  010D5E  0F01               	addlw	1
 12918  010D60  6E25               	movwf	btemp^0,c
 12919  010D62  0EE8               	movlw	-24
 12920  010D64  0060  F097  FFE3   	movff	btemp,plusw1
 12921  010D6A  6A25               	clrf	btemp^0,c
 12922  010D6C  0EE9               	movlw	-23
 12923  010D6E  50E3               	movf	plusw1,w,c
 12924  010D70  2025               	addwfc	btemp^0,w,c
 12925  010D72  6E25               	movwf	btemp^0,c
 12926  010D74  0EE9               	movlw	-23
 12927  010D76  0060  F097  FFE3   	movff	btemp,plusw1
 12928                           
 12929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12930                           ;stkvar	_w @ sp[(-56)+38]
 12931  010D7C  50E1               	movf	fsr1l,w,c
 12932  010D7E  0FEE               	addlw	-18
 12933  010D80  6ED9               	movwf	fsr2l,c
 12934  010D82  50E2               	movf	fsr1h,w,c
 12935  010D84  6EDA               	movwf	fsr2h,c
 12936  010D86  0EFF               	movlw	255
 12937  010D88  22DA               	addwfc	fsr2h,f,c
 12938  010D8A  06DE               	decf	postinc2,f,c
 12939  010D8C  0E00               	movlw	0
 12940  010D8E  5ADD               	subwfb	postdec2,f,c
 12941  010D90                     l10404:
 12942                           
 12943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12944                           ;stkvar	_u @ sp[(-56)+12]
 12945  010D90  0ED4               	movlw	-44
 12946  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12947  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12948  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12949  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12950                           
 12951                           ;stkvar	_l @ sp[(-60)+20]
 12952  010DAA  0ED8               	movlw	-40
 12953  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12954  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12955  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12956  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12957  010DC4  EC14  F093         	call	___flmul	;wreg free
 12958  010DC8  0060  F097  FFE6   	movff	btemp,postinc1
 12959  010DCE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12960  010DD4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12961  010DDA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12962                           
 12963                           ;stkvar	_h @ sp[(-60)+24]
 12964  010DE0  0EDC               	movlw	-36
 12965  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12966  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12967  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12968  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12969  010DFA  EC36  F0C5         	call	___flsub	;wreg free
 12970                           
 12971                           ;stkvar	_h @ sp[(-56)+24]
 12972  010DFE  0EE0               	movlw	-32
 12973  010E00  0060  F097  FFE3   	movff	btemp,plusw1
 12974  010E06  0EE1               	movlw	-31
 12975  010E08  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12976  010E0E  0EE2               	movlw	-30
 12977  010E10  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12978  010E16  0EE3               	movlw	-29
 12979  010E18  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12980                           
 12981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12982  010E1E  0E00               	movlw	0
 12983  010E20  6EE6               	movwf	postinc1,c
 12984  010E22  0E00               	movlw	0
 12985  010E24  6EE6               	movwf	postinc1,c
 12986  010E26  0E20               	movlw	32
 12987  010E28  6EE6               	movwf	postinc1,c
 12988  010E2A  0E41               	movlw	65
 12989  010E2C  6EE6               	movwf	postinc1,c
 12990                           
 12991                           ;stkvar	_u @ sp[(-60)+12]
 12992  010E2E  0ED0               	movlw	-48
 12993  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12994  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12995  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12996  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12997  010E48  EC07  F09B         	call	___fldiv	;wreg free
 12998                           
 12999                           ;stkvar	_u @ sp[(-56)+12]
 13000  010E4C  0ED4               	movlw	-44
 13001  010E4E  0060  F097  FFE3   	movff	btemp,plusw1
 13002  010E54  0ED5               	movlw	-43
 13003  010E56  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13004  010E5C  0ED6               	movlw	-42
 13005  010E5E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 13006  010E64  0ED7               	movlw	-41
 13007  010E66  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 13008                           
 13009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 13010                           ;stkvar	_ne @ sp[(-56)+46]
 13011  010E6C  50E1               	movf	fsr1l,w,c
 13012  010E6E  0FF6               	addlw	-10
 13013  010E70  6ED9               	movwf	fsr2l,c
 13014  010E72  50E2               	movf	fsr1h,w,c
 13015  010E74  6EDA               	movwf	fsr2h,c
 13016  010E76  0EFF               	movlw	255
 13017  010E78  22DA               	addwfc	fsr2h,f,c
 13018  010E7A  06DE               	decf	postinc2,f,c
 13019  010E7C  0E00               	movlw	0
 13020  010E7E  5ADD               	subwfb	postdec2,f,c
 13021                           
 13022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 13023                           ;stkvar	_i @ sp[(-56)+36]
 13024  010E80  0EEC               	movlw	-20
 13025  010E82  50E3               	movf	plusw1,w,c
 13026  010E84  0F01               	addlw	1
 13027  010E86  6E25               	movwf	btemp^0,c
 13028  010E88  0EEC               	movlw	-20
 13029  010E8A  0060  F097  FFE3   	movff	btemp,plusw1
 13030  010E90  6A25               	clrf	btemp^0,c
 13031  010E92  0EED               	movlw	-19
 13032  010E94  50E3               	movf	plusw1,w,c
 13033  010E96  2025               	addwfc	btemp^0,w,c
 13034  010E98  6E25               	movwf	btemp^0,c
 13035  010E9A  0EED               	movlw	-19
 13036  010E9C  0060  F097  FFE3   	movff	btemp,plusw1
 13037  010EA2                     l10412:
 13038                           
 13039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13040                           ;stkvar	_m @ sp[(-56)+48]
 13041                           ;stkvar	_i @ sp[(-56)+36]
 13042  010EA2  50E1               	movf	fsr1l,w,c
 13043  010EA4  0FEC               	addlw	-20
 13044  010EA6  6ED9               	movwf	fsr2l,c
 13045  010EA8  50E2               	movf	fsr1h,w,c
 13046  010EAA  6EDA               	movwf	fsr2h,c
 13047  010EAC  0EFF               	movlw	255
 13048  010EAE  22DA               	addwfc	fsr2h,f,c
 13049  010EB0  0EF8               	movlw	-8
 13050  010EB2  50E3               	movf	plusw1,w,c
 13051  010EB4  5CDE               	subwf	postinc2,w,c
 13052  010EB6  50DE               	movf	postinc2,w,c
 13053  010EB8  0A80               	xorlw	128
 13054  010EBA  6E25               	movwf	btemp^0,c
 13055  010EBC  0EF9               	movlw	-7
 13056  010EBE  50E3               	movf	plusw1,w,c
 13057  010EC0  0A80               	xorlw	128
 13058  010EC2  5825               	subwfb	btemp^0,w,c
 13059  010EC4  B0D8               	btfsc	status,0,c
 13060  010EC6  D00E               	goto	u9990
 13061                           
 13062                           ;stkvar	_n @ sp[(-56)+32]
 13063  010EC8  0EE9               	movlw	-23
 13064  010ECA  BEE3               	btfsc	plusw1,7,c
 13065  010ECC  D633               	goto	l10362
 13066  010ECE  0EE9               	movlw	-23
 13067  010ED0  50E3               	movf	plusw1,w,c
 13068  010ED2  E108               	bnz	u9990
 13069  010ED4  0EE8               	movlw	-24
 13070  010ED6  006F FF8C  F025    	movff	plusw1,btemp
 13071  010EDC  0E4B               	movlw	75
 13072  010EDE  5E25               	subwf	btemp^0,f,c
 13073  010EE0  A0D8               	btfss	status,0,c
 13074  010EE2  D628               	goto	l10362
 13075  010EE4                     u9990:
 13076                           
 13077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13078                           ;stkvar	_pp @ sp[(-56)+50]
 13079  010EE4  0EFA               	movlw	-6
 13080  010EE6  006F FF8C  F025    	movff	plusw1,btemp
 13081  010EEC  0EFB               	movlw	-5
 13082  010EEE  50E3               	movf	plusw1,w,c
 13083  010EF0  1025               	iorwf	btemp^0,w,c
 13084  010EF2  B4D8               	btfsc	status,2,c
 13085  010EF4  A80E               	btfss	_flags^0,4,c
 13086  010EF6  D021               	goto	l10424
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13089                           ;stkvar	_n @ sp[(-56)+32]
 13090  010EF8  0EE8               	movlw	-24
 13091  010EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13092  010F00  0EE9               	movlw	-23
 13093  010F02  006F FF8C  F030    	movff	plusw1,btemp+11
 13094  010F08  0E94               	movlw	low _dbuf
 13095  010F0A  242F               	addwf	(btemp+10)^0,w,c
 13096  010F0C  6ED9               	movwf	fsr2l,c
 13097  010F0E  0E03               	movlw	high _dbuf
 13098  010F10  2030               	addwfc	(btemp+11)^0,w,c
 13099  010F12  6EDA               	movwf	fsr2h,c
 13100  010F14  0E2E               	movlw	46
 13101  010F16  6EDF               	movwf	indf2,c
 13102                           
 13103                           ;stkvar	_n @ sp[(-56)+32]
 13104  010F18  0EE8               	movlw	-24
 13105  010F1A  50E3               	movf	plusw1,w,c
 13106  010F1C  0F01               	addlw	1
 13107  010F1E  6E25               	movwf	btemp^0,c
 13108  010F20  0EE8               	movlw	-24
 13109  010F22  0060  F097  FFE3   	movff	btemp,plusw1
 13110  010F28  6A25               	clrf	btemp^0,c
 13111  010F2A  0EE9               	movlw	-23
 13112  010F2C  50E3               	movf	plusw1,w,c
 13113  010F2E  2025               	addwfc	btemp^0,w,c
 13114  010F30  6E25               	movwf	btemp^0,c
 13115  010F32  0EE9               	movlw	-23
 13116  010F34  0060  F097  FFE3   	movff	btemp,plusw1
 13117  010F3A                     l10424:
 13118                           
 13119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13120                           ;stkvar	_n @ sp[(-56)+32]
 13121  010F3A  0EE8               	movlw	-24
 13122  010F3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13123  010F42  0EE9               	movlw	-23
 13124  010F44  006F FF8C  F030    	movff	plusw1,btemp+11
 13125  010F4A  0E94               	movlw	low _dbuf
 13126  010F4C  242F               	addwf	(btemp+10)^0,w,c
 13127  010F4E  6ED9               	movwf	fsr2l,c
 13128  010F50  0E03               	movlw	high _dbuf
 13129  010F52  2030               	addwfc	(btemp+11)^0,w,c
 13130  010F54  6EDA               	movwf	fsr2h,c
 13131  010F56  0E00               	movlw	0
 13132  010F58  6EDF               	movwf	indf2,c
 13133                           
 13134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13135                           ;stkvar	_nmode @ sp[(-56)+55]
 13136  010F5A  0EFF               	movlw	-1
 13137  010F5C  006F FF8C  F025    	movff	plusw1,btemp
 13138  010F62  0E65               	movlw	101
 13139  010F64  1825               	xorwf	btemp^0,w,c
 13140  010F66  A4D8               	btfss	status,2,c
 13141  010F68  EF16  F081         	goto	l10228
 13142                           
 13143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13144  010F6C  0E4F               	movlw	79
 13145  010F6E  6E2F               	movwf	(btemp+10)^0,c
 13146  010F70  0E00               	movlw	0
 13147  010F72  6E30               	movwf	(btemp+11)^0,c
 13148                           
 13149                           ;stkvar	_i @ sp[(-56)+36]
 13150  010F74  0EEC               	movlw	-20
 13151  010F76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13152  010F7C  0EED               	movlw	-19
 13153  010F7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13154                           
 13155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13156                           ;stkvar	_i @ sp[(-56)+36]
 13157  010F84  0EEC               	movlw	-20
 13158  010F86  006F FF8C  F02F    	movff	plusw1,btemp+10
 13159  010F8C  0EED               	movlw	-19
 13160  010F8E  006F FF8C  F030    	movff	plusw1,btemp+11
 13161  010F94  0E94               	movlw	low _dbuf
 13162  010F96  242F               	addwf	(btemp+10)^0,w,c
 13163  010F98  6ED9               	movwf	fsr2l,c
 13164  010F9A  0E03               	movlw	high _dbuf
 13165  010F9C  2030               	addwfc	(btemp+11)^0,w,c
 13166  010F9E  6EDA               	movwf	fsr2h,c
 13167  010FA0  0E00               	movlw	0
 13168  010FA2  6EDF               	movwf	indf2,c
 13169                           
 13170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13171                           ;stkvar	_sign @ sp[(-56)+42]
 13172  010FA4  0EF2               	movlw	-14
 13173  010FA6  6AE3               	clrf	plusw1,c
 13174  010FA8  0EF3               	movlw	-13
 13175  010FAA  6AE3               	clrf	plusw1,c
 13176                           
 13177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13178                           ;stkvar	_e @ sp[(-56)+34]
 13179  010FAC  0EEB               	movlw	-21
 13180  010FAE  AEE3               	btfss	plusw1,7,c
 13181  010FB0  D012               	goto	l10438
 13182                           
 13183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13184  010FB2  0E01               	movlw	1
 13185  010FB4  6E2F               	movwf	(btemp+10)^0,c
 13186  010FB6  0E00               	movlw	0
 13187  010FB8  6E30               	movwf	(btemp+11)^0,c
 13188                           
 13189                           ;stkvar	_sign @ sp[(-56)+42]
 13190  010FBA  0EF2               	movlw	-14
 13191  010FBC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13192  010FC2  0EF3               	movlw	-13
 13193  010FC4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13194                           
 13195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13196                           ;stkvar	_e @ sp[(-56)+34]
 13197                           ;stkvar	_e @ sp[(-56)+34]
 13198  010FCA  0EEA               	movlw	-22
 13199  010FCC  6CE3               	negf	plusw1,c
 13200  010FCE  0EEB               	movlw	-21
 13201  010FD0  1EE3               	comf	plusw1,f,c
 13202  010FD2  B0D8               	btfsc	status,0,c
 13203  010FD4  2AE3               	incf	plusw1,f,c
 13204  010FD6                     l10438:
 13205                           
 13206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13207  010FD6  0E02               	movlw	2
 13208  010FD8  6E2F               	movwf	(btemp+10)^0,c
 13209  010FDA  0E00               	movlw	0
 13210  010FDC  6E30               	movwf	(btemp+11)^0,c
 13211                           
 13212                           ;stkvar	_p @ sp[(-56)+40]
 13213  010FDE  0EF0               	movlw	-16
 13214  010FE0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13215  010FE6  0EF1               	movlw	-15
 13216  010FE8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13217                           
 13218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13219  010FEE  D051               	goto	l10450
 13220  010FF0                     l10440:
 13221                           
 13222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13223                           ;stkvar	_i @ sp[(-56)+36]
 13224  010FF0  50E1               	movf	fsr1l,w,c
 13225  010FF2  0FEC               	addlw	-20
 13226  010FF4  6ED9               	movwf	fsr2l,c
 13227  010FF6  50E2               	movf	fsr1h,w,c
 13228  010FF8  6EDA               	movwf	fsr2h,c
 13229  010FFA  0EFF               	movlw	255
 13230  010FFC  22DA               	addwfc	fsr2h,f,c
 13231  010FFE  06DE               	decf	postinc2,f,c
 13232  011000  0E00               	movlw	0
 13233  011002  5ADD               	subwfb	postdec2,f,c
 13234                           
 13235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13236                           ;stkvar	_i @ sp[(-56)+36]
 13237  011004  0EEC               	movlw	-20
 13238  011006  006F FF8C  F02F    	movff	plusw1,btemp+10
 13239  01100C  0EED               	movlw	-19
 13240  01100E  006F FF8C  F030    	movff	plusw1,btemp+11
 13241  011014  0E94               	movlw	low _dbuf
 13242  011016  242F               	addwf	(btemp+10)^0,w,c
 13243  011018  6ED9               	movwf	fsr2l,c
 13244  01101A  0E03               	movlw	high _dbuf
 13245  01101C  2030               	addwfc	(btemp+11)^0,w,c
 13246  01101E  6EDA               	movwf	fsr2h,c
 13247  011020  0E0A               	movlw	10
 13248  011022  6EE6               	movwf	postinc1,c
 13249  011024  0E00               	movlw	0
 13250  011026  6EE6               	movwf	postinc1,c
 13251                           
 13252                           ;stkvar	_e @ sp[(-58)+34]
 13253  011028  0EE8               	movlw	-24
 13254  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13255  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13256  011036  ECA6  F0B8         	call	___awmod	;wreg free
 13257  01103A  5025               	movf	btemp^0,w,c
 13258  01103C  0F30               	addlw	48
 13259  01103E  6EDF               	movwf	indf2,c
 13260                           
 13261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13262  011040  0E0A               	movlw	10
 13263  011042  6EE6               	movwf	postinc1,c
 13264  011044  0E00               	movlw	0
 13265  011046  6EE6               	movwf	postinc1,c
 13266                           
 13267                           ;stkvar	_e @ sp[(-58)+34]
 13268  011048  0EE8               	movlw	-24
 13269  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13270  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13271  011056  EC42  F0B6         	call	___awdiv	;wreg free
 13272                           
 13273                           ;stkvar	_e @ sp[(-56)+34]
 13274  01105A  0EEA               	movlw	-22
 13275  01105C  0060  F097  FFE3   	movff	btemp,plusw1
 13276  011062  0EEB               	movlw	-21
 13277  011064  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13278                           
 13279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13280                           ;stkvar	_p @ sp[(-56)+40]
 13281  01106A  50E1               	movf	fsr1l,w,c
 13282  01106C  0FF0               	addlw	-16
 13283  01106E  6ED9               	movwf	fsr2l,c
 13284  011070  50E2               	movf	fsr1h,w,c
 13285  011072  6EDA               	movwf	fsr2h,c
 13286  011074  0EFF               	movlw	255
 13287  011076  22DA               	addwfc	fsr2h,f,c
 13288  011078  06DE               	decf	postinc2,f,c
 13289  01107A  0E00               	movlw	0
 13290  01107C  5ADD               	subwfb	postdec2,f,c
 13291                           
 13292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13293                           ;stkvar	_w @ sp[(-56)+38]
 13294  01107E  50E1               	movf	fsr1l,w,c
 13295  011080  0FEE               	addlw	-18
 13296  011082  6ED9               	movwf	fsr2l,c
 13297  011084  50E2               	movf	fsr1h,w,c
 13298  011086  6EDA               	movwf	fsr2h,c
 13299  011088  0EFF               	movlw	255
 13300  01108A  22DA               	addwfc	fsr2h,f,c
 13301  01108C  06DE               	decf	postinc2,f,c
 13302  01108E  0E00               	movlw	0
 13303  011090  5ADD               	subwfb	postdec2,f,c
 13304  011092                     l10450:
 13305                           
 13306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13307                           ;stkvar	_e @ sp[(-56)+34]
 13308  011092  0EEA               	movlw	-22
 13309  011094  006F FF8C  F025    	movff	plusw1,btemp
 13310  01109A  0EEB               	movlw	-21
 13311  01109C  50E3               	movf	plusw1,w,c
 13312  01109E  1025               	iorwf	btemp^0,w,c
 13313  0110A0  A4D8               	btfss	status,2,c
 13314  0110A2  D7A6               	goto	l10440
 13315                           
 13316                           ;stkvar	_p @ sp[(-56)+40]
 13317  0110A4  0EF1               	movlw	-15
 13318  0110A6  BEE3               	btfsc	plusw1,7,c
 13319  0110A8  D007               	goto	u10050
 13320  0110AA  0EF1               	movlw	-15
 13321  0110AC  50E3               	movf	plusw1,w,c
 13322  0110AE  E1A0               	bnz	l10440
 13323  0110B0  0EF0               	movlw	-16
 13324  0110B2  04E3               	decf	plusw1,w,c
 13325  0110B4  B0D8               	btfsc	status,0,c
 13326  0110B6  D79C               	goto	l10440
 13327  0110B8                     u10050:
 13328                           
 13329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13330                           ;stkvar	_i @ sp[(-56)+36]
 13331  0110B8  50E1               	movf	fsr1l,w,c
 13332  0110BA  0FEC               	addlw	-20
 13333  0110BC  6ED9               	movwf	fsr2l,c
 13334  0110BE  50E2               	movf	fsr1h,w,c
 13335  0110C0  6EDA               	movwf	fsr2h,c
 13336  0110C2  0EFF               	movlw	255
 13337  0110C4  22DA               	addwfc	fsr2h,f,c
 13338  0110C6  06DE               	decf	postinc2,f,c
 13339  0110C8  0E00               	movlw	0
 13340  0110CA  5ADD               	subwfb	postdec2,f,c
 13341                           
 13342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13343                           ;stkvar	_sign @ sp[(-56)+42]
 13344  0110CC  0EF2               	movlw	-14
 13345  0110CE  006F FF8C  F025    	movff	plusw1,btemp
 13346  0110D4  0EF3               	movlw	-13
 13347  0110D6  50E3               	movf	plusw1,w,c
 13348  0110D8  1025               	iorwf	btemp^0,w,c
 13349  0110DA  A4D8               	btfss	status,2,c
 13350  0110DC  D002               	goto	l10460
 13351  0110DE  0E2B               	movlw	43
 13352  0110E0  D001               	goto	L11
 13353  0110E2                     l10460:
 13354  0110E2  0E2D               	movlw	45
 13355  0110E4                     L11:
 13356  0110E4  6E2F               	movwf	(btemp+10)^0,c
 13357  0110E6  0E00               	movlw	0
 13358  0110E8  6E30               	movwf	(btemp+11)^0,c
 13359                           
 13360                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13361  0110EA  0ECC               	movlw	-52
 13362  0110EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13363  0110F2  0ECD               	movlw	-51
 13364  0110F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13365                           
 13366                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13367                           ;stkvar	_i @ sp[(-56)+36]
 13368  0110FA  0EEC               	movlw	-20
 13369  0110FC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13370  011102  0EED               	movlw	-19
 13371  011104  006F FF8C  F030    	movff	plusw1,btemp+11
 13372  01110A  0E94               	movlw	low _dbuf
 13373  01110C  242F               	addwf	(btemp+10)^0,w,c
 13374  01110E  6ED9               	movwf	fsr2l,c
 13375  011110  0E03               	movlw	high _dbuf
 13376  011112  2030               	addwfc	(btemp+11)^0,w,c
 13377  011114  6EDA               	movwf	fsr2h,c
 13378  011116  0ECC               	movlw	-52
 13379  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13380                           
 13381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13382                           ;stkvar	_w @ sp[(-56)+38]
 13383  01111E  50E1               	movf	fsr1l,w,c
 13384  011120  0FEE               	addlw	-18
 13385  011122  6ED9               	movwf	fsr2l,c
 13386  011124  50E2               	movf	fsr1h,w,c
 13387  011126  6EDA               	movwf	fsr2h,c
 13388  011128  0EFF               	movlw	255
 13389  01112A  22DA               	addwfc	fsr2h,f,c
 13390  01112C  06DE               	decf	postinc2,f,c
 13391  01112E  0E00               	movlw	0
 13392  011130  5ADD               	subwfb	postdec2,f,c
 13393                           
 13394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13395                           ;stkvar	_i @ sp[(-56)+36]
 13396  011132  50E1               	movf	fsr1l,w,c
 13397  011134  0FEC               	addlw	-20
 13398  011136  6ED9               	movwf	fsr2l,c
 13399  011138  50E2               	movf	fsr1h,w,c
 13400  01113A  6EDA               	movwf	fsr2h,c
 13401  01113C  0EFF               	movlw	255
 13402  01113E  22DA               	addwfc	fsr2h,f,c
 13403  011140  06DE               	decf	postinc2,f,c
 13404  011142  0E00               	movlw	0
 13405  011144  5ADD               	subwfb	postdec2,f,c
 13406  011146  0EBF               	movlw	191
 13407  011148  6E2F               	movwf	(btemp+10)^0,c
 13408  01114A  0EFF               	movlw	255
 13409  01114C  6E30               	movwf	(btemp+11)^0,c
 13410                           
 13411                           ;stkvar	_c @ sp[(-56)+-7]
 13412  01114E  0EC1               	movlw	-63
 13413  011150  50E3               	movf	plusw1,w,c
 13414  011152  6E2D               	movwf	(btemp+8)^0,c
 13415  011154  6A2E               	clrf	(btemp+9)^0,c
 13416  011156  502F               	movf	(btemp+10)^0,w,c
 13417  011158  262D               	addwf	(btemp+8)^0,f,c
 13418  01115A  5030               	movf	(btemp+11)^0,w,c
 13419  01115C  222E               	addwfc	(btemp+9)^0,f,c
 13420  01115E  502E               	movf	(btemp+9)^0,w,c
 13421  011160  E106               	bnz	u10070
 13422  011162  0E1A               	movlw	26
 13423  011164  5C2D               	subwf	(btemp+8)^0,w,c
 13424  011166  B0D8               	btfsc	status,0,c
 13425  011168  D002               	goto	u10070
 13426  01116A  0E01               	movlw	1
 13427  01116C  D001               	goto	u10080
 13428  01116E                     u10070:
 13429  01116E  0E00               	movlw	0
 13430  011170                     u10080:
 13431  011170  6E2F               	movwf	(btemp+10)^0,c
 13432  011172  6A30               	clrf	(btemp+11)^0,c
 13433                           
 13434                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13435  011174  0EC8               	movlw	-56
 13436  011176  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13437  01117C  0EC9               	movlw	-55
 13438  01117E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13439                           
 13440                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13441  011184  0EC8               	movlw	-56
 13442  011186  006F FF8C  F025    	movff	plusw1,btemp
 13443  01118C  0EC9               	movlw	-55
 13444  01118E  50E3               	movf	plusw1,w,c
 13445  011190  1025               	iorwf	btemp^0,w,c
 13446  011192  A4D8               	btfss	status,2,c
 13447  011194  D002               	goto	l10476
 13448  011196  0E65               	movlw	101
 13449  011198  D001               	goto	L12
 13450  01119A                     l10476:
 13451  01119A  0E45               	movlw	69
 13452  01119C                     L12:
 13453  01119C  6E2F               	movwf	(btemp+10)^0,c
 13454  01119E  0E00               	movlw	0
 13455  0111A0  6E30               	movwf	(btemp+11)^0,c
 13456                           
 13457                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13458  0111A2  0ECA               	movlw	-54
 13459  0111A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13460  0111AA  0ECB               	movlw	-53
 13461  0111AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13462                           
 13463                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13464                           ;stkvar	_i @ sp[(-56)+36]
 13465  0111B2  0EEC               	movlw	-20
 13466  0111B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13467  0111BA  0EED               	movlw	-19
 13468  0111BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13469  0111C2  0E94               	movlw	low _dbuf
 13470  0111C4  242F               	addwf	(btemp+10)^0,w,c
 13471  0111C6  6ED9               	movwf	fsr2l,c
 13472  0111C8  0E03               	movlw	high _dbuf
 13473  0111CA  2030               	addwfc	(btemp+11)^0,w,c
 13474  0111CC  6EDA               	movwf	fsr2h,c
 13475  0111CE  0ECA               	movlw	-54
 13476  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13477                           
 13478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13479                           ;stkvar	_w @ sp[(-56)+38]
 13480  0111D6  50E1               	movf	fsr1l,w,c
 13481  0111D8  0FEE               	addlw	-18
 13482  0111DA  6ED9               	movwf	fsr2l,c
 13483  0111DC  50E2               	movf	fsr1h,w,c
 13484  0111DE  6EDA               	movwf	fsr2h,c
 13485  0111E0  0EFF               	movlw	255
 13486  0111E2  22DA               	addwfc	fsr2h,f,c
 13487  0111E4  06DE               	decf	postinc2,f,c
 13488  0111E6  0E00               	movlw	0
 13489  0111E8  5ADD               	subwfb	postdec2,f,c
 13490                           
 13491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13492                           ;stkvar	_i @ sp[(-56)+36]
 13493  0111EA  0EEC               	movlw	-20
 13494  0111EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13495  0111F2  0EED               	movlw	-19
 13496  0111F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13497  0111FA  0E94               	movlw	low _dbuf
 13498  0111FC  242F               	addwf	(btemp+10)^0,w,c
 13499  0111FE  6E2D               	movwf	(btemp+8)^0,c
 13500  011200  0E03               	movlw	high _dbuf
 13501  011202  2030               	addwfc	(btemp+11)^0,w,c
 13502  011204  6E2E               	movwf	(btemp+9)^0,c
 13503  011206  0060  F0B7  FFE6   	movff	btemp+8,postinc1
 13504  01120C  0060  F0BB  FFE6   	movff	btemp+9,postinc1
 13505                           
 13506                           ;stkvar	_n @ sp[(-58)+32]
 13507  011212  0E94               	movlw	low _dbuf
 13508  011214  6E2F               	movwf	(btemp+10)^0,c
 13509  011216  0E03               	movlw	high _dbuf
 13510  011218  6E30               	movwf	(btemp+11)^0,c
 13511  01121A  0EE6               	movlw	-26
 13512  01121C  50E3               	movf	plusw1,w,c
 13513  01121E  262F               	addwf	(btemp+10)^0,f,c
 13514  011220  0EE7               	movlw	-25
 13515  011222  50E3               	movf	plusw1,w,c
 13516  011224  2230               	addwfc	(btemp+11)^0,f,c
 13517  011226  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 13518  01122C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 13519  011232  EC3D  F0BC         	call	_strcpy	;wreg free
 13520  011236  EF16  F081         	goto	l10228
 13521  01123A                     l2047:
 13522                           
 13523                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13524  01123A  0EC1               	movlw	193
 13525  01123C  26E1               	addwf	fsr1l,f,c
 13526  01123E  0EFF               	movlw	255
 13527  011240  22E2               	addwfc	fsr1h,f,c
 13528  011242  0012               	return		;funcret
 13529  011244                     __end_of_efgtoa:
 13530                           	opt callstack 0
 13531                           
 13532 ;; *************** function _tolower *****************
 13533 ;; Defined at:
 13534 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;  c               2  [STACK] int 
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;		None
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  2  [STACK] int 
 13541 ;; Registers used:
 13542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13552 ;;Total ram usage:        0 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:    8
 13555 ;; This function calls:
 13556 ;;		_isupper
 13557 ;; This function is called by:
 13558 ;;		_efgtoa
 13559 ;;		_vfpfcnvrt
 13560 ;; This function uses a reentrant model
 13561 ;;
 13562                           
 13563                           	psect	text49
 13564  018302                     __ptext49:
 13565                           	opt callstack 0
 13566  018302                     _tolower:
 13567                           	opt callstack 0
 13568                           
 13569                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13570  018302  52E6               	movf	postinc1,f,c
 13571  018304  52E6               	movf	postinc1,f,c
 13572                           
 13573                           ;stkvar	_c @ sp[(-2)+-2]
 13574                           
 13575                           ;incstack = 0
 13576  018306  0EFC               	movlw	-4
 13577  018308  50E3               	movf	plusw1,w,c
 13578  01830A  0FBF               	addlw	191
 13579  01830C  6E2F               	movwf	(btemp+10)^0,c
 13580  01830E  0EFD               	movlw	-3
 13581  018310  006F FF8C  F030    	movff	plusw1,btemp+11
 13582  018316  0EFF               	movlw	255
 13583  018318  2230               	addwfc	(btemp+11)^0,f,c
 13584  01831A  5030               	movf	(btemp+11)^0,w,c
 13585  01831C  E106               	bnz	u4920
 13586  01831E  0E1A               	movlw	26
 13587  018320  5C2F               	subwf	(btemp+10)^0,w,c
 13588  018322  B0D8               	btfsc	status,0,c
 13589  018324  D002               	goto	u4920
 13590  018326  0E01               	movlw	1
 13591  018328  D001               	goto	u4930
 13592  01832A                     u4920:
 13593  01832A  0E00               	movlw	0
 13594  01832C                     u4930:
 13595  01832C  6E2F               	movwf	(btemp+10)^0,c
 13596  01832E  6A30               	clrf	(btemp+11)^0,c
 13597                           
 13598                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13599  018330  0EFE               	movlw	-2
 13600  018332  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13601  018338  0EFF               	movlw	-1
 13602  01833A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13603                           
 13604                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13605  018340  0EFE               	movlw	-2
 13606  018342  006F FF8C  F025    	movff	plusw1,btemp
 13607  018348  0EFF               	movlw	-1
 13608  01834A  50E3               	movf	plusw1,w,c
 13609  01834C  1025               	iorwf	btemp^0,w,c
 13610  01834E  B4D8               	btfsc	status,2,c
 13611  018350  D00D               	goto	l6692
 13612                           
 13613                           ;stkvar	_c @ sp[(-2)+-2]
 13614  018352  0EFC               	movlw	-4
 13615  018354  006F FF8C  F025    	movff	plusw1,btemp
 13616  01835A  0EFD               	movlw	-3
 13617  01835C  006F FF8C  F026    	movff	plusw1,btemp+1
 13618  018362  0E20               	movlw	32
 13619  018364  1225               	iorwf	btemp^0,f,c
 13620  018366  0E00               	movlw	0
 13621  018368  1226               	iorwf	(btemp+1)^0,f,c
 13622  01836A  D008               	goto	l3070
 13623  01836C                     l6692:
 13624                           
 13625                           ;stkvar	_c @ sp[(-2)+-2]
 13626  01836C  0EFC               	movlw	-4
 13627  01836E  006F FF8C  F025    	movff	plusw1,btemp
 13628  018374  0EFD               	movlw	-3
 13629  018376  006F FF8C  F026    	movff	plusw1,btemp+1
 13630  01837C                     l3070:
 13631                           
 13632                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13633  01837C  52E5               	movf	postdec1,f,c
 13634  01837E  52E5               	movf	postdec1,f,c
 13635  018380  52E5               	movf	postdec1,f,c
 13636  018382  52E5               	movf	postdec1,f,c
 13637  018384  0012               	return		;funcret
 13638  018386                     __end_of_tolower:
 13639                           	opt callstack 0
 13640                           
 13641 ;; *************** function _isupper *****************
 13642 ;; Defined at:
 13643 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;  c               2  [STACK] int 
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;		None
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  2  [STACK] int 
 13650 ;; Registers used:
 13651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13661 ;;Total ram usage:        0 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; Hardware stack levels required when called:    7
 13664 ;; This function calls:
 13665 ;;		Nothing
 13666 ;; This function is called by:
 13667 ;;		_efgtoa
 13668 ;;		_xtoa
 13669 ;;		_vfpfcnvrt
 13670 ;;		_tolower
 13671 ;; This function uses a reentrant model
 13672 ;;
 13673                           
 13674                           	psect	text50
 13675  018EA8                     __ptext50:
 13676                           	opt callstack 0
 13677  018EA8                     _isupper:
 13678                           	opt callstack 16
 13679                           
 13680                           ;stkvar	_c @ sp[(0)+-2]
 13681                           
 13682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13683                           ;incstack = 0
 13684  018EA8  0EFE               	movlw	-2
 13685  018EAA  50E3               	movf	plusw1,w,c
 13686  018EAC  0FBF               	addlw	191
 13687  018EAE  6E2F               	movwf	(btemp+10)^0,c
 13688  018EB0  0EFF               	movlw	-1
 13689  018EB2  006F FF8C  F030    	movff	plusw1,btemp+11
 13690  018EB8  0EFF               	movlw	255
 13691  018EBA  2230               	addwfc	(btemp+11)^0,f,c
 13692  018EBC  5030               	movf	(btemp+11)^0,w,c
 13693  018EBE  E106               	bnz	u4740
 13694  018EC0  0E1A               	movlw	26
 13695  018EC2  5C2F               	subwf	(btemp+10)^0,w,c
 13696  018EC4  B0D8               	btfsc	status,0,c
 13697  018EC6  D002               	goto	u4740
 13698  018EC8  0E01               	movlw	1
 13699  018ECA  D001               	goto	u4750
 13700  018ECC                     u4740:
 13701  018ECC  0E00               	movlw	0
 13702  018ECE                     u4750:
 13703  018ECE  6E25               	movwf	btemp^0,c
 13704  018ED0  6A26               	clrf	(btemp+1)^0,c
 13705                           
 13706                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13707  018ED2  52E5               	movf	postdec1,f,c
 13708  018ED4  52E5               	movf	postdec1,f,c
 13709  018ED6  0012               	return		;funcret
 13710  018ED8                     __end_of_isupper:
 13711                           	opt callstack 0
 13712                           
 13713 ;; *************** function _strcpy *****************
 13714 ;; Defined at:
 13715 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13716 ;; Parameters:    Size  Location     Type
 13717 ;;  dest            2  [STACK] PTR unsigned char 
 13718 ;;		 -> dbuf(80), 
 13719 ;;  src             2  [STACK] PTR const unsigned char 
 13720 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13721 ;;		 -> dbuf(80), 
 13722 ;; Auto vars:     Size  Location     Type
 13723 ;;  d               2  [STACK] PTR unsigned char 
 13724 ;;		 -> dbuf(80), 
 13725 ;;  s               2  [STACK] PTR const unsigned char 
 13726 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13727 ;;		 -> dbuf(80), 
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  2  [STACK] PTR unsigned char 
 13730 ;; Registers used:
 13731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13741 ;;Total ram usage:        0 bytes
 13742 ;; Hardware stack levels used:    1
 13743 ;; Hardware stack levels required when called:    7
 13744 ;; This function calls:
 13745 ;;		Nothing
 13746 ;; This function is called by:
 13747 ;;		_efgtoa
 13748 ;; This function uses a reentrant model
 13749 ;;
 13750                           
 13751                           	psect	text51
 13752  01787A                     __ptext51:
 13753                           	opt callstack 0
 13754  01787A                     _strcpy:
 13755                           	opt callstack 0
 13756                           
 13757                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13758  01787A  52E6               	movf	postinc1,f,c
 13759  01787C  52E6               	movf	postinc1,f,c
 13760  01787E  52E6               	movf	postinc1,f,c
 13761  017880  52E6               	movf	postinc1,f,c
 13762                           
 13763                           ;stkvar	_src @ sp[(-4)+-4]
 13764                           
 13765                           ;incstack = 0
 13766  017882  0EF8               	movlw	-8
 13767  017884  006F FF8C  F02F    	movff	plusw1,btemp+10
 13768  01788A  0EF9               	movlw	-7
 13769  01788C  006F FF8C  F030    	movff	plusw1,btemp+11
 13770                           
 13771                           ;stkvar	_s @ sp[(-4)+2]
 13772  017892  0EFF               	movlw	-1
 13773  017894  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13774  01789A  0EFE               	movlw	-2
 13775  01789C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13776                           
 13777                           ;stkvar	_dest @ sp[(-4)+-2]
 13778  0178A2  0EFA               	movlw	-6
 13779  0178A4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13780  0178AA  0EFB               	movlw	-5
 13781  0178AC  006F FF8C  F030    	movff	plusw1,btemp+11
 13782                           
 13783                           ;stkvar	_d @ sp[(-4)+0]
 13784  0178B2  0EFD               	movlw	-3
 13785  0178B4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13786  0178BA  0EFC               	movlw	-4
 13787  0178BC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13788  0178C2                     l10102:
 13789                           
 13790                           ;stkvar	_s @ sp[(-4)+2]
 13791  0178C2  50E1               	movf	fsr1l,w,c
 13792  0178C4  0FFE               	addlw	-2
 13793  0178C6  6ED9               	movwf	fsr2l,c
 13794  0178C8  50E2               	movf	fsr1h,w,c
 13795  0178CA  6EDA               	movwf	fsr2h,c
 13796  0178CC  0EFF               	movlw	255
 13797  0178CE  22DA               	addwfc	fsr2h,f,c
 13798  0178D0  006F FF7C  F02F    	movff	indf2,btemp+10
 13799  0178D6  0E01               	movlw	1
 13800  0178D8  26DE               	addwf	postinc2,f,c
 13801  0178DA  006F FF7C  F030    	movff	indf2,btemp+11
 13802  0178E0  0E00               	movlw	0
 13803  0178E2  22DD               	addwfc	postdec2,f,c
 13804  0178E4  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
 13805  0178EA  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
 13806  0178F0  0E00               	movlw	low (__mediumconst shr (0+16))
 13807  0178F2  6EF8               	movwf	tblptru,c
 13808                           
 13809                           ;stkvar	_d @ sp[(-4)+0]
 13810  0178F4  50E1               	movf	fsr1l,w,c
 13811  0178F6  0FFC               	addlw	-4
 13812  0178F8  6ED9               	movwf	fsr2l,c
 13813  0178FA  50E2               	movf	fsr1h,w,c
 13814  0178FC  6EDA               	movwf	fsr2h,c
 13815  0178FE  0EFF               	movlw	255
 13816  017900  22DA               	addwfc	fsr2h,f,c
 13817  017902  006F FF7C  F02F    	movff	indf2,btemp+10
 13818  017908  0E01               	movlw	1
 13819  01790A  26DE               	addwf	postinc2,f,c
 13820  01790C  006F FF7C  F030    	movff	indf2,btemp+11
 13821  017912  0E00               	movlw	0
 13822  017914  22DD               	addwfc	postdec2,f,c
 13823  017916  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
 13824  01791C  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
 13825  017922  0E1F               	movlw	(high __ramtop+-1)
 13826  017924  64F7               	cpfsgt	tblptrh,c
 13827  017926  D003               	bra	u9387
 13828  017928  0008               	tblrd		*
 13829  01792A  50F5               	movf	tablat,w,c
 13830  01792C  D007               	bra	u9380
 13831  01792E                     u9387:
 13832  01792E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13833  017934  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13834  01793A  50EF               	movf	indf0,w,c
 13835  01793C                     u9380:
 13836  01793C  6EDF               	movwf	indf2,c
 13837  01793E  50DF               	movf	indf2,w,c
 13838  017940  A4D8               	btfss	status,2,c
 13839  017942  D7BF               	goto	l10102
 13840                           
 13841                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13842  017944  0EF8               	movlw	248
 13843  017946  26E1               	addwf	fsr1l,f,c
 13844  017948  0EFF               	movlw	255
 13845  01794A  22E2               	addwfc	fsr1h,f,c
 13846  01794C  0012               	return		;funcret
 13847  01794E                     __end_of_strcpy:
 13848                           	opt callstack 0
 13849                           
 13850 ;; *************** function _floorf *****************
 13851 ;; Defined at:
 13852 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13853 ;; Parameters:    Size  Location     Type
 13854 ;;  x               4  [STACK] float 
 13855 ;; Auto vars:     Size  Location     Type
 13856 ;;  u               4  [STACK] struct .
 13857 ;;  m               4  [STACK] unsigned long 
 13858 ;;  e               2  [STACK] int 
 13859 ;; Return value:  Size  Location     Type
 13860 ;;                  4  [STACK] float 
 13861 ;; Registers used:
 13862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13863 ;; Tracked objects:
 13864 ;;		On entry : 0/0
 13865 ;;		On exit  : 0/0
 13866 ;;		Unchanged: 0/0
 13867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13872 ;;Total ram usage:        0 bytes
 13873 ;; Hardware stack levels used:    1
 13874 ;; Hardware stack levels required when called:    7
 13875 ;; This function calls:
 13876 ;;		Nothing
 13877 ;; This function is called by:
 13878 ;;		_efgtoa
 13879 ;; This function uses a reentrant model
 13880 ;;
 13881                           
 13882                           	psect	text52
 13883  014D58                     __ptext52:
 13884                           	opt callstack 0
 13885  014D58                     _floorf:
 13886                           	opt callstack 0
 13887                           
 13888                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13889  014D58  0E0A               	movlw	10
 13890  014D5A  26E1               	addwf	fsr1l,f,c
 13891  014D5C  0E00               	movlw	0
 13892  014D5E  22E2               	addwfc	fsr1h,f,c
 13893                           
 13894                           ;incstack = 0
 13895  014D60  0060  F254  F02D   	movff	floorf@F524,btemp+8
 13896  014D66  0060  F258  F02E   	movff	floorf@F524+1,btemp+9
 13897  014D6C  0060  F25C  F02F   	movff	floorf@F524+2,btemp+10
 13898  014D72  0060  F260  F030   	movff	floorf@F524+3,btemp+11
 13899                           
 13900                           ;stkvar	_u @ sp[(-10)+0]
 13901  014D78  0EF6               	movlw	-10
 13902  014D7A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13903  014D80  0EF7               	movlw	-9
 13904  014D82  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13905  014D88  0EF8               	movlw	-8
 13906  014D8A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13907  014D90  0EF9               	movlw	-7
 13908  014D92  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13909                           
 13910                           ;stkvar	_x @ sp[(-10)+-4]
 13911  014D98  0EF2               	movlw	-14
 13912  014D9A  006F FF8C  F02D    	movff	plusw1,btemp+8
 13913  014DA0  0EF3               	movlw	-13
 13914  014DA2  006F FF8C  F02E    	movff	plusw1,btemp+9
 13915  014DA8  0EF4               	movlw	-12
 13916  014DAA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13917  014DB0  0EF5               	movlw	-11
 13918  014DB2  006F FF8C  F030    	movff	plusw1,btemp+11
 13919                           
 13920                           ;stkvar	_u @ sp[(-10)+0]
 13921  014DB8  0EF6               	movlw	-10
 13922  014DBA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13923  014DC0  0EF7               	movlw	-9
 13924  014DC2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13925  014DC8  0EF8               	movlw	-8
 13926  014DCA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13927  014DD0  0EF9               	movlw	-7
 13928  014DD2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13929  014DD8  0E81               	movlw	129
 13930  014DDA  6E2F               	movwf	(btemp+10)^0,c
 13931  014DDC  0EFF               	movlw	255
 13932  014DDE  6E30               	movwf	(btemp+11)^0,c
 13933                           
 13934                           ;stkvar	_u @ sp[(-10)+0]
 13935  014DE0  0EF6               	movlw	-10
 13936  014DE2  006F FF8C  F029    	movff	plusw1,btemp+4
 13937  014DE8  0EF7               	movlw	-9
 13938  014DEA  006F FF8C  F02A    	movff	plusw1,btemp+5
 13939  014DF0  0EF8               	movlw	-8
 13940  014DF2  006F FF8C  F02B    	movff	plusw1,btemp+6
 13941  014DF8  0EF9               	movlw	-7
 13942  014DFA  006F FF8C  F02C    	movff	plusw1,btemp+7
 13943  014E00  0E18               	movlw	24
 13944  014E02  D005               	goto	u4950
 13945  014E04                     u4955:
 13946  014E04  90D8               	bcf	status,0,c
 13947  014E06  322C               	rrcf	(btemp+7)^0,f,c
 13948  014E08  322B               	rrcf	(btemp+6)^0,f,c
 13949  014E0A  322A               	rrcf	(btemp+5)^0,f,c
 13950  014E0C  3229               	rrcf	(btemp+4)^0,f,c
 13951  014E0E                     u4950:
 13952  014E0E  2EE8               	decfsz	wreg,f,c
 13953  014E10  D7F9               	goto	u4955
 13954  014E12  0060  F0A4  F02D   	movff	btemp+4,btemp+8
 13955  014E18  0060  F0A8  F02E   	movff	btemp+5,btemp+9
 13956  014E1E  0EFF               	movlw	255
 13957  014E20  162D               	andwf	(btemp+8)^0,f,c
 13958  014E22  0E00               	movlw	0
 13959  014E24  162E               	andwf	(btemp+9)^0,f,c
 13960  014E26  502F               	movf	(btemp+10)^0,w,c
 13961  014E28  262D               	addwf	(btemp+8)^0,f,c
 13962  014E2A  5030               	movf	(btemp+11)^0,w,c
 13963  014E2C  222E               	addwfc	(btemp+9)^0,f,c
 13964                           
 13965                           ;stkvar	_e @ sp[(-10)+8]
 13966  014E2E  0EFE               	movlw	-2
 13967  014E30  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13968  014E36  0EFF               	movlw	-1
 13969  014E38  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13970                           
 13971                           ;stkvar	_e @ sp[(-10)+8]
 13972  014E3E  0EFF               	movlw	-1
 13973  014E40  BEE3               	btfsc	plusw1,7,c
 13974  014E42  D019               	goto	l6706
 13975  014E44  0EFF               	movlw	-1
 13976  014E46  50E3               	movf	plusw1,w,c
 13977  014E48  E108               	bnz	u4960
 13978  014E4A  0EFE               	movlw	-2
 13979  014E4C  006F FF8C  F025    	movff	plusw1,btemp
 13980  014E52  0E17               	movlw	23
 13981  014E54  5E25               	subwf	btemp^0,f,c
 13982  014E56  A0D8               	btfss	status,0,c
 13983  014E58  D00E               	goto	l6706
 13984  014E5A                     u4960:
 13985                           
 13986                           ;stkvar	_x @ sp[(-10)+-4]
 13987  014E5A  0EF2               	movlw	-14
 13988  014E5C  006F FF8C  F025    	movff	plusw1,btemp
 13989  014E62  0EF3               	movlw	-13
 13990  014E64  006F FF8C  F026    	movff	plusw1,btemp+1
 13991  014E6A  0EF4               	movlw	-12
 13992  014E6C  006F FF8C  F027    	movff	plusw1,btemp+2
 13993  014E72  0EF5               	movlw	-11
 13994  014E74  D11F               	goto	L13
 13995  014E76                     l6706:
 13996                           
 13997                           ;stkvar	_e @ sp[(-10)+8]
 13998  014E76  0EFF               	movlw	-1
 13999  014E78  BEE3               	btfsc	plusw1,7,c
 14000  014E7A  D0B4               	goto	l6722
 14001                           
 14002                           ;stkvar	_e @ sp[(-10)+8]
 14003  014E7C  0EFE               	movlw	-2
 14004  014E7E  006F FF8C  F030    	movff	plusw1,btemp+11
 14005  014E84  0EFF               	movlw	255
 14006  014E86  6E29               	movwf	(btemp+4)^0,c
 14007  014E88  0EFF               	movlw	255
 14008  014E8A  6E2A               	movwf	(btemp+5)^0,c
 14009  014E8C  0E7F               	movlw	127
 14010  014E8E  6E2B               	movwf	(btemp+6)^0,c
 14011  014E90  0E00               	movlw	0
 14012  014E92  6E2C               	movwf	(btemp+7)^0,c
 14013  014E94                     u4985:
 14014  014E94  6630               	tstfsz	(btemp+11)^0,c
 14015  014E96  D001               	goto	u4986
 14016  014E98  D007               	goto	u4987
 14017  014E9A                     u4986:
 14018  014E9A  342C               	rlcf	(btemp+7)^0,w,c
 14019  014E9C  322C               	rrcf	(btemp+7)^0,f,c
 14020  014E9E  322B               	rrcf	(btemp+6)^0,f,c
 14021  014EA0  322A               	rrcf	(btemp+5)^0,f,c
 14022  014EA2  3229               	rrcf	(btemp+4)^0,f,c
 14023  014EA4  2E30               	decfsz	(btemp+11)^0,f,c
 14024  014EA6  D7F6               	goto	u4985
 14025  014EA8                     u4987:
 14026                           
 14027                           ;stkvar	_m @ sp[(-10)+4]
 14028  014EA8  0EFA               	movlw	-6
 14029  014EAA  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 14030  014EB0  0EFB               	movlw	-5
 14031  014EB2  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 14032  014EB8  0EFC               	movlw	-4
 14033  014EBA  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14034  014EC0  0EFD               	movlw	-3
 14035  014EC2  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14036                           
 14037                           ;stkvar	_m @ sp[(-10)+4]
 14038                           ;stkvar	_u @ sp[(-10)+0]
 14039  014EC8  0EF6               	movlw	-10
 14040  014ECA  006F FF8C  F02D    	movff	plusw1,btemp+8
 14041  014ED0  0EF7               	movlw	-9
 14042  014ED2  006F FF8C  F02E    	movff	plusw1,btemp+9
 14043  014ED8  0EF8               	movlw	-8
 14044  014EDA  006F FF8C  F02F    	movff	plusw1,btemp+10
 14045  014EE0  0EF9               	movlw	-7
 14046  014EE2  006F FF8C  F030    	movff	plusw1,btemp+11
 14047  014EE8  0EFA               	movlw	-6
 14048  014EEA  50E3               	movf	plusw1,w,c
 14049  014EEC  162D               	andwf	(btemp+8)^0,f,c
 14050  014EEE  0EFB               	movlw	-5
 14051  014EF0  50E3               	movf	plusw1,w,c
 14052  014EF2  162E               	andwf	(btemp+9)^0,f,c
 14053  014EF4  0EFC               	movlw	-4
 14054  014EF6  50E3               	movf	plusw1,w,c
 14055  014EF8  162F               	andwf	(btemp+10)^0,f,c
 14056  014EFA  0EFD               	movlw	-3
 14057  014EFC  50E3               	movf	plusw1,w,c
 14058  014EFE  1630               	andwf	(btemp+11)^0,f,c
 14059  014F00  502D               	movf	(btemp+8)^0,w,c
 14060  014F02  102E               	iorwf	(btemp+9)^0,w,c
 14061  014F04  102F               	iorwf	(btemp+10)^0,w,c
 14062  014F06  1030               	iorwf	(btemp+11)^0,w,c
 14063  014F08  B4D8               	btfsc	status,2,c
 14064  014F0A  D7A7               	goto	u4960
 14065                           
 14066                           ;stkvar	_u @ sp[(-10)+0]
 14067  014F0C  0EF6               	movlw	-10
 14068  014F0E  006F FF8C  F02D    	movff	plusw1,btemp+8
 14069  014F14  0EF7               	movlw	-9
 14070  014F16  006F FF8C  F02E    	movff	plusw1,btemp+9
 14071  014F1C  0EF8               	movlw	-8
 14072  014F1E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14073  014F24  0EF9               	movlw	-7
 14074  014F26  006F FF8C  F030    	movff	plusw1,btemp+11
 14075  014F2C  0E20               	movlw	32
 14076  014F2E  D005               	goto	u5000
 14077  014F30                     u5005:
 14078  014F30  90D8               	bcf	status,0,c
 14079  014F32  3230               	rrcf	(btemp+11)^0,f,c
 14080  014F34  322F               	rrcf	(btemp+10)^0,f,c
 14081  014F36  322E               	rrcf	(btemp+9)^0,f,c
 14082  014F38  322D               	rrcf	(btemp+8)^0,f,c
 14083  014F3A                     u5000:
 14084  014F3A  2EE8               	decfsz	wreg,f,c
 14085  014F3C  D7F9               	goto	u5005
 14086  014F3E  502D               	movf	(btemp+8)^0,w,c
 14087  014F40  B4D8               	btfsc	status,2,c
 14088  014F42  D028               	goto	l6720
 14089                           
 14090                           ;stkvar	_m @ sp[(-10)+4]
 14091                           ;stkvar	_u @ sp[(-10)+0]
 14092  014F44  0EF6               	movlw	-10
 14093  014F46  50E3               	movf	plusw1,w,c
 14094  014F48  6E25               	movwf	btemp^0,c
 14095  014F4A  0EFA               	movlw	-6
 14096  014F4C  50E3               	movf	plusw1,w,c
 14097  014F4E  2625               	addwf	btemp^0,f,c
 14098  014F50  0EF6               	movlw	-10
 14099  014F52  0060  F097  FFE3   	movff	btemp,plusw1
 14100  014F58  0EF7               	movlw	-9
 14101  014F5A  50E3               	movf	plusw1,w,c
 14102  014F5C  6E25               	movwf	btemp^0,c
 14103  014F5E  0EFB               	movlw	-5
 14104  014F60  50E3               	movf	plusw1,w,c
 14105  014F62  2225               	addwfc	btemp^0,f,c
 14106  014F64  0EF7               	movlw	-9
 14107  014F66  0060  F097  FFE3   	movff	btemp,plusw1
 14108  014F6C  0EF8               	movlw	-8
 14109  014F6E  50E3               	movf	plusw1,w,c
 14110  014F70  6E25               	movwf	btemp^0,c
 14111  014F72  0EFC               	movlw	-4
 14112  014F74  50E3               	movf	plusw1,w,c
 14113  014F76  2225               	addwfc	btemp^0,f,c
 14114  014F78  0EF8               	movlw	-8
 14115  014F7A  0060  F097  FFE3   	movff	btemp,plusw1
 14116  014F80  0EF9               	movlw	-7
 14117  014F82  50E3               	movf	plusw1,w,c
 14118  014F84  6E25               	movwf	btemp^0,c
 14119  014F86  0EFD               	movlw	-3
 14120  014F88  50E3               	movf	plusw1,w,c
 14121  014F8A  2225               	addwfc	btemp^0,f,c
 14122  014F8C  0EF9               	movlw	-7
 14123  014F8E  0060  F097  FFE3   	movff	btemp,plusw1
 14124  014F94                     l6720:
 14125                           
 14126                           ;stkvar	_m @ sp[(-10)+4]
 14127  014F94  0EFA               	movlw	-6
 14128  014F96  006F FF8C  F02D    	movff	plusw1,btemp+8
 14129  014F9C  0EFB               	movlw	-5
 14130  014F9E  006F FF8C  F02E    	movff	plusw1,btemp+9
 14131  014FA4  0EFC               	movlw	-4
 14132  014FA6  006F FF8C  F02F    	movff	plusw1,btemp+10
 14133  014FAC  0EFD               	movlw	-3
 14134  014FAE  006F FF8C  F030    	movff	plusw1,btemp+11
 14135  014FB4  1C2D               	comf	(btemp+8)^0,w,c
 14136  014FB6  6E29               	movwf	(btemp+4)^0,c
 14137  014FB8  1C2E               	comf	(btemp+9)^0,w,c
 14138  014FBA  6E2A               	movwf	(btemp+5)^0,c
 14139  014FBC  1C2F               	comf	(btemp+10)^0,w,c
 14140  014FBE  6E2B               	movwf	(btemp+6)^0,c
 14141  014FC0  1C30               	comf	(btemp+11)^0,w,c
 14142  014FC2  6E2C               	movwf	(btemp+7)^0,c
 14143                           
 14144                           ;stkvar	_u @ sp[(-10)+0]
 14145  014FC4  50E1               	movf	fsr1l,w,c
 14146  014FC6  0FF6               	addlw	-10
 14147  014FC8  6ED9               	movwf	fsr2l,c
 14148  014FCA  50E2               	movf	fsr1h,w,c
 14149  014FCC  6EDA               	movwf	fsr2h,c
 14150  014FCE  0EFF               	movlw	255
 14151  014FD0  22DA               	addwfc	fsr2h,f,c
 14152  014FD2  5029               	movf	(btemp+4)^0,w,c
 14153  014FD4  16DE               	andwf	postinc2,f,c
 14154  014FD6  502A               	movf	(btemp+5)^0,w,c
 14155  014FD8  16DE               	andwf	postinc2,f,c
 14156  014FDA  502B               	movf	(btemp+6)^0,w,c
 14157  014FDC  16DE               	andwf	postinc2,f,c
 14158  014FDE  502C               	movf	(btemp+7)^0,w,c
 14159  014FE0  16DE               	andwf	postinc2,f,c
 14160  014FE2  D05B               	goto	l6730
 14161  014FE4                     l6722:
 14162                           
 14163                           ;stkvar	_u @ sp[(-10)+0]
 14164  014FE4  0EF6               	movlw	-10
 14165  014FE6  006F FF8C  F02D    	movff	plusw1,btemp+8
 14166  014FEC  0EF7               	movlw	-9
 14167  014FEE  006F FF8C  F02E    	movff	plusw1,btemp+9
 14168  014FF4  0EF8               	movlw	-8
 14169  014FF6  006F FF8C  F02F    	movff	plusw1,btemp+10
 14170  014FFC  0EF9               	movlw	-7
 14171  014FFE  006F FF8C  F030    	movff	plusw1,btemp+11
 14172  015004  0E20               	movlw	32
 14173  015006  D005               	goto	u5020
 14174  015008                     u5025:
 14175  015008  90D8               	bcf	status,0,c
 14176  01500A  3230               	rrcf	(btemp+11)^0,f,c
 14177  01500C  322F               	rrcf	(btemp+10)^0,f,c
 14178  01500E  322E               	rrcf	(btemp+9)^0,f,c
 14179  015010  322D               	rrcf	(btemp+8)^0,f,c
 14180  015012                     u5020:
 14181  015012  2EE8               	decfsz	wreg,f,c
 14182  015014  D7F9               	goto	u5025
 14183  015016  662D               	tstfsz	(btemp+8)^0,c
 14184  015018  D009               	goto	l6726
 14185                           
 14186                           ;stkvar	_u @ sp[(-10)+0]
 14187  01501A  0EF6               	movlw	-10
 14188  01501C  6AE3               	clrf	plusw1,c
 14189  01501E  0EF7               	movlw	-9
 14190  015020  6AE3               	clrf	plusw1,c
 14191  015022  0EF8               	movlw	-8
 14192  015024  6AE3               	clrf	plusw1,c
 14193  015026  0EF9               	movlw	-7
 14194  015028  6AE3               	clrf	plusw1,c
 14195  01502A  D037               	goto	l6730
 14196  01502C                     l6726:
 14197                           
 14198                           ;stkvar	_u @ sp[(-10)+0]
 14199  01502C  0EF6               	movlw	-10
 14200  01502E  006F FF8C  F02D    	movff	plusw1,btemp+8
 14201  015034  0EF7               	movlw	-9
 14202  015036  006F FF8C  F02E    	movff	plusw1,btemp+9
 14203  01503C  0EF8               	movlw	-8
 14204  01503E  006F FF8C  F02F    	movff	plusw1,btemp+10
 14205  015044  0EF9               	movlw	-7
 14206  015046  006F FF8C  F030    	movff	plusw1,btemp+11
 14207  01504C  90D8               	bcf	status,0,c
 14208  01504E  342D               	rlcf	(btemp+8)^0,w,c
 14209  015050  6E29               	movwf	(btemp+4)^0,c
 14210  015052  342E               	rlcf	(btemp+9)^0,w,c
 14211  015054  6E2A               	movwf	(btemp+5)^0,c
 14212  015056  342F               	rlcf	(btemp+10)^0,w,c
 14213  015058  6E2B               	movwf	(btemp+6)^0,c
 14214  01505A  3430               	rlcf	(btemp+11)^0,w,c
 14215  01505C  6E2C               	movwf	(btemp+7)^0,c
 14216  01505E  5029               	movf	(btemp+4)^0,w,c
 14217  015060  102A               	iorwf	(btemp+5)^0,w,c
 14218  015062  102B               	iorwf	(btemp+6)^0,w,c
 14219  015064  102C               	iorwf	(btemp+7)^0,w,c
 14220  015066  B4D8               	btfsc	status,2,c
 14221  015068  D018               	goto	l6730
 14222  01506A  0E00               	movlw	0
 14223  01506C  6E2D               	movwf	(btemp+8)^0,c
 14224  01506E  0E00               	movlw	0
 14225  015070  6E2E               	movwf	(btemp+9)^0,c
 14226  015072  0E80               	movlw	128
 14227  015074  6E2F               	movwf	(btemp+10)^0,c
 14228  015076  0EBF               	movlw	191
 14229  015078  6E30               	movwf	(btemp+11)^0,c
 14230                           
 14231                           ;stkvar	_u @ sp[(-10)+0]
 14232  01507A  0EF6               	movlw	-10
 14233  01507C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14234  015082  0EF7               	movlw	-9
 14235  015084  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14236  01508A  0EF8               	movlw	-8
 14237  01508C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14238  015092  0EF9               	movlw	-7
 14239  015094  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14240  01509A                     l6730:
 14241                           
 14242                           ;stkvar	_u @ sp[(-10)+0]
 14243  01509A  0EF6               	movlw	-10
 14244  01509C  006F FF8C  F025    	movff	plusw1,btemp
 14245  0150A2  0EF7               	movlw	-9
 14246  0150A4  006F FF8C  F026    	movff	plusw1,btemp+1
 14247  0150AA  0EF8               	movlw	-8
 14248  0150AC  006F FF8C  F027    	movff	plusw1,btemp+2
 14249  0150B2  0EF9               	movlw	-7
 14250  0150B4                     L13:
 14251  0150B4  006F FF8C  F028    	movff	plusw1,btemp+3
 14252                           
 14253                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14254  0150BA  0EF2               	movlw	242
 14255  0150BC  26E1               	addwf	fsr1l,f,c
 14256  0150BE  0EFF               	movlw	255
 14257  0150C0  22E2               	addwfc	fsr1h,f,c
 14258  0150C2  0012               	return		;funcret
 14259  0150C4                     __end_of_floorf:
 14260                           	opt callstack 0
 14261                           
 14262 ;; *************** function ___fpclassifyf *****************
 14263 ;; Defined at:
 14264 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14265 ;; Parameters:    Size  Location     Type
 14266 ;;  x               4  [STACK] float 
 14267 ;; Auto vars:     Size  Location     Type
 14268 ;;  u               4  [STACK] struct .
 14269 ;;  e               2  [STACK] int 
 14270 ;; Return value:  Size  Location     Type
 14271 ;;                  2  [STACK] int 
 14272 ;; Registers used:
 14273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14283 ;;Total ram usage:        0 bytes
 14284 ;; Hardware stack levels used:    1
 14285 ;; Hardware stack levels required when called:    7
 14286 ;; This function calls:
 14287 ;;		Nothing
 14288 ;; This function is called by:
 14289 ;;		_efgtoa
 14290 ;; This function uses a reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text53
 14294  01681A                     __ptext53:
 14295                           	opt callstack 0
 14296  01681A                     ___fpclassifyf:
 14297                           	opt callstack 0
 14298                           
 14299                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14300  01681A  0E06               	movlw	6
 14301  01681C  26E1               	addwf	fsr1l,f,c
 14302  01681E  0E00               	movlw	0
 14303  016820  22E2               	addwfc	fsr1h,f,c
 14304                           
 14305                           ;incstack = 0
 14306  016822  0060  F264  F02D   	movff	___fpclassifyf@F463,btemp+8
 14307  016828  0060  F268  F02E   	movff	___fpclassifyf@F463+1,btemp+9
 14308  01682E  0060  F26C  F02F   	movff	___fpclassifyf@F463+2,btemp+10
 14309  016834  0060  F270  F030   	movff	___fpclassifyf@F463+3,btemp+11
 14310                           
 14311                           ;stkvar	_u @ sp[(-6)+0]
 14312  01683A  0EFA               	movlw	-6
 14313  01683C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14314  016842  0EFB               	movlw	-5
 14315  016844  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14316  01684A  0EFC               	movlw	-4
 14317  01684C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14318  016852  0EFD               	movlw	-3
 14319  016854  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14320                           
 14321                           ;stkvar	_x @ sp[(-6)+-4]
 14322  01685A  0EF6               	movlw	-10
 14323  01685C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14324  016862  0EF7               	movlw	-9
 14325  016864  006F FF8C  F02E    	movff	plusw1,btemp+9
 14326  01686A  0EF8               	movlw	-8
 14327  01686C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14328  016872  0EF9               	movlw	-7
 14329  016874  006F FF8C  F030    	movff	plusw1,btemp+11
 14330                           
 14331                           ;stkvar	_u @ sp[(-6)+0]
 14332  01687A  0EFA               	movlw	-6
 14333  01687C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14334  016882  0EFB               	movlw	-5
 14335  016884  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14336  01688A  0EFC               	movlw	-4
 14337  01688C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14338  016892  0EFD               	movlw	-3
 14339  016894  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14340                           
 14341                           ;stkvar	_u @ sp[(-6)+0]
 14342  01689A  0EFA               	movlw	-6
 14343  01689C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14344  0168A2  0EFB               	movlw	-5
 14345  0168A4  006F FF8C  F02E    	movff	plusw1,btemp+9
 14346  0168AA  0EFC               	movlw	-4
 14347  0168AC  006F FF8C  F02F    	movff	plusw1,btemp+10
 14348  0168B2  0EFD               	movlw	-3
 14349  0168B4  006F FF8C  F030    	movff	plusw1,btemp+11
 14350  0168BA  0E18               	movlw	24
 14351  0168BC  D005               	goto	u4830
 14352  0168BE                     u4835:
 14353  0168BE  90D8               	bcf	status,0,c
 14354  0168C0  3230               	rrcf	(btemp+11)^0,f,c
 14355  0168C2  322F               	rrcf	(btemp+10)^0,f,c
 14356  0168C4  322E               	rrcf	(btemp+9)^0,f,c
 14357  0168C6  322D               	rrcf	(btemp+8)^0,f,c
 14358  0168C8                     u4830:
 14359  0168C8  2EE8               	decfsz	wreg,f,c
 14360  0168CA  D7F9               	goto	u4835
 14361  0168CC  0060  F0B4  F02B   	movff	btemp+8,btemp+6
 14362  0168D2  0060  F0B8  F02C   	movff	btemp+9,btemp+7
 14363  0168D8  0EFF               	movlw	255
 14364  0168DA  162B               	andwf	(btemp+6)^0,f,c
 14365  0168DC  0E00               	movlw	0
 14366  0168DE  162C               	andwf	(btemp+7)^0,f,c
 14367                           
 14368                           ;stkvar	_e @ sp[(-6)+4]
 14369  0168E0  0EFE               	movlw	-2
 14370  0168E2  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14371  0168E8  0EFF               	movlw	-1
 14372  0168EA  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14373                           
 14374                           ;stkvar	_e @ sp[(-6)+4]
 14375  0168F0  0EFE               	movlw	-2
 14376  0168F2  006F FF8C  F025    	movff	plusw1,btemp
 14377  0168F8  0EFF               	movlw	-1
 14378  0168FA  50E3               	movf	plusw1,w,c
 14379  0168FC  1025               	iorwf	btemp^0,w,c
 14380  0168FE  A4D8               	btfss	status,2,c
 14381  016900  D023               	goto	l6668
 14382                           
 14383                           ;stkvar	_u @ sp[(-6)+0]
 14384  016902  0EFA               	movlw	-6
 14385  016904  006F FF8C  F02D    	movff	plusw1,btemp+8
 14386  01690A  0EFB               	movlw	-5
 14387  01690C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14388  016912  0EFC               	movlw	-4
 14389  016914  006F FF8C  F02F    	movff	plusw1,btemp+10
 14390  01691A  0EFD               	movlw	-3
 14391  01691C  006F FF8C  F030    	movff	plusw1,btemp+11
 14392  016922  90D8               	bcf	status,0,c
 14393  016924  342D               	rlcf	(btemp+8)^0,w,c
 14394  016926  6E29               	movwf	(btemp+4)^0,c
 14395  016928  342E               	rlcf	(btemp+9)^0,w,c
 14396  01692A  6E2A               	movwf	(btemp+5)^0,c
 14397  01692C  342F               	rlcf	(btemp+10)^0,w,c
 14398  01692E  6E2B               	movwf	(btemp+6)^0,c
 14399  016930  3430               	rlcf	(btemp+11)^0,w,c
 14400  016932  6E2C               	movwf	(btemp+7)^0,c
 14401  016934  5029               	movf	(btemp+4)^0,w,c
 14402  016936  102A               	iorwf	(btemp+5)^0,w,c
 14403  016938  102B               	iorwf	(btemp+6)^0,w,c
 14404  01693A  102C               	iorwf	(btemp+7)^0,w,c
 14405  01693C  A4D8               	btfss	status,2,c
 14406  01693E  D002               	goto	l6664
 14407  016940  0E02               	movlw	2
 14408  016942  D02E               	goto	L14
 14409  016944                     l6664:
 14410  016944  0E03               	movlw	3
 14411  016946  D02C               	goto	L14
 14412  016948                     l6668:
 14413                           
 14414                           ;stkvar	_e @ sp[(-6)+4]
 14415  016948  0EFE               	movlw	-2
 14416  01694A  28E3               	incf	plusw1,w,c
 14417  01694C  E128               	bnz	l6674
 14418  01694E  0EFF               	movlw	-1
 14419  016950  50E3               	movf	plusw1,w,c
 14420  016952  A4D8               	btfss	status,2,c
 14421  016954  D024               	goto	l6674
 14422                           
 14423                           ;stkvar	_u @ sp[(-6)+0]
 14424  016956  0EFA               	movlw	-6
 14425  016958  006F FF8C  F02D    	movff	plusw1,btemp+8
 14426  01695E  0EFB               	movlw	-5
 14427  016960  006F FF8C  F02E    	movff	plusw1,btemp+9
 14428  016966  0EFC               	movlw	-4
 14429  016968  006F FF8C  F02F    	movff	plusw1,btemp+10
 14430  01696E  0EFD               	movlw	-3
 14431  016970  006F FF8C  F030    	movff	plusw1,btemp+11
 14432  016976  0E09               	movlw	9
 14433  016978                     u4875:
 14434  016978  90D8               	bcf	status,0,c
 14435  01697A  362D               	rlcf	(btemp+8)^0,f,c
 14436  01697C  362E               	rlcf	(btemp+9)^0,f,c
 14437  01697E  362F               	rlcf	(btemp+10)^0,f,c
 14438  016980  3630               	rlcf	(btemp+11)^0,f,c
 14439  016982  2EE8               	decfsz	wreg,f,c
 14440  016984  D7F9               	goto	u4875
 14441  016986  502D               	movf	(btemp+8)^0,w,c
 14442  016988  102E               	iorwf	(btemp+9)^0,w,c
 14443  01698A  102F               	iorwf	(btemp+10)^0,w,c
 14444  01698C  1030               	iorwf	(btemp+11)^0,w,c
 14445  01698E  A4D8               	btfss	status,2,c
 14446  016990  D002               	goto	u4880
 14447  016992  0E01               	movlw	1
 14448  016994  D001               	goto	u4890
 14449  016996                     u4880:
 14450  016996  0E00               	movlw	0
 14451  016998                     u4890:
 14452  016998  6E25               	movwf	btemp^0,c
 14453  01699A  6A26               	clrf	(btemp+1)^0,c
 14454  01699C  D004               	goto	l2906
 14455  01699E                     l6674:
 14456  01699E  0E04               	movlw	4
 14457  0169A0                     L14:
 14458  0169A0  6E25               	movwf	btemp^0,c
 14459  0169A2  0E00               	movlw	0
 14460  0169A4  6E26               	movwf	(btemp+1)^0,c
 14461  0169A6                     l2906:
 14462                           
 14463                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14464  0169A6  0EF6               	movlw	246
 14465  0169A8  26E1               	addwf	fsr1l,f,c
 14466  0169AA  0EFF               	movlw	255
 14467  0169AC  22E2               	addwfc	fsr1h,f,c
 14468  0169AE  0012               	return		;funcret
 14469  0169B0                     __end_of___fpclassifyf:
 14470                           	opt callstack 0
 14471                           
 14472 ;; *************** function ___fltol *****************
 14473 ;; Defined at:
 14474 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;  f1              4  [STACK] int 
 14477 ;; Auto vars:     Size  Location     Type
 14478 ;;  exp1            1  [STACK] unsigned char 
 14479 ;;  sign1           1  [STACK] unsigned char 
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  4  [STACK] long 
 14482 ;; Registers used:
 14483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14493 ;;Total ram usage:        0 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; Hardware stack levels required when called:    7
 14496 ;; This function calls:
 14497 ;;		Nothing
 14498 ;; This function is called by:
 14499 ;;		_calc_bsoc
 14500 ;;		_efgtoa
 14501 ;; This function uses a reentrant model
 14502 ;;
 14503                           
 14504                           	psect	text54
 14505  0169B0                     __ptext54:
 14506                           	opt callstack 0
 14507  0169B0                     ___fltol:
 14508                           	opt callstack 0
 14509                           
 14510                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14511  0169B0  52E6               	movf	postinc1,f,c
 14512  0169B2  52E6               	movf	postinc1,f,c
 14513                           
 14514                           ;stkvar	_f1 @ sp[(-2)+-4]
 14515                           
 14516                           ;incstack = 0
 14517  0169B4  0EFA               	movlw	-6
 14518  0169B6  006F FF8C  F02D    	movff	plusw1,btemp+8
 14519  0169BC  0EFB               	movlw	-5
 14520  0169BE  006F FF8C  F02E    	movff	plusw1,btemp+9
 14521  0169C4  0EFC               	movlw	-4
 14522  0169C6  006F FF8C  F02F    	movff	plusw1,btemp+10
 14523  0169CC  0EFD               	movlw	-3
 14524  0169CE  006F FF8C  F030    	movff	plusw1,btemp+11
 14525  0169D4  0E18               	movlw	24
 14526  0169D6  D005               	goto	u7980
 14527  0169D8                     u7985:
 14528  0169D8  90D8               	bcf	status,0,c
 14529  0169DA  3230               	rrcf	(btemp+11)^0,f,c
 14530  0169DC  322F               	rrcf	(btemp+10)^0,f,c
 14531  0169DE  322E               	rrcf	(btemp+9)^0,f,c
 14532  0169E0  322D               	rrcf	(btemp+8)^0,f,c
 14533  0169E2                     u7980:
 14534  0169E2  2EE8               	decfsz	wreg,f,c
 14535  0169E4  D7F9               	goto	u7985
 14536                           
 14537                           ;stkvar	_exp1 @ sp[(-2)+0]
 14538  0169E6  0EFE               	movlw	-2
 14539  0169E8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14540  0169EE  0EFE               	movlw	-2
 14541  0169F0  50E3               	movf	plusw1,w,c
 14542  0169F2  A4D8               	btfss	status,2,c
 14543  0169F4  D006               	goto	l8482
 14544  0169F6                     u7990:
 14545  0169F6  0E00               	movlw	0
 14546  0169F8  6E25               	movwf	btemp^0,c
 14547  0169FA  6A26               	clrf	(btemp+1)^0,c
 14548  0169FC  6A27               	clrf	(btemp+2)^0,c
 14549  0169FE  6A28               	clrf	(btemp+3)^0,c
 14550  016A00  D08B               	goto	l2522
 14551  016A02                     l8482:
 14552                           
 14553                           ;stkvar	_f1 @ sp[(-2)+-4]
 14554  016A02  0EFA               	movlw	-6
 14555  016A04  006F FF8C  F02D    	movff	plusw1,btemp+8
 14556  016A0A  0EFB               	movlw	-5
 14557  016A0C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14558  016A12  0EFC               	movlw	-4
 14559  016A14  006F FF8C  F02F    	movff	plusw1,btemp+10
 14560  016A1A  0EFD               	movlw	-3
 14561  016A1C  006F FF8C  F030    	movff	plusw1,btemp+11
 14562  016A22  0E20               	movlw	32
 14563  016A24  D005               	goto	u8000
 14564  016A26                     u8005:
 14565  016A26  90D8               	bcf	status,0,c
 14566  016A28  3230               	rrcf	(btemp+11)^0,f,c
 14567  016A2A  322F               	rrcf	(btemp+10)^0,f,c
 14568  016A2C  322E               	rrcf	(btemp+9)^0,f,c
 14569  016A2E  322D               	rrcf	(btemp+8)^0,f,c
 14570  016A30                     u8000:
 14571  016A30  2EE8               	decfsz	wreg,f,c
 14572  016A32  D7F9               	goto	u8005
 14573                           
 14574                           ;stkvar	_sign1 @ sp[(-2)+1]
 14575  016A34  0EFF               	movlw	-1
 14576  016A36  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14577                           
 14578                           ;stkvar	_f1 @ sp[(-2)+-4]
 14579  016A3C  0EFC               	movlw	-4
 14580  016A3E  8EE3               	bsf	plusw1,7,c
 14581                           
 14582                           ;stkvar	_f1 @ sp[(-2)+-4]
 14583  016A40  50E1               	movf	fsr1l,w,c
 14584  016A42  0FFA               	addlw	-6
 14585  016A44  6ED9               	movwf	fsr2l,c
 14586  016A46  50E2               	movf	fsr1h,w,c
 14587  016A48  6EDA               	movwf	fsr2h,c
 14588  016A4A  0EFF               	movlw	255
 14589  016A4C  22DA               	addwfc	fsr2h,f,c
 14590  016A4E  0EFF               	movlw	255
 14591  016A50  16DE               	andwf	postinc2,f,c
 14592  016A52  0EFF               	movlw	255
 14593  016A54  16DE               	andwf	postinc2,f,c
 14594  016A56  0EFF               	movlw	255
 14595  016A58  16DE               	andwf	postinc2,f,c
 14596  016A5A  0E00               	movlw	0
 14597  016A5C  16DE               	andwf	postinc2,f,c
 14598                           
 14599                           ;stkvar	_exp1 @ sp[(-2)+0]
 14600  016A5E  0EFE               	movlw	-2
 14601  016A60  006F FF8C  F025    	movff	plusw1,btemp
 14602  016A66  0E96               	movlw	150
 14603  016A68  5E25               	subwf	btemp^0,f,c
 14604  016A6A  0EFE               	movlw	-2
 14605  016A6C  0060  F097  FFE3   	movff	btemp,plusw1
 14606                           
 14607                           ;stkvar	_exp1 @ sp[(-2)+0]
 14608  016A72  0EFE               	movlw	-2
 14609  016A74  AEE3               	btfss	plusw1,7,c
 14610  016A76  D014               	goto	l8500
 14611                           
 14612                           ;stkvar	_exp1 @ sp[(-2)+0]
 14613  016A78  0EFE               	movlw	-2
 14614  016A7A  50E3               	movf	plusw1,w,c
 14615  016A7C  0A80               	xorlw	128
 14616  016A7E  0F97               	addlw	151
 14617  016A80  A0D8               	btfss	status,0,c
 14618  016A82  D7B9               	goto	u7990
 14619  016A84                     l8498:
 14620                           
 14621                           ;stkvar	_f1 @ sp[(-2)+-4]
 14622  016A84  90D8               	bcf	status,0,c
 14623  016A86  0EFD               	movlw	-3
 14624  016A88  32E3               	rrcf	plusw1,f,c
 14625  016A8A  0EFC               	movlw	-4
 14626  016A8C  32E3               	rrcf	plusw1,f,c
 14627  016A8E  0EFB               	movlw	-5
 14628  016A90  32E3               	rrcf	plusw1,f,c
 14629  016A92  0EFA               	movlw	-6
 14630  016A94  32E3               	rrcf	plusw1,f,c
 14631                           
 14632                           ;stkvar	_exp1 @ sp[(-2)+0]
 14633  016A96  0EFE               	movlw	-2
 14634  016A98  2AE3               	incf	plusw1,f,c
 14635  016A9A  B4D8               	btfsc	status,2,c
 14636  016A9C  D018               	goto	u8050
 14637  016A9E  D7F2               	goto	l8498
 14638  016AA0                     l8500:
 14639                           
 14640                           ;stkvar	_exp1 @ sp[(-2)+0]
 14641  016AA0  0EFE               	movlw	-2
 14642  016AA2  006F FF8C  F025    	movff	plusw1,btemp
 14643  016AA8  0E1F               	movlw	31
 14644  016AAA  6425               	cpfsgt	btemp^0,c
 14645  016AAC  D00C               	goto	l8508
 14646  016AAE  D7A3               	goto	u7990
 14647  016AB0                     l8506:
 14648                           
 14649                           ;stkvar	_f1 @ sp[(-2)+-4]
 14650  016AB0  90D8               	bcf	status,0,c
 14651  016AB2  0EFA               	movlw	-6
 14652  016AB4  36E3               	rlcf	plusw1,f,c
 14653  016AB6  0EFB               	movlw	-5
 14654  016AB8  36E3               	rlcf	plusw1,f,c
 14655  016ABA  0EFC               	movlw	-4
 14656  016ABC  36E3               	rlcf	plusw1,f,c
 14657  016ABE  0EFD               	movlw	-3
 14658  016AC0  36E3               	rlcf	plusw1,f,c
 14659                           
 14660                           ;stkvar	_exp1 @ sp[(-2)+0]
 14661  016AC2  0EFE               	movlw	-2
 14662  016AC4  06E3               	decf	plusw1,f,c
 14663  016AC6                     l8508:
 14664                           
 14665                           ;stkvar	_exp1 @ sp[(-2)+0]
 14666  016AC6  0EFE               	movlw	-2
 14667  016AC8  50E3               	movf	plusw1,w,c
 14668  016ACA  A4D8               	btfss	status,2,c
 14669  016ACC  D7F1               	goto	l8506
 14670  016ACE                     u8050:
 14671                           
 14672                           ;stkvar	_sign1 @ sp[(-2)+1]
 14673  016ACE  0EFF               	movlw	-1
 14674  016AD0  50E3               	movf	plusw1,w,c
 14675  016AD2  B4D8               	btfsc	status,2,c
 14676  016AD4  D011               	goto	u8070
 14677                           
 14678                           ;stkvar	_f1 @ sp[(-2)+-4]
 14679                           ;stkvar	_f1 @ sp[(-2)+-4]
 14680  016AD6  0EFA               	movlw	-6
 14681  016AD8  6CE3               	negf	plusw1,c
 14682  016ADA  0EFB               	movlw	-5
 14683  016ADC  1EE3               	comf	plusw1,f,c
 14684  016ADE  0EFC               	movlw	-4
 14685  016AE0  1EE3               	comf	plusw1,f,c
 14686  016AE2  0EFD               	movlw	-3
 14687  016AE4  1EE3               	comf	plusw1,f,c
 14688  016AE6  E308               	bnc	u8070
 14689  016AE8  0EFB               	movlw	-5
 14690  016AEA  2AE3               	incf	plusw1,f,c
 14691  016AEC  E305               	bnc	u8070
 14692  016AEE  0EFC               	movlw	-4
 14693  016AF0  2AE3               	incf	plusw1,f,c
 14694  016AF2  E302               	bnc	u8070
 14695  016AF4  0EFD               	movlw	-3
 14696  016AF6  2AE3               	incf	plusw1,f,c
 14697  016AF8                     u8070:
 14698                           
 14699                           ;stkvar	_f1 @ sp[(-2)+-4]
 14700  016AF8  0EFA               	movlw	-6
 14701  016AFA  006F FF8C  F025    	movff	plusw1,btemp
 14702  016B00  0EFB               	movlw	-5
 14703  016B02  006F FF8C  F026    	movff	plusw1,btemp+1
 14704  016B08  0EFC               	movlw	-4
 14705  016B0A  006F FF8C  F027    	movff	plusw1,btemp+2
 14706  016B10  0EFD               	movlw	-3
 14707  016B12  006F FF8C  F028    	movff	plusw1,btemp+3
 14708  016B18                     l2522:
 14709                           
 14710                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14711  016B18  0EFA               	movlw	250
 14712  016B1A  26E1               	addwf	fsr1l,f,c
 14713  016B1C  0EFF               	movlw	255
 14714  016B1E  22E2               	addwfc	fsr1h,f,c
 14715  016B20  0012               	return		;funcret
 14716  016B22                     __end_of___fltol:
 14717                           	opt callstack 0
 14718                           
 14719 ;; *************** function ___flneg *****************
 14720 ;; Defined at:
 14721 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;  f1              4  [STACK] long 
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;		None
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  4  [STACK] long 
 14728 ;; Registers used:
 14729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14730 ;; Tracked objects:
 14731 ;;		On entry : 0/0
 14732 ;;		On exit  : 0/0
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14739 ;;Total ram usage:        0 bytes
 14740 ;; Hardware stack levels used:    1
 14741 ;; Hardware stack levels required when called:    7
 14742 ;; This function calls:
 14743 ;;		Nothing
 14744 ;; This function is called by:
 14745 ;;		_efgtoa
 14746 ;; This function uses a reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text55
 14750  0189DE                     __ptext55:
 14751                           	opt callstack 0
 14752  0189DE                     ___flneg:
 14753                           	opt callstack 16
 14754                           
 14755                           ;stkvar	_f1 @ sp[(0)+-4]
 14756                           
 14757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14758                           ;incstack = 0
 14759  0189DE  0EFC               	movlw	-4
 14760  0189E0  50E3               	movf	plusw1,w,c
 14761  0189E2  E10A               	bnz	u5490
 14762  0189E4  0EFD               	movlw	-3
 14763  0189E6  50E3               	movf	plusw1,w,c
 14764  0189E8  E107               	bnz	u5490
 14765  0189EA  0EFE               	movlw	-2
 14766  0189EC  50E3               	movf	plusw1,w,c
 14767  0189EE  E104               	bnz	u5490
 14768  0189F0  0EFF               	movlw	-1
 14769  0189F2  50E3               	movf	plusw1,w,c
 14770  0189F4  B4D8               	btfsc	status,2,c
 14771  0189F6  D002               	goto	l6930
 14772  0189F8                     u5490:
 14773                           
 14774                           ;stkvar	_f1 @ sp[(0)+-4]
 14775  0189F8  0EFF               	movlw	-1
 14776  0189FA  7EE3               	btg	plusw1,7,c
 14777  0189FC                     l6930:
 14778                           
 14779                           ;stkvar	_f1 @ sp[(0)+-4]
 14780  0189FC  0EFC               	movlw	-4
 14781  0189FE  006F FF8C  F025    	movff	plusw1,btemp
 14782  018A04  0EFD               	movlw	-3
 14783  018A06  006F FF8C  F026    	movff	plusw1,btemp+1
 14784  018A0C  0EFE               	movlw	-2
 14785  018A0E  006F FF8C  F027    	movff	plusw1,btemp+2
 14786  018A14  0EFF               	movlw	-1
 14787  018A16  006F FF8C  F028    	movff	plusw1,btemp+3
 14788                           
 14789                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14790  018A1C  52E5               	movf	postdec1,f,c
 14791  018A1E  52E5               	movf	postdec1,f,c
 14792  018A20  52E5               	movf	postdec1,f,c
 14793  018A22  52E5               	movf	postdec1,f,c
 14794  018A24  0012               	return		;funcret
 14795  018A26                     __end_of___flneg:
 14796                           	opt callstack 0
 14797                           
 14798 ;; *************** function ___flge *****************
 14799 ;; Defined at:
 14800 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;  ff1             4  [STACK] long 
 14803 ;;  ff2             4  [STACK] long 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;		None
 14806 ;; Return value:  Size  Location     Type
 14807 ;;		None               void
 14808 ;; Registers used:
 14809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14819 ;;Total ram usage:        0 bytes
 14820 ;; Hardware stack levels used:    1
 14821 ;; Hardware stack levels required when called:    7
 14822 ;; This function calls:
 14823 ;;		Nothing
 14824 ;; This function is called by:
 14825 ;;		_calc_bsoc
 14826 ;;		_efgtoa
 14827 ;; This function uses a reentrant model
 14828 ;;
 14829                           
 14830                           	psect	text56
 14831  016B22                     __ptext56:
 14832                           	opt callstack 0
 14833  016B22                     ___flge:
 14834                           	opt callstack 7
 14835                           
 14836                           ;stkvar	_ff1 @ sp[(0)+-4]
 14837                           
 14838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14839                           ;incstack = 0
 14840  016B22  50E1               	movf	fsr1l,w,c
 14841  016B24  0FFC               	addlw	-4
 14842  016B26  6ED9               	movwf	fsr2l,c
 14843  016B28  50E2               	movf	fsr1h,w,c
 14844  016B2A  6EDA               	movwf	fsr2h,c
 14845  016B2C  0EFF               	movlw	255
 14846  016B2E  22DA               	addwfc	fsr2h,f,c
 14847  016B30  0E00               	movlw	0
 14848  016B32  14DE               	andwf	postinc2,w,c
 14849  016B34  6E2D               	movwf	(btemp+8)^0,c
 14850  016B36  0E00               	movlw	0
 14851  016B38  14DE               	andwf	postinc2,w,c
 14852  016B3A  6E2E               	movwf	(btemp+9)^0,c
 14853  016B3C  0E80               	movlw	128
 14854  016B3E  14DE               	andwf	postinc2,w,c
 14855  016B40  6E2F               	movwf	(btemp+10)^0,c
 14856  016B42  0E7F               	movlw	127
 14857  016B44  14DE               	andwf	postinc2,w,c
 14858  016B46  6E30               	movwf	(btemp+11)^0,c
 14859  016B48  502D               	movf	(btemp+8)^0,w,c
 14860  016B4A  102E               	iorwf	(btemp+9)^0,w,c
 14861  016B4C  102F               	iorwf	(btemp+10)^0,w,c
 14862  016B4E  1030               	iorwf	(btemp+11)^0,w,c
 14863  016B50  A4D8               	btfss	status,2,c
 14864  016B52  D008               	goto	l8454
 14865                           
 14866                           ;stkvar	_ff1 @ sp[(0)+-4]
 14867  016B54  0EFC               	movlw	-4
 14868  016B56  6AE3               	clrf	plusw1,c
 14869  016B58  0EFD               	movlw	-3
 14870  016B5A  6AE3               	clrf	plusw1,c
 14871  016B5C  0EFE               	movlw	-2
 14872  016B5E  6AE3               	clrf	plusw1,c
 14873  016B60  0EFF               	movlw	-1
 14874  016B62  6AE3               	clrf	plusw1,c
 14875  016B64                     l8454:
 14876                           
 14877                           ;stkvar	_ff2 @ sp[(0)+-8]
 14878  016B64  50E1               	movf	fsr1l,w,c
 14879  016B66  0FF8               	addlw	-8
 14880  016B68  6ED9               	movwf	fsr2l,c
 14881  016B6A  50E2               	movf	fsr1h,w,c
 14882  016B6C  6EDA               	movwf	fsr2h,c
 14883  016B6E  0EFF               	movlw	255
 14884  016B70  22DA               	addwfc	fsr2h,f,c
 14885  016B72  0E00               	movlw	0
 14886  016B74  14DE               	andwf	postinc2,w,c
 14887  016B76  6E2D               	movwf	(btemp+8)^0,c
 14888  016B78  0E00               	movlw	0
 14889  016B7A  14DE               	andwf	postinc2,w,c
 14890  016B7C  6E2E               	movwf	(btemp+9)^0,c
 14891  016B7E  0E80               	movlw	128
 14892  016B80  14DE               	andwf	postinc2,w,c
 14893  016B82  6E2F               	movwf	(btemp+10)^0,c
 14894  016B84  0E7F               	movlw	127
 14895  016B86  14DE               	andwf	postinc2,w,c
 14896  016B88  6E30               	movwf	(btemp+11)^0,c
 14897  016B8A  502D               	movf	(btemp+8)^0,w,c
 14898  016B8C  102E               	iorwf	(btemp+9)^0,w,c
 14899  016B8E  102F               	iorwf	(btemp+10)^0,w,c
 14900  016B90  1030               	iorwf	(btemp+11)^0,w,c
 14901  016B92  A4D8               	btfss	status,2,c
 14902  016B94  D008               	goto	l2488
 14903                           
 14904                           ;stkvar	_ff2 @ sp[(0)+-8]
 14905  016B96  0EF8               	movlw	-8
 14906  016B98  6AE3               	clrf	plusw1,c
 14907  016B9A  0EF9               	movlw	-7
 14908  016B9C  6AE3               	clrf	plusw1,c
 14909  016B9E  0EFA               	movlw	-6
 14910  016BA0  6AE3               	clrf	plusw1,c
 14911  016BA2  0EFB               	movlw	-5
 14912  016BA4  6AE3               	clrf	plusw1,c
 14913  016BA6                     l2488:
 14914                           
 14915                           ;stkvar	_ff1 @ sp[(0)+-4]
 14916  016BA6  0EFF               	movlw	-1
 14917  016BA8  AEE3               	btfss	plusw1,7,c
 14918  016BAA  D024               	goto	l8460
 14919                           
 14920                           ;stkvar	_ff1 @ sp[(0)+-4]
 14921  016BAC  0E00               	movlw	0
 14922  016BAE  6E2D               	movwf	(btemp+8)^0,c
 14923  016BB0  0E00               	movlw	0
 14924  016BB2  6E2E               	movwf	(btemp+9)^0,c
 14925  016BB4  0E00               	movlw	0
 14926  016BB6  6E2F               	movwf	(btemp+10)^0,c
 14927  016BB8  0E80               	movlw	128
 14928  016BBA  6E30               	movwf	(btemp+11)^0,c
 14929  016BBC  0EFC               	movlw	-4
 14930  016BBE  50E3               	movf	plusw1,w,c
 14931  016BC0  5E2D               	subwf	(btemp+8)^0,f,c
 14932  016BC2  0EFD               	movlw	-3
 14933  016BC4  50E3               	movf	plusw1,w,c
 14934  016BC6  5A2E               	subwfb	(btemp+9)^0,f,c
 14935  016BC8  0EFE               	movlw	-2
 14936  016BCA  50E3               	movf	plusw1,w,c
 14937  016BCC  5A2F               	subwfb	(btemp+10)^0,f,c
 14938  016BCE  0EFF               	movlw	-1
 14939  016BD0  50E3               	movf	plusw1,w,c
 14940  016BD2  5A30               	subwfb	(btemp+11)^0,f,c
 14941                           
 14942                           ;stkvar	_ff1 @ sp[(0)+-4]
 14943  016BD4  0EFC               	movlw	-4
 14944  016BD6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14945  016BDC  0EFD               	movlw	-3
 14946  016BDE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14947  016BE4  0EFE               	movlw	-2
 14948  016BE6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14949  016BEC  0EFF               	movlw	-1
 14950  016BEE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14951  016BF4                     l8460:
 14952                           
 14953                           ;stkvar	_ff2 @ sp[(0)+-8]
 14954  016BF4  0EFB               	movlw	-5
 14955  016BF6  AEE3               	btfss	plusw1,7,c
 14956  016BF8  D024               	goto	l8464
 14957                           
 14958                           ;stkvar	_ff2 @ sp[(0)+-8]
 14959  016BFA  0E00               	movlw	0
 14960  016BFC  6E2D               	movwf	(btemp+8)^0,c
 14961  016BFE  0E00               	movlw	0
 14962  016C00  6E2E               	movwf	(btemp+9)^0,c
 14963  016C02  0E00               	movlw	0
 14964  016C04  6E2F               	movwf	(btemp+10)^0,c
 14965  016C06  0E80               	movlw	128
 14966  016C08  6E30               	movwf	(btemp+11)^0,c
 14967  016C0A  0EF8               	movlw	-8
 14968  016C0C  50E3               	movf	plusw1,w,c
 14969  016C0E  5E2D               	subwf	(btemp+8)^0,f,c
 14970  016C10  0EF9               	movlw	-7
 14971  016C12  50E3               	movf	plusw1,w,c
 14972  016C14  5A2E               	subwfb	(btemp+9)^0,f,c
 14973  016C16  0EFA               	movlw	-6
 14974  016C18  50E3               	movf	plusw1,w,c
 14975  016C1A  5A2F               	subwfb	(btemp+10)^0,f,c
 14976  016C1C  0EFB               	movlw	-5
 14977  016C1E  50E3               	movf	plusw1,w,c
 14978  016C20  5A30               	subwfb	(btemp+11)^0,f,c
 14979                           
 14980                           ;stkvar	_ff2 @ sp[(0)+-8]
 14981  016C22  0EF8               	movlw	-8
 14982  016C24  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14983  016C2A  0EF9               	movlw	-7
 14984  016C2C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14985  016C32  0EFA               	movlw	-6
 14986  016C34  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14987  016C3A  0EFB               	movlw	-5
 14988  016C3C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14989  016C42                     l8464:
 14990                           
 14991                           ;stkvar	_ff1 @ sp[(0)+-4]
 14992  016C42  0EFF               	movlw	-1
 14993  016C44  7EE3               	btg	plusw1,7,c
 14994                           
 14995                           ;stkvar	_ff2 @ sp[(0)+-8]
 14996  016C46  0EFB               	movlw	-5
 14997  016C48  7EE3               	btg	plusw1,7,c
 14998                           
 14999                           ;stkvar	_ff2 @ sp[(0)+-8]
 15000                           ;stkvar	_ff1 @ sp[(0)+-4]
 15001  016C4A  50E1               	movf	fsr1l,w,c
 15002  016C4C  0FFC               	addlw	-4
 15003  016C4E  6ED9               	movwf	fsr2l,c
 15004  016C50  50E2               	movf	fsr1h,w,c
 15005  016C52  6EDA               	movwf	fsr2h,c
 15006  016C54  0EFF               	movlw	255
 15007  016C56  22DA               	addwfc	fsr2h,f,c
 15008  016C58  0EF8               	movlw	-8
 15009  016C5A  50E3               	movf	plusw1,w,c
 15010  016C5C  5CDE               	subwf	postinc2,w,c
 15011  016C5E  0EF9               	movlw	-7
 15012  016C60  50E3               	movf	plusw1,w,c
 15013  016C62  58DE               	subwfb	postinc2,w,c
 15014  016C64  0EFA               	movlw	-6
 15015  016C66  50E3               	movf	plusw1,w,c
 15016  016C68  58DE               	subwfb	postinc2,w,c
 15017  016C6A  0EFB               	movlw	-5
 15018  016C6C  50E3               	movf	plusw1,w,c
 15019  016C6E  58DE               	subwfb	postinc2,w,c
 15020  016C70  B0D8               	btfsc	status,0,c
 15021  016C72  D002               	goto	l8472
 15022  016C74  9025               	bcf	btemp& (0+255),0,c
 15023  016C76  D001               	goto	l2495
 15024  016C78                     l8472:
 15025  016C78  8025               	bsf	btemp& (0+255),0,c
 15026  016C7A                     l2495:
 15027                           
 15028                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15029  016C7A  0EF8               	movlw	248
 15030  016C7C  26E1               	addwf	fsr1l,f,c
 15031  016C7E  0EFF               	movlw	255
 15032  016C80  22E2               	addwfc	fsr1h,f,c
 15033  016C82  0012               	return		;funcret
 15034  016C84                     __end_of___flge:
 15035                           	opt callstack 0
 15036                           
 15037 ;; *************** function ___fleq *****************
 15038 ;; Defined at:
 15039 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;  ff1             4  [STACK] long 
 15042 ;;  ff2             4  [STACK] long 
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;		None
 15045 ;; Return value:  Size  Location     Type
 15046 ;;		None               void
 15047 ;; Registers used:
 15048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15049 ;; Tracked objects:
 15050 ;;		On entry : 0/0
 15051 ;;		On exit  : 0/0
 15052 ;;		Unchanged: 0/0
 15053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15058 ;;Total ram usage:        0 bytes
 15059 ;; Hardware stack levels used:    1
 15060 ;; Hardware stack levels required when called:    7
 15061 ;; This function calls:
 15062 ;;		Nothing
 15063 ;; This function is called by:
 15064 ;;		_calc_bsoc
 15065 ;;		_efgtoa
 15066 ;; This function uses a reentrant model
 15067 ;;
 15068                           
 15069                           	psect	text57
 15070  017A1E                     __ptext57:
 15071                           	opt callstack 0
 15072  017A1E                     ___fleq:
 15073                           	opt callstack 7
 15074                           
 15075                           ;stkvar	_ff1 @ sp[(0)+-4]
 15076                           
 15077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15078                           ;incstack = 0
 15079  017A1E  50E1               	movf	fsr1l,w,c
 15080  017A20  0FFC               	addlw	-4
 15081  017A22  6ED9               	movwf	fsr2l,c
 15082  017A24  50E2               	movf	fsr1h,w,c
 15083  017A26  6EDA               	movwf	fsr2h,c
 15084  017A28  0EFF               	movlw	255
 15085  017A2A  22DA               	addwfc	fsr2h,f,c
 15086  017A2C  0E00               	movlw	0
 15087  017A2E  14DE               	andwf	postinc2,w,c
 15088  017A30  6E2D               	movwf	(btemp+8)^0,c
 15089  017A32  0E00               	movlw	0
 15090  017A34  14DE               	andwf	postinc2,w,c
 15091  017A36  6E2E               	movwf	(btemp+9)^0,c
 15092  017A38  0E80               	movlw	128
 15093  017A3A  14DE               	andwf	postinc2,w,c
 15094  017A3C  6E2F               	movwf	(btemp+10)^0,c
 15095  017A3E  0E7F               	movlw	127
 15096  017A40  14DE               	andwf	postinc2,w,c
 15097  017A42  6E30               	movwf	(btemp+11)^0,c
 15098  017A44  502D               	movf	(btemp+8)^0,w,c
 15099  017A46  102E               	iorwf	(btemp+9)^0,w,c
 15100  017A48  102F               	iorwf	(btemp+10)^0,w,c
 15101  017A4A  1030               	iorwf	(btemp+11)^0,w,c
 15102  017A4C  A4D8               	btfss	status,2,c
 15103  017A4E  D008               	goto	l8438
 15104                           
 15105                           ;stkvar	_ff1 @ sp[(0)+-4]
 15106  017A50  0EFC               	movlw	-4
 15107  017A52  6AE3               	clrf	plusw1,c
 15108  017A54  0EFD               	movlw	-3
 15109  017A56  6AE3               	clrf	plusw1,c
 15110  017A58  0EFE               	movlw	-2
 15111  017A5A  6AE3               	clrf	plusw1,c
 15112  017A5C  0EFF               	movlw	-1
 15113  017A5E  6AE3               	clrf	plusw1,c
 15114  017A60                     l8438:
 15115                           
 15116                           ;stkvar	_ff2 @ sp[(0)+-8]
 15117  017A60  50E1               	movf	fsr1l,w,c
 15118  017A62  0FF8               	addlw	-8
 15119  017A64  6ED9               	movwf	fsr2l,c
 15120  017A66  50E2               	movf	fsr1h,w,c
 15121  017A68  6EDA               	movwf	fsr2h,c
 15122  017A6A  0EFF               	movlw	255
 15123  017A6C  22DA               	addwfc	fsr2h,f,c
 15124  017A6E  0E00               	movlw	0
 15125  017A70  14DE               	andwf	postinc2,w,c
 15126  017A72  6E2D               	movwf	(btemp+8)^0,c
 15127  017A74  0E00               	movlw	0
 15128  017A76  14DE               	andwf	postinc2,w,c
 15129  017A78  6E2E               	movwf	(btemp+9)^0,c
 15130  017A7A  0E80               	movlw	128
 15131  017A7C  14DE               	andwf	postinc2,w,c
 15132  017A7E  6E2F               	movwf	(btemp+10)^0,c
 15133  017A80  0E7F               	movlw	127
 15134  017A82  14DE               	andwf	postinc2,w,c
 15135  017A84  6E30               	movwf	(btemp+11)^0,c
 15136  017A86  502D               	movf	(btemp+8)^0,w,c
 15137  017A88  102E               	iorwf	(btemp+9)^0,w,c
 15138  017A8A  102F               	iorwf	(btemp+10)^0,w,c
 15139  017A8C  1030               	iorwf	(btemp+11)^0,w,c
 15140  017A8E  A4D8               	btfss	status,2,c
 15141  017A90  D008               	goto	l8442
 15142                           
 15143                           ;stkvar	_ff2 @ sp[(0)+-8]
 15144  017A92  0EF8               	movlw	-8
 15145  017A94  6AE3               	clrf	plusw1,c
 15146  017A96  0EF9               	movlw	-7
 15147  017A98  6AE3               	clrf	plusw1,c
 15148  017A9A  0EFA               	movlw	-6
 15149  017A9C  6AE3               	clrf	plusw1,c
 15150  017A9E  0EFB               	movlw	-5
 15151  017AA0  6AE3               	clrf	plusw1,c
 15152  017AA2                     l8442:
 15153                           
 15154                           ;stkvar	_ff2 @ sp[(0)+-8]
 15155                           ;stkvar	_ff1 @ sp[(0)+-4]
 15156  017AA2  50E1               	movf	fsr1l,w,c
 15157  017AA4  0FFC               	addlw	-4
 15158  017AA6  6ED9               	movwf	fsr2l,c
 15159  017AA8  50E2               	movf	fsr1h,w,c
 15160  017AAA  6EDA               	movwf	fsr2h,c
 15161  017AAC  0EFF               	movlw	255
 15162  017AAE  22DA               	addwfc	fsr2h,f,c
 15163  017AB0  0EF8               	movlw	-8
 15164  017AB2  50E3               	movf	plusw1,w,c
 15165  017AB4  18DE               	xorwf	postinc2,w,c
 15166  017AB6  E10D               	bnz	u7920
 15167  017AB8  0EF9               	movlw	-7
 15168  017ABA  50E3               	movf	plusw1,w,c
 15169  017ABC  18DE               	xorwf	postinc2,w,c
 15170  017ABE  E109               	bnz	u7920
 15171  017AC0  0EFA               	movlw	-6
 15172  017AC2  50E3               	movf	plusw1,w,c
 15173  017AC4  18DE               	xorwf	postinc2,w,c
 15174  017AC6  E105               	bnz	u7920
 15175  017AC8  0EFB               	movlw	-5
 15176  017ACA  50E3               	movf	plusw1,w,c
 15177  017ACC  18DE               	xorwf	postinc2,w,c
 15178  017ACE  B4D8               	btfsc	status,2,c
 15179  017AD0  D002               	goto	l8446
 15180  017AD2                     u7920:
 15181  017AD2  9025               	bcf	btemp& (0+255),0,c
 15182  017AD4  D001               	goto	l2484
 15183  017AD6                     l8446:
 15184  017AD6  8025               	bsf	btemp& (0+255),0,c
 15185  017AD8                     l2484:
 15186                           
 15187                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15188  017AD8  0EF8               	movlw	248
 15189  017ADA  26E1               	addwf	fsr1l,f,c
 15190  017ADC  0EFF               	movlw	255
 15191  017ADE  22E2               	addwfc	fsr1h,f,c
 15192  017AE0  0012               	return		;funcret
 15193  017AE2                     __end_of___fleq:
 15194                           	opt callstack 0
 15195                           
 15196 ;; *************** function ___fldiv *****************
 15197 ;; Defined at:
 15198 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;  b               4  [STACK] long 
 15201 ;;  a               4  [STACK] long 
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;  grs             4  [STACK] unsigned long 
 15204 ;;  rem             4  [STACK] unsigned long 
 15205 ;;  new_exp         2  [STACK] short 
 15206 ;;  aexp            1  [STACK] unsigned char 
 15207 ;;  bexp            1  [STACK] unsigned char 
 15208 ;;  sign            1  [STACK] unsigned char 
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  4  [STACK] unsigned char 
 15211 ;; Registers used:
 15212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15213 ;; Tracked objects:
 15214 ;;		On entry : 0/2
 15215 ;;		On exit  : 0/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15222 ;;Total ram usage:        0 bytes
 15223 ;; Hardware stack levels used:    1
 15224 ;; Hardware stack levels required when called:    7
 15225 ;; This function calls:
 15226 ;;		Nothing
 15227 ;; This function is called by:
 15228 ;;		_conv_raw_result
 15229 ;;		_calc_bsoc
 15230 ;;		_efgtoa
 15231 ;; This function uses a reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text58
 15235  01360E                     __ptext58:
 15236                           	opt callstack 0
 15237  01360E                     ___fldiv:
 15238                           	opt callstack 0
 15239                           
 15240                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15241  01360E  0E0D               	movlw	13
 15242  013610  26E1               	addwf	fsr1l,f,c
 15243  013612  0E00               	movlw	0
 15244  013614  22E2               	addwfc	fsr1h,f,c
 15245                           
 15246                           ;stkvar	_b @ sp[(-13)+-4]
 15247                           
 15248                           ;incstack = 0
 15249  013616  0EF2               	movlw	242
 15250  013618  24E1               	addwf	fsr1l,w,c
 15251  01361A  6ED9               	movwf	fsr2l,c
 15252  01361C  0EFF               	movlw	255
 15253  01361E  20E2               	addwfc	fsr1h,w,c
 15254  013620  6EDA               	movwf	fsr2h,c
 15255  013622  50DF               	movf	indf2,w,c
 15256  013624  6E30               	movwf	(btemp+11)^0,c
 15257  013626  0E80               	movlw	128
 15258  013628  1630               	andwf	(btemp+11)^0,f,c
 15259                           
 15260                           ;stkvar	_sign @ sp[(-13)+12]
 15261  01362A  0EFF               	movlw	-1
 15262  01362C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15263                           
 15264                           ;stkvar	_b @ sp[(-13)+-4]
 15265  013632  0EF2               	movlw	242
 15266  013634  24E1               	addwf	fsr1l,w,c
 15267  013636  6ED9               	movwf	fsr2l,c
 15268  013638  0EFF               	movlw	255
 15269  01363A  20E2               	addwfc	fsr1h,w,c
 15270  01363C  6EDA               	movwf	fsr2h,c
 15271  01363E  50DF               	movf	indf2,w,c
 15272  013640  6E30               	movwf	(btemp+11)^0,c
 15273  013642  90D8               	bcf	status,0,c
 15274  013644  3430               	rlcf	(btemp+11)^0,w,c
 15275  013646  6E2F               	movwf	(btemp+10)^0,c
 15276                           
 15277                           ;stkvar	_bexp @ sp[(-13)+11]
 15278  013648  0EFE               	movlw	-2
 15279  01364A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15280                           
 15281                           ;stkvar	_b @ sp[(-13)+-4]
 15282  013650  0EF1               	movlw	241
 15283  013652  24E1               	addwf	fsr1l,w,c
 15284  013654  6ED9               	movwf	fsr2l,c
 15285  013656  0EFF               	movlw	255
 15286  013658  20E2               	addwfc	fsr1h,w,c
 15287  01365A  6EDA               	movwf	fsr2h,c
 15288  01365C  AEDF               	btfss	indf2,7,c
 15289  01365E  D002               	goto	l8130
 15290                           
 15291                           ;stkvar	_bexp @ sp[(-13)+11]
 15292  013660  0EFE               	movlw	-2
 15293  013662  80E3               	bsf	plusw1,0,c
 15294  013664                     l8130:
 15295                           
 15296                           ;stkvar	_bexp @ sp[(-13)+11]
 15297  013664  0EFE               	movlw	-2
 15298  013666  50E3               	movf	plusw1,w,c
 15299  013668  B4D8               	btfsc	status,2,c
 15300  01366A  D027               	goto	l8140
 15301                           
 15302                           ;stkvar	_bexp @ sp[(-13)+11]
 15303  01366C  0EFE               	movlw	-2
 15304  01366E  28E3               	incf	plusw1,w,c
 15305  013670  A4D8               	btfss	status,2,c
 15306  013672  D018               	goto	l8136
 15307  013674  0E00               	movlw	0
 15308  013676  6E2D               	movwf	(btemp+8)^0,c
 15309  013678  0E00               	movlw	0
 15310  01367A  6E2E               	movwf	(btemp+9)^0,c
 15311  01367C  0E00               	movlw	0
 15312  01367E  6E2F               	movwf	(btemp+10)^0,c
 15313  013680  0E00               	movlw	0
 15314  013682  6E30               	movwf	(btemp+11)^0,c
 15315                           
 15316                           ;stkvar	_b @ sp[(-13)+-4]
 15317  013684  0EEF               	movlw	-17
 15318  013686  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15319  01368C  0EF0               	movlw	-16
 15320  01368E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15321  013694  0EF1               	movlw	-15
 15322  013696  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15323  01369C  0EF2               	movlw	-14
 15324  01369E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15325  0136A4                     l8136:
 15326                           
 15327                           ;stkvar	_b @ sp[(-13)+-4]
 15328  0136A4  0EF1               	movlw	-15
 15329  0136A6  8EE3               	bsf	plusw1,7,c
 15330                           
 15331                           ;stkvar	_b @ sp[(-13)+-4]
 15332  0136A8  0EF2               	movlw	242
 15333  0136AA  24E1               	addwf	fsr1l,w,c
 15334  0136AC  6ED9               	movwf	fsr2l,c
 15335  0136AE  0EFF               	movlw	255
 15336  0136B0  20E2               	addwfc	fsr1h,w,c
 15337  0136B2  6EDA               	movwf	fsr2h,c
 15338  0136B4  0E00               	movlw	0
 15339  0136B6  6EDF               	movwf	indf2,c
 15340  0136B8  D018               	goto	l8142
 15341  0136BA                     l8140:
 15342  0136BA  0E00               	movlw	0
 15343  0136BC  6E2D               	movwf	(btemp+8)^0,c
 15344  0136BE  0E00               	movlw	0
 15345  0136C0  6E2E               	movwf	(btemp+9)^0,c
 15346  0136C2  0E00               	movlw	0
 15347  0136C4  6E2F               	movwf	(btemp+10)^0,c
 15348  0136C6  0E00               	movlw	0
 15349  0136C8  6E30               	movwf	(btemp+11)^0,c
 15350                           
 15351                           ;stkvar	_b @ sp[(-13)+-4]
 15352  0136CA  0EEF               	movlw	-17
 15353  0136CC  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15354  0136D2  0EF0               	movlw	-16
 15355  0136D4  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15356  0136DA  0EF1               	movlw	-15
 15357  0136DC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15358  0136E2  0EF2               	movlw	-14
 15359  0136E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15360  0136EA                     l8142:
 15361                           
 15362                           ;stkvar	_a @ sp[(-13)+-8]
 15363  0136EA  0EEE               	movlw	238
 15364  0136EC  24E1               	addwf	fsr1l,w,c
 15365  0136EE  6ED9               	movwf	fsr2l,c
 15366  0136F0  0EFF               	movlw	255
 15367  0136F2  20E2               	addwfc	fsr1h,w,c
 15368  0136F4  6EDA               	movwf	fsr2h,c
 15369  0136F6  50DF               	movf	indf2,w,c
 15370  0136F8  6E30               	movwf	(btemp+11)^0,c
 15371  0136FA  0E80               	movlw	128
 15372  0136FC  1630               	andwf	(btemp+11)^0,f,c
 15373                           
 15374                           ;stkvar	_sign @ sp[(-13)+12]
 15375  0136FE  50E1               	movf	fsr1l,w,c
 15376  013700  0FFF               	addlw	-1
 15377  013702  6ED9               	movwf	fsr2l,c
 15378  013704  50E2               	movf	fsr1h,w,c
 15379  013706  6EDA               	movwf	fsr2h,c
 15380  013708  0EFF               	movlw	255
 15381  01370A  22DA               	addwfc	fsr2h,f,c
 15382  01370C  5030               	movf	(btemp+11)^0,w,c
 15383  01370E  1ADF               	xorwf	indf2,f,c
 15384                           
 15385                           ;stkvar	_a @ sp[(-13)+-8]
 15386  013710  0EEE               	movlw	238
 15387  013712  24E1               	addwf	fsr1l,w,c
 15388  013714  6ED9               	movwf	fsr2l,c
 15389  013716  0EFF               	movlw	255
 15390  013718  20E2               	addwfc	fsr1h,w,c
 15391  01371A  6EDA               	movwf	fsr2h,c
 15392  01371C  50DF               	movf	indf2,w,c
 15393  01371E  6E30               	movwf	(btemp+11)^0,c
 15394  013720  90D8               	bcf	status,0,c
 15395  013722  3430               	rlcf	(btemp+11)^0,w,c
 15396  013724  6E2F               	movwf	(btemp+10)^0,c
 15397                           
 15398                           ;stkvar	_aexp @ sp[(-13)+10]
 15399  013726  0EFD               	movlw	-3
 15400  013728  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15401                           
 15402                           ;stkvar	_a @ sp[(-13)+-8]
 15403  01372E  0EED               	movlw	237
 15404  013730  24E1               	addwf	fsr1l,w,c
 15405  013732  6ED9               	movwf	fsr2l,c
 15406  013734  0EFF               	movlw	255
 15407  013736  20E2               	addwfc	fsr1h,w,c
 15408  013738  6EDA               	movwf	fsr2h,c
 15409  01373A  AEDF               	btfss	indf2,7,c
 15410  01373C  D002               	goto	l8150
 15411                           
 15412                           ;stkvar	_aexp @ sp[(-13)+10]
 15413  01373E  0EFD               	movlw	-3
 15414  013740  80E3               	bsf	plusw1,0,c
 15415  013742                     l8150:
 15416                           
 15417                           ;stkvar	_aexp @ sp[(-13)+10]
 15418  013742  0EFD               	movlw	-3
 15419  013744  50E3               	movf	plusw1,w,c
 15420  013746  B4D8               	btfsc	status,2,c
 15421  013748  D027               	goto	l8160
 15422                           
 15423                           ;stkvar	_aexp @ sp[(-13)+10]
 15424  01374A  0EFD               	movlw	-3
 15425  01374C  28E3               	incf	plusw1,w,c
 15426  01374E  A4D8               	btfss	status,2,c
 15427  013750  D018               	goto	l8156
 15428  013752  0E00               	movlw	0
 15429  013754  6E2D               	movwf	(btemp+8)^0,c
 15430  013756  0E00               	movlw	0
 15431  013758  6E2E               	movwf	(btemp+9)^0,c
 15432  01375A  0E00               	movlw	0
 15433  01375C  6E2F               	movwf	(btemp+10)^0,c
 15434  01375E  0E00               	movlw	0
 15435  013760  6E30               	movwf	(btemp+11)^0,c
 15436                           
 15437                           ;stkvar	_a @ sp[(-13)+-8]
 15438  013762  0EEB               	movlw	-21
 15439  013764  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15440  01376A  0EEC               	movlw	-20
 15441  01376C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15442  013772  0EED               	movlw	-19
 15443  013774  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15444  01377A  0EEE               	movlw	-18
 15445  01377C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15446  013782                     l8156:
 15447                           
 15448                           ;stkvar	_a @ sp[(-13)+-8]
 15449  013782  0EED               	movlw	-19
 15450  013784  8EE3               	bsf	plusw1,7,c
 15451                           
 15452                           ;stkvar	_a @ sp[(-13)+-8]
 15453  013786  0EEE               	movlw	238
 15454  013788  24E1               	addwf	fsr1l,w,c
 15455  01378A  6ED9               	movwf	fsr2l,c
 15456  01378C  0EFF               	movlw	255
 15457  01378E  20E2               	addwfc	fsr1h,w,c
 15458  013790  6EDA               	movwf	fsr2h,c
 15459  013792  0E00               	movlw	0
 15460  013794  6EDF               	movwf	indf2,c
 15461  013796  D018               	goto	l8162
 15462  013798                     l8160:
 15463  013798  0E00               	movlw	0
 15464  01379A  6E2D               	movwf	(btemp+8)^0,c
 15465  01379C  0E00               	movlw	0
 15466  01379E  6E2E               	movwf	(btemp+9)^0,c
 15467  0137A0  0E00               	movlw	0
 15468  0137A2  6E2F               	movwf	(btemp+10)^0,c
 15469  0137A4  0E00               	movlw	0
 15470  0137A6  6E30               	movwf	(btemp+11)^0,c
 15471                           
 15472                           ;stkvar	_a @ sp[(-13)+-8]
 15473  0137A8  0EEB               	movlw	-21
 15474  0137AA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15475  0137B0  0EEC               	movlw	-20
 15476  0137B2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15477  0137B8  0EED               	movlw	-19
 15478  0137BA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15479  0137C0  0EEE               	movlw	-18
 15480  0137C2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15481  0137C8                     l8162:
 15482                           
 15483                           ;stkvar	_a @ sp[(-13)+-8]
 15484  0137C8  0EEB               	movlw	-21
 15485  0137CA  50E3               	movf	plusw1,w,c
 15486  0137CC  E139               	bnz	l8174
 15487  0137CE  0EEC               	movlw	-20
 15488  0137D0  50E3               	movf	plusw1,w,c
 15489  0137D2  E136               	bnz	l8174
 15490  0137D4  0EED               	movlw	-19
 15491  0137D6  50E3               	movf	plusw1,w,c
 15492  0137D8  E133               	bnz	l8174
 15493  0137DA  0EEE               	movlw	-18
 15494  0137DC  50E3               	movf	plusw1,w,c
 15495  0137DE  A4D8               	btfss	status,2,c
 15496  0137E0  D02F               	goto	l8174
 15497                           
 15498                           ;stkvar	_b @ sp[(-13)+-4]
 15499  0137E2  0EEF               	movlw	-17
 15500  0137E4  6AE3               	clrf	plusw1,c
 15501  0137E6  0EF0               	movlw	-16
 15502  0137E8  6AE3               	clrf	plusw1,c
 15503  0137EA  0EF1               	movlw	-15
 15504  0137EC  6AE3               	clrf	plusw1,c
 15505  0137EE  0EF2               	movlw	-14
 15506  0137F0  6AE3               	clrf	plusw1,c
 15507                           
 15508                           ;stkvar	_b @ sp[(-13)+-4]
 15509  0137F2  0EF1               	movlw	241
 15510  0137F4  24E1               	addwf	fsr1l,w,c
 15511  0137F6  6ED9               	movwf	fsr2l,c
 15512  0137F8  0EFF               	movlw	255
 15513  0137FA  20E2               	addwfc	fsr1h,w,c
 15514  0137FC  6EDA               	movwf	fsr2h,c
 15515  0137FE  0E80               	movlw	128
 15516  013800  12DE               	iorwf	postinc2,f,c
 15517  013802  0E7F               	movlw	127
 15518  013804  12DD               	iorwf	postdec2,f,c
 15519  013806                     l8168:
 15520                           
 15521                           ;stkvar	_sign @ sp[(-13)+12]
 15522  013806  0EFF               	movlw	-1
 15523  013808  006F FF8C  F030    	movff	plusw1,btemp+11
 15524                           
 15525                           ;stkvar	_b @ sp[(-13)+-4]
 15526  01380E  0EF2               	movlw	242
 15527  013810  24E1               	addwf	fsr1l,w,c
 15528  013812  6ED9               	movwf	fsr2l,c
 15529  013814  0EFF               	movlw	255
 15530  013816  20E2               	addwfc	fsr1h,w,c
 15531  013818  6EDA               	movwf	fsr2h,c
 15532  01381A  5030               	movf	(btemp+11)^0,w,c
 15533  01381C  12DF               	iorwf	indf2,f,c
 15534                           
 15535                           ;stkvar	_b @ sp[(-13)+-4]
 15536  01381E  0EEF               	movlw	-17
 15537  013820  006F FF8C  F025    	movff	plusw1,btemp
 15538  013826  0EF0               	movlw	-16
 15539  013828  006F FF8C  F026    	movff	plusw1,btemp+1
 15540  01382E  0EF1               	movlw	-15
 15541  013830  006F FF8C  F027    	movff	plusw1,btemp+2
 15542  013836  0EF2               	movlw	-14
 15543  013838  006F FF8C  F028    	movff	plusw1,btemp+3
 15544  01383E  D19F               	goto	l2807
 15545  013840                     l8174:
 15546                           
 15547                           ;stkvar	_bexp @ sp[(-13)+11]
 15548  013840  0EFE               	movlw	-2
 15549  013842  50E3               	movf	plusw1,w,c
 15550  013844  A4D8               	btfss	status,2,c
 15551  013846  D009               	goto	l8182
 15552  013848  0E00               	movlw	0
 15553  01384A  6E25               	movwf	btemp^0,c
 15554  01384C  0E00               	movlw	0
 15555  01384E  6E26               	movwf	(btemp+1)^0,c
 15556  013850  0E00               	movlw	0
 15557  013852  6E27               	movwf	(btemp+2)^0,c
 15558  013854  0E00               	movlw	0
 15559  013856  6E28               	movwf	(btemp+3)^0,c
 15560  013858  D192               	goto	l2807
 15561  01385A                     l8182:
 15562                           
 15563                           ;stkvar	_bexp @ sp[(-13)+11]
 15564  01385A  0EFE               	movlw	-2
 15565  01385C  50E3               	movf	plusw1,w,c
 15566  01385E  6E2F               	movwf	(btemp+10)^0,c
 15567  013860  6A30               	clrf	(btemp+11)^0,c
 15568                           
 15569                           ;stkvar	_aexp @ sp[(-13)+10]
 15570  013862  0EFD               	movlw	-3
 15571  013864  50E3               	movf	plusw1,w,c
 15572  013866  5E2F               	subwf	(btemp+10)^0,f,c
 15573  013868  0E00               	movlw	0
 15574  01386A  5A30               	subwfb	(btemp+11)^0,f,c
 15575  01386C  0E7F               	movlw	127
 15576  01386E  262F               	addwf	(btemp+10)^0,f,c
 15577  013870  0E00               	movlw	0
 15578  013872  2230               	addwfc	(btemp+11)^0,f,c
 15579                           
 15580                           ;stkvar	_new_exp @ sp[(-13)+8]
 15581  013874  0EFB               	movlw	-5
 15582  013876  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15583  01387C  0EFC               	movlw	-4
 15584  01387E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15585                           
 15586                           ;stkvar	_b @ sp[(-13)+-4]
 15587  013884  0EEF               	movlw	-17
 15588  013886  006F FF8C  F02D    	movff	plusw1,btemp+8
 15589  01388C  0EF0               	movlw	-16
 15590  01388E  006F FF8C  F02E    	movff	plusw1,btemp+9
 15591  013894  0EF1               	movlw	-15
 15592  013896  006F FF8C  F02F    	movff	plusw1,btemp+10
 15593  01389C  0EF2               	movlw	-14
 15594  01389E  006F FF8C  F030    	movff	plusw1,btemp+11
 15595                           
 15596                           ;stkvar	_rem @ sp[(-13)+4]
 15597  0138A4  0EF7               	movlw	-9
 15598  0138A6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15599  0138AC  0EF8               	movlw	-8
 15600  0138AE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15601  0138B4  0EF9               	movlw	-7
 15602  0138B6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15603  0138BC  0EFA               	movlw	-6
 15604  0138BE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15605                           
 15606                           ;stkvar	_b @ sp[(-13)+-4]
 15607  0138C4  0EEF               	movlw	-17
 15608  0138C6  6AE3               	clrf	plusw1,c
 15609  0138C8  0EF0               	movlw	-16
 15610  0138CA  6AE3               	clrf	plusw1,c
 15611  0138CC  0EF1               	movlw	-15
 15612  0138CE  6AE3               	clrf	plusw1,c
 15613  0138D0  0EF2               	movlw	-14
 15614  0138D2  6AE3               	clrf	plusw1,c
 15615                           
 15616                           ;stkvar	_grs @ sp[(-13)+0]
 15617  0138D4  0EF3               	movlw	-13
 15618  0138D6  6AE3               	clrf	plusw1,c
 15619  0138D8  0EF4               	movlw	-12
 15620  0138DA  6AE3               	clrf	plusw1,c
 15621  0138DC  0EF5               	movlw	-11
 15622  0138DE  6AE3               	clrf	plusw1,c
 15623  0138E0  0EF6               	movlw	-10
 15624  0138E2  6AE3               	clrf	plusw1,c
 15625                           
 15626                           ;stkvar	_aexp @ sp[(-13)+10]
 15627  0138E4  0EFD               	movlw	-3
 15628  0138E6  6AE3               	clrf	plusw1,c
 15629  0138E8  D050               	goto	l8210
 15630  0138EA                     l8192:
 15631                           
 15632                           ;stkvar	_aexp @ sp[(-13)+10]
 15633  0138EA  0EFD               	movlw	-3
 15634  0138EC  50E3               	movf	plusw1,w,c
 15635  0138EE  B4D8               	btfsc	status,2,c
 15636  0138F0  D020               	goto	l8202
 15637                           
 15638                           ;stkvar	_rem @ sp[(-13)+4]
 15639  0138F2  90D8               	bcf	status,0,c
 15640  0138F4  0EF7               	movlw	-9
 15641  0138F6  36E3               	rlcf	plusw1,f,c
 15642  0138F8  0EF8               	movlw	-8
 15643  0138FA  36E3               	rlcf	plusw1,f,c
 15644  0138FC  0EF9               	movlw	-7
 15645  0138FE  36E3               	rlcf	plusw1,f,c
 15646  013900  0EFA               	movlw	-6
 15647  013902  36E3               	rlcf	plusw1,f,c
 15648                           
 15649                           ;stkvar	_b @ sp[(-13)+-4]
 15650  013904  90D8               	bcf	status,0,c
 15651  013906  0EEF               	movlw	-17
 15652  013908  36E3               	rlcf	plusw1,f,c
 15653  01390A  0EF0               	movlw	-16
 15654  01390C  36E3               	rlcf	plusw1,f,c
 15655  01390E  0EF1               	movlw	-15
 15656  013910  36E3               	rlcf	plusw1,f,c
 15657  013912  0EF2               	movlw	-14
 15658  013914  36E3               	rlcf	plusw1,f,c
 15659                           
 15660                           ;stkvar	_grs @ sp[(-13)+0]
 15661  013916  0EF6               	movlw	-10
 15662  013918  AEE3               	btfss	plusw1,7,c
 15663  01391A  D002               	goto	l8200
 15664                           
 15665                           ;stkvar	_b @ sp[(-13)+-4]
 15666  01391C  0EEF               	movlw	-17
 15667  01391E  80E3               	bsf	plusw1,0,c
 15668  013920                     l8200:
 15669                           
 15670                           ;stkvar	_grs @ sp[(-13)+0]
 15671  013920  90D8               	bcf	status,0,c
 15672  013922  0EF3               	movlw	-13
 15673  013924  36E3               	rlcf	plusw1,f,c
 15674  013926  0EF4               	movlw	-12
 15675  013928  36E3               	rlcf	plusw1,f,c
 15676  01392A  0EF5               	movlw	-11
 15677  01392C  36E3               	rlcf	plusw1,f,c
 15678  01392E  0EF6               	movlw	-10
 15679  013930  36E3               	rlcf	plusw1,f,c
 15680  013932                     l8202:
 15681                           
 15682                           ;stkvar	_a @ sp[(-13)+-8]
 15683                           ;stkvar	_rem @ sp[(-13)+4]
 15684  013932  50E1               	movf	fsr1l,w,c
 15685  013934  0FF7               	addlw	-9
 15686  013936  6ED9               	movwf	fsr2l,c
 15687  013938  50E2               	movf	fsr1h,w,c
 15688  01393A  6EDA               	movwf	fsr2h,c
 15689  01393C  0EFF               	movlw	255
 15690  01393E  22DA               	addwfc	fsr2h,f,c
 15691  013940  0EEB               	movlw	-21
 15692  013942  50E3               	movf	plusw1,w,c
 15693  013944  5CDE               	subwf	postinc2,w,c
 15694  013946  0EEC               	movlw	-20
 15695  013948  50E3               	movf	plusw1,w,c
 15696  01394A  58DE               	subwfb	postinc2,w,c
 15697  01394C  0EED               	movlw	-19
 15698  01394E  50E3               	movf	plusw1,w,c
 15699  013950  58DE               	subwfb	postinc2,w,c
 15700  013952  0EEE               	movlw	-18
 15701  013954  50E3               	movf	plusw1,w,c
 15702  013956  58DE               	subwfb	postinc2,w,c
 15703  013958  A0D8               	btfss	status,0,c
 15704  01395A  D015               	goto	l8208
 15705                           
 15706                           ;stkvar	_grs @ sp[(-13)+0]
 15707  01395C  0EF6               	movlw	-10
 15708  01395E  8CE3               	bsf	plusw1,6,c
 15709                           
 15710                           ;stkvar	_a @ sp[(-13)+-8]
 15711                           ;stkvar	_rem @ sp[(-13)+4]
 15712  013960  50E1               	movf	fsr1l,w,c
 15713  013962  0FF7               	addlw	-9
 15714  013964  6ED9               	movwf	fsr2l,c
 15715  013966  50E2               	movf	fsr1h,w,c
 15716  013968  6EDA               	movwf	fsr2h,c
 15717  01396A  0EFF               	movlw	255
 15718  01396C  22DA               	addwfc	fsr2h,f,c
 15719  01396E  0EEB               	movlw	-21
 15720  013970  50E3               	movf	plusw1,w,c
 15721  013972  5EDE               	subwf	postinc2,f,c
 15722  013974  0EEC               	movlw	-20
 15723  013976  50E3               	movf	plusw1,w,c
 15724  013978  5ADE               	subwfb	postinc2,f,c
 15725  01397A  0EED               	movlw	-19
 15726  01397C  50E3               	movf	plusw1,w,c
 15727  01397E  5ADE               	subwfb	postinc2,f,c
 15728  013980  0EEE               	movlw	-18
 15729  013982  50E3               	movf	plusw1,w,c
 15730  013984  5ADE               	subwfb	postinc2,f,c
 15731  013986                     l8208:
 15732                           
 15733                           ;stkvar	_aexp @ sp[(-13)+10]
 15734  013986  0EFD               	movlw	-3
 15735  013988  2AE3               	incf	plusw1,f,c
 15736  01398A                     l8210:
 15737                           
 15738                           ;stkvar	_aexp @ sp[(-13)+10]
 15739  01398A  0EFD               	movlw	-3
 15740  01398C  006F FF8C  F025    	movff	plusw1,btemp
 15741  013992  0E19               	movlw	25
 15742  013994  6425               	cpfsgt	btemp^0,c
 15743  013996  D7A9               	goto	l8192
 15744                           
 15745                           ;stkvar	_rem @ sp[(-13)+4]
 15746  013998  0EF7               	movlw	-9
 15747  01399A  50E3               	movf	plusw1,w,c
 15748  01399C  E10A               	bnz	u7560
 15749  01399E  0EF8               	movlw	-8
 15750  0139A0  50E3               	movf	plusw1,w,c
 15751  0139A2  E107               	bnz	u7560
 15752  0139A4  0EF9               	movlw	-7
 15753  0139A6  50E3               	movf	plusw1,w,c
 15754  0139A8  E104               	bnz	u7560
 15755  0139AA  0EFA               	movlw	-6
 15756  0139AC  50E3               	movf	plusw1,w,c
 15757  0139AE  B4D8               	btfsc	status,2,c
 15758  0139B0  D024               	goto	l8226
 15759  0139B2                     u7560:
 15760                           
 15761                           ;stkvar	_grs @ sp[(-13)+0]
 15762  0139B2  0EF3               	movlw	-13
 15763  0139B4  80E3               	bsf	plusw1,0,c
 15764  0139B6  D021               	goto	l8226
 15765  0139B8                     l8216:
 15766                           
 15767                           ;stkvar	_b @ sp[(-13)+-4]
 15768  0139B8  90D8               	bcf	status,0,c
 15769  0139BA  0EEF               	movlw	-17
 15770  0139BC  36E3               	rlcf	plusw1,f,c
 15771  0139BE  0EF0               	movlw	-16
 15772  0139C0  36E3               	rlcf	plusw1,f,c
 15773  0139C2  0EF1               	movlw	-15
 15774  0139C4  36E3               	rlcf	plusw1,f,c
 15775  0139C6  0EF2               	movlw	-14
 15776  0139C8  36E3               	rlcf	plusw1,f,c
 15777                           
 15778                           ;stkvar	_grs @ sp[(-13)+0]
 15779  0139CA  0EF6               	movlw	-10
 15780  0139CC  AEE3               	btfss	plusw1,7,c
 15781  0139CE  D002               	goto	l8222
 15782                           
 15783                           ;stkvar	_b @ sp[(-13)+-4]
 15784  0139D0  0EEF               	movlw	-17
 15785  0139D2  80E3               	bsf	plusw1,0,c
 15786  0139D4                     l8222:
 15787                           
 15788                           ;stkvar	_grs @ sp[(-13)+0]
 15789  0139D4  90D8               	bcf	status,0,c
 15790  0139D6  0EF3               	movlw	-13
 15791  0139D8  36E3               	rlcf	plusw1,f,c
 15792  0139DA  0EF4               	movlw	-12
 15793  0139DC  36E3               	rlcf	plusw1,f,c
 15794  0139DE  0EF5               	movlw	-11
 15795  0139E0  36E3               	rlcf	plusw1,f,c
 15796  0139E2  0EF6               	movlw	-10
 15797  0139E4  36E3               	rlcf	plusw1,f,c
 15798                           
 15799                           ;stkvar	_new_exp @ sp[(-13)+8]
 15800  0139E6  50E1               	movf	fsr1l,w,c
 15801  0139E8  0FFB               	addlw	-5
 15802  0139EA  6ED9               	movwf	fsr2l,c
 15803  0139EC  50E2               	movf	fsr1h,w,c
 15804  0139EE  6EDA               	movwf	fsr2h,c
 15805  0139F0  0EFF               	movlw	255
 15806  0139F2  22DA               	addwfc	fsr2h,f,c
 15807  0139F4  06DE               	decf	postinc2,f,c
 15808  0139F6  0E00               	movlw	0
 15809  0139F8  5ADD               	subwfb	postdec2,f,c
 15810  0139FA                     l8226:
 15811                           
 15812                           ;stkvar	_b @ sp[(-13)+-4]
 15813  0139FA  0EF1               	movlw	-15
 15814  0139FC  AEE3               	btfss	plusw1,7,c
 15815  0139FE  D7DC               	goto	l8216
 15816                           
 15817                           ;stkvar	_aexp @ sp[(-13)+10]
 15818  013A00  0EFD               	movlw	-3
 15819  013A02  6AE3               	clrf	plusw1,c
 15820                           
 15821                           ;stkvar	_grs @ sp[(-13)+0]
 15822  013A04  0EF6               	movlw	-10
 15823  013A06  AEE3               	btfss	plusw1,7,c
 15824  013A08  D020               	goto	l8240
 15825                           
 15826                           ;stkvar	_grs @ sp[(-13)+0]
 15827  013A0A  50E1               	movf	fsr1l,w,c
 15828  013A0C  0FF3               	addlw	-13
 15829  013A0E  6ED9               	movwf	fsr2l,c
 15830  013A10  50E2               	movf	fsr1h,w,c
 15831  013A12  6EDA               	movwf	fsr2h,c
 15832  013A14  0EFF               	movlw	255
 15833  013A16  22DA               	addwfc	fsr2h,f,c
 15834  013A18  0EFF               	movlw	255
 15835  013A1A  14DE               	andwf	postinc2,w,c
 15836  013A1C  6E2D               	movwf	(btemp+8)^0,c
 15837  013A1E  0EFF               	movlw	255
 15838  013A20  14DE               	andwf	postinc2,w,c
 15839  013A22  6E2E               	movwf	(btemp+9)^0,c
 15840  013A24  0EFF               	movlw	255
 15841  013A26  14DE               	andwf	postinc2,w,c
 15842  013A28  6E2F               	movwf	(btemp+10)^0,c
 15843  013A2A  0E7F               	movlw	127
 15844  013A2C  14DE               	andwf	postinc2,w,c
 15845  013A2E  6E30               	movwf	(btemp+11)^0,c
 15846  013A30  502D               	movf	(btemp+8)^0,w,c
 15847  013A32  102E               	iorwf	(btemp+9)^0,w,c
 15848  013A34  102F               	iorwf	(btemp+10)^0,w,c
 15849  013A36  1030               	iorwf	(btemp+11)^0,w,c
 15850  013A38  B4D8               	btfsc	status,2,c
 15851  013A3A  D004               	goto	l8236
 15852  013A3C                     u7600:
 15853                           
 15854                           ;stkvar	_aexp @ sp[(-13)+10]
 15855  013A3C  0EFD               	movlw	-3
 15856  013A3E  6AE3               	clrf	plusw1,c
 15857  013A40  2AE3               	incf	plusw1,f,c
 15858  013A42  D003               	goto	l8240
 15859  013A44                     l8236:
 15860                           
 15861                           ;stkvar	_b @ sp[(-13)+-4]
 15862  013A44  0EEF               	movlw	-17
 15863  013A46  B0E3               	btfsc	plusw1,0,c
 15864  013A48  D7F9               	goto	u7600
 15865  013A4A                     l8240:
 15866                           
 15867                           ;stkvar	_aexp @ sp[(-13)+10]
 15868  013A4A  0EFD               	movlw	-3
 15869  013A4C  50E3               	movf	plusw1,w,c
 15870  013A4E  B4D8               	btfsc	status,2,c
 15871  013A50  D036               	goto	l8250
 15872                           
 15873                           ;stkvar	_b @ sp[(-13)+-4]
 15874  013A52  50E1               	movf	fsr1l,w,c
 15875  013A54  0FEF               	addlw	-17
 15876  013A56  6ED9               	movwf	fsr2l,c
 15877  013A58  50E2               	movf	fsr1h,w,c
 15878  013A5A  6EDA               	movwf	fsr2h,c
 15879  013A5C  0EFF               	movlw	255
 15880  013A5E  22DA               	addwfc	fsr2h,f,c
 15881  013A60  2ADE               	incf	postinc2,f,c
 15882  013A62  0E00               	movlw	0
 15883  013A64  22DE               	addwfc	postinc2,f,c
 15884  013A66  22DE               	addwfc	postinc2,f,c
 15885  013A68  22DE               	addwfc	postinc2,f,c
 15886                           
 15887                           ;stkvar	_b @ sp[(-13)+-4]
 15888  013A6A  0EF2               	movlw	-14
 15889  013A6C  A0E3               	btfss	plusw1,0,c
 15890  013A6E  D027               	goto	l8250
 15891  013A70  0E01               	movlw	1
 15892  013A72  6E30               	movwf	(btemp+11)^0,c
 15893                           
 15894                           ;stkvar	_b @ sp[(-13)+-4]
 15895  013A74  50E1               	movf	fsr1l,w,c
 15896  013A76  0FEF               	addlw	-17
 15897  013A78  6ED9               	movwf	fsr2l,c
 15898  013A7A  50E2               	movf	fsr1h,w,c
 15899  013A7C  6EDA               	movwf	fsr2h,c
 15900  013A7E  0EFF               	movlw	255
 15901  013A80  22DA               	addwfc	fsr2h,f,c
 15902  013A82  2830               	incf	(btemp+11)^0,w,c
 15903  013A84  52DE               	movf	postinc2,f,c
 15904  013A86  D008               	goto	u7640
 15905  013A88                     u7645:
 15906  013A88  52DE               	movf	postinc2,f,c
 15907  013A8A  90D8               	bcf	status,0,c
 15908  013A8C  BEDC               	btfsc	preinc2,7,c
 15909  013A8E  80D8               	bsf	status,0,c
 15910  013A90  32DD               	rrcf	postdec2,f,c
 15911  013A92  32DD               	rrcf	postdec2,f,c
 15912  013A94  32DD               	rrcf	postdec2,f,c
 15913  013A96  32DE               	rrcf	postinc2,f,c
 15914  013A98                     u7640:
 15915  013A98  2EE8               	decfsz	wreg,f,c
 15916  013A9A  D7F6               	goto	u7645
 15917                           
 15918                           ;stkvar	_new_exp @ sp[(-13)+8]
 15919  013A9C  0EFB               	movlw	-5
 15920  013A9E  50E3               	movf	plusw1,w,c
 15921  013AA0  0F01               	addlw	1
 15922  013AA2  6E25               	movwf	btemp^0,c
 15923  013AA4  0EFB               	movlw	-5
 15924  013AA6  0060  F097  FFE3   	movff	btemp,plusw1
 15925  013AAC  6A25               	clrf	btemp^0,c
 15926  013AAE  0EFC               	movlw	-4
 15927  013AB0  50E3               	movf	plusw1,w,c
 15928  013AB2  2025               	addwfc	btemp^0,w,c
 15929  013AB4  6E25               	movwf	btemp^0,c
 15930  013AB6  0EFC               	movlw	-4
 15931  013AB8  0060  F097  FFE3   	movff	btemp,plusw1
 15932  013ABE                     l8250:
 15933                           
 15934                           ;stkvar	_new_exp @ sp[(-13)+8]
 15935  013ABE  0EFC               	movlw	-4
 15936  013AC0  BEE3               	btfsc	plusw1,7,c
 15937  013AC2  D01B               	goto	l8256
 15938  013AC4  0EFC               	movlw	-4
 15939  013AC6  50E3               	movf	plusw1,w,c
 15940  013AC8  E104               	bnz	u7650
 15941  013ACA  0EFB               	movlw	-5
 15942  013ACC  28E3               	incf	plusw1,w,c
 15943  013ACE  A0D8               	btfss	status,0,c
 15944  013AD0  D014               	goto	l8256
 15945  013AD2                     u7650:
 15946  013AD2  0EFF               	movlw	255
 15947  013AD4  6E2F               	movwf	(btemp+10)^0,c
 15948  013AD6  0E00               	movlw	0
 15949  013AD8  6E30               	movwf	(btemp+11)^0,c
 15950                           
 15951                           ;stkvar	_new_exp @ sp[(-13)+8]
 15952  013ADA  0EFB               	movlw	-5
 15953  013ADC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15954  013AE2  0EFC               	movlw	-4
 15955  013AE4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15956                           
 15957                           ;stkvar	_b @ sp[(-13)+-4]
 15958  013AEA  0EEF               	movlw	-17
 15959  013AEC  6AE3               	clrf	plusw1,c
 15960  013AEE  0EF0               	movlw	-16
 15961  013AF0  6AE3               	clrf	plusw1,c
 15962  013AF2  0EF1               	movlw	-15
 15963  013AF4  6AE3               	clrf	plusw1,c
 15964  013AF6  0EF2               	movlw	-14
 15965  013AF8  6AE3               	clrf	plusw1,c
 15966  013AFA                     l8256:
 15967                           
 15968                           ;stkvar	_new_exp @ sp[(-13)+8]
 15969  013AFA  0EFC               	movlw	-4
 15970  013AFC  BEE3               	btfsc	plusw1,7,c
 15971  013AFE  D007               	goto	u7660
 15972  013B00  0EFC               	movlw	-4
 15973  013B02  50E3               	movf	plusw1,w,c
 15974  013B04  E112               	bnz	l8262
 15975  013B06  0EFB               	movlw	-5
 15976  013B08  04E3               	decf	plusw1,w,c
 15977  013B0A  B0D8               	btfsc	status,0,c
 15978  013B0C  D00E               	goto	l8262
 15979  013B0E                     u7660:
 15980                           
 15981                           ;stkvar	_new_exp @ sp[(-13)+8]
 15982  013B0E  0EFB               	movlw	-5
 15983  013B10  6AE3               	clrf	plusw1,c
 15984  013B12  0EFC               	movlw	-4
 15985  013B14  6AE3               	clrf	plusw1,c
 15986                           
 15987                           ;stkvar	_b @ sp[(-13)+-4]
 15988  013B16  0EEF               	movlw	-17
 15989  013B18  6AE3               	clrf	plusw1,c
 15990  013B1A  0EF0               	movlw	-16
 15991  013B1C  6AE3               	clrf	plusw1,c
 15992  013B1E  0EF1               	movlw	-15
 15993  013B20  6AE3               	clrf	plusw1,c
 15994  013B22  0EF2               	movlw	-14
 15995  013B24  6AE3               	clrf	plusw1,c
 15996                           
 15997                           ;stkvar	_sign @ sp[(-13)+12]
 15998  013B26  0EFF               	movlw	-1
 15999  013B28  6AE3               	clrf	plusw1,c
 16000  013B2A                     l8262:
 16001                           
 16002                           ;stkvar	_new_exp @ sp[(-13)+8]
 16003                           ;stkvar	_bexp @ sp[(-13)+11]
 16004  013B2A  0EFB               	movlw	-5
 16005  013B2C  006F FF8C  F025    	movff	plusw1,btemp
 16006  013B32  0EFE               	movlw	-2
 16007  013B34  0060  F097  FFE3   	movff	btemp,plusw1
 16008                           
 16009                           ;stkvar	_bexp @ sp[(-13)+11]
 16010  013B3A  0EFE               	movlw	-2
 16011  013B3C  A0E3               	btfss	plusw1,0,c
 16012  013B3E  D009               	goto	l8268
 16013                           
 16014                           ;stkvar	_b @ sp[(-13)+-4]
 16015  013B40  0EF1               	movlw	241
 16016  013B42  24E1               	addwf	fsr1l,w,c
 16017  013B44  6ED9               	movwf	fsr2l,c
 16018  013B46  0EFF               	movlw	255
 16019  013B48  20E2               	addwfc	fsr1h,w,c
 16020  013B4A  6EDA               	movwf	fsr2h,c
 16021  013B4C  0E00               	movlw	0
 16022  013B4E  8EDB               	bsf	plusw2,7,c
 16023  013B50  D008               	goto	l8270
 16024  013B52                     l8268:
 16025                           
 16026                           ;stkvar	_b @ sp[(-13)+-4]
 16027  013B52  0EF1               	movlw	241
 16028  013B54  24E1               	addwf	fsr1l,w,c
 16029  013B56  6ED9               	movwf	fsr2l,c
 16030  013B58  0EFF               	movlw	255
 16031  013B5A  20E2               	addwfc	fsr1h,w,c
 16032  013B5C  6EDA               	movwf	fsr2h,c
 16033  013B5E  0E7F               	movlw	127
 16034  013B60  16DF               	andwf	indf2,f,c
 16035  013B62                     l8270:
 16036                           
 16037                           ;stkvar	_b @ sp[(-13)+-4]
 16038  013B62  0EF2               	movlw	242
 16039  013B64  24E1               	addwf	fsr1l,w,c
 16040  013B66  6ED9               	movwf	fsr2l,c
 16041  013B68  0EFF               	movlw	255
 16042  013B6A  20E2               	addwfc	fsr1h,w,c
 16043  013B6C  6EDA               	movwf	fsr2h,c
 16044                           
 16045                           ;stkvar	_bexp @ sp[(-13)+11]
 16046  013B6E  0EFE               	movlw	-2
 16047  013B70  006F FF8C  F030    	movff	plusw1,btemp+11
 16048  013B76  90D8               	bcf	status,0,c
 16049  013B78  3030               	rrcf	(btemp+11)^0,w,c
 16050  013B7A  6EDF               	movwf	indf2,c
 16051  013B7C  D644               	goto	l8168
 16052  013B7E                     l2807:
 16053                           
 16054                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16055  013B7E  0EEB               	movlw	235
 16056  013B80  26E1               	addwf	fsr1l,f,c
 16057  013B82  0EFF               	movlw	255
 16058  013B84  22E2               	addwfc	fsr1h,f,c
 16059  013B86  0012               	return		;funcret
 16060  013B88                     __end_of___fldiv:
 16061                           	opt callstack 0
 16062                           
 16063 ;; *************** function ___awmod *****************
 16064 ;; Defined at:
 16065 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;  dividend        2  [STACK] int 
 16068 ;;  divisor         2  [STACK] int 
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;  sign            1  [STACK] unsigned char 
 16071 ;;  counter         1  [STACK] unsigned char 
 16072 ;; Return value:  Size  Location     Type
 16073 ;;                  2  [STACK] int 
 16074 ;; Registers used:
 16075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16076 ;; Tracked objects:
 16077 ;;		On entry : 0/0
 16078 ;;		On exit  : 0/0
 16079 ;;		Unchanged: 0/0
 16080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16085 ;;Total ram usage:        0 bytes
 16086 ;; Hardware stack levels used:    1
 16087 ;; Hardware stack levels required when called:    7
 16088 ;; This function calls:
 16089 ;;		Nothing
 16090 ;; This function is called by:
 16091 ;;		_efgtoa
 16092 ;; This function uses a reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text59
 16096  01714C                     __ptext59:
 16097                           	opt callstack 0
 16098  01714C                     ___awmod:
 16099                           	opt callstack 0
 16100                           
 16101                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16102  01714C  52E6               	movf	postinc1,f,c
 16103  01714E  52E6               	movf	postinc1,f,c
 16104                           
 16105                           ;stkvar	_sign @ sp[(-2)+0]
 16106                           
 16107                           ;incstack = 0
 16108  017150  0EFE               	movlw	-2
 16109  017152  6AE3               	clrf	plusw1,c
 16110                           
 16111                           ;stkvar	_dividend @ sp[(-2)+-2]
 16112  017154  0EFD               	movlw	-3
 16113  017156  AEE3               	btfss	plusw1,7,c
 16114  017158  D009               	goto	l6896
 16115                           
 16116                           ;stkvar	_dividend @ sp[(-2)+-2]
 16117                           ;stkvar	_dividend @ sp[(-2)+-2]
 16118  01715A  0EFC               	movlw	-4
 16119  01715C  6CE3               	negf	plusw1,c
 16120  01715E  0EFD               	movlw	-3
 16121  017160  1EE3               	comf	plusw1,f,c
 16122  017162  B0D8               	btfsc	status,0,c
 16123  017164  2AE3               	incf	plusw1,f,c
 16124                           
 16125                           ;stkvar	_sign @ sp[(-2)+0]
 16126  017166  0EFE               	movlw	-2
 16127  017168  6AE3               	clrf	plusw1,c
 16128  01716A  2AE3               	incf	plusw1,f,c
 16129  01716C                     l6896:
 16130                           
 16131                           ;stkvar	_divisor @ sp[(-2)+-4]
 16132  01716C  0EFB               	movlw	-5
 16133  01716E  AEE3               	btfss	plusw1,7,c
 16134  017170  D006               	goto	l6900
 16135                           
 16136                           ;stkvar	_divisor @ sp[(-2)+-4]
 16137                           ;stkvar	_divisor @ sp[(-2)+-4]
 16138  017172  0EFA               	movlw	-6
 16139  017174  6CE3               	negf	plusw1,c
 16140  017176  0EFB               	movlw	-5
 16141  017178  1EE3               	comf	plusw1,f,c
 16142  01717A  B0D8               	btfsc	status,0,c
 16143  01717C  2AE3               	incf	plusw1,f,c
 16144  01717E                     l6900:
 16145                           
 16146                           ;stkvar	_divisor @ sp[(-2)+-4]
 16147  01717E  0EFA               	movlw	-6
 16148  017180  006F FF8C  F025    	movff	plusw1,btemp
 16149  017186  0EFB               	movlw	-5
 16150  017188  50E3               	movf	plusw1,w,c
 16151  01718A  1025               	iorwf	btemp^0,w,c
 16152  01718C  B4D8               	btfsc	status,2,c
 16153  01718E  D053               	goto	u5470
 16154                           
 16155                           ;stkvar	_counter @ sp[(-2)+1]
 16156  017190  0EFF               	movlw	-1
 16157  017192  6AE3               	clrf	plusw1,c
 16158  017194  D012               	goto	L15
 16159  017196                     l6904:
 16160                           
 16161                           ;stkvar	_divisor @ sp[(-2)+-4]
 16162  017196  0EFA               	movlw	-6
 16163  017198  50E3               	movf	plusw1,w,c
 16164  01719A  90D8               	bcf	status,0,c
 16165  01719C  34E8               	rlcf	wreg,w,c
 16166  01719E  6E25               	movwf	btemp^0,c
 16167  0171A0  0EFA               	movlw	-6
 16168  0171A2  0060  F097  FFE3   	movff	btemp,plusw1
 16169  0171A8  0EFB               	movlw	-5
 16170  0171AA  50E3               	movf	plusw1,w,c
 16171  0171AC  34E8               	rlcf	wreg,w,c
 16172  0171AE  6E25               	movwf	btemp^0,c
 16173  0171B0  0EFB               	movlw	-5
 16174  0171B2  0060  F097  FFE3   	movff	btemp,plusw1
 16175                           
 16176                           ;stkvar	_counter @ sp[(-2)+1]
 16177  0171B8  0EFF               	movlw	-1
 16178  0171BA                     L15:
 16179  0171BA  2AE3               	incf	plusw1,f,c
 16180                           
 16181                           ;stkvar	_divisor @ sp[(-2)+-4]
 16182  0171BC  0EFB               	movlw	-5
 16183  0171BE  AEE3               	btfss	plusw1,7,c
 16184  0171C0  D7EA               	goto	l6904
 16185  0171C2                     u5450:
 16186                           
 16187                           ;stkvar	_divisor @ sp[(-2)+-4]
 16188  0171C2  0EFA               	movlw	-6
 16189  0171C4  006F FF8C  F02F    	movff	plusw1,btemp+10
 16190  0171CA  0EFB               	movlw	-5
 16191  0171CC  006F FF8C  F030    	movff	plusw1,btemp+11
 16192                           
 16193                           ;stkvar	_dividend @ sp[(-2)+-2]
 16194  0171D2  0EFC               	movlw	-4
 16195  0171D4  006F FF8C  F02D    	movff	plusw1,btemp+8
 16196  0171DA  0EFD               	movlw	-3
 16197  0171DC  006F FF8C  F02E    	movff	plusw1,btemp+9
 16198  0171E2  502F               	movf	(btemp+10)^0,w,c
 16199  0171E4  5C2D               	subwf	(btemp+8)^0,w,c
 16200  0171E6  5030               	movf	(btemp+11)^0,w,c
 16201  0171E8  582E               	subwfb	(btemp+9)^0,w,c
 16202  0171EA  A0D8               	btfss	status,0,c
 16203  0171EC  D014               	goto	l6914
 16204                           
 16205                           ;stkvar	_divisor @ sp[(-2)+-4]
 16206                           ;stkvar	_dividend @ sp[(-2)+-2]
 16207  0171EE  0EFC               	movlw	-4
 16208  0171F0  50E3               	movf	plusw1,w,c
 16209  0171F2  6E25               	movwf	btemp^0,c
 16210  0171F4  0EFA               	movlw	-6
 16211  0171F6  50E3               	movf	plusw1,w,c
 16212  0171F8  5E25               	subwf	btemp^0,f,c
 16213  0171FA  0EFC               	movlw	-4
 16214  0171FC  0060  F097  FFE3   	movff	btemp,plusw1
 16215  017202  0EFD               	movlw	-3
 16216  017204  50E3               	movf	plusw1,w,c
 16217  017206  6E25               	movwf	btemp^0,c
 16218  017208  0EFB               	movlw	-5
 16219  01720A  50E3               	movf	plusw1,w,c
 16220  01720C  5A25               	subwfb	btemp^0,f,c
 16221  01720E  0EFD               	movlw	-3
 16222  017210  0060  F097  FFE3   	movff	btemp,plusw1
 16223  017216                     l6914:
 16224                           
 16225                           ;stkvar	_divisor @ sp[(-2)+-4]
 16226  017216  90D8               	bcf	status,0,c
 16227  017218  0EFB               	movlw	-5
 16228  01721A  32E3               	rrcf	plusw1,f,c
 16229  01721C  0EFA               	movlw	-6
 16230  01721E  32E3               	rrcf	plusw1,f,c
 16231                           
 16232                           ;stkvar	_counter @ sp[(-2)+1]
 16233  017220  0EFF               	movlw	-1
 16234  017222  50E3               	movf	plusw1,w,c
 16235  017224  6E25               	movwf	btemp^0,c
 16236  017226  0E01               	movlw	1
 16237  017228  5E25               	subwf	btemp^0,f,c
 16238  01722A  0EFF               	movlw	-1
 16239  01722C  0060  F097  FFE3   	movff	btemp,plusw1
 16240  017232  A4D8               	btfss	status,2,c
 16241  017234  D7C6               	goto	u5450
 16242  017236                     u5470:
 16243                           
 16244                           ;stkvar	_sign @ sp[(-2)+0]
 16245  017236  0EFE               	movlw	-2
 16246  017238  50E3               	movf	plusw1,w,c
 16247  01723A  B4D8               	btfsc	status,2,c
 16248  01723C  D006               	goto	l6922
 16249                           
 16250                           ;stkvar	_dividend @ sp[(-2)+-2]
 16251                           ;stkvar	_dividend @ sp[(-2)+-2]
 16252  01723E  0EFC               	movlw	-4
 16253  017240  6CE3               	negf	plusw1,c
 16254  017242  0EFD               	movlw	-3
 16255  017244  1EE3               	comf	plusw1,f,c
 16256  017246  B0D8               	btfsc	status,0,c
 16257  017248  2AE3               	incf	plusw1,f,c
 16258  01724A                     l6922:
 16259                           
 16260                           ;stkvar	_dividend @ sp[(-2)+-2]
 16261  01724A  0EFC               	movlw	-4
 16262  01724C  006F FF8C  F025    	movff	plusw1,btemp
 16263  017252  0EFD               	movlw	-3
 16264  017254  006F FF8C  F026    	movff	plusw1,btemp+1
 16265                           
 16266                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16267  01725A  0EFA               	movlw	250
 16268  01725C  26E1               	addwf	fsr1l,f,c
 16269  01725E  0EFF               	movlw	255
 16270  017260  22E2               	addwfc	fsr1h,f,c
 16271  017262  0012               	return		;funcret
 16272  017264                     __end_of___awmod:
 16273                           	opt callstack 0
 16274                           
 16275 ;; *************** function ___awdiv *****************
 16276 ;; Defined at:
 16277 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;  dividend        2  [STACK] int 
 16280 ;;  divisor         2  [STACK] int 
 16281 ;; Auto vars:     Size  Location     Type
 16282 ;;  quotient        2  [STACK] int 
 16283 ;;  sign            1  [STACK] unsigned char 
 16284 ;;  counter         1  [STACK] unsigned char 
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  2  [STACK] int 
 16287 ;; Registers used:
 16288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16298 ;;Total ram usage:        0 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:    7
 16301 ;; This function calls:
 16302 ;;		Nothing
 16303 ;; This function is called by:
 16304 ;;		_efgtoa
 16305 ;; This function uses a reentrant model
 16306 ;;
 16307                           
 16308                           	psect	text60
 16309  016C84                     __ptext60:
 16310                           	opt callstack 0
 16311  016C84                     ___awdiv:
 16312                           	opt callstack 0
 16313                           
 16314                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16315  016C84  52E6               	movf	postinc1,f,c
 16316  016C86  52E6               	movf	postinc1,f,c
 16317  016C88  52E6               	movf	postinc1,f,c
 16318  016C8A  52E6               	movf	postinc1,f,c
 16319                           
 16320                           ;stkvar	_sign @ sp[(-4)+2]
 16321                           
 16322                           ;incstack = 0
 16323  016C8C  0EFE               	movlw	-2
 16324  016C8E  6AE3               	clrf	plusw1,c
 16325                           
 16326                           ;stkvar	_divisor @ sp[(-4)+-4]
 16327  016C90  0EF9               	movlw	-7
 16328  016C92  AEE3               	btfss	plusw1,7,c
 16329  016C94  D009               	goto	l6850
 16330                           
 16331                           ;stkvar	_divisor @ sp[(-4)+-4]
 16332                           ;stkvar	_divisor @ sp[(-4)+-4]
 16333  016C96  0EF8               	movlw	-8
 16334  016C98  6CE3               	negf	plusw1,c
 16335  016C9A  0EF9               	movlw	-7
 16336  016C9C  1EE3               	comf	plusw1,f,c
 16337  016C9E  B0D8               	btfsc	status,0,c
 16338  016CA0  2AE3               	incf	plusw1,f,c
 16339                           
 16340                           ;stkvar	_sign @ sp[(-4)+2]
 16341  016CA2  0EFE               	movlw	-2
 16342  016CA4  6AE3               	clrf	plusw1,c
 16343  016CA6  2AE3               	incf	plusw1,f,c
 16344  016CA8                     l6850:
 16345                           
 16346                           ;stkvar	_dividend @ sp[(-4)+-2]
 16347  016CA8  0EFB               	movlw	-5
 16348  016CAA  AEE3               	btfss	plusw1,7,c
 16349  016CAC  D008               	goto	l6856
 16350                           
 16351                           ;stkvar	_dividend @ sp[(-4)+-2]
 16352                           ;stkvar	_dividend @ sp[(-4)+-2]
 16353  016CAE  0EFA               	movlw	-6
 16354  016CB0  6CE3               	negf	plusw1,c
 16355  016CB2  0EFB               	movlw	-5
 16356  016CB4  1EE3               	comf	plusw1,f,c
 16357  016CB6  B0D8               	btfsc	status,0,c
 16358  016CB8  2AE3               	incf	plusw1,f,c
 16359                           
 16360                           ;stkvar	_sign @ sp[(-4)+2]
 16361  016CBA  0EFE               	movlw	-2
 16362  016CBC  70E3               	btg	plusw1,0,c
 16363  016CBE                     l6856:
 16364                           
 16365                           ;stkvar	_quotient @ sp[(-4)+0]
 16366  016CBE  0EFC               	movlw	-4
 16367  016CC0  6AE3               	clrf	plusw1,c
 16368  016CC2  0EFD               	movlw	-3
 16369  016CC4  6AE3               	clrf	plusw1,c
 16370                           
 16371                           ;stkvar	_divisor @ sp[(-4)+-4]
 16372  016CC6  0EF8               	movlw	-8
 16373  016CC8  006F FF8C  F025    	movff	plusw1,btemp
 16374  016CCE  0EF9               	movlw	-7
 16375  016CD0  50E3               	movf	plusw1,w,c
 16376  016CD2  1025               	iorwf	btemp^0,w,c
 16377  016CD4  B4D8               	btfsc	status,2,c
 16378  016CD6  D066               	goto	u5400
 16379                           
 16380                           ;stkvar	_counter @ sp[(-4)+3]
 16381  016CD8  0EFF               	movlw	-1
 16382  016CDA  6AE3               	clrf	plusw1,c
 16383  016CDC  D012               	goto	L16
 16384  016CDE                     l6862:
 16385                           
 16386                           ;stkvar	_divisor @ sp[(-4)+-4]
 16387  016CDE  0EF8               	movlw	-8
 16388  016CE0  50E3               	movf	plusw1,w,c
 16389  016CE2  90D8               	bcf	status,0,c
 16390  016CE4  34E8               	rlcf	wreg,w,c
 16391  016CE6  6E25               	movwf	btemp^0,c
 16392  016CE8  0EF8               	movlw	-8
 16393  016CEA  0060  F097  FFE3   	movff	btemp,plusw1
 16394  016CF0  0EF9               	movlw	-7
 16395  016CF2  50E3               	movf	plusw1,w,c
 16396  016CF4  34E8               	rlcf	wreg,w,c
 16397  016CF6  6E25               	movwf	btemp^0,c
 16398  016CF8  0EF9               	movlw	-7
 16399  016CFA  0060  F097  FFE3   	movff	btemp,plusw1
 16400                           
 16401                           ;stkvar	_counter @ sp[(-4)+3]
 16402  016D00  0EFF               	movlw	-1
 16403  016D02                     L16:
 16404  016D02  2AE3               	incf	plusw1,f,c
 16405                           
 16406                           ;stkvar	_divisor @ sp[(-4)+-4]
 16407  016D04  0EF9               	movlw	-7
 16408  016D06  AEE3               	btfss	plusw1,7,c
 16409  016D08  D7EA               	goto	l6862
 16410  016D0A                     u5380:
 16411                           
 16412                           ;stkvar	_quotient @ sp[(-4)+0]
 16413  016D0A  0EFC               	movlw	-4
 16414  016D0C  50E3               	movf	plusw1,w,c
 16415  016D0E  90D8               	bcf	status,0,c
 16416  016D10  34E8               	rlcf	wreg,w,c
 16417  016D12  6E25               	movwf	btemp^0,c
 16418  016D14  0EFC               	movlw	-4
 16419  016D16  0060  F097  FFE3   	movff	btemp,plusw1
 16420  016D1C  0EFD               	movlw	-3
 16421  016D1E  50E3               	movf	plusw1,w,c
 16422  016D20  34E8               	rlcf	wreg,w,c
 16423  016D22  6E25               	movwf	btemp^0,c
 16424  016D24  0EFD               	movlw	-3
 16425  016D26  0060  F097  FFE3   	movff	btemp,plusw1
 16426                           
 16427                           ;stkvar	_divisor @ sp[(-4)+-4]
 16428  016D2C  0EF8               	movlw	-8
 16429  016D2E  006F FF8C  F02F    	movff	plusw1,btemp+10
 16430  016D34  0EF9               	movlw	-7
 16431  016D36  006F FF8C  F030    	movff	plusw1,btemp+11
 16432                           
 16433                           ;stkvar	_dividend @ sp[(-4)+-2]
 16434  016D3C  0EFA               	movlw	-6
 16435  016D3E  006F FF8C  F02D    	movff	plusw1,btemp+8
 16436  016D44  0EFB               	movlw	-5
 16437  016D46  006F FF8C  F02E    	movff	plusw1,btemp+9
 16438  016D4C  502F               	movf	(btemp+10)^0,w,c
 16439  016D4E  5C2D               	subwf	(btemp+8)^0,w,c
 16440  016D50  5030               	movf	(btemp+11)^0,w,c
 16441  016D52  582E               	subwfb	(btemp+9)^0,w,c
 16442  016D54  A0D8               	btfss	status,0,c
 16443  016D56  D016               	goto	l6876
 16444                           
 16445                           ;stkvar	_divisor @ sp[(-4)+-4]
 16446                           ;stkvar	_dividend @ sp[(-4)+-2]
 16447  016D58  0EFA               	movlw	-6
 16448  016D5A  50E3               	movf	plusw1,w,c
 16449  016D5C  6E25               	movwf	btemp^0,c
 16450  016D5E  0EF8               	movlw	-8
 16451  016D60  50E3               	movf	plusw1,w,c
 16452  016D62  5E25               	subwf	btemp^0,f,c
 16453  016D64  0EFA               	movlw	-6
 16454  016D66  0060  F097  FFE3   	movff	btemp,plusw1
 16455  016D6C  0EFB               	movlw	-5
 16456  016D6E  50E3               	movf	plusw1,w,c
 16457  016D70  6E25               	movwf	btemp^0,c
 16458  016D72  0EF9               	movlw	-7
 16459  016D74  50E3               	movf	plusw1,w,c
 16460  016D76  5A25               	subwfb	btemp^0,f,c
 16461  016D78  0EFB               	movlw	-5
 16462  016D7A  0060  F097  FFE3   	movff	btemp,plusw1
 16463                           
 16464                           ;stkvar	_quotient @ sp[(-4)+0]
 16465  016D80  0EFC               	movlw	-4
 16466  016D82  80E3               	bsf	plusw1,0,c
 16467  016D84                     l6876:
 16468                           
 16469                           ;stkvar	_divisor @ sp[(-4)+-4]
 16470  016D84  90D8               	bcf	status,0,c
 16471  016D86  0EF9               	movlw	-7
 16472  016D88  32E3               	rrcf	plusw1,f,c
 16473  016D8A  0EF8               	movlw	-8
 16474  016D8C  32E3               	rrcf	plusw1,f,c
 16475                           
 16476                           ;stkvar	_counter @ sp[(-4)+3]
 16477  016D8E  0EFF               	movlw	-1
 16478  016D90  50E3               	movf	plusw1,w,c
 16479  016D92  6E25               	movwf	btemp^0,c
 16480  016D94  0E01               	movlw	1
 16481  016D96  5E25               	subwf	btemp^0,f,c
 16482  016D98  0EFF               	movlw	-1
 16483  016D9A  0060  F097  FFE3   	movff	btemp,plusw1
 16484  016DA0  A4D8               	btfss	status,2,c
 16485  016DA2  D7B3               	goto	u5380
 16486  016DA4                     u5400:
 16487                           
 16488                           ;stkvar	_sign @ sp[(-4)+2]
 16489  016DA4  0EFE               	movlw	-2
 16490  016DA6  50E3               	movf	plusw1,w,c
 16491  016DA8  B4D8               	btfsc	status,2,c
 16492  016DAA  D006               	goto	l6884
 16493                           
 16494                           ;stkvar	_quotient @ sp[(-4)+0]
 16495                           ;stkvar	_quotient @ sp[(-4)+0]
 16496  016DAC  0EFC               	movlw	-4
 16497  016DAE  6CE3               	negf	plusw1,c
 16498  016DB0  0EFD               	movlw	-3
 16499  016DB2  1EE3               	comf	plusw1,f,c
 16500  016DB4  B0D8               	btfsc	status,0,c
 16501  016DB6  2AE3               	incf	plusw1,f,c
 16502  016DB8                     l6884:
 16503                           
 16504                           ;stkvar	_quotient @ sp[(-4)+0]
 16505  016DB8  0EFC               	movlw	-4
 16506  016DBA  006F FF8C  F025    	movff	plusw1,btemp
 16507  016DC0  0EFD               	movlw	-3
 16508  016DC2  006F FF8C  F026    	movff	plusw1,btemp+1
 16509                           
 16510                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16511  016DC8  0EF8               	movlw	248
 16512  016DCA  26E1               	addwf	fsr1l,f,c
 16513  016DCC  0EFF               	movlw	255
 16514  016DCE  22E2               	addwfc	fsr1h,f,c
 16515  016DD0  0012               	return		;funcret
 16516  016DD2                     __end_of___awdiv:
 16517                           	opt callstack 0
 16518                           
 16519 ;; *************** function _dtoa *****************
 16520 ;; Defined at:
 16521 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16522 ;; Parameters:    Size  Location     Type
 16523 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16524 ;;		 -> f(6), NULL(0), 
 16525 ;;  d               8  [STACK] long long 
 16526 ;; Auto vars:     Size  Location     Type
 16527 ;;  n               8  [STACK] long long 
 16528 ;;  i               2  [STACK] int 
 16529 ;;  s               2  [STACK] int 
 16530 ;;  w               2  [STACK] int 
 16531 ;;  p               2  [STACK] int 
 16532 ;; Return value:  Size  Location     Type
 16533 ;;                  2  [STACK] int 
 16534 ;; Registers used:
 16535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16536 ;; Tracked objects:
 16537 ;;		On entry : 0/0
 16538 ;;		On exit  : 0/0
 16539 ;;		Unchanged: 0/0
 16540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16545 ;;Total ram usage:        0 bytes
 16546 ;; Hardware stack levels used:    1
 16547 ;; Hardware stack levels required when called:   12
 16548 ;; This function calls:
 16549 ;;		___aodiv
 16550 ;;		___aomod
 16551 ;;		_abs
 16552 ;;		_pad
 16553 ;; This function is called by:
 16554 ;;		_vfpfcnvrt
 16555 ;; This function uses a reentrant model
 16556 ;;
 16557                           
 16558                           	psect	text61
 16559  01451E                     __ptext61:
 16560                           	opt callstack 0
 16561  01451E                     _dtoa:
 16562                           	opt callstack 0
 16563                           
 16564                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16565  01451E  0E12               	movlw	18
 16566  014520  26E1               	addwf	fsr1l,f,c
 16567  014522  0E00               	movlw	0
 16568  014524  22E2               	addwfc	fsr1h,f,c
 16569                           
 16570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16571                           ;stkvar	_d @ sp[(-18)+-10]
 16572                           
 16573                           ;incstack = 0
 16574  014526  0EE4               	movlw	228
 16575  014528  24E1               	addwf	fsr1l,w,c
 16576  01452A  6ED9               	movwf	fsr2l,c
 16577  01452C  0EFF               	movlw	255
 16578  01452E  20E2               	addwfc	fsr1h,w,c
 16579  014530  6EDA               	movwf	fsr2h,c
 16580                           
 16581                           ;stkvar	_n @ sp[(-18)+2]
 16582  014532  0E08               	movlw	8
 16583  014534  6E25               	movwf	btemp^0,c
 16584  014536  0EF0               	movlw	-16
 16585  014538                     us941999:
 16586  014538  006F FF7B FFE3     	movff	postinc2,plusw1
 16587  01453E  28E8               	incf	wreg,w,c
 16588  014540  2E25               	decfsz	btemp^0,f,c
 16589  014542  D7FA               	bra	us941999
 16590                           
 16591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16592                           ;stkvar	_n @ sp[(-18)+2]
 16593  014544  0EF7               	movlw	-9
 16594  014546  AEE3               	btfss	plusw1,7,c
 16595  014548  D002               	goto	u9420
 16596  01454A  0E01               	movlw	1
 16597  01454C  D001               	goto	u9430
 16598  01454E                     u9420:
 16599  01454E  0E00               	movlw	0
 16600  014550                     u9430:
 16601  014550  6E2F               	movwf	(btemp+10)^0,c
 16602  014552  6A30               	clrf	(btemp+11)^0,c
 16603                           
 16604                           ;stkvar	_s @ sp[(-18)+12]
 16605  014554  0EFA               	movlw	-6
 16606  014556  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16607  01455C  0EFB               	movlw	-5
 16608  01455E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16609                           
 16610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16611                           ;stkvar	_s @ sp[(-18)+12]
 16612  014564  0EFA               	movlw	-6
 16613  014566  006F FF8C  F025    	movff	plusw1,btemp
 16614  01456C  0EFB               	movlw	-5
 16615  01456E  50E3               	movf	plusw1,w,c
 16616  014570  1025               	iorwf	btemp^0,w,c
 16617  014572  B4D8               	btfsc	status,2,c
 16618  014574  D025               	goto	u9450
 16619                           
 16620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16621                           ;stkvar	_n @ sp[(-18)+2]
 16622                           ;stkvar	_n @ sp[(-18)+2]
 16623  014576  0EF0               	movlw	-16
 16624  014578  6CE3               	negf	plusw1,c
 16625  01457A  0EF1               	movlw	-15
 16626  01457C  1EE3               	comf	plusw1,f,c
 16627  01457E  0EF2               	movlw	-14
 16628  014580  1EE3               	comf	plusw1,f,c
 16629  014582  0EF3               	movlw	-13
 16630  014584  1EE3               	comf	plusw1,f,c
 16631  014586  0EF4               	movlw	-12
 16632  014588  1EE3               	comf	plusw1,f,c
 16633  01458A  0EF5               	movlw	-11
 16634  01458C  1EE3               	comf	plusw1,f,c
 16635  01458E  0EF6               	movlw	-10
 16636  014590  1EE3               	comf	plusw1,f,c
 16637  014592  0EF7               	movlw	-9
 16638  014594  1EE3               	comf	plusw1,f,c
 16639  014596  E314               	bnc	u9450
 16640  014598  0EF1               	movlw	-15
 16641  01459A  2AE3               	incf	plusw1,f,c
 16642  01459C  E311               	bnc	u9450
 16643  01459E  0EF2               	movlw	-14
 16644  0145A0  2AE3               	incf	plusw1,f,c
 16645  0145A2  E30E               	bnc	u9450
 16646  0145A4  0EF3               	movlw	-13
 16647  0145A6  2AE3               	incf	plusw1,f,c
 16648  0145A8  E30B               	bnc	u9450
 16649  0145AA  0EF4               	movlw	-12
 16650  0145AC  2AE3               	incf	plusw1,f,c
 16651  0145AE  E308               	bnc	u9450
 16652  0145B0  0EF5               	movlw	-11
 16653  0145B2  2AE3               	incf	plusw1,f,c
 16654  0145B4  E305               	bnc	u9450
 16655  0145B6  0EF6               	movlw	-10
 16656  0145B8  2AE3               	incf	plusw1,f,c
 16657  0145BA  E302               	bnc	u9450
 16658  0145BC  0EF7               	movlw	-9
 16659  0145BE  2AE3               	incf	plusw1,f,c
 16660  0145C0                     u9450:
 16661                           
 16662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16663  0145C0  AE0D               	btfss	(_prec+1)^0,7,c
 16664                           
 16665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16666  0145C2  920E               	bcf	_flags^0,1,c
 16667                           
 16668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16669  0145C4  BE0D               	btfsc	(_prec+1)^0,7,c
 16670  0145C6  D005               	goto	u9470
 16671  0145C8  500D               	movf	(_prec+1)^0,w,c
 16672  0145CA  E110               	bnz	l10134
 16673  0145CC  040C               	decf	_prec^0,w,c
 16674  0145CE  B0D8               	btfsc	status,0,c
 16675  0145D0  D00D               	goto	l10134
 16676  0145D2                     u9470:
 16677  0145D2  0E01               	movlw	1
 16678  0145D4  6E2F               	movwf	(btemp+10)^0,c
 16679  0145D6  0E00               	movlw	0
 16680  0145D8  6E30               	movwf	(btemp+11)^0,c
 16681                           
 16682                           ;stkvar	_p @ sp[(-18)+16]
 16683  0145DA  0EFE               	movlw	-2
 16684  0145DC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16685  0145E2  0EFF               	movlw	-1
 16686  0145E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16687  0145EA  D008               	goto	l2011
 16688  0145EC                     l10134:
 16689                           
 16690                           ;stkvar	_p @ sp[(-18)+16]
 16691  0145EC  0EFE               	movlw	-2
 16692  0145EE  0060  F033  FFE3   	movff	_prec,plusw1
 16693  0145F4  0EFF               	movlw	-1
 16694  0145F6  0060  F037  FFE3   	movff	_prec+1,plusw1
 16695  0145FC                     l2011:
 16696                           
 16697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16698                           ;stkvar	_w @ sp[(-18)+14]
 16699  0145FC  0EFC               	movlw	-4
 16700  0145FE  0060  F02B  FFE3   	movff	_width,plusw1
 16701  014604  0EFD               	movlw	-3
 16702  014606  0060  F02F  FFE3   	movff	_width+1,plusw1
 16703                           
 16704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16705                           ;stkvar	_s @ sp[(-18)+12]
 16706  01460C  0EFA               	movlw	-6
 16707  01460E  006F FF8C  F025    	movff	plusw1,btemp
 16708  014614  0EFB               	movlw	-5
 16709  014616  50E3               	movf	plusw1,w,c
 16710  014618  1025               	iorwf	btemp^0,w,c
 16711  01461A  A4D8               	btfss	status,2,c
 16712  01461C  D002               	goto	u9490
 16713  01461E  A40E               	btfss	_flags^0,2,c
 16714  014620  D00A               	goto	l10142
 16715  014622                     u9490:
 16716                           
 16717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16718                           ;stkvar	_w @ sp[(-18)+14]
 16719  014622  50E1               	movf	fsr1l,w,c
 16720  014624  0FFC               	addlw	-4
 16721  014626  6ED9               	movwf	fsr2l,c
 16722  014628  50E2               	movf	fsr1h,w,c
 16723  01462A  6EDA               	movwf	fsr2h,c
 16724  01462C  0EFF               	movlw	255
 16725  01462E  22DA               	addwfc	fsr2h,f,c
 16726  014630  06DE               	decf	postinc2,f,c
 16727  014632  0E00               	movlw	0
 16728  014634  5ADD               	subwfb	postdec2,f,c
 16729  014636                     l10142:
 16730                           
 16731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16732  014636  0E4F               	movlw	79
 16733  014638  6E2F               	movwf	(btemp+10)^0,c
 16734  01463A  0E00               	movlw	0
 16735  01463C  6E30               	movwf	(btemp+11)^0,c
 16736                           
 16737                           ;stkvar	_i @ sp[(-18)+10]
 16738  01463E  0EF8               	movlw	-8
 16739  014640  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16740  014646  0EF9               	movlw	-7
 16741  014648  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16742                           
 16743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16744  01464E  0103               	movlb	3	; () banked
 16745  014650  6BE3               	clrf	(_dbuf+79)& (0+255),b
 16746                           
 16747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16748  014652  D109               	goto	l10156
 16749  014654                     l10146:
 16750                           
 16751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16752                           ;stkvar	_i @ sp[(-18)+10]
 16753  014654  50E1               	movf	fsr1l,w,c
 16754  014656  0FF8               	addlw	-8
 16755  014658  6ED9               	movwf	fsr2l,c
 16756  01465A  50E2               	movf	fsr1h,w,c
 16757  01465C  6EDA               	movwf	fsr2h,c
 16758  01465E  0EFF               	movlw	255
 16759  014660  22DA               	addwfc	fsr2h,f,c
 16760  014662  06DE               	decf	postinc2,f,c
 16761  014664  0E00               	movlw	0
 16762  014666  5ADD               	subwfb	postdec2,f,c
 16763                           
 16764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16765  014668  0E0A               	movlw	10
 16766  01466A  6EE6               	movwf	postinc1,c
 16767  01466C  0E00               	movlw	0
 16768  01466E  6EE6               	movwf	postinc1,c
 16769  014670  0E00               	movlw	0
 16770  014672  6EE6               	movwf	postinc1,c
 16771  014674  0E00               	movlw	0
 16772  014676  6EE6               	movwf	postinc1,c
 16773  014678  0E00               	movlw	0
 16774  01467A  6EE6               	movwf	postinc1,c
 16775  01467C  0E00               	movlw	0
 16776  01467E  6EE6               	movwf	postinc1,c
 16777  014680  0E00               	movlw	0
 16778  014682  6EE6               	movwf	postinc1,c
 16779  014684  0E00               	movlw	0
 16780  014686  6EE6               	movwf	postinc1,c
 16781                           
 16782                           ;stkvar	_n @ sp[(-26)+2]
 16783  014688  50E1               	movf	fsr1l,w,c
 16784  01468A  0FE8               	addlw	-24
 16785  01468C  6ED9               	movwf	fsr2l,c
 16786  01468E  50E2               	movf	fsr1h,w,c
 16787  014690  6EDA               	movwf	fsr2h,c
 16788  014692  0EFF               	movlw	255
 16789  014694  22DA               	addwfc	fsr2h,f,c
 16790  014696  006F FF7B FFE6     	movff	postinc2,postinc1
 16791  01469C  006F FF7B FFE6     	movff	postinc2,postinc1
 16792  0146A2  006F FF7B FFE6     	movff	postinc2,postinc1
 16793  0146A8  006F FF7B FFE6     	movff	postinc2,postinc1
 16794  0146AE  006F FF7B FFE6     	movff	postinc2,postinc1
 16795  0146B4  006F FF7B FFE6     	movff	postinc2,postinc1
 16796  0146BA  006F FF7B FFE6     	movff	postinc2,postinc1
 16797  0146C0  006F FF7B FFE6     	movff	postinc2,postinc1
 16798  0146C6  EC1E  F0AF         	call	___aomod	;wreg free
 16799  0146CA  52E5               	movf	postdec1,f,c
 16800  0146CC  006F FF9C  F03C    	movff	indf1,btemp+23
 16801  0146D2  52E5               	movf	postdec1,f,c
 16802  0146D4  006F FF9C  F03B    	movff	indf1,btemp+22
 16803  0146DA  52E5               	movf	postdec1,f,c
 16804  0146DC  006F FF9C  F03A    	movff	indf1,btemp+21
 16805  0146E2  52E5               	movf	postdec1,f,c
 16806  0146E4  006F FF9C  F039    	movff	indf1,btemp+20
 16807  0146EA  52E5               	movf	postdec1,f,c
 16808  0146EC  006F FF9C  F038    	movff	indf1,btemp+19
 16809  0146F2  52E5               	movf	postdec1,f,c
 16810  0146F4  006F FF9C  F037    	movff	indf1,btemp+18
 16811  0146FA  52E5               	movf	postdec1,f,c
 16812  0146FC  006F FF9C  F036    	movff	indf1,btemp+17
 16813  014702  52E5               	movf	postdec1,f,c
 16814  014704  006F FF9C  F035    	movff	indf1,btemp+16
 16815  01470A  0EF8               	movlw	248
 16816  01470C  26E1               	addwf	fsr1l,f,c
 16817  01470E  0EFF               	movlw	255
 16818  014710  22E2               	addwfc	fsr1h,f,c
 16819  014712  0060  F0D4  F02F   	movff	btemp+16,btemp+10
 16820  014718  0060  F0D8  F030   	movff	btemp+17,btemp+11
 16821  01471E  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 16822  014724  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 16823  01472A  EC13  F0C5         	call	_abs	;wreg free
 16824  01472E  0E30               	movlw	48
 16825  014730  2625               	addwf	btemp^0,f,c
 16826                           
 16827                           ;stkvar	_i @ sp[(-18)+10]
 16828  014732  0EF8               	movlw	-8
 16829  014734  006F FF8C  F02F    	movff	plusw1,btemp+10
 16830  01473A  0EF9               	movlw	-7
 16831  01473C  006F FF8C  F030    	movff	plusw1,btemp+11
 16832  014742  0E94               	movlw	low _dbuf
 16833  014744  242F               	addwf	(btemp+10)^0,w,c
 16834  014746  6ED9               	movwf	fsr2l,c
 16835  014748  0E03               	movlw	high _dbuf
 16836  01474A  2030               	addwfc	(btemp+11)^0,w,c
 16837  01474C  6EDA               	movwf	fsr2h,c
 16838  01474E  0060  F097  FFDF   	movff	btemp,indf2
 16839                           
 16840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16841                           ;stkvar	_p @ sp[(-18)+16]
 16842  014754  50E1               	movf	fsr1l,w,c
 16843  014756  0FFE               	addlw	-2
 16844  014758  6ED9               	movwf	fsr2l,c
 16845  01475A  50E2               	movf	fsr1h,w,c
 16846  01475C  6EDA               	movwf	fsr2h,c
 16847  01475E  0EFF               	movlw	255
 16848  014760  22DA               	addwfc	fsr2h,f,c
 16849  014762  06DE               	decf	postinc2,f,c
 16850  014764  0E00               	movlw	0
 16851  014766  5ADD               	subwfb	postdec2,f,c
 16852                           
 16853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16854                           ;stkvar	_w @ sp[(-18)+14]
 16855  014768  50E1               	movf	fsr1l,w,c
 16856  01476A  0FFC               	addlw	-4
 16857  01476C  6ED9               	movwf	fsr2l,c
 16858  01476E  50E2               	movf	fsr1h,w,c
 16859  014770  6EDA               	movwf	fsr2h,c
 16860  014772  0EFF               	movlw	255
 16861  014774  22DA               	addwfc	fsr2h,f,c
 16862  014776  06DE               	decf	postinc2,f,c
 16863  014778  0E00               	movlw	0
 16864  01477A  5ADD               	subwfb	postdec2,f,c
 16865                           
 16866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16867  01477C  0E0A               	movlw	10
 16868  01477E  6EE6               	movwf	postinc1,c
 16869  014780  0E00               	movlw	0
 16870  014782  6EE6               	movwf	postinc1,c
 16871  014784  0E00               	movlw	0
 16872  014786  6EE6               	movwf	postinc1,c
 16873  014788  0E00               	movlw	0
 16874  01478A  6EE6               	movwf	postinc1,c
 16875  01478C  0E00               	movlw	0
 16876  01478E  6EE6               	movwf	postinc1,c
 16877  014790  0E00               	movlw	0
 16878  014792  6EE6               	movwf	postinc1,c
 16879  014794  0E00               	movlw	0
 16880  014796  6EE6               	movwf	postinc1,c
 16881  014798  0E00               	movlw	0
 16882  01479A  6EE6               	movwf	postinc1,c
 16883                           
 16884                           ;stkvar	_n @ sp[(-26)+2]
 16885  01479C  50E1               	movf	fsr1l,w,c
 16886  01479E  0FE8               	addlw	-24
 16887  0147A0  6ED9               	movwf	fsr2l,c
 16888  0147A2  50E2               	movf	fsr1h,w,c
 16889  0147A4  6EDA               	movwf	fsr2h,c
 16890  0147A6  0EFF               	movlw	255
 16891  0147A8  22DA               	addwfc	fsr2h,f,c
 16892  0147AA  006F FF7B FFE6     	movff	postinc2,postinc1
 16893  0147B0  006F FF7B FFE6     	movff	postinc2,postinc1
 16894  0147B6  006F FF7B FFE6     	movff	postinc2,postinc1
 16895  0147BC  006F FF7B FFE6     	movff	postinc2,postinc1
 16896  0147C2  006F FF7B FFE6     	movff	postinc2,postinc1
 16897  0147C8  006F FF7B FFE6     	movff	postinc2,postinc1
 16898  0147CE  006F FF7B FFE6     	movff	postinc2,postinc1
 16899  0147D4  006F FF7B FFE6     	movff	postinc2,postinc1
 16900  0147DA  ECA4  F0AC         	call	___aodiv	;wreg free
 16901  0147DE  52E5               	movf	postdec1,f,c
 16902  0147E0  006F FF9C  F03C    	movff	indf1,btemp+23
 16903  0147E6  52E5               	movf	postdec1,f,c
 16904  0147E8  006F FF9C  F03B    	movff	indf1,btemp+22
 16905  0147EE  52E5               	movf	postdec1,f,c
 16906  0147F0  006F FF9C  F03A    	movff	indf1,btemp+21
 16907  0147F6  52E5               	movf	postdec1,f,c
 16908  0147F8  006F FF9C  F039    	movff	indf1,btemp+20
 16909  0147FE  52E5               	movf	postdec1,f,c
 16910  014800  006F FF9C  F038    	movff	indf1,btemp+19
 16911  014806  52E5               	movf	postdec1,f,c
 16912  014808  006F FF9C  F037    	movff	indf1,btemp+18
 16913  01480E  52E5               	movf	postdec1,f,c
 16914  014810  006F FF9C  F036    	movff	indf1,btemp+17
 16915  014816  52E5               	movf	postdec1,f,c
 16916  014818  006F FF9C  F035    	movff	indf1,btemp+16
 16917  01481E  0EF8               	movlw	248
 16918  014820  26E1               	addwf	fsr1l,f,c
 16919  014822  0EFF               	movlw	255
 16920  014824  22E2               	addwfc	fsr1h,f,c
 16921                           
 16922                           ;stkvar	_n @ sp[(-18)+2]
 16923  014826  0EF0               	movlw	-16
 16924  014828  0060  F0D7  FFE3   	movff	btemp+16,plusw1
 16925  01482E  0EF1               	movlw	-15
 16926  014830  0060  F0DB  FFE3   	movff	btemp+17,plusw1
 16927  014836  0EF2               	movlw	-14
 16928  014838  0060  F0DF  FFE3   	movff	btemp+18,plusw1
 16929  01483E  0EF3               	movlw	-13
 16930  014840  0060  F0E3  FFE3   	movff	btemp+19,plusw1
 16931  014846  0EF4               	movlw	-12
 16932  014848  0060  F0E7  FFE3   	movff	btemp+20,plusw1
 16933  01484E  0EF5               	movlw	-11
 16934  014850  0060  F0EB  FFE3   	movff	btemp+21,plusw1
 16935  014856  0EF6               	movlw	-10
 16936  014858  0060  F0EF  FFE3   	movff	btemp+22,plusw1
 16937  01485E  0EF7               	movlw	-9
 16938  014860  0060  F0F3  FFE3   	movff	btemp+23,plusw1
 16939  014866                     l10156:
 16940                           
 16941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16942                           ;stkvar	_i @ sp[(-18)+10]
 16943  014866  0EF9               	movlw	-7
 16944  014868  BEE3               	btfsc	plusw1,7,c
 16945  01486A  D036               	goto	u9540
 16946  01486C  0EF9               	movlw	-7
 16947  01486E  50E3               	movf	plusw1,w,c
 16948  014870  E104               	bnz	u9500
 16949  014872  0EF8               	movlw	-8
 16950  014874  04E3               	decf	plusw1,w,c
 16951  014876  A0D8               	btfss	status,0,c
 16952  014878  D02F               	goto	u9540
 16953  01487A                     u9500:
 16954                           
 16955                           ;stkvar	_n @ sp[(-18)+2]
 16956  01487A  0EF0               	movlw	-16
 16957  01487C  50E3               	movf	plusw1,w,c
 16958  01487E  E115               	bnz	u9511
 16959  014880  0EF1               	movlw	-15
 16960  014882  50E3               	movf	plusw1,w,c
 16961  014884  E112               	bnz	u9511
 16962  014886  0EF2               	movlw	-14
 16963  014888  50E3               	movf	plusw1,w,c
 16964  01488A  E10F               	bnz	u9511
 16965  01488C  0EF3               	movlw	-13
 16966  01488E  50E3               	movf	plusw1,w,c
 16967  014890  E10C               	bnz	u9511
 16968  014892  0EF4               	movlw	-12
 16969  014894  50E3               	movf	plusw1,w,c
 16970  014896  E109               	bnz	u9511
 16971  014898  0EF5               	movlw	-11
 16972  01489A  50E3               	movf	plusw1,w,c
 16973  01489C  E106               	bnz	u9511
 16974  01489E  0EF6               	movlw	-10
 16975  0148A0  50E3               	movf	plusw1,w,c
 16976  0148A2  E103               	bnz	u9511
 16977  0148A4  0EF7               	movlw	-9
 16978  0148A6  50E3               	movf	plusw1,w,c
 16979  0148A8  A4D8               	btfss	status,2,c
 16980  0148AA                     u9511:
 16981  0148AA  D6D4               	goto	l10146
 16982                           
 16983                           ;stkvar	_p @ sp[(-18)+16]
 16984  0148AC  0EFF               	movlw	-1
 16985  0148AE  BEE3               	btfsc	plusw1,7,c
 16986  0148B0  D007               	goto	u9520
 16987  0148B2  0EFF               	movlw	-1
 16988  0148B4  50E3               	movf	plusw1,w,c
 16989  0148B6  E103               	bnz	u9521
 16990  0148B8  0EFE               	movlw	-2
 16991  0148BA  04E3               	decf	plusw1,w,c
 16992  0148BC  B0D8               	btfsc	status,0,c
 16993  0148BE                     u9521:
 16994  0148BE  D6CA               	goto	l10146
 16995  0148C0                     u9520:
 16996                           
 16997                           ;stkvar	_w @ sp[(-18)+14]
 16998  0148C0  0EFD               	movlw	-3
 16999  0148C2  BEE3               	btfsc	plusw1,7,c
 17000  0148C4  D009               	goto	u9540
 17001  0148C6  0EFD               	movlw	-3
 17002  0148C8  50E3               	movf	plusw1,w,c
 17003  0148CA  E104               	bnz	u9530
 17004  0148CC  0EFC               	movlw	-4
 17005  0148CE  04E3               	decf	plusw1,w,c
 17006  0148D0  A0D8               	btfss	status,0,c
 17007  0148D2  D002               	goto	u9540
 17008  0148D4                     u9530:
 17009  0148D4  B20E               	btfsc	_flags^0,1,c
 17010  0148D6  D6BE               	goto	l10146
 17011  0148D8                     u9540:
 17012                           
 17013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17014                           ;stkvar	_s @ sp[(-18)+12]
 17015  0148D8  0EFA               	movlw	-6
 17016  0148DA  006F FF8C  F025    	movff	plusw1,btemp
 17017  0148E0  0EFB               	movlw	-5
 17018  0148E2  50E3               	movf	plusw1,w,c
 17019  0148E4  1025               	iorwf	btemp^0,w,c
 17020  0148E6  A4D8               	btfss	status,2,c
 17021  0148E8  D002               	goto	u9560
 17022  0148EA  A40E               	btfss	_flags^0,2,c
 17023  0148EC  D033               	goto	l10180
 17024  0148EE                     u9560:
 17025                           
 17026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17027                           ;stkvar	_i @ sp[(-18)+10]
 17028  0148EE  50E1               	movf	fsr1l,w,c
 17029  0148F0  0FF8               	addlw	-8
 17030  0148F2  6ED9               	movwf	fsr2l,c
 17031  0148F4  50E2               	movf	fsr1h,w,c
 17032  0148F6  6EDA               	movwf	fsr2h,c
 17033  0148F8  0EFF               	movlw	255
 17034  0148FA  22DA               	addwfc	fsr2h,f,c
 17035  0148FC  06DE               	decf	postinc2,f,c
 17036  0148FE  0E00               	movlw	0
 17037  014900  5ADD               	subwfb	postdec2,f,c
 17038                           
 17039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17040                           ;stkvar	_s @ sp[(-18)+12]
 17041  014902  0EFA               	movlw	-6
 17042  014904  006F FF8C  F025    	movff	plusw1,btemp
 17043  01490A  0EFB               	movlw	-5
 17044  01490C  50E3               	movf	plusw1,w,c
 17045  01490E  1025               	iorwf	btemp^0,w,c
 17046  014910  A4D8               	btfss	status,2,c
 17047  014912  D002               	goto	l10176
 17048  014914  0E2B               	movlw	43
 17049  014916  D001               	goto	L17
 17050  014918                     l10176:
 17051  014918  0E2D               	movlw	45
 17052  01491A                     L17:
 17053  01491A  6E2F               	movwf	(btemp+10)^0,c
 17054  01491C  0E00               	movlw	0
 17055  01491E  6E30               	movwf	(btemp+11)^0,c
 17056                           
 17057                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17058  014920  0EEE               	movlw	-18
 17059  014922  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 17060  014928  0EEF               	movlw	-17
 17061  01492A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 17062                           
 17063                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17064                           ;stkvar	_i @ sp[(-18)+10]
 17065  014930  0EF8               	movlw	-8
 17066  014932  006F FF8C  F02F    	movff	plusw1,btemp+10
 17067  014938  0EF9               	movlw	-7
 17068  01493A  006F FF8C  F030    	movff	plusw1,btemp+11
 17069  014940  0E94               	movlw	low _dbuf
 17070  014942  242F               	addwf	(btemp+10)^0,w,c
 17071  014944  6ED9               	movwf	fsr2l,c
 17072  014946  0E03               	movlw	high _dbuf
 17073  014948  2030               	addwfc	(btemp+11)^0,w,c
 17074  01494A  6EDA               	movwf	fsr2h,c
 17075  01494C  0EEE               	movlw	-18
 17076  01494E  006F FF8F FFDF     	movff	plusw1,indf2
 17077  014954                     l10180:
 17078                           
 17079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17080                           ;stkvar	_w @ sp[(-18)+14]
 17081  014954  0EFC               	movlw	-4
 17082  014956  006F FF8F FFE6     	movff	plusw1,postinc1
 17083  01495C  006F FF8F FFE6     	movff	plusw1,postinc1
 17084                           
 17085                           ;stkvar	_i @ sp[(-20)+10]
 17086  014962  0E94               	movlw	low _dbuf
 17087  014964  6E2F               	movwf	(btemp+10)^0,c
 17088  014966  0E03               	movlw	high _dbuf
 17089  014968  6E30               	movwf	(btemp+11)^0,c
 17090  01496A  0EF6               	movlw	-10
 17091  01496C  50E3               	movf	plusw1,w,c
 17092  01496E  262F               	addwf	(btemp+10)^0,f,c
 17093  014970  0EF7               	movlw	-9
 17094  014972  50E3               	movf	plusw1,w,c
 17095  014974  2230               	addwfc	(btemp+11)^0,f,c
 17096  014976  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 17097  01497C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 17098                           
 17099                           ;stkvar	_fp @ sp[(-22)+-2]
 17100  014982  0EE8               	movlw	-24
 17101  014984  006F FF8F FFE6     	movff	plusw1,postinc1
 17102  01498A  006F FF8F FFE6     	movff	plusw1,postinc1
 17103  014990  EC32  F0B9         	call	_pad	;wreg free
 17104                           
 17105                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17106  014994  0EE4               	movlw	228
 17107  014996  26E1               	addwf	fsr1l,f,c
 17108  014998  0EFF               	movlw	255
 17109  01499A  22E2               	addwfc	fsr1h,f,c
 17110  01499C  0012               	return		;funcret
 17111  01499E                     __end_of_dtoa:
 17112                           	opt callstack 0
 17113                           
 17114 ;; *************** function _abs *****************
 17115 ;; Defined at:
 17116 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17117 ;; Parameters:    Size  Location     Type
 17118 ;;  a               2  [STACK] int 
 17119 ;; Auto vars:     Size  Location     Type
 17120 ;;		None
 17121 ;; Return value:  Size  Location     Type
 17122 ;;                  2  [STACK] int 
 17123 ;; Registers used:
 17124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17125 ;; Tracked objects:
 17126 ;;		On entry : 0/3
 17127 ;;		On exit  : 0/0
 17128 ;;		Unchanged: 0/0
 17129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17134 ;;Total ram usage:        0 bytes
 17135 ;; Hardware stack levels used:    1
 17136 ;; Hardware stack levels required when called:    7
 17137 ;; This function calls:
 17138 ;;		Nothing
 17139 ;; This function is called by:
 17140 ;;		_dtoa
 17141 ;; This function uses a reentrant model
 17142 ;;
 17143                           
 17144                           	psect	text62
 17145  018A26                     __ptext62:
 17146                           	opt callstack 0
 17147  018A26                     _abs:
 17148                           	opt callstack 16
 17149                           
 17150                           ;stkvar	_a @ sp[(0)+-2]
 17151                           
 17152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17153                           ;incstack = 0
 17154  018A26  0EFF               	movlw	-1
 17155  018A28  BEE3               	btfsc	plusw1,7,c
 17156  018A2A  D007               	goto	u4820
 17157  018A2C  0EFF               	movlw	-1
 17158  018A2E  50E3               	movf	plusw1,w,c
 17159  018A30  E112               	bnz	l6650
 17160  018A32  0EFE               	movlw	-2
 17161  018A34  04E3               	decf	plusw1,w,c
 17162  018A36  B0D8               	btfsc	status,0,c
 17163  018A38  D00E               	goto	l6650
 17164  018A3A                     u4820:
 17165                           
 17166                           ;stkvar	_a @ sp[(0)+-2]
 17167  018A3A  0EFE               	movlw	-2
 17168  018A3C  006F FF8C  F025    	movff	plusw1,btemp
 17169  018A42  1E25               	comf	btemp^0,f,c
 17170  018A44  0EFF               	movlw	-1
 17171  018A46  006F FF8C  F026    	movff	plusw1,btemp+1
 17172  018A4C  1E26               	comf	(btemp+1)^0,f,c
 17173  018A4E  2A25               	incf	btemp^0,f,c
 17174  018A50  B4D8               	btfsc	status,2,c
 17175  018A52  2A26               	incf	(btemp+1)^0,f,c
 17176  018A54  D008               	goto	l2914
 17177  018A56                     l6650:
 17178                           
 17179                           ;stkvar	_a @ sp[(0)+-2]
 17180  018A56  0EFE               	movlw	-2
 17181  018A58  006F FF8C  F025    	movff	plusw1,btemp
 17182  018A5E  0EFF               	movlw	-1
 17183  018A60  006F FF8C  F026    	movff	plusw1,btemp+1
 17184  018A66                     l2914:
 17185                           
 17186                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17187  018A66  52E5               	movf	postdec1,f,c
 17188  018A68  52E5               	movf	postdec1,f,c
 17189  018A6A  0012               	return		;funcret
 17190  018A6C                     __end_of_abs:
 17191                           	opt callstack 0
 17192                           
 17193 ;; *************** function ___aomod *****************
 17194 ;; Defined at:
 17195 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  dividend        8  [STACK] long long 
 17198 ;;  divisor         8  [STACK] long long 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;  sign            1  [STACK] unsigned char 
 17201 ;;  counter         1  [STACK] unsigned char 
 17202 ;; Return value:  Size  Location     Type
 17203 ;;                  8  [STACK] long long 
 17204 ;; Registers used:
 17205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17206 ;; Tracked objects:
 17207 ;;		On entry : 0/3
 17208 ;;		On exit  : 0/0
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17215 ;;Total ram usage:        0 bytes
 17216 ;; Hardware stack levels used:    1
 17217 ;; Hardware stack levels required when called:    7
 17218 ;; This function calls:
 17219 ;;		Nothing
 17220 ;; This function is called by:
 17221 ;;		_dtoa
 17222 ;; This function uses a reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text63
 17226  015E3C                     __ptext63:
 17227                           	opt callstack 0
 17228  015E3C                     ___aomod:
 17229                           	opt callstack 0
 17230                           
 17231                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17232  015E3C  52E6               	movf	postinc1,f,c
 17233  015E3E  52E6               	movf	postinc1,f,c
 17234                           
 17235                           ;stkvar	_sign @ sp[(-2)+0]
 17236                           
 17237                           ;incstack = 0
 17238  015E40  0EFE               	movlw	-2
 17239  015E42  6AE3               	clrf	plusw1,c
 17240                           
 17241                           ;stkvar	_dividend @ sp[(-2)+-8]
 17242  015E44  0EFD               	movlw	-3
 17243  015E46  AEE3               	btfss	plusw1,7,c
 17244  015E48  D028               	goto	l6808
 17245                           
 17246                           ;stkvar	_dividend @ sp[(-2)+-8]
 17247                           ;stkvar	_dividend @ sp[(-2)+-8]
 17248  015E4A  0EF6               	movlw	-10
 17249  015E4C  6CE3               	negf	plusw1,c
 17250  015E4E  0EF7               	movlw	-9
 17251  015E50  1EE3               	comf	plusw1,f,c
 17252  015E52  0EF8               	movlw	-8
 17253  015E54  1EE3               	comf	plusw1,f,c
 17254  015E56  0EF9               	movlw	-7
 17255  015E58  1EE3               	comf	plusw1,f,c
 17256  015E5A  0EFA               	movlw	-6
 17257  015E5C  1EE3               	comf	plusw1,f,c
 17258  015E5E  0EFB               	movlw	-5
 17259  015E60  1EE3               	comf	plusw1,f,c
 17260  015E62  0EFC               	movlw	-4
 17261  015E64  1EE3               	comf	plusw1,f,c
 17262  015E66  0EFD               	movlw	-3
 17263  015E68  1EE3               	comf	plusw1,f,c
 17264  015E6A  E314               	bnc	u5250
 17265  015E6C  0EF7               	movlw	-9
 17266  015E6E  2AE3               	incf	plusw1,f,c
 17267  015E70  E311               	bnc	u5250
 17268  015E72  0EF8               	movlw	-8
 17269  015E74  2AE3               	incf	plusw1,f,c
 17270  015E76  E30E               	bnc	u5250
 17271  015E78  0EF9               	movlw	-7
 17272  015E7A  2AE3               	incf	plusw1,f,c
 17273  015E7C  E30B               	bnc	u5250
 17274  015E7E  0EFA               	movlw	-6
 17275  015E80  2AE3               	incf	plusw1,f,c
 17276  015E82  E308               	bnc	u5250
 17277  015E84  0EFB               	movlw	-5
 17278  015E86  2AE3               	incf	plusw1,f,c
 17279  015E88  E305               	bnc	u5250
 17280  015E8A  0EFC               	movlw	-4
 17281  015E8C  2AE3               	incf	plusw1,f,c
 17282  015E8E  E302               	bnc	u5250
 17283  015E90  0EFD               	movlw	-3
 17284  015E92  2AE3               	incf	plusw1,f,c
 17285  015E94                     u5250:
 17286                           
 17287                           ;stkvar	_sign @ sp[(-2)+0]
 17288  015E94  0EFE               	movlw	-2
 17289  015E96  6AE3               	clrf	plusw1,c
 17290  015E98  2AE3               	incf	plusw1,f,c
 17291  015E9A                     l6808:
 17292                           
 17293                           ;stkvar	_divisor @ sp[(-2)+-16]
 17294  015E9A  0EF5               	movlw	-11
 17295  015E9C  AEE3               	btfss	plusw1,7,c
 17296  015E9E  D025               	goto	u5270
 17297                           
 17298                           ;stkvar	_divisor @ sp[(-2)+-16]
 17299                           ;stkvar	_divisor @ sp[(-2)+-16]
 17300  015EA0  0EEE               	movlw	-18
 17301  015EA2  6CE3               	negf	plusw1,c
 17302  015EA4  0EEF               	movlw	-17
 17303  015EA6  1EE3               	comf	plusw1,f,c
 17304  015EA8  0EF0               	movlw	-16
 17305  015EAA  1EE3               	comf	plusw1,f,c
 17306  015EAC  0EF1               	movlw	-15
 17307  015EAE  1EE3               	comf	plusw1,f,c
 17308  015EB0  0EF2               	movlw	-14
 17309  015EB2  1EE3               	comf	plusw1,f,c
 17310  015EB4  0EF3               	movlw	-13
 17311  015EB6  1EE3               	comf	plusw1,f,c
 17312  015EB8  0EF4               	movlw	-12
 17313  015EBA  1EE3               	comf	plusw1,f,c
 17314  015EBC  0EF5               	movlw	-11
 17315  015EBE  1EE3               	comf	plusw1,f,c
 17316  015EC0  E314               	bnc	u5270
 17317  015EC2  0EEF               	movlw	-17
 17318  015EC4  2AE3               	incf	plusw1,f,c
 17319  015EC6  E311               	bnc	u5270
 17320  015EC8  0EF0               	movlw	-16
 17321  015ECA  2AE3               	incf	plusw1,f,c
 17322  015ECC  E30E               	bnc	u5270
 17323  015ECE  0EF1               	movlw	-15
 17324  015ED0  2AE3               	incf	plusw1,f,c
 17325  015ED2  E30B               	bnc	u5270
 17326  015ED4  0EF2               	movlw	-14
 17327  015ED6  2AE3               	incf	plusw1,f,c
 17328  015ED8  E308               	bnc	u5270
 17329  015EDA  0EF3               	movlw	-13
 17330  015EDC  2AE3               	incf	plusw1,f,c
 17331  015EDE  E305               	bnc	u5270
 17332  015EE0  0EF4               	movlw	-12
 17333  015EE2  2AE3               	incf	plusw1,f,c
 17334  015EE4  E302               	bnc	u5270
 17335  015EE6  0EF5               	movlw	-11
 17336  015EE8  2AE3               	incf	plusw1,f,c
 17337  015EEA                     u5270:
 17338                           
 17339                           ;stkvar	_divisor @ sp[(-2)+-16]
 17340  015EEA  0EEE               	movlw	-18
 17341  015EEC  50E3               	movf	plusw1,w,c
 17342  015EEE  E116               	bnz	u5280
 17343  015EF0  0EEF               	movlw	-17
 17344  015EF2  50E3               	movf	plusw1,w,c
 17345  015EF4  E113               	bnz	u5280
 17346  015EF6  0EF0               	movlw	-16
 17347  015EF8  50E3               	movf	plusw1,w,c
 17348  015EFA  E110               	bnz	u5280
 17349  015EFC  0EF1               	movlw	-15
 17350  015EFE  50E3               	movf	plusw1,w,c
 17351  015F00  E10D               	bnz	u5280
 17352  015F02  0EF2               	movlw	-14
 17353  015F04  50E3               	movf	plusw1,w,c
 17354  015F06  E10A               	bnz	u5280
 17355  015F08  0EF3               	movlw	-13
 17356  015F0A  50E3               	movf	plusw1,w,c
 17357  015F0C  E107               	bnz	u5280
 17358  015F0E  0EF4               	movlw	-12
 17359  015F10  50E3               	movf	plusw1,w,c
 17360  015F12  E104               	bnz	u5280
 17361  015F14  0EF5               	movlw	-11
 17362  015F16  50E3               	movf	plusw1,w,c
 17363  015F18  B4D8               	btfsc	status,2,c
 17364  015F1A  D075               	goto	u5310
 17365  015F1C                     u5280:
 17366                           
 17367                           ;stkvar	_counter @ sp[(-2)+1]
 17368  015F1C  0EFF               	movlw	-1
 17369  015F1E  6AE3               	clrf	plusw1,c
 17370  015F20  D012               	goto	L18
 17371  015F22                     l6816:
 17372                           
 17373                           ;stkvar	_divisor @ sp[(-2)+-16]
 17374  015F22  90D8               	bcf	status,0,c
 17375  015F24  0EEE               	movlw	-18
 17376  015F26  36E3               	rlcf	plusw1,f,c
 17377  015F28  0EEF               	movlw	-17
 17378  015F2A  36E3               	rlcf	plusw1,f,c
 17379  015F2C  0EF0               	movlw	-16
 17380  015F2E  36E3               	rlcf	plusw1,f,c
 17381  015F30  0EF1               	movlw	-15
 17382  015F32  36E3               	rlcf	plusw1,f,c
 17383  015F34  0EF2               	movlw	-14
 17384  015F36  36E3               	rlcf	plusw1,f,c
 17385  015F38  0EF3               	movlw	-13
 17386  015F3A  36E3               	rlcf	plusw1,f,c
 17387  015F3C  0EF4               	movlw	-12
 17388  015F3E  36E3               	rlcf	plusw1,f,c
 17389  015F40  0EF5               	movlw	-11
 17390  015F42  36E3               	rlcf	plusw1,f,c
 17391                           
 17392                           ;stkvar	_counter @ sp[(-2)+1]
 17393  015F44  0EFF               	movlw	-1
 17394  015F46                     L18:
 17395  015F46  2AE3               	incf	plusw1,f,c
 17396                           
 17397                           ;stkvar	_divisor @ sp[(-2)+-16]
 17398  015F48  0EF5               	movlw	-11
 17399  015F4A  AEE3               	btfss	plusw1,7,c
 17400  015F4C  D7EA               	goto	l6816
 17401  015F4E                     u5290:
 17402                           
 17403                           ;stkvar	_divisor @ sp[(-2)+-16]
 17404                           ;stkvar	_dividend @ sp[(-2)+-8]
 17405  015F4E  50E1               	movf	fsr1l,w,c
 17406  015F50  0FF6               	addlw	-10
 17407  015F52  6ED9               	movwf	fsr2l,c
 17408  015F54  50E2               	movf	fsr1h,w,c
 17409  015F56  6EDA               	movwf	fsr2h,c
 17410  015F58  0EFF               	movlw	255
 17411  015F5A  22DA               	addwfc	fsr2h,f,c
 17412  015F5C  0EEE               	movlw	-18
 17413  015F5E  50E3               	movf	plusw1,w,c
 17414  015F60  5CDE               	subwf	postinc2,w,c
 17415  015F62  0EEF               	movlw	-17
 17416  015F64  50E3               	movf	plusw1,w,c
 17417  015F66  58DE               	subwfb	postinc2,w,c
 17418  015F68  0EF0               	movlw	-16
 17419  015F6A  50E3               	movf	plusw1,w,c
 17420  015F6C  58DE               	subwfb	postinc2,w,c
 17421  015F6E  0EF1               	movlw	-15
 17422  015F70  50E3               	movf	plusw1,w,c
 17423  015F72  58DE               	subwfb	postinc2,w,c
 17424  015F74  0EF2               	movlw	-14
 17425  015F76  50E3               	movf	plusw1,w,c
 17426  015F78  58DE               	subwfb	postinc2,w,c
 17427  015F7A  0EF3               	movlw	-13
 17428  015F7C  50E3               	movf	plusw1,w,c
 17429  015F7E  58DE               	subwfb	postinc2,w,c
 17430  015F80  0EF4               	movlw	-12
 17431  015F82  50E3               	movf	plusw1,w,c
 17432  015F84  58DE               	subwfb	postinc2,w,c
 17433  015F86  0EF5               	movlw	-11
 17434  015F88  50E3               	movf	plusw1,w,c
 17435  015F8A  58DE               	subwfb	postinc2,w,c
 17436  015F8C  A0D8               	btfss	status,0,c
 17437  015F8E  D01F               	goto	l6824
 17438                           
 17439                           ;stkvar	_divisor @ sp[(-2)+-16]
 17440                           ;stkvar	_dividend @ sp[(-2)+-8]
 17441  015F90  50E1               	movf	fsr1l,w,c
 17442  015F92  0FF6               	addlw	-10
 17443  015F94  6ED9               	movwf	fsr2l,c
 17444  015F96  50E2               	movf	fsr1h,w,c
 17445  015F98  6EDA               	movwf	fsr2h,c
 17446  015F9A  0EFF               	movlw	255
 17447  015F9C  22DA               	addwfc	fsr2h,f,c
 17448  015F9E  0EEE               	movlw	-18
 17449  015FA0  50E3               	movf	plusw1,w,c
 17450  015FA2  5EDE               	subwf	postinc2,f,c
 17451  015FA4  0EEF               	movlw	-17
 17452  015FA6  50E3               	movf	plusw1,w,c
 17453  015FA8  5ADE               	subwfb	postinc2,f,c
 17454  015FAA  0EF0               	movlw	-16
 17455  015FAC  50E3               	movf	plusw1,w,c
 17456  015FAE  5ADE               	subwfb	postinc2,f,c
 17457  015FB0  0EF1               	movlw	-15
 17458  015FB2  50E3               	movf	plusw1,w,c
 17459  015FB4  5ADE               	subwfb	postinc2,f,c
 17460  015FB6  0EF2               	movlw	-14
 17461  015FB8  50E3               	movf	plusw1,w,c
 17462  015FBA  5ADE               	subwfb	postinc2,f,c
 17463  015FBC  0EF3               	movlw	-13
 17464  015FBE  50E3               	movf	plusw1,w,c
 17465  015FC0  5ADE               	subwfb	postinc2,f,c
 17466  015FC2  0EF4               	movlw	-12
 17467  015FC4  50E3               	movf	plusw1,w,c
 17468  015FC6  5ADE               	subwfb	postinc2,f,c
 17469  015FC8  0EF5               	movlw	-11
 17470  015FCA  50E3               	movf	plusw1,w,c
 17471  015FCC  5ADE               	subwfb	postinc2,f,c
 17472  015FCE                     l6824:
 17473                           
 17474                           ;stkvar	_divisor @ sp[(-2)+-16]
 17475  015FCE  90D8               	bcf	status,0,c
 17476  015FD0  0EF5               	movlw	-11
 17477  015FD2  32E3               	rrcf	plusw1,f,c
 17478  015FD4  0EF4               	movlw	-12
 17479  015FD6  32E3               	rrcf	plusw1,f,c
 17480  015FD8  0EF3               	movlw	-13
 17481  015FDA  32E3               	rrcf	plusw1,f,c
 17482  015FDC  0EF2               	movlw	-14
 17483  015FDE  32E3               	rrcf	plusw1,f,c
 17484  015FE0  0EF1               	movlw	-15
 17485  015FE2  32E3               	rrcf	plusw1,f,c
 17486  015FE4  0EF0               	movlw	-16
 17487  015FE6  32E3               	rrcf	plusw1,f,c
 17488  015FE8  0EEF               	movlw	-17
 17489  015FEA  32E3               	rrcf	plusw1,f,c
 17490  015FEC  0EEE               	movlw	-18
 17491  015FEE  32E3               	rrcf	plusw1,f,c
 17492                           
 17493                           ;stkvar	_counter @ sp[(-2)+1]
 17494  015FF0  0EFF               	movlw	-1
 17495  015FF2  50E3               	movf	plusw1,w,c
 17496  015FF4  6E25               	movwf	btemp^0,c
 17497  015FF6  0E01               	movlw	1
 17498  015FF8  5E25               	subwf	btemp^0,f,c
 17499  015FFA  0EFF               	movlw	-1
 17500  015FFC  0060  F097  FFE3   	movff	btemp,plusw1
 17501  016002  A4D8               	btfss	status,2,c
 17502  016004  D7A4               	goto	u5290
 17503  016006                     u5310:
 17504                           
 17505                           ;stkvar	_sign @ sp[(-2)+0]
 17506  016006  0EFE               	movlw	-2
 17507  016008  50E3               	movf	plusw1,w,c
 17508  01600A  B4D8               	btfsc	status,2,c
 17509  01600C  D025               	goto	u5330
 17510                           
 17511                           ;stkvar	_dividend @ sp[(-2)+-8]
 17512                           ;stkvar	_dividend @ sp[(-2)+-8]
 17513  01600E  0EF6               	movlw	-10
 17514  016010  6CE3               	negf	plusw1,c
 17515  016012  0EF7               	movlw	-9
 17516  016014  1EE3               	comf	plusw1,f,c
 17517  016016  0EF8               	movlw	-8
 17518  016018  1EE3               	comf	plusw1,f,c
 17519  01601A  0EF9               	movlw	-7
 17520  01601C  1EE3               	comf	plusw1,f,c
 17521  01601E  0EFA               	movlw	-6
 17522  016020  1EE3               	comf	plusw1,f,c
 17523  016022  0EFB               	movlw	-5
 17524  016024  1EE3               	comf	plusw1,f,c
 17525  016026  0EFC               	movlw	-4
 17526  016028  1EE3               	comf	plusw1,f,c
 17527  01602A  0EFD               	movlw	-3
 17528  01602C  1EE3               	comf	plusw1,f,c
 17529  01602E  E314               	bnc	u5330
 17530  016030  0EF7               	movlw	-9
 17531  016032  2AE3               	incf	plusw1,f,c
 17532  016034  E311               	bnc	u5330
 17533  016036  0EF8               	movlw	-8
 17534  016038  2AE3               	incf	plusw1,f,c
 17535  01603A  E30E               	bnc	u5330
 17536  01603C  0EF9               	movlw	-7
 17537  01603E  2AE3               	incf	plusw1,f,c
 17538  016040  E30B               	bnc	u5330
 17539  016042  0EFA               	movlw	-6
 17540  016044  2AE3               	incf	plusw1,f,c
 17541  016046  E308               	bnc	u5330
 17542  016048  0EFB               	movlw	-5
 17543  01604A  2AE3               	incf	plusw1,f,c
 17544  01604C  E305               	bnc	u5330
 17545  01604E  0EFC               	movlw	-4
 17546  016050  2AE3               	incf	plusw1,f,c
 17547  016052  E302               	bnc	u5330
 17548  016054  0EFD               	movlw	-3
 17549  016056  2AE3               	incf	plusw1,f,c
 17550  016058                     u5330:
 17551                           
 17552                           ;stkvar	_dividend @ sp[(-2)+-8]
 17553  016058  0EF6               	movlw	246
 17554  01605A  24E1               	addwf	fsr1l,w,c
 17555  01605C  6ED9               	movwf	fsr2l,c
 17556  01605E  0EFF               	movlw	255
 17557  016060  20E2               	addwfc	fsr1h,w,c
 17558  016062  6EDA               	movwf	fsr2h,c
 17559                           
 17560                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17561  016064  0E08               	movlw	8
 17562  016066  6E25               	movwf	btemp^0,c
 17563  016068  0EF6               	movlw	-10
 17564  01606A                     us534999:
 17565  01606A  006F FF7B FFE3     	movff	postinc2,plusw1
 17566  016070  28E8               	incf	wreg,w,c
 17567  016072  2E25               	decfsz	btemp^0,f,c
 17568  016074  D7FA               	bra	us534999
 17569                           
 17570                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17571  016076  52E5               	movf	postdec1,f,c
 17572  016078  52E5               	movf	postdec1,f,c
 17573  01607A  0012               	return		;funcret
 17574  01607C                     __end_of___aomod:
 17575                           	opt callstack 0
 17576                           
 17577 ;; *************** function ___aodiv *****************
 17578 ;; Defined at:
 17579 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17580 ;; Parameters:    Size  Location     Type
 17581 ;;  dividend        8  [STACK] long long 
 17582 ;;  divisor         8  [STACK] long long 
 17583 ;; Auto vars:     Size  Location     Type
 17584 ;;  quotient        8  [STACK] long long 
 17585 ;;  sign            1  [STACK] unsigned char 
 17586 ;;  counter         1  [STACK] unsigned char 
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  8  [STACK] long long 
 17589 ;; Registers used:
 17590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17591 ;; Tracked objects:
 17592 ;;		On entry : 0/3
 17593 ;;		On exit  : 0/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17600 ;;Total ram usage:        0 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; Hardware stack levels required when called:    7
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		_dtoa
 17607 ;; This function uses a reentrant model
 17608 ;;
 17609                           
 17610                           	psect	text64
 17611  015948                     __ptext64:
 17612                           	opt callstack 0
 17613  015948                     ___aodiv:
 17614                           	opt callstack 0
 17615                           
 17616                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17617  015948  0E0A               	movlw	10
 17618  01594A  26E1               	addwf	fsr1l,f,c
 17619  01594C  0E00               	movlw	0
 17620  01594E  22E2               	addwfc	fsr1h,f,c
 17621                           
 17622                           ;stkvar	_sign @ sp[(-10)+8]
 17623                           
 17624                           ;incstack = 0
 17625  015950  0EFE               	movlw	-2
 17626  015952  6AE3               	clrf	plusw1,c
 17627                           
 17628                           ;stkvar	_divisor @ sp[(-10)+-16]
 17629  015954  0EED               	movlw	-19
 17630  015956  AEE3               	btfss	plusw1,7,c
 17631  015958  D028               	goto	l6764
 17632                           
 17633                           ;stkvar	_divisor @ sp[(-10)+-16]
 17634                           ;stkvar	_divisor @ sp[(-10)+-16]
 17635  01595A  0EE6               	movlw	-26
 17636  01595C  6CE3               	negf	plusw1,c
 17637  01595E  0EE7               	movlw	-25
 17638  015960  1EE3               	comf	plusw1,f,c
 17639  015962  0EE8               	movlw	-24
 17640  015964  1EE3               	comf	plusw1,f,c
 17641  015966  0EE9               	movlw	-23
 17642  015968  1EE3               	comf	plusw1,f,c
 17643  01596A  0EEA               	movlw	-22
 17644  01596C  1EE3               	comf	plusw1,f,c
 17645  01596E  0EEB               	movlw	-21
 17646  015970  1EE3               	comf	plusw1,f,c
 17647  015972  0EEC               	movlw	-20
 17648  015974  1EE3               	comf	plusw1,f,c
 17649  015976  0EED               	movlw	-19
 17650  015978  1EE3               	comf	plusw1,f,c
 17651  01597A  E314               	bnc	u5130
 17652  01597C  0EE7               	movlw	-25
 17653  01597E  2AE3               	incf	plusw1,f,c
 17654  015980  E311               	bnc	u5130
 17655  015982  0EE8               	movlw	-24
 17656  015984  2AE3               	incf	plusw1,f,c
 17657  015986  E30E               	bnc	u5130
 17658  015988  0EE9               	movlw	-23
 17659  01598A  2AE3               	incf	plusw1,f,c
 17660  01598C  E30B               	bnc	u5130
 17661  01598E  0EEA               	movlw	-22
 17662  015990  2AE3               	incf	plusw1,f,c
 17663  015992  E308               	bnc	u5130
 17664  015994  0EEB               	movlw	-21
 17665  015996  2AE3               	incf	plusw1,f,c
 17666  015998  E305               	bnc	u5130
 17667  01599A  0EEC               	movlw	-20
 17668  01599C  2AE3               	incf	plusw1,f,c
 17669  01599E  E302               	bnc	u5130
 17670  0159A0  0EED               	movlw	-19
 17671  0159A2  2AE3               	incf	plusw1,f,c
 17672  0159A4                     u5130:
 17673                           
 17674                           ;stkvar	_sign @ sp[(-10)+8]
 17675  0159A4  0EFE               	movlw	-2
 17676  0159A6  6AE3               	clrf	plusw1,c
 17677  0159A8  2AE3               	incf	plusw1,f,c
 17678  0159AA                     l6764:
 17679                           
 17680                           ;stkvar	_dividend @ sp[(-10)+-8]
 17681  0159AA  0EF5               	movlw	-11
 17682  0159AC  AEE3               	btfss	plusw1,7,c
 17683  0159AE  D027               	goto	l6770
 17684                           
 17685                           ;stkvar	_dividend @ sp[(-10)+-8]
 17686                           ;stkvar	_dividend @ sp[(-10)+-8]
 17687  0159B0  0EEE               	movlw	-18
 17688  0159B2  6CE3               	negf	plusw1,c
 17689  0159B4  0EEF               	movlw	-17
 17690  0159B6  1EE3               	comf	plusw1,f,c
 17691  0159B8  0EF0               	movlw	-16
 17692  0159BA  1EE3               	comf	plusw1,f,c
 17693  0159BC  0EF1               	movlw	-15
 17694  0159BE  1EE3               	comf	plusw1,f,c
 17695  0159C0  0EF2               	movlw	-14
 17696  0159C2  1EE3               	comf	plusw1,f,c
 17697  0159C4  0EF3               	movlw	-13
 17698  0159C6  1EE3               	comf	plusw1,f,c
 17699  0159C8  0EF4               	movlw	-12
 17700  0159CA  1EE3               	comf	plusw1,f,c
 17701  0159CC  0EF5               	movlw	-11
 17702  0159CE  1EE3               	comf	plusw1,f,c
 17703  0159D0  E314               	bnc	u5150
 17704  0159D2  0EEF               	movlw	-17
 17705  0159D4  2AE3               	incf	plusw1,f,c
 17706  0159D6  E311               	bnc	u5150
 17707  0159D8  0EF0               	movlw	-16
 17708  0159DA  2AE3               	incf	plusw1,f,c
 17709  0159DC  E30E               	bnc	u5150
 17710  0159DE  0EF1               	movlw	-15
 17711  0159E0  2AE3               	incf	plusw1,f,c
 17712  0159E2  E30B               	bnc	u5150
 17713  0159E4  0EF2               	movlw	-14
 17714  0159E6  2AE3               	incf	plusw1,f,c
 17715  0159E8  E308               	bnc	u5150
 17716  0159EA  0EF3               	movlw	-13
 17717  0159EC  2AE3               	incf	plusw1,f,c
 17718  0159EE  E305               	bnc	u5150
 17719  0159F0  0EF4               	movlw	-12
 17720  0159F2  2AE3               	incf	plusw1,f,c
 17721  0159F4  E302               	bnc	u5150
 17722  0159F6  0EF5               	movlw	-11
 17723  0159F8  2AE3               	incf	plusw1,f,c
 17724  0159FA                     u5150:
 17725                           
 17726                           ;stkvar	_sign @ sp[(-10)+8]
 17727  0159FA  0EFE               	movlw	-2
 17728  0159FC  70E3               	btg	plusw1,0,c
 17729  0159FE                     l6770:
 17730                           
 17731                           ;stkvar	_quotient @ sp[(-10)+0]
 17732  0159FE  0E07               	movlw	7
 17733  015A00  6E25               	movwf	btemp^0,c
 17734  015A02  0EF6               	movlw	-10
 17735  015A04                     u5161:
 17736  015A04  6AE3               	clrf	plusw1,c
 17737  015A06  2AE8               	incf	wreg,f,c
 17738  015A08  0625               	decf	btemp^0,f,c
 17739  015A0A  E2FC               	bc	u5161
 17740                           
 17741                           ;stkvar	_divisor @ sp[(-10)+-16]
 17742  015A0C  0EE6               	movlw	-26
 17743  015A0E  50E3               	movf	plusw1,w,c
 17744  015A10  E116               	bnz	u5170
 17745  015A12  0EE7               	movlw	-25
 17746  015A14  50E3               	movf	plusw1,w,c
 17747  015A16  E113               	bnz	u5170
 17748  015A18  0EE8               	movlw	-24
 17749  015A1A  50E3               	movf	plusw1,w,c
 17750  015A1C  E110               	bnz	u5170
 17751  015A1E  0EE9               	movlw	-23
 17752  015A20  50E3               	movf	plusw1,w,c
 17753  015A22  E10D               	bnz	u5170
 17754  015A24  0EEA               	movlw	-22
 17755  015A26  50E3               	movf	plusw1,w,c
 17756  015A28  E10A               	bnz	u5170
 17757  015A2A  0EEB               	movlw	-21
 17758  015A2C  50E3               	movf	plusw1,w,c
 17759  015A2E  E107               	bnz	u5170
 17760  015A30  0EEC               	movlw	-20
 17761  015A32  50E3               	movf	plusw1,w,c
 17762  015A34  E104               	bnz	u5170
 17763  015A36  0EED               	movlw	-19
 17764  015A38  50E3               	movf	plusw1,w,c
 17765  015A3A  B4D8               	btfsc	status,2,c
 17766  015A3C  D088               	goto	u5200
 17767  015A3E                     u5170:
 17768                           
 17769                           ;stkvar	_counter @ sp[(-10)+9]
 17770  015A3E  0EFF               	movlw	-1
 17771  015A40  6AE3               	clrf	plusw1,c
 17772  015A42  D012               	goto	L19
 17773  015A44                     l6776:
 17774                           
 17775                           ;stkvar	_divisor @ sp[(-10)+-16]
 17776  015A44  90D8               	bcf	status,0,c
 17777  015A46  0EE6               	movlw	-26
 17778  015A48  36E3               	rlcf	plusw1,f,c
 17779  015A4A  0EE7               	movlw	-25
 17780  015A4C  36E3               	rlcf	plusw1,f,c
 17781  015A4E  0EE8               	movlw	-24
 17782  015A50  36E3               	rlcf	plusw1,f,c
 17783  015A52  0EE9               	movlw	-23
 17784  015A54  36E3               	rlcf	plusw1,f,c
 17785  015A56  0EEA               	movlw	-22
 17786  015A58  36E3               	rlcf	plusw1,f,c
 17787  015A5A  0EEB               	movlw	-21
 17788  015A5C  36E3               	rlcf	plusw1,f,c
 17789  015A5E  0EEC               	movlw	-20
 17790  015A60  36E3               	rlcf	plusw1,f,c
 17791  015A62  0EED               	movlw	-19
 17792  015A64  36E3               	rlcf	plusw1,f,c
 17793                           
 17794                           ;stkvar	_counter @ sp[(-10)+9]
 17795  015A66  0EFF               	movlw	-1
 17796  015A68                     L19:
 17797  015A68  2AE3               	incf	plusw1,f,c
 17798                           
 17799                           ;stkvar	_divisor @ sp[(-10)+-16]
 17800  015A6A  0EED               	movlw	-19
 17801  015A6C  AEE3               	btfss	plusw1,7,c
 17802  015A6E  D7EA               	goto	l6776
 17803  015A70                     u5180:
 17804                           
 17805                           ;stkvar	_quotient @ sp[(-10)+0]
 17806  015A70  90D8               	bcf	status,0,c
 17807  015A72  0EF6               	movlw	-10
 17808  015A74  36E3               	rlcf	plusw1,f,c
 17809  015A76  0EF7               	movlw	-9
 17810  015A78  36E3               	rlcf	plusw1,f,c
 17811  015A7A  0EF8               	movlw	-8
 17812  015A7C  36E3               	rlcf	plusw1,f,c
 17813  015A7E  0EF9               	movlw	-7
 17814  015A80  36E3               	rlcf	plusw1,f,c
 17815  015A82  0EFA               	movlw	-6
 17816  015A84  36E3               	rlcf	plusw1,f,c
 17817  015A86  0EFB               	movlw	-5
 17818  015A88  36E3               	rlcf	plusw1,f,c
 17819  015A8A  0EFC               	movlw	-4
 17820  015A8C  36E3               	rlcf	plusw1,f,c
 17821  015A8E  0EFD               	movlw	-3
 17822  015A90  36E3               	rlcf	plusw1,f,c
 17823                           
 17824                           ;stkvar	_divisor @ sp[(-10)+-16]
 17825                           ;stkvar	_dividend @ sp[(-10)+-8]
 17826  015A92  50E1               	movf	fsr1l,w,c
 17827  015A94  0FEE               	addlw	-18
 17828  015A96  6ED9               	movwf	fsr2l,c
 17829  015A98  50E2               	movf	fsr1h,w,c
 17830  015A9A  6EDA               	movwf	fsr2h,c
 17831  015A9C  0EFF               	movlw	255
 17832  015A9E  22DA               	addwfc	fsr2h,f,c
 17833  015AA0  0EE6               	movlw	-26
 17834  015AA2  50E3               	movf	plusw1,w,c
 17835  015AA4  5CDE               	subwf	postinc2,w,c
 17836  015AA6  0EE7               	movlw	-25
 17837  015AA8  50E3               	movf	plusw1,w,c
 17838  015AAA  58DE               	subwfb	postinc2,w,c
 17839  015AAC  0EE8               	movlw	-24
 17840  015AAE  50E3               	movf	plusw1,w,c
 17841  015AB0  58DE               	subwfb	postinc2,w,c
 17842  015AB2  0EE9               	movlw	-23
 17843  015AB4  50E3               	movf	plusw1,w,c
 17844  015AB6  58DE               	subwfb	postinc2,w,c
 17845  015AB8  0EEA               	movlw	-22
 17846  015ABA  50E3               	movf	plusw1,w,c
 17847  015ABC  58DE               	subwfb	postinc2,w,c
 17848  015ABE  0EEB               	movlw	-21
 17849  015AC0  50E3               	movf	plusw1,w,c
 17850  015AC2  58DE               	subwfb	postinc2,w,c
 17851  015AC4  0EEC               	movlw	-20
 17852  015AC6  50E3               	movf	plusw1,w,c
 17853  015AC8  58DE               	subwfb	postinc2,w,c
 17854  015ACA  0EED               	movlw	-19
 17855  015ACC  50E3               	movf	plusw1,w,c
 17856  015ACE  58DE               	subwfb	postinc2,w,c
 17857  015AD0  A0D8               	btfss	status,0,c
 17858  015AD2  D021               	goto	l6788
 17859                           
 17860                           ;stkvar	_divisor @ sp[(-10)+-16]
 17861                           ;stkvar	_dividend @ sp[(-10)+-8]
 17862  015AD4  50E1               	movf	fsr1l,w,c
 17863  015AD6  0FEE               	addlw	-18
 17864  015AD8  6ED9               	movwf	fsr2l,c
 17865  015ADA  50E2               	movf	fsr1h,w,c
 17866  015ADC  6EDA               	movwf	fsr2h,c
 17867  015ADE  0EFF               	movlw	255
 17868  015AE0  22DA               	addwfc	fsr2h,f,c
 17869  015AE2  0EE6               	movlw	-26
 17870  015AE4  50E3               	movf	plusw1,w,c
 17871  015AE6  5EDE               	subwf	postinc2,f,c
 17872  015AE8  0EE7               	movlw	-25
 17873  015AEA  50E3               	movf	plusw1,w,c
 17874  015AEC  5ADE               	subwfb	postinc2,f,c
 17875  015AEE  0EE8               	movlw	-24
 17876  015AF0  50E3               	movf	plusw1,w,c
 17877  015AF2  5ADE               	subwfb	postinc2,f,c
 17878  015AF4  0EE9               	movlw	-23
 17879  015AF6  50E3               	movf	plusw1,w,c
 17880  015AF8  5ADE               	subwfb	postinc2,f,c
 17881  015AFA  0EEA               	movlw	-22
 17882  015AFC  50E3               	movf	plusw1,w,c
 17883  015AFE  5ADE               	subwfb	postinc2,f,c
 17884  015B00  0EEB               	movlw	-21
 17885  015B02  50E3               	movf	plusw1,w,c
 17886  015B04  5ADE               	subwfb	postinc2,f,c
 17887  015B06  0EEC               	movlw	-20
 17888  015B08  50E3               	movf	plusw1,w,c
 17889  015B0A  5ADE               	subwfb	postinc2,f,c
 17890  015B0C  0EED               	movlw	-19
 17891  015B0E  50E3               	movf	plusw1,w,c
 17892  015B10  5ADE               	subwfb	postinc2,f,c
 17893                           
 17894                           ;stkvar	_quotient @ sp[(-10)+0]
 17895  015B12  0EF6               	movlw	-10
 17896  015B14  80E3               	bsf	plusw1,0,c
 17897  015B16                     l6788:
 17898                           
 17899                           ;stkvar	_divisor @ sp[(-10)+-16]
 17900  015B16  90D8               	bcf	status,0,c
 17901  015B18  0EED               	movlw	-19
 17902  015B1A  32E3               	rrcf	plusw1,f,c
 17903  015B1C  0EEC               	movlw	-20
 17904  015B1E  32E3               	rrcf	plusw1,f,c
 17905  015B20  0EEB               	movlw	-21
 17906  015B22  32E3               	rrcf	plusw1,f,c
 17907  015B24  0EEA               	movlw	-22
 17908  015B26  32E3               	rrcf	plusw1,f,c
 17909  015B28  0EE9               	movlw	-23
 17910  015B2A  32E3               	rrcf	plusw1,f,c
 17911  015B2C  0EE8               	movlw	-24
 17912  015B2E  32E3               	rrcf	plusw1,f,c
 17913  015B30  0EE7               	movlw	-25
 17914  015B32  32E3               	rrcf	plusw1,f,c
 17915  015B34  0EE6               	movlw	-26
 17916  015B36  32E3               	rrcf	plusw1,f,c
 17917                           
 17918                           ;stkvar	_counter @ sp[(-10)+9]
 17919  015B38  0EFF               	movlw	-1
 17920  015B3A  50E3               	movf	plusw1,w,c
 17921  015B3C  6E25               	movwf	btemp^0,c
 17922  015B3E  0E01               	movlw	1
 17923  015B40  5E25               	subwf	btemp^0,f,c
 17924  015B42  0EFF               	movlw	-1
 17925  015B44  0060  F097  FFE3   	movff	btemp,plusw1
 17926  015B4A  A4D8               	btfss	status,2,c
 17927  015B4C  D791               	goto	u5180
 17928  015B4E                     u5200:
 17929                           
 17930                           ;stkvar	_sign @ sp[(-10)+8]
 17931  015B4E  0EFE               	movlw	-2
 17932  015B50  50E3               	movf	plusw1,w,c
 17933  015B52  B4D8               	btfsc	status,2,c
 17934  015B54  D025               	goto	u5220
 17935                           
 17936                           ;stkvar	_quotient @ sp[(-10)+0]
 17937                           ;stkvar	_quotient @ sp[(-10)+0]
 17938  015B56  0EF6               	movlw	-10
 17939  015B58  6CE3               	negf	plusw1,c
 17940  015B5A  0EF7               	movlw	-9
 17941  015B5C  1EE3               	comf	plusw1,f,c
 17942  015B5E  0EF8               	movlw	-8
 17943  015B60  1EE3               	comf	plusw1,f,c
 17944  015B62  0EF9               	movlw	-7
 17945  015B64  1EE3               	comf	plusw1,f,c
 17946  015B66  0EFA               	movlw	-6
 17947  015B68  1EE3               	comf	plusw1,f,c
 17948  015B6A  0EFB               	movlw	-5
 17949  015B6C  1EE3               	comf	plusw1,f,c
 17950  015B6E  0EFC               	movlw	-4
 17951  015B70  1EE3               	comf	plusw1,f,c
 17952  015B72  0EFD               	movlw	-3
 17953  015B74  1EE3               	comf	plusw1,f,c
 17954  015B76  E314               	bnc	u5220
 17955  015B78  0EF7               	movlw	-9
 17956  015B7A  2AE3               	incf	plusw1,f,c
 17957  015B7C  E311               	bnc	u5220
 17958  015B7E  0EF8               	movlw	-8
 17959  015B80  2AE3               	incf	plusw1,f,c
 17960  015B82  E30E               	bnc	u5220
 17961  015B84  0EF9               	movlw	-7
 17962  015B86  2AE3               	incf	plusw1,f,c
 17963  015B88  E30B               	bnc	u5220
 17964  015B8A  0EFA               	movlw	-6
 17965  015B8C  2AE3               	incf	plusw1,f,c
 17966  015B8E  E308               	bnc	u5220
 17967  015B90  0EFB               	movlw	-5
 17968  015B92  2AE3               	incf	plusw1,f,c
 17969  015B94  E305               	bnc	u5220
 17970  015B96  0EFC               	movlw	-4
 17971  015B98  2AE3               	incf	plusw1,f,c
 17972  015B9A  E302               	bnc	u5220
 17973  015B9C  0EFD               	movlw	-3
 17974  015B9E  2AE3               	incf	plusw1,f,c
 17975  015BA0                     u5220:
 17976                           
 17977                           ;stkvar	_quotient @ sp[(-10)+0]
 17978  015BA0  0EF6               	movlw	246
 17979  015BA2  24E1               	addwf	fsr1l,w,c
 17980  015BA4  6ED9               	movwf	fsr2l,c
 17981  015BA6  0EFF               	movlw	255
 17982  015BA8  20E2               	addwfc	fsr1h,w,c
 17983  015BAA  6EDA               	movwf	fsr2h,c
 17984                           
 17985                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17986  015BAC  0E08               	movlw	8
 17987  015BAE  6E25               	movwf	btemp^0,c
 17988  015BB0  0EEE               	movlw	-18
 17989  015BB2                     us523999:
 17990  015BB2  006F FF7B FFE3     	movff	postinc2,plusw1
 17991  015BB8  28E8               	incf	wreg,w,c
 17992  015BBA  2E25               	decfsz	btemp^0,f,c
 17993  015BBC  D7FA               	bra	us523999
 17994                           
 17995                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17996  015BBE  0EF6               	movlw	246
 17997  015BC0  26E1               	addwf	fsr1l,f,c
 17998  015BC2  0EFF               	movlw	255
 17999  015BC4  22E2               	addwfc	fsr1h,f,c
 18000  015BC6  0012               	return		;funcret
 18001  015BC8                     __end_of___aodiv:
 18002                           	opt callstack 0
 18003                           
 18004 ;; *************** function _ctoa *****************
 18005 ;; Defined at:
 18006 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18007 ;; Parameters:    Size  Location     Type
 18008 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18009 ;;		 -> f(6), NULL(0), 
 18010 ;;  c               1  [STACK] unsigned char 
 18011 ;; Auto vars:     Size  Location     Type
 18012 ;;  w               2  [STACK] int 
 18013 ;;  l               2    0        int 
 18014 ;; Return value:  Size  Location     Type
 18015 ;;                  2  [STACK] int 
 18016 ;; Registers used:
 18017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18018 ;; Tracked objects:
 18019 ;;		On entry : 0/0
 18020 ;;		On exit  : 0/0
 18021 ;;		Unchanged: 0/0
 18022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18027 ;;Total ram usage:        0 bytes
 18028 ;; Hardware stack levels used:    1
 18029 ;; Hardware stack levels required when called:   12
 18030 ;; This function calls:
 18031 ;;		_pad
 18032 ;; This function is called by:
 18033 ;;		_vfpfcnvrt
 18034 ;; This function uses a reentrant model
 18035 ;;
 18036                           
 18037                           	psect	text65
 18038  0181F6                     __ptext65:
 18039                           	opt callstack 0
 18040  0181F6                     _ctoa:
 18041                           	opt callstack 0
 18042                           
 18043                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18044  0181F6  52E6               	movf	postinc1,f,c
 18045  0181F8  52E6               	movf	postinc1,f,c
 18046                           
 18047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18048                           
 18049                           ;incstack = 0
 18050  0181FA  500A               	movf	_width^0,w,c
 18051  0181FC  100B               	iorwf	(_width+1)^0,w,c
 18052  0181FE  A4D8               	btfss	status,2,c
 18053  018200  D009               	goto	l10108
 18054                           
 18055                           ;stkvar	_w @ sp[(-2)+0]
 18056  018202  0EFE               	movlw	-2
 18057  018204  0060  F02B  FFE3   	movff	_width,plusw1
 18058  01820A  0EFF               	movlw	-1
 18059  01820C  0060  F02F  FFE3   	movff	_width+1,plusw1
 18060  018212  D016               	goto	l10110
 18061  018214                     l10108:
 18062  018214  0EFF               	movlw	255
 18063  018216  6E2F               	movwf	(btemp+10)^0,c
 18064  018218  0EFF               	movlw	255
 18065  01821A  6E30               	movwf	(btemp+11)^0,c
 18066  01821C  0060  F028  F02D   	movff	_width,btemp+8
 18067  018222  0060  F02C  F02E   	movff	_width+1,btemp+9
 18068  018228  502F               	movf	(btemp+10)^0,w,c
 18069  01822A  262D               	addwf	(btemp+8)^0,f,c
 18070  01822C  5030               	movf	(btemp+11)^0,w,c
 18071  01822E  222E               	addwfc	(btemp+9)^0,f,c
 18072                           
 18073                           ;stkvar	_w @ sp[(-2)+0]
 18074  018230  0EFE               	movlw	-2
 18075  018232  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 18076  018238  0EFF               	movlw	-1
 18077  01823A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 18078  018240                     l10110:
 18079                           
 18080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18081                           ;stkvar	_c @ sp[(-2)+-3]
 18082  018240  0EFB               	movlw	-5
 18083  018242  006F FF8C  F394    	movff	plusw1,_dbuf
 18084                           
 18085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18086  018248  0103               	movlb	3	; () banked
 18087  01824A  6B95               	clrf	(_dbuf+1)& (0+255),b
 18088                           
 18089                           ; BSR set to: 3
 18090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18091                           ;stkvar	_w @ sp[(-2)+0]
 18092  01824C  0EFE               	movlw	-2
 18093  01824E  006F FF8F FFE6     	movff	plusw1,postinc1
 18094  018254  006F FF8F FFE6     	movff	plusw1,postinc1
 18095  01825A  0E94               	movlw	low _dbuf
 18096  01825C  6EE6               	movwf	postinc1,c
 18097  01825E  0E03               	movlw	high _dbuf
 18098  018260  6EE6               	movwf	postinc1,c
 18099                           
 18100                           ;stkvar	_fp @ sp[(-6)+-2]
 18101  018262  0EF8               	movlw	-8
 18102  018264  006F FF8F FFE6     	movff	plusw1,postinc1
 18103  01826A  006F FF8F FFE6     	movff	plusw1,postinc1
 18104  018270  EC32  F0B9         	call	_pad	;wreg free
 18105                           
 18106                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18107  018274  0EFB               	movlw	251
 18108  018276  26E1               	addwf	fsr1l,f,c
 18109  018278  0EFF               	movlw	255
 18110  01827A  22E2               	addwfc	fsr1h,f,c
 18111  01827C  0012               	return		;funcret
 18112  01827E                     __end_of_ctoa:
 18113                           	opt callstack 0
 18114                           
 18115 ;; *************** function _pad *****************
 18116 ;; Defined at:
 18117 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18118 ;; Parameters:    Size  Location     Type
 18119 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18120 ;;		 -> f(6), NULL(0), 
 18121 ;;  buf             2  [STACK] PTR unsigned char 
 18122 ;;		 -> dbuf(80), 
 18123 ;;  p               2  [STACK] int 
 18124 ;; Auto vars:     Size  Location     Type
 18125 ;;  w               2  [STACK] int 
 18126 ;;  i               2  [STACK] int 
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  2  [STACK] int 
 18129 ;; Registers used:
 18130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/3
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18140 ;;Total ram usage:        0 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; Hardware stack levels required when called:   11
 18143 ;; This function calls:
 18144 ;;		_fputc
 18145 ;;		_fputs
 18146 ;;		_strlen
 18147 ;; This function is called by:
 18148 ;;		_ctoa
 18149 ;;		_dtoa
 18150 ;;		_efgtoa
 18151 ;;		_xtoa
 18152 ;; This function uses a reentrant model
 18153 ;;
 18154                           
 18155                           	psect	text66
 18156  017264                     __ptext66:
 18157                           	opt callstack 0
 18158  017264                     _pad:
 18159                           	opt callstack 0
 18160                           
 18161                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18162  017264  52E6               	movf	postinc1,f,c
 18163  017266  52E6               	movf	postinc1,f,c
 18164  017268  52E6               	movf	postinc1,f,c
 18165  01726A  52E6               	movf	postinc1,f,c
 18166                           
 18167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18168                           
 18169                           ;incstack = 0
 18170  01726C  A00E               	btfss	_flags^0,0,c
 18171  01726E  D010               	goto	l10082
 18172                           
 18173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18174                           ;stkvar	_fp @ sp[(-4)+-2]
 18175  017270  0EFA               	movlw	-6
 18176  017272  006F FF8F FFE6     	movff	plusw1,postinc1
 18177  017278  006F FF8F FFE6     	movff	plusw1,postinc1
 18178                           
 18179                           ;stkvar	_buf @ sp[(-6)+-4]
 18180  01727E  0EF6               	movlw	-10
 18181  017280  006F FF8F FFE6     	movff	plusw1,postinc1
 18182  017286  006F FF8F FFE6     	movff	plusw1,postinc1
 18183  01728C  ECD5  F0BF         	call	_fputs	;wreg free
 18184  017290                     l10082:
 18185                           
 18186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18187                           ;stkvar	_p @ sp[(-4)+-6]
 18188  017290  0EF7               	movlw	-9
 18189  017292  BEE3               	btfsc	plusw1,7,c
 18190  017294  D011               	goto	l10086
 18191                           
 18192                           ;stkvar	_p @ sp[(-4)+-6]
 18193                           ;stkvar	_w @ sp[(-4)+0]
 18194  017296  0EF6               	movlw	-10
 18195  017298  006F FF8C  F025    	movff	plusw1,btemp
 18196  01729E  0EFC               	movlw	-4
 18197  0172A0  0060  F097  FFE3   	movff	btemp,plusw1
 18198  0172A6  0EF7               	movlw	-9
 18199  0172A8  006F FF8C  F025    	movff	plusw1,btemp
 18200  0172AE  0EFD               	movlw	-3
 18201  0172B0  0060  F097  FFE3   	movff	btemp,plusw1
 18202  0172B6  D004               	goto	l1991
 18203  0172B8                     l10086:
 18204                           
 18205                           ;stkvar	_w @ sp[(-4)+0]
 18206  0172B8  0EFC               	movlw	-4
 18207  0172BA  6AE3               	clrf	plusw1,c
 18208  0172BC  0EFD               	movlw	-3
 18209  0172BE  6AE3               	clrf	plusw1,c
 18210  0172C0                     l1991:
 18211                           
 18212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18213                           ;stkvar	_i @ sp[(-4)+2]
 18214  0172C0  0EFE               	movlw	-2
 18215  0172C2  6AE3               	clrf	plusw1,c
 18216  0172C4  0EFF               	movlw	-1
 18217  0172C6  6AE3               	clrf	plusw1,c
 18218                           
 18219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18220  0172C8  D01E               	goto	l10092
 18221  0172CA                     l10088:
 18222                           
 18223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18224                           ;stkvar	_fp @ sp[(-4)+-2]
 18225  0172CA  0EFA               	movlw	-6
 18226  0172CC  006F FF8F FFE6     	movff	plusw1,postinc1
 18227  0172D2  006F FF8F FFE6     	movff	plusw1,postinc1
 18228  0172D8  0E20               	movlw	32
 18229  0172DA  6EE6               	movwf	postinc1,c
 18230  0172DC  0E00               	movlw	0
 18231  0172DE  6EE6               	movwf	postinc1,c
 18232  0172E0  EC14  F0B8         	call	_fputc	;wreg free
 18233                           
 18234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18235                           ;stkvar	_i @ sp[(-4)+2]
 18236  0172E4  0EFE               	movlw	-2
 18237  0172E6  50E3               	movf	plusw1,w,c
 18238  0172E8  0F01               	addlw	1
 18239  0172EA  6E25               	movwf	btemp^0,c
 18240  0172EC  0EFE               	movlw	-2
 18241  0172EE  0060  F097  FFE3   	movff	btemp,plusw1
 18242  0172F4  6A25               	clrf	btemp^0,c
 18243  0172F6  0EFF               	movlw	-1
 18244  0172F8  50E3               	movf	plusw1,w,c
 18245  0172FA  2025               	addwfc	btemp^0,w,c
 18246  0172FC  6E25               	movwf	btemp^0,c
 18247  0172FE  0EFF               	movlw	-1
 18248  017300  0060  F097  FFE3   	movff	btemp,plusw1
 18249  017306                     l10092:
 18250                           
 18251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18252                           ;stkvar	_w @ sp[(-4)+0]
 18253                           ;stkvar	_i @ sp[(-4)+2]
 18254  017306  50E1               	movf	fsr1l,w,c
 18255  017308  0FFE               	addlw	-2
 18256  01730A  6ED9               	movwf	fsr2l,c
 18257  01730C  50E2               	movf	fsr1h,w,c
 18258  01730E  6EDA               	movwf	fsr2h,c
 18259  017310  0EFF               	movlw	255
 18260  017312  22DA               	addwfc	fsr2h,f,c
 18261  017314  0EFC               	movlw	-4
 18262  017316  50E3               	movf	plusw1,w,c
 18263  017318  5CDE               	subwf	postinc2,w,c
 18264  01731A  50DE               	movf	postinc2,w,c
 18265  01731C  0A80               	xorlw	128
 18266  01731E  6E25               	movwf	btemp^0,c
 18267  017320  0EFD               	movlw	-3
 18268  017322  50E3               	movf	plusw1,w,c
 18269  017324  0A80               	xorlw	128
 18270  017326  5825               	subwfb	btemp^0,w,c
 18271  017328  A0D8               	btfss	status,0,c
 18272  01732A  D7CF               	goto	l10088
 18273                           
 18274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18275  01732C  B00E               	btfsc	_flags^0,0,c
 18276  01732E  D010               	goto	l10096
 18277                           
 18278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18279                           ;stkvar	_fp @ sp[(-4)+-2]
 18280  017330  0EFA               	movlw	-6
 18281  017332  006F FF8F FFE6     	movff	plusw1,postinc1
 18282  017338  006F FF8F FFE6     	movff	plusw1,postinc1
 18283                           
 18284                           ;stkvar	_buf @ sp[(-6)+-4]
 18285  01733E  0EF6               	movlw	-10
 18286  017340  006F FF8F FFE6     	movff	plusw1,postinc1
 18287  017346  006F FF8F FFE6     	movff	plusw1,postinc1
 18288  01734C  ECD5  F0BF         	call	_fputs	;wreg free
 18289  017350                     l10096:
 18290                           
 18291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18292                           ;stkvar	_w @ sp[(-4)+0]
 18293                           ;stkvar	_buf @ sp[(-4)+-4]
 18294  017350  0EF8               	movlw	-8
 18295  017352  006F FF8F FFE6     	movff	plusw1,postinc1
 18296  017358  006F FF8F FFE6     	movff	plusw1,postinc1
 18297  01735E  EC84  F0BF         	call	_strlen	;wreg free
 18298  017362  0EFC               	movlw	-4
 18299  017364  50E3               	movf	plusw1,w,c
 18300  017366  2625               	addwf	btemp^0,f,c
 18301  017368  0EFD               	movlw	-3
 18302  01736A  50E3               	movf	plusw1,w,c
 18303  01736C  2226               	addwfc	(btemp+1)^0,f,c
 18304                           
 18305                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18306  01736E  0EF6               	movlw	246
 18307  017370  26E1               	addwf	fsr1l,f,c
 18308  017372  0EFF               	movlw	255
 18309  017374  22E2               	addwfc	fsr1h,f,c
 18310  017376  0012               	return		;funcret
 18311  017378                     __end_of_pad:
 18312                           	opt callstack 0
 18313                           
 18314 ;; *************** function _strlen *****************
 18315 ;; Defined at:
 18316 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18317 ;; Parameters:    Size  Location     Type
 18318 ;;  s               2  [STACK] PTR const unsigned char 
 18319 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18320 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18321 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18322 ;; Auto vars:     Size  Location     Type
 18323 ;;  a               2  [STACK] PTR const unsigned char 
 18324 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18325 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18326 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18327 ;; Return value:  Size  Location     Type
 18328 ;;                  2  [STACK] unsigned int 
 18329 ;; Registers used:
 18330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18331 ;; Tracked objects:
 18332 ;;		On entry : 0/0
 18333 ;;		On exit  : 0/0
 18334 ;;		Unchanged: 0/0
 18335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18340 ;;Total ram usage:        0 bytes
 18341 ;; Hardware stack levels used:    1
 18342 ;; Hardware stack levels required when called:    7
 18343 ;; This function calls:
 18344 ;;		Nothing
 18345 ;; This function is called by:
 18346 ;;		_eaDogM_WriteString
 18347 ;;		_pad
 18348 ;;		_stoa
 18349 ;; This function uses a reentrant model
 18350 ;;
 18351                           
 18352                           	psect	text67
 18353  017F08                     __ptext67:
 18354                           	opt callstack 0
 18355  017F08                     _strlen:
 18356                           	opt callstack 0
 18357                           
 18358                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18359  017F08  52E6               	movf	postinc1,f,c
 18360  017F0A  52E6               	movf	postinc1,f,c
 18361                           
 18362                           ;stkvar	_s @ sp[(-2)+-2]
 18363                           
 18364                           ;incstack = 0
 18365  017F0C  0EFC               	movlw	-4
 18366  017F0E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18367  017F14  0EFD               	movlw	-3
 18368  017F16  006F FF8C  F030    	movff	plusw1,btemp+11
 18369                           
 18370                           ;stkvar	_a @ sp[(-2)+0]
 18371  017F1C  0EFF               	movlw	-1
 18372  017F1E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18373  017F24  0EFE               	movlw	-2
 18374  017F26  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 18375  017F2C  D011               	goto	l6602
 18376  017F2E                     l6600:
 18377                           
 18378                           ;stkvar	_s @ sp[(-2)+-2]
 18379  017F2E  0EFC               	movlw	-4
 18380  017F30  50E3               	movf	plusw1,w,c
 18381  017F32  0F01               	addlw	1
 18382  017F34  6E25               	movwf	btemp^0,c
 18383  017F36  0EFC               	movlw	-4
 18384  017F38  0060  F097  FFE3   	movff	btemp,plusw1
 18385  017F3E  6A25               	clrf	btemp^0,c
 18386  017F40  0EFD               	movlw	-3
 18387  017F42  50E3               	movf	plusw1,w,c
 18388  017F44  2025               	addwfc	btemp^0,w,c
 18389  017F46  6E25               	movwf	btemp^0,c
 18390  017F48  0EFD               	movlw	-3
 18391  017F4A  0060  F097  FFE3   	movff	btemp,plusw1
 18392  017F50                     l6602:
 18393                           
 18394                           ;stkvar	_s @ sp[(-2)+-2]
 18395  017F50  0EFC               	movlw	-4
 18396  017F52  006F FF8F FFF6     	movff	plusw1,tblptrl
 18397  017F58  0EFD               	movlw	-3
 18398  017F5A  006F FF8F FFF7     	movff	plusw1,tblptrh
 18399  017F60  0E00               	movlw	low (__mediumconst shr (0+16))
 18400  017F62  6EF8               	movwf	tblptru,c
 18401  017F64  0E1F               	movlw	(high __ramtop+-1)
 18402  017F66  64F7               	cpfsgt	tblptrh,c
 18403  017F68  D003               	bra	u4717
 18404  017F6A  0008               	tblrd		*
 18405  017F6C  50F5               	movf	tablat,w,c
 18406  017F6E  D007               	bra	u4710
 18407  017F70                     u4717:
 18408  017F70  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18409  017F76  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18410  017F7C  50EF               	movf	indf0,w,c
 18411  017F7E                     u4710:
 18412  017F7E  0900               	iorlw	0
 18413  017F80  A4D8               	btfss	status,2,c
 18414  017F82  D7D5               	goto	l6600
 18415                           
 18416                           ;stkvar	_a @ sp[(-2)+0]
 18417                           ;stkvar	_s @ sp[(-2)+-2]
 18418  017F84  0EFC               	movlw	-4
 18419  017F86  006F FF8C  F025    	movff	plusw1,btemp
 18420  017F8C  0EFD               	movlw	-3
 18421  017F8E  006F FF8C  F026    	movff	plusw1,btemp+1
 18422  017F94  0EFE               	movlw	-2
 18423  017F96  50E3               	movf	plusw1,w,c
 18424  017F98  5E25               	subwf	btemp^0,f,c
 18425  017F9A  0EFF               	movlw	-1
 18426  017F9C  50E3               	movf	plusw1,w,c
 18427  017F9E  5A26               	subwfb	(btemp+1)^0,f,c
 18428                           
 18429                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18430  017FA0  52E5               	movf	postdec1,f,c
 18431  017FA2  52E5               	movf	postdec1,f,c
 18432  017FA4  52E5               	movf	postdec1,f,c
 18433  017FA6  52E5               	movf	postdec1,f,c
 18434  017FA8  0012               	return		;funcret
 18435  017FAA                     __end_of_strlen:
 18436                           	opt callstack 0
 18437                           
 18438 ;; *************** function _fputs *****************
 18439 ;; Defined at:
 18440 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18441 ;; Parameters:    Size  Location     Type
 18442 ;;  s               2  [STACK] PTR const unsigned char 
 18443 ;;		 -> dbuf(80), 
 18444 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18445 ;;		 -> f(6), NULL(0), 
 18446 ;; Auto vars:     Size  Location     Type
 18447 ;;  i               2  [STACK] int 
 18448 ;;  c               1  [STACK] unsigned char 
 18449 ;; Return value:  Size  Location     Type
 18450 ;;                  2  [STACK] int 
 18451 ;; Registers used:
 18452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18453 ;; Tracked objects:
 18454 ;;		On entry : 0/3
 18455 ;;		On exit  : 0/0
 18456 ;;		Unchanged: 0/0
 18457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18462 ;;Total ram usage:        0 bytes
 18463 ;; Hardware stack levels used:    1
 18464 ;; Hardware stack levels required when called:   10
 18465 ;; This function calls:
 18466 ;;		_fputc
 18467 ;; This function is called by:
 18468 ;;		_pad
 18469 ;; This function uses a reentrant model
 18470 ;;
 18471                           
 18472                           	psect	text68
 18473  017FAA                     __ptext68:
 18474                           	opt callstack 0
 18475  017FAA                     _fputs:
 18476                           	opt callstack 0
 18477                           
 18478                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18479  017FAA  52E6               	movf	postinc1,f,c
 18480  017FAC  52E6               	movf	postinc1,f,c
 18481  017FAE  52E6               	movf	postinc1,f,c
 18482                           
 18483                           ;stkvar	_i @ sp[(-3)+0]
 18484                           
 18485                           ;incstack = 0
 18486  017FB0  0EFD               	movlw	-3
 18487  017FB2  6AE3               	clrf	plusw1,c
 18488  017FB4  0EFE               	movlw	-2
 18489  017FB6  6AE3               	clrf	plusw1,c
 18490  017FB8  D01F               	goto	l10076
 18491  017FBA                     l10072:
 18492                           
 18493                           ;stkvar	_fp @ sp[(-3)+-4]
 18494  017FBA  0EF9               	movlw	-7
 18495  017FBC  006F FF8F FFE6     	movff	plusw1,postinc1
 18496  017FC2  006F FF8F FFE6     	movff	plusw1,postinc1
 18497                           
 18498                           ;stkvar	_c @ sp[(-5)+2]
 18499  017FC8  0EFD               	movlw	-3
 18500  017FCA  50E3               	movf	plusw1,w,c
 18501  017FCC  6EE6               	movwf	postinc1,c
 18502  017FCE  0E00               	movlw	0
 18503  017FD0  6EE6               	movwf	postinc1,c
 18504  017FD2  EC14  F0B8         	call	_fputc	;wreg free
 18505                           
 18506                           ;stkvar	_i @ sp[(-3)+0]
 18507  017FD6  0EFD               	movlw	-3
 18508  017FD8  50E3               	movf	plusw1,w,c
 18509  017FDA  0F01               	addlw	1
 18510  017FDC  6E25               	movwf	btemp^0,c
 18511  017FDE  0EFD               	movlw	-3
 18512  017FE0  0060  F097  FFE3   	movff	btemp,plusw1
 18513  017FE6  6A25               	clrf	btemp^0,c
 18514  017FE8  0EFE               	movlw	-2
 18515  017FEA  50E3               	movf	plusw1,w,c
 18516  017FEC  2025               	addwfc	btemp^0,w,c
 18517  017FEE  6E25               	movwf	btemp^0,c
 18518  017FF0  0EFE               	movlw	-2
 18519  017FF2  0060  F097  FFE3   	movff	btemp,plusw1
 18520  017FF8                     l10076:
 18521                           
 18522                           ;stkvar	_i @ sp[(-3)+0]
 18523  017FF8  0EFD               	movlw	-3
 18524  017FFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18525  018000  0EFE               	movlw	-2
 18526  018002  006F FF8C  F030    	movff	plusw1,btemp+11
 18527                           
 18528                           ;stkvar	_s @ sp[(-3)+-2]
 18529  018008  0EFB               	movlw	-5
 18530  01800A  006F FF8C  F02D    	movff	plusw1,btemp+8
 18531  018010  0EFC               	movlw	-4
 18532  018012  006F FF8C  F02E    	movff	plusw1,btemp+9
 18533  018018  502F               	movf	(btemp+10)^0,w,c
 18534  01801A  242D               	addwf	(btemp+8)^0,w,c
 18535  01801C  6ED9               	movwf	fsr2l,c
 18536  01801E  5030               	movf	(btemp+11)^0,w,c
 18537  018020  202E               	addwfc	(btemp+9)^0,w,c
 18538  018022  6EDA               	movwf	fsr2h,c
 18539  018024  50DF               	movf	indf2,w,c
 18540  018026  6E30               	movwf	(btemp+11)^0,c
 18541                           
 18542                           ;stkvar	_c @ sp[(-3)+2]
 18543  018028  0EFF               	movlw	-1
 18544  01802A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18545  018030  0EFF               	movlw	-1
 18546  018032  50E3               	movf	plusw1,w,c
 18547  018034  A4D8               	btfss	status,2,c
 18548  018036  D7C1               	goto	l10072
 18549                           
 18550                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18551  018038  0EF9               	movlw	249
 18552  01803A  26E1               	addwf	fsr1l,f,c
 18553  01803C  0EFF               	movlw	255
 18554  01803E  22E2               	addwfc	fsr1h,f,c
 18555  018040  0012               	return		;funcret
 18556  018042                     __end_of_fputs:
 18557                           	opt callstack 0
 18558                           
 18559 ;; *************** function _fputc *****************
 18560 ;; Defined at:
 18561 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18562 ;; Parameters:    Size  Location     Type
 18563 ;;  c               2  [STACK] int 
 18564 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18565 ;;		 -> f(6), NULL(0), 
 18566 ;; Auto vars:     Size  Location     Type
 18567 ;;		None
 18568 ;; Return value:  Size  Location     Type
 18569 ;;                  2  [STACK] int 
 18570 ;; Registers used:
 18571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18572 ;; Tracked objects:
 18573 ;;		On entry : 0/0
 18574 ;;		On exit  : 0/0
 18575 ;;		Unchanged: 0/0
 18576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18581 ;;Total ram usage:        0 bytes
 18582 ;; Hardware stack levels used:    1
 18583 ;; Hardware stack levels required when called:    9
 18584 ;; This function calls:
 18585 ;;		_putch
 18586 ;; This function is called by:
 18587 ;;		_pad
 18588 ;;		_stoa
 18589 ;;		_vfpfcnvrt
 18590 ;;		_fputs
 18591 ;; This function uses a reentrant model
 18592 ;;
 18593                           
 18594                           	psect	text69
 18595  017028                     __ptext69:
 18596                           	opt callstack 0
 18597  017028                     _fputc:
 18598                           	opt callstack 12
 18599                           
 18600                           ;stkvar	_fp @ sp[(0)+-4]
 18601                           
 18602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18603                           ;incstack = 0
 18604  017028  0EFC               	movlw	-4
 18605  01702A  006F FF8C  F025    	movff	plusw1,btemp
 18606  017030  0EFD               	movlw	-3
 18607  017032  50E3               	movf	plusw1,w,c
 18608  017034  1025               	iorwf	btemp^0,w,c
 18609  017036  B4D8               	btfsc	status,2,c
 18610  017038  D009               	goto	u9300
 18611                           
 18612                           ;stkvar	_fp @ sp[(0)+-4]
 18613  01703A  0EFC               	movlw	-4
 18614  01703C  006F FF8C  F025    	movff	plusw1,btemp
 18615  017042  0EFD               	movlw	-3
 18616  017044  50E3               	movf	plusw1,w,c
 18617  017046  1025               	iorwf	btemp^0,w,c
 18618  017048  A4D8               	btfss	status,2,c
 18619  01704A  D006               	goto	l10060
 18620  01704C                     u9300:
 18621                           
 18622                           ;stkvar	_c @ sp[(0)+-2]
 18623  01704C  0EFE               	movlw	-2
 18624  01704E  50E3               	movf	plusw1,w,c
 18625  017050  6EE6               	movwf	postinc1,c
 18626  017052  EC8A  F0CA         	call	_putch	;wreg free
 18627  017056  D075               	goto	l3009
 18628  017058                     l10060:
 18629                           
 18630                           ;stkvar	_fp @ sp[(0)+-4]
 18631  017058  0EFC               	movlw	-4
 18632  01705A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18633  017060  0EFD               	movlw	-3
 18634  017062  006F FF8C  F030    	movff	plusw1,btemp+11
 18635  017068  0E04               	movlw	4
 18636  01706A  242F               	addwf	(btemp+10)^0,w,c
 18637  01706C  6ED9               	movwf	fsr2l,c
 18638  01706E  0E00               	movlw	0
 18639  017070  2030               	addwfc	(btemp+11)^0,w,c
 18640  017072  6EDA               	movwf	fsr2h,c
 18641  017074  50DE               	movf	postinc2,w,c
 18642  017076  10DE               	iorwf	postinc2,w,c
 18643  017078  B4D8               	btfsc	status,2,c
 18644  01707A  D026               	goto	u9320
 18645                           
 18646                           ;stkvar	_fp @ sp[(0)+-4]
 18647  01707C  0EFC               	movlw	-4
 18648  01707E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18649  017084  0EFD               	movlw	-3
 18650  017086  006F FF8C  F030    	movff	plusw1,btemp+11
 18651  01708C  0E04               	movlw	4
 18652  01708E  242F               	addwf	(btemp+10)^0,w,c
 18653  017090  6ED9               	movwf	fsr2l,c
 18654  017092  0E00               	movlw	0
 18655  017094  2030               	addwfc	(btemp+11)^0,w,c
 18656  017096  6EDA               	movwf	fsr2h,c
 18657                           
 18658                           ;stkvar	_fp @ sp[(0)+-4]
 18659  017098  0EFC               	movlw	-4
 18660  01709A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18661  0170A0  0EFD               	movlw	-3
 18662  0170A2  006F FF8C  F030    	movff	plusw1,btemp+11
 18663  0170A8  0E02               	movlw	2
 18664  0170AA  242F               	addwf	(btemp+10)^0,w,c
 18665  0170AC  6EE9               	movwf	fsr0l,c
 18666  0170AE  0E00               	movlw	0
 18667  0170B0  2030               	addwfc	(btemp+11)^0,w,c
 18668  0170B2  6EEA               	movwf	fsr0h,c
 18669  0170B4  50DE               	movf	postinc2,w,c
 18670  0170B6  5CEE               	subwf	postinc0,w,c
 18671  0170B8  50EE               	movf	postinc0,w,c
 18672  0170BA  0A80               	xorlw	128
 18673  0170BC  6E25               	movwf	btemp^0,c
 18674  0170BE  50DE               	movf	postinc2,w,c
 18675  0170C0  0A80               	xorlw	128
 18676  0170C2  5825               	subwfb	btemp^0,w,c
 18677  0170C4  B0D8               	btfsc	status,0,c
 18678  0170C6  D03D               	goto	l3009
 18679  0170C8                     u9320:
 18680                           
 18681                           ;stkvar	_c @ sp[(0)+-2]
 18682                           ;stkvar	_fp @ sp[(0)+-4]
 18683  0170C8  0EFC               	movlw	-4
 18684  0170CA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18685  0170D0  0EFD               	movlw	-3
 18686  0170D2  006F FF8C  F030    	movff	plusw1,btemp+11
 18687  0170D8  0E02               	movlw	2
 18688  0170DA  242F               	addwf	(btemp+10)^0,w,c
 18689  0170DC  6ED9               	movwf	fsr2l,c
 18690  0170DE  0E00               	movlw	0
 18691  0170E0  2030               	addwfc	(btemp+11)^0,w,c
 18692  0170E2  6EDA               	movwf	fsr2h,c
 18693  0170E4  006F FF78  F02F    	movff	postinc2,btemp+10
 18694  0170EA  006F FF74  F030    	movff	postdec2,btemp+11
 18695                           
 18696                           ;stkvar	_fp @ sp[(0)+-4]
 18697  0170F0  0EFC               	movlw	-4
 18698  0170F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 18699  0170F8  0EFD               	movlw	-3
 18700  0170FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 18701  017100  006F FF78  F02D    	movff	postinc2,btemp+8
 18702  017106  006F FF74  F02E    	movff	postdec2,btemp+9
 18703  01710C  502F               	movf	(btemp+10)^0,w,c
 18704  01710E  242D               	addwf	(btemp+8)^0,w,c
 18705  017110  6ED9               	movwf	fsr2l,c
 18706  017112  5030               	movf	(btemp+11)^0,w,c
 18707  017114  202E               	addwfc	(btemp+9)^0,w,c
 18708  017116  6EDA               	movwf	fsr2h,c
 18709  017118  0EFE               	movlw	-2
 18710  01711A  006F FF8F FFDF     	movff	plusw1,indf2
 18711                           
 18712                           ;stkvar	_fp @ sp[(0)+-4]
 18713  017120  0EFC               	movlw	-4
 18714  017122  006F FF8C  F02F    	movff	plusw1,btemp+10
 18715  017128  0EFD               	movlw	-3
 18716  01712A  006F FF8C  F030    	movff	plusw1,btemp+11
 18717  017130  0E02               	movlw	2
 18718  017132  242F               	addwf	(btemp+10)^0,w,c
 18719  017134  6ED9               	movwf	fsr2l,c
 18720  017136  0E00               	movlw	0
 18721  017138  2030               	addwfc	(btemp+11)^0,w,c
 18722  01713A  6EDA               	movwf	fsr2h,c
 18723  01713C  2ADE               	incf	postinc2,f,c
 18724  01713E  0E00               	movlw	0
 18725  017140  22DD               	addwfc	postdec2,f,c
 18726  017142                     l3009:
 18727                           
 18728                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18729  017142  52E5               	movf	postdec1,f,c
 18730  017144  52E5               	movf	postdec1,f,c
 18731  017146  52E5               	movf	postdec1,f,c
 18732  017148  52E5               	movf	postdec1,f,c
 18733  01714A  0012               	return		;funcret
 18734  01714C                     __end_of_fputc:
 18735                           	opt callstack 0
 18736                           
 18737 ;; *************** function _putch *****************
 18738 ;; Defined at:
 18739 ;;		line 168 in file "eadog.c"
 18740 ;; Parameters:    Size  Location     Type
 18741 ;;  c               1  [STACK] unsigned char 
 18742 ;; Auto vars:     Size  Location     Type
 18743 ;;		None
 18744 ;; Return value:  Size  Location     Type
 18745 ;;                  1  [STACK] void 
 18746 ;; Registers used:
 18747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18748 ;; Tracked objects:
 18749 ;;		On entry : 0/0
 18750 ;;		On exit  : 0/0
 18751 ;;		Unchanged: 0/0
 18752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18757 ;;Total ram usage:        0 bytes
 18758 ;; Hardware stack levels used:    1
 18759 ;; Hardware stack levels required when called:    8
 18760 ;; This function calls:
 18761 ;;		_ringBufS_put_dma
 18762 ;; This function is called by:
 18763 ;;		_fputc
 18764 ;; This function uses a reentrant model
 18765 ;;
 18766                           
 18767                           	psect	text70
 18768  019514                     __ptext70:
 18769                           	opt callstack 0
 18770  019514                     _putch:
 18771                           	opt callstack 12
 18772                           
 18773                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18774                           ;stkvar	_c @ sp[(0)+-1]
 18775                           
 18776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18777                           ;incstack = 0
 18778  019514  0EFF               	movlw	-1
 18779  019516  50E3               	movf	plusw1,w,c
 18780  019518  6EE6               	movwf	postinc1,c
 18781  01951A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 18782  019520  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 18783  019526  ECDC  F0BE         	call	_ringBufS_put_dma	;wreg free
 18784                           
 18785                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18786  01952A  52E5               	movf	postdec1,f,c
 18787  01952C  0012               	return		;funcret
 18788  01952E                     __end_of_putch:
 18789                           	opt callstack 0
 18790                           
 18791 ;; *************** function _ringBufS_put_dma *****************
 18792 ;; Defined at:
 18793 ;;		line 67 in file "ringbufs.c"
 18794 ;; Parameters:    Size  Location     Type
 18795 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18796 ;;		 -> ring_buf1(67), 
 18797 ;;  c               1  [STACK] const unsigned char 
 18798 ;; Auto vars:     Size  Location     Type
 18799 ;;		None
 18800 ;; Return value:  Size  Location     Type
 18801 ;;                  1  [STACK] void 
 18802 ;; Registers used:
 18803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18804 ;; Tracked objects:
 18805 ;;		On entry : 0/0
 18806 ;;		On exit  : 0/0
 18807 ;;		Unchanged: 0/0
 18808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18813 ;;Total ram usage:        0 bytes
 18814 ;; Hardware stack levels used:    1
 18815 ;; Hardware stack levels required when called:    7
 18816 ;; This function calls:
 18817 ;;		Nothing
 18818 ;; This function is called by:
 18819 ;;		_putch
 18820 ;; This function uses a reentrant model
 18821 ;;
 18822                           
 18823                           	psect	text71
 18824  017DB8                     __ptext71:
 18825                           	opt callstack 0
 18826  017DB8                     _ringBufS_put_dma:
 18827                           	opt callstack 12
 18828                           
 18829                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18830                           ;stkvar	__this @ sp[(0)+-2]
 18831                           
 18832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18833                           ;incstack = 0
 18834  017DB8  0EFE               	movlw	-2
 18835  017DBA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18836  017DC0  0EFF               	movlw	-1
 18837  017DC2  006F FF8C  F030    	movff	plusw1,btemp+11
 18838  017DC8  0E42               	movlw	66
 18839  017DCA  242F               	addwf	(btemp+10)^0,w,c
 18840  017DCC  6ED9               	movwf	fsr2l,c
 18841  017DCE  0E00               	movlw	0
 18842  017DD0  2030               	addwfc	(btemp+11)^0,w,c
 18843  017DD2  6EDA               	movwf	fsr2h,c
 18844  017DD4  0E40               	movlw	64
 18845  017DD6  60DF               	cpfslt	indf2,c
 18846  017DD8  D040               	goto	l1580
 18847                           
 18848                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18849                           ;stkvar	_c @ sp[(0)+-3]
 18850                           ;stkvar	__this @ sp[(0)+-2]
 18851  017DDA  0EFE               	movlw	-2
 18852  017DDC  006F FF8C  F02F    	movff	plusw1,btemp+10
 18853  017DE2  0EFF               	movlw	-1
 18854  017DE4  006F FF8C  F030    	movff	plusw1,btemp+11
 18855  017DEA  0E40               	movlw	64
 18856  017DEC  242F               	addwf	(btemp+10)^0,w,c
 18857  017DEE  6ED9               	movwf	fsr2l,c
 18858  017DF0  0E00               	movlw	0
 18859  017DF2  2030               	addwfc	(btemp+11)^0,w,c
 18860  017DF4  6EDA               	movwf	fsr2h,c
 18861  017DF6  50DF               	movf	indf2,w,c
 18862  017DF8  6E30               	movwf	(btemp+11)^0,c
 18863                           
 18864                           ;stkvar	__this @ sp[(0)+-2]
 18865  017DFA  0EFE               	movlw	-2
 18866  017DFC  006F FF8C  F02D    	movff	plusw1,btemp+8
 18867  017E02  0EFF               	movlw	-1
 18868  017E04  006F FF8C  F02E    	movff	plusw1,btemp+9
 18869  017E0A  5030               	movf	(btemp+11)^0,w,c
 18870  017E0C  242D               	addwf	(btemp+8)^0,w,c
 18871  017E0E  6ED9               	movwf	fsr2l,c
 18872  017E10  0E00               	movlw	0
 18873  017E12  202E               	addwfc	(btemp+9)^0,w,c
 18874  017E14  6EDA               	movwf	fsr2h,c
 18875  017E16  0EFD               	movlw	-3
 18876  017E18  006F FF8F FFDF     	movff	plusw1,indf2
 18877                           
 18878                           ;ringbufs.c: 71:   ++_this->head;
 18879                           ;stkvar	__this @ sp[(0)+-2]
 18880  017E1E  0EFE               	movlw	-2
 18881  017E20  006F FF8C  F02F    	movff	plusw1,btemp+10
 18882  017E26  0EFF               	movlw	-1
 18883  017E28  006F FF8C  F030    	movff	plusw1,btemp+11
 18884  017E2E  0E40               	movlw	64
 18885  017E30  242F               	addwf	(btemp+10)^0,w,c
 18886  017E32  6ED9               	movwf	fsr2l,c
 18887  017E34  0E00               	movlw	0
 18888  017E36  2030               	addwfc	(btemp+11)^0,w,c
 18889  017E38  6EDA               	movwf	fsr2h,c
 18890  017E3A  2ADF               	incf	indf2,f,c
 18891                           
 18892                           ;ringbufs.c: 72:   ++_this->count;
 18893                           ;stkvar	__this @ sp[(0)+-2]
 18894  017E3C  0EFE               	movlw	-2
 18895  017E3E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18896  017E44  0EFF               	movlw	-1
 18897  017E46  006F FF8C  F030    	movff	plusw1,btemp+11
 18898  017E4C  0E42               	movlw	66
 18899  017E4E  242F               	addwf	(btemp+10)^0,w,c
 18900  017E50  6ED9               	movwf	fsr2l,c
 18901  017E52  0E00               	movlw	0
 18902  017E54  2030               	addwfc	(btemp+11)^0,w,c
 18903  017E56  6EDA               	movwf	fsr2h,c
 18904  017E58  2ADF               	incf	indf2,f,c
 18905  017E5A                     l1580:
 18906                           
 18907                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18908  017E5A  52E5               	movf	postdec1,f,c
 18909  017E5C  52E5               	movf	postdec1,f,c
 18910  017E5E  52E5               	movf	postdec1,f,c
 18911  017E60  0012               	return		;funcret
 18912  017E62                     __end_of_ringBufS_put_dma:
 18913                           	opt callstack 0
 18914                           
 18915 ;; *************** function _atoi *****************
 18916 ;; Defined at:
 18917 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18918 ;; Parameters:    Size  Location     Type
 18919 ;;  s               2  [STACK] PTR const unsigned char 
 18920 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18921 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18922 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18923 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18924 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18925 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
 18926 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18927 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18928 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18929 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18930 ;; Auto vars:     Size  Location     Type
 18931 ;;  n               2  [STACK] int 
 18932 ;;  neg             2  [STACK] int 
 18933 ;; Return value:  Size  Location     Type
 18934 ;;                  2  [STACK] int 
 18935 ;; Registers used:
 18936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18937 ;; Tracked objects:
 18938 ;;		On entry : 0/0
 18939 ;;		On exit  : 0/0
 18940 ;;		Unchanged: 0/0
 18941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18946 ;;Total ram usage:        0 bytes
 18947 ;; Hardware stack levels used:    1
 18948 ;; Hardware stack levels required when called:    8
 18949 ;; This function calls:
 18950 ;;		_isdigit
 18951 ;;		_isspace
 18952 ;; This function is called by:
 18953 ;;		_vfpfcnvrt
 18954 ;; This function uses a reentrant model
 18955 ;;
 18956                           
 18957                           	psect	text72
 18958  015BC8                     __ptext72:
 18959                           	opt callstack 0
 18960  015BC8                     _atoi:
 18961                           	opt callstack 0
 18962                           
 18963                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18964  015BC8  0E09               	movlw	9
 18965  015BCA  26E1               	addwf	fsr1l,f,c
 18966  015BCC  0E00               	movlw	0
 18967  015BCE  22E2               	addwfc	fsr1h,f,c
 18968                           
 18969                           ;stkvar	_n @ sp[(-9)+5]
 18970                           
 18971                           ;incstack = 0
 18972  015BD0  0EFC               	movlw	-4
 18973  015BD2  6AE3               	clrf	plusw1,c
 18974  015BD4  0EFD               	movlw	-3
 18975  015BD6  6AE3               	clrf	plusw1,c
 18976                           
 18977                           ;stkvar	_neg @ sp[(-9)+7]
 18978  015BD8  0EFE               	movlw	-2
 18979  015BDA  6AE3               	clrf	plusw1,c
 18980  015BDC  0EFF               	movlw	-1
 18981  015BDE  6AE3               	clrf	plusw1,c
 18982  015BE0  D011               	goto	l7458
 18983  015BE2                     l7456:
 18984                           
 18985                           ;stkvar	_s @ sp[(-9)+-2]
 18986  015BE2  0EF5               	movlw	-11
 18987  015BE4  50E3               	movf	plusw1,w,c
 18988  015BE6  0F01               	addlw	1
 18989  015BE8  6E25               	movwf	btemp^0,c
 18990  015BEA  0EF5               	movlw	-11
 18991  015BEC  0060  F097  FFE3   	movff	btemp,plusw1
 18992  015BF2  6A25               	clrf	btemp^0,c
 18993  015BF4  0EF6               	movlw	-10
 18994  015BF6  50E3               	movf	plusw1,w,c
 18995  015BF8  2025               	addwfc	btemp^0,w,c
 18996  015BFA  6E25               	movwf	btemp^0,c
 18997  015BFC  0EF6               	movlw	-10
 18998  015BFE  0060  F097  FFE3   	movff	btemp,plusw1
 18999  015C04                     l7458:
 19000                           
 19001                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19002  015C04  0EFB               	movlw	-5
 19003  015C06  6AE3               	clrf	plusw1,c
 19004  015C08  2AE3               	incf	plusw1,f,c
 19005                           
 19006                           ;stkvar	_s @ sp[(-9)+-2]
 19007  015C0A  50E1               	movf	fsr1l,w,c
 19008  015C0C  0FF5               	addlw	-11
 19009  015C0E  6ED9               	movwf	fsr2l,c
 19010  015C10  50E2               	movf	fsr1h,w,c
 19011  015C12  6EDA               	movwf	fsr2h,c
 19012  015C14  0EFF               	movlw	255
 19013  015C16  22DA               	addwfc	fsr2h,f,c
 19014  015C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 19015  015C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19016  015C24                     	if	0	;tblptru may be non-zero
 19017  015C24                     	endif
 19018  015C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19019  015C24  0E00               	movlw	low (__mediumconst shr (0+16))
 19020  015C26  6EF8               	movwf	tblptru,c
 19021  015C28                     	endif
 19022  015C28  0008               	tblrd		*
 19023  015C2A  50F5               	movf	tablat,w,c
 19024  015C2C  0A20               	xorlw	32
 19025  015C2E  B4D8               	btfsc	status,2,c
 19026  015C30  D023               	goto	l7466
 19027  015C32  0EF7               	movlw	247
 19028  015C34  6E2F               	movwf	(btemp+10)^0,c
 19029  015C36  0EFF               	movlw	255
 19030  015C38  6E30               	movwf	(btemp+11)^0,c
 19031                           
 19032                           ;stkvar	_s @ sp[(-9)+-2]
 19033  015C3A  50E1               	movf	fsr1l,w,c
 19034  015C3C  0FF5               	addlw	-11
 19035  015C3E  6ED9               	movwf	fsr2l,c
 19036  015C40  50E2               	movf	fsr1h,w,c
 19037  015C42  6EDA               	movwf	fsr2h,c
 19038  015C44  0EFF               	movlw	255
 19039  015C46  22DA               	addwfc	fsr2h,f,c
 19040  015C48  006F FF7B FFF6     	movff	postinc2,tblptrl
 19041  015C4E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19042  015C54                     	if	0	;tblptru may be non-zero
 19043  015C54                     	endif
 19044  015C54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19045  015C54  0E00               	movlw	low (__mediumconst shr (0+16))
 19046  015C56  6EF8               	movwf	tblptru,c
 19047  015C58                     	endif
 19048  015C58  0008               	tblrd		*
 19049  015C5A  50F5               	movf	tablat,w,c
 19050  015C5C  6E2D               	movwf	(btemp+8)^0,c
 19051  015C5E  6A2E               	clrf	(btemp+9)^0,c
 19052  015C60  502F               	movf	(btemp+10)^0,w,c
 19053  015C62  262D               	addwf	(btemp+8)^0,f,c
 19054  015C64  5030               	movf	(btemp+11)^0,w,c
 19055  015C66  222E               	addwfc	(btemp+9)^0,f,c
 19056  015C68  502E               	movf	(btemp+9)^0,w,c
 19057  015C6A  E104               	bnz	u6510
 19058  015C6C  0E05               	movlw	5
 19059  015C6E  5C2D               	subwf	(btemp+8)^0,w,c
 19060  015C70  A0D8               	btfss	status,0,c
 19061  015C72  D002               	goto	l7466
 19062  015C74                     u6510:
 19063                           
 19064                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19065  015C74  0EFB               	movlw	-5
 19066  015C76  6AE3               	clrf	plusw1,c
 19067  015C78                     l7466:
 19068                           
 19069                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19070  015C78  0EFB               	movlw	-5
 19071  015C7A  50E3               	movf	plusw1,w,c
 19072  015C7C  6E2F               	movwf	(btemp+10)^0,c
 19073  015C7E  6A30               	clrf	(btemp+11)^0,c
 19074                           
 19075                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19076  015C80  0EF9               	movlw	-7
 19077  015C82  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19078  015C88  0EFA               	movlw	-6
 19079  015C8A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19080                           
 19081                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19082  015C90  0EF9               	movlw	-7
 19083  015C92  006F FF8C  F025    	movff	plusw1,btemp
 19084  015C98  0EFA               	movlw	-6
 19085  015C9A  50E3               	movf	plusw1,w,c
 19086  015C9C  1025               	iorwf	btemp^0,w,c
 19087  015C9E  B4D8               	btfsc	status,2,c
 19088  015CA0  D01F               	goto	l7476
 19089  015CA2  D79F               	goto	l7456
 19090  015CA4                     l7472:
 19091  015CA4  0E01               	movlw	1
 19092  015CA6  6E2F               	movwf	(btemp+10)^0,c
 19093  015CA8  0E00               	movlw	0
 19094  015CAA  6E30               	movwf	(btemp+11)^0,c
 19095                           
 19096                           ;stkvar	_neg @ sp[(-9)+7]
 19097  015CAC  0EFE               	movlw	-2
 19098  015CAE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19099  015CB4  0EFF               	movlw	-1
 19100  015CB6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19101  015CBC                     l7474:
 19102                           
 19103                           ;stkvar	_s @ sp[(-9)+-2]
 19104  015CBC  0EF5               	movlw	-11
 19105  015CBE  50E3               	movf	plusw1,w,c
 19106  015CC0  0F01               	addlw	1
 19107  015CC2  6E25               	movwf	btemp^0,c
 19108  015CC4  0EF5               	movlw	-11
 19109  015CC6  0060  F097  FFE3   	movff	btemp,plusw1
 19110  015CCC  6A25               	clrf	btemp^0,c
 19111  015CCE  0EF6               	movlw	-10
 19112  015CD0  50E3               	movf	plusw1,w,c
 19113  015CD2  2025               	addwfc	btemp^0,w,c
 19114  015CD4  6E25               	movwf	btemp^0,c
 19115  015CD6  0EF6               	movlw	-10
 19116  015CD8  0060  F097  FFE3   	movff	btemp,plusw1
 19117  015CDE  D053               	goto	l7482
 19118  015CE0                     l7476:
 19119                           
 19120                           ;stkvar	_s @ sp[(-9)+-2]
 19121  015CE0  50E1               	movf	fsr1l,w,c
 19122  015CE2  0FF5               	addlw	-11
 19123  015CE4  6ED9               	movwf	fsr2l,c
 19124  015CE6  50E2               	movf	fsr1h,w,c
 19125  015CE8  6EDA               	movwf	fsr2h,c
 19126  015CEA  0EFF               	movlw	255
 19127  015CEC  22DA               	addwfc	fsr2h,f,c
 19128  015CEE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19129  015CF4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19130  015CFA                     	if	0	;tblptru may be non-zero
 19131  015CFA                     	endif
 19132  015CFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19133  015CFA  0E00               	movlw	low (__mediumconst shr (0+16))
 19134  015CFC  6EF8               	movwf	tblptru,c
 19135  015CFE                     	endif
 19136  015CFE  0008               	tblrd		*
 19137  015D00  50F5               	movf	tablat,w,c
 19138  015D02  6E2F               	movwf	(btemp+10)^0,c
 19139  015D04  6A30               	clrf	(btemp+11)^0,c
 19140                           
 19141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19142                           ; Switch size 1, requested type "simple"
 19143                           ; Number of cases is 1, Range of values is 0 to 0
 19144                           ; switch strategies available:
 19145                           ; Name         Instructions Cycles
 19146                           ; simple_byte            4     3 (average)
 19147                           ;	Chosen strategy is simple_byte
 19148  015D06  5030               	movf	(btemp+11)^0,w,c
 19149  015D08  0A00               	xorlw	0	; case 0
 19150  015D0A  A4D8               	btfss	status,2,c
 19151  015D0C  D03C               	goto	l7482
 19152                           
 19153                           ; Switch size 1, requested type "simple"
 19154                           ; Number of cases is 2, Range of values is 43 to 45
 19155                           ; switch strategies available:
 19156                           ; Name         Instructions Cycles
 19157                           ; simple_byte            7     4 (average)
 19158                           ;	Chosen strategy is simple_byte
 19159  015D0E  502F               	movf	(btemp+10)^0,w,c
 19160  015D10  0A2B               	xorlw	43	; case 43
 19161  015D12  B4D8               	btfsc	status,2,c
 19162  015D14  D7D3               	goto	l7474
 19163  015D16  0A06               	xorlw	6	; case 45
 19164  015D18  B4D8               	btfsc	status,2,c
 19165  015D1A  D7C4               	goto	l7472
 19166  015D1C  D034               	goto	l7482
 19167  015D1E                     l7478:
 19168                           
 19169                           ;stkvar	_n @ sp[(-9)+5]
 19170  015D1E  0EFC               	movlw	-4
 19171  015D20  006F FF8C  F02F    	movff	plusw1,btemp+10
 19172  015D26  0EFD               	movlw	-3
 19173  015D28  006F FF8C  F030    	movff	plusw1,btemp+11
 19174  015D2E  0E0A               	movlw	10
 19175  015D30  022F               	mulwf	(btemp+10)^0,c
 19176  015D32  006F FFCC  F02D    	movff	prodl,btemp+8
 19177  015D38  006F FFD0  F02E    	movff	prodh,btemp+9
 19178  015D3E  0230               	mulwf	(btemp+11)^0,c
 19179  015D40  50F3               	movf	prodl,w,c
 19180  015D42  262E               	addwf	(btemp+9)^0,f,c
 19181                           
 19182                           ;stkvar	_s @ sp[(-9)+-2]
 19183  015D44  50E1               	movf	fsr1l,w,c
 19184  015D46  0FF5               	addlw	-11
 19185  015D48  6ED9               	movwf	fsr2l,c
 19186  015D4A  50E2               	movf	fsr1h,w,c
 19187  015D4C  6EDA               	movwf	fsr2h,c
 19188  015D4E  0EFF               	movlw	255
 19189  015D50  22DA               	addwfc	fsr2h,f,c
 19190  015D52  006F FF7B FFF6     	movff	postinc2,tblptrl
 19191  015D58  006F FF77 FFF7     	movff	postdec2,tblptrh
 19192  015D5E                     	if	0	;tblptru may be non-zero
 19193  015D5E                     	endif
 19194  015D5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19195  015D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 19196  015D60  6EF8               	movwf	tblptru,c
 19197  015D62                     	endif
 19198  015D62  0008               	tblrd		*
 19199  015D64  50F5               	movf	tablat,w,c
 19200  015D66  5E2D               	subwf	(btemp+8)^0,f,c
 19201  015D68  0E00               	movlw	0
 19202  015D6A  5A2E               	subwfb	(btemp+9)^0,f,c
 19203  015D6C  0E30               	movlw	48
 19204  015D6E  262D               	addwf	(btemp+8)^0,f,c
 19205  015D70  0E00               	movlw	0
 19206  015D72  222E               	addwfc	(btemp+9)^0,f,c
 19207                           
 19208                           ;stkvar	_n @ sp[(-9)+5]
 19209  015D74  0EFC               	movlw	-4
 19210  015D76  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 19211  015D7C  0EFD               	movlw	-3
 19212  015D7E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 19213  015D84  D79B               	goto	l7474
 19214  015D86                     l7482:
 19215  015D86  0ED0               	movlw	208
 19216  015D88  6E2F               	movwf	(btemp+10)^0,c
 19217  015D8A  0EFF               	movlw	255
 19218  015D8C  6E30               	movwf	(btemp+11)^0,c
 19219                           
 19220                           ;stkvar	_s @ sp[(-9)+-2]
 19221  015D8E  50E1               	movf	fsr1l,w,c
 19222  015D90  0FF5               	addlw	-11
 19223  015D92  6ED9               	movwf	fsr2l,c
 19224  015D94  50E2               	movf	fsr1h,w,c
 19225  015D96  6EDA               	movwf	fsr2h,c
 19226  015D98  0EFF               	movlw	255
 19227  015D9A  22DA               	addwfc	fsr2h,f,c
 19228  015D9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19229  015DA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19230  015DA8                     	if	0	;tblptru may be non-zero
 19231  015DA8                     	endif
 19232  015DA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19233  015DA8  0E00               	movlw	low (__mediumconst shr (0+16))
 19234  015DAA  6EF8               	movwf	tblptru,c
 19235  015DAC                     	endif
 19236  015DAC  0008               	tblrd		*
 19237  015DAE  50F5               	movf	tablat,w,c
 19238  015DB0  6E2D               	movwf	(btemp+8)^0,c
 19239  015DB2  6A2E               	clrf	(btemp+9)^0,c
 19240  015DB4  502F               	movf	(btemp+10)^0,w,c
 19241  015DB6  262D               	addwf	(btemp+8)^0,f,c
 19242  015DB8  5030               	movf	(btemp+11)^0,w,c
 19243  015DBA  222E               	addwfc	(btemp+9)^0,f,c
 19244  015DBC  502E               	movf	(btemp+9)^0,w,c
 19245  015DBE  E106               	bnz	u6530
 19246  015DC0  0E0A               	movlw	10
 19247  015DC2  5C2D               	subwf	(btemp+8)^0,w,c
 19248  015DC4  B0D8               	btfsc	status,0,c
 19249  015DC6  D002               	goto	u6530
 19250  015DC8  0E01               	movlw	1
 19251  015DCA  D001               	goto	u6540
 19252  015DCC                     u6530:
 19253  015DCC  0E00               	movlw	0
 19254  015DCE                     u6540:
 19255  015DCE  6E2F               	movwf	(btemp+10)^0,c
 19256  015DD0  6A30               	clrf	(btemp+11)^0,c
 19257                           
 19258                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19259  015DD2  0EF7               	movlw	-9
 19260  015DD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19261  015DDA  0EF8               	movlw	-8
 19262  015DDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19263                           
 19264                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19265  015DE2  0EF7               	movlw	-9
 19266  015DE4  006F FF8C  F025    	movff	plusw1,btemp
 19267  015DEA  0EF8               	movlw	-8
 19268  015DEC  50E3               	movf	plusw1,w,c
 19269  015DEE  1025               	iorwf	btemp^0,w,c
 19270  015DF0  A4D8               	btfss	status,2,c
 19271  015DF2  D795               	goto	l7478
 19272                           
 19273                           ;stkvar	_neg @ sp[(-9)+7]
 19274  015DF4  0EFE               	movlw	-2
 19275  015DF6  006F FF8C  F025    	movff	plusw1,btemp
 19276  015DFC  0EFF               	movlw	-1
 19277  015DFE  50E3               	movf	plusw1,w,c
 19278  015E00  1025               	iorwf	btemp^0,w,c
 19279  015E02  A4D8               	btfss	status,2,c
 19280  015E04  D00E               	goto	l7492
 19281                           
 19282                           ;stkvar	_n @ sp[(-9)+5]
 19283  015E06  0EFC               	movlw	-4
 19284  015E08  006F FF8C  F025    	movff	plusw1,btemp
 19285  015E0E  1E25               	comf	btemp^0,f,c
 19286  015E10  0EFD               	movlw	-3
 19287  015E12  006F FF8C  F026    	movff	plusw1,btemp+1
 19288  015E18  1E26               	comf	(btemp+1)^0,f,c
 19289  015E1A  2A25               	incf	btemp^0,f,c
 19290  015E1C  B4D8               	btfsc	status,2,c
 19291  015E1E  2A26               	incf	(btemp+1)^0,f,c
 19292  015E20  D008               	goto	l2945
 19293  015E22                     l7492:
 19294                           
 19295                           ;stkvar	_n @ sp[(-9)+5]
 19296  015E22  0EFC               	movlw	-4
 19297  015E24  006F FF8C  F025    	movff	plusw1,btemp
 19298  015E2A  0EFD               	movlw	-3
 19299  015E2C  006F FF8C  F026    	movff	plusw1,btemp+1
 19300  015E32                     l2945:
 19301                           
 19302                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19303  015E32  0EF5               	movlw	245
 19304  015E34  26E1               	addwf	fsr1l,f,c
 19305  015E36  0EFF               	movlw	255
 19306  015E38  22E2               	addwfc	fsr1h,f,c
 19307  015E3A  0012               	return		;funcret
 19308  015E3C                     __end_of_atoi:
 19309                           	opt callstack 0
 19310                           
 19311 ;; *************** function _isspace *****************
 19312 ;; Defined at:
 19313 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;  c               2  [STACK] int 
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;		None
 19318 ;; Return value:  Size  Location     Type
 19319 ;;                  2  [STACK] int 
 19320 ;; Registers used:
 19321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19322 ;; Tracked objects:
 19323 ;;		On entry : 0/0
 19324 ;;		On exit  : 0/0
 19325 ;;		Unchanged: 0/0
 19326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19331 ;;Total ram usage:        0 bytes
 19332 ;; Hardware stack levels used:    1
 19333 ;; Hardware stack levels required when called:    7
 19334 ;; This function calls:
 19335 ;;		Nothing
 19336 ;; This function is called by:
 19337 ;;		_atoi
 19338 ;; This function uses a reentrant model
 19339 ;;
 19340                           
 19341                           	psect	text73
 19342  0188F4                     __ptext73:
 19343                           	opt callstack 0
 19344  0188F4                     _isspace:
 19345                           	opt callstack 0
 19346                           
 19347                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19348  0188F4  52E6               	movf	postinc1,f,c
 19349                           
 19350                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19351                           
 19352                           ;incstack = 0
 19353  0188F6  0EFF               	movlw	-1
 19354  0188F8  6AE3               	clrf	plusw1,c
 19355  0188FA  2AE3               	incf	plusw1,f,c
 19356                           
 19357                           ;stkvar	_c @ sp[(-1)+-2]
 19358  0188FC  0EFD               	movlw	-3
 19359  0188FE  006F FF8C  F025    	movff	plusw1,btemp
 19360  018904  0E20               	movlw	32
 19361  018906  1825               	xorwf	btemp^0,w,c
 19362  018908  E104               	bnz	u5500
 19363  01890A  0EFE               	movlw	-2
 19364  01890C  50E3               	movf	plusw1,w,c
 19365  01890E  B4D8               	btfsc	status,2,c
 19366  018910  D012               	goto	l6942
 19367  018912                     u5500:
 19368                           
 19369                           ;stkvar	_c @ sp[(-1)+-2]
 19370  018912  0EFD               	movlw	-3
 19371  018914  50E3               	movf	plusw1,w,c
 19372  018916  0FF7               	addlw	247
 19373  018918  6E2F               	movwf	(btemp+10)^0,c
 19374  01891A  0EFE               	movlw	-2
 19375  01891C  006F FF8C  F030    	movff	plusw1,btemp+11
 19376  018922  0EFF               	movlw	255
 19377  018924  2230               	addwfc	(btemp+11)^0,f,c
 19378  018926  5030               	movf	(btemp+11)^0,w,c
 19379  018928  E104               	bnz	u5510
 19380  01892A  0E05               	movlw	5
 19381  01892C  5C2F               	subwf	(btemp+10)^0,w,c
 19382  01892E  A0D8               	btfss	status,0,c
 19383  018930  D002               	goto	l6942
 19384  018932                     u5510:
 19385                           
 19386                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19387  018932  0EFF               	movlw	-1
 19388  018934  6AE3               	clrf	plusw1,c
 19389  018936                     l6942:
 19390                           
 19391                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19392  018936  0EFF               	movlw	-1
 19393  018938  50E3               	movf	plusw1,w,c
 19394  01893A  6E25               	movwf	btemp^0,c
 19395  01893C  6A26               	clrf	(btemp+1)^0,c
 19396                           
 19397                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19398  01893E  52E5               	movf	postdec1,f,c
 19399  018940  52E5               	movf	postdec1,f,c
 19400  018942  52E5               	movf	postdec1,f,c
 19401  018944  0012               	return		;funcret
 19402  018946                     __end_of_isspace:
 19403                           	opt callstack 0
 19404                           
 19405 ;; *************** function _isdigit *****************
 19406 ;; Defined at:
 19407 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19408 ;; Parameters:    Size  Location     Type
 19409 ;;  c               2  [STACK] int 
 19410 ;; Auto vars:     Size  Location     Type
 19411 ;;		None
 19412 ;; Return value:  Size  Location     Type
 19413 ;;                  2  [STACK] int 
 19414 ;; Registers used:
 19415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19416 ;; Tracked objects:
 19417 ;;		On entry : 0/0
 19418 ;;		On exit  : 0/0
 19419 ;;		Unchanged: 0/0
 19420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19425 ;;Total ram usage:        0 bytes
 19426 ;; Hardware stack levels used:    1
 19427 ;; Hardware stack levels required when called:    7
 19428 ;; This function calls:
 19429 ;;		Nothing
 19430 ;; This function is called by:
 19431 ;;		_vfpfcnvrt
 19432 ;;		_atoi
 19433 ;; This function uses a reentrant model
 19434 ;;
 19435                           
 19436                           	psect	text74
 19437  018ED8                     __ptext74:
 19438                           	opt callstack 0
 19439  018ED8                     _isdigit:
 19440                           	opt callstack 17
 19441                           
 19442                           ;stkvar	_c @ sp[(0)+-2]
 19443                           
 19444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19445                           ;incstack = 0
 19446  018ED8  0EFE               	movlw	-2
 19447  018EDA  50E3               	movf	plusw1,w,c
 19448  018EDC  0FD0               	addlw	208
 19449  018EDE  6E2F               	movwf	(btemp+10)^0,c
 19450  018EE0  0EFF               	movlw	-1
 19451  018EE2  006F FF8C  F030    	movff	plusw1,btemp+11
 19452  018EE8  0EFF               	movlw	255
 19453  018EEA  2230               	addwfc	(btemp+11)^0,f,c
 19454  018EEC  5030               	movf	(btemp+11)^0,w,c
 19455  018EEE  E106               	bnz	u5100
 19456  018EF0  0E0A               	movlw	10
 19457  018EF2  5C2F               	subwf	(btemp+10)^0,w,c
 19458  018EF4  B0D8               	btfsc	status,0,c
 19459  018EF6  D002               	goto	u5100
 19460  018EF8  0E01               	movlw	1
 19461  018EFA  D001               	goto	u5110
 19462  018EFC                     u5100:
 19463  018EFC  0E00               	movlw	0
 19464  018EFE                     u5110:
 19465  018EFE  6E25               	movwf	btemp^0,c
 19466  018F00  6A26               	clrf	(btemp+1)^0,c
 19467                           
 19468                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19469  018F02  52E5               	movf	postdec1,f,c
 19470  018F04  52E5               	movf	postdec1,f,c
 19471  018F06  0012               	return		;funcret
 19472  018F08                     __end_of_isdigit:
 19473                           	opt callstack 0
 19474                           
 19475 ;; *************** function _set_vterm *****************
 19476 ;; Defined at:
 19477 ;;		line 107 in file "mconfig.c"
 19478 ;; Parameters:    Size  Location     Type
 19479 ;;  vterm           1  [STACK] const unsigned char 
 19480 ;; Auto vars:     Size  Location     Type
 19481 ;;		None
 19482 ;; Return value:  Size  Location     Type
 19483 ;;                  1  [STACK] unsigned char 
 19484 ;; Registers used:
 19485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19486 ;; Tracked objects:
 19487 ;;		On entry : 0/1
 19488 ;;		On exit  : 0/0
 19489 ;;		Unchanged: 0/0
 19490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19495 ;;Total ram usage:        0 bytes
 19496 ;; Hardware stack levels used:    1
 19497 ;; Hardware stack levels required when called:    7
 19498 ;; This function calls:
 19499 ;;		Nothing
 19500 ;; This function is called by:
 19501 ;;		_main
 19502 ;;		_check_help
 19503 ;; This function uses a reentrant model
 19504 ;;
 19505                           
 19506                           	psect	text75
 19507  019480                     __ptext75:
 19508                           	opt callstack 0
 19509  019480                     _set_vterm:
 19510                           	opt callstack 23
 19511                           
 19512                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19513                           ;stkvar	_vterm @ sp[(0)+-1]
 19514                           
 19515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19516                           ;incstack = 0
 19517  019480  0EFF               	movlw	-1
 19518  019482  006F FF8C  F030    	movff	plusw1,btemp+11
 19519  019488  0E03               	movlw	3
 19520  01948A  1630               	andwf	(btemp+11)^0,f,c
 19521  01948C  EE22  F01F         	lfsr	2,_D+288
 19522  019490  50DF               	movf	223,w,c
 19523  019492  1830               	xorwf	(btemp+11)^0,w,c
 19524  019494  0BFE               	andlw	-2
 19525  019496  1830               	xorwf	(btemp+11)^0,w,c
 19526  019498  6EDF               	movwf	223,c
 19527                           
 19528                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19529  01949A  52E5               	movf	postdec1,f,c
 19530  01949C  0012               	return		;funcret
 19531  01949E                     __end_of_set_vterm:
 19532                           	opt callstack 0
 19533                           
 19534 ;; *************** function _set_temp_display_help *****************
 19535 ;; Defined at:
 19536 ;;		line 211 in file "mconfig.c"
 19537 ;; Parameters:    Size  Location     Type
 19538 ;;  new_response    1  [STACK] const enum E16518
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;		None
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  1  [STACK] enum E16518
 19543 ;; Registers used:
 19544 ;;		wreg, fsr1l, fsr1h
 19545 ;; Tracked objects:
 19546 ;;		On entry : 0/2
 19547 ;;		On exit  : 3F/2
 19548 ;;		Unchanged: 0/0
 19549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19554 ;;Total ram usage:        0 bytes
 19555 ;; Hardware stack levels used:    1
 19556 ;; Hardware stack levels required when called:    7
 19557 ;; This function calls:
 19558 ;;		Nothing
 19559 ;; This function is called by:
 19560 ;;		_check_help
 19561 ;; This function uses a reentrant model
 19562 ;;
 19563                           
 19564                           	psect	text76
 19565  0195F4                     __ptext76:
 19566                           	opt callstack 0
 19567  0195F4                     _set_temp_display_help:
 19568                           	opt callstack 22
 19569                           
 19570                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19571                           
 19572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19573                           ;incstack = 0
 19574  0195F4  0102               	movlb	2	; () banked
 19575  0195F6  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19576                           
 19577                           ; BSR set to: 2
 19578                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19579                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19580  0195F8  0EFF               	movlw	-1
 19581  0195FA  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19582                           
 19583                           ; BSR set to: 2
 19584                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19585  019600  52E5               	movf	postdec1,f,c
 19586  019602  0012               	return		;funcret
 19587  019604                     __end_of_set_temp_display_help:
 19588                           	opt callstack 0
 19589                           
 19590 ;; *************** function _set_display_info *****************
 19591 ;; Defined at:
 19592 ;;		line 200 in file "mconfig.c"
 19593 ;; Parameters:    Size  Location     Type
 19594 ;;  new_response    1  [STACK] const enum E16518
 19595 ;; Auto vars:     Size  Location     Type
 19596 ;;		None
 19597 ;; Return value:  Size  Location     Type
 19598 ;;                  1  [STACK] enum E17003
 19599 ;; Registers used:
 19600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19601 ;; Tracked objects:
 19602 ;;		On entry : 0/1
 19603 ;;		On exit  : 0/0
 19604 ;;		Unchanged: 0/0
 19605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19610 ;;Total ram usage:        0 bytes
 19611 ;; Hardware stack levels used:    1
 19612 ;; Hardware stack levels required when called:    8
 19613 ;; This function calls:
 19614 ;;		_TimerDone
 19615 ;; This function is called by:
 19616 ;;		_main
 19617 ;;		_check_help
 19618 ;; This function uses a reentrant model
 19619 ;;
 19620                           
 19621                           	psect	text77
 19622  01949E                     __ptext77:
 19623                           	opt callstack 0
 19624  01949E                     _set_display_info:
 19625                           	opt callstack 22
 19626                           
 19627                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19628                           
 19629                           ; BSR set to: 2
 19630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19631                           ;incstack = 0
 19632  01949E  0E07               	movlw	7
 19633  0194A0  6EE6               	movwf	postinc1,c
 19634  0194A2  EC43  F0C8         	call	_TimerDone	;wreg free
 19635  0194A6  5025               	movf	btemp^0,w,c
 19636  0194A8  B4D8               	btfsc	status,2,c
 19637  0194AA  D006               	goto	l1717
 19638                           
 19639                           ;mconfig.c: 205:   old_info = V.response.info;
 19640  0194AC  0102               	movlb	2	; () banked
 19641  0194AE  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19642                           
 19643                           ; BSR set to: 2
 19644                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19645                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19646  0194B0  0EFF               	movlw	-1
 19647  0194B2  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19648  0194B8                     l1717:
 19649                           
 19650                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19651  0194B8  52E5               	movf	postdec1,f,c
 19652  0194BA  0012               	return		;funcret
 19653  0194BC                     __end_of_set_display_info:
 19654                           	opt callstack 0
 19655                           
 19656 ;; *************** function _mode_lamp_dim *****************
 19657 ;; Defined at:
 19658 ;;		line 13 in file "mconfig.c"
 19659 ;; Parameters:    Size  Location     Type
 19660 ;;  level           2  [STACK] const unsigned short 
 19661 ;; Auto vars:     Size  Location     Type
 19662 ;;		None
 19663 ;; Return value:  Size  Location     Type
 19664 ;;                  1  [STACK] void 
 19665 ;; Registers used:
 19666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19667 ;; Tracked objects:
 19668 ;;		On entry : 0/2
 19669 ;;		On exit  : 0/0
 19670 ;;		Unchanged: 0/0
 19671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19676 ;;Total ram usage:        0 bytes
 19677 ;; Hardware stack levels used:    1
 19678 ;; Hardware stack levels required when called:    8
 19679 ;; This function calls:
 19680 ;;		_PWM8_LoadDutyValue
 19681 ;; This function is called by:
 19682 ;;		_main
 19683 ;;		_check_help
 19684 ;; This function uses a reentrant model
 19685 ;;
 19686                           
 19687                           	psect	text78
 19688  01954A                     __ptext78:
 19689                           	opt callstack 0
 19690  01954A                     _mode_lamp_dim:
 19691                           	opt callstack 22
 19692                           
 19693                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19694                           ;stkvar	_level @ sp[(0)+-2]
 19695                           
 19696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19697                           ;incstack = 0
 19698  01954A  0EFE               	movlw	-2
 19699  01954C  006F FF8F FFE6     	movff	plusw1,postinc1
 19700  019552  006F FF8F FFE6     	movff	plusw1,postinc1
 19701  019558  ECC1  F0C5         	call	_PWM8_LoadDutyValue	;wreg free
 19702                           
 19703                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19704  01955C  52E5               	movf	postdec1,f,c
 19705  01955E  52E5               	movf	postdec1,f,c
 19706  019560  0012               	return		;funcret
 19707  019562                     __end_of_mode_lamp_dim:
 19708                           	opt callstack 0
 19709                           
 19710 ;; *************** function _mode_lamp_bright *****************
 19711 ;; Defined at:
 19712 ;;		line 18 in file "mconfig.c"
 19713 ;; Parameters:    Size  Location     Type
 19714 ;;		None
 19715 ;; Auto vars:     Size  Location     Type
 19716 ;;		None
 19717 ;; Return value:  Size  Location     Type
 19718 ;;                  1  [STACK] void 
 19719 ;; Registers used:
 19720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19721 ;; Tracked objects:
 19722 ;;		On entry : 0/0
 19723 ;;		On exit  : 0/0
 19724 ;;		Unchanged: 0/0
 19725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19730 ;;Total ram usage:        0 bytes
 19731 ;; Hardware stack levels used:    1
 19732 ;; Hardware stack levels required when called:    8
 19733 ;; This function calls:
 19734 ;;		_PWM8_LoadDutyValue
 19735 ;; This function is called by:
 19736 ;;		_check_help
 19737 ;; This function uses a reentrant model
 19738 ;;
 19739                           
 19740                           	psect	text79
 19741  019612                     __ptext79:
 19742                           	opt callstack 0
 19743  019612                     _mode_lamp_bright:
 19744                           	opt callstack 21
 19745                           
 19746                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19747                           
 19748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19749                           ;incstack = 0
 19750  019612  0E2C               	movlw	44
 19751  019614  6EE6               	movwf	postinc1,c
 19752  019616  0E01               	movlw	1
 19753  019618  6EE6               	movwf	postinc1,c
 19754  01961A  ECC1  F0C5         	call	_PWM8_LoadDutyValue	;wreg free
 19755                           
 19756                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19757  01961E  0012               	return		;funcret
 19758  019620                     __end_of_mode_lamp_bright:
 19759                           	opt callstack 0
 19760                           
 19761 ;; *************** function _PWM8_LoadDutyValue *****************
 19762 ;; Defined at:
 19763 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19764 ;; Parameters:    Size  Location     Type
 19765 ;;  dutyValue       2  [STACK] unsigned short 
 19766 ;; Auto vars:     Size  Location     Type
 19767 ;;		None
 19768 ;; Return value:  Size  Location     Type
 19769 ;;                  1  [STACK] void 
 19770 ;; Registers used:
 19771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19772 ;; Tracked objects:
 19773 ;;		On entry : 0/2
 19774 ;;		On exit  : 0/0
 19775 ;;		Unchanged: 0/0
 19776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19781 ;;Total ram usage:        0 bytes
 19782 ;; Hardware stack levels used:    1
 19783 ;; Hardware stack levels required when called:    7
 19784 ;; This function calls:
 19785 ;;		Nothing
 19786 ;; This function is called by:
 19787 ;;		_mode_lamp_dim
 19788 ;;		_mode_lamp_bright
 19789 ;; This function uses a reentrant model
 19790 ;;
 19791                           
 19792                           	psect	text80
 19793  018B82                     __ptext80:
 19794                           	opt callstack 0
 19795  018B82                     _PWM8_LoadDutyValue:
 19796                           	opt callstack 22
 19797                           
 19798                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19799                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19800                           
 19801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19802                           ;incstack = 0
 19803  018B82  0EFE               	movlw	-2
 19804  018B84  006F FF8C  F02F    	movff	plusw1,btemp+10
 19805  018B8A  0EFF               	movlw	-1
 19806  018B8C  006F FF8C  F030    	movff	plusw1,btemp+11
 19807  018B92  90D8               	bcf	status,0,c
 19808  018B94  3230               	rrcf	(btemp+11)^0,f,c
 19809  018B96  322F               	rrcf	(btemp+10)^0,f,c
 19810  018B98  90D8               	bcf	status,0,c
 19811  018B9A  3230               	rrcf	(btemp+11)^0,f,c
 19812  018B9C  322F               	rrcf	(btemp+10)^0,f,c
 19813  018B9E  502F               	movf	(btemp+10)^0,w,c
 19814  018BA0  6E61               	movwf	97,c	;volatile
 19815                           
 19816                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19817                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19818  018BA2  0EFE               	movlw	-2
 19819  018BA4  006F FF8C  F030    	movff	plusw1,btemp+11
 19820  018BAA  0E03               	movlw	3
 19821  018BAC  1630               	andwf	(btemp+11)^0,f,c
 19822  018BAE  0E06               	movlw	6
 19823  018BB0  6E25               	movwf	btemp^0,c
 19824  018BB2                     u6995:
 19825  018BB2  90D8               	bcf	status,0,c
 19826  018BB4  3630               	rlcf	(btemp+11)^0,f,c
 19827  018BB6  2E25               	decfsz	btemp^0,f,c
 19828  018BB8  D7FC               	goto	u6995
 19829  018BBA  5030               	movf	(btemp+11)^0,w,c
 19830  018BBC  6E60               	movwf	96,c	;volatile
 19831                           
 19832                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19833  018BBE  52E5               	movf	postdec1,f,c
 19834  018BC0  52E5               	movf	postdec1,f,c
 19835  018BC2  0012               	return		;funcret
 19836  018BC4                     __end_of_PWM8_LoadDutyValue:
 19837                           	opt callstack 0
 19838                           
 19839 ;; *************** function _help_button *****************
 19840 ;; Defined at:
 19841 ;;		line 26 in file "mconfig.c"
 19842 ;; Parameters:    Size  Location     Type
 19843 ;;		None
 19844 ;; Auto vars:     Size  Location     Type
 19845 ;;		None
 19846 ;; Return value:  Size  Location     Type
 19847 ;;                  1  [STACK] _Bool 
 19848 ;; Registers used:
 19849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19850 ;; Tracked objects:
 19851 ;;		On entry : 0/2
 19852 ;;		On exit  : 0/0
 19853 ;;		Unchanged: 0/0
 19854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19859 ;;Total ram usage:        0 bytes
 19860 ;; Hardware stack levels used:    1
 19861 ;; Hardware stack levels required when called:    8
 19862 ;; This function calls:
 19863 ;;		_StartTimer
 19864 ;;		_TimerDone
 19865 ;; This function is called by:
 19866 ;;		_check_help
 19867 ;; This function uses a reentrant model
 19868 ;;
 19869                           
 19870                           	psect	text81
 19871  018D02                     __ptext81:
 19872                           	opt callstack 0
 19873  018D02                     _help_button:
 19874                           	opt callstack 21
 19875                           
 19876                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19877                           
 19878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19879                           ;incstack = 0
 19880  018D02  B0CB               	btfsc	203,0,c	;volatile
 19881  018D04  D00C               	goto	l1660
 19882                           
 19883                           ;mconfig.c: 29:   V.help = 1;
 19884  018D06  0102               	movlb	2	; () banked
 19885  018D08  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19886                           
 19887                           ; BSR set to: 2
 19888                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19889  018D0A  0E08               	movlw	8
 19890  018D0C  6EE6               	movwf	postinc1,c
 19891  018D0E  EC43  F0C8         	call	_TimerDone	;wreg free
 19892  018D12  5025               	movf	btemp^0,w,c
 19893  018D14  B4D8               	btfsc	status,2,c
 19894  018D16  D003               	goto	l1660
 19895                           
 19896                           ;mconfig.c: 31:    return 1;
 19897  018D18  0E01               	movlw	1
 19898  018D1A  6E25               	movwf	btemp^0,c
 19899  018D1C  0012               	return	
 19900  018D1E                     l1660:
 19901                           
 19902                           ;mconfig.c: 34:  if (!V.help)
 19903  018D1E  0102               	movlb	2	; () banked
 19904  018D20  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19905  018D22  D008               	goto	l9050
 19906                           
 19907                           ; BSR set to: 2
 19908                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19909  018D24  0E2C               	movlw	44
 19910  018D26  6EE6               	movwf	postinc1,c
 19911  018D28  0E01               	movlw	1
 19912  018D2A  6EE6               	movwf	postinc1,c
 19913  018D2C  0E08               	movlw	8
 19914  018D2E  6EE6               	movwf	postinc1,c
 19915  018D30  ECE2  F0C5         	call	_StartTimer	;wreg free
 19916  018D34                     l9050:
 19917                           
 19918                           ;mconfig.c: 37:  return 0;
 19919  018D34  0E00               	movlw	0
 19920  018D36  6E25               	movwf	btemp^0,c
 19921                           
 19922                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19923  018D38  0012               	return		;funcret
 19924  018D3A                     __end_of_help_button:
 19925                           	opt callstack 0
 19926                           
 19927 ;; *************** function _TimerDone *****************
 19928 ;; Defined at:
 19929 ;;		line 20 in file "timers.c"
 19930 ;; Parameters:    Size  Location     Type
 19931 ;;  timer           1  [STACK] const unsigned char 
 19932 ;; Auto vars:     Size  Location     Type
 19933 ;;		None
 19934 ;; Return value:  Size  Location     Type
 19935 ;;                  1  [STACK] _Bool 
 19936 ;; Registers used:
 19937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19938 ;; Tracked objects:
 19939 ;;		On entry : 0/1
 19940 ;;		On exit  : 0/0
 19941 ;;		Unchanged: 0/0
 19942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19947 ;;Total ram usage:        0 bytes
 19948 ;; Hardware stack levels used:    1
 19949 ;; Hardware stack levels required when called:    7
 19950 ;; This function calls:
 19951 ;;		Nothing
 19952 ;; This function is called by:
 19953 ;;		_main
 19954 ;;		_WaitMs
 19955 ;;		_help_button
 19956 ;;		_check_help
 19957 ;;		_set_display_info
 19958 ;; This function uses a reentrant model
 19959 ;;
 19960                           
 19961                           	psect	text82
 19962  019086                     __ptext82:
 19963                           	opt callstack 0
 19964  019086                     _TimerDone:
 19965                           	opt callstack 22
 19966                           
 19967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19968                           ;incstack = 0
 19969  019086  0004               	clrwdt		;# 
 19970                           
 19971                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19972                           ;stkvar	_timer @ sp[(0)+-1]
 19973  019088  0EFF               	movlw	-1
 19974  01908A  50E3               	movf	plusw1,w,c
 19975  01908C  0D02               	mullw	2
 19976  01908E  0EB5               	movlw	low _tickCount
 19977  019090  24F3               	addwf	243,w,c
 19978  019092  6ED9               	movwf	fsr2l,c
 19979  019094  0E01               	movlw	high _tickCount
 19980  019096  20F4               	addwfc	prodh,w,c
 19981  019098  6EDA               	movwf	fsr2h,c
 19982  01909A  50DE               	movf	postinc2,w,c
 19983  01909C  10DE               	iorwf	postinc2,w,c
 19984  01909E  A4D8               	btfss	status,2,c
 19985  0190A0  D002               	goto	l7778
 19986                           
 19987                           ;timers.c: 24:   return 1;
 19988  0190A2  0E01               	movlw	1
 19989  0190A4  D001               	goto	L20
 19990  0190A6                     l7778:
 19991                           
 19992                           ;timers.c: 26:  return 0;
 19993  0190A6  0E00               	movlw	0
 19994  0190A8                     L20:
 19995  0190A8  6E25               	movwf	btemp^0,c
 19996                           
 19997                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19998  0190AA  52E5               	movf	postdec1,f,c
 19999  0190AC  0012               	return		;funcret
 20000  0190AE                     __end_of_TimerDone:
 20001                           	opt callstack 0
 20002                           
 20003 ;; *************** function _StartTimer *****************
 20004 ;; Defined at:
 20005 ;;		line 12 in file "timers.c"
 20006 ;; Parameters:    Size  Location     Type
 20007 ;;  timer           1  [STACK] const unsigned char 
 20008 ;;  count           2  [STACK] const unsigned short 
 20009 ;; Auto vars:     Size  Location     Type
 20010 ;;		None
 20011 ;; Return value:  Size  Location     Type
 20012 ;;                  1  [STACK] void 
 20013 ;; Registers used:
 20014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20015 ;; Tracked objects:
 20016 ;;		On entry : 0/0
 20017 ;;		On exit  : 0/0
 20018 ;;		Unchanged: 0/0
 20019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20024 ;;Total ram usage:        0 bytes
 20025 ;; Hardware stack levels used:    1
 20026 ;; Hardware stack levels required when called:    7
 20027 ;; This function calls:
 20028 ;;		Nothing
 20029 ;; This function is called by:
 20030 ;;		_main
 20031 ;;		_WaitMs
 20032 ;;		_help_button
 20033 ;;		_check_help
 20034 ;; This function uses a reentrant model
 20035 ;;
 20036                           
 20037                           	psect	text83
 20038  018BC4                     __ptext83:
 20039                           	opt callstack 0
 20040  018BC4                     _StartTimer:
 20041                           	opt callstack 20
 20042                           
 20043                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20044                           ;stkvar	_count @ sp[(0)+-3]
 20045                           
 20046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20047                           ;incstack = 0
 20048  018BC4  0EFD               	movlw	-3
 20049  018BC6  006F FF8C  F02F    	movff	plusw1,btemp+10
 20050  018BCC  0EFE               	movlw	-2
 20051  018BCE  006F FF8C  F030    	movff	plusw1,btemp+11
 20052  018BD4  90D8               	bcf	status,0,c
 20053  018BD6  342F               	rlcf	(btemp+10)^0,w,c
 20054  018BD8  6E2D               	movwf	(btemp+8)^0,c
 20055  018BDA  3430               	rlcf	(btemp+11)^0,w,c
 20056  018BDC  6E2E               	movwf	(btemp+9)^0,c
 20057                           
 20058                           ;stkvar	_timer @ sp[(0)+-1]
 20059  018BDE  0EFF               	movlw	-1
 20060  018BE0  50E3               	movf	plusw1,w,c
 20061  018BE2  0D02               	mullw	2
 20062  018BE4  0EB5               	movlw	low _tickCount
 20063  018BE6  24F3               	addwf	243,w,c
 20064  018BE8  6ED9               	movwf	fsr2l,c
 20065  018BEA  0E01               	movlw	high _tickCount
 20066  018BEC  20F4               	addwfc	prodh,w,c
 20067  018BEE  6EDA               	movwf	fsr2h,c
 20068  018BF0  0060  F0B7  FFDE   	movff	btemp+8,postinc2
 20069  018BF6  0060  F0BB  FFDD   	movff	btemp+9,postdec2
 20070                           
 20071                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20072  018BFC  52E5               	movf	postdec1,f,c
 20073  018BFE  52E5               	movf	postdec1,f,c
 20074  018C00  52E5               	movf	postdec1,f,c
 20075  018C02  0012               	return		;funcret
 20076  018C04                     __end_of_StartTimer:
 20077                           	opt callstack 0
 20078                           
 20079 ;; *************** function _display_info *****************
 20080 ;; Defined at:
 20081 ;;		line 190 in file "mconfig.c"
 20082 ;; Parameters:    Size  Location     Type
 20083 ;;		None
 20084 ;; Auto vars:     Size  Location     Type
 20085 ;;		None
 20086 ;; Return value:  Size  Location     Type
 20087 ;;                  1  [STACK] enum E16518
 20088 ;; Registers used:
 20089 ;;		btemp
 20090 ;; Tracked objects:
 20091 ;;		On entry : 0/2
 20092 ;;		On exit  : 0/0
 20093 ;;		Unchanged: 0/0
 20094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20099 ;;Total ram usage:        0 bytes
 20100 ;; Hardware stack levels used:    1
 20101 ;; Hardware stack levels required when called:    7
 20102 ;; This function calls:
 20103 ;;		Nothing
 20104 ;; This function is called by:
 20105 ;;		_check_help
 20106 ;; This function uses a reentrant model
 20107 ;;
 20108                           
 20109                           	psect	text84
 20110  019672                     __ptext84:
 20111                           	opt callstack 0
 20112  019672                     _display_info:
 20113                           	opt callstack 22
 20114                           
 20115                           ;mconfig.c: 192:  return V.response.info;
 20116                           
 20117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20118                           ;incstack = 0
 20119  019672  0060  FA8C  F025   	movff	_V+163,btemp	;volatile
 20120                           
 20121                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20122  019678  0012               	return		;funcret
 20123  01967A                     __end_of_display_info:
 20124                           	opt callstack 0
 20125                           
 20126 ;; *************** function _display_help *****************
 20127 ;; Defined at:
 20128 ;;		line 195 in file "mconfig.c"
 20129 ;; Parameters:    Size  Location     Type
 20130 ;;		None
 20131 ;; Auto vars:     Size  Location     Type
 20132 ;;		None
 20133 ;; Return value:  Size  Location     Type
 20134 ;;                  1  [STACK] enum E16518
 20135 ;; Registers used:
 20136 ;;		btemp
 20137 ;; Tracked objects:
 20138 ;;		On entry : 3F/2
 20139 ;;		On exit  : 0/0
 20140 ;;		Unchanged: 0/0
 20141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20146 ;;Total ram usage:        0 bytes
 20147 ;; Hardware stack levels used:    1
 20148 ;; Hardware stack levels required when called:    7
 20149 ;; This function calls:
 20150 ;;		Nothing
 20151 ;; This function is called by:
 20152 ;;		_check_help
 20153 ;; This function uses a reentrant model
 20154 ;;
 20155                           
 20156                           	psect	text85
 20157  01967A                     __ptext85:
 20158                           	opt callstack 0
 20159  01967A                     _display_help:
 20160                           	opt callstack 22
 20161                           
 20162                           ;mconfig.c: 197:  return V.response.help_temp;
 20163                           
 20164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20165                           ;incstack = 0
 20166  01967A  0060  FA90  F025   	movff	_V+164,btemp	;volatile
 20167                           
 20168                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20169  019680  0012               	return		;funcret
 20170  019682                     __end_of_display_help:
 20171                           	opt callstack 0
 20172                           
 20173 ;; *************** function _check_enter_button *****************
 20174 ;; Defined at:
 20175 ;;		line 42 in file "hid.c"
 20176 ;; Parameters:    Size  Location     Type
 20177 ;;  h               1  [STACK] PTR struct H_data
 20178 ;;		 -> H(7), 
 20179 ;; Auto vars:     Size  Location     Type
 20180 ;;		None
 20181 ;; Return value:  Size  Location     Type
 20182 ;;                  1  [STACK] _Bool 
 20183 ;; Registers used:
 20184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20185 ;; Tracked objects:
 20186 ;;		On entry : 0/1
 20187 ;;		On exit  : 0/0
 20188 ;;		Unchanged: 0/0
 20189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20194 ;;Total ram usage:        0 bytes
 20195 ;; Hardware stack levels used:    1
 20196 ;; Hardware stack levels required when called:    7
 20197 ;; This function calls:
 20198 ;;		Nothing
 20199 ;; This function is called by:
 20200 ;;		_main
 20201 ;; This function uses a reentrant model
 20202 ;;
 20203                           
 20204                           	psect	text86
 20205  018C04                     __ptext86:
 20206                           	opt callstack 0
 20207  018C04                     _check_enter_button:
 20208                           	opt callstack 23
 20209                           
 20210                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20211                           ;stkvar	_h @ sp[(0)+-1]
 20212                           
 20213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20214                           ;incstack = 0
 20215  018C04  0EFF               	movlw	-1
 20216  018C06  50E3               	movf	plusw1,w,c
 20217  018C08  6ED9               	movwf	fsr2l,c
 20218  018C0A  6ADA               	clrf	fsr2h,c
 20219  018C0C  0E04               	movlw	4
 20220  018C0E  26D9               	addwf	fsr2l,f,c
 20221  018C10  50DF               	movf	indf2,w,c
 20222  018C12  A4D8               	btfss	status,2,c
 20223  018C14  D013               	goto	l9588
 20224                           
 20225                           ;stkvar	_h @ sp[(0)+-1]
 20226  018C16  0EFF               	movlw	-1
 20227  018C18  50E3               	movf	plusw1,w,c
 20228  018C1A  6ED9               	movwf	fsr2l,c
 20229  018C1C  6ADA               	clrf	fsr2h,c
 20230  018C1E  0E05               	movlw	5
 20231  018C20  26D9               	addwf	fsr2l,f,c
 20232  018C22  50DF               	movf	indf2,w,c
 20233  018C24  A4D8               	btfss	status,2,c
 20234  018C26  D00A               	goto	l9588
 20235                           
 20236                           ;hid.c: 45:   h->wait_enter = 1;
 20237                           ;stkvar	_h @ sp[(0)+-1]
 20238  018C28  0EFF               	movlw	-1
 20239  018C2A  50E3               	movf	plusw1,w,c
 20240  018C2C  6ED9               	movwf	fsr2l,c
 20241  018C2E  6ADA               	clrf	fsr2h,c
 20242  018C30  0E04               	movlw	4
 20243  018C32  26D9               	addwf	fsr2l,f,c
 20244  018C34  0E01               	movlw	1
 20245  018C36  6EDF               	movwf	indf2,c
 20246                           
 20247                           ;hid.c: 46:   return 1;
 20248  018C38  0E01               	movlw	1
 20249  018C3A  D001               	goto	L21
 20250  018C3C                     l9588:
 20251                           
 20252                           ;hid.c: 48:  return 0;
 20253  018C3C  0E00               	movlw	0
 20254  018C3E                     L21:
 20255  018C3E  6E25               	movwf	btemp^0,c
 20256                           
 20257                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20258  018C40  52E5               	movf	postdec1,f,c
 20259  018C42  0012               	return		;funcret
 20260  018C44                     __end_of_check_enter_button:
 20261                           	opt callstack 0
 20262                           
 20263 ;; *************** function _check_adc_scan *****************
 20264 ;; Defined at:
 20265 ;;		line 56 in file "daq.c"
 20266 ;; Parameters:    Size  Location     Type
 20267 ;;		None
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;		None
 20270 ;; Return value:  Size  Location     Type
 20271 ;;                  1  [STACK] _Bool 
 20272 ;; Registers used:
 20273 ;;		btemp
 20274 ;; Tracked objects:
 20275 ;;		On entry : 0/1
 20276 ;;		On exit  : 0/0
 20277 ;;		Unchanged: 0/0
 20278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20283 ;;Total ram usage:        0 bytes
 20284 ;; Hardware stack levels used:    1
 20285 ;; Hardware stack levels required when called:    7
 20286 ;; This function calls:
 20287 ;;		Nothing
 20288 ;; This function is called by:
 20289 ;;		_main
 20290 ;; This function uses a reentrant model
 20291 ;;
 20292                           
 20293                           	psect	text87
 20294  019682                     __ptext87:
 20295                           	opt callstack 0
 20296  019682                     _check_adc_scan:
 20297                           	opt callstack 23
 20298                           
 20299                           ;daq.c: 58:  return R.done;
 20300                           
 20301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20302                           ;incstack = 0
 20303  019682  0060  F3A8  F025   	movff	_R+39,btemp	;volatile
 20304                           
 20305                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20306  019688  0012               	return		;funcret
 20307  01968A                     __end_of_check_adc_scan:
 20308                           	opt callstack 0
 20309                           
 20310 ;; *************** function _calc_model_data *****************
 20311 ;; Defined at:
 20312 ;;		line 56 in file "mbmc.c"
 20313 ;; Parameters:    Size  Location     Type
 20314 ;;		None
 20315 ;; Auto vars:     Size  Location     Type
 20316 ;;		None
 20317 ;; Return value:  Size  Location     Type
 20318 ;;                  1  [STACK] void 
 20319 ;; Registers used:
 20320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20321 ;; Tracked objects:
 20322 ;;		On entry : 0/1
 20323 ;;		On exit  : 3F/1
 20324 ;;		Unchanged: 0/0
 20325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20330 ;;Total ram usage:        0 bytes
 20331 ;; Hardware stack levels used:    1
 20332 ;; Hardware stack levels required when called:   10
 20333 ;; This function calls:
 20334 ;;		___fladd
 20335 ;;		___flmul
 20336 ;;		___flsub
 20337 ;;		_lp_filter
 20338 ;;		_start_bsoc
 20339 ;;		_stop_bsoc
 20340 ;; This function is called by:
 20341 ;;		_main
 20342 ;; This function uses a reentrant model
 20343 ;;
 20344                           
 20345                           	psect	text88
 20346  0153B0                     __ptext88:
 20347                           	opt callstack 0
 20348  0153B0                     _calc_model_data:
 20349                           	opt callstack 20
 20350                           
 20351                           ;mbmc.c: 58:  stop_bsoc();
 20352                           
 20353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20354                           ;incstack = 0
 20355  0153B0  EC52  F0CB         	call	_stop_bsoc	;wreg free
 20356                           
 20357                           ; BSR set to: 57
 20358                           ;mbmc.c: 60:  if (!V.calib) {
 20359  0153B4  0102               	movlb	2	; () banked
 20360  0153B6  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20361  0153B8  A4D8               	btfss	status,2,c
 20362  0153BA  D161               	goto	l9488
 20363                           
 20364                           ; BSR set to: 2
 20365                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20366  0153BC  C100  F144         	movff	_C,_C+68	;volatile
 20367  0153C0  C101  F145         	movff	_C+1,_C+69	;volatile
 20368  0153C4  C102  F146         	movff	_C+2,_C+70	;volatile
 20369  0153C8  C103  F147         	movff	_C+3,_C+71	;volatile
 20370                           
 20371                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20372  0153CC  C104  F148         	movff	_C+4,_C+72	;volatile
 20373  0153D0  C105  F149         	movff	_C+5,_C+73	;volatile
 20374  0153D4  C106  F14A         	movff	_C+6,_C+74	;volatile
 20375  0153D8  C107  F14B         	movff	_C+7,_C+75	;volatile
 20376                           
 20377                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20378  0153DC  C110  F154         	movff	_C+16,_C+84	;volatile
 20379  0153E0  C111  F155         	movff	_C+17,_C+85	;volatile
 20380  0153E4  C112  F156         	movff	_C+18,_C+86	;volatile
 20381  0153E8  C113  F157         	movff	_C+19,_C+87	;volatile
 20382                           
 20383                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20384  0153EC  C114  F150         	movff	_C+20,_C+80	;volatile
 20385  0153F0  C115  F151         	movff	_C+21,_C+81	;volatile
 20386  0153F4  C116  F152         	movff	_C+22,_C+82	;volatile
 20387  0153F8  C117  F153         	movff	_C+23,_C+83	;volatile
 20388                           
 20389                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20390  0153FC  C130  F164         	movff	_C+48,_C+100	;volatile
 20391  015400  C131  F165         	movff	_C+49,_C+101	;volatile
 20392  015404  C132  F166         	movff	_C+50,_C+102	;volatile
 20393  015408  C133  F167         	movff	_C+51,_C+103	;volatile
 20394                           
 20395                           ; BSR set to: 2
 20396                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20397  01540C  0E01               	movlw	1
 20398  01540E  6EE6               	movwf	postinc1,c
 20399  015410  0E10               	movlw	16
 20400  015412  6EE6               	movwf	postinc1,c
 20401  015414  0060  F403  FFE6   	movff	_C,postinc1
 20402  01541A  0060  F407  FFE6   	movff	_C+1,postinc1
 20403  015420  0060  F40B  FFE6   	movff	_C+2,postinc1
 20404  015426  0060  F40F  FFE6   	movff	_C+3,postinc1
 20405  01542C  0060  F413  FFE6   	movff	_C+4,postinc1
 20406  015432  0060  F417  FFE6   	movff	_C+5,postinc1
 20407  015438  0060  F41B  FFE6   	movff	_C+6,postinc1
 20408  01543E  0060  F41F  FFE6   	movff	_C+7,postinc1
 20409  015444  EC36  F0C5         	call	___flsub	;wreg free
 20410  015448  0060  F097  FFE6   	movff	btemp,postinc1
 20411  01544E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20412  015454  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20413  01545A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20414  015460  EC2D  F0B3         	call	_lp_filter	;wreg free
 20415  015464  0060  F094  F140   	movff	btemp,_C+64	;volatile
 20416  01546A  0060  F098  F141   	movff	btemp+1,_C+65	;volatile
 20417  015470  0060  F09C  F142   	movff	btemp+2,_C+66	;volatile
 20418  015476  0060  F0A0  F143   	movff	btemp+3,_C+67	;volatile
 20419                           
 20420                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20421  01547C  0E01               	movlw	1
 20422  01547E  6EE6               	movwf	postinc1,c
 20423  015480  0E11               	movlw	17
 20424  015482  6EE6               	movwf	postinc1,c
 20425  015484  0060  F553  FFE6   	movff	_C+84,postinc1
 20426  01548A  0060  F557  FFE6   	movff	_C+85,postinc1
 20427  015490  0060  F55B  FFE6   	movff	_C+86,postinc1
 20428  015496  0060  F55F  FFE6   	movff	_C+87,postinc1
 20429  01549C  0060  F503  FFE6   	movff	_C+64,postinc1
 20430  0154A2  0060  F507  FFE6   	movff	_C+65,postinc1
 20431  0154A8  0060  F50B  FFE6   	movff	_C+66,postinc1
 20432  0154AE  0060  F50F  FFE6   	movff	_C+67,postinc1
 20433  0154B4  EC14  F093         	call	___flmul	;wreg free
 20434  0154B8  0060  F097  FFE6   	movff	btemp,postinc1
 20435  0154BE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20436  0154C4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20437  0154CA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20438  0154D0  EC2D  F0B3         	call	_lp_filter	;wreg free
 20439  0154D4  0060  F094  F168   	movff	btemp,_C+104	;volatile
 20440  0154DA  0060  F098  F169   	movff	btemp+1,_C+105	;volatile
 20441  0154E0  0060  F09C  F16A   	movff	btemp+2,_C+106	;volatile
 20442  0154E6  0060  F0A0  F16B   	movff	btemp+3,_C+107	;volatile
 20443                           
 20444                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20445  0154EC  0E01               	movlw	1
 20446  0154EE  6EE6               	movwf	postinc1,c
 20447  0154F0  0E12               	movlw	18
 20448  0154F2  6EE6               	movwf	postinc1,c
 20449  0154F4  0060  F543  FFE6   	movff	_C+80,postinc1
 20450  0154FA  0060  F547  FFE6   	movff	_C+81,postinc1
 20451  015500  0060  F54B  FFE6   	movff	_C+82,postinc1
 20452  015506  0060  F54F  FFE6   	movff	_C+83,postinc1
 20453  01550C  0060  F523  FFE6   	movff	_C+72,postinc1
 20454  015512  0060  F527  FFE6   	movff	_C+73,postinc1
 20455  015518  0060  F52B  FFE6   	movff	_C+74,postinc1
 20456  01551E  0060  F52F  FFE6   	movff	_C+75,postinc1
 20457  015524  EC14  F093         	call	___flmul	;wreg free
 20458  015528  0060  F097  FFE6   	movff	btemp,postinc1
 20459  01552E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20460  015534  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20461  01553A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20462  015540  EC2D  F0B3         	call	_lp_filter	;wreg free
 20463  015544  0060  F094  F170   	movff	btemp,_C+112	;volatile
 20464  01554A  0060  F098  F171   	movff	btemp+1,_C+113	;volatile
 20465  015550  0060  F09C  F172   	movff	btemp+2,_C+114	;volatile
 20466  015556  0060  F0A0  F173   	movff	btemp+3,_C+115	;volatile
 20467                           
 20468                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20469  01555C  0E01               	movlw	1
 20470  01555E  6EE6               	movwf	postinc1,c
 20471  015560  0E13               	movlw	19
 20472  015562  6EE6               	movwf	postinc1,c
 20473  015564  0E00               	movlw	0
 20474  015566  6EE6               	movwf	postinc1,c
 20475  015568  0E00               	movlw	0
 20476  01556A  6EE6               	movwf	postinc1,c
 20477  01556C  0E60               	movlw	96
 20478  01556E  6EE6               	movwf	postinc1,c
 20479  015570  0EC1               	movlw	193
 20480  015572  6EE6               	movwf	postinc1,c
 20481  015574  0060  F593  FFE6   	movff	_C+100,postinc1
 20482  01557A  0060  F597  FFE6   	movff	_C+101,postinc1
 20483  015580  0060  F59B  FFE6   	movff	_C+102,postinc1
 20484  015586  0060  F59F  FFE6   	movff	_C+103,postinc1
 20485  01558C  0060  F503  FFE6   	movff	_C+64,postinc1
 20486  015592  0060  F507  FFE6   	movff	_C+65,postinc1
 20487  015598  0060  F50B  FFE6   	movff	_C+66,postinc1
 20488  01559E  0060  F50F  FFE6   	movff	_C+67,postinc1
 20489  0155A4  EC14  F093         	call	___flmul	;wreg free
 20490  0155A8  0060  F097  FFE6   	movff	btemp,postinc1
 20491  0155AE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20492  0155B4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20493  0155BA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20494  0155C0  EC29  F097         	call	___fladd	;wreg free
 20495  0155C4  0060  F097  FFE6   	movff	btemp,postinc1
 20496  0155CA  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20497  0155D0  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20498  0155D6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20499  0155DC  EC2D  F0B3         	call	_lp_filter	;wreg free
 20500  0155E0  0060  F094  F16C   	movff	btemp,_C+108	;volatile
 20501  0155E6  0060  F098  F16D   	movff	btemp+1,_C+109	;volatile
 20502  0155EC  0060  F09C  F16E   	movff	btemp+2,_C+110	;volatile
 20503  0155F2  0060  F0A0  F16F   	movff	btemp+3,_C+111	;volatile
 20504                           
 20505                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20506  0155F8  0E01               	movlw	1
 20507  0155FA  6EE6               	movwf	postinc1,c
 20508  0155FC  0E14               	movlw	20
 20509  0155FE  6EE6               	movwf	postinc1,c
 20510  015600  0060  F553  FFE6   	movff	_C+84,postinc1
 20511  015606  0060  F557  FFE6   	movff	_C+85,postinc1
 20512  01560C  0060  F55B  FFE6   	movff	_C+86,postinc1
 20513  015612  0060  F55F  FFE6   	movff	_C+87,postinc1
 20514  015618  0060  F513  FFE6   	movff	_C+68,postinc1
 20515  01561E  0060  F517  FFE6   	movff	_C+69,postinc1
 20516  015624  0060  F51B  FFE6   	movff	_C+70,postinc1
 20517  01562A  0060  F51F  FFE6   	movff	_C+71,postinc1
 20518  015630  EC14  F093         	call	___flmul	;wreg free
 20519  015634  0060  F097  FFE6   	movff	btemp,postinc1
 20520  01563A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20521  015640  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20522  015646  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20523  01564C  EC2D  F0B3         	call	_lp_filter	;wreg free
 20524  015650  0060  F094  F174   	movff	btemp,_C+116	;volatile
 20525  015656  0060  F098  F175   	movff	btemp+1,_C+117	;volatile
 20526  01565C  0060  F09C  F176   	movff	btemp+2,_C+118	;volatile
 20527  015662  0060  F0A0  F177   	movff	btemp+3,_C+119	;volatile
 20528                           
 20529                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20530  015668  0101               	movlb	1	; () banked
 20531  01566A  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20532  01566C  D008               	goto	l9488
 20533                           
 20534                           ; BSR set to: 1
 20535                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20536  01566E  0E17               	movlw	23
 20537  015670  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20538  015672  0EB7               	movlw	183
 20539  015674  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20540  015676  0ED1               	movlw	209
 20541  015678  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20542  01567A  0E38               	movlw	56
 20543  01567C  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20544  01567E                     l9488:
 20545                           
 20546                           ;mbmc.c: 77:  start_bsoc();
 20547  01567E  ECDF  F0C9         	call	_start_bsoc	;wreg free
 20548                           
 20549                           ; BSR set to: 57
 20550                           ;mbmc.c: 78:  C.update = 1;
 20551  015682  0E01               	movlw	1
 20552  015684  0101               	movlb	1	; () banked
 20553  015686  6FA4               	movwf	(_C+164)& (0+255),b	;volatile
 20554                           
 20555                           ; BSR set to: 1
 20556                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20557  015688  0012               	return		;funcret
 20558  01568A                     __end_of_calc_model_data:
 20559                           	opt callstack 0
 20560                           
 20561 ;; *************** function _stop_bsoc *****************
 20562 ;; Defined at:
 20563 ;;		line 54 in file "bsoc.c"
 20564 ;; Parameters:    Size  Location     Type
 20565 ;;		None
 20566 ;; Auto vars:     Size  Location     Type
 20567 ;;		None
 20568 ;; Return value:  Size  Location     Type
 20569 ;;                  1  [STACK] void 
 20570 ;; Registers used:
 20571 ;;		None
 20572 ;; Tracked objects:
 20573 ;;		On entry : 0/1
 20574 ;;		On exit  : 3F/39
 20575 ;;		Unchanged: 0/0
 20576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20581 ;;Total ram usage:        0 bytes
 20582 ;; Hardware stack levels used:    1
 20583 ;; Hardware stack levels required when called:    7
 20584 ;; This function calls:
 20585 ;;		Nothing
 20586 ;; This function is called by:
 20587 ;;		_calc_model_data
 20588 ;; This function uses a reentrant model
 20589 ;;
 20590                           
 20591                           	psect	text89
 20592  0196A4                     __ptext89:
 20593                           	opt callstack 0
 20594  0196A4                     _stop_bsoc:
 20595                           	opt callstack 22
 20596                           
 20597                           ;bsoc.c: 57:  PIE6bits.TMR3IE = 0;
 20598                           
 20599                           ; BSR set to: 1
 20600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20601                           ;incstack = 0
 20602  0196A4  0139               	movlb	57	; () banked
 20603  0196A6  9D96               	bcf	150,6,b	;volatile
 20604                           
 20605                           ; BSR set to: 57
 20606                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20607  0196A8  0012               	return		;funcret
 20608  0196AA                     __end_of_stop_bsoc:
 20609                           	opt callstack 0
 20610                           
 20611 ;; *************** function _start_bsoc *****************
 20612 ;; Defined at:
 20613 ;;		line 45 in file "bsoc.c"
 20614 ;; Parameters:    Size  Location     Type
 20615 ;;		None
 20616 ;; Auto vars:     Size  Location     Type
 20617 ;;		None
 20618 ;; Return value:  Size  Location     Type
 20619 ;;                  1  [STACK] void 
 20620 ;; Registers used:
 20621 ;;		wreg, status,2, status,0, btemp+11
 20622 ;; Tracked objects:
 20623 ;;		On entry : 3C/2
 20624 ;;		On exit  : 3F/39
 20625 ;;		Unchanged: 0/0
 20626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20631 ;;Total ram usage:        0 bytes
 20632 ;; Hardware stack levels used:    1
 20633 ;; Hardware stack levels required when called:    7
 20634 ;; This function calls:
 20635 ;;		Nothing
 20636 ;; This function is called by:
 20637 ;;		_calc_model_data
 20638 ;; This function uses a reentrant model
 20639 ;;
 20640                           
 20641                           	psect	text90
 20642  0193BE                     __ptext90:
 20643                           	opt callstack 0
 20644  0193BE                     _start_bsoc:
 20645                           	opt callstack 22
 20646                           
 20647                           ;bsoc.c: 48:  PIE6bits.TMR3IE = 1;
 20648                           
 20649                           ; BSR set to: 57
 20650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20651                           ;incstack = 0
 20652  0193BE  0139               	movlb	57	; () banked
 20653  0193C0  8D96               	bsf	150,6,b	;volatile
 20654                           
 20655                           ; BSR set to: 57
 20656  0193C2  A4BE               	btfss	190,2,c	;volatile
 20657  0193C4  D002               	goto	u8460
 20658  0193C6  0E01               	movlw	1
 20659  0193C8  D001               	goto	u8466
 20660  0193CA                     u8460:
 20661  0193CA  0E00               	movlw	0
 20662  0193CC                     u8466:
 20663  0193CC  0AFF               	xorlw	255
 20664  0193CE  6E30               	movwf	(btemp+11)^0,c
 20665  0193D0  4630               	rlncf	(btemp+11)^0,f,c
 20666  0193D2  4630               	rlncf	(btemp+11)^0,f,c
 20667  0193D4  50BE               	movf	190,w,c	;volatile
 20668  0193D6  1830               	xorwf	(btemp+11)^0,w,c
 20669  0193D8  0BFB               	andlw	-5
 20670  0193DA  1830               	xorwf	(btemp+11)^0,w,c
 20671  0193DC  6EBE               	movwf	190,c	;volatile
 20672                           
 20673                           ; BSR set to: 57
 20674                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20675  0193DE  0012               	return		;funcret
 20676  0193E0                     __end_of_start_bsoc:
 20677                           	opt callstack 0
 20678                           
 20679 ;; *************** function _lp_filter *****************
 20680 ;; Defined at:
 20681 ;;		line 18 in file "mbmc.c"
 20682 ;; Parameters:    Size  Location     Type
 20683 ;;  new             4  [STACK] const float 
 20684 ;;  bn              1  [STACK] const unsigned char 
 20685 ;;  slow            1  [STACK] const char 
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;  lp_speed        4  [STACK] float 
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  4  [STACK] float 
 20690 ;; Registers used:
 20691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/2
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20701 ;;Total ram usage:        0 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; Hardware stack levels required when called:    9
 20704 ;; This function calls:
 20705 ;;		___fladd
 20706 ;;		___flmul
 20707 ;;		___flsub
 20708 ;; This function is called by:
 20709 ;;		_main
 20710 ;;		_convert_adc_data
 20711 ;;		_calc_model_data
 20712 ;; This function uses a reentrant model
 20713 ;;
 20714                           
 20715                           	psect	text91
 20716  01665A                     __ptext91:
 20717                           	opt callstack 0
 20718  01665A                     _lp_filter:
 20719                           	opt callstack 0
 20720                           
 20721                           ; BSR set to: 57
 20722                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20723  01665A  52E6               	movf	postinc1,f,c
 20724  01665C  52E6               	movf	postinc1,f,c
 20725  01665E  52E6               	movf	postinc1,f,c
 20726  016660  52E6               	movf	postinc1,f,c
 20727                           
 20728                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 20729                           ;stkvar	_bn @ sp[(-4)+-5]
 20730                           
 20731                           ;incstack = 0
 20732  016662  0EF7               	movlw	-9
 20733  016664  006F FF8C  F025    	movff	plusw1,btemp
 20734  01666A  0E14               	movlw	20
 20735  01666C  6425               	cpfsgt	btemp^0,c
 20736  01666E  D011               	goto	l9004
 20737  016670                     u8280:
 20738                           
 20739                           ;mbmc.c: 24:   return new;
 20740                           ;stkvar	_new @ sp[(-4)+-4]
 20741  016670  0EF8               	movlw	-8
 20742  016672  006F FF8C  F025    	movff	plusw1,btemp
 20743  016678  0EF9               	movlw	-7
 20744  01667A  006F FF8C  F026    	movff	plusw1,btemp+1
 20745  016680  0EFA               	movlw	-6
 20746  016682  006F FF8C  F027    	movff	plusw1,btemp+2
 20747  016688  0EFB               	movlw	-5
 20748  01668A  006F FF8C  F028    	movff	plusw1,btemp+3
 20749  016690  D0BF               	goto	l1808
 20750  016692                     l9004:
 20751                           
 20752                           ;mbmc.c: 26:  if (slow == (-1)) {
 20753                           ;stkvar	_slow @ sp[(-4)+-6]
 20754  016692  0EF6               	movlw	-10
 20755  016694  28E3               	incf	plusw1,w,c
 20756  016696  A4D8               	btfss	status,2,c
 20757  016698  D012               	goto	l9012
 20758                           
 20759                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 20760                           ;stkvar	_bn @ sp[(-4)+-5]
 20761  01669A  0EF7               	movlw	-9
 20762  01669C  50E3               	movf	plusw1,w,c
 20763  01669E  0D04               	mullw	4
 20764  0166A0  0E00               	movlw	low lp_filter@smooth
 20765  0166A2  24F3               	addwf	243,w,c
 20766  0166A4  6ED9               	movwf	fsr2l,c
 20767  0166A6  0E03               	movlw	high lp_filter@smooth
 20768  0166A8  20F4               	addwfc	prodh,w,c
 20769  0166AA  6EDA               	movwf	fsr2h,c
 20770  0166AC  0E00               	movlw	0
 20771  0166AE  6EDE               	movwf	postinc2,c
 20772  0166B0  0E00               	movlw	0
 20773  0166B2  6EDE               	movwf	postinc2,c
 20774  0166B4  0E00               	movlw	0
 20775  0166B6  6EDE               	movwf	postinc2,c
 20776  0166B8  0E00               	movlw	0
 20777  0166BA  6EDD               	movwf	postdec2,c
 20778  0166BC  D7D9               	goto	u8280
 20779  0166BE                     l9012:
 20780                           
 20781                           ;mbmc.c: 31:  if (slow) {
 20782                           ;stkvar	_slow @ sp[(-4)+-6]
 20783  0166BE  0EF6               	movlw	-10
 20784  0166C0  50E3               	movf	plusw1,w,c
 20785  0166C2  B4D8               	btfsc	status,2,c
 20786  0166C4  D008               	goto	l9016
 20787                           
 20788                           ;mbmc.c: 32:   lp_speed = 0.033;
 20789  0166C6  0E02               	movlw	2
 20790  0166C8  6E2D               	movwf	(btemp+8)^0,c
 20791  0166CA  0E2B               	movlw	43
 20792  0166CC  6E2E               	movwf	(btemp+9)^0,c
 20793  0166CE  0E07               	movlw	7
 20794  0166D0  6E2F               	movwf	(btemp+10)^0,c
 20795  0166D2  0E3D               	movlw	61
 20796  0166D4  D007               	goto	L22
 20797  0166D6                     l9016:
 20798                           
 20799                           ;mbmc.c: 34:   lp_speed = 0.125;
 20800  0166D6  0E00               	movlw	0
 20801  0166D8  6E2D               	movwf	(btemp+8)^0,c
 20802  0166DA  0E00               	movlw	0
 20803  0166DC  6E2E               	movwf	(btemp+9)^0,c
 20804  0166DE  0E00               	movlw	0
 20805  0166E0  6E2F               	movwf	(btemp+10)^0,c
 20806  0166E2  0E3E               	movlw	62
 20807  0166E4                     L22:
 20808  0166E4  6E30               	movwf	(btemp+11)^0,c
 20809                           
 20810                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20811  0166E6  0EFC               	movlw	-4
 20812  0166E8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 20813  0166EE  0EFD               	movlw	-3
 20814  0166F0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 20815  0166F6  0EFE               	movlw	-2
 20816  0166F8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20817  0166FE  0EFF               	movlw	-1
 20818  016700  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20819                           
 20820                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20821                           ;stkvar	_bn @ sp[(-4)+-5]
 20822  016706  0EF7               	movlw	-9
 20823  016708  50E3               	movf	plusw1,w,c
 20824  01670A  0D04               	mullw	4
 20825  01670C  0E00               	movlw	low lp_filter@smooth
 20826  01670E  24F3               	addwf	243,w,c
 20827  016710  6ED9               	movwf	fsr2l,c
 20828  016712  0E03               	movlw	high lp_filter@smooth
 20829  016714  20F4               	addwfc	prodh,w,c
 20830  016716  6EDA               	movwf	fsr2h,c
 20831  016718  006F FF7B FFE6     	movff	postinc2,postinc1
 20832  01671E  006F FF7B FFE6     	movff	postinc2,postinc1
 20833  016724  006F FF7B FFE6     	movff	postinc2,postinc1
 20834  01672A  006F FF7B FFE6     	movff	postinc2,postinc1
 20835                           
 20836                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20837  016730  0EF8               	movlw	-8
 20838  016732  006F FF8F FFE6     	movff	plusw1,postinc1
 20839  016738  006F FF8F FFE6     	movff	plusw1,postinc1
 20840  01673E  006F FF8F FFE6     	movff	plusw1,postinc1
 20841  016744  006F FF8F FFE6     	movff	plusw1,postinc1
 20842                           
 20843                           ;stkvar	_bn @ sp[(-12)+-5]
 20844  01674A  0EEF               	movlw	-17
 20845  01674C  50E3               	movf	plusw1,w,c
 20846  01674E  0D04               	mullw	4
 20847  016750  0E00               	movlw	low lp_filter@smooth
 20848  016752  24F3               	addwf	243,w,c
 20849  016754  6ED9               	movwf	fsr2l,c
 20850  016756  0E03               	movlw	high lp_filter@smooth
 20851  016758  20F4               	addwfc	prodh,w,c
 20852  01675A  6EDA               	movwf	fsr2h,c
 20853  01675C  006F FF7B FFE6     	movff	postinc2,postinc1
 20854  016762  006F FF7B FFE6     	movff	postinc2,postinc1
 20855  016768  006F FF7B FFE6     	movff	postinc2,postinc1
 20856  01676E  006F FF7B FFE6     	movff	postinc2,postinc1
 20857                           
 20858                           ;stkvar	_new @ sp[(-16)+-4]
 20859  016774  0EEC               	movlw	-20
 20860  016776  006F FF8F FFE6     	movff	plusw1,postinc1
 20861  01677C  006F FF8F FFE6     	movff	plusw1,postinc1
 20862  016782  006F FF8F FFE6     	movff	plusw1,postinc1
 20863  016788  006F FF8F FFE6     	movff	plusw1,postinc1
 20864  01678E  EC36  F0C5         	call	___flsub	;wreg free
 20865  016792  0060  F097  FFE6   	movff	btemp,postinc1
 20866  016798  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20867  01679E  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20868  0167A4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20869  0167AA  EC14  F093         	call	___flmul	;wreg free
 20870  0167AE  0060  F097  FFE6   	movff	btemp,postinc1
 20871  0167B4  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20872  0167BA  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20873  0167C0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20874  0167C6  EC29  F097         	call	___fladd	;wreg free
 20875                           
 20876                           ;stkvar	_bn @ sp[(-4)+-5]
 20877  0167CA  0EF7               	movlw	-9
 20878  0167CC  50E3               	movf	plusw1,w,c
 20879  0167CE  0D04               	mullw	4
 20880  0167D0  0E00               	movlw	low lp_filter@smooth
 20881  0167D2  24F3               	addwf	243,w,c
 20882  0167D4  6ED9               	movwf	fsr2l,c
 20883  0167D6  0E03               	movlw	high lp_filter@smooth
 20884  0167D8  20F4               	addwfc	prodh,w,c
 20885  0167DA  6EDA               	movwf	fsr2h,c
 20886  0167DC  0060  F097  FFDE   	movff	btemp,postinc2
 20887  0167E2  0060  F09B  FFDE   	movff	btemp+1,postinc2
 20888  0167E8  0060  F09F  FFDE   	movff	btemp+2,postinc2
 20889  0167EE  0060  F0A3  FFDD   	movff	btemp+3,postdec2
 20890  0167F4  52DD               	movf	postdec2,f,c
 20891  0167F6  52DD               	movf	postdec2,f,c
 20892  0167F8  006F FF78  F025    	movff	postinc2,btemp
 20893  0167FE  006F FF78  F026    	movff	postinc2,btemp+1
 20894  016804  006F FF78  F027    	movff	postinc2,btemp+2
 20895  01680A  006F FF78  F028    	movff	postinc2,btemp+3
 20896  016810                     l1808:
 20897                           
 20898                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20899  016810  0EF6               	movlw	246
 20900  016812  26E1               	addwf	fsr1l,f,c
 20901  016814  0EFF               	movlw	255
 20902  016816  22E2               	addwfc	fsr1h,f,c
 20903  016818  0012               	return		;funcret
 20904  01681A                     __end_of_lp_filter:
 20905                           	opt callstack 0
 20906                           
 20907 ;; *************** function ___flsub *****************
 20908 ;; Defined at:
 20909 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20910 ;; Parameters:    Size  Location     Type
 20911 ;;  b               4  [STACK] float 
 20912 ;;  a               4  [STACK] float 
 20913 ;; Auto vars:     Size  Location     Type
 20914 ;;		None
 20915 ;; Return value:  Size  Location     Type
 20916 ;;                  4  [STACK] float 
 20917 ;; Registers used:
 20918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20919 ;; Tracked objects:
 20920 ;;		On entry : 0/2
 20921 ;;		On exit  : 0/0
 20922 ;;		Unchanged: 0/0
 20923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20928 ;;Total ram usage:        0 bytes
 20929 ;; Hardware stack levels used:    1
 20930 ;; Hardware stack levels required when called:    8
 20931 ;; This function calls:
 20932 ;;		___fladd
 20933 ;; This function is called by:
 20934 ;;		_conv_raw_result
 20935 ;;		_lp_filter
 20936 ;;		_calc_model_data
 20937 ;;		_efgtoa
 20938 ;; This function uses a reentrant model
 20939 ;;
 20940                           
 20941                           	psect	text92
 20942  018A6C                     __ptext92:
 20943                           	opt callstack 0
 20944  018A6C                     ___flsub:
 20945                           	opt callstack 15
 20946                           
 20947                           ;stkvar	_a @ sp[(0)+-8]
 20948                           
 20949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20950                           ;incstack = 0
 20951  018A6C  0EFB               	movlw	-5
 20952  018A6E  7EE3               	btg	plusw1,7,c
 20953                           
 20954                           ;stkvar	_a @ sp[(0)+-8]
 20955  018A70  0EF8               	movlw	-8
 20956  018A72  006F FF8F FFE6     	movff	plusw1,postinc1
 20957  018A78  006F FF8F FFE6     	movff	plusw1,postinc1
 20958  018A7E  006F FF8F FFE6     	movff	plusw1,postinc1
 20959  018A84  006F FF8F FFE6     	movff	plusw1,postinc1
 20960                           
 20961                           ;stkvar	_b @ sp[(-4)+-4]
 20962  018A8A  0EF8               	movlw	-8
 20963  018A8C  006F FF8F FFE6     	movff	plusw1,postinc1
 20964  018A92  006F FF8F FFE6     	movff	plusw1,postinc1
 20965  018A98  006F FF8F FFE6     	movff	plusw1,postinc1
 20966  018A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 20967  018AA4  EC29  F097         	call	___fladd	;wreg free
 20968                           
 20969                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20970  018AA8  0EF8               	movlw	248
 20971  018AAA  26E1               	addwf	fsr1l,f,c
 20972  018AAC  0EFF               	movlw	255
 20973  018AAE  22E2               	addwfc	fsr1h,f,c
 20974  018AB0  0012               	return		;funcret
 20975  018AB2                     __end_of___flsub:
 20976                           	opt callstack 0
 20977                           
 20978 ;; *************** function ___fladd *****************
 20979 ;; Defined at:
 20980 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20981 ;; Parameters:    Size  Location     Type
 20982 ;;  b               4  [STACK] float 
 20983 ;;  a               4  [STACK] float 
 20984 ;; Auto vars:     Size  Location     Type
 20985 ;;  grs             1  [STACK] unsigned char 
 20986 ;;  bexp            1  [STACK] unsigned char 
 20987 ;;  aexp            1  [STACK] unsigned char 
 20988 ;;  signs           1  [STACK] unsigned char 
 20989 ;; Return value:  Size  Location     Type
 20990 ;;                  4  [STACK] unsigned char 
 20991 ;; Registers used:
 20992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20993 ;; Tracked objects:
 20994 ;;		On entry : 0/0
 20995 ;;		On exit  : 0/0
 20996 ;;		Unchanged: 0/0
 20997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21002 ;;Total ram usage:        0 bytes
 21003 ;; Hardware stack levels used:    1
 21004 ;; Hardware stack levels required when called:    7
 21005 ;; This function calls:
 21006 ;;		Nothing
 21007 ;; This function is called by:
 21008 ;;		_lp_filter
 21009 ;;		_calc_model_data
 21010 ;;		_calc_bsoc
 21011 ;;		_efgtoa
 21012 ;;		___flsub
 21013 ;; This function uses a reentrant model
 21014 ;;
 21015                           
 21016                           	psect	text93
 21017  012E52                     __ptext93:
 21018                           	opt callstack 0
 21019  012E52                     ___fladd:
 21020                           	opt callstack 0
 21021                           
 21022                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21023  012E52  52E6               	movf	postinc1,f,c
 21024  012E54  52E6               	movf	postinc1,f,c
 21025  012E56  52E6               	movf	postinc1,f,c
 21026  012E58  52E6               	movf	postinc1,f,c
 21027                           
 21028                           ;stkvar	_b @ sp[(-4)+-4]
 21029                           
 21030                           ;incstack = 0
 21031  012E5A  0EFB               	movlw	251
 21032  012E5C  24E1               	addwf	fsr1l,w,c
 21033  012E5E  6ED9               	movwf	fsr2l,c
 21034  012E60  0EFF               	movlw	255
 21035  012E62  20E2               	addwfc	fsr1h,w,c
 21036  012E64  6EDA               	movwf	fsr2h,c
 21037  012E66  50DF               	movf	indf2,w,c
 21038  012E68  6E30               	movwf	(btemp+11)^0,c
 21039  012E6A  0E80               	movlw	128
 21040  012E6C  1630               	andwf	(btemp+11)^0,f,c
 21041                           
 21042                           ;stkvar	_signs @ sp[(-4)+3]
 21043  012E6E  0EFF               	movlw	-1
 21044  012E70  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21045                           
 21046                           ;stkvar	_b @ sp[(-4)+-4]
 21047  012E76  0EFB               	movlw	251
 21048  012E78  24E1               	addwf	fsr1l,w,c
 21049  012E7A  6ED9               	movwf	fsr2l,c
 21050  012E7C  0EFF               	movlw	255
 21051  012E7E  20E2               	addwfc	fsr1h,w,c
 21052  012E80  6EDA               	movwf	fsr2h,c
 21053  012E82  50DF               	movf	indf2,w,c
 21054  012E84  6E30               	movwf	(btemp+11)^0,c
 21055  012E86  90D8               	bcf	status,0,c
 21056  012E88  3430               	rlcf	(btemp+11)^0,w,c
 21057  012E8A  6E2F               	movwf	(btemp+10)^0,c
 21058                           
 21059                           ;stkvar	_bexp @ sp[(-4)+1]
 21060  012E8C  0EFD               	movlw	-3
 21061  012E8E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21062                           
 21063                           ;stkvar	_b @ sp[(-4)+-4]
 21064  012E94  0EFA               	movlw	250
 21065  012E96  24E1               	addwf	fsr1l,w,c
 21066  012E98  6ED9               	movwf	fsr2l,c
 21067  012E9A  0EFF               	movlw	255
 21068  012E9C  20E2               	addwfc	fsr1h,w,c
 21069  012E9E  6EDA               	movwf	fsr2h,c
 21070  012EA0  AEDF               	btfss	indf2,7,c
 21071  012EA2  D002               	goto	l7910
 21072                           
 21073                           ;stkvar	_bexp @ sp[(-4)+1]
 21074  012EA4  0EFD               	movlw	-3
 21075  012EA6  80E3               	bsf	plusw1,0,c
 21076  012EA8                     l7910:
 21077                           
 21078                           ;stkvar	_bexp @ sp[(-4)+1]
 21079  012EA8  0EFD               	movlw	-3
 21080  012EAA  50E3               	movf	plusw1,w,c
 21081  012EAC  B4D8               	btfsc	status,2,c
 21082  012EAE  D027               	goto	l7920
 21083                           
 21084                           ;stkvar	_bexp @ sp[(-4)+1]
 21085  012EB0  0EFD               	movlw	-3
 21086  012EB2  28E3               	incf	plusw1,w,c
 21087  012EB4  A4D8               	btfss	status,2,c
 21088  012EB6  D018               	goto	l7916
 21089  012EB8  0E00               	movlw	0
 21090  012EBA  6E2D               	movwf	(btemp+8)^0,c
 21091  012EBC  0E00               	movlw	0
 21092  012EBE  6E2E               	movwf	(btemp+9)^0,c
 21093  012EC0  0E00               	movlw	0
 21094  012EC2  6E2F               	movwf	(btemp+10)^0,c
 21095  012EC4  0E00               	movlw	0
 21096  012EC6  6E30               	movwf	(btemp+11)^0,c
 21097                           
 21098                           ;stkvar	_b @ sp[(-4)+-4]
 21099  012EC8  0EF8               	movlw	-8
 21100  012ECA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21101  012ED0  0EF9               	movlw	-7
 21102  012ED2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21103  012ED8  0EFA               	movlw	-6
 21104  012EDA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21105  012EE0  0EFB               	movlw	-5
 21106  012EE2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21107  012EE8                     l7916:
 21108                           
 21109                           ;stkvar	_b @ sp[(-4)+-4]
 21110  012EE8  0EFA               	movlw	-6
 21111  012EEA  8EE3               	bsf	plusw1,7,c
 21112                           
 21113                           ;stkvar	_b @ sp[(-4)+-4]
 21114  012EEC  0EFB               	movlw	251
 21115  012EEE  24E1               	addwf	fsr1l,w,c
 21116  012EF0  6ED9               	movwf	fsr2l,c
 21117  012EF2  0EFF               	movlw	255
 21118  012EF4  20E2               	addwfc	fsr1h,w,c
 21119  012EF6  6EDA               	movwf	fsr2h,c
 21120  012EF8  0E00               	movlw	0
 21121  012EFA  6EDF               	movwf	indf2,c
 21122  012EFC  D018               	goto	l7922
 21123  012EFE                     l7920:
 21124  012EFE  0E00               	movlw	0
 21125  012F00  6E2D               	movwf	(btemp+8)^0,c
 21126  012F02  0E00               	movlw	0
 21127  012F04  6E2E               	movwf	(btemp+9)^0,c
 21128  012F06  0E00               	movlw	0
 21129  012F08  6E2F               	movwf	(btemp+10)^0,c
 21130  012F0A  0E00               	movlw	0
 21131  012F0C  6E30               	movwf	(btemp+11)^0,c
 21132                           
 21133                           ;stkvar	_b @ sp[(-4)+-4]
 21134  012F0E  0EF8               	movlw	-8
 21135  012F10  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21136  012F16  0EF9               	movlw	-7
 21137  012F18  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21138  012F1E  0EFA               	movlw	-6
 21139  012F20  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21140  012F26  0EFB               	movlw	-5
 21141  012F28  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21142  012F2E                     l7922:
 21143                           
 21144                           ;stkvar	_a @ sp[(-4)+-8]
 21145  012F2E  0EF7               	movlw	247
 21146  012F30  24E1               	addwf	fsr1l,w,c
 21147  012F32  6ED9               	movwf	fsr2l,c
 21148  012F34  0EFF               	movlw	255
 21149  012F36  20E2               	addwfc	fsr1h,w,c
 21150  012F38  6EDA               	movwf	fsr2h,c
 21151  012F3A  50DF               	movf	indf2,w,c
 21152  012F3C  6E30               	movwf	(btemp+11)^0,c
 21153  012F3E  0E80               	movlw	128
 21154  012F40  1630               	andwf	(btemp+11)^0,f,c
 21155                           
 21156                           ;stkvar	_aexp @ sp[(-4)+2]
 21157  012F42  0EFE               	movlw	-2
 21158  012F44  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21159                           
 21160                           ;stkvar	_signs @ sp[(-4)+3]
 21161                           ;stkvar	_aexp @ sp[(-4)+2]
 21162  012F4A  50E1               	movf	fsr1l,w,c
 21163  012F4C  0FFE               	addlw	-2
 21164  012F4E  6ED9               	movwf	fsr2l,c
 21165  012F50  50E2               	movf	fsr1h,w,c
 21166  012F52  6EDA               	movwf	fsr2h,c
 21167  012F54  0EFF               	movlw	255
 21168  012F56  22DA               	addwfc	fsr2h,f,c
 21169  012F58  0EFF               	movlw	-1
 21170  012F5A  50E3               	movf	plusw1,w,c
 21171  012F5C  18DE               	xorwf	postinc2,w,c
 21172  012F5E  B4D8               	btfsc	status,2,c
 21173  012F60  D002               	goto	l7928
 21174                           
 21175                           ;stkvar	_signs @ sp[(-4)+3]
 21176  012F62  0EFF               	movlw	-1
 21177  012F64  8CE3               	bsf	plusw1,6,c
 21178  012F66                     l7928:
 21179                           
 21180                           ;stkvar	_a @ sp[(-4)+-8]
 21181  012F66  0EF7               	movlw	247
 21182  012F68  24E1               	addwf	fsr1l,w,c
 21183  012F6A  6ED9               	movwf	fsr2l,c
 21184  012F6C  0EFF               	movlw	255
 21185  012F6E  20E2               	addwfc	fsr1h,w,c
 21186  012F70  6EDA               	movwf	fsr2h,c
 21187  012F72  50DF               	movf	indf2,w,c
 21188  012F74  6E30               	movwf	(btemp+11)^0,c
 21189  012F76  90D8               	bcf	status,0,c
 21190  012F78  3430               	rlcf	(btemp+11)^0,w,c
 21191  012F7A  6E2F               	movwf	(btemp+10)^0,c
 21192                           
 21193                           ;stkvar	_aexp @ sp[(-4)+2]
 21194  012F7C  0EFE               	movlw	-2
 21195  012F7E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21196                           
 21197                           ;stkvar	_a @ sp[(-4)+-8]
 21198  012F84  0EF6               	movlw	246
 21199  012F86  24E1               	addwf	fsr1l,w,c
 21200  012F88  6ED9               	movwf	fsr2l,c
 21201  012F8A  0EFF               	movlw	255
 21202  012F8C  20E2               	addwfc	fsr1h,w,c
 21203  012F8E  6EDA               	movwf	fsr2h,c
 21204  012F90  AEDF               	btfss	indf2,7,c
 21205  012F92  D002               	goto	l7934
 21206                           
 21207                           ;stkvar	_aexp @ sp[(-4)+2]
 21208  012F94  0EFE               	movlw	-2
 21209  012F96  80E3               	bsf	plusw1,0,c
 21210  012F98                     l7934:
 21211                           
 21212                           ;stkvar	_aexp @ sp[(-4)+2]
 21213  012F98  0EFE               	movlw	-2
 21214  012F9A  50E3               	movf	plusw1,w,c
 21215  012F9C  B4D8               	btfsc	status,2,c
 21216  012F9E  D027               	goto	l7944
 21217                           
 21218                           ;stkvar	_aexp @ sp[(-4)+2]
 21219  012FA0  0EFE               	movlw	-2
 21220  012FA2  28E3               	incf	plusw1,w,c
 21221  012FA4  A4D8               	btfss	status,2,c
 21222  012FA6  D018               	goto	l7940
 21223  012FA8  0E00               	movlw	0
 21224  012FAA  6E2D               	movwf	(btemp+8)^0,c
 21225  012FAC  0E00               	movlw	0
 21226  012FAE  6E2E               	movwf	(btemp+9)^0,c
 21227  012FB0  0E00               	movlw	0
 21228  012FB2  6E2F               	movwf	(btemp+10)^0,c
 21229  012FB4  0E00               	movlw	0
 21230  012FB6  6E30               	movwf	(btemp+11)^0,c
 21231                           
 21232                           ;stkvar	_a @ sp[(-4)+-8]
 21233  012FB8  0EF4               	movlw	-12
 21234  012FBA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21235  012FC0  0EF5               	movlw	-11
 21236  012FC2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21237  012FC8  0EF6               	movlw	-10
 21238  012FCA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21239  012FD0  0EF7               	movlw	-9
 21240  012FD2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21241  012FD8                     l7940:
 21242                           
 21243                           ;stkvar	_a @ sp[(-4)+-8]
 21244  012FD8  0EF6               	movlw	-10
 21245  012FDA  8EE3               	bsf	plusw1,7,c
 21246                           
 21247                           ;stkvar	_a @ sp[(-4)+-8]
 21248  012FDC  0EF7               	movlw	247
 21249  012FDE  24E1               	addwf	fsr1l,w,c
 21250  012FE0  6ED9               	movwf	fsr2l,c
 21251  012FE2  0EFF               	movlw	255
 21252  012FE4  20E2               	addwfc	fsr1h,w,c
 21253  012FE6  6EDA               	movwf	fsr2h,c
 21254  012FE8  0E00               	movlw	0
 21255  012FEA  6EDF               	movwf	indf2,c
 21256  012FEC  D018               	goto	l7946
 21257  012FEE                     l7944:
 21258  012FEE  0E00               	movlw	0
 21259  012FF0  6E2D               	movwf	(btemp+8)^0,c
 21260  012FF2  0E00               	movlw	0
 21261  012FF4  6E2E               	movwf	(btemp+9)^0,c
 21262  012FF6  0E00               	movlw	0
 21263  012FF8  6E2F               	movwf	(btemp+10)^0,c
 21264  012FFA  0E00               	movlw	0
 21265  012FFC  6E30               	movwf	(btemp+11)^0,c
 21266                           
 21267                           ;stkvar	_a @ sp[(-4)+-8]
 21268  012FFE  0EF4               	movlw	-12
 21269  013000  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21270  013006  0EF5               	movlw	-11
 21271  013008  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21272  01300E  0EF6               	movlw	-10
 21273  013010  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21274  013016  0EF7               	movlw	-9
 21275  013018  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21276  01301E                     l7946:
 21277                           
 21278                           ;stkvar	_bexp @ sp[(-4)+1]
 21279                           ;stkvar	_aexp @ sp[(-4)+2]
 21280  01301E  50E1               	movf	fsr1l,w,c
 21281  013020  0FFE               	addlw	-2
 21282  013022  6ED9               	movwf	fsr2l,c
 21283  013024  50E2               	movf	fsr1h,w,c
 21284  013026  6EDA               	movwf	fsr2h,c
 21285  013028  0EFF               	movlw	255
 21286  01302A  22DA               	addwfc	fsr2h,f,c
 21287  01302C  0EFD               	movlw	-3
 21288  01302E  50E3               	movf	plusw1,w,c
 21289  013030  5CDE               	subwf	postinc2,w,c
 21290  013032  B0D8               	btfsc	status,0,c
 21291  013034  D0A4               	goto	l7982
 21292                           
 21293                           ;stkvar	_signs @ sp[(-4)+3]
 21294  013036  0EFF               	movlw	-1
 21295  013038  ACE3               	btfss	plusw1,6,c
 21296  01303A  D002               	goto	l7952
 21297                           
 21298                           ;stkvar	_signs @ sp[(-4)+3]
 21299  01303C  0EFF               	movlw	-1
 21300  01303E  7EE3               	btg	plusw1,7,c
 21301  013040                     l7952:
 21302                           
 21303                           ;stkvar	_bexp @ sp[(-4)+1]
 21304                           ;stkvar	_grs @ sp[(-4)+0]
 21305  013040  0EFD               	movlw	-3
 21306  013042  006F FF8C  F025    	movff	plusw1,btemp
 21307  013048  0EFC               	movlw	-4
 21308  01304A  0060  F097  FFE3   	movff	btemp,plusw1
 21309                           
 21310                           ;stkvar	_aexp @ sp[(-4)+2]
 21311                           ;stkvar	_bexp @ sp[(-4)+1]
 21312  013050  0EFE               	movlw	-2
 21313  013052  006F FF8C  F025    	movff	plusw1,btemp
 21314  013058  0EFD               	movlw	-3
 21315  01305A  0060  F097  FFE3   	movff	btemp,plusw1
 21316                           
 21317                           ;stkvar	_grs @ sp[(-4)+0]
 21318                           ;stkvar	_aexp @ sp[(-4)+2]
 21319  013060  0EFC               	movlw	-4
 21320  013062  006F FF8C  F025    	movff	plusw1,btemp
 21321  013068  0EFE               	movlw	-2
 21322  01306A  0060  F097  FFE3   	movff	btemp,plusw1
 21323                           
 21324                           ;stkvar	_b @ sp[(-4)+-4]
 21325                           ;stkvar	_grs @ sp[(-4)+0]
 21326  013070  0EF8               	movlw	-8
 21327  013072  006F FF8C  F025    	movff	plusw1,btemp
 21328  013078  0EFC               	movlw	-4
 21329  01307A  0060  F097  FFE3   	movff	btemp,plusw1
 21330                           
 21331                           ;stkvar	_a @ sp[(-4)+-8]
 21332                           ;stkvar	_b @ sp[(-4)+-4]
 21333  013080  0EF4               	movlw	-12
 21334  013082  006F FF8C  F025    	movff	plusw1,btemp
 21335  013088  0EF8               	movlw	-8
 21336  01308A  0060  F097  FFE3   	movff	btemp,plusw1
 21337                           
 21338                           ;stkvar	_grs @ sp[(-4)+0]
 21339                           ;stkvar	_a @ sp[(-4)+-8]
 21340  013090  0EFC               	movlw	-4
 21341  013092  006F FF8C  F025    	movff	plusw1,btemp
 21342  013098  0EF4               	movlw	-12
 21343  01309A  0060  F097  FFE3   	movff	btemp,plusw1
 21344                           
 21345                           ;stkvar	_b @ sp[(-4)+-4]
 21346  0130A0  0EF9               	movlw	249
 21347  0130A2  24E1               	addwf	fsr1l,w,c
 21348  0130A4  6ED9               	movwf	fsr2l,c
 21349  0130A6  0EFF               	movlw	255
 21350  0130A8  20E2               	addwfc	fsr1h,w,c
 21351  0130AA  6EDA               	movwf	fsr2h,c
 21352  0130AC  50DF               	movf	indf2,w,c
 21353  0130AE  6E30               	movwf	(btemp+11)^0,c
 21354                           
 21355                           ;stkvar	_grs @ sp[(-4)+0]
 21356  0130B0  0EFC               	movlw	-4
 21357  0130B2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21358                           
 21359                           ;stkvar	_a @ sp[(-4)+-8]
 21360  0130B8  0EF5               	movlw	245
 21361  0130BA  24E1               	addwf	fsr1l,w,c
 21362  0130BC  6ED9               	movwf	fsr2l,c
 21363  0130BE  0EFF               	movlw	255
 21364  0130C0  20E2               	addwfc	fsr1h,w,c
 21365  0130C2  6EDA               	movwf	fsr2h,c
 21366                           
 21367                           ;stkvar	_b @ sp[(-4)+-4]
 21368  0130C4  0EF9               	movlw	249
 21369  0130C6  24E1               	addwf	fsr1l,w,c
 21370  0130C8  6EE9               	movwf	fsr0l,c
 21371  0130CA  0EFF               	movlw	255
 21372  0130CC  20E2               	addwfc	fsr1h,w,c
 21373  0130CE  6EEA               	movwf	fsr0h,c
 21374  0130D0  006F FF7F FFEF     	movff	indf2,indf0
 21375                           
 21376                           ;stkvar	_grs @ sp[(-4)+0]
 21377                           ;stkvar	_a @ sp[(-4)+-8]
 21378  0130D6  0EF5               	movlw	245
 21379  0130D8  24E1               	addwf	fsr1l,w,c
 21380  0130DA  6ED9               	movwf	fsr2l,c
 21381  0130DC  0EFF               	movlw	255
 21382  0130DE  20E2               	addwfc	fsr1h,w,c
 21383  0130E0  6EDA               	movwf	fsr2h,c
 21384  0130E2  0EFC               	movlw	-4
 21385  0130E4  006F FF8F FFDF     	movff	plusw1,indf2
 21386                           
 21387                           ;stkvar	_b @ sp[(-4)+-4]
 21388  0130EA  0EFA               	movlw	250
 21389  0130EC  24E1               	addwf	fsr1l,w,c
 21390  0130EE  6ED9               	movwf	fsr2l,c
 21391  0130F0  0EFF               	movlw	255
 21392  0130F2  20E2               	addwfc	fsr1h,w,c
 21393  0130F4  6EDA               	movwf	fsr2h,c
 21394  0130F6  50DF               	movf	indf2,w,c
 21395  0130F8  6E30               	movwf	(btemp+11)^0,c
 21396                           
 21397                           ;stkvar	_grs @ sp[(-4)+0]
 21398  0130FA  0EFC               	movlw	-4
 21399  0130FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21400                           
 21401                           ;stkvar	_a @ sp[(-4)+-8]
 21402  013102  0EF6               	movlw	246
 21403  013104  24E1               	addwf	fsr1l,w,c
 21404  013106  6ED9               	movwf	fsr2l,c
 21405  013108  0EFF               	movlw	255
 21406  01310A  20E2               	addwfc	fsr1h,w,c
 21407  01310C  6EDA               	movwf	fsr2h,c
 21408                           
 21409                           ;stkvar	_b @ sp[(-4)+-4]
 21410  01310E  0EFA               	movlw	250
 21411  013110  24E1               	addwf	fsr1l,w,c
 21412  013112  6EE9               	movwf	fsr0l,c
 21413  013114  0EFF               	movlw	255
 21414  013116  20E2               	addwfc	fsr1h,w,c
 21415  013118  6EEA               	movwf	fsr0h,c
 21416  01311A  006F FF7F FFEF     	movff	indf2,indf0
 21417                           
 21418                           ;stkvar	_grs @ sp[(-4)+0]
 21419                           ;stkvar	_a @ sp[(-4)+-8]
 21420  013120  0EF6               	movlw	246
 21421  013122  24E1               	addwf	fsr1l,w,c
 21422  013124  6ED9               	movwf	fsr2l,c
 21423  013126  0EFF               	movlw	255
 21424  013128  20E2               	addwfc	fsr1h,w,c
 21425  01312A  6EDA               	movwf	fsr2h,c
 21426  01312C  0EFC               	movlw	-4
 21427  01312E  006F FF8F FFDF     	movff	plusw1,indf2
 21428                           
 21429                           ;stkvar	_b @ sp[(-4)+-4]
 21430  013134  0EFB               	movlw	251
 21431  013136  24E1               	addwf	fsr1l,w,c
 21432  013138  6ED9               	movwf	fsr2l,c
 21433  01313A  0EFF               	movlw	255
 21434  01313C  20E2               	addwfc	fsr1h,w,c
 21435  01313E  6EDA               	movwf	fsr2h,c
 21436  013140  50DF               	movf	indf2,w,c
 21437  013142  6E30               	movwf	(btemp+11)^0,c
 21438                           
 21439                           ;stkvar	_grs @ sp[(-4)+0]
 21440  013144  0EFC               	movlw	-4
 21441  013146  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21442                           
 21443                           ;stkvar	_a @ sp[(-4)+-8]
 21444  01314C  0EF7               	movlw	247
 21445  01314E  24E1               	addwf	fsr1l,w,c
 21446  013150  6ED9               	movwf	fsr2l,c
 21447  013152  0EFF               	movlw	255
 21448  013154  20E2               	addwfc	fsr1h,w,c
 21449  013156  6EDA               	movwf	fsr2h,c
 21450                           
 21451                           ;stkvar	_b @ sp[(-4)+-4]
 21452  013158  0EFB               	movlw	251
 21453  01315A  24E1               	addwf	fsr1l,w,c
 21454  01315C  6EE9               	movwf	fsr0l,c
 21455  01315E  0EFF               	movlw	255
 21456  013160  20E2               	addwfc	fsr1h,w,c
 21457  013162  6EEA               	movwf	fsr0h,c
 21458  013164  006F FF7F FFEF     	movff	indf2,indf0
 21459                           
 21460                           ;stkvar	_grs @ sp[(-4)+0]
 21461                           ;stkvar	_a @ sp[(-4)+-8]
 21462  01316A  0EF7               	movlw	247
 21463  01316C  24E1               	addwf	fsr1l,w,c
 21464  01316E  6ED9               	movwf	fsr2l,c
 21465  013170  0EFF               	movlw	255
 21466  013172  20E2               	addwfc	fsr1h,w,c
 21467  013174  6EDA               	movwf	fsr2h,c
 21468  013176  0EFC               	movlw	-4
 21469  013178  006F FF8F FFDF     	movff	plusw1,indf2
 21470  01317E                     l7982:
 21471                           
 21472                           ;stkvar	_grs @ sp[(-4)+0]
 21473  01317E  0EFC               	movlw	-4
 21474  013180  6AE3               	clrf	plusw1,c
 21475                           
 21476                           ;stkvar	_aexp @ sp[(-4)+2]
 21477  013182  0EFE               	movlw	-2
 21478  013184  50E3               	movf	plusw1,w,c
 21479  013186  6E2F               	movwf	(btemp+10)^0,c
 21480  013188  6A30               	clrf	(btemp+11)^0,c
 21481                           
 21482                           ;stkvar	_bexp @ sp[(-4)+1]
 21483  01318A  0EFD               	movlw	-3
 21484  01318C  50E3               	movf	plusw1,w,c
 21485  01318E  5E2F               	subwf	(btemp+10)^0,f,c
 21486  013190  0E00               	movlw	0
 21487  013192  5A30               	subwfb	(btemp+11)^0,f,c
 21488  013194  BE30               	btfsc	(btemp+11)^0,7,c
 21489  013196  D062               	goto	l8006
 21490  013198  5030               	movf	(btemp+11)^0,w,c
 21491  01319A  E104               	bnz	u7110
 21492  01319C  0E1A               	movlw	26
 21493  01319E  5C2F               	subwf	(btemp+10)^0,w,c
 21494  0131A0  A0D8               	btfss	status,0,c
 21495  0131A2  D05C               	goto	l8006
 21496  0131A4                     u7110:
 21497                           
 21498                           ;stkvar	_b @ sp[(-4)+-4]
 21499  0131A4  0EF8               	movlw	-8
 21500  0131A6  50E3               	movf	plusw1,w,c
 21501  0131A8  E10A               	bnz	u7121
 21502  0131AA  0EF9               	movlw	-7
 21503  0131AC  50E3               	movf	plusw1,w,c
 21504  0131AE  E107               	bnz	u7121
 21505  0131B0  0EFA               	movlw	-6
 21506  0131B2  50E3               	movf	plusw1,w,c
 21507  0131B4  E104               	bnz	u7121
 21508  0131B6  0EFB               	movlw	-5
 21509  0131B8  50E3               	movf	plusw1,w,c
 21510  0131BA  B4D8               	btfsc	status,2,c
 21511  0131BC  D003               	goto	u7120
 21512  0131BE                     u7121:
 21513  0131BE  6A30               	clrf	(btemp+11)^0,c
 21514  0131C0  2A30               	incf	(btemp+11)^0,f,c
 21515  0131C2  D001               	goto	u7138
 21516  0131C4                     u7120:
 21517  0131C4  6A30               	clrf	(btemp+11)^0,c
 21518  0131C6                     u7138:
 21519                           
 21520                           ;stkvar	_grs @ sp[(-4)+0]
 21521  0131C6  0EFC               	movlw	-4
 21522  0131C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21523                           
 21524                           ;stkvar	_b @ sp[(-4)+-4]
 21525  0131CE  0EF8               	movlw	-8
 21526  0131D0  6AE3               	clrf	plusw1,c
 21527  0131D2  0EF9               	movlw	-7
 21528  0131D4  6AE3               	clrf	plusw1,c
 21529  0131D6  0EFA               	movlw	-6
 21530  0131D8  6AE3               	clrf	plusw1,c
 21531  0131DA  0EFB               	movlw	-5
 21532  0131DC  6AE3               	clrf	plusw1,c
 21533                           
 21534                           ;stkvar	_aexp @ sp[(-4)+2]
 21535                           ;stkvar	_bexp @ sp[(-4)+1]
 21536  0131DE  0EFE               	movlw	-2
 21537  0131E0  006F FF8C  F025    	movff	plusw1,btemp
 21538  0131E6  0EFD               	movlw	-3
 21539  0131E8  0060  F097  FFE3   	movff	btemp,plusw1
 21540  0131EE  D042               	goto	u7170
 21541  0131F0                     l7992:
 21542                           
 21543                           ;stkvar	_grs @ sp[(-4)+0]
 21544  0131F0  0EFC               	movlw	-4
 21545  0131F2  A0E3               	btfss	plusw1,0,c
 21546  0131F4  D00D               	goto	l7996
 21547                           
 21548                           ;stkvar	_grs @ sp[(-4)+0]
 21549  0131F6  0EFC               	movlw	-4
 21550  0131F8  006F FF8C  F030    	movff	plusw1,btemp+11
 21551  0131FE  90D8               	bcf	status,0,c
 21552  013200  3230               	rrcf	(btemp+11)^0,f,c
 21553  013202  0E01               	movlw	1
 21554  013204  1230               	iorwf	(btemp+11)^0,f,c
 21555                           
 21556                           ;stkvar	_grs @ sp[(-4)+0]
 21557  013206  0EFC               	movlw	-4
 21558  013208  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21559  01320E  D009               	goto	l7998
 21560  013210                     l7996:
 21561                           
 21562                           ;stkvar	_grs @ sp[(-4)+0]
 21563  013210  50E1               	movf	fsr1l,w,c
 21564  013212  0FFC               	addlw	-4
 21565  013214  6ED9               	movwf	fsr2l,c
 21566  013216  50E2               	movf	fsr1h,w,c
 21567  013218  6EDA               	movwf	fsr2h,c
 21568  01321A  0EFF               	movlw	255
 21569  01321C  22DA               	addwfc	fsr2h,f,c
 21570  01321E  90D8               	bcf	status,0,c
 21571  013220  32DF               	rrcf	indf2,f,c
 21572  013222                     l7998:
 21573                           
 21574                           ;stkvar	_b @ sp[(-4)+-4]
 21575  013222  0EF8               	movlw	-8
 21576  013224  A0E3               	btfss	plusw1,0,c
 21577  013226  D002               	goto	l8002
 21578                           
 21579                           ;stkvar	_grs @ sp[(-4)+0]
 21580  013228  0EFC               	movlw	-4
 21581  01322A  8EE3               	bsf	plusw1,7,c
 21582  01322C                     l8002:
 21583  01322C  0E01               	movlw	1
 21584  01322E  6E30               	movwf	(btemp+11)^0,c
 21585                           
 21586                           ;stkvar	_b @ sp[(-4)+-4]
 21587  013230  50E1               	movf	fsr1l,w,c
 21588  013232  0FF8               	addlw	-8
 21589  013234  6ED9               	movwf	fsr2l,c
 21590  013236  50E2               	movf	fsr1h,w,c
 21591  013238  6EDA               	movwf	fsr2h,c
 21592  01323A  0EFF               	movlw	255
 21593  01323C  22DA               	addwfc	fsr2h,f,c
 21594  01323E  2830               	incf	(btemp+11)^0,w,c
 21595  013240  52DE               	movf	postinc2,f,c
 21596  013242  D008               	goto	u7160
 21597  013244                     u7165:
 21598  013244  52DE               	movf	postinc2,f,c
 21599  013246  90D8               	bcf	status,0,c
 21600  013248  BEDC               	btfsc	preinc2,7,c
 21601  01324A  80D8               	bsf	status,0,c
 21602  01324C  32DD               	rrcf	postdec2,f,c
 21603  01324E  32DD               	rrcf	postdec2,f,c
 21604  013250  32DD               	rrcf	postdec2,f,c
 21605  013252  32DE               	rrcf	postinc2,f,c
 21606  013254                     u7160:
 21607  013254  2EE8               	decfsz	wreg,f,c
 21608  013256  D7F6               	goto	u7165
 21609                           
 21610                           ;stkvar	_bexp @ sp[(-4)+1]
 21611  013258  0EFD               	movlw	-3
 21612  01325A  2AE3               	incf	plusw1,f,c
 21613  01325C                     l8006:
 21614                           
 21615                           ;stkvar	_aexp @ sp[(-4)+2]
 21616                           ;stkvar	_bexp @ sp[(-4)+1]
 21617  01325C  50E1               	movf	fsr1l,w,c
 21618  01325E  0FFD               	addlw	-3
 21619  013260  6ED9               	movwf	fsr2l,c
 21620  013262  50E2               	movf	fsr1h,w,c
 21621  013264  6EDA               	movwf	fsr2h,c
 21622  013266  0EFF               	movlw	255
 21623  013268  22DA               	addwfc	fsr2h,f,c
 21624  01326A  0EFE               	movlw	-2
 21625  01326C  50E3               	movf	plusw1,w,c
 21626  01326E  5CDE               	subwf	postinc2,w,c
 21627  013270  A0D8               	btfss	status,0,c
 21628  013272  D7BE               	goto	l7992
 21629  013274                     u7170:
 21630                           
 21631                           ;stkvar	_signs @ sp[(-4)+3]
 21632  013274  0EFF               	movlw	-1
 21633  013276  BCE3               	btfsc	plusw1,6,c
 21634  013278  D066               	goto	l8034
 21635                           
 21636                           ;stkvar	_bexp @ sp[(-4)+1]
 21637  01327A  0EFD               	movlw	-3
 21638  01327C  50E3               	movf	plusw1,w,c
 21639  01327E  B4D8               	btfsc	status,2,c
 21640  013280  D0F2               	goto	u7270
 21641                           
 21642                           ;stkvar	_a @ sp[(-4)+-8]
 21643                           ;stkvar	_b @ sp[(-4)+-4]
 21644  013282  0EF8               	movlw	-8
 21645  013284  50E3               	movf	plusw1,w,c
 21646  013286  6E25               	movwf	btemp^0,c
 21647  013288  0EF4               	movlw	-12
 21648  01328A  50E3               	movf	plusw1,w,c
 21649  01328C  2625               	addwf	btemp^0,f,c
 21650  01328E  0EF8               	movlw	-8
 21651  013290  0060  F097  FFE3   	movff	btemp,plusw1
 21652  013296  0EF9               	movlw	-7
 21653  013298  50E3               	movf	plusw1,w,c
 21654  01329A  6E25               	movwf	btemp^0,c
 21655  01329C  0EF5               	movlw	-11
 21656  01329E  50E3               	movf	plusw1,w,c
 21657  0132A0  2225               	addwfc	btemp^0,f,c
 21658  0132A2  0EF9               	movlw	-7
 21659  0132A4  0060  F097  FFE3   	movff	btemp,plusw1
 21660  0132AA  0EFA               	movlw	-6
 21661  0132AC  50E3               	movf	plusw1,w,c
 21662  0132AE  6E25               	movwf	btemp^0,c
 21663  0132B0  0EF6               	movlw	-10
 21664  0132B2  50E3               	movf	plusw1,w,c
 21665  0132B4  2225               	addwfc	btemp^0,f,c
 21666  0132B6  0EFA               	movlw	-6
 21667  0132B8  0060  F097  FFE3   	movff	btemp,plusw1
 21668  0132BE  0EFB               	movlw	-5
 21669  0132C0  50E3               	movf	plusw1,w,c
 21670  0132C2  6E25               	movwf	btemp^0,c
 21671  0132C4  0EF7               	movlw	-9
 21672  0132C6  50E3               	movf	plusw1,w,c
 21673  0132C8  2225               	addwfc	btemp^0,f,c
 21674  0132CA  0EFB               	movlw	-5
 21675  0132CC  0060  F097  FFE3   	movff	btemp,plusw1
 21676                           
 21677                           ;stkvar	_b @ sp[(-4)+-4]
 21678  0132D2  0EFB               	movlw	-5
 21679  0132D4  A0E3               	btfss	plusw1,0,c
 21680  0132D6  D101               	goto	u7310
 21681                           
 21682                           ;stkvar	_grs @ sp[(-4)+0]
 21683  0132D8  0EFC               	movlw	-4
 21684  0132DA  A0E3               	btfss	plusw1,0,c
 21685  0132DC  D00D               	goto	l8024
 21686                           
 21687                           ;stkvar	_grs @ sp[(-4)+0]
 21688  0132DE  0EFC               	movlw	-4
 21689  0132E0  006F FF8C  F030    	movff	plusw1,btemp+11
 21690  0132E6  90D8               	bcf	status,0,c
 21691  0132E8  3230               	rrcf	(btemp+11)^0,f,c
 21692  0132EA  0E01               	movlw	1
 21693  0132EC  1230               	iorwf	(btemp+11)^0,f,c
 21694                           
 21695                           ;stkvar	_grs @ sp[(-4)+0]
 21696  0132EE  0EFC               	movlw	-4
 21697  0132F0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21698  0132F6  D009               	goto	l8026
 21699  0132F8                     l8024:
 21700                           
 21701                           ;stkvar	_grs @ sp[(-4)+0]
 21702  0132F8  50E1               	movf	fsr1l,w,c
 21703  0132FA  0FFC               	addlw	-4
 21704  0132FC  6ED9               	movwf	fsr2l,c
 21705  0132FE  50E2               	movf	fsr1h,w,c
 21706  013300  6EDA               	movwf	fsr2h,c
 21707  013302  0EFF               	movlw	255
 21708  013304  22DA               	addwfc	fsr2h,f,c
 21709  013306  90D8               	bcf	status,0,c
 21710  013308  32DF               	rrcf	indf2,f,c
 21711  01330A                     l8026:
 21712                           
 21713                           ;stkvar	_b @ sp[(-4)+-4]
 21714  01330A  0EF8               	movlw	-8
 21715  01330C  A0E3               	btfss	plusw1,0,c
 21716  01330E  D002               	goto	l8030
 21717                           
 21718                           ;stkvar	_grs @ sp[(-4)+0]
 21719  013310  0EFC               	movlw	-4
 21720  013312  8EE3               	bsf	plusw1,7,c
 21721  013314                     l8030:
 21722  013314  0E01               	movlw	1
 21723  013316  6E30               	movwf	(btemp+11)^0,c
 21724                           
 21725                           ;stkvar	_b @ sp[(-4)+-4]
 21726  013318  50E1               	movf	fsr1l,w,c
 21727  01331A  0FF8               	addlw	-8
 21728  01331C  6ED9               	movwf	fsr2l,c
 21729  01331E  50E2               	movf	fsr1h,w,c
 21730  013320  6EDA               	movwf	fsr2h,c
 21731  013322  0EFF               	movlw	255
 21732  013324  22DA               	addwfc	fsr2h,f,c
 21733  013326  2830               	incf	(btemp+11)^0,w,c
 21734  013328  52DE               	movf	postinc2,f,c
 21735  01332A  D008               	goto	u7230
 21736  01332C                     u7235:
 21737  01332C  52DE               	movf	postinc2,f,c
 21738  01332E  90D8               	bcf	status,0,c
 21739  013330  BEDC               	btfsc	preinc2,7,c
 21740  013332  80D8               	bsf	status,0,c
 21741  013334  32DD               	rrcf	postdec2,f,c
 21742  013336  32DD               	rrcf	postdec2,f,c
 21743  013338  32DD               	rrcf	postdec2,f,c
 21744  01333A  32DE               	rrcf	postinc2,f,c
 21745  01333C                     u7230:
 21746  01333C  2EE8               	decfsz	wreg,f,c
 21747  01333E  D7F6               	goto	u7235
 21748                           
 21749                           ;stkvar	_bexp @ sp[(-4)+1]
 21750  013340  0EFD               	movlw	-3
 21751  013342  2AE3               	incf	plusw1,f,c
 21752  013344  D0CA               	goto	u7310
 21753  013346                     l8034:
 21754                           
 21755                           ;stkvar	_a @ sp[(-4)+-8]
 21756                           ;stkvar	_b @ sp[(-4)+-4]
 21757  013346  50E1               	movf	fsr1l,w,c
 21758  013348  0FF8               	addlw	-8
 21759  01334A  6ED9               	movwf	fsr2l,c
 21760  01334C  50E2               	movf	fsr1h,w,c
 21761  01334E  6EDA               	movwf	fsr2h,c
 21762  013350  0EFF               	movlw	255
 21763  013352  22DA               	addwfc	fsr2h,f,c
 21764  013354  0EF4               	movlw	-12
 21765  013356  50E3               	movf	plusw1,w,c
 21766  013358  5CDE               	subwf	postinc2,w,c
 21767  01335A  0EF5               	movlw	-11
 21768  01335C  50E3               	movf	plusw1,w,c
 21769  01335E  58DE               	subwfb	postinc2,w,c
 21770  013360  0EF6               	movlw	-10
 21771  013362  50E3               	movf	plusw1,w,c
 21772  013364  58DE               	subwfb	postinc2,w,c
 21773  013366  50DE               	movf	postinc2,w,c
 21774  013368  0A80               	xorlw	128
 21775  01336A  6E25               	movwf	btemp^0,c
 21776  01336C  0EF7               	movlw	-9
 21777  01336E  50E3               	movf	plusw1,w,c
 21778  013370  0A80               	xorlw	128
 21779  013372  5825               	subwfb	btemp^0,w,c
 21780  013374  B0D8               	btfsc	status,0,c
 21781  013376  D053               	goto	l8046
 21782                           
 21783                           ;stkvar	_b @ sp[(-4)+-4]
 21784                           ;stkvar	_a @ sp[(-4)+-8]
 21785  013378  0EF4               	movlw	-12
 21786  01337A  006F FF8C  F02D    	movff	plusw1,btemp+8
 21787  013380  0EF5               	movlw	-11
 21788  013382  006F FF8C  F02E    	movff	plusw1,btemp+9
 21789  013388  0EF6               	movlw	-10
 21790  01338A  006F FF8C  F02F    	movff	plusw1,btemp+10
 21791  013390  0EF7               	movlw	-9
 21792  013392  006F FF8C  F030    	movff	plusw1,btemp+11
 21793  013398  0EF8               	movlw	-8
 21794  01339A  50E3               	movf	plusw1,w,c
 21795  01339C  5E2D               	subwf	(btemp+8)^0,f,c
 21796  01339E  0EF9               	movlw	-7
 21797  0133A0  50E3               	movf	plusw1,w,c
 21798  0133A2  5A2E               	subwfb	(btemp+9)^0,f,c
 21799  0133A4  0EFA               	movlw	-6
 21800  0133A6  50E3               	movf	plusw1,w,c
 21801  0133A8  5A2F               	subwfb	(btemp+10)^0,f,c
 21802  0133AA  0EFB               	movlw	-5
 21803  0133AC  50E3               	movf	plusw1,w,c
 21804  0133AE  5A30               	subwfb	(btemp+11)^0,f,c
 21805  0133B0  0EFF               	movlw	255
 21806  0133B2  242D               	addwf	(btemp+8)^0,w,c
 21807  0133B4  6E29               	movwf	(btemp+4)^0,c
 21808  0133B6  0EFF               	movlw	255
 21809  0133B8  202E               	addwfc	(btemp+9)^0,w,c
 21810  0133BA  6E2A               	movwf	(btemp+5)^0,c
 21811  0133BC  0EFF               	movlw	255
 21812  0133BE  202F               	addwfc	(btemp+10)^0,w,c
 21813  0133C0  6E2B               	movwf	(btemp+6)^0,c
 21814  0133C2  0EFF               	movlw	255
 21815  0133C4  2030               	addwfc	(btemp+11)^0,w,c
 21816  0133C6  6E2C               	movwf	(btemp+7)^0,c
 21817                           
 21818                           ;stkvar	_b @ sp[(-4)+-4]
 21819  0133C8  0EF8               	movlw	-8
 21820  0133CA  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 21821  0133D0  0EF9               	movlw	-7
 21822  0133D2  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 21823  0133D8  0EFA               	movlw	-6
 21824  0133DA  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 21825  0133E0  0EFB               	movlw	-5
 21826  0133E2  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 21827                           
 21828                           ;stkvar	_signs @ sp[(-4)+3]
 21829  0133E8  0EFF               	movlw	-1
 21830  0133EA  7EE3               	btg	plusw1,7,c
 21831                           
 21832                           ;stkvar	_grs @ sp[(-4)+0]
 21833  0133EC  0EFC               	movlw	-4
 21834  0133EE  50E3               	movf	plusw1,w,c
 21835  0133F0  0800               	sublw	0
 21836  0133F2  6E30               	movwf	(btemp+11)^0,c
 21837                           
 21838                           ;stkvar	_grs @ sp[(-4)+0]
 21839  0133F4  0EFC               	movlw	-4
 21840  0133F6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21841                           
 21842                           ;stkvar	_grs @ sp[(-4)+0]
 21843  0133FC  0EFC               	movlw	-4
 21844  0133FE  50E3               	movf	plusw1,w,c
 21845  013400  A4D8               	btfss	status,2,c
 21846  013402  D020               	goto	l8048
 21847                           
 21848                           ;stkvar	_b @ sp[(-4)+-4]
 21849  013404  50E1               	movf	fsr1l,w,c
 21850  013406  0FF8               	addlw	-8
 21851  013408  6ED9               	movwf	fsr2l,c
 21852  01340A  50E2               	movf	fsr1h,w,c
 21853  01340C  6EDA               	movwf	fsr2h,c
 21854  01340E  0EFF               	movlw	255
 21855  013410  22DA               	addwfc	fsr2h,f,c
 21856  013412  2ADE               	incf	postinc2,f,c
 21857  013414  0E00               	movlw	0
 21858  013416  22DE               	addwfc	postinc2,f,c
 21859  013418  22DE               	addwfc	postinc2,f,c
 21860  01341A  22DE               	addwfc	postinc2,f,c
 21861  01341C  D013               	goto	l8048
 21862  01341E                     l8046:
 21863                           
 21864                           ;stkvar	_a @ sp[(-4)+-8]
 21865                           ;stkvar	_b @ sp[(-4)+-4]
 21866  01341E  50E1               	movf	fsr1l,w,c
 21867  013420  0FF8               	addlw	-8
 21868  013422  6ED9               	movwf	fsr2l,c
 21869  013424  50E2               	movf	fsr1h,w,c
 21870  013426  6EDA               	movwf	fsr2h,c
 21871  013428  0EFF               	movlw	255
 21872  01342A  22DA               	addwfc	fsr2h,f,c
 21873  01342C  0EF4               	movlw	-12
 21874  01342E  50E3               	movf	plusw1,w,c
 21875  013430  5EDE               	subwf	postinc2,f,c
 21876  013432  0EF5               	movlw	-11
 21877  013434  50E3               	movf	plusw1,w,c
 21878  013436  5ADE               	subwfb	postinc2,f,c
 21879  013438  0EF6               	movlw	-10
 21880  01343A  50E3               	movf	plusw1,w,c
 21881  01343C  5ADE               	subwfb	postinc2,f,c
 21882  01343E  0EF7               	movlw	-9
 21883  013440  50E3               	movf	plusw1,w,c
 21884  013442  5ADE               	subwfb	postinc2,f,c
 21885  013444                     l8048:
 21886                           
 21887                           ;stkvar	_b @ sp[(-4)+-4]
 21888  013444  0EF8               	movlw	-8
 21889  013446  50E3               	movf	plusw1,w,c
 21890  013448  E145               	bnz	l8070
 21891  01344A  0EF9               	movlw	-7
 21892  01344C  50E3               	movf	plusw1,w,c
 21893  01344E  E142               	bnz	l8070
 21894  013450  0EFA               	movlw	-6
 21895  013452  50E3               	movf	plusw1,w,c
 21896  013454  E13F               	bnz	l8070
 21897  013456  0EFB               	movlw	-5
 21898  013458  50E3               	movf	plusw1,w,c
 21899  01345A  A4D8               	btfss	status,2,c
 21900  01345C  D03B               	goto	l8070
 21901                           
 21902                           ;stkvar	_grs @ sp[(-4)+0]
 21903  01345E  0EFC               	movlw	-4
 21904  013460  50E3               	movf	plusw1,w,c
 21905  013462  A4D8               	btfss	status,2,c
 21906  013464  D037               	goto	l8070
 21907  013466                     u7270:
 21908  013466  0E00               	movlw	0
 21909  013468  6E25               	movwf	btemp^0,c
 21910  01346A  0E00               	movlw	0
 21911  01346C  6E26               	movwf	(btemp+1)^0,c
 21912  01346E  0E00               	movlw	0
 21913  013470  6E27               	movwf	(btemp+2)^0,c
 21914  013472  0E00               	movlw	0
 21915  013474  6E28               	movwf	(btemp+3)^0,c
 21916  013476  D0C6               	goto	l2762
 21917  013478                     l8056:
 21918                           
 21919                           ;stkvar	_b @ sp[(-4)+-4]
 21920  013478  90D8               	bcf	status,0,c
 21921  01347A  0EF8               	movlw	-8
 21922  01347C  36E3               	rlcf	plusw1,f,c
 21923  01347E  0EF9               	movlw	-7
 21924  013480  36E3               	rlcf	plusw1,f,c
 21925  013482  0EFA               	movlw	-6
 21926  013484  36E3               	rlcf	plusw1,f,c
 21927  013486  0EFB               	movlw	-5
 21928  013488  36E3               	rlcf	plusw1,f,c
 21929                           
 21930                           ;stkvar	_grs @ sp[(-4)+0]
 21931  01348A  0EFC               	movlw	-4
 21932  01348C  AEE3               	btfss	plusw1,7,c
 21933  01348E  D002               	goto	l2774
 21934                           
 21935                           ;stkvar	_b @ sp[(-4)+-4]
 21936  013490  0EF8               	movlw	-8
 21937  013492  80E3               	bsf	plusw1,0,c
 21938  013494                     l2774:
 21939                           
 21940                           ;stkvar	_grs @ sp[(-4)+0]
 21941  013494  0EFC               	movlw	-4
 21942  013496  A0E3               	btfss	plusw1,0,c
 21943  013498  D00E               	goto	l8064
 21944                           
 21945                           ;stkvar	_grs @ sp[(-4)+0]
 21946  01349A  0EFC               	movlw	-4
 21947  01349C  006F FF8C  F030    	movff	plusw1,btemp+11
 21948  0134A2  90D8               	bcf	status,0,c
 21949  0134A4  3430               	rlcf	(btemp+11)^0,w,c
 21950  0134A6  6E2F               	movwf	(btemp+10)^0,c
 21951  0134A8  0E01               	movlw	1
 21952  0134AA  122F               	iorwf	(btemp+10)^0,f,c
 21953                           
 21954                           ;stkvar	_grs @ sp[(-4)+0]
 21955  0134AC  0EFC               	movlw	-4
 21956  0134AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21957  0134B4  D009               	goto	l8066
 21958  0134B6                     l8064:
 21959                           
 21960                           ;stkvar	_grs @ sp[(-4)+0]
 21961  0134B6  50E1               	movf	fsr1l,w,c
 21962  0134B8  0FFC               	addlw	-4
 21963  0134BA  6ED9               	movwf	fsr2l,c
 21964  0134BC  50E2               	movf	fsr1h,w,c
 21965  0134BE  6EDA               	movwf	fsr2h,c
 21966  0134C0  0EFF               	movlw	255
 21967  0134C2  22DA               	addwfc	fsr2h,f,c
 21968  0134C4  90D8               	bcf	status,0,c
 21969  0134C6  36DF               	rlcf	indf2,f,c
 21970  0134C8                     l8066:
 21971                           
 21972                           ;stkvar	_bexp @ sp[(-4)+1]
 21973  0134C8  0EFD               	movlw	-3
 21974  0134CA  50E3               	movf	plusw1,w,c
 21975  0134CC  B4D8               	btfsc	status,2,c
 21976  0134CE  D002               	goto	l8070
 21977                           
 21978                           ;stkvar	_bexp @ sp[(-4)+1]
 21979  0134D0  0EFD               	movlw	-3
 21980  0134D2  06E3               	decf	plusw1,f,c
 21981  0134D4                     l8070:
 21982                           
 21983                           ;stkvar	_b @ sp[(-4)+-4]
 21984  0134D4  0EFA               	movlw	-6
 21985  0134D6  AEE3               	btfss	plusw1,7,c
 21986  0134D8  D7CF               	goto	l8056
 21987  0134DA                     u7310:
 21988                           
 21989                           ;stkvar	_aexp @ sp[(-4)+2]
 21990  0134DA  0EFE               	movlw	-2
 21991  0134DC  6AE3               	clrf	plusw1,c
 21992                           
 21993                           ;stkvar	_grs @ sp[(-4)+0]
 21994  0134DE  0EFC               	movlw	-4
 21995  0134E0  AEE3               	btfss	plusw1,7,c
 21996  0134E2  D00F               	goto	l8084
 21997                           
 21998                           ;stkvar	_grs @ sp[(-4)+0]
 21999  0134E4  0EFC               	movlw	-4
 22000  0134E6  006F FF8C  F030    	movff	plusw1,btemp+11
 22001  0134EC  0E7F               	movlw	127
 22002  0134EE  1630               	andwf	(btemp+11)^0,f,c
 22003  0134F0  B4D8               	btfsc	status,2,c
 22004  0134F2  D004               	goto	l8080
 22005  0134F4                     u7330:
 22006                           
 22007                           ;stkvar	_aexp @ sp[(-4)+2]
 22008  0134F4  0EFE               	movlw	-2
 22009  0134F6  6AE3               	clrf	plusw1,c
 22010  0134F8  2AE3               	incf	plusw1,f,c
 22011  0134FA  D003               	goto	l8084
 22012  0134FC                     l8080:
 22013                           
 22014                           ;stkvar	_b @ sp[(-4)+-4]
 22015  0134FC  0EF8               	movlw	-8
 22016  0134FE  B0E3               	btfsc	plusw1,0,c
 22017  013500  D7F9               	goto	u7330
 22018  013502                     l8084:
 22019                           
 22020                           ;stkvar	_aexp @ sp[(-4)+2]
 22021  013502  0EFE               	movlw	-2
 22022  013504  50E3               	movf	plusw1,w,c
 22023  013506  B4D8               	btfsc	status,2,c
 22024  013508  D02B               	goto	l8096
 22025                           
 22026                           ;stkvar	_b @ sp[(-4)+-4]
 22027  01350A  50E1               	movf	fsr1l,w,c
 22028  01350C  0FF8               	addlw	-8
 22029  01350E  6ED9               	movwf	fsr2l,c
 22030  013510  50E2               	movf	fsr1h,w,c
 22031  013512  6EDA               	movwf	fsr2h,c
 22032  013514  0EFF               	movlw	255
 22033  013516  22DA               	addwfc	fsr2h,f,c
 22034  013518  2ADE               	incf	postinc2,f,c
 22035  01351A  0E00               	movlw	0
 22036  01351C  22DE               	addwfc	postinc2,f,c
 22037  01351E  22DE               	addwfc	postinc2,f,c
 22038  013520  22DE               	addwfc	postinc2,f,c
 22039                           
 22040                           ;stkvar	_b @ sp[(-4)+-4]
 22041  013522  0EFB               	movlw	-5
 22042  013524  A0E3               	btfss	plusw1,0,c
 22043  013526  D01C               	goto	l8096
 22044  013528  0E01               	movlw	1
 22045  01352A  6E30               	movwf	(btemp+11)^0,c
 22046                           
 22047                           ;stkvar	_b @ sp[(-4)+-4]
 22048  01352C  50E1               	movf	fsr1l,w,c
 22049  01352E  0FF8               	addlw	-8
 22050  013530  6ED9               	movwf	fsr2l,c
 22051  013532  50E2               	movf	fsr1h,w,c
 22052  013534  6EDA               	movwf	fsr2h,c
 22053  013536  0EFF               	movlw	255
 22054  013538  22DA               	addwfc	fsr2h,f,c
 22055  01353A  2830               	incf	(btemp+11)^0,w,c
 22056  01353C  52DE               	movf	postinc2,f,c
 22057  01353E  D008               	goto	u7370
 22058  013540                     u7375:
 22059  013540  52DE               	movf	postinc2,f,c
 22060  013542  90D8               	bcf	status,0,c
 22061  013544  BEDC               	btfsc	preinc2,7,c
 22062  013546  80D8               	bsf	status,0,c
 22063  013548  32DD               	rrcf	postdec2,f,c
 22064  01354A  32DD               	rrcf	postdec2,f,c
 22065  01354C  32DD               	rrcf	postdec2,f,c
 22066  01354E  32DE               	rrcf	postinc2,f,c
 22067  013550                     u7370:
 22068  013550  2EE8               	decfsz	wreg,f,c
 22069  013552  D7F6               	goto	u7375
 22070                           
 22071                           ;stkvar	_bexp @ sp[(-4)+1]
 22072  013554  0EFD               	movlw	-3
 22073  013556  28E3               	incf	plusw1,w,c
 22074  013558  B4D8               	btfsc	status,2,c
 22075  01355A  D002               	goto	l8096
 22076                           
 22077                           ;stkvar	_bexp @ sp[(-4)+1]
 22078  01355C  0EFD               	movlw	-3
 22079  01355E  2AE3               	incf	plusw1,f,c
 22080  013560                     l8096:
 22081                           
 22082                           ;stkvar	_bexp @ sp[(-4)+1]
 22083  013560  0EFD               	movlw	-3
 22084  013562  28E3               	incf	plusw1,w,c
 22085  013564  B4D8               	btfsc	status,2,c
 22086  013566  D004               	goto	u7400
 22087                           
 22088                           ;stkvar	_bexp @ sp[(-4)+1]
 22089  013568  0EFD               	movlw	-3
 22090  01356A  50E3               	movf	plusw1,w,c
 22091  01356C  A4D8               	btfss	status,2,c
 22092  01356E  D00E               	goto	l8106
 22093  013570                     u7400:
 22094                           
 22095                           ;stkvar	_b @ sp[(-4)+-4]
 22096  013570  0EF8               	movlw	-8
 22097  013572  6AE3               	clrf	plusw1,c
 22098  013574  0EF9               	movlw	-7
 22099  013576  6AE3               	clrf	plusw1,c
 22100  013578  0EFA               	movlw	-6
 22101  01357A  6AE3               	clrf	plusw1,c
 22102  01357C  0EFB               	movlw	-5
 22103  01357E  6AE3               	clrf	plusw1,c
 22104                           
 22105                           ;stkvar	_bexp @ sp[(-4)+1]
 22106  013580  0EFD               	movlw	-3
 22107  013582  50E3               	movf	plusw1,w,c
 22108  013584  A4D8               	btfss	status,2,c
 22109  013586  D002               	goto	l8106
 22110                           
 22111                           ;stkvar	_signs @ sp[(-4)+3]
 22112  013588  0EFF               	movlw	-1
 22113  01358A  6AE3               	clrf	plusw1,c
 22114  01358C                     l8106:
 22115                           
 22116                           ;stkvar	_bexp @ sp[(-4)+1]
 22117  01358C  0EFD               	movlw	-3
 22118  01358E  A0E3               	btfss	plusw1,0,c
 22119  013590  D009               	goto	l8110
 22120                           
 22121                           ;stkvar	_b @ sp[(-4)+-4]
 22122  013592  0EFA               	movlw	250
 22123  013594  24E1               	addwf	fsr1l,w,c
 22124  013596  6ED9               	movwf	fsr2l,c
 22125  013598  0EFF               	movlw	255
 22126  01359A  20E2               	addwfc	fsr1h,w,c
 22127  01359C  6EDA               	movwf	fsr2h,c
 22128  01359E  0E00               	movlw	0
 22129  0135A0  8EDB               	bsf	plusw2,7,c
 22130  0135A2  D008               	goto	l8112
 22131  0135A4                     l8110:
 22132                           
 22133                           ;stkvar	_b @ sp[(-4)+-4]
 22134  0135A4  0EFA               	movlw	250
 22135  0135A6  24E1               	addwf	fsr1l,w,c
 22136  0135A8  6ED9               	movwf	fsr2l,c
 22137  0135AA  0EFF               	movlw	255
 22138  0135AC  20E2               	addwfc	fsr1h,w,c
 22139  0135AE  6EDA               	movwf	fsr2h,c
 22140  0135B0  0E7F               	movlw	127
 22141  0135B2  16DF               	andwf	indf2,f,c
 22142  0135B4                     l8112:
 22143                           
 22144                           ;stkvar	_b @ sp[(-4)+-4]
 22145  0135B4  0EFB               	movlw	251
 22146  0135B6  24E1               	addwf	fsr1l,w,c
 22147  0135B8  6ED9               	movwf	fsr2l,c
 22148  0135BA  0EFF               	movlw	255
 22149  0135BC  20E2               	addwfc	fsr1h,w,c
 22150  0135BE  6EDA               	movwf	fsr2h,c
 22151                           
 22152                           ;stkvar	_bexp @ sp[(-4)+1]
 22153  0135C0  0EFD               	movlw	-3
 22154  0135C2  006F FF8C  F030    	movff	plusw1,btemp+11
 22155  0135C8  90D8               	bcf	status,0,c
 22156  0135CA  3030               	rrcf	(btemp+11)^0,w,c
 22157  0135CC  6EDF               	movwf	indf2,c
 22158                           
 22159                           ;stkvar	_signs @ sp[(-4)+3]
 22160  0135CE  0EFF               	movlw	-1
 22161  0135D0  AEE3               	btfss	plusw1,7,c
 22162  0135D2  D008               	goto	l8118
 22163                           
 22164                           ;stkvar	_b @ sp[(-4)+-4]
 22165  0135D4  0EFB               	movlw	251
 22166  0135D6  24E1               	addwf	fsr1l,w,c
 22167  0135D8  6ED9               	movwf	fsr2l,c
 22168  0135DA  0EFF               	movlw	255
 22169  0135DC  20E2               	addwfc	fsr1h,w,c
 22170  0135DE  6EDA               	movwf	fsr2h,c
 22171  0135E0  0E00               	movlw	0
 22172  0135E2  8EDB               	bsf	plusw2,7,c
 22173  0135E4                     l8118:
 22174                           
 22175                           ;stkvar	_b @ sp[(-4)+-4]
 22176  0135E4  0EF8               	movlw	-8
 22177  0135E6  006F FF8C  F025    	movff	plusw1,btemp
 22178  0135EC  0EF9               	movlw	-7
 22179  0135EE  006F FF8C  F026    	movff	plusw1,btemp+1
 22180  0135F4  0EFA               	movlw	-6
 22181  0135F6  006F FF8C  F027    	movff	plusw1,btemp+2
 22182  0135FC  0EFB               	movlw	-5
 22183  0135FE  006F FF8C  F028    	movff	plusw1,btemp+3
 22184  013604                     l2762:
 22185                           
 22186                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22187  013604  0EF4               	movlw	244
 22188  013606  26E1               	addwf	fsr1l,f,c
 22189  013608  0EFF               	movlw	255
 22190  01360A  22E2               	addwfc	fsr1h,f,c
 22191  01360C  0012               	return		;funcret
 22192  01360E                     __end_of___fladd:
 22193                           	opt callstack 0
 22194                           
 22195 ;; *************** function ___flmul *****************
 22196 ;; Defined at:
 22197 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22198 ;; Parameters:    Size  Location     Type
 22199 ;;  b               4  [STACK] unsigned char 
 22200 ;;  a               4  [STACK] unsigned char 
 22201 ;; Auto vars:     Size  Location     Type
 22202 ;;  prod            4  [STACK] struct .
 22203 ;;  grs             4  [STACK] unsigned long 
 22204 ;;  temp            2  [STACK] struct .
 22205 ;;  bexp            1  [STACK] unsigned char 
 22206 ;;  aexp            1  [STACK] unsigned char 
 22207 ;;  sign            1  [STACK] unsigned char 
 22208 ;; Return value:  Size  Location     Type
 22209 ;;                  4  [STACK] unsigned char 
 22210 ;; Registers used:
 22211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22212 ;; Tracked objects:
 22213 ;;		On entry : 0/2
 22214 ;;		On exit  : 0/0
 22215 ;;		Unchanged: 0/0
 22216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22221 ;;Total ram usage:        0 bytes
 22222 ;; Hardware stack levels used:    1
 22223 ;; Hardware stack levels required when called:    7
 22224 ;; This function calls:
 22225 ;;		Nothing
 22226 ;; This function is called by:
 22227 ;;		_conv_raw_result
 22228 ;;		_lp_filter
 22229 ;;		_calc_model_data
 22230 ;;		_calc_bsoc
 22231 ;;		_efgtoa
 22232 ;; This function uses a reentrant model
 22233 ;;
 22234                           
 22235                           	psect	text94
 22236  012628                     __ptext94:
 22237                           	opt callstack 0
 22238  012628                     ___flmul:
 22239                           	opt callstack 0
 22240                           
 22241                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22242  012628  0E0D               	movlw	13
 22243  01262A  26E1               	addwf	fsr1l,f,c
 22244  01262C  0E00               	movlw	0
 22245  01262E  22E2               	addwfc	fsr1h,f,c
 22246                           
 22247                           ;stkvar	_b @ sp[(-13)+-4]
 22248                           
 22249                           ;incstack = 0
 22250  012630  0EF2               	movlw	242
 22251  012632  24E1               	addwf	fsr1l,w,c
 22252  012634  6ED9               	movwf	fsr2l,c
 22253  012636  0EFF               	movlw	255
 22254  012638  20E2               	addwfc	fsr1h,w,c
 22255  01263A  6EDA               	movwf	fsr2h,c
 22256  01263C  50DF               	movf	indf2,w,c
 22257  01263E  6E30               	movwf	(btemp+11)^0,c
 22258  012640  0E80               	movlw	128
 22259  012642  1630               	andwf	(btemp+11)^0,f,c
 22260                           
 22261                           ;stkvar	_sign @ sp[(-13)+12]
 22262  012644  0EFF               	movlw	-1
 22263  012646  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22264                           
 22265                           ;stkvar	_b @ sp[(-13)+-4]
 22266  01264C  0EF2               	movlw	242
 22267  01264E  24E1               	addwf	fsr1l,w,c
 22268  012650  6ED9               	movwf	fsr2l,c
 22269  012652  0EFF               	movlw	255
 22270  012654  20E2               	addwfc	fsr1h,w,c
 22271  012656  6EDA               	movwf	fsr2h,c
 22272  012658  50DF               	movf	indf2,w,c
 22273  01265A  6E30               	movwf	(btemp+11)^0,c
 22274  01265C  90D8               	bcf	status,0,c
 22275  01265E  3430               	rlcf	(btemp+11)^0,w,c
 22276  012660  6E2F               	movwf	(btemp+10)^0,c
 22277                           
 22278                           ;stkvar	_bexp @ sp[(-13)+10]
 22279  012662  0EFD               	movlw	-3
 22280  012664  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22281                           
 22282                           ;stkvar	_b @ sp[(-13)+-4]
 22283  01266A  0EF1               	movlw	241
 22284  01266C  24E1               	addwf	fsr1l,w,c
 22285  01266E  6ED9               	movwf	fsr2l,c
 22286  012670  0EFF               	movlw	255
 22287  012672  20E2               	addwfc	fsr1h,w,c
 22288  012674  6EDA               	movwf	fsr2h,c
 22289  012676  AEDF               	btfss	indf2,7,c
 22290  012678  D002               	goto	l8286
 22291                           
 22292                           ;stkvar	_bexp @ sp[(-13)+10]
 22293  01267A  0EFD               	movlw	-3
 22294  01267C  80E3               	bsf	plusw1,0,c
 22295  01267E                     l8286:
 22296                           
 22297                           ;stkvar	_bexp @ sp[(-13)+10]
 22298  01267E  0EFD               	movlw	-3
 22299  012680  50E3               	movf	plusw1,w,c
 22300  012682  B4D8               	btfsc	status,2,c
 22301  012684  D01F               	goto	l8294
 22302                           
 22303                           ;stkvar	_bexp @ sp[(-13)+10]
 22304  012686  0EFD               	movlw	-3
 22305  012688  28E3               	incf	plusw1,w,c
 22306  01268A  A4D8               	btfss	status,2,c
 22307  01268C  D018               	goto	l8292
 22308  01268E  0E00               	movlw	0
 22309  012690  6E2D               	movwf	(btemp+8)^0,c
 22310  012692  0E00               	movlw	0
 22311  012694  6E2E               	movwf	(btemp+9)^0,c
 22312  012696  0E00               	movlw	0
 22313  012698  6E2F               	movwf	(btemp+10)^0,c
 22314  01269A  0E00               	movlw	0
 22315  01269C  6E30               	movwf	(btemp+11)^0,c
 22316                           
 22317                           ;stkvar	_b @ sp[(-13)+-4]
 22318  01269E  0EEF               	movlw	-17
 22319  0126A0  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22320  0126A6  0EF0               	movlw	-16
 22321  0126A8  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22322  0126AE  0EF1               	movlw	-15
 22323  0126B0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22324  0126B6  0EF2               	movlw	-14
 22325  0126B8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22326  0126BE                     l8292:
 22327                           
 22328                           ;stkvar	_b @ sp[(-13)+-4]
 22329  0126BE  0EF1               	movlw	-15
 22330  0126C0  8EE3               	bsf	plusw1,7,c
 22331  0126C2  D018               	goto	l8296
 22332  0126C4                     l8294:
 22333  0126C4  0E00               	movlw	0
 22334  0126C6  6E2D               	movwf	(btemp+8)^0,c
 22335  0126C8  0E00               	movlw	0
 22336  0126CA  6E2E               	movwf	(btemp+9)^0,c
 22337  0126CC  0E00               	movlw	0
 22338  0126CE  6E2F               	movwf	(btemp+10)^0,c
 22339  0126D0  0E00               	movlw	0
 22340  0126D2  6E30               	movwf	(btemp+11)^0,c
 22341                           
 22342                           ;stkvar	_b @ sp[(-13)+-4]
 22343  0126D4  0EEF               	movlw	-17
 22344  0126D6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22345  0126DC  0EF0               	movlw	-16
 22346  0126DE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22347  0126E4  0EF1               	movlw	-15
 22348  0126E6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22349  0126EC  0EF2               	movlw	-14
 22350  0126EE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22351  0126F4                     l8296:
 22352                           
 22353                           ;stkvar	_a @ sp[(-13)+-8]
 22354  0126F4  0EEE               	movlw	238
 22355  0126F6  24E1               	addwf	fsr1l,w,c
 22356  0126F8  6ED9               	movwf	fsr2l,c
 22357  0126FA  0EFF               	movlw	255
 22358  0126FC  20E2               	addwfc	fsr1h,w,c
 22359  0126FE  6EDA               	movwf	fsr2h,c
 22360  012700  50DF               	movf	indf2,w,c
 22361  012702  6E30               	movwf	(btemp+11)^0,c
 22362  012704  0E80               	movlw	128
 22363  012706  1630               	andwf	(btemp+11)^0,f,c
 22364                           
 22365                           ;stkvar	_sign @ sp[(-13)+12]
 22366  012708  50E1               	movf	fsr1l,w,c
 22367  01270A  0FFF               	addlw	-1
 22368  01270C  6ED9               	movwf	fsr2l,c
 22369  01270E  50E2               	movf	fsr1h,w,c
 22370  012710  6EDA               	movwf	fsr2h,c
 22371  012712  0EFF               	movlw	255
 22372  012714  22DA               	addwfc	fsr2h,f,c
 22373  012716  5030               	movf	(btemp+11)^0,w,c
 22374  012718  1ADF               	xorwf	indf2,f,c
 22375                           
 22376                           ;stkvar	_a @ sp[(-13)+-8]
 22377  01271A  0EEE               	movlw	238
 22378  01271C  24E1               	addwf	fsr1l,w,c
 22379  01271E  6ED9               	movwf	fsr2l,c
 22380  012720  0EFF               	movlw	255
 22381  012722  20E2               	addwfc	fsr1h,w,c
 22382  012724  6EDA               	movwf	fsr2h,c
 22383  012726  50DF               	movf	indf2,w,c
 22384  012728  6E30               	movwf	(btemp+11)^0,c
 22385  01272A  90D8               	bcf	status,0,c
 22386  01272C  3430               	rlcf	(btemp+11)^0,w,c
 22387  01272E  6E2F               	movwf	(btemp+10)^0,c
 22388                           
 22389                           ;stkvar	_aexp @ sp[(-13)+11]
 22390  012730  0EFE               	movlw	-2
 22391  012732  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22392                           
 22393                           ;stkvar	_a @ sp[(-13)+-8]
 22394  012738  0EED               	movlw	237
 22395  01273A  24E1               	addwf	fsr1l,w,c
 22396  01273C  6ED9               	movwf	fsr2l,c
 22397  01273E  0EFF               	movlw	255
 22398  012740  20E2               	addwfc	fsr1h,w,c
 22399  012742  6EDA               	movwf	fsr2h,c
 22400  012744  AEDF               	btfss	indf2,7,c
 22401  012746  D002               	goto	l8304
 22402                           
 22403                           ;stkvar	_aexp @ sp[(-13)+11]
 22404  012748  0EFE               	movlw	-2
 22405  01274A  80E3               	bsf	plusw1,0,c
 22406  01274C                     l8304:
 22407                           
 22408                           ;stkvar	_aexp @ sp[(-13)+11]
 22409  01274C  0EFE               	movlw	-2
 22410  01274E  50E3               	movf	plusw1,w,c
 22411  012750  B4D8               	btfsc	status,2,c
 22412  012752  D01F               	goto	l8312
 22413                           
 22414                           ;stkvar	_aexp @ sp[(-13)+11]
 22415  012754  0EFE               	movlw	-2
 22416  012756  28E3               	incf	plusw1,w,c
 22417  012758  A4D8               	btfss	status,2,c
 22418  01275A  D018               	goto	l8310
 22419  01275C  0E00               	movlw	0
 22420  01275E  6E2D               	movwf	(btemp+8)^0,c
 22421  012760  0E00               	movlw	0
 22422  012762  6E2E               	movwf	(btemp+9)^0,c
 22423  012764  0E00               	movlw	0
 22424  012766  6E2F               	movwf	(btemp+10)^0,c
 22425  012768  0E00               	movlw	0
 22426  01276A  6E30               	movwf	(btemp+11)^0,c
 22427                           
 22428                           ;stkvar	_a @ sp[(-13)+-8]
 22429  01276C  0EEB               	movlw	-21
 22430  01276E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22431  012774  0EEC               	movlw	-20
 22432  012776  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22433  01277C  0EED               	movlw	-19
 22434  01277E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22435  012784  0EEE               	movlw	-18
 22436  012786  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22437  01278C                     l8310:
 22438                           
 22439                           ;stkvar	_a @ sp[(-13)+-8]
 22440  01278C  0EED               	movlw	-19
 22441  01278E  8EE3               	bsf	plusw1,7,c
 22442  012790  D018               	goto	l8314
 22443  012792                     l8312:
 22444  012792  0E00               	movlw	0
 22445  012794  6E2D               	movwf	(btemp+8)^0,c
 22446  012796  0E00               	movlw	0
 22447  012798  6E2E               	movwf	(btemp+9)^0,c
 22448  01279A  0E00               	movlw	0
 22449  01279C  6E2F               	movwf	(btemp+10)^0,c
 22450  01279E  0E00               	movlw	0
 22451  0127A0  6E30               	movwf	(btemp+11)^0,c
 22452                           
 22453                           ;stkvar	_a @ sp[(-13)+-8]
 22454  0127A2  0EEB               	movlw	-21
 22455  0127A4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22456  0127AA  0EEC               	movlw	-20
 22457  0127AC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22458  0127B2  0EED               	movlw	-19
 22459  0127B4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22460  0127BA  0EEE               	movlw	-18
 22461  0127BC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22462  0127C2                     l8314:
 22463                           
 22464                           ;stkvar	_aexp @ sp[(-13)+11]
 22465  0127C2  0EFE               	movlw	-2
 22466  0127C4  50E3               	movf	plusw1,w,c
 22467  0127C6  B4D8               	btfsc	status,2,c
 22468  0127C8  D004               	goto	u7750
 22469                           
 22470                           ;stkvar	_bexp @ sp[(-13)+10]
 22471  0127CA  0EFD               	movlw	-3
 22472  0127CC  50E3               	movf	plusw1,w,c
 22473  0127CE  A4D8               	btfss	status,2,c
 22474  0127D0  D009               	goto	l8322
 22475  0127D2                     u7750:
 22476  0127D2  0E00               	movlw	0
 22477  0127D4  6E25               	movwf	btemp^0,c
 22478  0127D6  0E00               	movlw	0
 22479  0127D8  6E26               	movwf	(btemp+1)^0,c
 22480  0127DA  0E00               	movlw	0
 22481  0127DC  6E27               	movwf	(btemp+2)^0,c
 22482  0127DE  0E00               	movlw	0
 22483  0127E0  6E28               	movwf	(btemp+3)^0,c
 22484  0127E2  D332               	goto	l2843
 22485  0127E4                     l8322:
 22486                           
 22487                           ;stkvar	_b @ sp[(-13)+-4]
 22488  0127E4  0EEF               	movlw	-17
 22489  0127E6  006F FF8C  F030    	movff	plusw1,btemp+11
 22490                           
 22491                           ;stkvar	_a @ sp[(-13)+-8]
 22492  0127EC  0EED               	movlw	237
 22493  0127EE  24E1               	addwf	fsr1l,w,c
 22494  0127F0  6ED9               	movwf	fsr2l,c
 22495  0127F2  0EFF               	movlw	255
 22496  0127F4  20E2               	addwfc	fsr1h,w,c
 22497  0127F6  6EDA               	movwf	fsr2h,c
 22498  0127F8  50DF               	movf	indf2,w,c
 22499  0127FA  0230               	mulwf	(btemp+11)^0,c
 22500                           
 22501                           ;stkvar	_temp @ sp[(-13)+8]
 22502  0127FC  0EFB               	movlw	-5
 22503  0127FE  006F FFCF FFE3     	movff	prodl,plusw1
 22504  012804  0EFC               	movlw	-4
 22505  012806  006F FFD3 FFE3     	movff	prodh,plusw1
 22506                           
 22507                           ;stkvar	_temp @ sp[(-13)+8]
 22508  01280C  0EFB               	movlw	-5
 22509  01280E  006F FF8C  F030    	movff	plusw1,btemp+11
 22510  012814  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22511  01281A  6A2A               	clrf	(btemp+5)^0,c
 22512  01281C  6A2B               	clrf	(btemp+6)^0,c
 22513  01281E  6A2C               	clrf	(btemp+7)^0,c
 22514                           
 22515                           ;stkvar	_grs @ sp[(-13)+4]
 22516  012820  0EF7               	movlw	-9
 22517  012822  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22518  012828  0EF8               	movlw	-8
 22519  01282A  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22520  012830  0EF9               	movlw	-7
 22521  012832  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22522  012838  0EFA               	movlw	-6
 22523  01283A  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22524                           
 22525                           ;stkvar	_temp @ sp[(-13)+8]
 22526  012840  0EFC               	movlw	252
 22527  012842  24E1               	addwf	fsr1l,w,c
 22528  012844  6ED9               	movwf	fsr2l,c
 22529  012846  0EFF               	movlw	255
 22530  012848  20E2               	addwfc	fsr1h,w,c
 22531  01284A  6EDA               	movwf	fsr2h,c
 22532  01284C  50DF               	movf	indf2,w,c
 22533  01284E  6E30               	movwf	(btemp+11)^0,c
 22534  012850  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22535  012856  6A2A               	clrf	(btemp+5)^0,c
 22536  012858  6A2B               	clrf	(btemp+6)^0,c
 22537  01285A  6A2C               	clrf	(btemp+7)^0,c
 22538                           
 22539                           ;stkvar	_prod @ sp[(-13)+0]
 22540  01285C  0EF3               	movlw	-13
 22541  01285E  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22542  012864  0EF4               	movlw	-12
 22543  012866  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22544  01286C  0EF5               	movlw	-11
 22545  01286E  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22546  012874  0EF6               	movlw	-10
 22547  012876  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22548                           
 22549                           ;stkvar	_b @ sp[(-13)+-4]
 22550  01287C  0EF0               	movlw	240
 22551  01287E  24E1               	addwf	fsr1l,w,c
 22552  012880  6ED9               	movwf	fsr2l,c
 22553  012882  0EFF               	movlw	255
 22554  012884  20E2               	addwfc	fsr1h,w,c
 22555  012886  6EDA               	movwf	fsr2h,c
 22556  012888  50DF               	movf	indf2,w,c
 22557  01288A  6E30               	movwf	(btemp+11)^0,c
 22558                           
 22559                           ;stkvar	_a @ sp[(-13)+-8]
 22560  01288C  0EEC               	movlw	236
 22561  01288E  24E1               	addwf	fsr1l,w,c
 22562  012890  6ED9               	movwf	fsr2l,c
 22563  012892  0EFF               	movlw	255
 22564  012894  20E2               	addwfc	fsr1h,w,c
 22565  012896  6EDA               	movwf	fsr2h,c
 22566  012898  50DF               	movf	indf2,w,c
 22567  01289A  0230               	mulwf	(btemp+11)^0,c
 22568                           
 22569                           ;stkvar	_temp @ sp[(-13)+8]
 22570  01289C  0EFB               	movlw	-5
 22571  01289E  006F FFCF FFE3     	movff	prodl,plusw1
 22572  0128A4  0EFC               	movlw	-4
 22573  0128A6  006F FFD3 FFE3     	movff	prodh,plusw1
 22574                           
 22575                           ;stkvar	_grs @ sp[(-13)+4]
 22576  0128AC  50E1               	movf	fsr1l,w,c
 22577  0128AE  0FF7               	addlw	-9
 22578  0128B0  6ED9               	movwf	fsr2l,c
 22579  0128B2  50E2               	movf	fsr1h,w,c
 22580  0128B4  6EDA               	movwf	fsr2h,c
 22581  0128B6  0EFF               	movlw	255
 22582  0128B8  22DA               	addwfc	fsr2h,f,c
 22583                           
 22584                           ;stkvar	_temp @ sp[(-13)+8]
 22585  0128BA  0EFB               	movlw	-5
 22586  0128BC  50E3               	movf	plusw1,w,c
 22587  0128BE  26DE               	addwf	postinc2,f,c
 22588  0128C0  0E00               	movlw	0
 22589  0128C2  22DE               	addwfc	postinc2,f,c
 22590  0128C4  22DE               	addwfc	postinc2,f,c
 22591  0128C6  22DE               	addwfc	postinc2,f,c
 22592                           
 22593                           ;stkvar	_prod @ sp[(-13)+0]
 22594  0128C8  50E1               	movf	fsr1l,w,c
 22595  0128CA  0FF3               	addlw	-13
 22596  0128CC  6ED9               	movwf	fsr2l,c
 22597  0128CE  50E2               	movf	fsr1h,w,c
 22598  0128D0  6EDA               	movwf	fsr2h,c
 22599  0128D2  0EFF               	movlw	255
 22600  0128D4  22DA               	addwfc	fsr2h,f,c
 22601                           
 22602                           ;stkvar	_temp @ sp[(-13)+8]
 22603  0128D6  0EFC               	movlw	252
 22604  0128D8  24E1               	addwf	fsr1l,w,c
 22605  0128DA  6EE9               	movwf	fsr0l,c
 22606  0128DC  0EFF               	movlw	255
 22607  0128DE  20E2               	addwfc	fsr1h,w,c
 22608  0128E0  6EEA               	movwf	fsr0h,c
 22609  0128E2  50EF               	movf	indf0,w,c
 22610  0128E4  26DE               	addwf	postinc2,f,c
 22611  0128E6  0E00               	movlw	0
 22612  0128E8  22DE               	addwfc	postinc2,f,c
 22613  0128EA  22DE               	addwfc	postinc2,f,c
 22614  0128EC  22DE               	addwfc	postinc2,f,c
 22615                           
 22616                           ;stkvar	_b @ sp[(-13)+-4]
 22617  0128EE  0EF1               	movlw	241
 22618  0128F0  24E1               	addwf	fsr1l,w,c
 22619  0128F2  6ED9               	movwf	fsr2l,c
 22620  0128F4  0EFF               	movlw	255
 22621  0128F6  20E2               	addwfc	fsr1h,w,c
 22622  0128F8  6EDA               	movwf	fsr2h,c
 22623  0128FA  50DF               	movf	indf2,w,c
 22624  0128FC  6E30               	movwf	(btemp+11)^0,c
 22625                           
 22626                           ;stkvar	_a @ sp[(-13)+-8]
 22627  0128FE  0EEB               	movlw	-21
 22628  012900  50E3               	movf	plusw1,w,c
 22629  012902  0230               	mulwf	(btemp+11)^0,c
 22630                           
 22631                           ;stkvar	_temp @ sp[(-13)+8]
 22632  012904  0EFB               	movlw	-5
 22633  012906  006F FFCF FFE3     	movff	prodl,plusw1
 22634  01290C  0EFC               	movlw	-4
 22635  01290E  006F FFD3 FFE3     	movff	prodh,plusw1
 22636                           
 22637                           ;stkvar	_grs @ sp[(-13)+4]
 22638  012914  50E1               	movf	fsr1l,w,c
 22639  012916  0FF7               	addlw	-9
 22640  012918  6ED9               	movwf	fsr2l,c
 22641  01291A  50E2               	movf	fsr1h,w,c
 22642  01291C  6EDA               	movwf	fsr2h,c
 22643  01291E  0EFF               	movlw	255
 22644  012920  22DA               	addwfc	fsr2h,f,c
 22645                           
 22646                           ;stkvar	_temp @ sp[(-13)+8]
 22647  012922  0EFB               	movlw	-5
 22648  012924  50E3               	movf	plusw1,w,c
 22649  012926  26DE               	addwf	postinc2,f,c
 22650  012928  0E00               	movlw	0
 22651  01292A  22DE               	addwfc	postinc2,f,c
 22652  01292C  22DE               	addwfc	postinc2,f,c
 22653  01292E  22DE               	addwfc	postinc2,f,c
 22654                           
 22655                           ;stkvar	_prod @ sp[(-13)+0]
 22656  012930  50E1               	movf	fsr1l,w,c
 22657  012932  0FF3               	addlw	-13
 22658  012934  6ED9               	movwf	fsr2l,c
 22659  012936  50E2               	movf	fsr1h,w,c
 22660  012938  6EDA               	movwf	fsr2h,c
 22661  01293A  0EFF               	movlw	255
 22662  01293C  22DA               	addwfc	fsr2h,f,c
 22663                           
 22664                           ;stkvar	_temp @ sp[(-13)+8]
 22665  01293E  0EFC               	movlw	252
 22666  012940  24E1               	addwf	fsr1l,w,c
 22667  012942  6EE9               	movwf	fsr0l,c
 22668  012944  0EFF               	movlw	255
 22669  012946  20E2               	addwfc	fsr1h,w,c
 22670  012948  6EEA               	movwf	fsr0h,c
 22671  01294A  50EF               	movf	indf0,w,c
 22672  01294C  26DE               	addwf	postinc2,f,c
 22673  01294E  0E00               	movlw	0
 22674  012950  22DE               	addwfc	postinc2,f,c
 22675  012952  22DE               	addwfc	postinc2,f,c
 22676  012954  22DE               	addwfc	postinc2,f,c
 22677                           
 22678                           ;stkvar	_grs @ sp[(-13)+4]
 22679  012956  50E1               	movf	fsr1l,w,c
 22680  012958  0FF7               	addlw	-9
 22681  01295A  6ED9               	movwf	fsr2l,c
 22682  01295C  50E2               	movf	fsr1h,w,c
 22683  01295E  6EDA               	movwf	fsr2h,c
 22684  012960  0EFF               	movlw	255
 22685  012962  22DA               	addwfc	fsr2h,f,c
 22686  012964  0E08               	movlw	8
 22687  012966                     u7765:
 22688  012966  90D8               	bcf	status,0,c
 22689  012968  36DE               	rlcf	postinc2,f,c
 22690  01296A  36DE               	rlcf	postinc2,f,c
 22691  01296C  36DE               	rlcf	postinc2,f,c
 22692  01296E  36DD               	rlcf	postdec2,f,c
 22693  012970  52DD               	movf	postdec2,f,c
 22694  012972  52DD               	movf	postdec2,f,c
 22695  012974  2EE8               	decfsz	wreg,f,c
 22696  012976  D7F7               	goto	u7765
 22697                           
 22698                           ;stkvar	_b @ sp[(-13)+-4]
 22699  012978  0EF0               	movlw	240
 22700  01297A  24E1               	addwf	fsr1l,w,c
 22701  01297C  6ED9               	movwf	fsr2l,c
 22702  01297E  0EFF               	movlw	255
 22703  012980  20E2               	addwfc	fsr1h,w,c
 22704  012982  6EDA               	movwf	fsr2h,c
 22705  012984  50DF               	movf	indf2,w,c
 22706  012986  6E30               	movwf	(btemp+11)^0,c
 22707                           
 22708                           ;stkvar	_a @ sp[(-13)+-8]
 22709  012988  0EEB               	movlw	-21
 22710  01298A  50E3               	movf	plusw1,w,c
 22711  01298C  0230               	mulwf	(btemp+11)^0,c
 22712                           
 22713                           ;stkvar	_temp @ sp[(-13)+8]
 22714  01298E  0EFB               	movlw	-5
 22715  012990  006F FFCF FFE3     	movff	prodl,plusw1
 22716  012996  0EFC               	movlw	-4
 22717  012998  006F FFD3 FFE3     	movff	prodh,plusw1
 22718                           
 22719                           ;stkvar	_temp @ sp[(-13)+8]
 22720  01299E  0EFB               	movlw	-5
 22721  0129A0  006F FF8C  F02F    	movff	plusw1,btemp+10
 22722  0129A6  0EFC               	movlw	-4
 22723  0129A8  006F FF8C  F030    	movff	plusw1,btemp+11
 22724                           
 22725                           ;stkvar	_grs @ sp[(-13)+4]
 22726  0129AE  50E1               	movf	fsr1l,w,c
 22727  0129B0  0FF7               	addlw	-9
 22728  0129B2  6ED9               	movwf	fsr2l,c
 22729  0129B4  50E2               	movf	fsr1h,w,c
 22730  0129B6  6EDA               	movwf	fsr2h,c
 22731  0129B8  0EFF               	movlw	255
 22732  0129BA  22DA               	addwfc	fsr2h,f,c
 22733  0129BC  502F               	movf	(btemp+10)^0,w,c
 22734  0129BE  26DE               	addwf	postinc2,f,c
 22735  0129C0  5030               	movf	(btemp+11)^0,w,c
 22736  0129C2  22DE               	addwfc	postinc2,f,c
 22737  0129C4  0E00               	movlw	0
 22738  0129C6  22DE               	addwfc	postinc2,f,c
 22739  0129C8  22DE               	addwfc	postinc2,f,c
 22740                           
 22741                           ;stkvar	_b @ sp[(-13)+-4]
 22742  0129CA  0EEF               	movlw	-17
 22743  0129CC  006F FF8C  F030    	movff	plusw1,btemp+11
 22744                           
 22745                           ;stkvar	_a @ sp[(-13)+-8]
 22746  0129D2  0EEC               	movlw	236
 22747  0129D4  24E1               	addwf	fsr1l,w,c
 22748  0129D6  6ED9               	movwf	fsr2l,c
 22749  0129D8  0EFF               	movlw	255
 22750  0129DA  20E2               	addwfc	fsr1h,w,c
 22751  0129DC  6EDA               	movwf	fsr2h,c
 22752  0129DE  50DF               	movf	indf2,w,c
 22753  0129E0  0230               	mulwf	(btemp+11)^0,c
 22754                           
 22755                           ;stkvar	_temp @ sp[(-13)+8]
 22756  0129E2  0EFB               	movlw	-5
 22757  0129E4  006F FFCF FFE3     	movff	prodl,plusw1
 22758  0129EA  0EFC               	movlw	-4
 22759  0129EC  006F FFD3 FFE3     	movff	prodh,plusw1
 22760                           
 22761                           ;stkvar	_temp @ sp[(-13)+8]
 22762  0129F2  0EFB               	movlw	-5
 22763  0129F4  006F FF8C  F02F    	movff	plusw1,btemp+10
 22764  0129FA  0EFC               	movlw	-4
 22765  0129FC  006F FF8C  F030    	movff	plusw1,btemp+11
 22766                           
 22767                           ;stkvar	_grs @ sp[(-13)+4]
 22768  012A02  50E1               	movf	fsr1l,w,c
 22769  012A04  0FF7               	addlw	-9
 22770  012A06  6ED9               	movwf	fsr2l,c
 22771  012A08  50E2               	movf	fsr1h,w,c
 22772  012A0A  6EDA               	movwf	fsr2h,c
 22773  012A0C  0EFF               	movlw	255
 22774  012A0E  22DA               	addwfc	fsr2h,f,c
 22775  012A10  502F               	movf	(btemp+10)^0,w,c
 22776  012A12  26DE               	addwf	postinc2,f,c
 22777  012A14  5030               	movf	(btemp+11)^0,w,c
 22778  012A16  22DE               	addwfc	postinc2,f,c
 22779  012A18  0E00               	movlw	0
 22780  012A1A  22DE               	addwfc	postinc2,f,c
 22781  012A1C  22DE               	addwfc	postinc2,f,c
 22782                           
 22783                           ;stkvar	_grs @ sp[(-13)+4]
 22784  012A1E  50E1               	movf	fsr1l,w,c
 22785  012A20  0FF7               	addlw	-9
 22786  012A22  6ED9               	movwf	fsr2l,c
 22787  012A24  50E2               	movf	fsr1h,w,c
 22788  012A26  6EDA               	movwf	fsr2h,c
 22789  012A28  0EFF               	movlw	255
 22790  012A2A  22DA               	addwfc	fsr2h,f,c
 22791  012A2C  0E08               	movlw	8
 22792  012A2E                     u7775:
 22793  012A2E  90D8               	bcf	status,0,c
 22794  012A30  36DE               	rlcf	postinc2,f,c
 22795  012A32  36DE               	rlcf	postinc2,f,c
 22796  012A34  36DE               	rlcf	postinc2,f,c
 22797  012A36  36DD               	rlcf	postdec2,f,c
 22798  012A38  52DD               	movf	postdec2,f,c
 22799  012A3A  52DD               	movf	postdec2,f,c
 22800  012A3C  2EE8               	decfsz	wreg,f,c
 22801  012A3E  D7F7               	goto	u7775
 22802                           
 22803                           ;stkvar	_b @ sp[(-13)+-4]
 22804  012A40  0EEF               	movlw	-17
 22805  012A42  006F FF8C  F030    	movff	plusw1,btemp+11
 22806                           
 22807                           ;stkvar	_a @ sp[(-13)+-8]
 22808  012A48  0EEB               	movlw	-21
 22809  012A4A  50E3               	movf	plusw1,w,c
 22810  012A4C  0230               	mulwf	(btemp+11)^0,c
 22811                           
 22812                           ;stkvar	_temp @ sp[(-13)+8]
 22813  012A4E  0EFB               	movlw	-5
 22814  012A50  006F FFCF FFE3     	movff	prodl,plusw1
 22815  012A56  0EFC               	movlw	-4
 22816  012A58  006F FFD3 FFE3     	movff	prodh,plusw1
 22817                           
 22818                           ;stkvar	_temp @ sp[(-13)+8]
 22819  012A5E  0EFB               	movlw	-5
 22820  012A60  006F FF8C  F02F    	movff	plusw1,btemp+10
 22821  012A66  0EFC               	movlw	-4
 22822  012A68  006F FF8C  F030    	movff	plusw1,btemp+11
 22823                           
 22824                           ;stkvar	_grs @ sp[(-13)+4]
 22825  012A6E  50E1               	movf	fsr1l,w,c
 22826  012A70  0FF7               	addlw	-9
 22827  012A72  6ED9               	movwf	fsr2l,c
 22828  012A74  50E2               	movf	fsr1h,w,c
 22829  012A76  6EDA               	movwf	fsr2h,c
 22830  012A78  0EFF               	movlw	255
 22831  012A7A  22DA               	addwfc	fsr2h,f,c
 22832  012A7C  502F               	movf	(btemp+10)^0,w,c
 22833  012A7E  26DE               	addwf	postinc2,f,c
 22834  012A80  5030               	movf	(btemp+11)^0,w,c
 22835  012A82  22DE               	addwfc	postinc2,f,c
 22836  012A84  0E00               	movlw	0
 22837  012A86  22DE               	addwfc	postinc2,f,c
 22838  012A88  22DE               	addwfc	postinc2,f,c
 22839                           
 22840                           ;stkvar	_b @ sp[(-13)+-4]
 22841  012A8A  0EF0               	movlw	240
 22842  012A8C  24E1               	addwf	fsr1l,w,c
 22843  012A8E  6ED9               	movwf	fsr2l,c
 22844  012A90  0EFF               	movlw	255
 22845  012A92  20E2               	addwfc	fsr1h,w,c
 22846  012A94  6EDA               	movwf	fsr2h,c
 22847  012A96  50DF               	movf	indf2,w,c
 22848  012A98  6E30               	movwf	(btemp+11)^0,c
 22849                           
 22850                           ;stkvar	_a @ sp[(-13)+-8]
 22851  012A9A  0EED               	movlw	237
 22852  012A9C  24E1               	addwf	fsr1l,w,c
 22853  012A9E  6ED9               	movwf	fsr2l,c
 22854  012AA0  0EFF               	movlw	255
 22855  012AA2  20E2               	addwfc	fsr1h,w,c
 22856  012AA4  6EDA               	movwf	fsr2h,c
 22857  012AA6  50DF               	movf	indf2,w,c
 22858  012AA8  0230               	mulwf	(btemp+11)^0,c
 22859                           
 22860                           ;stkvar	_temp @ sp[(-13)+8]
 22861  012AAA  0EFB               	movlw	-5
 22862  012AAC  006F FFCF FFE3     	movff	prodl,plusw1
 22863  012AB2  0EFC               	movlw	-4
 22864  012AB4  006F FFD3 FFE3     	movff	prodh,plusw1
 22865                           
 22866                           ;stkvar	_temp @ sp[(-13)+8]
 22867  012ABA  0EFB               	movlw	-5
 22868  012ABC  006F FF8C  F02F    	movff	plusw1,btemp+10
 22869  012AC2  0EFC               	movlw	-4
 22870  012AC4  006F FF8C  F030    	movff	plusw1,btemp+11
 22871                           
 22872                           ;stkvar	_prod @ sp[(-13)+0]
 22873  012ACA  50E1               	movf	fsr1l,w,c
 22874  012ACC  0FF3               	addlw	-13
 22875  012ACE  6ED9               	movwf	fsr2l,c
 22876  012AD0  50E2               	movf	fsr1h,w,c
 22877  012AD2  6EDA               	movwf	fsr2h,c
 22878  012AD4  0EFF               	movlw	255
 22879  012AD6  22DA               	addwfc	fsr2h,f,c
 22880  012AD8  502F               	movf	(btemp+10)^0,w,c
 22881  012ADA  26DE               	addwf	postinc2,f,c
 22882  012ADC  5030               	movf	(btemp+11)^0,w,c
 22883  012ADE  22DE               	addwfc	postinc2,f,c
 22884  012AE0  0E00               	movlw	0
 22885  012AE2  22DE               	addwfc	postinc2,f,c
 22886  012AE4  22DE               	addwfc	postinc2,f,c
 22887                           
 22888                           ;stkvar	_b @ sp[(-13)+-4]
 22889  012AE6  0EF1               	movlw	241
 22890  012AE8  24E1               	addwf	fsr1l,w,c
 22891  012AEA  6ED9               	movwf	fsr2l,c
 22892  012AEC  0EFF               	movlw	255
 22893  012AEE  20E2               	addwfc	fsr1h,w,c
 22894  012AF0  6EDA               	movwf	fsr2h,c
 22895  012AF2  50DF               	movf	indf2,w,c
 22896  012AF4  6E30               	movwf	(btemp+11)^0,c
 22897                           
 22898                           ;stkvar	_a @ sp[(-13)+-8]
 22899  012AF6  0EEC               	movlw	236
 22900  012AF8  24E1               	addwf	fsr1l,w,c
 22901  012AFA  6ED9               	movwf	fsr2l,c
 22902  012AFC  0EFF               	movlw	255
 22903  012AFE  20E2               	addwfc	fsr1h,w,c
 22904  012B00  6EDA               	movwf	fsr2h,c
 22905  012B02  50DF               	movf	indf2,w,c
 22906  012B04  0230               	mulwf	(btemp+11)^0,c
 22907                           
 22908                           ;stkvar	_temp @ sp[(-13)+8]
 22909  012B06  0EFB               	movlw	-5
 22910  012B08  006F FFCF FFE3     	movff	prodl,plusw1
 22911  012B0E  0EFC               	movlw	-4
 22912  012B10  006F FFD3 FFE3     	movff	prodh,plusw1
 22913                           
 22914                           ;stkvar	_temp @ sp[(-13)+8]
 22915  012B16  0EFB               	movlw	-5
 22916  012B18  006F FF8C  F02F    	movff	plusw1,btemp+10
 22917  012B1E  0EFC               	movlw	-4
 22918  012B20  006F FF8C  F030    	movff	plusw1,btemp+11
 22919                           
 22920                           ;stkvar	_prod @ sp[(-13)+0]
 22921  012B26  50E1               	movf	fsr1l,w,c
 22922  012B28  0FF3               	addlw	-13
 22923  012B2A  6ED9               	movwf	fsr2l,c
 22924  012B2C  50E2               	movf	fsr1h,w,c
 22925  012B2E  6EDA               	movwf	fsr2h,c
 22926  012B30  0EFF               	movlw	255
 22927  012B32  22DA               	addwfc	fsr2h,f,c
 22928  012B34  502F               	movf	(btemp+10)^0,w,c
 22929  012B36  26DE               	addwf	postinc2,f,c
 22930  012B38  5030               	movf	(btemp+11)^0,w,c
 22931  012B3A  22DE               	addwfc	postinc2,f,c
 22932  012B3C  0E00               	movlw	0
 22933  012B3E  22DE               	addwfc	postinc2,f,c
 22934  012B40  22DE               	addwfc	postinc2,f,c
 22935                           
 22936                           ;stkvar	_b @ sp[(-13)+-4]
 22937  012B42  0EF1               	movlw	241
 22938  012B44  24E1               	addwf	fsr1l,w,c
 22939  012B46  6ED9               	movwf	fsr2l,c
 22940  012B48  0EFF               	movlw	255
 22941  012B4A  20E2               	addwfc	fsr1h,w,c
 22942  012B4C  6EDA               	movwf	fsr2h,c
 22943  012B4E  50DF               	movf	indf2,w,c
 22944  012B50  6E30               	movwf	(btemp+11)^0,c
 22945                           
 22946                           ;stkvar	_a @ sp[(-13)+-8]
 22947  012B52  0EED               	movlw	237
 22948  012B54  24E1               	addwf	fsr1l,w,c
 22949  012B56  6ED9               	movwf	fsr2l,c
 22950  012B58  0EFF               	movlw	255
 22951  012B5A  20E2               	addwfc	fsr1h,w,c
 22952  012B5C  6EDA               	movwf	fsr2h,c
 22953  012B5E  50DF               	movf	indf2,w,c
 22954  012B60  0230               	mulwf	(btemp+11)^0,c
 22955                           
 22956                           ;stkvar	_temp @ sp[(-13)+8]
 22957  012B62  0EFB               	movlw	-5
 22958  012B64  006F FFCF FFE3     	movff	prodl,plusw1
 22959  012B6A  0EFC               	movlw	-4
 22960  012B6C  006F FFD3 FFE3     	movff	prodh,plusw1
 22961                           
 22962                           ;stkvar	_temp @ sp[(-13)+8]
 22963  012B72  0EFB               	movlw	-5
 22964  012B74  006F FF8C  F02F    	movff	plusw1,btemp+10
 22965  012B7A  0EFC               	movlw	-4
 22966  012B7C  006F FF8C  F030    	movff	plusw1,btemp+11
 22967  012B82  502F               	movf	(btemp+10)^0,w,c
 22968  012B84  6E29               	movwf	(btemp+4)^0,c
 22969  012B86  5030               	movf	(btemp+11)^0,w,c
 22970  012B88  6E2A               	movwf	(btemp+5)^0,c
 22971  012B8A  6A2B               	clrf	(btemp+6)^0,c
 22972  012B8C  6A2C               	clrf	(btemp+7)^0,c
 22973  012B8E  0060  F0AC  F02C   	movff	btemp+6,btemp+7
 22974  012B94  0060  F0A8  F02B   	movff	btemp+5,btemp+6
 22975  012B9A  0060  F0A4  F02A   	movff	btemp+4,btemp+5
 22976  012BA0  6A29               	clrf	(btemp+4)^0,c
 22977                           
 22978                           ;stkvar	_prod @ sp[(-13)+0]
 22979  012BA2  50E1               	movf	fsr1l,w,c
 22980  012BA4  0FF3               	addlw	-13
 22981  012BA6  6ED9               	movwf	fsr2l,c
 22982  012BA8  50E2               	movf	fsr1h,w,c
 22983  012BAA  6EDA               	movwf	fsr2h,c
 22984  012BAC  0EFF               	movlw	255
 22985  012BAE  22DA               	addwfc	fsr2h,f,c
 22986  012BB0  5029               	movf	(btemp+4)^0,w,c
 22987  012BB2  26DE               	addwf	postinc2,f,c
 22988  012BB4  502A               	movf	(btemp+5)^0,w,c
 22989  012BB6  22DE               	addwfc	postinc2,f,c
 22990  012BB8  502B               	movf	(btemp+6)^0,w,c
 22991  012BBA  22DE               	addwfc	postinc2,f,c
 22992  012BBC  502C               	movf	(btemp+7)^0,w,c
 22993  012BBE  22DE               	addwfc	postinc2,f,c
 22994                           
 22995                           ;stkvar	_prod @ sp[(-13)+0]
 22996  012BC0  50E1               	movf	fsr1l,w,c
 22997  012BC2  0FF3               	addlw	-13
 22998  012BC4  6ED9               	movwf	fsr2l,c
 22999  012BC6  50E2               	movf	fsr1h,w,c
 23000  012BC8  6EDA               	movwf	fsr2h,c
 23001  012BCA  0EFF               	movlw	255
 23002  012BCC  22DA               	addwfc	fsr2h,f,c
 23003                           
 23004                           ;stkvar	_grs @ sp[(-13)+4]
 23005  012BCE  0EFA               	movlw	250
 23006  012BD0  24E1               	addwf	fsr1l,w,c
 23007  012BD2  6EE9               	movwf	fsr0l,c
 23008  012BD4  0EFF               	movlw	255
 23009  012BD6  20E2               	addwfc	fsr1h,w,c
 23010  012BD8  6EEA               	movwf	fsr0h,c
 23011  012BDA  50EF               	movf	indf0,w,c
 23012  012BDC  26DE               	addwf	postinc2,f,c
 23013  012BDE  0E00               	movlw	0
 23014  012BE0  22DE               	addwfc	postinc2,f,c
 23015  012BE2  22DE               	addwfc	postinc2,f,c
 23016  012BE4  22DE               	addwfc	postinc2,f,c
 23017                           
 23018                           ;stkvar	_grs @ sp[(-13)+4]
 23019  012BE6  50E1               	movf	fsr1l,w,c
 23020  012BE8  0FF7               	addlw	-9
 23021  012BEA  6ED9               	movwf	fsr2l,c
 23022  012BEC  50E2               	movf	fsr1h,w,c
 23023  012BEE  6EDA               	movwf	fsr2h,c
 23024  012BF0  0EFF               	movlw	255
 23025  012BF2  22DA               	addwfc	fsr2h,f,c
 23026  012BF4  0E08               	movlw	8
 23027  012BF6                     u7785:
 23028  012BF6  90D8               	bcf	status,0,c
 23029  012BF8  36DE               	rlcf	postinc2,f,c
 23030  012BFA  36DE               	rlcf	postinc2,f,c
 23031  012BFC  36DE               	rlcf	postinc2,f,c
 23032  012BFE  36DD               	rlcf	postdec2,f,c
 23033  012C00  52DD               	movf	postdec2,f,c
 23034  012C02  52DD               	movf	postdec2,f,c
 23035  012C04  2EE8               	decfsz	wreg,f,c
 23036  012C06  D7F7               	goto	u7785
 23037  012C08  0E82               	movlw	130
 23038  012C0A  6E2F               	movwf	(btemp+10)^0,c
 23039  012C0C  0EFF               	movlw	255
 23040  012C0E  6E30               	movwf	(btemp+11)^0,c
 23041                           
 23042                           ;stkvar	_bexp @ sp[(-13)+10]
 23043  012C10  0EFD               	movlw	-3
 23044  012C12  50E3               	movf	plusw1,w,c
 23045  012C14  6E2D               	movwf	(btemp+8)^0,c
 23046  012C16  6A2E               	clrf	(btemp+9)^0,c
 23047                           
 23048                           ;stkvar	_aexp @ sp[(-13)+11]
 23049  012C18  0EFE               	movlw	-2
 23050  012C1A  50E3               	movf	plusw1,w,c
 23051  012C1C  262D               	addwf	(btemp+8)^0,f,c
 23052  012C1E  0E00               	movlw	0
 23053  012C20  222E               	addwfc	(btemp+9)^0,f,c
 23054  012C22  502F               	movf	(btemp+10)^0,w,c
 23055  012C24  262D               	addwf	(btemp+8)^0,f,c
 23056  012C26  5030               	movf	(btemp+11)^0,w,c
 23057  012C28  222E               	addwfc	(btemp+9)^0,f,c
 23058                           
 23059                           ;stkvar	_temp @ sp[(-13)+8]
 23060  012C2A  0EFB               	movlw	-5
 23061  012C2C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23062  012C32  0EFC               	movlw	-4
 23063  012C34  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23064  012C3A  D021               	goto	l8384
 23065  012C3C                     l8374:
 23066                           
 23067                           ;stkvar	_prod @ sp[(-13)+0]
 23068  012C3C  90D8               	bcf	status,0,c
 23069  012C3E  0EF3               	movlw	-13
 23070  012C40  36E3               	rlcf	plusw1,f,c
 23071  012C42  0EF4               	movlw	-12
 23072  012C44  36E3               	rlcf	plusw1,f,c
 23073  012C46  0EF5               	movlw	-11
 23074  012C48  36E3               	rlcf	plusw1,f,c
 23075  012C4A  0EF6               	movlw	-10
 23076  012C4C  36E3               	rlcf	plusw1,f,c
 23077                           
 23078                           ;stkvar	_grs @ sp[(-13)+4]
 23079  012C4E  0EFA               	movlw	-6
 23080  012C50  AEE3               	btfss	plusw1,7,c
 23081  012C52  D002               	goto	l8380
 23082                           
 23083                           ;stkvar	_prod @ sp[(-13)+0]
 23084  012C54  0EF3               	movlw	-13
 23085  012C56  80E3               	bsf	plusw1,0,c
 23086  012C58                     l8380:
 23087                           
 23088                           ;stkvar	_grs @ sp[(-13)+4]
 23089  012C58  90D8               	bcf	status,0,c
 23090  012C5A  0EF7               	movlw	-9
 23091  012C5C  36E3               	rlcf	plusw1,f,c
 23092  012C5E  0EF8               	movlw	-8
 23093  012C60  36E3               	rlcf	plusw1,f,c
 23094  012C62  0EF9               	movlw	-7
 23095  012C64  36E3               	rlcf	plusw1,f,c
 23096  012C66  0EFA               	movlw	-6
 23097  012C68  36E3               	rlcf	plusw1,f,c
 23098                           
 23099                           ;stkvar	_temp @ sp[(-13)+8]
 23100  012C6A  50E1               	movf	fsr1l,w,c
 23101  012C6C  0FFB               	addlw	-5
 23102  012C6E  6ED9               	movwf	fsr2l,c
 23103  012C70  50E2               	movf	fsr1h,w,c
 23104  012C72  6EDA               	movwf	fsr2h,c
 23105  012C74  0EFF               	movlw	255
 23106  012C76  22DA               	addwfc	fsr2h,f,c
 23107  012C78  06DE               	decf	postinc2,f,c
 23108  012C7A  0E00               	movlw	0
 23109  012C7C  5ADD               	subwfb	postdec2,f,c
 23110  012C7E                     l8384:
 23111                           
 23112                           ;stkvar	_prod @ sp[(-13)+0]
 23113  012C7E  0EF5               	movlw	-11
 23114  012C80  AEE3               	btfss	plusw1,7,c
 23115  012C82  D7DC               	goto	l8374
 23116                           
 23117                           ;stkvar	_aexp @ sp[(-13)+11]
 23118  012C84  0EFE               	movlw	-2
 23119  012C86  6AE3               	clrf	plusw1,c
 23120                           
 23121                           ;stkvar	_grs @ sp[(-13)+4]
 23122  012C88  0EFA               	movlw	-6
 23123  012C8A  AEE3               	btfss	plusw1,7,c
 23124  012C8C  D020               	goto	l8398
 23125                           
 23126                           ;stkvar	_grs @ sp[(-13)+4]
 23127  012C8E  50E1               	movf	fsr1l,w,c
 23128  012C90  0FF7               	addlw	-9
 23129  012C92  6ED9               	movwf	fsr2l,c
 23130  012C94  50E2               	movf	fsr1h,w,c
 23131  012C96  6EDA               	movwf	fsr2h,c
 23132  012C98  0EFF               	movlw	255
 23133  012C9A  22DA               	addwfc	fsr2h,f,c
 23134  012C9C  0EFF               	movlw	255
 23135  012C9E  14DE               	andwf	postinc2,w,c
 23136  012CA0  6E2D               	movwf	(btemp+8)^0,c
 23137  012CA2  0EFF               	movlw	255
 23138  012CA4  14DE               	andwf	postinc2,w,c
 23139  012CA6  6E2E               	movwf	(btemp+9)^0,c
 23140  012CA8  0EFF               	movlw	255
 23141  012CAA  14DE               	andwf	postinc2,w,c
 23142  012CAC  6E2F               	movwf	(btemp+10)^0,c
 23143  012CAE  0E7F               	movlw	127
 23144  012CB0  14DE               	andwf	postinc2,w,c
 23145  012CB2  6E30               	movwf	(btemp+11)^0,c
 23146  012CB4  502D               	movf	(btemp+8)^0,w,c
 23147  012CB6  102E               	iorwf	(btemp+9)^0,w,c
 23148  012CB8  102F               	iorwf	(btemp+10)^0,w,c
 23149  012CBA  1030               	iorwf	(btemp+11)^0,w,c
 23150  012CBC  B4D8               	btfsc	status,2,c
 23151  012CBE  D004               	goto	l8394
 23152  012CC0                     u7820:
 23153                           
 23154                           ;stkvar	_aexp @ sp[(-13)+11]
 23155  012CC0  0EFE               	movlw	-2
 23156  012CC2  6AE3               	clrf	plusw1,c
 23157  012CC4  2AE3               	incf	plusw1,f,c
 23158  012CC6  D003               	goto	l8398
 23159  012CC8                     l8394:
 23160                           
 23161                           ;stkvar	_prod @ sp[(-13)+0]
 23162  012CC8  0EF3               	movlw	-13
 23163  012CCA  B0E3               	btfsc	plusw1,0,c
 23164  012CCC  D7F9               	goto	u7820
 23165  012CCE                     l8398:
 23166                           
 23167                           ;stkvar	_aexp @ sp[(-13)+11]
 23168  012CCE  0EFE               	movlw	-2
 23169  012CD0  50E3               	movf	plusw1,w,c
 23170  012CD2  B4D8               	btfsc	status,2,c
 23171  012CD4  D036               	goto	l8408
 23172                           
 23173                           ;stkvar	_prod @ sp[(-13)+0]
 23174  012CD6  50E1               	movf	fsr1l,w,c
 23175  012CD8  0FF3               	addlw	-13
 23176  012CDA  6ED9               	movwf	fsr2l,c
 23177  012CDC  50E2               	movf	fsr1h,w,c
 23178  012CDE  6EDA               	movwf	fsr2h,c
 23179  012CE0  0EFF               	movlw	255
 23180  012CE2  22DA               	addwfc	fsr2h,f,c
 23181  012CE4  2ADE               	incf	postinc2,f,c
 23182  012CE6  0E00               	movlw	0
 23183  012CE8  22DE               	addwfc	postinc2,f,c
 23184  012CEA  22DE               	addwfc	postinc2,f,c
 23185  012CEC  22DE               	addwfc	postinc2,f,c
 23186                           
 23187                           ;stkvar	_prod @ sp[(-13)+0]
 23188  012CEE  0EF6               	movlw	-10
 23189  012CF0  A0E3               	btfss	plusw1,0,c
 23190  012CF2  D027               	goto	l8408
 23191  012CF4  0E01               	movlw	1
 23192  012CF6  6E30               	movwf	(btemp+11)^0,c
 23193                           
 23194                           ;stkvar	_prod @ sp[(-13)+0]
 23195  012CF8  50E1               	movf	fsr1l,w,c
 23196  012CFA  0FF3               	addlw	-13
 23197  012CFC  6ED9               	movwf	fsr2l,c
 23198  012CFE  50E2               	movf	fsr1h,w,c
 23199  012D00  6EDA               	movwf	fsr2h,c
 23200  012D02  0EFF               	movlw	255
 23201  012D04  22DA               	addwfc	fsr2h,f,c
 23202  012D06  2830               	incf	(btemp+11)^0,w,c
 23203  012D08  52DE               	movf	postinc2,f,c
 23204  012D0A  D008               	goto	u7860
 23205  012D0C                     u7865:
 23206  012D0C  52DE               	movf	postinc2,f,c
 23207  012D0E  90D8               	bcf	status,0,c
 23208  012D10  BEDC               	btfsc	preinc2,7,c
 23209  012D12  80D8               	bsf	status,0,c
 23210  012D14  32DD               	rrcf	postdec2,f,c
 23211  012D16  32DD               	rrcf	postdec2,f,c
 23212  012D18  32DD               	rrcf	postdec2,f,c
 23213  012D1A  32DE               	rrcf	postinc2,f,c
 23214  012D1C                     u7860:
 23215  012D1C  2EE8               	decfsz	wreg,f,c
 23216  012D1E  D7F6               	goto	u7865
 23217                           
 23218                           ;stkvar	_temp @ sp[(-13)+8]
 23219  012D20  0EFB               	movlw	-5
 23220  012D22  50E3               	movf	plusw1,w,c
 23221  012D24  0F01               	addlw	1
 23222  012D26  6E25               	movwf	btemp^0,c
 23223  012D28  0EFB               	movlw	-5
 23224  012D2A  0060  F097  FFE3   	movff	btemp,plusw1
 23225  012D30  6A25               	clrf	btemp^0,c
 23226  012D32  0EFC               	movlw	-4
 23227  012D34  50E3               	movf	plusw1,w,c
 23228  012D36  2025               	addwfc	btemp^0,w,c
 23229  012D38  6E25               	movwf	btemp^0,c
 23230  012D3A  0EFC               	movlw	-4
 23231  012D3C  0060  F097  FFE3   	movff	btemp,plusw1
 23232  012D42                     l8408:
 23233                           
 23234                           ;stkvar	_temp @ sp[(-13)+8]
 23235  012D42  0EFC               	movlw	-4
 23236  012D44  BEE3               	btfsc	plusw1,7,c
 23237  012D46  D020               	goto	l8412
 23238  012D48  0EFC               	movlw	-4
 23239  012D4A  50E3               	movf	plusw1,w,c
 23240  012D4C  E104               	bnz	u7870
 23241  012D4E  0EFB               	movlw	-5
 23242  012D50  28E3               	incf	plusw1,w,c
 23243  012D52  A0D8               	btfss	status,0,c
 23244  012D54  D019               	goto	l8412
 23245  012D56                     u7870:
 23246  012D56  0E00               	movlw	0
 23247  012D58  6E2D               	movwf	(btemp+8)^0,c
 23248  012D5A  0E00               	movlw	0
 23249  012D5C  6E2E               	movwf	(btemp+9)^0,c
 23250  012D5E  0E80               	movlw	128
 23251  012D60  6E2F               	movwf	(btemp+10)^0,c
 23252  012D62  0E7F               	movlw	127
 23253  012D64  6E30               	movwf	(btemp+11)^0,c
 23254                           
 23255                           ;stkvar	_prod @ sp[(-13)+0]
 23256  012D66  0EF3               	movlw	-13
 23257  012D68  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23258  012D6E  0EF4               	movlw	-12
 23259  012D70  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23260  012D76  0EF5               	movlw	-11
 23261  012D78  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 23262  012D7E  0EF6               	movlw	-10
 23263  012D80  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 23264  012D86  D044               	goto	l8428
 23265  012D88                     l8412:
 23266                           
 23267                           ;stkvar	_temp @ sp[(-13)+8]
 23268  012D88  0EFC               	movlw	-4
 23269  012D8A  BEE3               	btfsc	plusw1,7,c
 23270  012D8C  D007               	goto	u7880
 23271  012D8E  0EFC               	movlw	-4
 23272  012D90  50E3               	movf	plusw1,w,c
 23273  012D92  E10F               	bnz	l8418
 23274  012D94  0EFB               	movlw	-5
 23275  012D96  04E3               	decf	plusw1,w,c
 23276  012D98  B0D8               	btfsc	status,0,c
 23277  012D9A  D00B               	goto	l8418
 23278  012D9C                     u7880:
 23279                           
 23280                           ;stkvar	_prod @ sp[(-13)+0]
 23281  012D9C  0EF3               	movlw	-13
 23282  012D9E  6AE3               	clrf	plusw1,c
 23283  012DA0  0EF4               	movlw	-12
 23284  012DA2  6AE3               	clrf	plusw1,c
 23285  012DA4  0EF5               	movlw	-11
 23286  012DA6  6AE3               	clrf	plusw1,c
 23287  012DA8  0EF6               	movlw	-10
 23288  012DAA  6AE3               	clrf	plusw1,c
 23289                           
 23290                           ;stkvar	_sign @ sp[(-13)+12]
 23291  012DAC  0EFF               	movlw	-1
 23292  012DAE  6AE3               	clrf	plusw1,c
 23293  012DB0  D02F               	goto	l8428
 23294  012DB2                     l8418:
 23295                           
 23296                           ;stkvar	_temp @ sp[(-13)+8]
 23297                           ;stkvar	_bexp @ sp[(-13)+10]
 23298  012DB2  0EFB               	movlw	-5
 23299  012DB4  006F FF8C  F025    	movff	plusw1,btemp
 23300  012DBA  0EFD               	movlw	-3
 23301  012DBC  0060  F097  FFE3   	movff	btemp,plusw1
 23302                           
 23303                           ;stkvar	_prod @ sp[(-13)+0]
 23304  012DC2  50E1               	movf	fsr1l,w,c
 23305  012DC4  0FF3               	addlw	-13
 23306  012DC6  6ED9               	movwf	fsr2l,c
 23307  012DC8  50E2               	movf	fsr1h,w,c
 23308  012DCA  6EDA               	movwf	fsr2h,c
 23309  012DCC  0EFF               	movlw	255
 23310  012DCE  22DA               	addwfc	fsr2h,f,c
 23311  012DD0  0EFF               	movlw	255
 23312  012DD2  16DE               	andwf	postinc2,f,c
 23313  012DD4  0EFF               	movlw	255
 23314  012DD6  16DE               	andwf	postinc2,f,c
 23315  012DD8  0E7F               	movlw	127
 23316  012DDA  16DE               	andwf	postinc2,f,c
 23317  012DDC  0E00               	movlw	0
 23318  012DDE  16DE               	andwf	postinc2,f,c
 23319                           
 23320                           ;stkvar	_bexp @ sp[(-13)+10]
 23321  012DE0  0EFD               	movlw	-3
 23322  012DE2  A0E3               	btfss	plusw1,0,c
 23323  012DE4  D008               	goto	l8426
 23324                           
 23325                           ;stkvar	_prod @ sp[(-13)+0]
 23326  012DE6  0EF5               	movlw	245
 23327  012DE8  24E1               	addwf	fsr1l,w,c
 23328  012DEA  6ED9               	movwf	fsr2l,c
 23329  012DEC  0EFF               	movlw	255
 23330  012DEE  20E2               	addwfc	fsr1h,w,c
 23331  012DF0  6EDA               	movwf	fsr2h,c
 23332  012DF2  0E00               	movlw	0
 23333  012DF4  8EDB               	bsf	plusw2,7,c
 23334  012DF6                     l8426:
 23335                           
 23336                           ;stkvar	_prod @ sp[(-13)+0]
 23337  012DF6  0EF6               	movlw	246
 23338  012DF8  24E1               	addwf	fsr1l,w,c
 23339  012DFA  6ED9               	movwf	fsr2l,c
 23340  012DFC  0EFF               	movlw	255
 23341  012DFE  20E2               	addwfc	fsr1h,w,c
 23342  012E00  6EDA               	movwf	fsr2h,c
 23343                           
 23344                           ;stkvar	_bexp @ sp[(-13)+10]
 23345  012E02  0EFD               	movlw	-3
 23346  012E04  006F FF8C  F030    	movff	plusw1,btemp+11
 23347  012E0A  90D8               	bcf	status,0,c
 23348  012E0C  3030               	rrcf	(btemp+11)^0,w,c
 23349  012E0E  6EDF               	movwf	indf2,c
 23350  012E10                     l8428:
 23351                           
 23352                           ;stkvar	_sign @ sp[(-13)+12]
 23353  012E10  0EFF               	movlw	-1
 23354  012E12  006F FF8C  F030    	movff	plusw1,btemp+11
 23355                           
 23356                           ;stkvar	_prod @ sp[(-13)+0]
 23357  012E18  0EF6               	movlw	246
 23358  012E1A  24E1               	addwf	fsr1l,w,c
 23359  012E1C  6ED9               	movwf	fsr2l,c
 23360  012E1E  0EFF               	movlw	255
 23361  012E20  20E2               	addwfc	fsr1h,w,c
 23362  012E22  6EDA               	movwf	fsr2h,c
 23363  012E24  5030               	movf	(btemp+11)^0,w,c
 23364  012E26  12DF               	iorwf	indf2,f,c
 23365                           
 23366                           ;stkvar	_prod @ sp[(-13)+0]
 23367  012E28  0EF3               	movlw	-13
 23368  012E2A  006F FF8C  F025    	movff	plusw1,btemp
 23369  012E30  0EF4               	movlw	-12
 23370  012E32  006F FF8C  F026    	movff	plusw1,btemp+1
 23371  012E38  0EF5               	movlw	-11
 23372  012E3A  006F FF8C  F027    	movff	plusw1,btemp+2
 23373  012E40  0EF6               	movlw	-10
 23374  012E42  006F FF8C  F028    	movff	plusw1,btemp+3
 23375  012E48                     l2843:
 23376                           
 23377                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23378  012E48  0EEB               	movlw	235
 23379  012E4A  26E1               	addwf	fsr1l,f,c
 23380  012E4C  0EFF               	movlw	255
 23381  012E4E  22E2               	addwfc	fsr1h,f,c
 23382  012E50  0012               	return		;funcret
 23383  012E52                     __end_of___flmul:
 23384                           	opt callstack 0
 23385                           
 23386 ;; *************** function _SYSTEM_Initialize *****************
 23387 ;; Defined at:
 23388 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23389 ;; Parameters:    Size  Location     Type
 23390 ;;		None
 23391 ;; Auto vars:     Size  Location     Type
 23392 ;;		None
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  1  [STACK] void 
 23395 ;; Registers used:
 23396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/0
 23399 ;;		On exit  : 3F/3C
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;Total ram usage:        0 bytes
 23407 ;; Hardware stack levels used:    1
 23408 ;; Hardware stack levels required when called:    9
 23409 ;; This function calls:
 23410 ;;		_ADCC_Initialize
 23411 ;;		_CLKREF_Initialize
 23412 ;;		_DMA1_Initialize
 23413 ;;		_DMA2_Initialize
 23414 ;;		_EXT_INT_Initialize
 23415 ;;		_FVR_Initialize
 23416 ;;		_INTERRUPT_Initialize
 23417 ;;		_OSCILLATOR_Initialize
 23418 ;;		_PIN_MANAGER_Initialize
 23419 ;;		_PMD_Initialize
 23420 ;;		_PWM8_Initialize
 23421 ;;		_SPI1_Initialize
 23422 ;;		_TMR2_Initialize
 23423 ;;		_TMR3_Initialize
 23424 ;;		_TMR5_Initialize
 23425 ;;		_TMR6_Initialize
 23426 ;;		_UART1_Initialize
 23427 ;;		_UART2_Initialize
 23428 ;; This function is called by:
 23429 ;;		_main
 23430 ;; This function uses a reentrant model
 23431 ;;
 23432                           
 23433                           	psect	text95
 23434  018994                     __ptext95:
 23435                           	opt callstack 0
 23436  018994                     _SYSTEM_Initialize:
 23437                           	opt callstack 21
 23438                           
 23439                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23440                           
 23441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23442                           ;incstack = 0
 23443  018994  ECA1  F0C2         	call	_INTERRUPT_Initialize	;wreg free
 23444                           
 23445                           ; BSR set to: 57
 23446                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23447  018998  ECDE  F0CA         	call	_PMD_Initialize	;wreg free
 23448                           
 23449                           ; BSR set to: 57
 23450                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23451  01899C  EC6A  F0C0         	call	_PIN_MANAGER_Initialize	;wreg free
 23452                           
 23453                           ; BSR set to: 58
 23454                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23455  0189A0  ECD3  F0CA         	call	_OSCILLATOR_Initialize	;wreg free
 23456                           
 23457                           ; BSR set to: 57
 23458                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23459  0189A4  EC45  F0CB         	call	_FVR_Initialize	;wreg free
 23460                           
 23461                           ; BSR set to: 62
 23462                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23463  0189A8  EC37  F0C2         	call	_ADCC_Initialize	;wreg free
 23464                           
 23465                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23466  0189AC  ECC8  F0CA         	call	_PWM8_Initialize	;wreg free
 23467                           
 23468                           ; BSR set to: 63
 23469                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23470  0189B0  ECB1  F0CA         	call	_TMR2_Initialize	;wreg free
 23471                           
 23472                           ; BSR set to: 57
 23473                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23474  0189B4  EC22  F0C7         	call	_EXT_INT_Initialize	;wreg free
 23475                           
 23476                           ; BSR set to: 57
 23477                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23478  0189B8  ECDE  F0C7         	call	_TMR6_Initialize	;wreg free
 23479                           
 23480                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23481  0189BC  EC7C  F0C5         	call	_TMR3_Initialize	;wreg free
 23482                           
 23483                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23484  0189C0  EC59  F0C5         	call	_TMR5_Initialize	;wreg free
 23485                           
 23486                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23487  0189C4  EC07  F0C3         	call	_UART1_Initialize	;wreg free
 23488                           
 23489                           ; BSR set to: 57
 23490                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23491  0189C8  EC9B  F0C3         	call	_UART2_Initialize	;wreg free
 23492                           
 23493                           ; BSR set to: 57
 23494                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23495  0189CC  ECBD  F0CA         	call	_SPI1_Initialize	;wreg free
 23496                           
 23497                           ; BSR set to: 61
 23498                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23499  0189D0  ECF7  F0C3         	call	_DMA2_Initialize	;wreg free
 23500                           
 23501                           ; BSR set to: 59
 23502                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23503  0189D4  EC02  F0C2         	call	_DMA1_Initialize	;wreg free
 23504                           
 23505                           ; BSR set to: 59
 23506                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23507  0189D8  EC1F  F0CB         	call	_CLKREF_Initialize	;wreg free
 23508                           
 23509                           ; BSR set to: 60
 23510                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23511  0189DC  0012               	return		;funcret
 23512  0189DE                     __end_of_SYSTEM_Initialize:
 23513                           	opt callstack 0
 23514                           
 23515 ;; *************** function _UART2_Initialize *****************
 23516 ;; Defined at:
 23517 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23518 ;; Parameters:    Size  Location     Type
 23519 ;;		None
 23520 ;; Auto vars:     Size  Location     Type
 23521 ;;		None
 23522 ;; Return value:  Size  Location     Type
 23523 ;;                  1  [STACK] void 
 23524 ;; Registers used:
 23525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23526 ;; Tracked objects:
 23527 ;;		On entry : 3F/39
 23528 ;;		On exit  : 3F/39
 23529 ;;		Unchanged: 0/0
 23530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23535 ;;Total ram usage:        0 bytes
 23536 ;; Hardware stack levels used:    1
 23537 ;; Hardware stack levels required when called:    8
 23538 ;; This function calls:
 23539 ;;		_UART2_SetRxInterruptHandler
 23540 ;;		_UART2_SetTxInterruptHandler
 23541 ;; This function is called by:
 23542 ;;		_SYSTEM_Initialize
 23543 ;; This function uses a reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text96
 23547  018736                     __ptext96:
 23548                           	opt callstack 0
 23549  018736                     _UART2_Initialize:
 23550                           	opt callstack 21
 23551                           
 23552                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23553                           
 23554                           ; BSR set to: 60
 23555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23556                           ;incstack = 0
 23557  018736  0139               	movlb	57	; () banked
 23558  018738  9596               	bcf	150,2,b	;volatile
 23559                           
 23560                           ; BSR set to: 57
 23561                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23562  01873A  0EDA               	movlw	low _UART2_Receive_ISR
 23563  01873C  6EE6               	movwf	postinc1,c
 23564  01873E  0E94               	movlw	high _UART2_Receive_ISR
 23565  018740  6EE6               	movwf	postinc1,c
 23566  018742  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23567  018744  6EE6               	movwf	postinc1,c
 23568  018746  EC6B  F0C8         	call	_UART2_SetRxInterruptHandler	;wreg free
 23569                           
 23570                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23571  01874A  0139               	movlb	57	; () banked
 23572  01874C  9796               	bcf	150,3,b	;volatile
 23573                           
 23574                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23575  01874E  0E90               	movlw	low _UART2_Transmit_ISR
 23576  018750  6EE6               	movwf	postinc1,c
 23577  018752  0E8F               	movlw	high _UART2_Transmit_ISR
 23578  018754  6EE6               	movwf	postinc1,c
 23579  018756  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23580  018758  6EE6               	movwf	postinc1,c
 23581  01875A  EC57  F0C8         	call	_UART2_SetTxInterruptHandler	;wreg free
 23582                           
 23583                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23584  01875E  013D               	movlb	61	; () banked
 23585  018760  6BD4               	clrf	212,b	;volatile
 23586                           
 23587                           ; BSR set to: 61
 23588                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23589  018762  6BD6               	clrf	214,b	;volatile
 23590                           
 23591                           ; BSR set to: 61
 23592                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23593  018764  6BD8               	clrf	216,b	;volatile
 23594                           
 23595                           ; BSR set to: 61
 23596                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23597  018766  0EB0               	movlw	176
 23598  018768  6FDA               	movwf	218,b	;volatile
 23599                           
 23600                           ; BSR set to: 61
 23601                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23602  01876A  0E80               	movlw	128
 23603  01876C  6FDB               	movwf	219,b	;volatile
 23604                           
 23605                           ; BSR set to: 61
 23606                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23607  01876E  6BDC               	clrf	220,b	;volatile
 23608                           
 23609                           ; BSR set to: 61
 23610                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23611  018770  0E82               	movlw	130
 23612  018772  6FDD               	movwf	221,b	;volatile
 23613                           
 23614                           ; BSR set to: 61
 23615                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23616  018774  0E06               	movlw	6
 23617  018776  6FDE               	movwf	222,b	;volatile
 23618                           
 23619                           ; BSR set to: 61
 23620                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23621  018778  6BDF               	clrf	223,b	;volatile
 23622                           
 23623                           ; BSR set to: 61
 23624                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23625  01877A  6BE0               	clrf	224,b	;volatile
 23626                           
 23627                           ; BSR set to: 61
 23628                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23629  01877C  6BE1               	clrf	225,b	;volatile
 23630                           
 23631                           ; BSR set to: 61
 23632                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23633  01877E  6BE2               	clrf	226,b	;volatile
 23634                           
 23635                           ; BSR set to: 61
 23636                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23637  018780  6A1E               	clrf	_uart2TxHead^0,c	;volatile
 23638                           
 23639                           ; BSR set to: 61
 23640                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23641  018782  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 23642                           
 23643                           ; BSR set to: 61
 23644                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23645  018784  0E40               	movlw	64
 23646  018786  6E1C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23647                           
 23648                           ; BSR set to: 61
 23649                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23650  018788  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 23651                           
 23652                           ; BSR set to: 61
 23653                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23654  01878A  6A1A               	clrf	_uart2RxTail^0,c	;volatile
 23655                           
 23656                           ; BSR set to: 61
 23657                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23658  01878C  6A19               	clrf	_uart2RxCount^0,c	;volatile
 23659                           
 23660                           ; BSR set to: 61
 23661                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23662  01878E  0139               	movlb	57	; () banked
 23663  018790  8596               	bsf	150,2,b	;volatile
 23664                           
 23665                           ; BSR set to: 57
 23666                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23667  018792  0012               	return		;funcret
 23668  018794                     __end_of_UART2_Initialize:
 23669                           	opt callstack 0
 23670                           
 23671 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23672 ;; Defined at:
 23673 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23674 ;; Parameters:    Size  Location     Type
 23675 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23676 ;;		 -> UART2_Transmit_ISR(1), 
 23677 ;; Auto vars:     Size  Location     Type
 23678 ;;		None
 23679 ;; Return value:  Size  Location     Type
 23680 ;;                  1  [STACK] void 
 23681 ;; Registers used:
 23682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23683 ;; Tracked objects:
 23684 ;;		On entry : 3F/39
 23685 ;;		On exit  : 0/0
 23686 ;;		Unchanged: 0/0
 23687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23692 ;;Total ram usage:        0 bytes
 23693 ;; Hardware stack levels used:    1
 23694 ;; Hardware stack levels required when called:    7
 23695 ;; This function calls:
 23696 ;;		Nothing
 23697 ;; This function is called by:
 23698 ;;		_UART2_Initialize
 23699 ;; This function uses a reentrant model
 23700 ;;
 23701                           
 23702                           	psect	text97
 23703  0190AE                     __ptext97:
 23704                           	opt callstack 0
 23705  0190AE                     _UART2_SetTxInterruptHandler:
 23706                           	opt callstack 21
 23707                           
 23708                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23709                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23710                           
 23711                           ; BSR set to: 57
 23712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23713                           ;incstack = 0
 23714  0190AE  50E1               	movf	fsr1l,w,c
 23715  0190B0  0FFD               	addlw	-3
 23716  0190B2  6ED9               	movwf	fsr2l,c
 23717  0190B4  50E2               	movf	fsr1h,w,c
 23718  0190B6  6EDA               	movwf	fsr2h,c
 23719  0190B8  0EFF               	movlw	255
 23720  0190BA  22DA               	addwfc	fsr2h,f,c
 23721  0190BC  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 23722  0190C2  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 23723  0190C8  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 23724                           
 23725                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23726  0190CE  52E5               	movf	postdec1,f,c
 23727  0190D0  52E5               	movf	postdec1,f,c
 23728  0190D2  52E5               	movf	postdec1,f,c
 23729  0190D4  0012               	return		;funcret
 23730  0190D6                     __end_of_UART2_SetTxInterruptHandler:
 23731                           	opt callstack 0
 23732                           
 23733 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23734 ;; Defined at:
 23735 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23736 ;; Parameters:    Size  Location     Type
 23737 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23738 ;;		 -> UART2_Receive_ISR(1), 
 23739 ;; Auto vars:     Size  Location     Type
 23740 ;;		None
 23741 ;; Return value:  Size  Location     Type
 23742 ;;                  1  [STACK] void 
 23743 ;; Registers used:
 23744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23745 ;; Tracked objects:
 23746 ;;		On entry : 3F/39
 23747 ;;		On exit  : 0/0
 23748 ;;		Unchanged: 0/0
 23749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23754 ;;Total ram usage:        0 bytes
 23755 ;; Hardware stack levels used:    1
 23756 ;; Hardware stack levels required when called:    7
 23757 ;; This function calls:
 23758 ;;		Nothing
 23759 ;; This function is called by:
 23760 ;;		_UART2_Initialize
 23761 ;; This function uses a reentrant model
 23762 ;;
 23763                           
 23764                           	psect	text98
 23765  0190D6                     __ptext98:
 23766                           	opt callstack 0
 23767  0190D6                     _UART2_SetRxInterruptHandler:
 23768                           	opt callstack 21
 23769                           
 23770                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23771                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23772                           
 23773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23774                           ;incstack = 0
 23775  0190D6  50E1               	movf	fsr1l,w,c
 23776  0190D8  0FFD               	addlw	-3
 23777  0190DA  6ED9               	movwf	fsr2l,c
 23778  0190DC  50E2               	movf	fsr1h,w,c
 23779  0190DE  6EDA               	movwf	fsr2h,c
 23780  0190E0  0EFF               	movlw	255
 23781  0190E2  22DA               	addwfc	fsr2h,f,c
 23782  0190E4  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 23783  0190EA  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 23784  0190F0  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 23785                           
 23786                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23787  0190F6  52E5               	movf	postdec1,f,c
 23788  0190F8  52E5               	movf	postdec1,f,c
 23789  0190FA  52E5               	movf	postdec1,f,c
 23790  0190FC  0012               	return		;funcret
 23791  0190FE                     __end_of_UART2_SetRxInterruptHandler:
 23792                           	opt callstack 0
 23793                           
 23794 ;; *************** function _UART1_Initialize *****************
 23795 ;; Defined at:
 23796 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23797 ;; Parameters:    Size  Location     Type
 23798 ;;		None
 23799 ;; Auto vars:     Size  Location     Type
 23800 ;;		None
 23801 ;; Return value:  Size  Location     Type
 23802 ;;                  1  [STACK] void 
 23803 ;; Registers used:
 23804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23805 ;; Tracked objects:
 23806 ;;		On entry : 0/39
 23807 ;;		On exit  : 3F/39
 23808 ;;		Unchanged: 0/0
 23809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23814 ;;Total ram usage:        0 bytes
 23815 ;; Hardware stack levels used:    1
 23816 ;; Hardware stack levels required when called:    8
 23817 ;; This function calls:
 23818 ;;		_UART1_SetRxInterruptHandler
 23819 ;;		_UART1_SetTxInterruptHandler
 23820 ;; This function is called by:
 23821 ;;		_SYSTEM_Initialize
 23822 ;; This function uses a reentrant model
 23823 ;;
 23824                           
 23825                           	psect	text99
 23826  01860E                     __ptext99:
 23827                           	opt callstack 0
 23828  01860E                     _UART1_Initialize:
 23829                           	opt callstack 21
 23830                           
 23831                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23832                           
 23833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23834                           ;incstack = 0
 23835  01860E  0139               	movlb	57	; () banked
 23836  018610  9793               	bcf	147,3,b	;volatile
 23837                           
 23838                           ; BSR set to: 57
 23839                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23840  018612  0EBC               	movlw	low _UART1_Receive_ISR
 23841  018614  6EE6               	movwf	postinc1,c
 23842  018616  0E94               	movlw	high _UART1_Receive_ISR
 23843  018618  6EE6               	movwf	postinc1,c
 23844  01861A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23845  01861C  6EE6               	movwf	postinc1,c
 23846  01861E  EC93  F0C8         	call	_UART1_SetRxInterruptHandler	;wreg free
 23847                           
 23848                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23849  018622  0139               	movlb	57	; () banked
 23850  018624  9993               	bcf	147,4,b	;volatile
 23851                           
 23852                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23853  018626  0E64               	movlw	low _UART1_Transmit_ISR
 23854  018628  6EE6               	movwf	postinc1,c
 23855  01862A  0E8F               	movlw	high _UART1_Transmit_ISR
 23856  01862C  6EE6               	movwf	postinc1,c
 23857  01862E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23858  018630  6EE6               	movwf	postinc1,c
 23859  018632  EC7F  F0C8         	call	_UART1_SetTxInterruptHandler	;wreg free
 23860                           
 23861                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23862  018636  013D               	movlb	61	; () banked
 23863  018638  6BEC               	clrf	236,b	;volatile
 23864                           
 23865                           ; BSR set to: 61
 23866                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23867  01863A  6BED               	clrf	237,b	;volatile
 23868                           
 23869                           ; BSR set to: 61
 23870                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23871  01863C  6BEE               	clrf	238,b	;volatile
 23872                           
 23873                           ; BSR set to: 61
 23874                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23875  01863E  6BEF               	clrf	239,b	;volatile
 23876                           
 23877                           ; BSR set to: 61
 23878                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23879  018640  6BF0               	clrf	240,b	;volatile
 23880                           
 23881                           ; BSR set to: 61
 23882                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23883  018642  6BF1               	clrf	241,b	;volatile
 23884                           
 23885                           ; BSR set to: 61
 23886                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23887  018644  0EB0               	movlw	176
 23888  018646  6FF2               	movwf	242,b	;volatile
 23889                           
 23890                           ; BSR set to: 61
 23891                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23892  018648  0E80               	movlw	128
 23893  01864A  6FF3               	movwf	243,b	;volatile
 23894                           
 23895                           ; BSR set to: 61
 23896                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23897  01864C  6BF4               	clrf	244,b	;volatile
 23898                           
 23899                           ; BSR set to: 61
 23900                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23901  01864E  0E82               	movlw	130
 23902  018650  6FF5               	movwf	245,b	;volatile
 23903                           
 23904                           ; BSR set to: 61
 23905                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23906  018652  0E06               	movlw	6
 23907  018654  6FF6               	movwf	246,b	;volatile
 23908                           
 23909                           ; BSR set to: 61
 23910                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23911  018656  6BF7               	clrf	247,b	;volatile
 23912                           
 23913                           ; BSR set to: 61
 23914                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23915  018658  6BF8               	clrf	248,b	;volatile
 23916                           
 23917                           ; BSR set to: 61
 23918                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23919  01865A  6BF9               	clrf	249,b	;volatile
 23920                           
 23921                           ; BSR set to: 61
 23922                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23923  01865C  6BFA               	clrf	250,b	;volatile
 23924                           
 23925                           ; BSR set to: 61
 23926                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23927  01865E  6A24               	clrf	_uart1TxHead^0,c	;volatile
 23928                           
 23929                           ; BSR set to: 61
 23930                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23931  018660  6A23               	clrf	_uart1TxTail^0,c	;volatile
 23932                           
 23933                           ; BSR set to: 61
 23934                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23935  018662  0E40               	movlw	64
 23936  018664  6E22               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23937                           
 23938                           ; BSR set to: 61
 23939                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23940  018666  6A21               	clrf	_uart1RxHead^0,c	;volatile
 23941                           
 23942                           ; BSR set to: 61
 23943                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23944  018668  6A20               	clrf	_uart1RxTail^0,c	;volatile
 23945                           
 23946                           ; BSR set to: 61
 23947                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23948  01866A  6A1F               	clrf	_uart1RxCount^0,c	;volatile
 23949                           
 23950                           ; BSR set to: 61
 23951                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23952  01866C  0139               	movlb	57	; () banked
 23953  01866E  8793               	bsf	147,3,b	;volatile
 23954                           
 23955                           ; BSR set to: 57
 23956                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23957  018670  0012               	return		;funcret
 23958  018672                     __end_of_UART1_Initialize:
 23959                           	opt callstack 0
 23960                           
 23961 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23962 ;; Defined at:
 23963 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23964 ;; Parameters:    Size  Location     Type
 23965 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23966 ;;		 -> UART1_Transmit_ISR(1), 
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  1  [STACK] void 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23973 ;; Tracked objects:
 23974 ;;		On entry : 3F/39
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;Total ram usage:        0 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:    7
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_UART1_Initialize
 23989 ;; This function uses a reentrant model
 23990 ;;
 23991                           
 23992                           	psect	text100
 23993  0190FE                     __ptext100:
 23994                           	opt callstack 0
 23995  0190FE                     _UART1_SetTxInterruptHandler:
 23996                           	opt callstack 21
 23997                           
 23998                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23999                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24000                           
 24001                           ; BSR set to: 57
 24002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24003                           ;incstack = 0
 24004  0190FE  50E1               	movf	fsr1l,w,c
 24005  019100  0FFD               	addlw	-3
 24006  019102  6ED9               	movwf	fsr2l,c
 24007  019104  50E2               	movf	fsr1h,w,c
 24008  019106  6EDA               	movwf	fsr2h,c
 24009  019108  0EFF               	movlw	255
 24010  01910A  22DA               	addwfc	fsr2h,f,c
 24011  01910C  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 24012  019112  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 24013  019118  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 24014                           
 24015                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24016  01911E  52E5               	movf	postdec1,f,c
 24017  019120  52E5               	movf	postdec1,f,c
 24018  019122  52E5               	movf	postdec1,f,c
 24019  019124  0012               	return		;funcret
 24020  019126                     __end_of_UART1_SetTxInterruptHandler:
 24021                           	opt callstack 0
 24022                           
 24023 ;; *************** function _UART1_SetRxInterruptHandler *****************
 24024 ;; Defined at:
 24025 ;;		line 241 in file "mcc_generated_files/uart1.c"
 24026 ;; Parameters:    Size  Location     Type
 24027 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24028 ;;		 -> UART1_Receive_ISR(1), 
 24029 ;; Auto vars:     Size  Location     Type
 24030 ;;		None
 24031 ;; Return value:  Size  Location     Type
 24032 ;;                  1  [STACK] void 
 24033 ;; Registers used:
 24034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24035 ;; Tracked objects:
 24036 ;;		On entry : 3F/39
 24037 ;;		On exit  : 0/0
 24038 ;;		Unchanged: 0/0
 24039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24044 ;;Total ram usage:        0 bytes
 24045 ;; Hardware stack levels used:    1
 24046 ;; Hardware stack levels required when called:    7
 24047 ;; This function calls:
 24048 ;;		Nothing
 24049 ;; This function is called by:
 24050 ;;		_UART1_Initialize
 24051 ;; This function uses a reentrant model
 24052 ;;
 24053                           
 24054                           	psect	text101
 24055  019126                     __ptext101:
 24056                           	opt callstack 0
 24057  019126                     _UART1_SetRxInterruptHandler:
 24058                           	opt callstack 21
 24059                           
 24060                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24061                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24062                           
 24063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24064                           ;incstack = 0
 24065  019126  50E1               	movf	fsr1l,w,c
 24066  019128  0FFD               	addlw	-3
 24067  01912A  6ED9               	movwf	fsr2l,c
 24068  01912C  50E2               	movf	fsr1h,w,c
 24069  01912E  6EDA               	movwf	fsr2h,c
 24070  019130  0EFF               	movlw	255
 24071  019132  22DA               	addwfc	fsr2h,f,c
 24072  019134  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24073  01913A  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24074  019140  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24075                           
 24076                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24077  019146  52E5               	movf	postdec1,f,c
 24078  019148  52E5               	movf	postdec1,f,c
 24079  01914A  52E5               	movf	postdec1,f,c
 24080  01914C  0012               	return		;funcret
 24081  01914E                     __end_of_UART1_SetRxInterruptHandler:
 24082                           	opt callstack 0
 24083                           
 24084 ;; *************** function _TMR6_Initialize *****************
 24085 ;; Defined at:
 24086 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24087 ;; Parameters:    Size  Location     Type
 24088 ;;		None
 24089 ;; Auto vars:     Size  Location     Type
 24090 ;;		None
 24091 ;; Return value:  Size  Location     Type
 24092 ;;                  1  [STACK] void 
 24093 ;; Registers used:
 24094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24095 ;; Tracked objects:
 24096 ;;		On entry : 3F/39
 24097 ;;		On exit  : 0/0
 24098 ;;		Unchanged: 0/0
 24099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24104 ;;Total ram usage:        0 bytes
 24105 ;; Hardware stack levels used:    1
 24106 ;; Hardware stack levels required when called:    8
 24107 ;; This function calls:
 24108 ;;		_TMR6_SetInterruptHandler
 24109 ;; This function is called by:
 24110 ;;		_SYSTEM_Initialize
 24111 ;; This function uses a reentrant model
 24112 ;;
 24113                           
 24114                           	psect	text102
 24115  018FBC                     __ptext102:
 24116                           	opt callstack 0
 24117  018FBC                     _TMR6_Initialize:
 24118                           	opt callstack 21
 24119                           
 24120                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24121                           
 24122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24123                           ;incstack = 0
 24124  018FBC  0E01               	movlw	1
 24125  018FBE  6E96               	movwf	150,c	;volatile
 24126                           
 24127                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24128  018FC0  6A95               	clrf	149,c	;volatile
 24129                           
 24130                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24131  018FC2  6A97               	clrf	151,c	;volatile
 24132                           
 24133                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24134  018FC4  0E7C               	movlw	124
 24135  018FC6  6E93               	movwf	147,c	;volatile
 24136                           
 24137                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24138  018FC8  6A92               	clrf	146,c	;volatile
 24139                           
 24140                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24141  018FCA  0139               	movlb	57	; () banked
 24142  018FCC  91A9               	bcf	169,0,b	;volatile
 24143                           
 24144                           ; BSR set to: 57
 24145                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24146  018FCE  8199               	bsf	153,0,b	;volatile
 24147                           
 24148                           ; BSR set to: 57
 24149                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24150  018FD0  0E46               	movlw	low _TMR6_DefaultInterruptHandler
 24151  018FD2  6EE6               	movwf	postinc1,c
 24152  018FD4  0E89               	movlw	high _TMR6_DefaultInterruptHandler
 24153  018FD6  6EE6               	movwf	postinc1,c
 24154  018FD8  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24155  018FDA  6EE6               	movwf	postinc1,c
 24156  018FDC  ECA7  F0C8         	call	_TMR6_SetInterruptHandler	;wreg free
 24157                           
 24158                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24159  018FE0  0EE0               	movlw	224
 24160  018FE2  6E94               	movwf	148,c	;volatile
 24161                           
 24162                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24163  018FE4  0012               	return		;funcret
 24164  018FE6                     __end_of_TMR6_Initialize:
 24165                           	opt callstack 0
 24166                           
 24167 ;; *************** function _TMR6_SetInterruptHandler *****************
 24168 ;; Defined at:
 24169 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24170 ;; Parameters:    Size  Location     Type
 24171 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24172 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24173 ;; Auto vars:     Size  Location     Type
 24174 ;;		None
 24175 ;; Return value:  Size  Location     Type
 24176 ;;                  1  [STACK] void 
 24177 ;; Registers used:
 24178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24179 ;; Tracked objects:
 24180 ;;		On entry : 3F/39
 24181 ;;		On exit  : 0/0
 24182 ;;		Unchanged: 0/0
 24183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24188 ;;Total ram usage:        0 bytes
 24189 ;; Hardware stack levels used:    1
 24190 ;; Hardware stack levels required when called:    7
 24191 ;; This function calls:
 24192 ;;		Nothing
 24193 ;; This function is called by:
 24194 ;;		_TMR6_Initialize
 24195 ;; This function uses a reentrant model
 24196 ;;
 24197                           
 24198                           	psect	text103
 24199  01914E                     __ptext103:
 24200                           	opt callstack 0
 24201  01914E                     _TMR6_SetInterruptHandler:
 24202                           	opt callstack 21
 24203                           
 24204                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24205                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24206                           
 24207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24208                           ;incstack = 0
 24209  01914E  50E1               	movf	fsr1l,w,c
 24210  019150  0FFD               	addlw	-3
 24211  019152  6ED9               	movwf	fsr2l,c
 24212  019154  50E2               	movf	fsr1h,w,c
 24213  019156  6EDA               	movwf	fsr2h,c
 24214  019158  0EFF               	movlw	255
 24215  01915A  22DA               	addwfc	fsr2h,f,c
 24216  01915C  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24217  019162  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24218  019168  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24219                           
 24220                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24221  01916E  52E5               	movf	postdec1,f,c
 24222  019170  52E5               	movf	postdec1,f,c
 24223  019172  52E5               	movf	postdec1,f,c
 24224  019174  0012               	return		;funcret
 24225  019176                     __end_of_TMR6_SetInterruptHandler:
 24226                           	opt callstack 0
 24227                           
 24228 ;; *************** function _TMR5_Initialize *****************
 24229 ;; Defined at:
 24230 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24231 ;; Parameters:    Size  Location     Type
 24232 ;;		None
 24233 ;; Auto vars:     Size  Location     Type
 24234 ;;		None
 24235 ;; Return value:  Size  Location     Type
 24236 ;;                  1  [STACK] void 
 24237 ;; Registers used:
 24238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24239 ;; Tracked objects:
 24240 ;;		On entry : 0/39
 24241 ;;		On exit  : 0/0
 24242 ;;		Unchanged: 0/0
 24243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24248 ;;Total ram usage:        0 bytes
 24249 ;; Hardware stack levels used:    1
 24250 ;; Hardware stack levels required when called:    8
 24251 ;; This function calls:
 24252 ;;		_TMR5_SetInterruptHandler
 24253 ;; This function is called by:
 24254 ;;		_SYSTEM_Initialize
 24255 ;; This function uses a reentrant model
 24256 ;;
 24257                           
 24258                           	psect	text104
 24259  018AB2                     __ptext104:
 24260                           	opt callstack 0
 24261  018AB2                     _TMR5_Initialize:
 24262                           	opt callstack 21
 24263                           
 24264                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24265                           
 24266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24267                           ;incstack = 0
 24268  018AB2  6A9B               	clrf	155,c	;volatile
 24269                           
 24270                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24271  018AB4  6A9C               	clrf	156,c	;volatile
 24272                           
 24273                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24274  018AB6  0E01               	movlw	1
 24275  018AB8  6E9D               	movwf	157,c	;volatile
 24276                           
 24277                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24278  018ABA  0E63               	movlw	99
 24279  018ABC  6E99               	movwf	153,c	;volatile
 24280                           
 24281                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24282  018ABE  0EC0               	movlw	192
 24283  018AC0  6E98               	movwf	152,c	;volatile
 24284                           
 24285                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24286  018AC2  5098               	movf	152,w,c	;volatile
 24287  018AC4  006F FE64  F025    	movff	16281,btemp	;volatile
 24288  018ACA  6A26               	clrf	(btemp+1)^0,c
 24289  018ACC  0060  F094  F026   	movff	btemp,btemp+1
 24290  018AD2  6A25               	clrf	btemp^0,c
 24291  018AD4  1025               	iorwf	btemp^0,w,c
 24292  018AD6  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 24293  018AD8  5026               	movf	(btemp+1)^0,w,c
 24294  018ADA  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24295                           
 24296                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24297  018ADC  0139               	movlb	57	; () banked
 24298  018ADE  9DA8               	bcf	168,6,b	;volatile
 24299                           
 24300                           ; BSR set to: 57
 24301                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24302  018AE0  8D98               	bsf	152,6,b	;volatile
 24303                           
 24304                           ; BSR set to: 57
 24305                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24306  018AE2  0E66               	movlw	low _TMR5_DefaultInterruptHandler
 24307  018AE4  6EE6               	movwf	postinc1,c
 24308  018AE6  0E92               	movlw	high _TMR5_DefaultInterruptHandler
 24309  018AE8  6EE6               	movwf	postinc1,c
 24310  018AEA  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24311  018AEC  6EE6               	movwf	postinc1,c
 24312  018AEE  ECBB  F0C8         	call	_TMR5_SetInterruptHandler	;wreg free
 24313                           
 24314                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24315  018AF2  0E31               	movlw	49
 24316  018AF4  6E9A               	movwf	154,c	;volatile
 24317                           
 24318                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24319  018AF6  0012               	return		;funcret
 24320  018AF8                     __end_of_TMR5_Initialize:
 24321                           	opt callstack 0
 24322                           
 24323 ;; *************** function _TMR5_SetInterruptHandler *****************
 24324 ;; Defined at:
 24325 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24326 ;; Parameters:    Size  Location     Type
 24327 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24328 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24329 ;; Auto vars:     Size  Location     Type
 24330 ;;		None
 24331 ;; Return value:  Size  Location     Type
 24332 ;;                  1  [STACK] void 
 24333 ;; Registers used:
 24334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24335 ;; Tracked objects:
 24336 ;;		On entry : 3F/39
 24337 ;;		On exit  : 0/0
 24338 ;;		Unchanged: 0/0
 24339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24344 ;;Total ram usage:        0 bytes
 24345 ;; Hardware stack levels used:    1
 24346 ;; Hardware stack levels required when called:    7
 24347 ;; This function calls:
 24348 ;;		Nothing
 24349 ;; This function is called by:
 24350 ;;		_TMR5_Initialize
 24351 ;; This function uses a reentrant model
 24352 ;;
 24353                           
 24354                           	psect	text105
 24355  019176                     __ptext105:
 24356                           	opt callstack 0
 24357  019176                     _TMR5_SetInterruptHandler:
 24358                           	opt callstack 21
 24359                           
 24360                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24361                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24362                           
 24363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24364                           ;incstack = 0
 24365  019176  50E1               	movf	fsr1l,w,c
 24366  019178  0FFD               	addlw	-3
 24367  01917A  6ED9               	movwf	fsr2l,c
 24368  01917C  50E2               	movf	fsr1h,w,c
 24369  01917E  6EDA               	movwf	fsr2h,c
 24370  019180  0EFF               	movlw	255
 24371  019182  22DA               	addwfc	fsr2h,f,c
 24372  019184  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24373  01918A  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24374  019190  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24375                           
 24376                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24377  019196  52E5               	movf	postdec1,f,c
 24378  019198  52E5               	movf	postdec1,f,c
 24379  01919A  52E5               	movf	postdec1,f,c
 24380  01919C  0012               	return		;funcret
 24381  01919E                     __end_of_TMR5_SetInterruptHandler:
 24382                           	opt callstack 0
 24383                           
 24384 ;; *************** function _TMR3_Initialize *****************
 24385 ;; Defined at:
 24386 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;		None
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;		None
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  1  [STACK] void 
 24393 ;; Registers used:
 24394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24395 ;; Tracked objects:
 24396 ;;		On entry : 0/39
 24397 ;;		On exit  : 0/0
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24404 ;;Total ram usage:        0 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; Hardware stack levels required when called:    8
 24407 ;; This function calls:
 24408 ;;		_TMR3_SetInterruptHandler
 24409 ;; This function is called by:
 24410 ;;		_SYSTEM_Initialize
 24411 ;; This function uses a reentrant model
 24412 ;;
 24413                           
 24414                           	psect	text106
 24415  018AF8                     __ptext106:
 24416                           	opt callstack 0
 24417  018AF8                     _TMR3_Initialize:
 24418                           	opt callstack 21
 24419                           
 24420                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24421                           
 24422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24423                           ;incstack = 0
 24424  018AF8  6AA7               	clrf	167,c	;volatile
 24425                           
 24426                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24427  018AFA  6AA8               	clrf	168,c	;volatile
 24428                           
 24429                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24430  018AFC  0E01               	movlw	1
 24431  018AFE  6EA9               	movwf	169,c	;volatile
 24432                           
 24433                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24434  018B00  0E3C               	movlw	60
 24435  018B02  6EA5               	movwf	165,c	;volatile
 24436                           
 24437                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24438  018B04  0EB0               	movlw	176
 24439  018B06  6EA4               	movwf	164,c	;volatile
 24440                           
 24441                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24442  018B08  50A4               	movf	164,w,c	;volatile
 24443  018B0A  006F FE94  F025    	movff	16293,btemp	;volatile
 24444  018B10  6A26               	clrf	(btemp+1)^0,c
 24445  018B12  0060  F094  F026   	movff	btemp,btemp+1
 24446  018B18  6A25               	clrf	btemp^0,c
 24447  018B1A  1025               	iorwf	btemp^0,w,c
 24448  018B1C  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 24449  018B1E  5026               	movf	(btemp+1)^0,w,c
 24450  018B20  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24451                           
 24452                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24453  018B22  0139               	movlb	57	; () banked
 24454  018B24  9DA6               	bcf	166,6,b	;volatile
 24455                           
 24456                           ; BSR set to: 57
 24457                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24458  018B26  8D96               	bsf	150,6,b	;volatile
 24459                           
 24460                           ; BSR set to: 57
 24461                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24462  018B28  0EB4               	movlw	low _TMR3_DefaultInterruptHandler
 24463  018B2A  6EE6               	movwf	postinc1,c
 24464  018B2C  0E96               	movlw	high _TMR3_DefaultInterruptHandler
 24465  018B2E  6EE6               	movwf	postinc1,c
 24466  018B30  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24467  018B32  6EE6               	movwf	postinc1,c
 24468  018B34  ECCF  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
 24469                           
 24470                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24471  018B38  0E31               	movlw	49
 24472  018B3A  6EA6               	movwf	166,c	;volatile
 24473                           
 24474                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24475  018B3C  0012               	return		;funcret
 24476  018B3E                     __end_of_TMR3_Initialize:
 24477                           	opt callstack 0
 24478                           
 24479 ;; *************** function _TMR3_SetInterruptHandler *****************
 24480 ;; Defined at:
 24481 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24482 ;; Parameters:    Size  Location     Type
 24483 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24484 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24485 ;; Auto vars:     Size  Location     Type
 24486 ;;		None
 24487 ;; Return value:  Size  Location     Type
 24488 ;;                  1  [STACK] void 
 24489 ;; Registers used:
 24490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24491 ;; Tracked objects:
 24492 ;;		On entry : 0/1
 24493 ;;		On exit  : 0/0
 24494 ;;		Unchanged: 0/0
 24495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24500 ;;Total ram usage:        0 bytes
 24501 ;; Hardware stack levels used:    1
 24502 ;; Hardware stack levels required when called:    7
 24503 ;; This function calls:
 24504 ;;		Nothing
 24505 ;; This function is called by:
 24506 ;;		_TMR3_Initialize
 24507 ;;		_init_bsoc
 24508 ;; This function uses a reentrant model
 24509 ;;
 24510                           
 24511                           	psect	text107
 24512  01919E                     __ptext107:
 24513                           	opt callstack 0
 24514  01919E                     _TMR3_SetInterruptHandler:
 24515                           	opt callstack 22
 24516                           
 24517                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24518                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24519                           
 24520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24521                           ;incstack = 0
 24522  01919E  50E1               	movf	fsr1l,w,c
 24523  0191A0  0FFD               	addlw	-3
 24524  0191A2  6ED9               	movwf	fsr2l,c
 24525  0191A4  50E2               	movf	fsr1h,w,c
 24526  0191A6  6EDA               	movwf	fsr2h,c
 24527  0191A8  0EFF               	movlw	255
 24528  0191AA  22DA               	addwfc	fsr2h,f,c
 24529  0191AC  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24530  0191B2  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24531  0191B8  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24532                           
 24533                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24534  0191BE  52E5               	movf	postdec1,f,c
 24535  0191C0  52E5               	movf	postdec1,f,c
 24536  0191C2  52E5               	movf	postdec1,f,c
 24537  0191C4  0012               	return		;funcret
 24538  0191C6                     __end_of_TMR3_SetInterruptHandler:
 24539                           	opt callstack 0
 24540                           
 24541 ;; *************** function _TMR2_Initialize *****************
 24542 ;; Defined at:
 24543 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24544 ;; Parameters:    Size  Location     Type
 24545 ;;		None
 24546 ;; Auto vars:     Size  Location     Type
 24547 ;;		None
 24548 ;; Return value:  Size  Location     Type
 24549 ;;                  1  [STACK] void 
 24550 ;; Registers used:
 24551 ;;		wreg, status,2
 24552 ;; Tracked objects:
 24553 ;;		On entry : 3F/3F
 24554 ;;		On exit  : 3F/39
 24555 ;;		Unchanged: 0/0
 24556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24561 ;;Total ram usage:        0 bytes
 24562 ;; Hardware stack levels used:    1
 24563 ;; Hardware stack levels required when called:    7
 24564 ;; This function calls:
 24565 ;;		Nothing
 24566 ;; This function is called by:
 24567 ;;		_SYSTEM_Initialize
 24568 ;; This function uses a reentrant model
 24569 ;;
 24570                           
 24571                           	psect	text108
 24572  019562                     __ptext108:
 24573                           	opt callstack 0
 24574  019562                     _TMR2_Initialize:
 24575                           	opt callstack 22
 24576                           
 24577                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24578                           
 24579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24580                           ;incstack = 0
 24581  019562  0E01               	movlw	1
 24582  019564  6EAE               	movwf	174,c	;volatile
 24583                           
 24584                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24585  019566  6AAD               	clrf	173,c	;volatile
 24586                           
 24587                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24588  019568  6AAF               	clrf	175,c	;volatile
 24589                           
 24590                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24591  01956A  0E63               	movlw	99
 24592  01956C  6EAB               	movwf	171,c	;volatile
 24593                           
 24594                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24595  01956E  6AAA               	clrf	170,c	;volatile
 24596                           
 24597                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24598  019570  0139               	movlb	57	; () banked
 24599  019572  95A4               	bcf	164,2,b	;volatile
 24600                           
 24601                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24602  019574  0EC0               	movlw	192
 24603  019576  6EAC               	movwf	172,c	;volatile
 24604                           
 24605                           ; BSR set to: 57
 24606                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24607  019578  0012               	return		;funcret
 24608  01957A                     __end_of_TMR2_Initialize:
 24609                           	opt callstack 0
 24610                           
 24611 ;; *************** function _SPI1_Initialize *****************
 24612 ;; Defined at:
 24613 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24614 ;; Parameters:    Size  Location     Type
 24615 ;;		None
 24616 ;; Auto vars:     Size  Location     Type
 24617 ;;		None
 24618 ;; Return value:  Size  Location     Type
 24619 ;;                  1  [STACK] void 
 24620 ;; Registers used:
 24621 ;;		wreg, status,2
 24622 ;; Tracked objects:
 24623 ;;		On entry : 3F/39
 24624 ;;		On exit  : 3F/3D
 24625 ;;		Unchanged: 0/0
 24626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;Total ram usage:        0 bytes
 24632 ;; Hardware stack levels used:    1
 24633 ;; Hardware stack levels required when called:    7
 24634 ;; This function calls:
 24635 ;;		Nothing
 24636 ;; This function is called by:
 24637 ;;		_SYSTEM_Initialize
 24638 ;; This function uses a reentrant model
 24639 ;;
 24640                           
 24641                           	psect	text109
 24642  01957A                     __ptext109:
 24643                           	opt callstack 0
 24644  01957A                     _SPI1_Initialize:
 24645                           	opt callstack 22
 24646                           
 24647                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24648                           
 24649                           ; BSR set to: 57
 24650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24651                           ;incstack = 0
 24652  01957A  0E40               	movlw	64
 24653  01957C  013D               	movlb	61	; () banked
 24654  01957E  6F15               	movwf	21,b	;volatile
 24655                           
 24656                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24657  019580  0E03               	movlw	3
 24658  019582  6F16               	movwf	22,b	;volatile
 24659                           
 24660                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24661  019584  0E4F               	movlw	79
 24662  019586  6F19               	movwf	25,b	;volatile
 24663                           
 24664                           ; BSR set to: 61
 24665                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24666  019588  6B1C               	clrf	28,b	;volatile
 24667                           
 24668                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24669  01958A  0E83               	movlw	131
 24670  01958C  6F14               	movwf	20,b	;volatile
 24671                           
 24672                           ; BSR set to: 61
 24673                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24674  01958E  0012               	return		;funcret
 24675  019590                     __end_of_SPI1_Initialize:
 24676                           	opt callstack 0
 24677                           
 24678 ;; *************** function _PWM8_Initialize *****************
 24679 ;; Defined at:
 24680 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24681 ;; Parameters:    Size  Location     Type
 24682 ;;		None
 24683 ;; Auto vars:     Size  Location     Type
 24684 ;;		None
 24685 ;; Return value:  Size  Location     Type
 24686 ;;                  1  [STACK] void 
 24687 ;; Registers used:
 24688 ;;		wreg, status,2
 24689 ;; Tracked objects:
 24690 ;;		On entry : 0/3E
 24691 ;;		On exit  : 3F/3F
 24692 ;;		Unchanged: 0/0
 24693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;Total ram usage:        0 bytes
 24699 ;; Hardware stack levels used:    1
 24700 ;; Hardware stack levels required when called:    7
 24701 ;; This function calls:
 24702 ;;		Nothing
 24703 ;; This function is called by:
 24704 ;;		_SYSTEM_Initialize
 24705 ;; This function uses a reentrant model
 24706 ;;
 24707                           
 24708                           	psect	text110
 24709  019590                     __ptext110:
 24710                           	opt callstack 0
 24711  019590                     _PWM8_Initialize:
 24712                           	opt callstack 22
 24713                           
 24714                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24715                           
 24716                           ; BSR set to: 61
 24717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24718                           ;incstack = 0
 24719  019590  0E80               	movlw	128
 24720  019592  6E62               	movwf	98,c	;volatile
 24721                           
 24722                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24723  019594  6A61               	clrf	97,c	;volatile
 24724                           
 24725                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24726  019596  0E40               	movlw	64
 24727  019598  6E60               	movwf	96,c	;volatile
 24728                           
 24729                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24730  01959A  013F               	movlb	63	; () banked
 24731  01959C  515F               	movf	95,w,b	;volatile
 24732  01959E  0B3F               	andlw	-193
 24733  0195A0  0940               	iorlw	64
 24734  0195A2  6F5F               	movwf	95,b	;volatile
 24735                           
 24736                           ; BSR set to: 63
 24737                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24738  0195A4  0012               	return		;funcret
 24739  0195A6                     __end_of_PWM8_Initialize:
 24740                           	opt callstack 0
 24741                           
 24742 ;; *************** function _PMD_Initialize *****************
 24743 ;; Defined at:
 24744 ;;		line 90 in file "mcc_generated_files/mcc.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;		None
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;		None
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  1  [STACK] void 
 24751 ;; Registers used:
 24752 ;;		None
 24753 ;; Tracked objects:
 24754 ;;		On entry : 3F/39
 24755 ;;		On exit  : 3F/39
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24762 ;;Total ram usage:        0 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; Hardware stack levels required when called:    7
 24765 ;; This function calls:
 24766 ;;		Nothing
 24767 ;; This function is called by:
 24768 ;;		_SYSTEM_Initialize
 24769 ;; This function uses a reentrant model
 24770 ;;
 24771                           
 24772                           	psect	text111
 24773  0195BC                     __ptext111:
 24774                           	opt callstack 0
 24775  0195BC                     _PMD_Initialize:
 24776                           	opt callstack 22
 24777                           
 24778                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 24779                           
 24780                           ; BSR set to: 63
 24781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24782                           ;incstack = 0
 24783  0195BC  0139               	movlb	57	; () banked
 24784  0195BE  6BC0               	clrf	192,b	;volatile
 24785                           
 24786                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 24787  0195C0  6BC1               	clrf	193,b	;volatile
 24788                           
 24789                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 24790  0195C2  6BC2               	clrf	194,b	;volatile
 24791                           
 24792                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 24793  0195C4  6BC3               	clrf	195,b	;volatile
 24794                           
 24795                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 24796  0195C6  6BC4               	clrf	196,b	;volatile
 24797                           
 24798                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 24799  0195C8  6BC5               	clrf	197,b	;volatile
 24800                           
 24801                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 24802  0195CA  6BC6               	clrf	198,b	;volatile
 24803                           
 24804                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 24805  0195CC  6BC7               	clrf	199,b	;volatile
 24806                           
 24807                           ; BSR set to: 57
 24808                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24809  0195CE  0012               	return		;funcret
 24810  0195D0                     __end_of_PMD_Initialize:
 24811                           	opt callstack 0
 24812                           
 24813 ;; *************** function _PIN_MANAGER_Initialize *****************
 24814 ;; Defined at:
 24815 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24816 ;; Parameters:    Size  Location     Type
 24817 ;;		None
 24818 ;; Auto vars:     Size  Location     Type
 24819 ;;		None
 24820 ;; Return value:  Size  Location     Type
 24821 ;;                  1  [STACK] void 
 24822 ;; Registers used:
 24823 ;;		wreg, status,2
 24824 ;; Tracked objects:
 24825 ;;		On entry : 3F/39
 24826 ;;		On exit  : 3F/3A
 24827 ;;		Unchanged: 0/0
 24828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24833 ;;Total ram usage:        0 bytes
 24834 ;; Hardware stack levels used:    1
 24835 ;; Hardware stack levels required when called:    7
 24836 ;; This function calls:
 24837 ;;		Nothing
 24838 ;; This function is called by:
 24839 ;;		_SYSTEM_Initialize
 24840 ;; This function uses a reentrant model
 24841 ;;
 24842                           
 24843                           	psect	text112
 24844  0180D4                     __ptext112:
 24845                           	opt callstack 0
 24846  0180D4                     _PIN_MANAGER_Initialize:
 24847                           	opt callstack 22
 24848                           
 24849                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24850                           
 24851                           ; BSR set to: 57
 24852                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24853                           ;incstack = 0
 24854  0180D4  0E07               	movlw	7
 24855  0180D6  6EBE               	movwf	190,c	;volatile
 24856                           
 24857                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24858  0180D8  0E80               	movlw	128
 24859  0180DA  6EBD               	movwf	189,c	;volatile
 24860                           
 24861                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24862  0180DC  6ABA               	clrf	186,c	;volatile
 24863                           
 24864                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24865  0180DE  6ABF               	clrf	191,c	;volatile
 24866                           
 24867                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24868  0180E0  6ABB               	clrf	187,c	;volatile
 24869                           
 24870                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24871  0180E2  0E07               	movlw	7
 24872  0180E4  6EBC               	movwf	188,c	;volatile
 24873                           
 24874                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24875  0180E6  6AC6               	clrf	198,c	;volatile
 24876                           
 24877                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24878  0180E8  0E0F               	movlw	15
 24879  0180EA  6EC7               	movwf	199,c	;volatile
 24880                           
 24881                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24882  0180EC  68C2               	setf	194,c	;volatile
 24883                           
 24884                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24885  0180EE  0EBF               	movlw	191
 24886  0180F0  6EC3               	movwf	195,c	;volatile
 24887                           
 24888                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24889  0180F2  0E90               	movlw	144
 24890  0180F4  6EC4               	movwf	196,c	;volatile
 24891                           
 24892                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24893  0180F6  0E0C               	movlw	12
 24894  0180F8  6EC5               	movwf	197,c	;volatile
 24895                           
 24896                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24897  0180FA  013A               	movlb	58	; () banked
 24898  0180FC  6B70               	clrf	112,b	;volatile
 24899                           
 24900                           ; BSR set to: 58
 24901                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24902  0180FE  6B60               	clrf	96,b	;volatile
 24903                           
 24904                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24905  018100  0E3C               	movlw	60
 24906  018102  6F50               	movwf	80,b	;volatile
 24907                           
 24908                           ; BSR set to: 58
 24909                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24910  018104  6B80               	clrf	128,b	;volatile
 24911                           
 24912                           ; BSR set to: 58
 24913                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24914  018106  6B90               	clrf	144,b	;volatile
 24915                           
 24916                           ; BSR set to: 58
 24917                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24918  018108  6940               	setf	64,b	;volatile
 24919                           
 24920                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24921  01810A  0E0C               	movlw	12
 24922  01810C  6F71               	movwf	113,b	;volatile
 24923                           
 24924                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24925  01810E  0E0F               	movlw	15
 24926  018110  6F91               	movwf	145,b	;volatile
 24927                           
 24928                           ; BSR set to: 58
 24929                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24930  018112  6B81               	clrf	129,b	;volatile
 24931                           
 24932                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24933  018114  0E83               	movlw	131
 24934  018116  6F51               	movwf	81,b	;volatile
 24935                           
 24936                           ; BSR set to: 58
 24937                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24938  018118  6B41               	clrf	65,b	;volatile
 24939                           
 24940                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24941  01811A  0E97               	movlw	151
 24942  01811C  6F61               	movwf	97,b	;volatile
 24943                           
 24944                           ; BSR set to: 58
 24945                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24946  01811E  6B82               	clrf	130,b	;volatile
 24947                           
 24948                           ; BSR set to: 58
 24949                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24950  018120  6B92               	clrf	146,b	;volatile
 24951                           
 24952                           ; BSR set to: 58
 24953                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24954  018122  6B42               	clrf	66,b	;volatile
 24955                           
 24956                           ; BSR set to: 58
 24957                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24958  018124  6B52               	clrf	82,b	;volatile
 24959                           
 24960                           ; BSR set to: 58
 24961                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24962  018126  6B62               	clrf	98,b	;volatile
 24963                           
 24964                           ; BSR set to: 58
 24965                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24966  018128  6B72               	clrf	114,b	;volatile
 24967                           
 24968                           ; BSR set to: 58
 24969                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24970  01812A  6943               	setf	67,b	;volatile
 24971                           
 24972                           ; BSR set to: 58
 24973                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24974  01812C  6953               	setf	83,b	;volatile
 24975                           
 24976                           ; BSR set to: 58
 24977                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24978  01812E  6963               	setf	99,b	;volatile
 24979                           
 24980                           ; BSR set to: 58
 24981                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24982  018130  6973               	setf	115,b	;volatile
 24983                           
 24984                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24985  018132  0E07               	movlw	7
 24986  018134  6F83               	movwf	131,b	;volatile
 24987                           
 24988                           ; BSR set to: 58
 24989                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24990  018136  6993               	setf	147,b	;volatile
 24991                           
 24992                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24993  018138  0E0F               	movlw	15
 24994  01813A  6FE8               	movwf	232,b	;volatile
 24995                           
 24996                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24997  01813C  0E13               	movlw	19
 24998  01813E  6FDE               	movwf	222,b	;volatile
 24999                           
 25000                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 25001  018140  0E16               	movlw	22
 25002  018142  6F0E               	movwf	14,b	;volatile
 25003                           
 25004                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 25005  018144  0E1E               	movlw	30
 25006  018146  6F13               	movwf	19,b	;volatile
 25007                           
 25008                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 25009  018148  0E08               	movlw	8
 25010  01814A  6FC0               	movwf	192,b	;volatile
 25011                           
 25012                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 25013  01814C  0E10               	movlw	16
 25014  01814E  6F19               	movwf	25,b	;volatile
 25015                           
 25016                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 25017  018150  0E09               	movlw	9
 25018  018152  6FC1               	movwf	193,b	;volatile
 25019                           
 25020                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 25021  018154  0E1F               	movlw	31
 25022  018156  6F15               	movwf	21,b	;volatile
 25023                           
 25024                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 25025  018158  0E13               	movlw	19
 25026  01815A  6F16               	movwf	22,b	;volatile
 25027                           
 25028                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 25029  01815C  0E17               	movlw	23
 25030  01815E  6FE5               	movwf	229,b	;volatile
 25031                           
 25032                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 25033  018160  0E14               	movlw	20
 25034  018162  6FDF               	movwf	223,b	;volatile
 25035                           
 25036                           ; BSR set to: 58
 25037                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 25038  018164  0012               	return		;funcret
 25039  018166                     __end_of_PIN_MANAGER_Initialize:
 25040                           	opt callstack 0
 25041                           
 25042 ;; *************** function _OSCILLATOR_Initialize *****************
 25043 ;; Defined at:
 25044 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25045 ;; Parameters:    Size  Location     Type
 25046 ;;		None
 25047 ;; Auto vars:     Size  Location     Type
 25048 ;;		None
 25049 ;; Return value:  Size  Location     Type
 25050 ;;                  1  [STACK] void 
 25051 ;; Registers used:
 25052 ;;		wreg, status,2
 25053 ;; Tracked objects:
 25054 ;;		On entry : 3F/3A
 25055 ;;		On exit  : 3F/39
 25056 ;;		Unchanged: 0/0
 25057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25062 ;;Total ram usage:        0 bytes
 25063 ;; Hardware stack levels used:    1
 25064 ;; Hardware stack levels required when called:    7
 25065 ;; This function calls:
 25066 ;;		Nothing
 25067 ;; This function is called by:
 25068 ;;		_SYSTEM_Initialize
 25069 ;; This function uses a reentrant model
 25070 ;;
 25071                           
 25072                           	psect	text113
 25073  0195A6                     __ptext113:
 25074                           	opt callstack 0
 25075  0195A6                     _OSCILLATOR_Initialize:
 25076                           	opt callstack 22
 25077                           
 25078                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25079                           
 25080                           ; BSR set to: 58
 25081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25082                           ;incstack = 0
 25083  0195A6  0E20               	movlw	32
 25084  0195A8  0139               	movlb	57	; () banked
 25085  0195AA  6FD9               	movwf	217,b	;volatile
 25086                           
 25087                           ; BSR set to: 57
 25088                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25089  0195AC  6BDB               	clrf	219,b	;volatile
 25090                           
 25091                           ; BSR set to: 57
 25092                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25093  0195AE  6BDD               	clrf	221,b	;volatile
 25094                           
 25095                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25096  0195B0  0E02               	movlw	2
 25097  0195B2  6FDF               	movwf	223,b	;volatile
 25098                           
 25099                           ; BSR set to: 57
 25100                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25101  0195B4  6BDE               	clrf	222,b	;volatile
 25102  0195B6                     l173:
 25103                           
 25104                           ; BSR set to: 57
 25105                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25106  0195B6  B1DC               	btfsc	220,0,b	;volatile
 25107  0195B8  0012               	return	
 25108  0195BA  D7FD               	goto	l173
 25109  0195BC                     __end_of_OSCILLATOR_Initialize:
 25110                           	opt callstack 0
 25111                           
 25112 ;; *************** function _INTERRUPT_Initialize *****************
 25113 ;; Defined at:
 25114 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25115 ;; Parameters:    Size  Location     Type
 25116 ;;		None
 25117 ;; Auto vars:     Size  Location     Type
 25118 ;;  state           1  [STACK] _Bool 
 25119 ;; Return value:  Size  Location     Type
 25120 ;;                  1  [STACK] void 
 25121 ;; Registers used:
 25122 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25123 ;; Tracked objects:
 25124 ;;		On entry : 0/0
 25125 ;;		On exit  : 3F/39
 25126 ;;		Unchanged: 0/0
 25127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25132 ;;Total ram usage:        0 bytes
 25133 ;; Hardware stack levels used:    1
 25134 ;; Hardware stack levels required when called:    7
 25135 ;; This function calls:
 25136 ;;		Nothing
 25137 ;; This function is called by:
 25138 ;;		_SYSTEM_Initialize
 25139 ;; This function uses a reentrant model
 25140 ;;
 25141                           
 25142                           	psect	text114
 25143  018542                     __ptext114:
 25144                           	opt callstack 0
 25145  018542                     _INTERRUPT_Initialize:
 25146                           	opt callstack 0
 25147                           
 25148                           ; BSR set to: 57
 25149                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25150  018542  52E6               	movf	postinc1,f,c
 25151                           
 25152                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25153                           
 25154                           ;incstack = 0
 25155  018544  8AD2               	bsf	210,5,c	;volatile
 25156                           
 25157                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25158  018546  AED2               	btfss	16338,7,c	;volatile
 25159  018548  D003               	goto	u8180
 25160  01854A  6A30               	clrf	(btemp+11)^0,c
 25161  01854C  2A30               	incf	(btemp+11)^0,f,c
 25162  01854E  D001               	goto	u8198
 25163  018550                     u8180:
 25164  018550  6A30               	clrf	(btemp+11)^0,c
 25165  018552                     u8198:
 25166                           
 25167                           ;stkvar	_state @ sp[(-1)+0]
 25168  018552  0EFF               	movlw	-1
 25169  018554  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 25170                           
 25171                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25172  01855A  9ED2               	bcf	16338,7,c	;volatile
 25173                           
 25174                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25175  01855C  0E55               	movlw	85
 25176  01855E  6ED4               	movwf	212,c	;volatile
 25177                           
 25178                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25179  018560  0EAA               	movlw	170
 25180  018562  6ED4               	movwf	212,c	;volatile
 25181                           
 25182                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25183  018564  90D4               	bcf	212,0,c	;volatile
 25184                           
 25185                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25186  018566  0138               	movlb	56	; () banked
 25187  018568  6B9F               	clrf	159,b	;volatile
 25188                           
 25189                           ; BSR set to: 56
 25190                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25191  01856A  6B9E               	clrf	158,b	;volatile
 25192                           
 25193                           ; BSR set to: 56
 25194                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25195  01856C  0E08               	movlw	8
 25196  01856E  6F9D               	movwf	157,b	;volatile
 25197                           
 25198                           ; BSR set to: 56
 25199                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25200  018570  0E55               	movlw	85
 25201  018572  6ED4               	movwf	212,c	;volatile
 25202                           
 25203                           ; BSR set to: 56
 25204                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25205  018574  0EAA               	movlw	170
 25206  018576  6ED4               	movwf	212,c	;volatile
 25207                           
 25208                           ; BSR set to: 56
 25209                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25210  018578  80D4               	bsf	212,0,c	;volatile
 25211                           
 25212                           ; BSR set to: 56
 25213                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25214                           ;stkvar	_state @ sp[(-1)+0]
 25215  01857A  0EFF               	movlw	-1
 25216  01857C  B0E3               	btfsc	plusw1,0,c
 25217  01857E  D002               	bra	u8205
 25218  018580  9ED2               	bcf	16338,7,c	;volatile
 25219  018582  D001               	bra	u8206
 25220  018584                     u8205:
 25221  018584  8ED2               	bsf	16338,7,c	;volatile
 25222  018586                     u8206:
 25223                           
 25224                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25225  018586  0139               	movlb	57	; () banked
 25226  018588  8782               	bsf	130,3,b	;volatile
 25227                           
 25228                           ; BSR set to: 57
 25229                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25230  01858A  8382               	bsf	130,1,b	;volatile
 25231                           
 25232                           ; BSR set to: 57
 25233                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25234  01858C  8182               	bsf	130,0,b	;volatile
 25235                           
 25236                           ; BSR set to: 57
 25237                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25238  01858E  8582               	bsf	130,2,b	;volatile
 25239                           
 25240                           ; BSR set to: 57
 25241                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25242  018590  8786               	bsf	134,3,b	;volatile
 25243                           
 25244                           ; BSR set to: 57
 25245                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25246  018592  8586               	bsf	134,2,b	;volatile
 25247                           
 25248                           ; BSR set to: 57
 25249                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25250  018594  8983               	bsf	131,4,b	;volatile
 25251                           
 25252                           ; BSR set to: 57
 25253                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25254  018596  8783               	bsf	131,3,b	;volatile
 25255                           
 25256                           ; BSR set to: 57
 25257                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25258  018598  8181               	bsf	129,0,b	;volatile
 25259                           
 25260                           ; BSR set to: 57
 25261                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25262  01859A  9185               	bcf	133,0,b	;volatile
 25263                           
 25264                           ; BSR set to: 57
 25265                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25266  01859C  8189               	bsf	137,0,b	;volatile
 25267                           
 25268                           ; BSR set to: 57
 25269                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25270  01859E  9D88               	bcf	136,6,b	;volatile
 25271                           
 25272                           ; BSR set to: 57
 25273                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25274  0185A0  8581               	bsf	129,2,b	;volatile
 25275                           
 25276                           ; BSR set to: 57
 25277                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25278  0185A2  8781               	bsf	129,3,b	;volatile
 25279                           
 25280                           ; BSR set to: 57
 25281                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25282  0185A4  9D86               	bcf	134,6,b	;volatile
 25283                           
 25284                           ; BSR set to: 57
 25285                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25286  0185A6  52E5               	movf	postdec1,f,c
 25287  0185A8  0012               	return		;funcret
 25288  0185AA                     __end_of_INTERRUPT_Initialize:
 25289                           	opt callstack 0
 25290                           
 25291 ;; *************** function _FVR_Initialize *****************
 25292 ;; Defined at:
 25293 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25294 ;; Parameters:    Size  Location     Type
 25295 ;;		None
 25296 ;; Auto vars:     Size  Location     Type
 25297 ;;		None
 25298 ;; Return value:  Size  Location     Type
 25299 ;;                  1  [STACK] void 
 25300 ;; Registers used:
 25301 ;;		wreg, status,2
 25302 ;; Tracked objects:
 25303 ;;		On entry : 3F/39
 25304 ;;		On exit  : 3F/3E
 25305 ;;		Unchanged: 0/0
 25306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25311 ;;Total ram usage:        0 bytes
 25312 ;; Hardware stack levels used:    1
 25313 ;; Hardware stack levels required when called:    7
 25314 ;; This function calls:
 25315 ;;		Nothing
 25316 ;; This function is called by:
 25317 ;;		_SYSTEM_Initialize
 25318 ;; This function uses a reentrant model
 25319 ;;
 25320                           
 25321                           	psect	text115
 25322  01968A                     __ptext115:
 25323                           	opt callstack 0
 25324  01968A                     _FVR_Initialize:
 25325                           	opt callstack 22
 25326                           
 25327                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25328                           
 25329                           ; BSR set to: 57
 25330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25331                           ;incstack = 0
 25332  01968A  0EAF               	movlw	175
 25333  01968C  013E               	movlb	62	; () banked
 25334  01968E  6FC1               	movwf	193,b	;volatile
 25335                           
 25336                           ; BSR set to: 62
 25337                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25338  019690  0012               	return		;funcret
 25339  019692                     __end_of_FVR_Initialize:
 25340                           	opt callstack 0
 25341                           
 25342 ;; *************** function _EXT_INT_Initialize *****************
 25343 ;; Defined at:
 25344 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25345 ;; Parameters:    Size  Location     Type
 25346 ;;		None
 25347 ;; Auto vars:     Size  Location     Type
 25348 ;;		None
 25349 ;; Return value:  Size  Location     Type
 25350 ;;                  1  [STACK] void 
 25351 ;; Registers used:
 25352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25353 ;; Tracked objects:
 25354 ;;		On entry : 3F/39
 25355 ;;		On exit  : 3F/39
 25356 ;;		Unchanged: 0/0
 25357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25362 ;;Total ram usage:        0 bytes
 25363 ;; Hardware stack levels used:    1
 25364 ;; Hardware stack levels required when called:    8
 25365 ;; This function calls:
 25366 ;;		_INT0_SetInterruptHandler
 25367 ;;		_INT1_SetInterruptHandler
 25368 ;; This function is called by:
 25369 ;;		_SYSTEM_Initialize
 25370 ;; This function uses a reentrant model
 25371 ;;
 25372                           
 25373                           	psect	text116
 25374  018E44                     __ptext116:
 25375                           	opt callstack 0
 25376  018E44                     _EXT_INT_Initialize:
 25377                           	opt callstack 21
 25378                           
 25379                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25380                           
 25381                           ; BSR set to: 62
 25382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25383                           ;incstack = 0
 25384  018E44  0139               	movlb	57	; () banked
 25385  018E46  91A1               	bcf	161,0,b	;volatile
 25386                           
 25387                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25388  018E48  90D2               	bcf	210,0,c	;volatile
 25389                           
 25390                           ; BSR set to: 57
 25391                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25392  018E4A  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 25393  018E4C  6EE6               	movwf	postinc1,c
 25394  018E4E  0E96               	movlw	high _INT0_DefaultInterruptHandler
 25395  018E50  6EE6               	movwf	postinc1,c
 25396  018E52  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25397  018E54  6EE6               	movwf	postinc1,c
 25398  018E56  ECF7  F0C8         	call	_INT0_SetInterruptHandler	;wreg free
 25399                           
 25400                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25401  018E5A  0139               	movlb	57	; () banked
 25402  018E5C  8191               	bsf	145,0,b	;volatile
 25403                           
 25404                           ; BSR set to: 57
 25405                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25406  018E5E  91A5               	bcf	165,0,b	;volatile
 25407                           
 25408                           ; BSR set to: 57
 25409                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25410  018E60  92D2               	bcf	210,1,c	;volatile
 25411                           
 25412                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25413  018E62  0EB2               	movlw	low _INT1_DefaultInterruptHandler
 25414  018E64  6EE6               	movwf	postinc1,c
 25415  018E66  0E96               	movlw	high _INT1_DefaultInterruptHandler
 25416  018E68  6EE6               	movwf	postinc1,c
 25417  018E6A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25418  018E6C  6EE6               	movwf	postinc1,c
 25419  018E6E  ECE3  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
 25420                           
 25421                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25422  018E72  0139               	movlb	57	; () banked
 25423  018E74  8195               	bsf	149,0,b	;volatile
 25424                           
 25425                           ; BSR set to: 57
 25426                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25427  018E76  0012               	return		;funcret
 25428  018E78                     __end_of_EXT_INT_Initialize:
 25429                           	opt callstack 0
 25430                           
 25431 ;; *************** function _INT1_SetInterruptHandler *****************
 25432 ;; Defined at:
 25433 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25434 ;; Parameters:    Size  Location     Type
 25435 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25436 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25437 ;; Auto vars:     Size  Location     Type
 25438 ;;		None
 25439 ;; Return value:  Size  Location     Type
 25440 ;;                  1  [STACK] void 
 25441 ;; Registers used:
 25442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25443 ;; Tracked objects:
 25444 ;;		On entry : 3F/39
 25445 ;;		On exit  : 0/0
 25446 ;;		Unchanged: 0/0
 25447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25452 ;;Total ram usage:        0 bytes
 25453 ;; Hardware stack levels used:    1
 25454 ;; Hardware stack levels required when called:    7
 25455 ;; This function calls:
 25456 ;;		Nothing
 25457 ;; This function is called by:
 25458 ;;		_EXT_INT_Initialize
 25459 ;;		_start_switch_handler
 25460 ;; This function uses a reentrant model
 25461 ;;
 25462                           
 25463                           	psect	text117
 25464  0191C6                     __ptext117:
 25465                           	opt callstack 0
 25466  0191C6                     _INT1_SetInterruptHandler:
 25467                           	opt callstack 22
 25468                           
 25469                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25470                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25471                           
 25472                           ; BSR set to: 57
 25473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25474                           ;incstack = 0
 25475  0191C6  50E1               	movf	fsr1l,w,c
 25476  0191C8  0FFD               	addlw	-3
 25477  0191CA  6ED9               	movwf	fsr2l,c
 25478  0191CC  50E2               	movf	fsr1h,w,c
 25479  0191CE  6EDA               	movwf	fsr2h,c
 25480  0191D0  0EFF               	movlw	255
 25481  0191D2  22DA               	addwfc	fsr2h,f,c
 25482  0191D4  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 25483  0191DA  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 25484  0191E0  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 25485                           
 25486                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25487  0191E6  52E5               	movf	postdec1,f,c
 25488  0191E8  52E5               	movf	postdec1,f,c
 25489  0191EA  52E5               	movf	postdec1,f,c
 25490  0191EC  0012               	return		;funcret
 25491  0191EE                     __end_of_INT1_SetInterruptHandler:
 25492                           	opt callstack 0
 25493                           
 25494 ;; *************** function _INT0_SetInterruptHandler *****************
 25495 ;; Defined at:
 25496 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25497 ;; Parameters:    Size  Location     Type
 25498 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25499 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25500 ;; Auto vars:     Size  Location     Type
 25501 ;;		None
 25502 ;; Return value:  Size  Location     Type
 25503 ;;                  1  [STACK] void 
 25504 ;; Registers used:
 25505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25506 ;; Tracked objects:
 25507 ;;		On entry : 3F/39
 25508 ;;		On exit  : 0/0
 25509 ;;		Unchanged: 0/0
 25510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25515 ;;Total ram usage:        0 bytes
 25516 ;; Hardware stack levels used:    1
 25517 ;; Hardware stack levels required when called:    7
 25518 ;; This function calls:
 25519 ;;		Nothing
 25520 ;; This function is called by:
 25521 ;;		_EXT_INT_Initialize
 25522 ;; This function uses a reentrant model
 25523 ;;
 25524                           
 25525                           	psect	text118
 25526  0191EE                     __ptext118:
 25527                           	opt callstack 0
 25528  0191EE                     _INT0_SetInterruptHandler:
 25529                           	opt callstack 21
 25530                           
 25531                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25532                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25533                           
 25534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25535                           ;incstack = 0
 25536  0191EE  50E1               	movf	fsr1l,w,c
 25537  0191F0  0FFD               	addlw	-3
 25538  0191F2  6ED9               	movwf	fsr2l,c
 25539  0191F4  50E2               	movf	fsr1h,w,c
 25540  0191F6  6EDA               	movwf	fsr2h,c
 25541  0191F8  0EFF               	movlw	255
 25542  0191FA  22DA               	addwfc	fsr2h,f,c
 25543  0191FC  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 25544  019202  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 25545  019208  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 25546                           
 25547                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25548  01920E  52E5               	movf	postdec1,f,c
 25549  019210  52E5               	movf	postdec1,f,c
 25550  019212  52E5               	movf	postdec1,f,c
 25551  019214  0012               	return		;funcret
 25552  019216                     __end_of_INT0_SetInterruptHandler:
 25553                           	opt callstack 0
 25554                           
 25555 ;; *************** function _DMA2_Initialize *****************
 25556 ;; Defined at:
 25557 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25558 ;; Parameters:    Size  Location     Type
 25559 ;;		None
 25560 ;; Auto vars:     Size  Location     Type
 25561 ;;		None
 25562 ;; Return value:  Size  Location     Type
 25563 ;;                  1  [STACK] void 
 25564 ;; Registers used:
 25565 ;;		wreg, status,2
 25566 ;; Tracked objects:
 25567 ;;		On entry : 3F/3D
 25568 ;;		On exit  : 3F/3B
 25569 ;;		Unchanged: 0/0
 25570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25575 ;;Total ram usage:        0 bytes
 25576 ;; Hardware stack levels used:    1
 25577 ;; Hardware stack levels required when called:    7
 25578 ;; This function calls:
 25579 ;;		Nothing
 25580 ;; This function is called by:
 25581 ;;		_SYSTEM_Initialize
 25582 ;; This function uses a reentrant model
 25583 ;;
 25584                           
 25585                           	psect	text119
 25586  0187EE                     __ptext119:
 25587                           	opt callstack 0
 25588  0187EE                     _DMA2_Initialize:
 25589                           	opt callstack 22
 25590                           
 25591                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25592                           
 25593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25594                           ;incstack = 0
 25595  0187EE  0E00               	movlw	0
 25596  0187F0  013B               	movlb	59	; () banked
 25597  0187F2  6FD9               	movwf	217,b	;volatile
 25598  0187F4  0E10               	movlw	16
 25599  0187F6  6FDA               	movwf	218,b	;volatile
 25600  0187F8  0E00               	movlw	0
 25601  0187FA  6FDB               	movwf	219,b	;volatile
 25602                           
 25603                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25604  0187FC  0E3F               	movlw	63
 25605  0187FE  6FD1               	movwf	209,b	;volatile
 25606  018800  0EBB               	movlw	187
 25607  018802  6FD0               	movwf	208,b	;volatile
 25608                           
 25609                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25610  018804  0E03               	movlw	3
 25611  018806  6FDD               	movwf	221,b	;volatile
 25612                           
 25613                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25614  018808  0E00               	movlw	0
 25615  01880A  6FD8               	movwf	216,b	;volatile
 25616  01880C  0E01               	movlw	1
 25617  01880E  6FD7               	movwf	215,b	;volatile
 25618                           
 25619                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25620  018810  0E00               	movlw	0
 25621  018812  6FCF               	movwf	207,b	;volatile
 25622  018814  0E01               	movlw	1
 25623  018816  6FCE               	movwf	206,b	;volatile
 25624                           
 25625                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25626  018818  0E46               	movlw	70
 25627  01881A  6FDF               	movwf	223,b	;volatile
 25628                           
 25629                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25630  01881C  0E3D               	movlw	61
 25631  01881E  6FDE               	movwf	222,b	;volatile
 25632                           
 25633                           ; BSR set to: 59
 25634                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25635  018820  0139               	movlb	57	; () banked
 25636  018822  97A5               	bcf	165,3,b	;volatile
 25637                           
 25638                           ; BSR set to: 57
 25639                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25640  018824  95A5               	bcf	165,2,b	;volatile
 25641                           
 25642                           ; BSR set to: 57
 25643                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25644  018826  9BA5               	bcf	165,5,b	;volatile
 25645                           
 25646                           ; BSR set to: 57
 25647                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25648  018828  99A5               	bcf	165,4,b	;volatile
 25649                           
 25650                           ; BSR set to: 57
 25651                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25652  01882A  9795               	bcf	149,3,b	;volatile
 25653                           
 25654                           ; BSR set to: 57
 25655                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25656  01882C  9595               	bcf	149,2,b	;volatile
 25657                           
 25658                           ; BSR set to: 57
 25659                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25660  01882E  9B95               	bcf	149,5,b	;volatile
 25661                           
 25662                           ; BSR set to: 57
 25663                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25664  018830  9995               	bcf	149,4,b	;volatile
 25665  018832  9ED2               	bcf	16338,7,c	;# 
 25666  018834  0139               	banksel	14831	;# 
 25667  018836  0E55               	movlw	85	;# 
 25668  018838  6FEF               	movwf	14831,b	;# 
 25669  01883A  0EAA               	movlw	170	;# 
 25670  01883C  6FEF               	movwf	14831,b	;# 
 25671  01883E  81EF               	bsf	14831,0,b	;# 
 25672  018840  8ED2               	bsf	16338,7,c	;# 
 25673                           
 25674                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25675  018842  013B               	movlb	59	; () banked
 25676  018844  6BDC               	clrf	220,b	;volatile
 25677                           
 25678                           ; BSR set to: 59
 25679                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25680  018846  0012               	return		;funcret
 25681  018848                     __end_of_DMA2_Initialize:
 25682                           	opt callstack 0
 25683                           
 25684 ;; *************** function _DMA1_Initialize *****************
 25685 ;; Defined at:
 25686 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25687 ;; Parameters:    Size  Location     Type
 25688 ;;		None
 25689 ;; Auto vars:     Size  Location     Type
 25690 ;;		None
 25691 ;; Return value:  Size  Location     Type
 25692 ;;                  1  [STACK] void 
 25693 ;; Registers used:
 25694 ;;		wreg, status,2
 25695 ;; Tracked objects:
 25696 ;;		On entry : 3F/3B
 25697 ;;		On exit  : 3F/3B
 25698 ;;		Unchanged: 0/0
 25699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25704 ;;Total ram usage:        0 bytes
 25705 ;; Hardware stack levels used:    1
 25706 ;; Hardware stack levels required when called:    7
 25707 ;; This function calls:
 25708 ;;		Nothing
 25709 ;; This function is called by:
 25710 ;;		_SYSTEM_Initialize
 25711 ;; This function uses a reentrant model
 25712 ;;
 25713                           
 25714                           	psect	text120
 25715  018404                     __ptext120:
 25716                           	opt callstack 0
 25717  018404                     _DMA1_Initialize:
 25718                           	opt callstack 22
 25719                           
 25720                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25721                           
 25722                           ; BSR set to: 59
 25723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25724                           ;incstack = 0
 25725  018404  0E00               	movlw	0
 25726  018406  013B               	movlb	59	; () banked
 25727  018408  6FF9               	movwf	249,b	;volatile
 25728  01840A  0E10               	movlw	16
 25729  01840C  6FFA               	movwf	250,b	;volatile
 25730  01840E  0E00               	movlw	0
 25731  018410  6FFB               	movwf	251,b	;volatile
 25732                           
 25733                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25734  018412  0E3D               	movlw	61
 25735  018414  6FF1               	movwf	241,b	;volatile
 25736  018416  0E11               	movlw	17
 25737  018418  6FF0               	movwf	240,b	;volatile
 25738                           
 25739                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25740  01841A  0E03               	movlw	3
 25741  01841C  6FFD               	movwf	253,b	;volatile
 25742                           
 25743                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25744  01841E  0E00               	movlw	0
 25745  018420  6FF8               	movwf	248,b	;volatile
 25746  018422  0E01               	movlw	1
 25747  018424  6FF7               	movwf	247,b	;volatile
 25748                           
 25749                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25750  018426  0E00               	movlw	0
 25751  018428  6FEF               	movwf	239,b	;volatile
 25752  01842A  0E01               	movlw	1
 25753  01842C  6FEE               	movwf	238,b	;volatile
 25754                           
 25755                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25756  01842E  0E15               	movlw	21
 25757  018430  6FFF               	movwf	255,b	;volatile
 25758                           
 25759                           ; BSR set to: 59
 25760                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25761  018432  6BFE               	clrf	254,b	;volatile
 25762                           
 25763                           ; BSR set to: 59
 25764                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25765  018434  0139               	movlb	57	; () banked
 25766  018436  93A2               	bcf	162,1,b	;volatile
 25767                           
 25768                           ; BSR set to: 57
 25769                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25770  018438  91A2               	bcf	162,0,b	;volatile
 25771                           
 25772                           ; BSR set to: 57
 25773                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25774  01843A  97A2               	bcf	162,3,b	;volatile
 25775                           
 25776                           ; BSR set to: 57
 25777                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25778  01843C  95A2               	bcf	162,2,b	;volatile
 25779                           
 25780                           ; BSR set to: 57
 25781                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25782  01843E  8392               	bsf	146,1,b	;volatile
 25783                           
 25784                           ; BSR set to: 57
 25785                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25786  018440  8192               	bsf	146,0,b	;volatile
 25787                           
 25788                           ; BSR set to: 57
 25789                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25790  018442  8792               	bsf	146,3,b	;volatile
 25791                           
 25792                           ; BSR set to: 57
 25793                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25794  018444  8592               	bsf	146,2,b	;volatile
 25795                           
 25796                           ; BSR set to: 57
 25797                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25798  018446  6BF1               	clrf	241,b	;volatile
 25799                           
 25800                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25801  018448  0E01               	movlw	1
 25802  01844A  6FF2               	movwf	242,b	;volatile
 25803                           
 25804                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25805  01844C  0E04               	movlw	4
 25806  01844E  6FF3               	movwf	243,b	;volatile
 25807                           
 25808                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25809  018450  0E02               	movlw	2
 25810  018452  6FF4               	movwf	244,b	;volatile
 25811                           
 25812                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25813  018454  0E03               	movlw	3
 25814  018456  6FF7               	movwf	247,b	;volatile
 25815  018458  9ED2               	bcf	16338,7,c	;# 
 25816  01845A  0139               	banksel	14831	;# 
 25817  01845C  0E55               	movlw	85	;# 
 25818  01845E  6FEF               	movwf	14831,b	;# 
 25819  018460  0EAA               	movlw	170	;# 
 25820  018462  6FEF               	movwf	14831,b	;# 
 25821  018464  81EF               	bsf	14831,0,b	;# 
 25822  018466  8ED2               	bsf	16338,7,c	;# 
 25823                           
 25824                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25825  018468  013B               	movlb	59	; () banked
 25826  01846A  6BFC               	clrf	252,b	;volatile
 25827                           
 25828                           ; BSR set to: 59
 25829                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25830  01846C  0012               	return		;funcret
 25831  01846E                     __end_of_DMA1_Initialize:
 25832                           	opt callstack 0
 25833                           
 25834 ;; *************** function _CLKREF_Initialize *****************
 25835 ;; Defined at:
 25836 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25837 ;; Parameters:    Size  Location     Type
 25838 ;;		None
 25839 ;; Auto vars:     Size  Location     Type
 25840 ;;		None
 25841 ;; Return value:  Size  Location     Type
 25842 ;;                  1  [STACK] void 
 25843 ;; Registers used:
 25844 ;;		wreg, status,2
 25845 ;; Tracked objects:
 25846 ;;		On entry : 3F/3B
 25847 ;;		On exit  : 3F/3C
 25848 ;;		Unchanged: 0/0
 25849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25854 ;;Total ram usage:        0 bytes
 25855 ;; Hardware stack levels used:    1
 25856 ;; Hardware stack levels required when called:    7
 25857 ;; This function calls:
 25858 ;;		Nothing
 25859 ;; This function is called by:
 25860 ;;		_SYSTEM_Initialize
 25861 ;; This function uses a reentrant model
 25862 ;;
 25863                           
 25864                           	psect	text121
 25865  01963E                     __ptext121:
 25866                           	opt callstack 0
 25867  01963E                     _CLKREF_Initialize:
 25868                           	opt callstack 22
 25869                           
 25870                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25871                           
 25872                           ; BSR set to: 59
 25873                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25874                           ;incstack = 0
 25875  01963E  013C               	movlb	60	; () banked
 25876  019640  6BE6               	clrf	230,b	;volatile
 25877                           
 25878                           ; BSR set to: 60
 25879                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25880  019642  0E94               	movlw	148
 25881  019644  6FE5               	movwf	229,b	;volatile
 25882                           
 25883                           ; BSR set to: 60
 25884                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25885  019646  0012               	return		;funcret
 25886  019648                     __end_of_CLKREF_Initialize:
 25887                           	opt callstack 0
 25888                           
 25889 ;; *************** function _ADCC_Initialize *****************
 25890 ;; Defined at:
 25891 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25892 ;; Parameters:    Size  Location     Type
 25893 ;;		None
 25894 ;; Auto vars:     Size  Location     Type
 25895 ;;		None
 25896 ;; Return value:  Size  Location     Type
 25897 ;;                  1  [STACK] void 
 25898 ;; Registers used:
 25899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25900 ;; Tracked objects:
 25901 ;;		On entry : 3F/3E
 25902 ;;		On exit  : 0/0
 25903 ;;		Unchanged: 0/0
 25904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25909 ;;Total ram usage:        0 bytes
 25910 ;; Hardware stack levels used:    1
 25911 ;; Hardware stack levels required when called:    8
 25912 ;; This function calls:
 25913 ;;		_ADCC_SetADIInterruptHandler
 25914 ;;		_ADCC_SetADTIInterruptHandler
 25915 ;; This function is called by:
 25916 ;;		_SYSTEM_Initialize
 25917 ;; This function uses a reentrant model
 25918 ;;
 25919                           
 25920                           	psect	text122
 25921  01846E                     __ptext122:
 25922                           	opt callstack 0
 25923  01846E                     _ADCC_Initialize:
 25924                           	opt callstack 21
 25925                           
 25926                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25927                           
 25928                           ; BSR set to: 60
 25929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25930                           ;incstack = 0
 25931  01846E  013E               	movlb	62	; () banked
 25932  018470  6BDE               	clrf	222,b	;volatile
 25933                           
 25934                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25935  018472  6BDF               	clrf	223,b	;volatile
 25936                           
 25937                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25938  018474  6BE0               	clrf	224,b	;volatile
 25939                           
 25940                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25941  018476  6BE1               	clrf	225,b	;volatile
 25942                           
 25943                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25944  018478  6BE4               	clrf	228,b	;volatile
 25945                           
 25946                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25947  01847A  6BE5               	clrf	229,b	;volatile
 25948                           
 25949                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25950  01847C  6BEA               	clrf	234,b	;volatile
 25951                           
 25952                           ; BSR set to: 62
 25953                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25954  01847E  0E40               	movlw	64
 25955  018480  6FEC               	movwf	236,b	;volatile
 25956                           
 25957                           ; BSR set to: 62
 25958                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25959  018482  6BF1               	clrf	241,b	;volatile
 25960                           
 25961                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25962  018484  0E20               	movlw	32
 25963  018486  6FF3               	movwf	243,b	;volatile
 25964                           
 25965                           ; BSR set to: 62
 25966                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25967  018488  6BF4               	clrf	244,b	;volatile
 25968                           
 25969                           ; BSR set to: 62
 25970                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25971  01848A  6BF5               	clrf	245,b	;volatile
 25972                           
 25973                           ; BSR set to: 62
 25974                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25975  01848C  6BF6               	clrf	246,b	;volatile
 25976                           
 25977                           ; BSR set to: 62
 25978                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25979  01848E  6BF7               	clrf	247,b	;volatile
 25980                           
 25981                           ; BSR set to: 62
 25982                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25983  018490  6BF9               	clrf	249,b	;volatile
 25984                           
 25985                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25986  018492  0E5B               	movlw	91
 25987  018494  6FFA               	movwf	250,b	;volatile
 25988                           
 25989                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25990  018496  0E27               	movlw	39
 25991  018498  6FFB               	movwf	251,b	;volatile
 25992                           
 25993                           ; BSR set to: 62
 25994                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25995  01849A  6BFC               	clrf	252,b	;volatile
 25996                           
 25997                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25998  01849C  0E02               	movlw	2
 25999  01849E  6FFD               	movwf	253,b	;volatile
 26000                           
 26001                           ; BSR set to: 62
 26002                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 26003  0184A0  6BFE               	clrf	254,b	;volatile
 26004                           
 26005                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 26006  0184A2  0E07               	movlw	7
 26007  0184A4  6FFF               	movwf	255,b	;volatile
 26008                           
 26009                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 26010  0184A6  0E84               	movlw	132
 26011  0184A8  6FF8               	movwf	248,b	;volatile
 26012                           
 26013                           ; BSR set to: 62
 26014                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 26015  0184AA  0139               	movlb	57	; () banked
 26016  0184AC  95A1               	bcf	161,2,b	;volatile
 26017                           
 26018                           ; BSR set to: 57
 26019                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 26020  0184AE  8591               	bsf	145,2,b	;volatile
 26021                           
 26022                           ; BSR set to: 57
 26023                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 26024  0184B0  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 26025  0184B2  6EE6               	movwf	postinc1,c
 26026  0184B4  0E96               	movlw	high _ADCC_DefaultInterruptHandler
 26027  0184B6  6EE6               	movwf	postinc1,c
 26028  0184B8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26029  0184BA  6EE6               	movwf	postinc1,c
 26030  0184BC  EC1F  F0C9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 26031                           
 26032                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 26033  0184C0  0139               	movlb	57	; () banked
 26034  0184C2  97A1               	bcf	161,3,b	;volatile
 26035                           
 26036                           ; BSR set to: 57
 26037                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 26038  0184C4  8791               	bsf	145,3,b	;volatile
 26039                           
 26040                           ; BSR set to: 57
 26041                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 26042  0184C6  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 26043  0184C8  6EE6               	movwf	postinc1,c
 26044  0184CA  0E96               	movlw	high _ADCC_DefaultInterruptHandler
 26045  0184CC  6EE6               	movwf	postinc1,c
 26046  0184CE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26047  0184D0  6EE6               	movwf	postinc1,c
 26048  0184D2  EC0B  F0C9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26049                           
 26050                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26051  0184D6  0012               	return		;funcret
 26052  0184D8                     __end_of_ADCC_Initialize:
 26053                           	opt callstack 0
 26054                           
 26055 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26056 ;; Defined at:
 26057 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26058 ;; Parameters:    Size  Location     Type
 26059 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26060 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26061 ;; Auto vars:     Size  Location     Type
 26062 ;;		None
 26063 ;; Return value:  Size  Location     Type
 26064 ;;                  1  [STACK] void 
 26065 ;; Registers used:
 26066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26067 ;; Tracked objects:
 26068 ;;		On entry : 0/0
 26069 ;;		On exit  : 0/0
 26070 ;;		Unchanged: 0/0
 26071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26076 ;;Total ram usage:        0 bytes
 26077 ;; Hardware stack levels used:    1
 26078 ;; Hardware stack levels required when called:    7
 26079 ;; This function calls:
 26080 ;;		Nothing
 26081 ;; This function is called by:
 26082 ;;		_ADCC_Initialize
 26083 ;;		_start_adc_scan
 26084 ;; This function uses a reentrant model
 26085 ;;
 26086                           
 26087                           	psect	text123
 26088  019216                     __ptext123:
 26089                           	opt callstack 0
 26090  019216                     _ADCC_SetADTIInterruptHandler:
 26091                           	opt callstack 22
 26092                           
 26093                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26094                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26095                           
 26096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26097                           ;incstack = 0
 26098  019216  50E1               	movf	fsr1l,w,c
 26099  019218  0FFD               	addlw	-3
 26100  01921A  6ED9               	movwf	fsr2l,c
 26101  01921C  50E2               	movf	fsr1h,w,c
 26102  01921E  6EDA               	movwf	fsr2h,c
 26103  019220  0EFF               	movlw	255
 26104  019222  22DA               	addwfc	fsr2h,f,c
 26105  019224  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26106  01922A  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26107  019230  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26108                           
 26109                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26110  019236  52E5               	movf	postdec1,f,c
 26111  019238  52E5               	movf	postdec1,f,c
 26112  01923A  52E5               	movf	postdec1,f,c
 26113  01923C  0012               	return		;funcret
 26114  01923E                     __end_of_ADCC_SetADTIInterruptHandler:
 26115                           	opt callstack 0
 26116                           
 26117 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26118 ;; Defined at:
 26119 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26120 ;; Parameters:    Size  Location     Type
 26121 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26122 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26123 ;; Auto vars:     Size  Location     Type
 26124 ;;		None
 26125 ;; Return value:  Size  Location     Type
 26126 ;;                  1  [STACK] void 
 26127 ;; Registers used:
 26128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26129 ;; Tracked objects:
 26130 ;;		On entry : 6/0
 26131 ;;		On exit  : 0/0
 26132 ;;		Unchanged: 0/0
 26133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26138 ;;Total ram usage:        0 bytes
 26139 ;; Hardware stack levels used:    1
 26140 ;; Hardware stack levels required when called:    7
 26141 ;; This function calls:
 26142 ;;		Nothing
 26143 ;; This function is called by:
 26144 ;;		_ADCC_Initialize
 26145 ;;		_start_adc_scan
 26146 ;; This function uses a reentrant model
 26147 ;;
 26148                           
 26149                           	psect	text124
 26150  01923E                     __ptext124:
 26151                           	opt callstack 0
 26152  01923E                     _ADCC_SetADIInterruptHandler:
 26153                           	opt callstack 22
 26154                           
 26155                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26156                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26157                           
 26158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26159                           ;incstack = 0
 26160  01923E  50E1               	movf	fsr1l,w,c
 26161  019240  0FFD               	addlw	-3
 26162  019242  6ED9               	movwf	fsr2l,c
 26163  019244  50E2               	movf	fsr1h,w,c
 26164  019246  6EDA               	movwf	fsr2h,c
 26165  019248  0EFF               	movlw	255
 26166  01924A  22DA               	addwfc	fsr2h,f,c
 26167  01924C  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26168  019252  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26169  019258  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26170                           
 26171                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26172  01925E  52E5               	movf	postdec1,f,c
 26173  019260  52E5               	movf	postdec1,f,c
 26174  019262  52E5               	movf	postdec1,f,c
 26175  019264  0012               	return		;funcret
 26176  019266                     __end_of_ADCC_SetADIInterruptHandler:
 26177                           	opt callstack 0
 26178                           
 26179 ;; *************** function _INT1_ISR *****************
 26180 ;; Defined at:
 26181 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26182 ;; Parameters:    Size  Location     Type
 26183 ;;		None
 26184 ;; Auto vars:     Size  Location     Type
 26185 ;;		None
 26186 ;; Return value:  Size  Location     Type
 26187 ;;                  1    wreg      void 
 26188 ;; Registers used:
 26189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26190 ;; Tracked objects:
 26191 ;;		On entry : 0/0
 26192 ;;		On exit  : 0/0
 26193 ;;		Unchanged: 0/0
 26194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26199 ;;Total ram usage:        4 bytes
 26200 ;; Hardware stack levels used:    1
 26201 ;; Hardware stack levels required when called:    5
 26202 ;; This function calls:
 26203 ;;		_INT1_CallBack
 26204 ;; This function is called by:
 26205 ;;		Interrupt level 1
 26206 ;; This function uses a non-reentrant model
 26207 ;;
 26208                           
 26209                           	psect	text125
 26210  018CC4                     __ptext125:
 26211                           	opt callstack 0
 26212  018CC4                     _INT1_ISR:
 26213                           	opt callstack 12
 26214                           
 26215                           ;incstack = 0
 26216  018CC4  006F FF60  F04B    	movff	status,??_INT1_ISR
 26217  018CCA  0060  F094  F04C   	movff	btemp,??_INT1_ISR+1
 26218  018CD0  0060  F0BC  F04D   	movff	btemp+10,??_INT1_ISR+2
 26219  018CD6  0060  F0C0  F04E   	movff	btemp+11,??_INT1_ISR+3
 26220  018CDC  EE16  F00B         	lfsr	1,___intlo_sp
 26221                           
 26222                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26223  018CE0  0139               	movlb	57	; () banked
 26224  018CE2  91A5               	bcf	165,0,b	;volatile
 26225                           
 26226                           ; BSR set to: 57
 26227                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26228  018CE4  ECF0  F0C9         	call	_INT1_CallBack	;wreg free
 26229  018CE8  0060  F138  F030   	movff	??_INT1_ISR+3,btemp+11
 26230  018CEE  0060  F134  F02F   	movff	??_INT1_ISR+2,btemp+10
 26231  018CF4  0060  F130  F025   	movff	??_INT1_ISR+1,btemp
 26232  018CFA  0060  F12F  FFD8   	movff	??_INT1_ISR,status
 26233  018D00  0011               	retfie		f
 26234  018D02                     __end_of_INT1_ISR:
 26235                           	opt callstack 0
 26236                           
 26237 ;; *************** function _INT1_CallBack *****************
 26238 ;; Defined at:
 26239 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26240 ;; Parameters:    Size  Location     Type
 26241 ;;		None
 26242 ;; Auto vars:     Size  Location     Type
 26243 ;;		None
 26244 ;; Return value:  Size  Location     Type
 26245 ;;                  1  [STACK] void 
 26246 ;; Registers used:
 26247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26248 ;; Tracked objects:
 26249 ;;		On entry : 3F/39
 26250 ;;		On exit  : 0/0
 26251 ;;		Unchanged: 0/0
 26252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26257 ;;Total ram usage:        0 bytes
 26258 ;; Hardware stack levels used:    1
 26259 ;; Hardware stack levels required when called:    4
 26260 ;; This function calls:
 26261 ;;		Absolute function
 26262 ;;		_INT1_DefaultInterruptHandler
 26263 ;;		_switch_handler
 26264 ;; This function is called by:
 26265 ;;		_INT1_ISR
 26266 ;; This function uses a reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text126
 26270  0193E0                     __ptext126:
 26271                           	opt callstack 0
 26272  0193E0                     _INT1_CallBack:
 26273                           	opt callstack 12
 26274                           
 26275                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26276                           
 26277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26278                           ;incstack = 0
 26279  0193E0  5004               	movf	_INT1_InterruptHandler^0,w,c
 26280  0193E2  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 26281  0193E4  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 26282  0193E6  B4D8               	btfsc	status,2,c
 26283  0193E8  0012               	return	
 26284                           
 26285                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26286  0193EA  D801               	call	u869_28
 26287  0193EC  0012               	return	
 26288  0193EE                     u869_28:
 26289  0193EE  0005               	push	
 26290  0193F0  6EFA               	movwf	pclath,c
 26291  0193F2  5004               	movf	_INT1_InterruptHandler^0,w,c
 26292  0193F4  6EFD               	movwf	tosl,c
 26293  0193F6  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 26294  0193F8  6EFE               	movwf	tosh,c
 26295  0193FA  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 26296  0193FC  6EFF               	movwf	tosu,c
 26297  0193FE  50FA               	movf	pclath,w,c
 26298  019400  0012               	return		;indir
 26299  019402                     __end_of_INT1_CallBack:
 26300                           	opt callstack 0
 26301                           
 26302 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26303 ;; Defined at:
 26304 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26305 ;; Parameters:    Size  Location     Type
 26306 ;;		None
 26307 ;; Auto vars:     Size  Location     Type
 26308 ;;		None
 26309 ;; Return value:  Size  Location     Type
 26310 ;;                  1  [STACK] void 
 26311 ;; Registers used:
 26312 ;;		None
 26313 ;; Tracked objects:
 26314 ;;		On entry : 0/39
 26315 ;;		On exit  : 0/0
 26316 ;;		Unchanged: 0/0
 26317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26322 ;;Total ram usage:        0 bytes
 26323 ;; Hardware stack levels used:    1
 26324 ;; Hardware stack levels required when called:    3
 26325 ;; This function calls:
 26326 ;;		Nothing
 26327 ;; This function is called by:
 26328 ;;		_EXT_INT_Initialize
 26329 ;;		_INT1_CallBack
 26330 ;; This function uses a reentrant model
 26331 ;;
 26332                           
 26333                           	psect	text127
 26334  0196B2                     __ptext127:
 26335                           	opt callstack 0
 26336  0196B2                     _INT1_DefaultInterruptHandler:
 26337                           	opt callstack 12
 26338                           
 26339                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26340                           
 26341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26342                           ;incstack = 0
 26343  0196B2  0012               	return		;funcret
 26344  0196B4                     __end_of_INT1_DefaultInterruptHandler:
 26345                           	opt callstack 0
 26346                           
 26347 ;; *************** function _switch_handler *****************
 26348 ;; Defined at:
 26349 ;;		line 58 in file "dio.c"
 26350 ;; Parameters:    Size  Location     Type
 26351 ;;		None
 26352 ;; Auto vars:     Size  Location     Type
 26353 ;;  i               1  [STACK] unsigned char 
 26354 ;;  sw_value        1  [STACK] unsigned char 
 26355 ;; Return value:  Size  Location     Type
 26356 ;;                  1  [STACK] void 
 26357 ;; Registers used:
 26358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26359 ;; Tracked objects:
 26360 ;;		On entry : 0/39
 26361 ;;		On exit  : 0/0
 26362 ;;		Unchanged: 0/0
 26363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26368 ;;Total ram usage:        0 bytes
 26369 ;; Hardware stack levels used:    1
 26370 ;; Hardware stack levels required when called:    3
 26371 ;; This function calls:
 26372 ;;		Nothing
 26373 ;; This function is called by:
 26374 ;;		_start_switch_handler
 26375 ;;		_INT1_CallBack
 26376 ;; This function uses a reentrant model
 26377 ;;
 26378                           
 26379                           	psect	text128
 26380  016F00                     __ptext128:
 26381                           	opt callstack 0
 26382  016F00                     _switch_handler:
 26383                           	opt callstack 0
 26384                           
 26385                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26386  016F00  52E6               	movf	postinc1,f,c
 26387  016F02  52E6               	movf	postinc1,f,c
 26388                           
 26389                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26390                           ;stkvar	_i @ sp[(-2)+0]
 26391                           
 26392                           ;incstack = 0
 26393  016F04  0EFE               	movlw	-2
 26394  016F06  6AE3               	clrf	plusw1,c
 26395  016F08  9EBD               	bcf	189,7,c	;volatile
 26396                           
 26397                           ;dio.c: 72:  __nop();
 26398  016F0A  F000               	nop	
 26399                           
 26400                           ;dio.c: 73:  __nop();
 26401  016F0C  F000               	nop	
 26402                           
 26403                           ;dio.c: 74:  __nop();
 26404  016F0E  F000               	nop	
 26405  016F10  D019               	goto	l9178
 26406  016F12                     l9166:
 26407                           
 26408                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26409  016F12  A6CF               	btfss	207,3,c	;volatile
 26410  016F14  D011               	goto	u850_20
 26411  016F16  D00D               	goto	u850_21
 26412  016F18                     u847_28:
 26413                           
 26414                           ;stkvar	_sw_value @ sp[(-2)+1]
 26415  016F18  0EFF               	movlw	-1
 26416  016F1A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 26417                           
 26418                           ;dio.c: 80:    break;
 26419  016F20  D027               	goto	l9180
 26420  016F22                     l9168:
 26421                           
 26422                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26423  016F22  A4CF               	btfss	207,2,c	;volatile
 26424  016F24  D009               	goto	u850_20
 26425  016F26  D005               	goto	u850_21
 26426  016F28                     l9170:
 26427                           
 26428                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26429  016F28  A2CF               	btfss	207,1,c	;volatile
 26430  016F2A  D006               	goto	u850_20
 26431  016F2C  D002               	goto	u850_21
 26432  016F2E                     l9172:
 26433                           
 26434                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26435  016F2E  A0CF               	btfss	207,0,c	;volatile
 26436  016F30  D003               	goto	u850_20
 26437  016F32                     u850_21:
 26438  016F32  6A30               	clrf	(btemp+11)^0,c
 26439  016F34  2A30               	incf	(btemp+11)^0,f,c
 26440  016F36  D7F0               	goto	u847_28
 26441  016F38                     u850_20:
 26442  016F38  6A30               	clrf	(btemp+11)^0,c
 26443  016F3A  D7EE               	goto	u847_28
 26444  016F3C                     l9174:
 26445                           
 26446                           ;dio.c: 91:    sw_value = 1;
 26447                           ;stkvar	_sw_value @ sp[(-2)+1]
 26448  016F3C  0EFF               	movlw	-1
 26449  016F3E  6AE3               	clrf	plusw1,c
 26450  016F40  2AE3               	incf	plusw1,f,c
 26451                           
 26452                           ;dio.c: 92:    break;
 26453  016F42  D016               	goto	l9180
 26454  016F44                     l9178:
 26455                           
 26456                           ;stkvar	_i @ sp[(-2)+0]
 26457  016F44  0EFE               	movlw	-2
 26458  016F46  50E3               	movf	plusw1,w,c
 26459  016F48  6E2F               	movwf	(btemp+10)^0,c
 26460  016F4A  6A30               	clrf	(btemp+11)^0,c
 26461                           
 26462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26463                           ; Switch size 1, requested type "simple"
 26464                           ; Number of cases is 1, Range of values is 0 to 0
 26465                           ; switch strategies available:
 26466                           ; Name         Instructions Cycles
 26467                           ; simple_byte            4     3 (average)
 26468                           ;	Chosen strategy is simple_byte
 26469  016F4C  5030               	movf	(btemp+11)^0,w,c
 26470  016F4E  0A00               	xorlw	0	; case 0
 26471  016F50  A4D8               	btfss	status,2,c
 26472  016F52  D7F4               	goto	l9174
 26473                           
 26474                           ; Switch size 1, requested type "simple"
 26475                           ; Number of cases is 4, Range of values is 0 to 3
 26476                           ; switch strategies available:
 26477                           ; Name         Instructions Cycles
 26478                           ; simple_byte           13     7 (average)
 26479                           ;	Chosen strategy is simple_byte
 26480  016F54  502F               	movf	(btemp+10)^0,w,c
 26481  016F56  0A00               	xorlw	0	; case 0
 26482  016F58  B4D8               	btfsc	status,2,c
 26483  016F5A  D7E9               	goto	l9172
 26484  016F5C  0A01               	xorlw	1	; case 1
 26485  016F5E  B4D8               	btfsc	status,2,c
 26486  016F60  D7E3               	goto	l9170
 26487  016F62  0A03               	xorlw	3	; case 2
 26488  016F64  B4D8               	btfsc	status,2,c
 26489  016F66  D7DD               	goto	l9168
 26490  016F68  0A01               	xorlw	1	; case 3
 26491  016F6A  B4D8               	btfsc	status,2,c
 26492  016F6C  D7D2               	goto	l9166
 26493  016F6E  D7E6               	goto	l9174
 26494  016F70                     l9180:
 26495                           
 26496                           ;dio.c: 96:   if (sw_value) {
 26497                           ;stkvar	_sw_value @ sp[(-2)+1]
 26498  016F70  0EFF               	movlw	-1
 26499  016F72  50E3               	movf	plusw1,w,c
 26500  016F74  B4D8               	btfsc	status,2,c
 26501  016F76  D014               	goto	l9186
 26502                           
 26503                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26504                           ;stkvar	_i @ sp[(-2)+0]
 26505  016F78  0EFE               	movlw	-2
 26506  016F7A  50E3               	movf	plusw1,w,c
 26507  016F7C  0D05               	mullw	5
 26508  016F7E  50F3               	movf	243,w,c
 26509  016F80  0F60               	addlw	low _S
 26510  016F82  6ED9               	movwf	fsr2l,c
 26511  016F84  6ADA               	clrf	fsr2h,c
 26512  016F86  04DE               	decf	postinc2,w,c
 26513  016F88  A4D8               	btfss	status,2,c
 26514  016F8A  D041               	goto	l9194
 26515                           
 26516                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26517                           ;stkvar	_i @ sp[(-2)+0]
 26518  016F8C  0EFE               	movlw	-2
 26519  016F8E  50E3               	movf	plusw1,w,c
 26520  016F90  0D05               	mullw	5
 26521  016F92  50F3               	movf	243,w,c
 26522  016F94  0F60               	addlw	low _S
 26523  016F96  6ED9               	movwf	fsr2l,c
 26524  016F98  6ADA               	clrf	fsr2h,c
 26525  016F9A  0E00               	movlw	0
 26526  016F9C  6EDF               	movwf	indf2,c
 26527  016F9E  D037               	goto	l9194
 26528  016FA0                     l9186:
 26529                           
 26530                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26531                           ;stkvar	_i @ sp[(-2)+0]
 26532  016FA0  0EFE               	movlw	-2
 26533  016FA2  50E3               	movf	plusw1,w,c
 26534  016FA4  0D05               	mullw	5
 26535  016FA6  50F3               	movf	243,w,c
 26536  016FA8  0F60               	addlw	low _S
 26537  016FAA  6ED9               	movwf	fsr2l,c
 26538  016FAC  6ADA               	clrf	fsr2h,c
 26539  016FAE  50DF               	movf	indf2,w,c
 26540  016FB0  A4D8               	btfss	status,2,c
 26541  016FB2  D02D               	goto	l9194
 26542                           
 26543                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26544                           ;stkvar	_i @ sp[(-2)+0]
 26545  016FB4  0EFE               	movlw	-2
 26546  016FB6  50E3               	movf	plusw1,w,c
 26547  016FB8  0D05               	mullw	5
 26548  016FBA  50F3               	movf	243,w,c
 26549  016FBC  0F60               	addlw	low _S
 26550  016FBE  6ED9               	movwf	fsr2l,c
 26551  016FC0  6ADA               	clrf	fsr2h,c
 26552  016FC2  0E01               	movlw	1
 26553  016FC4  6EDF               	movwf	indf2,c
 26554                           
 26555                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26556  016FC6  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26557                           
 26558                           ;stkvar	_i @ sp[(-2)+0]
 26559  016FCA  0EFE               	movlw	-2
 26560  016FCC  50E3               	movf	plusw1,w,c
 26561  016FCE  0D05               	mullw	5
 26562  016FD0  50F3               	movf	243,w,c
 26563  016FD2  0F61               	addlw	low (_S+1)
 26564  016FD4  6EE9               	movwf	fsr0l,c
 26565  016FD6  6AEA               	clrf	fsr0h,c
 26566  016FD8  006F FF7B FFEE     	movff	postinc2,postinc0
 26567  016FDE  006F FF7B FFEE     	movff	postinc2,postinc0
 26568  016FE4  006F FF7B FFEE     	movff	postinc2,postinc0
 26569  016FEA  006F FF7B FFEE     	movff	postinc2,postinc0
 26570                           
 26571                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26572                           ;stkvar	_i @ sp[(-2)+0]
 26573  016FF0  0EFE               	movlw	-2
 26574  016FF2  006F FF8C  F030    	movff	plusw1,btemp+11
 26575  016FF8  0E01               	movlw	1
 26576  016FFA  6E2F               	movwf	(btemp+10)^0,c
 26577  016FFC  2A30               	incf	(btemp+11)^0,f,c
 26578  016FFE  D002               	goto	u854_24
 26579  017000                     u854_25:
 26580  017000  90D8               	bcf	status,0,c
 26581  017002  362F               	rlcf	(btemp+10)^0,f,c
 26582  017004                     u854_24:
 26583  017004  2E30               	decfsz	(btemp+11)^0,f,c
 26584  017006  D7FC               	goto	u854_25
 26585  017008  502F               	movf	(btemp+10)^0,w,c
 26586  01700A  0100               	movlb	0	; () banked
 26587  01700C  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26588  01700E                     l9194:
 26589                           
 26590                           ;dio.c: 107:  } while (++i < 4);
 26591                           ;stkvar	_i @ sp[(-2)+0]
 26592  01700E  0EFE               	movlw	-2
 26593  017010  2AE3               	incf	plusw1,f,c
 26594  017012  0EFE               	movlw	-2
 26595  017014  006F FF8C  F025    	movff	plusw1,btemp
 26596  01701A  0E03               	movlw	3
 26597  01701C  6425               	cpfsgt	btemp^0,c
 26598  01701E  D792               	goto	l9178
 26599                           
 26600                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 26601  017020  8EBD               	bsf	189,7,c	;volatile
 26602                           
 26603                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26604  017022  52E5               	movf	postdec1,f,c
 26605  017024  52E5               	movf	postdec1,f,c
 26606  017026  0012               	return		;funcret
 26607  017028                     __end_of_switch_handler:
 26608                           	opt callstack 0
 26609                           
 26610 ;; *************** function _TMR5_ISR *****************
 26611 ;; Defined at:
 26612 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26613 ;; Parameters:    Size  Location     Type
 26614 ;;		None
 26615 ;; Auto vars:     Size  Location     Type
 26616 ;;		None
 26617 ;; Return value:  Size  Location     Type
 26618 ;;                  1    wreg      void 
 26619 ;; Registers used:
 26620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26621 ;; Tracked objects:
 26622 ;;		On entry : 0/0
 26623 ;;		On exit  : 0/0
 26624 ;;		Unchanged: 0/0
 26625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26630 ;;Total ram usage:        4 bytes
 26631 ;; Hardware stack levels used:    1
 26632 ;; Hardware stack levels required when called:    5
 26633 ;; This function calls:
 26634 ;;		_TMR5_CallBack
 26635 ;;		_TMR5_WriteTimer
 26636 ;; This function is called by:
 26637 ;;		Interrupt level 1
 26638 ;; This function uses a non-reentrant model
 26639 ;;
 26640                           
 26641                           	psect	text129
 26642  018848                     __ptext129:
 26643                           	opt callstack 0
 26644  018848                     _TMR5_ISR:
 26645                           	opt callstack 12
 26646                           
 26647                           ;incstack = 0
 26648  018848  006F FF60  F051    	movff	status,??_TMR5_ISR+2
 26649  01884E  0060  F0C0  F052   	movff	btemp+11,??_TMR5_ISR+3
 26650  018854  EE16  F00B         	lfsr	1,___intlo_sp
 26651                           
 26652                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26653  018858  0139               	movlb	57	; () banked
 26654  01885A  9DA8               	bcf	168,6,b	;volatile
 26655                           
 26656                           ; BSR set to: 57
 26657                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26658  01885C  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 26659  018862  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26660  018868  EC22  F0C6         	call	_TMR5_WriteTimer	;wreg free
 26661                           
 26662                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26663  01886C  0102               	movlb	2	; () banked
 26664  01886E  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26665  018870  6E4F               	movwf	??_TMR5_ISR^0,c
 26666  018872  6A50               	clrf	(??_TMR5_ISR+1)^0,c
 26667  018874  0E05               	movlw	5
 26668  018876  264F               	addwf	??_TMR5_ISR^0,f,c
 26669  018878  0E00               	movlw	0
 26670  01887A  2250               	addwfc	(??_TMR5_ISR+1)^0,f,c
 26671  01887C  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26672  01887E  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26673  018880  504F               	movf	??_TMR5_ISR^0,w,c
 26674  018882  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26675  018884  5050               	movf	(??_TMR5_ISR+1)^0,w,c
 26676  018886  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26677  018888  A0D8               	btfss	status,0,c
 26678  01888A  D004               	goto	i1l1047
 26679                           
 26680                           ; BSR set to: 2
 26681                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26682  01888C  ECA9  F0C9         	call	_TMR5_CallBack	;wreg free
 26683                           
 26684                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26685  018890  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26686  018892  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26687  018894                     i1l1047:
 26688  018894  0060  F148  F030   	movff	??_TMR5_ISR+3,btemp+11
 26689  01889A  0060  F147  FFD8   	movff	??_TMR5_ISR+2,status
 26690  0188A0  0011               	retfie		f
 26691  0188A2                     __end_of_TMR5_ISR:
 26692                           	opt callstack 0
 26693                           
 26694 ;; *************** function _TMR5_WriteTimer *****************
 26695 ;; Defined at:
 26696 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26697 ;; Parameters:    Size  Location     Type
 26698 ;;  timerVal        2  [STACK] unsigned short 
 26699 ;; Auto vars:     Size  Location     Type
 26700 ;;		None
 26701 ;; Return value:  Size  Location     Type
 26702 ;;                  1  [STACK] void 
 26703 ;; Registers used:
 26704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26705 ;; Tracked objects:
 26706 ;;		On entry : 3F/39
 26707 ;;		On exit  : 0/0
 26708 ;;		Unchanged: 0/0
 26709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26714 ;;Total ram usage:        0 bytes
 26715 ;; Hardware stack levels used:    1
 26716 ;; Hardware stack levels required when called:    3
 26717 ;; This function calls:
 26718 ;;		Nothing
 26719 ;; This function is called by:
 26720 ;;		_TMR5_ISR
 26721 ;; This function uses a reentrant model
 26722 ;;
 26723                           
 26724                           	psect	text130
 26725  018C44                     __ptext130:
 26726                           	opt callstack 0
 26727  018C44                     _TMR5_WriteTimer:
 26728                           	opt callstack 13
 26729                           
 26730                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26731                           
 26732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26733                           ;incstack = 0
 26734  018C44  A49A               	btfss	154,2,c	;volatile
 26735  018C46  D00F               	goto	l9352
 26736                           
 26737                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26738  018C48  909A               	bcf	154,0,c	;volatile
 26739                           
 26740                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26741                           ;stkvar	_timerVal @ sp[(0)+-2]
 26742  018C4A  0EFF               	movlw	255
 26743  018C4C  24E1               	addwf	fsr1l,w,c
 26744  018C4E  6ED9               	movwf	fsr2l,c
 26745  018C50  0EFF               	movlw	255
 26746  018C52  20E2               	addwfc	fsr1h,w,c
 26747  018C54  6EDA               	movwf	fsr2h,c
 26748  018C56  50DF               	movf	indf2,w,c
 26749  018C58  6E99               	movwf	153,c	;volatile
 26750                           
 26751                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26752                           ;stkvar	_timerVal @ sp[(0)+-2]
 26753  018C5A  0EFE               	movlw	-2
 26754  018C5C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26755                           
 26756                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26757  018C62  809A               	bsf	154,0,c	;volatile
 26758                           
 26759                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26760  018C64  D00C               	goto	l1030
 26761  018C66                     l9352:
 26762                           
 26763                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26764                           ;stkvar	_timerVal @ sp[(0)+-2]
 26765  018C66  0EFF               	movlw	255
 26766  018C68  24E1               	addwf	fsr1l,w,c
 26767  018C6A  6ED9               	movwf	fsr2l,c
 26768  018C6C  0EFF               	movlw	255
 26769  018C6E  20E2               	addwfc	fsr1h,w,c
 26770  018C70  6EDA               	movwf	fsr2h,c
 26771  018C72  50DF               	movf	indf2,w,c
 26772  018C74  6E99               	movwf	153,c	;volatile
 26773                           
 26774                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26775                           ;stkvar	_timerVal @ sp[(0)+-2]
 26776  018C76  0EFE               	movlw	-2
 26777  018C78  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26778  018C7E                     l1030:
 26779                           
 26780                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26781  018C7E  52E5               	movf	postdec1,f,c
 26782  018C80  52E5               	movf	postdec1,f,c
 26783  018C82  0012               	return		;funcret
 26784  018C84                     __end_of_TMR5_WriteTimer:
 26785                           	opt callstack 0
 26786                           
 26787 ;; *************** function _TMR5_CallBack *****************
 26788 ;; Defined at:
 26789 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26790 ;; Parameters:    Size  Location     Type
 26791 ;;		None
 26792 ;; Auto vars:     Size  Location     Type
 26793 ;;		None
 26794 ;; Return value:  Size  Location     Type
 26795 ;;                  1  [STACK] void 
 26796 ;; Registers used:
 26797 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26798 ;; Tracked objects:
 26799 ;;		On entry : 3F/2
 26800 ;;		On exit  : 0/0
 26801 ;;		Unchanged: 0/0
 26802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26807 ;;Total ram usage:        0 bytes
 26808 ;; Hardware stack levels used:    1
 26809 ;; Hardware stack levels required when called:    4
 26810 ;; This function calls:
 26811 ;;		Absolute function
 26812 ;;		_TMR5_DefaultInterruptHandler
 26813 ;; This function is called by:
 26814 ;;		_TMR5_ISR
 26815 ;; This function uses a reentrant model
 26816 ;;
 26817                           
 26818                           	psect	text131
 26819  019352                     __ptext131:
 26820                           	opt callstack 0
 26821  019352                     _TMR5_CallBack:
 26822                           	opt callstack 12
 26823                           
 26824                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26825                           
 26826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26827                           ;incstack = 0
 26828  019352  0100               	movlb	0	; () banked
 26829  019354  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26830  019356  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26831  019358  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26832  01935A  B4D8               	btfsc	status,2,c
 26833  01935C  0012               	return	
 26834                           
 26835                           ; BSR set to: 0
 26836                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26837  01935E  D801               	call	u880_28
 26838  019360  0012               	return	
 26839  019362                     u880_28:
 26840  019362  0005               	push	
 26841  019364  6EFA               	movwf	pclath,c
 26842  019366  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26843  019368  6EFD               	movwf	tosl,c
 26844  01936A  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26845  01936C  6EFE               	movwf	tosh,c
 26846  01936E  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26847  019370  6EFF               	movwf	tosu,c
 26848  019372  50FA               	movf	pclath,w,c
 26849  019374  0012               	return		;indir
 26850  019376                     __end_of_TMR5_CallBack:
 26851                           	opt callstack 0
 26852                           
 26853 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26854 ;; Defined at:
 26855 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26856 ;; Parameters:    Size  Location     Type
 26857 ;;		None
 26858 ;; Auto vars:     Size  Location     Type
 26859 ;;		None
 26860 ;; Return value:  Size  Location     Type
 26861 ;;                  1  [STACK] void 
 26862 ;; Registers used:
 26863 ;;		wreg, status,2, status,0, btemp+11
 26864 ;; Tracked objects:
 26865 ;;		On entry : 3F/0
 26866 ;;		On exit  : 3F/2
 26867 ;;		Unchanged: 0/0
 26868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26873 ;;Total ram usage:        0 bytes
 26874 ;; Hardware stack levels used:    1
 26875 ;; Hardware stack levels required when called:    3
 26876 ;; This function calls:
 26877 ;;		Nothing
 26878 ;; This function is called by:
 26879 ;;		_TMR5_Initialize
 26880 ;;		_TMR5_CallBack
 26881 ;; This function uses a reentrant model
 26882 ;;
 26883                           
 26884                           	psect	text132
 26885  019266                     __ptext132:
 26886                           	opt callstack 0
 26887  019266                     _TMR5_DefaultInterruptHandler:
 26888                           	opt callstack 12
 26889                           
 26890                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26891                           
 26892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26893                           ;incstack = 0
 26894  019266  A0BE               	btfss	190,0,c	;volatile
 26895  019268  D002               	goto	u824_20
 26896  01926A  0E01               	movlw	1
 26897  01926C  D001               	goto	u824_26
 26898  01926E                     u824_20:
 26899  01926E  0E00               	movlw	0
 26900  019270                     u824_26:
 26901  019270  0AFF               	xorlw	255
 26902  019272  6E30               	movwf	(btemp+11)^0,c
 26903  019274  50BE               	movf	190,w,c	;volatile
 26904  019276  1830               	xorwf	(btemp+11)^0,w,c
 26905  019278  0BFE               	andlw	-2
 26906  01927A  1830               	xorwf	(btemp+11)^0,w,c
 26907  01927C  6EBE               	movwf	190,c	;volatile
 26908                           
 26909                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26910  01927E  0E01               	movlw	1
 26911  019280  0102               	movlb	2	; () banked
 26912  019282  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26913  019284  0E00               	movlw	0
 26914  019286  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26915  019288  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26916  01928A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26917                           
 26918                           ; BSR set to: 2
 26919                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26920  01928C  0012               	return		;funcret
 26921  01928E                     __end_of_TMR5_DefaultInterruptHandler:
 26922                           	opt callstack 0
 26923                           
 26924 ;; *************** function _TMR3_ISR *****************
 26925 ;; Defined at:
 26926 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 26927 ;; Parameters:    Size  Location     Type
 26928 ;;		None
 26929 ;; Auto vars:     Size  Location     Type
 26930 ;;		None
 26931 ;; Return value:  Size  Location     Type
 26932 ;;                  1    wreg      void 
 26933 ;; Registers used:
 26934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 26935 ;; Tracked objects:
 26936 ;;		On entry : 0/0
 26937 ;;		On exit  : 0/0
 26938 ;;		Unchanged: 0/0
 26939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26942 ;;      Temps:          0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26943 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26944 ;;Total ram usage:       13 bytes
 26945 ;; Hardware stack levels used:    1
 26946 ;; Hardware stack levels required when called:    6
 26947 ;; This function calls:
 26948 ;;		_TMR3_CallBack
 26949 ;;		_TMR3_WriteTimer
 26950 ;; This function is called by:
 26951 ;;		Interrupt level 1
 26952 ;; This function uses a non-reentrant model
 26953 ;;
 26954                           
 26955                           	psect	text133
 26956  017950                     __ptext133:
 26957                           	opt callstack 0
 26958  017950                     _TMR3_ISR:
 26959                           	opt callstack 11
 26960                           
 26961                           ; BSR set to: 2
 26962                           ;incstack = 0
 26963  017950  006F FF60  F1D5    	movff	status,??_TMR3_ISR
 26964  017956  0060  F094  F1D6   	movff	btemp,??_TMR3_ISR+1
 26965  01795C  0060  F098  F1D7   	movff	btemp+1,??_TMR3_ISR+2
 26966  017962  0060  F09C  F1D8   	movff	btemp+2,??_TMR3_ISR+3
 26967  017968  0060  F0A0  F1D9   	movff	btemp+3,??_TMR3_ISR+4
 26968  01796E  0060  F0A4  F1DA   	movff	btemp+4,??_TMR3_ISR+5
 26969  017974  0060  F0A8  F1DB   	movff	btemp+5,??_TMR3_ISR+6
 26970  01797A  0060  F0AC  F1DC   	movff	btemp+6,??_TMR3_ISR+7
 26971  017980  0060  F0B0  F1DD   	movff	btemp+7,??_TMR3_ISR+8
 26972  017986  0060  F0B4  F1DE   	movff	btemp+8,??_TMR3_ISR+9
 26973  01798C  0060  F0B8  F1DF   	movff	btemp+9,??_TMR3_ISR+10
 26974  017992  0060  F0BC  F1E0   	movff	btemp+10,??_TMR3_ISR+11
 26975  017998  0060  F0C0  F1E1   	movff	btemp+11,??_TMR3_ISR+12
 26976  01799E  EE16  F00B         	lfsr	1,___intlo_sp
 26977                           
 26978                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 26979  0179A2  0139               	movlb	57	; () banked
 26980  0179A4  9DA6               	bcf	166,6,b	;volatile
 26981                           
 26982                           ; BSR set to: 57
 26983                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 26984  0179A6  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 26985  0179AC  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 26986  0179B2  EC42  F0C6         	call	_TMR3_WriteTimer	;wreg free
 26987                           
 26988                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 26989  0179B6  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 26990  0179B8  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 26991  0179BA  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 26992  0179BC  E104               	bnz	i1u1081_20
 26993  0179BE  0E28               	movlw	40
 26994  0179C0  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 26995  0179C2  A0D8               	btfss	status,0,c
 26996  0179C4  D004               	goto	i1l1235
 26997  0179C6                     i1u1081_20:
 26998                           
 26999                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 27000  0179C6  ECBB  F0C9         	call	_TMR3_CallBack	;wreg free
 27001                           
 27002                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 27003  0179CA  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 27004  0179CC  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 27005  0179CE                     i1l1235:
 27006  0179CE  0060  F784  F030   	movff	??_TMR3_ISR+12,btemp+11
 27007  0179D4  0060  F780  F02F   	movff	??_TMR3_ISR+11,btemp+10
 27008  0179DA  0060  F77C  F02E   	movff	??_TMR3_ISR+10,btemp+9
 27009  0179E0  0060  F778  F02D   	movff	??_TMR3_ISR+9,btemp+8
 27010  0179E6  0060  F774  F02C   	movff	??_TMR3_ISR+8,btemp+7
 27011  0179EC  0060  F770  F02B   	movff	??_TMR3_ISR+7,btemp+6
 27012  0179F2  0060  F76C  F02A   	movff	??_TMR3_ISR+6,btemp+5
 27013  0179F8  0060  F768  F029   	movff	??_TMR3_ISR+5,btemp+4
 27014  0179FE  0060  F764  F028   	movff	??_TMR3_ISR+4,btemp+3
 27015  017A04  0060  F760  F027   	movff	??_TMR3_ISR+3,btemp+2
 27016  017A0A  0060  F75C  F026   	movff	??_TMR3_ISR+2,btemp+1
 27017  017A10  0060  F758  F025   	movff	??_TMR3_ISR+1,btemp
 27018  017A16  0060  F757  FFD8   	movff	??_TMR3_ISR,status
 27019  017A1C  0011               	retfie		f
 27020  017A1E                     __end_of_TMR3_ISR:
 27021                           	opt callstack 0
 27022                           
 27023 ;; *************** function _TMR3_WriteTimer *****************
 27024 ;; Defined at:
 27025 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 27026 ;; Parameters:    Size  Location     Type
 27027 ;;  timerVal        2  [STACK] unsigned short 
 27028 ;; Auto vars:     Size  Location     Type
 27029 ;;		None
 27030 ;; Return value:  Size  Location     Type
 27031 ;;                  1  [STACK] void 
 27032 ;; Registers used:
 27033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27034 ;; Tracked objects:
 27035 ;;		On entry : 3F/39
 27036 ;;		On exit  : 0/0
 27037 ;;		Unchanged: 0/0
 27038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27043 ;;Total ram usage:        0 bytes
 27044 ;; Hardware stack levels used:    1
 27045 ;; Hardware stack levels required when called:    3
 27046 ;; This function calls:
 27047 ;;		Nothing
 27048 ;; This function is called by:
 27049 ;;		_TMR3_ISR
 27050 ;; This function uses a reentrant model
 27051 ;;
 27052                           
 27053                           	psect	text134
 27054  018C84                     __ptext134:
 27055                           	opt callstack 0
 27056  018C84                     _TMR3_WriteTimer:
 27057                           	opt callstack 13
 27058                           
 27059                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27060                           
 27061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27062                           ;incstack = 0
 27063  018C84  A4A6               	btfss	166,2,c	;volatile
 27064  018C86  D00F               	goto	l5898
 27065                           
 27066                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27067  018C88  90A6               	bcf	166,0,c	;volatile
 27068                           
 27069                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27070                           ;stkvar	_timerVal @ sp[(0)+-2]
 27071  018C8A  0EFF               	movlw	255
 27072  018C8C  24E1               	addwf	fsr1l,w,c
 27073  018C8E  6ED9               	movwf	fsr2l,c
 27074  018C90  0EFF               	movlw	255
 27075  018C92  20E2               	addwfc	fsr1h,w,c
 27076  018C94  6EDA               	movwf	fsr2h,c
 27077  018C96  50DF               	movf	indf2,w,c
 27078  018C98  6EA5               	movwf	165,c	;volatile
 27079                           
 27080                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27081                           ;stkvar	_timerVal @ sp[(0)+-2]
 27082  018C9A  0EFE               	movlw	-2
 27083  018C9C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27084                           
 27085                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27086  018CA2  80A6               	bsf	166,0,c	;volatile
 27087                           
 27088                           ;mcc_generated_files/tmr3.c: 141:     }
 27089  018CA4  D00C               	goto	l1218
 27090  018CA6                     l5898:
 27091                           
 27092                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27093                           ;stkvar	_timerVal @ sp[(0)+-2]
 27094  018CA6  0EFF               	movlw	255
 27095  018CA8  24E1               	addwf	fsr1l,w,c
 27096  018CAA  6ED9               	movwf	fsr2l,c
 27097  018CAC  0EFF               	movlw	255
 27098  018CAE  20E2               	addwfc	fsr1h,w,c
 27099  018CB0  6EDA               	movwf	fsr2h,c
 27100  018CB2  50DF               	movf	indf2,w,c
 27101  018CB4  6EA5               	movwf	165,c	;volatile
 27102                           
 27103                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27104                           ;stkvar	_timerVal @ sp[(0)+-2]
 27105  018CB6  0EFE               	movlw	-2
 27106  018CB8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27107  018CBE                     l1218:
 27108                           
 27109                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27110  018CBE  52E5               	movf	postdec1,f,c
 27111  018CC0  52E5               	movf	postdec1,f,c
 27112  018CC2  0012               	return		;funcret
 27113  018CC4                     __end_of_TMR3_WriteTimer:
 27114                           	opt callstack 0
 27115                           
 27116 ;; *************** function _TMR3_CallBack *****************
 27117 ;; Defined at:
 27118 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27119 ;; Parameters:    Size  Location     Type
 27120 ;;		None
 27121 ;; Auto vars:     Size  Location     Type
 27122 ;;		None
 27123 ;; Return value:  Size  Location     Type
 27124 ;;                  1  [STACK] void 
 27125 ;; Registers used:
 27126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 27127 ;; Tracked objects:
 27128 ;;		On entry : 0/39
 27129 ;;		On exit  : 0/0
 27130 ;;		Unchanged: 0/0
 27131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27136 ;;Total ram usage:        0 bytes
 27137 ;; Hardware stack levels used:    1
 27138 ;; Hardware stack levels required when called:    5
 27139 ;; This function calls:
 27140 ;;		Absolute function
 27141 ;;		_TMR3_DefaultInterruptHandler
 27142 ;;		_calc_bsoc
 27143 ;; This function is called by:
 27144 ;;		_TMR3_ISR
 27145 ;; This function uses a reentrant model
 27146 ;;
 27147                           
 27148                           	psect	text135
 27149  019376                     __ptext135:
 27150                           	opt callstack 0
 27151  019376                     _TMR3_CallBack:
 27152                           	opt callstack 11
 27153                           
 27154                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27155                           
 27156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27157                           ;incstack = 0
 27158  019376  0100               	movlb	0	; () banked
 27159  019378  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27160  01937A  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27161  01937C  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27162  01937E  B4D8               	btfsc	status,2,c
 27163  019380  0012               	return	
 27164                           
 27165                           ; BSR set to: 0
 27166                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27167  019382  D801               	call	u882_28
 27168  019384  0012               	return	
 27169  019386                     u882_28:
 27170  019386  0005               	push	
 27171  019388  6EFA               	movwf	pclath,c
 27172  01938A  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27173  01938C  6EFD               	movwf	tosl,c
 27174  01938E  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27175  019390  6EFE               	movwf	tosh,c
 27176  019392  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27177  019394  6EFF               	movwf	tosu,c
 27178  019396  50FA               	movf	pclath,w,c
 27179  019398  0012               	return		;indir
 27180  01939A                     __end_of_TMR3_CallBack:
 27181                           	opt callstack 0
 27182                           
 27183 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27184 ;; Defined at:
 27185 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27186 ;; Parameters:    Size  Location     Type
 27187 ;;		None
 27188 ;; Auto vars:     Size  Location     Type
 27189 ;;		None
 27190 ;; Return value:  Size  Location     Type
 27191 ;;                  1  [STACK] void 
 27192 ;; Registers used:
 27193 ;;		None
 27194 ;; Tracked objects:
 27195 ;;		On entry : 3F/0
 27196 ;;		On exit  : 0/0
 27197 ;;		Unchanged: 0/0
 27198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27203 ;;Total ram usage:        0 bytes
 27204 ;; Hardware stack levels used:    1
 27205 ;; Hardware stack levels required when called:    3
 27206 ;; This function calls:
 27207 ;;		Nothing
 27208 ;; This function is called by:
 27209 ;;		_TMR3_Initialize
 27210 ;;		_TMR3_CallBack
 27211 ;; This function uses a reentrant model
 27212 ;;
 27213                           
 27214                           	psect	text136
 27215  0196B4                     __ptext136:
 27216                           	opt callstack 0
 27217  0196B4                     _TMR3_DefaultInterruptHandler:
 27218                           	opt callstack 12
 27219                           
 27220                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27221                           
 27222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27223                           ;incstack = 0
 27224  0196B4  0012               	return		;funcret
 27225  0196B6                     __end_of_TMR3_DefaultInterruptHandler:
 27226                           	opt callstack 0
 27227                           
 27228 ;; *************** function _calc_bsoc *****************
 27229 ;; Defined at:
 27230 ;;		line 7 in file "bsoc.c"
 27231 ;; Parameters:    Size  Location     Type
 27232 ;;		None
 27233 ;; Auto vars:     Size  Location     Type
 27234 ;;		None
 27235 ;; Return value:  Size  Location     Type
 27236 ;;                  1  [STACK] void 
 27237 ;; Registers used:
 27238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27239 ;; Tracked objects:
 27240 ;;		On entry : 3F/0
 27241 ;;		On exit  : 3F/1
 27242 ;;		Unchanged: 0/0
 27243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27248 ;;Total ram usage:        0 bytes
 27249 ;; Hardware stack levels used:    1
 27250 ;; Hardware stack levels required when called:    4
 27251 ;; This function calls:
 27252 ;;		___fladd
 27253 ;;		___fldiv
 27254 ;;		___fleq
 27255 ;;		___flge
 27256 ;;		___flmul
 27257 ;;		___fltol
 27258 ;; This function is called by:
 27259 ;;		_init_bsoc
 27260 ;;		_TMR3_CallBack
 27261 ;; This function uses a reentrant model
 27262 ;;
 27263                           
 27264                           	psect	text137
 27265  013B88                     __ptext137:
 27266                           	opt callstack 0
 27267  013B88                     _calc_bsoc:
 27268                           	opt callstack 11
 27269                           
 27270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27271                           ;incstack = 0
 27272                           ;bsoc.c: 10:  do { LATEbits.LATE1 = 1; } while(0);
 27273  013B88  82BE               	bsf	190,1,c	;volatile
 27274                           
 27275                           ;bsoc.c: 12:  C.dynamic_ah += (C.c_bat / 3600.0);
 27276  013B8A  0E00               	movlw	0
 27277  013B8C  6EE6               	movwf	postinc1,c
 27278  013B8E  0E00               	movlw	0
 27279  013B90  6EE6               	movwf	postinc1,c
 27280  013B92  0E61               	movlw	97
 27281  013B94  6EE6               	movwf	postinc1,c
 27282  013B96  0E45               	movlw	69
 27283  013B98  6EE6               	movwf	postinc1,c
 27284  013B9A  0060  F513  FFE6   	movff	_C+68,postinc1
 27285  013BA0  0060  F517  FFE6   	movff	_C+69,postinc1
 27286  013BA6  0060  F51B  FFE6   	movff	_C+70,postinc1
 27287  013BAC  0060  F51F  FFE6   	movff	_C+71,postinc1
 27288  013BB2  EC07  F09B         	call	___fldiv	;wreg free
 27289  013BB6  0060  F097  FFE6   	movff	btemp,postinc1
 27290  013BBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27291  013BC2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27292  013BC8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27293  013BCE  0060  F613  FFE6   	movff	_C+132,postinc1
 27294  013BD4  0060  F617  FFE6   	movff	_C+133,postinc1
 27295  013BDA  0060  F61B  FFE6   	movff	_C+134,postinc1
 27296  013BE0  0060  F61F  FFE6   	movff	_C+135,postinc1
 27297  013BE6  EC29  F097         	call	___fladd	;wreg free
 27298  013BEA  0060  F094  F184   	movff	btemp,_C+132	;volatile
 27299  013BF0  0060  F098  F185   	movff	btemp+1,_C+133	;volatile
 27300  013BF6  0060  F09C  F186   	movff	btemp+2,_C+134	;volatile
 27301  013BFC  0060  F0A0  F187   	movff	btemp+3,_C+135	;volatile
 27302                           
 27303                           ;bsoc.c: 13:  if (C.dynamic_ah > (C.bank_ah))
 27304  013C02  0060  F613  FFE6   	movff	_C+132,postinc1
 27305  013C08  0060  F617  FFE6   	movff	_C+133,postinc1
 27306  013C0E  0060  F61B  FFE6   	movff	_C+134,postinc1
 27307  013C14  0060  F61F  FFE6   	movff	_C+135,postinc1
 27308  013C1A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27309  013C20  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27310  013C26  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27311  013C2C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27312  013C32  EC91  F0B5         	call	___flge	;wreg free
 27313  013C36  B025               	btfsc	btemp& (0+255),0,c
 27314  013C38  D008               	goto	l9220
 27315                           
 27316                           ;bsoc.c: 14:   C.dynamic_ah = C.bank_ah;
 27317  013C3A  C17C  F184         	movff	_C+124,_C+132	;volatile
 27318  013C3E  C17D  F185         	movff	_C+125,_C+133	;volatile
 27319  013C42  C17E  F186         	movff	_C+126,_C+134	;volatile
 27320  013C46  C17F  F187         	movff	_C+127,_C+135	;volatile
 27321  013C4A                     l9220:
 27322                           
 27323                           ;bsoc.c: 15:  if (C.dynamic_ah < 0.1)
 27324  013C4A  0ECD               	movlw	205
 27325  013C4C  6EE6               	movwf	postinc1,c
 27326  013C4E  0ECC               	movlw	204
 27327  013C50  6EE6               	movwf	postinc1,c
 27328  013C52  0ECC               	movlw	204
 27329  013C54  6EE6               	movwf	postinc1,c
 27330  013C56  0E3D               	movlw	61
 27331  013C58  6EE6               	movwf	postinc1,c
 27332  013C5A  0060  F613  FFE6   	movff	_C+132,postinc1
 27333  013C60  0060  F617  FFE6   	movff	_C+133,postinc1
 27334  013C66  0060  F61B  FFE6   	movff	_C+134,postinc1
 27335  013C6C  0060  F61F  FFE6   	movff	_C+135,postinc1
 27336  013C72  EC91  F0B5         	call	___flge	;wreg free
 27337  013C76  B025               	btfsc	btemp& (0+255),0,c
 27338  013C78  D009               	goto	l9224
 27339                           
 27340                           ;bsoc.c: 16:   C.dynamic_ah = 0.1;
 27341  013C7A  0ECD               	movlw	205
 27342  013C7C  0101               	movlb	1	; () banked
 27343  013C7E  6F84               	movwf	(_C+132)& (0+255),b	;volatile
 27344  013C80  0ECC               	movlw	204
 27345  013C82  6F85               	movwf	(_C+133)& (0+255),b	;volatile
 27346  013C84  0ECC               	movlw	204
 27347  013C86  6F86               	movwf	(_C+134)& (0+255),b	;volatile
 27348  013C88  0E3D               	movlw	61
 27349  013C8A  6F87               	movwf	(_C+135)& (0+255),b	;volatile
 27350  013C8C                     l9224:
 27351                           
 27352                           ;bsoc.c: 18:  C.pv_ah += (C.c_pv / 3600.0);
 27353  013C8C  0E00               	movlw	0
 27354  013C8E  6EE6               	movwf	postinc1,c
 27355  013C90  0E00               	movlw	0
 27356  013C92  6EE6               	movwf	postinc1,c
 27357  013C94  0E61               	movlw	97
 27358  013C96  6EE6               	movwf	postinc1,c
 27359  013C98  0E45               	movlw	69
 27360  013C9A  6EE6               	movwf	postinc1,c
 27361  013C9C  0060  F523  FFE6   	movff	_C+72,postinc1
 27362  013CA2  0060  F527  FFE6   	movff	_C+73,postinc1
 27363  013CA8  0060  F52B  FFE6   	movff	_C+74,postinc1
 27364  013CAE  0060  F52F  FFE6   	movff	_C+75,postinc1
 27365  013CB4  EC07  F09B         	call	___fldiv	;wreg free
 27366  013CB8  0060  F097  FFE6   	movff	btemp,postinc1
 27367  013CBE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27368  013CC4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27369  013CCA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27370  013CD0  0060  F623  FFE6   	movff	_C+136,postinc1
 27371  013CD6  0060  F627  FFE6   	movff	_C+137,postinc1
 27372  013CDC  0060  F62B  FFE6   	movff	_C+138,postinc1
 27373  013CE2  0060  F62F  FFE6   	movff	_C+139,postinc1
 27374  013CE8  EC29  F097         	call	___fladd	;wreg free
 27375  013CEC  0060  F094  F188   	movff	btemp,_C+136	;volatile
 27376  013CF2  0060  F098  F189   	movff	btemp+1,_C+137	;volatile
 27377  013CF8  0060  F09C  F18A   	movff	btemp+2,_C+138	;volatile
 27378  013CFE  0060  F0A0  F18B   	movff	btemp+3,_C+139	;volatile
 27379                           
 27380                           ;bsoc.c: 19:  C.pvkw += (C.p_pv / 3600.0);
 27381  013D04  0E00               	movlw	0
 27382  013D06  6EE6               	movwf	postinc1,c
 27383  013D08  0E00               	movlw	0
 27384  013D0A  6EE6               	movwf	postinc1,c
 27385  013D0C  0E61               	movlw	97
 27386  013D0E  6EE6               	movwf	postinc1,c
 27387  013D10  0E45               	movlw	69
 27388  013D12  6EE6               	movwf	postinc1,c
 27389  013D14  0060  F5C3  FFE6   	movff	_C+112,postinc1
 27390  013D1A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 27391  013D20  0060  F5CB  FFE6   	movff	_C+114,postinc1
 27392  013D26  0060  F5CF  FFE6   	movff	_C+115,postinc1
 27393  013D2C  EC07  F09B         	call	___fldiv	;wreg free
 27394  013D30  0060  F097  FFE6   	movff	btemp,postinc1
 27395  013D36  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27396  013D3C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27397  013D42  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27398  013D48  0060  F663  FFE6   	movff	_C+152,postinc1
 27399  013D4E  0060  F667  FFE6   	movff	_C+153,postinc1
 27400  013D54  0060  F66B  FFE6   	movff	_C+154,postinc1
 27401  013D5A  0060  F66F  FFE6   	movff	_C+155,postinc1
 27402  013D60  EC29  F097         	call	___fladd	;wreg free
 27403  013D64  0060  F094  F198   	movff	btemp,_C+152	;volatile
 27404  013D6A  0060  F098  F199   	movff	btemp+1,_C+153	;volatile
 27405  013D70  0060  F09C  F19A   	movff	btemp+2,_C+154	;volatile
 27406  013D76  0060  F0A0  F19B   	movff	btemp+3,_C+155	;volatile
 27407                           
 27408                           ;bsoc.c: 20:  C.invkw += (C.p_inverter / 3600.0);
 27409  013D7C  0E00               	movlw	0
 27410  013D7E  6EE6               	movwf	postinc1,c
 27411  013D80  0E00               	movlw	0
 27412  013D82  6EE6               	movwf	postinc1,c
 27413  013D84  0E61               	movlw	97
 27414  013D86  6EE6               	movwf	postinc1,c
 27415  013D88  0E45               	movlw	69
 27416  013D8A  6EE6               	movwf	postinc1,c
 27417  013D8C  0060  F5B3  FFE6   	movff	_C+108,postinc1
 27418  013D92  0060  F5B7  FFE6   	movff	_C+109,postinc1
 27419  013D98  0060  F5BB  FFE6   	movff	_C+110,postinc1
 27420  013D9E  0060  F5BF  FFE6   	movff	_C+111,postinc1
 27421  013DA4  EC07  F09B         	call	___fldiv	;wreg free
 27422  013DA8  0060  F097  FFE6   	movff	btemp,postinc1
 27423  013DAE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27424  013DB4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27425  013DBA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27426  013DC0  0060  F673  FFE6   	movff	_C+156,postinc1
 27427  013DC6  0060  F677  FFE6   	movff	_C+157,postinc1
 27428  013DCC  0060  F67B  FFE6   	movff	_C+158,postinc1
 27429  013DD2  0060  F67F  FFE6   	movff	_C+159,postinc1
 27430  013DD8  EC29  F097         	call	___fladd	;wreg free
 27431  013DDC  0060  F094  F19C   	movff	btemp,_C+156	;volatile
 27432  013DE2  0060  F098  F19D   	movff	btemp+1,_C+157	;volatile
 27433  013DE8  0060  F09C  F19E   	movff	btemp+2,_C+158	;volatile
 27434  013DEE  0060  F0A0  F19F   	movff	btemp+3,_C+159	;volatile
 27435                           
 27436                           ;bsoc.c: 21:  if (C.p_bat > 0.0)
 27437  013DF4  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27438  013DFA  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27439  013E00  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27440  013E06  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27441  013E0C  0E00               	movlw	0
 27442  013E0E  6EE6               	movwf	postinc1,c
 27443  013E10  0E00               	movlw	0
 27444  013E12  6EE6               	movwf	postinc1,c
 27445  013E14  0E00               	movlw	0
 27446  013E16  6EE6               	movwf	postinc1,c
 27447  013E18  0E00               	movlw	0
 27448  013E1A  6EE6               	movwf	postinc1,c
 27449  013E1C  EC91  F0B5         	call	___flge	;wreg free
 27450  013E20  B025               	btfsc	btemp& (0+255),0,c
 27451  013E22  D03C               	goto	l9234
 27452                           
 27453                           ;bsoc.c: 22:   C.bkwi += (C.p_bat / 3600.0);
 27454  013E24  0E00               	movlw	0
 27455  013E26  6EE6               	movwf	postinc1,c
 27456  013E28  0E00               	movlw	0
 27457  013E2A  6EE6               	movwf	postinc1,c
 27458  013E2C  0E61               	movlw	97
 27459  013E2E  6EE6               	movwf	postinc1,c
 27460  013E30  0E45               	movlw	69
 27461  013E32  6EE6               	movwf	postinc1,c
 27462  013E34  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27463  013E3A  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27464  013E40  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27465  013E46  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27466  013E4C  EC07  F09B         	call	___fldiv	;wreg free
 27467  013E50  0060  F097  FFE6   	movff	btemp,postinc1
 27468  013E56  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27469  013E5C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27470  013E62  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27471  013E68  0060  F643  FFE6   	movff	_C+144,postinc1
 27472  013E6E  0060  F647  FFE6   	movff	_C+145,postinc1
 27473  013E74  0060  F64B  FFE6   	movff	_C+146,postinc1
 27474  013E7A  0060  F64F  FFE6   	movff	_C+147,postinc1
 27475  013E80  EC29  F097         	call	___fladd	;wreg free
 27476  013E84  0060  F094  F190   	movff	btemp,_C+144	;volatile
 27477  013E8A  0060  F098  F191   	movff	btemp+1,_C+145	;volatile
 27478  013E90  0060  F09C  F192   	movff	btemp+2,_C+146	;volatile
 27479  013E96  0060  F0A0  F193   	movff	btemp+3,_C+147	;volatile
 27480  013E9C                     l9234:
 27481                           
 27482                           ;bsoc.c: 23:  if (C.p_bat < 0.0)
 27483  013E9C  0101               	movlb	1	; () banked
 27484  013E9E  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 27485  013EA0  D03C               	goto	l9238
 27486                           
 27487                           ; BSR set to: 1
 27488                           ;bsoc.c: 24:   C.bkwo += (C.p_bat / 3600.0);
 27489  013EA2  0E00               	movlw	0
 27490  013EA4  6EE6               	movwf	postinc1,c
 27491  013EA6  0E00               	movlw	0
 27492  013EA8  6EE6               	movwf	postinc1,c
 27493  013EAA  0E61               	movlw	97
 27494  013EAC  6EE6               	movwf	postinc1,c
 27495  013EAE  0E45               	movlw	69
 27496  013EB0  6EE6               	movwf	postinc1,c
 27497  013EB2  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27498  013EB8  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27499  013EBE  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27500  013EC4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27501  013ECA  EC07  F09B         	call	___fldiv	;wreg free
 27502  013ECE  0060  F097  FFE6   	movff	btemp,postinc1
 27503  013ED4  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27504  013EDA  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27505  013EE0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27506  013EE6  0060  F653  FFE6   	movff	_C+148,postinc1
 27507  013EEC  0060  F657  FFE6   	movff	_C+149,postinc1
 27508  013EF2  0060  F65B  FFE6   	movff	_C+150,postinc1
 27509  013EF8  0060  F65F  FFE6   	movff	_C+151,postinc1
 27510  013EFE  EC29  F097         	call	___fladd	;wreg free
 27511  013F02  0060  F094  F194   	movff	btemp,_C+148	;volatile
 27512  013F08  0060  F098  F195   	movff	btemp+1,_C+149	;volatile
 27513  013F0E  0060  F09C  F196   	movff	btemp+2,_C+150	;volatile
 27514  013F14  0060  F0A0  F197   	movff	btemp+3,_C+151	;volatile
 27515  013F1A                     l9238:
 27516                           
 27517                           ;bsoc.c: 25:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 27518  013F1A  0E00               	movlw	0
 27519  013F1C  6EE6               	movwf	postinc1,c
 27520  013F1E  0E00               	movlw	0
 27521  013F20  6EE6               	movwf	postinc1,c
 27522  013F22  0EC8               	movlw	200
 27523  013F24  6EE6               	movwf	postinc1,c
 27524  013F26  0E42               	movlw	66
 27525  013F28  6EE6               	movwf	postinc1,c
 27526  013F2A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27527  013F30  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27528  013F36  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27529  013F3C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27530  013F42  0060  F613  FFE6   	movff	_C+132,postinc1
 27531  013F48  0060  F617  FFE6   	movff	_C+133,postinc1
 27532  013F4E  0060  F61B  FFE6   	movff	_C+134,postinc1
 27533  013F54  0060  F61F  FFE6   	movff	_C+135,postinc1
 27534  013F5A  EC07  F09B         	call	___fldiv	;wreg free
 27535  013F5E  0060  F097  FFE6   	movff	btemp,postinc1
 27536  013F64  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27537  013F6A  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27538  013F70  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27539  013F76  EC14  F093         	call	___flmul	;wreg free
 27540  013F7A  0060  F097  FFE6   	movff	btemp,postinc1
 27541  013F80  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27542  013F86  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27543  013F8C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27544  013F92  ECD8  F0B4         	call	___fltol	;wreg free
 27545  013F96  0060  F094  F02F   	movff	btemp,btemp+10
 27546  013F9C  0060  F098  F030   	movff	btemp+1,btemp+11
 27547  013FA2  0E01               	movlw	1
 27548  013FA4  242F               	addwf	(btemp+10)^0,w,c
 27549  013FA6  0101               	movlb	1	; () banked
 27550  013FA8  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
 27551  013FAA  0E00               	movlw	0
 27552  013FAC  2030               	addwfc	(btemp+11)^0,w,c
 27553  013FAE  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
 27554                           
 27555                           ; BSR set to: 1
 27556                           ;bsoc.c: 26:  if (C.soc > 100)
 27557  013FB0  51A3               	movf	(_C+163)& (0+255),w,b	;volatile
 27558  013FB2  E104               	bnz	u866_20
 27559  013FB4  0E65               	movlw	101
 27560  013FB6  5DA2               	subwf	(_C+162)& (0+255),w,b	;volatile
 27561  013FB8  A0D8               	btfss	status,0,c
 27562  013FBA  D004               	goto	l9244
 27563  013FBC                     u866_20:
 27564                           
 27565                           ; BSR set to: 1
 27566                           ;bsoc.c: 27:   C.soc = 100;
 27567  013FBC  0E00               	movlw	0
 27568  013FBE  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
 27569  013FC0  0E64               	movlw	100
 27570  013FC2  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
 27571  013FC4                     l9244:
 27572                           
 27573                           ; BSR set to: 1
 27574                           ;bsoc.c: 29:  if (C.c_bat != 0.0) {
 27575  013FC4  0E00               	movlw	0
 27576  013FC6  6EE6               	movwf	postinc1,c
 27577  013FC8  0E00               	movlw	0
 27578  013FCA  6EE6               	movwf	postinc1,c
 27579  013FCC  0E00               	movlw	0
 27580  013FCE  6EE6               	movwf	postinc1,c
 27581  013FD0  0E00               	movlw	0
 27582  013FD2  6EE6               	movwf	postinc1,c
 27583  013FD4  0060  F513  FFE6   	movff	_C+68,postinc1
 27584  013FDA  0060  F517  FFE6   	movff	_C+69,postinc1
 27585  013FE0  0060  F51B  FFE6   	movff	_C+70,postinc1
 27586  013FE6  0060  F51F  FFE6   	movff	_C+71,postinc1
 27587  013FEC  EC0F  F0BD         	call	___fleq	;wreg free
 27588  013FF0  B025               	btfsc	btemp& (0+255),0,c
 27589  013FF2  D034               	goto	l9248
 27590                           
 27591                           ;bsoc.c: 30:   C.runtime = (uint16_t) (C.dynamic_ah / C.c_bat);
 27592  013FF4  0060  F513  FFE6   	movff	_C+68,postinc1
 27593  013FFA  0060  F517  FFE6   	movff	_C+69,postinc1
 27594  014000  0060  F51B  FFE6   	movff	_C+70,postinc1
 27595  014006  0060  F51F  FFE6   	movff	_C+71,postinc1
 27596  01400C  0060  F613  FFE6   	movff	_C+132,postinc1
 27597  014012  0060  F617  FFE6   	movff	_C+133,postinc1
 27598  014018  0060  F61B  FFE6   	movff	_C+134,postinc1
 27599  01401E  0060  F61F  FFE6   	movff	_C+135,postinc1
 27600  014024  EC07  F09B         	call	___fldiv	;wreg free
 27601  014028  0060  F097  FFE6   	movff	btemp,postinc1
 27602  01402E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27603  014034  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27604  01403A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27605  014040  ECD8  F0B4         	call	___fltol	;wreg free
 27606  014044  0060  F094  F02F   	movff	btemp,btemp+10
 27607  01404A  0060  F098  F030   	movff	btemp+1,btemp+11
 27608  014050  0060  F0BC  F1A0   	movff	btemp+10,_C+160	;volatile
 27609  014056  0060  F0C0  F1A1   	movff	btemp+11,_C+161	;volatile
 27610  01405C                     l9248:
 27611                           
 27612                           ;bsoc.c: 33:  V.lowint_count++;
 27613  01405C  0E01               	movlw	1
 27614  01405E  0102               	movlb	2	; () banked
 27615  014060  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 27616  014062  0E00               	movlw	0
 27617  014064  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 27618  014066  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 27619  014068  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 27620                           
 27621                           ; BSR set to: 2
 27622                           ;bsoc.c: 34:  C.update = 0;
 27623  01406A  0101               	movlb	1	; () banked
 27624  01406C  6BA4               	clrf	(_C+164)& (0+255),b	;volatile
 27625                           
 27626                           ; BSR set to: 1
 27627  01406E  92BE               	bcf	190,1,c	;volatile
 27628                           
 27629                           ; BSR set to: 1
 27630                           ; _calc_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27631  014070  0012               	return		;funcret
 27632  014072                     __end_of_calc_bsoc:
 27633                           	opt callstack 0
 27634                           
 27635 ;; *************** function _INT0_ISR *****************
 27636 ;; Defined at:
 27637 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 27638 ;; Parameters:    Size  Location     Type
 27639 ;;		None
 27640 ;; Auto vars:     Size  Location     Type
 27641 ;;		None
 27642 ;; Return value:  Size  Location     Type
 27643 ;;                  1    wreg      void 
 27644 ;; Registers used:
 27645 ;;		wreg, status,2, status,0, pclath, tosl
 27646 ;; Tracked objects:
 27647 ;;		On entry : 0/0
 27648 ;;		On exit  : 0/0
 27649 ;;		Unchanged: 0/0
 27650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27655 ;;Total ram usage:        0 bytes
 27656 ;; Hardware stack levels used:    1
 27657 ;; Hardware stack levels required when called:    2
 27658 ;; This function calls:
 27659 ;;		_INT0_CallBack
 27660 ;; This function is called by:
 27661 ;;		Interrupt level 2
 27662 ;; This function uses a non-reentrant model
 27663 ;;
 27664                           
 27665                           	psect	text138
 27666  019620                     __ptext138:
 27667                           	opt callstack 0
 27668  019620                     _INT0_ISR:
 27669                           	opt callstack 11
 27670                           
 27671                           ; BSR set to: 1
 27672                           ;incstack = 0
 27673  019620  EE14  F016         	lfsr	1,___inthi_sp
 27674                           
 27675                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 27676  019624  0139               	movlb	57	; () banked
 27677  019626  91A1               	bcf	161,0,b	;volatile
 27678                           
 27679                           ; BSR set to: 57
 27680                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 27681  019628  EC01  F0CA         	call	_INT0_CallBack	;wreg free
 27682  01962C  0011               	retfie		f
 27683  01962E                     __end_of_INT0_ISR:
 27684                           	opt callstack 0
 27685                           
 27686 ;; *************** function _INT0_CallBack *****************
 27687 ;; Defined at:
 27688 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 27689 ;; Parameters:    Size  Location     Type
 27690 ;;		None
 27691 ;; Auto vars:     Size  Location     Type
 27692 ;;		None
 27693 ;; Return value:  Size  Location     Type
 27694 ;;                  1  [STACK] void 
 27695 ;; Registers used:
 27696 ;;		wreg, status,2, status,0, pclath, tosl
 27697 ;; Tracked objects:
 27698 ;;		On entry : 3F/39
 27699 ;;		On exit  : 0/0
 27700 ;;		Unchanged: 0/0
 27701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27706 ;;Total ram usage:        0 bytes
 27707 ;; Hardware stack levels used:    1
 27708 ;; Hardware stack levels required when called:    1
 27709 ;; This function calls:
 27710 ;;		Absolute function
 27711 ;;		_INT0_DefaultInterruptHandler
 27712 ;; This function is called by:
 27713 ;;		_INT0_ISR
 27714 ;; This function uses a reentrant model
 27715 ;;
 27716                           
 27717                           	psect	text139
 27718  019402                     __ptext139:
 27719                           	opt callstack 0
 27720  019402                     _INT0_CallBack:
 27721                           	opt callstack 11
 27722                           
 27723                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 27724                           
 27725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27726                           ;incstack = 0
 27727  019402  5007               	movf	_INT0_InterruptHandler^0,w,c
 27728  019404  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 27729  019406  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 27730  019408  B4D8               	btfsc	status,2,c
 27731  01940A  0012               	return	
 27732                           
 27733                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 27734  01940C  D801               	call	u404_48
 27735  01940E  0012               	return	
 27736  019410                     u404_48:
 27737  019410  0005               	push	
 27738  019412  6EFA               	movwf	pclath,c
 27739  019414  5007               	movf	_INT0_InterruptHandler^0,w,c
 27740  019416  6EFD               	movwf	tosl,c
 27741  019418  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 27742  01941A  6EFE               	movwf	tosh,c
 27743  01941C  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 27744  01941E  6EFF               	movwf	tosu,c
 27745  019420  50FA               	movf	pclath,w,c
 27746  019422  0012               	return		;indir
 27747  019424                     __end_of_INT0_CallBack:
 27748                           	opt callstack 0
 27749                           
 27750 ;; *************** function _INT0_DefaultInterruptHandler *****************
 27751 ;; Defined at:
 27752 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 27753 ;; Parameters:    Size  Location     Type
 27754 ;;		None
 27755 ;; Auto vars:     Size  Location     Type
 27756 ;;		None
 27757 ;; Return value:  Size  Location     Type
 27758 ;;                  1  [STACK] void 
 27759 ;; Registers used:
 27760 ;;		None
 27761 ;; Tracked objects:
 27762 ;;		On entry : 0/39
 27763 ;;		On exit  : 0/0
 27764 ;;		Unchanged: 0/0
 27765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27770 ;;Total ram usage:        0 bytes
 27771 ;; Hardware stack levels used:    1
 27772 ;; This function calls:
 27773 ;;		Nothing
 27774 ;; This function is called by:
 27775 ;;		_EXT_INT_Initialize
 27776 ;;		_INT0_CallBack
 27777 ;; This function uses a reentrant model
 27778 ;;
 27779                           
 27780                           	psect	text140
 27781  0196B6                     __ptext140:
 27782                           	opt callstack 0
 27783  0196B6                     _INT0_DefaultInterruptHandler:
 27784                           	opt callstack 11
 27785                           
 27786                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27787                           
 27788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27789                           ;incstack = 0
 27790  0196B6  0012               	return		;funcret
 27791  0196B8                     __end_of_INT0_DefaultInterruptHandler:
 27792                           	opt callstack 0
 27793                           
 27794 ;; *************** function _Default_ISR *****************
 27795 ;; Defined at:
 27796 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 27797 ;; Parameters:    Size  Location     Type
 27798 ;;		None
 27799 ;; Auto vars:     Size  Location     Type
 27800 ;;		None
 27801 ;; Return value:  Size  Location     Type
 27802 ;;                  1    wreg      void 
 27803 ;; Registers used:
 27804 ;;		None
 27805 ;; Tracked objects:
 27806 ;;		On entry : 0/0
 27807 ;;		On exit  : 0/0
 27808 ;;		Unchanged: 0/0
 27809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27814 ;;Total ram usage:        0 bytes
 27815 ;; Hardware stack levels used:    1
 27816 ;; This function calls:
 27817 ;;		Nothing
 27818 ;; This function is called by:
 27819 ;;		Interrupt level 2
 27820 ;; This function uses a non-reentrant model
 27821 ;;
 27822                           
 27823                           	psect	text141
 27824  0196AC                     __ptext141:
 27825                           	opt callstack 0
 27826  0196AC                     _Default_ISR:
 27827                           	opt callstack 13
 27828                           
 27829                           ;incstack = 0
 27830  0196AC  EE14  F016         	lfsr	1,___inthi_sp
 27831  0196B0  0011               	retfie		f
 27832  0196B2                     __end_of_Default_ISR:
 27833                           	opt callstack 0
 27834                           
 27835 ;; *************** function _ADCC_ISR *****************
 27836 ;; Defined at:
 27837 ;;		line 314 in file "mcc_generated_files/adcc.c"
 27838 ;; Parameters:    Size  Location     Type
 27839 ;;		None
 27840 ;; Auto vars:     Size  Location     Type
 27841 ;;		None
 27842 ;; Return value:  Size  Location     Type
 27843 ;;                  1    wreg      void 
 27844 ;; Registers used:
 27845 ;;		wreg, status,2, status,0, pclath, tosl
 27846 ;; Tracked objects:
 27847 ;;		On entry : 0/0
 27848 ;;		On exit  : 0/0
 27849 ;;		Unchanged: 0/0
 27850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27855 ;;Total ram usage:        0 bytes
 27856 ;; Hardware stack levels used:    1
 27857 ;; Hardware stack levels required when called:    1
 27858 ;; This function calls:
 27859 ;;		Absolute function
 27860 ;;		_ADCC_DefaultInterruptHandler
 27861 ;;		_adc_int_handler
 27862 ;; This function is called by:
 27863 ;;		Interrupt level 2
 27864 ;; This function uses a non-reentrant model
 27865 ;;
 27866                           
 27867                           	psect	text142
 27868  018F38                     __ptext142:
 27869                           	opt callstack 0
 27870  018F38                     _ADCC_ISR:
 27871                           	opt callstack 12
 27872                           
 27873                           ;incstack = 0
 27874  018F38  EE14  F016         	lfsr	1,___inthi_sp
 27875                           
 27876                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 27877  018F3C  0139               	movlb	57	; () banked
 27878  018F3E  95A1               	bcf	161,2,b	;volatile
 27879                           
 27880                           ; BSR set to: 57
 27881                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 27882  018F40  0100               	movlb	0	; () banked
 27883  018F42  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27884  018F44  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27885  018F46  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27886  018F48  B4D8               	btfsc	status,2,c
 27887  018F4A  0011               	retfie		f
 27888                           
 27889                           ; BSR set to: 0
 27890                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 27891  018F4C  D801               	call	i2u904_48
 27892  018F4E  0011               	retfie		f
 27893  018F50                     i2u904_48:
 27894  018F50  0005               	push	
 27895  018F52  6EFA               	movwf	pclath,c
 27896  018F54  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27897  018F56  6EFD               	movwf	tosl,c
 27898  018F58  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27899  018F5A  6EFE               	movwf	tosh,c
 27900  018F5C  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27901  018F5E  6EFF               	movwf	tosu,c
 27902  018F60  50FA               	movf	pclath,w,c
 27903  018F62  0012               	return		;indir
 27904  018F64                     __end_of_ADCC_ISR:
 27905                           	opt callstack 0
 27906                           
 27907 ;; *************** function _adc_int_t_handler *****************
 27908 ;; Defined at:
 27909 ;;		line 128 in file "daq.c"
 27910 ;; Parameters:    Size  Location     Type
 27911 ;;		None
 27912 ;; Auto vars:     Size  Location     Type
 27913 ;;		None
 27914 ;; Return value:  Size  Location     Type
 27915 ;;                  1  [STACK] void 
 27916 ;; Registers used:
 27917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 27918 ;; Tracked objects:
 27919 ;;		On entry : 3F/0
 27920 ;;		On exit  : 1/0
 27921 ;;		Unchanged: 0/0
 27922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27927 ;;Total ram usage:        0 bytes
 27928 ;; Hardware stack levels used:    1
 27929 ;; Hardware stack levels required when called:    1
 27930 ;; This function calls:
 27931 ;;		_ADCC_DischargeSampleCapacitor
 27932 ;;		_ADCC_StartConversion
 27933 ;; This function is called by:
 27934 ;;		_start_adc_scan
 27935 ;;		_ADCC_ThresholdISR
 27936 ;; This function uses a reentrant model
 27937 ;;
 27938                           
 27939                           	psect	text143
 27940  018386                     __ptext143:
 27941                           	opt callstack 0
 27942  018386                     _adc_int_t_handler:
 27943                           	opt callstack 11
 27944                           
 27945                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 27946                           
 27947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27948                           ;incstack = 0
 27949  018386  013E               	movlb	62	; () banked
 27950  018388  51E6               	movf	230,w,b	;volatile
 27951  01838A  006F FB9C  F025    	movff	16103,btemp	;volatile
 27952  018390  6A26               	clrf	(btemp+1)^0,c
 27953  018392  0060  F094  F026   	movff	btemp,btemp+1
 27954  018398  6A25               	clrf	btemp^0,c
 27955  01839A  2625               	addwf	btemp^0,f,c
 27956  01839C  0E00               	movlw	0
 27957  01839E  2226               	addwfc	(btemp+1)^0,f,c
 27958  0183A0  0100               	movlb	0	; () banked
 27959  0183A2  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27960  0183A4  0D02               	mullw	2
 27961  0183A6  50F3               	movf	243,w,c
 27962  0183A8  0FC3               	addlw	low _R
 27963  0183AA  6ED9               	movwf	fsr2l,c
 27964  0183AC  6ADA               	clrf	fsr2h,c
 27965  0183AE  0060  F097  FFDE   	movff	btemp,postinc2
 27966  0183B4  0060  F09B  FFDD   	movff	btemp+1,postdec2
 27967  0183BA                     l9594:
 27968                           
 27969                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 27970  0183BA  0100               	movlb	0	; () banked
 27971  0183BC  2BE7               	incf	(_R+36)& (0+255),f,b	;volatile
 27972  0183BE  0E0D               	movlw	13
 27973  0183C0  65E7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 27974  0183C2  D003               	goto	l9600
 27975                           
 27976                           ; BSR set to: 0
 27977                           ;daq.c: 136:    R.done = 1;
 27978  0183C4  0E01               	movlw	1
 27979  0183C6  6FEA               	movwf	(_R+39)& (0+255),b	;volatile
 27980  0183C8  0012               	return	
 27981  0183CA                     l9600:
 27982                           
 27983                           ; BSR set to: 0
 27984                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 27985  0183CA  0060  F39C  F030   	movff	_R+36,btemp+11	;volatile
 27986  0183D0  EE20  F0E8         	lfsr	2,_R+37	;volatile
 27987  0183D4  006F FF78  F02D    	movff	postinc2,btemp+8
 27988  0183DA  006F FF74  F02E    	movff	postdec2,btemp+9
 27989  0183E0  2A30               	incf	(btemp+11)^0,f,c
 27990  0183E2  D003               	goto	u901_44
 27991  0183E4                     u901_45:
 27992  0183E4  90D8               	bcf	status,0,c
 27993  0183E6  322E               	rrcf	(btemp+9)^0,f,c
 27994  0183E8  322D               	rrcf	(btemp+8)^0,f,c
 27995  0183EA                     u901_44:
 27996  0183EA  2E30               	decfsz	(btemp+11)^0,f,c
 27997  0183EC  D7FB               	goto	u901_45
 27998  0183EE  A02D               	btfss	(btemp+8)^0,0,c
 27999  0183F0  D7E4               	goto	l9594
 28000                           
 28001                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 28002  0183F2  EC35  F0CB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 28003                           
 28004                           ; BSR set to: 62
 28005                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 28006  0183F6  0100               	movlb	0	; () banked
 28007  0183F8  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 28008  0183FA  0B0F               	andlw	15
 28009  0183FC  6EE6               	movwf	postinc1,c
 28010  0183FE  ECE8  F0CA         	call	_ADCC_StartConversion	;wreg free
 28011                           
 28012                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28013  018402  0012               	return		;funcret
 28014  018404                     __end_of_adc_int_t_handler:
 28015                           	opt callstack 0
 28016                           
 28017 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28018 ;; Defined at:
 28019 ;;		line 339 in file "mcc_generated_files/adcc.c"
 28020 ;; Parameters:    Size  Location     Type
 28021 ;;		None
 28022 ;; Auto vars:     Size  Location     Type
 28023 ;;		None
 28024 ;; Return value:  Size  Location     Type
 28025 ;;                  1  [STACK] void 
 28026 ;; Registers used:
 28027 ;;		None
 28028 ;; Tracked objects:
 28029 ;;		On entry : 3F/0
 28030 ;;		On exit  : 0/0
 28031 ;;		Unchanged: 0/0
 28032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28037 ;;Total ram usage:        0 bytes
 28038 ;; Hardware stack levels used:    1
 28039 ;; This function calls:
 28040 ;;		Nothing
 28041 ;; This function is called by:
 28042 ;;		_ADCC_Initialize
 28043 ;;		_ADCC_ISR
 28044 ;;		_ADCC_ThresholdISR
 28045 ;; This function uses a reentrant model
 28046 ;;
 28047                           
 28048                           	psect	text144
 28049  0196B8                     __ptext144:
 28050                           	opt callstack 0
 28051  0196B8                     _ADCC_DefaultInterruptHandler:
 28052                           	opt callstack 12
 28053                           
 28054                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28055                           
 28056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28057                           ;incstack = 0
 28058  0196B8  0012               	return		;funcret
 28059  0196BA                     __end_of_ADCC_DefaultInterruptHandler:
 28060                           	opt callstack 0
 28061                           
 28062 ;; *************** function _adc_int_handler *****************
 28063 ;; Defined at:
 28064 ;;		line 118 in file "daq.c"
 28065 ;; Parameters:    Size  Location     Type
 28066 ;;		None
 28067 ;; Auto vars:     Size  Location     Type
 28068 ;;		None
 28069 ;; Return value:  Size  Location     Type
 28070 ;;                  1  [STACK] void 
 28071 ;; Registers used:
 28072 ;;		None
 28073 ;; Tracked objects:
 28074 ;;		On entry : 3F/0
 28075 ;;		On exit  : 0/0
 28076 ;;		Unchanged: 0/0
 28077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28082 ;;Total ram usage:        0 bytes
 28083 ;; Hardware stack levels used:    1
 28084 ;; This function calls:
 28085 ;;		Nothing
 28086 ;; This function is called by:
 28087 ;;		_start_adc_scan
 28088 ;;		_ADCC_ISR
 28089 ;; This function uses a reentrant model
 28090 ;;
 28091                           
 28092                           	psect	text145
 28093  0196BA                     __ptext145:
 28094                           	opt callstack 0
 28095  0196BA                     _adc_int_handler:
 28096                           	opt callstack 12
 28097                           
 28098                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28099                           
 28100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28101                           ;incstack = 0
 28102  0196BA  0012               	return		;funcret
 28103  0196BC                     __end_of_adc_int_handler:
 28104                           	opt callstack 0
 28105                           
 28106 ;; *************** function _ADCC_ThresholdISR *****************
 28107 ;; Defined at:
 28108 ;;		line 327 in file "mcc_generated_files/adcc.c"
 28109 ;; Parameters:    Size  Location     Type
 28110 ;;		None
 28111 ;; Auto vars:     Size  Location     Type
 28112 ;;		None
 28113 ;; Return value:  Size  Location     Type
 28114 ;;                  1    wreg      void 
 28115 ;; Registers used:
 28116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 28117 ;; Tracked objects:
 28118 ;;		On entry : 0/0
 28119 ;;		On exit  : 0/0
 28120 ;;		Unchanged: 0/0
 28121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28124 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28125 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28126 ;;Total ram usage:        5 bytes
 28127 ;; Hardware stack levels used:    1
 28128 ;; Hardware stack levels required when called:    2
 28129 ;; This function calls:
 28130 ;;		Absolute function
 28131 ;;		_ADCC_DefaultInterruptHandler
 28132 ;;		_adc_int_t_handler
 28133 ;; This function is called by:
 28134 ;;		Interrupt level 2
 28135 ;; This function uses a non-reentrant model
 28136 ;;
 28137                           
 28138                           	psect	text146
 28139  0184D8                     __ptext146:
 28140                           	opt callstack 0
 28141  0184D8                     _ADCC_ThresholdISR:
 28142                           	opt callstack 11
 28143                           
 28144                           ;incstack = 0
 28145  0184D8  0060  F094  F045   	movff	btemp,??_ADCC_ThresholdISR
 28146  0184DE  0060  F098  F046   	movff	btemp+1,??_ADCC_ThresholdISR+1
 28147  0184E4  0060  F0B4  F047   	movff	btemp+8,??_ADCC_ThresholdISR+2
 28148  0184EA  0060  F0B8  F048   	movff	btemp+9,??_ADCC_ThresholdISR+3
 28149  0184F0  0060  F0C0  F049   	movff	btemp+11,??_ADCC_ThresholdISR+4
 28150  0184F6  EE14  F016         	lfsr	1,___inthi_sp
 28151                           
 28152                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 28153  0184FA  0139               	movlb	57	; () banked
 28154  0184FC  97A1               	bcf	161,3,b	;volatile
 28155                           
 28156                           ; BSR set to: 57
 28157                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 28158  0184FE  0100               	movlb	0	; () banked
 28159  018500  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28160  018502  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28161  018504  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28162  018506  B4D8               	btfsc	status,2,c
 28163  018508  D00C               	goto	i2u906_49
 28164                           
 28165                           ; BSR set to: 0
 28166                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 28167  01850A  D801               	call	i2u906_48
 28168  01850C  D00A               	goto	i2u906_49
 28169  01850E                     i2u906_48:
 28170  01850E  0005               	push	
 28171  018510  6EFA               	movwf	pclath,c
 28172  018512  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28173  018514  6EFD               	movwf	tosl,c
 28174  018516  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28175  018518  6EFE               	movwf	tosh,c
 28176  01851A  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28177  01851C  6EFF               	movwf	tosu,c
 28178  01851E  50FA               	movf	pclath,w,c
 28179  018520  0012               	return		;indir
 28180  018522                     i2u906_49:
 28181  018522  0060  F124  F030   	movff	??_ADCC_ThresholdISR+4,btemp+11
 28182  018528  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 28183  01852E  0060  F11C  F02D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 28184  018534  0060  F118  F026   	movff	??_ADCC_ThresholdISR+1,btemp+1
 28185  01853A  0060  F114  F025   	movff	??_ADCC_ThresholdISR,btemp
 28186  018540  0011               	retfie		f
 28187  018542                     __end_of_ADCC_ThresholdISR:
 28188                           	opt callstack 0
 28189                           
 28190 ;; *************** function _UART1_tx_vect_isr *****************
 28191 ;; Defined at:
 28192 ;;		line 199 in file "mcc_generated_files/uart1.c"
 28193 ;; Parameters:    Size  Location     Type
 28194 ;;		None
 28195 ;; Auto vars:     Size  Location     Type
 28196 ;;		None
 28197 ;; Return value:  Size  Location     Type
 28198 ;;                  1    wreg      void 
 28199 ;; Registers used:
 28200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28201 ;; Tracked objects:
 28202 ;;		On entry : 0/0
 28203 ;;		On exit  : 0/0
 28204 ;;		Unchanged: 0/0
 28205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28210 ;;Total ram usage:        0 bytes
 28211 ;; Hardware stack levels used:    1
 28212 ;; Hardware stack levels required when called:    1
 28213 ;; This function calls:
 28214 ;;		Absolute function
 28215 ;;		_UART1_Transmit_ISR
 28216 ;; This function is called by:
 28217 ;;		Interrupt level 2
 28218 ;; This function uses a non-reentrant model
 28219 ;;
 28220                           
 28221                           	psect	text147
 28222  019290                     __ptext147:
 28223                           	opt callstack 0
 28224  019290                     _UART1_tx_vect_isr:
 28225                           	opt callstack 12
 28226                           
 28227                           ;incstack = 0
 28228  019290  EE14  F016         	lfsr	1,___inthi_sp
 28229                           
 28230                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 28231  019294  0100               	movlb	0	; () banked
 28232  019296  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28233  019298  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28234  01929A  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28235  01929C  B4D8               	btfsc	status,2,c
 28236  01929E  0011               	retfie		f
 28237                           
 28238                           ; BSR set to: 0
 28239                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 28240  0192A0  D801               	call	i2u908_48
 28241  0192A2  0011               	retfie		f
 28242  0192A4                     i2u908_48:
 28243  0192A4  0005               	push	
 28244  0192A6  6EFA               	movwf	pclath,c
 28245  0192A8  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28246  0192AA  6EFD               	movwf	tosl,c
 28247  0192AC  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28248  0192AE  6EFE               	movwf	tosh,c
 28249  0192B0  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28250  0192B2  6EFF               	movwf	tosu,c
 28251  0192B4  50FA               	movf	pclath,w,c
 28252  0192B6  0012               	return		;indir
 28253  0192B8                     __end_of_UART1_tx_vect_isr:
 28254                           	opt callstack 0
 28255                           
 28256 ;; *************** function _UART1_Transmit_ISR *****************
 28257 ;; Defined at:
 28258 ;;		line 213 in file "mcc_generated_files/uart1.c"
 28259 ;; Parameters:    Size  Location     Type
 28260 ;;		None
 28261 ;; Auto vars:     Size  Location     Type
 28262 ;;		None
 28263 ;; Return value:  Size  Location     Type
 28264 ;;                  1  [STACK] void 
 28265 ;; Registers used:
 28266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28267 ;; Tracked objects:
 28268 ;;		On entry : 3F/0
 28269 ;;		On exit  : 3B/39
 28270 ;;		Unchanged: 0/0
 28271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28276 ;;Total ram usage:        0 bytes
 28277 ;; Hardware stack levels used:    1
 28278 ;; This function calls:
 28279 ;;		Nothing
 28280 ;; This function is called by:
 28281 ;;		_UART1_Initialize
 28282 ;;		_UART1_tx_vect_isr
 28283 ;; This function uses a reentrant model
 28284 ;;
 28285                           
 28286                           	psect	text148
 28287  018F64                     __ptext148:
 28288                           	opt callstack 0
 28289  018F64                     _UART1_Transmit_ISR:
 28290                           	opt callstack 12
 28291                           
 28292                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 28293                           
 28294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28295                           ;incstack = 0
 28296  018F64  0E40               	movlw	64
 28297  018F66  6022               	cpfslt	_uart1TxBufferRemaining^0,c
 28298  018F68  D010               	goto	l583
 28299                           
 28300                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 28301  018F6A  0EBC               	movlw	low _uart1TxBuffer
 28302  018F6C  2423               	addwf	_uart1TxTail^0,w,c	;volatile
 28303  018F6E  6ED9               	movwf	fsr2l,c
 28304  018F70  6ADA               	clrf	fsr2h,c
 28305  018F72  0E02               	movlw	high _uart1TxBuffer
 28306  018F74  22DA               	addwfc	fsr2h,f,c
 28307  018F76  50DF               	movf	indf2,w,c
 28308  018F78  013D               	movlb	61	; () banked
 28309  018F7A  6FEA               	movwf	234,b	;volatile
 28310                           
 28311                           ; BSR set to: 61
 28312  018F7C  2A23               	incf	_uart1TxTail^0,f,c	;volatile
 28313                           
 28314                           ; BSR set to: 61
 28315                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 28316  018F7E  0E3F               	movlw	63
 28317  018F80  6423               	cpfsgt	_uart1TxTail^0,c
 28318  018F82  D001               	goto	l9304
 28319                           
 28320                           ; BSR set to: 61
 28321                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 28322  018F84  6A23               	clrf	_uart1TxTail^0,c	;volatile
 28323  018F86                     l9304:
 28324                           
 28325                           ; BSR set to: 61
 28326                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 28327  018F86  2A22               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 28328                           
 28329                           ;mcc_generated_files/uart1.c: 222:  } else {
 28330  018F88  0012               	return	
 28331  018F8A                     l583:
 28332                           
 28333                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 28334  018F8A  0139               	movlb	57	; () banked
 28335  018F8C  9993               	bcf	147,4,b	;volatile
 28336                           
 28337                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28338  018F8E  0012               	return		;funcret
 28339  018F90                     __end_of_UART1_Transmit_ISR:
 28340                           	opt callstack 0
 28341                           
 28342 ;; *************** function _UART1_rx_vect_isr *****************
 28343 ;; Defined at:
 28344 ;;		line 206 in file "mcc_generated_files/uart1.c"
 28345 ;; Parameters:    Size  Location     Type
 28346 ;;		None
 28347 ;; Auto vars:     Size  Location     Type
 28348 ;;		None
 28349 ;; Return value:  Size  Location     Type
 28350 ;;                  1    wreg      void 
 28351 ;; Registers used:
 28352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28353 ;; Tracked objects:
 28354 ;;		On entry : 0/0
 28355 ;;		On exit  : 0/0
 28356 ;;		Unchanged: 0/0
 28357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28362 ;;Total ram usage:        0 bytes
 28363 ;; Hardware stack levels used:    1
 28364 ;; Hardware stack levels required when called:    1
 28365 ;; This function calls:
 28366 ;;		Absolute function
 28367 ;;		_UART1_Receive_ISR
 28368 ;; This function is called by:
 28369 ;;		Interrupt level 2
 28370 ;; This function uses a non-reentrant model
 28371 ;;
 28372                           
 28373                           	psect	text149
 28374  0192B8                     __ptext149:
 28375                           	opt callstack 0
 28376  0192B8                     _UART1_rx_vect_isr:
 28377                           	opt callstack 12
 28378                           
 28379                           ;incstack = 0
 28380  0192B8  EE14  F016         	lfsr	1,___inthi_sp
 28381                           
 28382                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28383  0192BC  0100               	movlb	0	; () banked
 28384  0192BE  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28385  0192C0  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28386  0192C2  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28387  0192C4  B4D8               	btfsc	status,2,c
 28388  0192C6  0011               	retfie		f
 28389                           
 28390                           ; BSR set to: 0
 28391                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28392  0192C8  D801               	call	i2u910_48
 28393  0192CA  0011               	retfie		f
 28394  0192CC                     i2u910_48:
 28395  0192CC  0005               	push	
 28396  0192CE  6EFA               	movwf	pclath,c
 28397  0192D0  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28398  0192D2  6EFD               	movwf	tosl,c
 28399  0192D4  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28400  0192D6  6EFE               	movwf	tosh,c
 28401  0192D8  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28402  0192DA  6EFF               	movwf	tosu,c
 28403  0192DC  50FA               	movf	pclath,w,c
 28404  0192DE  0012               	return		;indir
 28405  0192E0                     __end_of_UART1_rx_vect_isr:
 28406                           	opt callstack 0
 28407                           
 28408 ;; *************** function _UART1_Receive_ISR *****************
 28409 ;; Defined at:
 28410 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28411 ;; Parameters:    Size  Location     Type
 28412 ;;		None
 28413 ;; Auto vars:     Size  Location     Type
 28414 ;;		None
 28415 ;; Return value:  Size  Location     Type
 28416 ;;                  1  [STACK] void 
 28417 ;; Registers used:
 28418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28419 ;; Tracked objects:
 28420 ;;		On entry : 3F/0
 28421 ;;		On exit  : 0/0
 28422 ;;		Unchanged: 0/0
 28423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28428 ;;Total ram usage:        0 bytes
 28429 ;; Hardware stack levels used:    1
 28430 ;; This function calls:
 28431 ;;		Nothing
 28432 ;; This function is called by:
 28433 ;;		_UART1_Initialize
 28434 ;;		_UART1_rx_vect_isr
 28435 ;; This function uses a reentrant model
 28436 ;;
 28437                           
 28438                           	psect	text150
 28439  0194BC                     __ptext150:
 28440                           	opt callstack 0
 28441  0194BC                     _UART1_Receive_ISR:
 28442                           	opt callstack 12
 28443                           
 28444                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28445                           
 28446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28447                           ;incstack = 0
 28448  0194BC  0E00               	movlw	low _uart1RxBuffer
 28449  0194BE  2421               	addwf	_uart1RxHead^0,w,c	;volatile
 28450  0194C0  6ED9               	movwf	fsr2l,c
 28451  0194C2  6ADA               	clrf	fsr2h,c
 28452  0194C4  0E05               	movlw	high _uart1RxBuffer
 28453  0194C6  22DA               	addwfc	fsr2h,f,c
 28454  0194C8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28455  0194CE  2A21               	incf	_uart1RxHead^0,f,c	;volatile
 28456                           
 28457                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28458  0194D0  2821               	incf	_uart1RxHead^0,w,c
 28459  0194D2  B4D8               	btfsc	status,2,c
 28460                           
 28461                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28462  0194D4  6A21               	clrf	_uart1RxHead^0,c	;volatile
 28463                           
 28464                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28465  0194D6  2A1F               	incf	_uart1RxCount^0,f,c	;volatile
 28466                           
 28467                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28468  0194D8  0012               	return		;funcret
 28469  0194DA                     __end_of_UART1_Receive_ISR:
 28470                           	opt callstack 0
 28471                           
 28472 ;; *************** function _UART2_tx_vect_isr *****************
 28473 ;; Defined at:
 28474 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28475 ;; Parameters:    Size  Location     Type
 28476 ;;		None
 28477 ;; Auto vars:     Size  Location     Type
 28478 ;;		None
 28479 ;; Return value:  Size  Location     Type
 28480 ;;                  1    wreg      void 
 28481 ;; Registers used:
 28482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28483 ;; Tracked objects:
 28484 ;;		On entry : 0/0
 28485 ;;		On exit  : 0/0
 28486 ;;		Unchanged: 0/0
 28487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28492 ;;Total ram usage:        0 bytes
 28493 ;; Hardware stack levels used:    1
 28494 ;; Hardware stack levels required when called:    1
 28495 ;; This function calls:
 28496 ;;		Absolute function
 28497 ;;		_UART2_Transmit_ISR
 28498 ;; This function is called by:
 28499 ;;		Interrupt level 2
 28500 ;; This function uses a non-reentrant model
 28501 ;;
 28502                           
 28503                           	psect	text151
 28504  0192E0                     __ptext151:
 28505                           	opt callstack 0
 28506  0192E0                     _UART2_tx_vect_isr:
 28507                           	opt callstack 12
 28508                           
 28509                           ;incstack = 0
 28510  0192E0  EE14  F016         	lfsr	1,___inthi_sp
 28511                           
 28512                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28513  0192E4  0100               	movlb	0	; () banked
 28514  0192E6  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28515  0192E8  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28516  0192EA  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28517  0192EC  B4D8               	btfsc	status,2,c
 28518  0192EE  0011               	retfie		f
 28519                           
 28520                           ; BSR set to: 0
 28521                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28522  0192F0  D801               	call	i2u912_48
 28523  0192F2  0011               	retfie		f
 28524  0192F4                     i2u912_48:
 28525  0192F4  0005               	push	
 28526  0192F6  6EFA               	movwf	pclath,c
 28527  0192F8  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28528  0192FA  6EFD               	movwf	tosl,c
 28529  0192FC  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28530  0192FE  6EFE               	movwf	tosh,c
 28531  019300  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28532  019302  6EFF               	movwf	tosu,c
 28533  019304  50FA               	movf	pclath,w,c
 28534  019306  0012               	return		;indir
 28535  019308                     __end_of_UART2_tx_vect_isr:
 28536                           	opt callstack 0
 28537                           
 28538 ;; *************** function _UART2_Transmit_ISR *****************
 28539 ;; Defined at:
 28540 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28541 ;; Parameters:    Size  Location     Type
 28542 ;;		None
 28543 ;; Auto vars:     Size  Location     Type
 28544 ;;		None
 28545 ;; Return value:  Size  Location     Type
 28546 ;;                  1  [STACK] void 
 28547 ;; Registers used:
 28548 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28549 ;; Tracked objects:
 28550 ;;		On entry : 3F/0
 28551 ;;		On exit  : 3B/39
 28552 ;;		Unchanged: 0/0
 28553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28558 ;;Total ram usage:        0 bytes
 28559 ;; Hardware stack levels used:    1
 28560 ;; This function calls:
 28561 ;;		Nothing
 28562 ;; This function is called by:
 28563 ;;		_UART2_Initialize
 28564 ;;		_UART2_tx_vect_isr
 28565 ;; This function uses a reentrant model
 28566 ;;
 28567                           
 28568                           	psect	text152
 28569  018F90                     __ptext152:
 28570                           	opt callstack 0
 28571  018F90                     _UART2_Transmit_ISR:
 28572                           	opt callstack 12
 28573                           
 28574                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 28575                           
 28576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28577                           ;incstack = 0
 28578  018F90  0E40               	movlw	64
 28579  018F92  601C               	cpfslt	_uart2TxBufferRemaining^0,c
 28580  018F94  D010               	goto	l703
 28581                           
 28582                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 28583  018F96  0E54               	movlw	low _uart2TxBuffer
 28584  018F98  241D               	addwf	_uart2TxTail^0,w,c	;volatile
 28585  018F9A  6ED9               	movwf	fsr2l,c
 28586  018F9C  6ADA               	clrf	fsr2h,c
 28587  018F9E  0E03               	movlw	high _uart2TxBuffer
 28588  018FA0  22DA               	addwfc	fsr2h,f,c
 28589  018FA2  50DF               	movf	indf2,w,c
 28590  018FA4  013D               	movlb	61	; () banked
 28591  018FA6  6FD2               	movwf	210,b	;volatile
 28592                           
 28593                           ; BSR set to: 61
 28594  018FA8  2A1D               	incf	_uart2TxTail^0,f,c	;volatile
 28595                           
 28596                           ; BSR set to: 61
 28597                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 28598  018FAA  0E3F               	movlw	63
 28599  018FAC  641D               	cpfsgt	_uart2TxTail^0,c
 28600  018FAE  D001               	goto	l9326
 28601                           
 28602                           ; BSR set to: 61
 28603                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 28604  018FB0  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 28605  018FB2                     l9326:
 28606                           
 28607                           ; BSR set to: 61
 28608                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 28609  018FB2  2A1C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 28610                           
 28611                           ;mcc_generated_files/uart2.c: 224:     }
 28612  018FB4  0012               	return	
 28613  018FB6                     l703:
 28614                           
 28615                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 28616  018FB6  0139               	movlb	57	; () banked
 28617  018FB8  9796               	bcf	150,3,b	;volatile
 28618                           
 28619                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28620  018FBA  0012               	return		;funcret
 28621  018FBC                     __end_of_UART2_Transmit_ISR:
 28622                           	opt callstack 0
 28623                           
 28624 ;; *************** function _UART2_rx_vect_isr *****************
 28625 ;; Defined at:
 28626 ;;		line 203 in file "mcc_generated_files/uart2.c"
 28627 ;; Parameters:    Size  Location     Type
 28628 ;;		None
 28629 ;; Auto vars:     Size  Location     Type
 28630 ;;		None
 28631 ;; Return value:  Size  Location     Type
 28632 ;;                  1    wreg      void 
 28633 ;; Registers used:
 28634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28635 ;; Tracked objects:
 28636 ;;		On entry : 0/0
 28637 ;;		On exit  : 0/0
 28638 ;;		Unchanged: 0/0
 28639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28644 ;;Total ram usage:        0 bytes
 28645 ;; Hardware stack levels used:    1
 28646 ;; Hardware stack levels required when called:    1
 28647 ;; This function calls:
 28648 ;;		Absolute function
 28649 ;;		_UART2_Receive_ISR
 28650 ;; This function is called by:
 28651 ;;		Interrupt level 2
 28652 ;; This function uses a non-reentrant model
 28653 ;;
 28654                           
 28655                           	psect	text153
 28656  019308                     __ptext153:
 28657                           	opt callstack 0
 28658  019308                     _UART2_rx_vect_isr:
 28659                           	opt callstack 12
 28660                           
 28661                           ;incstack = 0
 28662  019308  EE14  F016         	lfsr	1,___inthi_sp
 28663                           
 28664                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 28665  01930C  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28666  01930E  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 28667  019310  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 28668  019312  B4D8               	btfsc	status,2,c
 28669  019314  0011               	retfie		f
 28670                           
 28671                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 28672  019316  D801               	call	i2u914_48
 28673  019318  0011               	retfie		f
 28674  01931A                     i2u914_48:
 28675  01931A  0005               	push	
 28676  01931C  6EFA               	movwf	pclath,c
 28677  01931E  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28678  019320  6EFD               	movwf	tosl,c
 28679  019322  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 28680  019324  6EFE               	movwf	tosh,c
 28681  019326  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 28682  019328  6EFF               	movwf	tosu,c
 28683  01932A  50FA               	movf	pclath,w,c
 28684  01932C  0012               	return		;indir
 28685  01932E                     __end_of_UART2_rx_vect_isr:
 28686                           	opt callstack 0
 28687                           
 28688 ;; *************** function _UART2_Receive_ISR *****************
 28689 ;; Defined at:
 28690 ;;		line 233 in file "mcc_generated_files/uart2.c"
 28691 ;; Parameters:    Size  Location     Type
 28692 ;;		None
 28693 ;; Auto vars:     Size  Location     Type
 28694 ;;		None
 28695 ;; Return value:  Size  Location     Type
 28696 ;;                  1  [STACK] void 
 28697 ;; Registers used:
 28698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28699 ;; Tracked objects:
 28700 ;;		On entry : 0/0
 28701 ;;		On exit  : 0/0
 28702 ;;		Unchanged: 0/0
 28703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28708 ;;Total ram usage:        0 bytes
 28709 ;; Hardware stack levels used:    1
 28710 ;; This function calls:
 28711 ;;		Nothing
 28712 ;; This function is called by:
 28713 ;;		_UART2_Initialize
 28714 ;;		_UART2_rx_vect_isr
 28715 ;; This function uses a reentrant model
 28716 ;;
 28717                           
 28718                           	psect	text154
 28719  0194DA                     __ptext154:
 28720                           	opt callstack 0
 28721  0194DA                     _UART2_Receive_ISR:
 28722                           	opt callstack 12
 28723                           
 28724                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 28725                           
 28726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28727                           ;incstack = 0
 28728  0194DA  0E00               	movlw	low _uart2RxBuffer
 28729  0194DC  241B               	addwf	_uart2RxHead^0,w,c	;volatile
 28730  0194DE  6ED9               	movwf	fsr2l,c
 28731  0194E0  6ADA               	clrf	fsr2h,c
 28732  0194E2  0E06               	movlw	high _uart2RxBuffer
 28733  0194E4  22DA               	addwfc	fsr2h,f,c
 28734  0194E6  006F F743 FFDF     	movff	15824,indf2	;volatile
 28735  0194EC  2A1B               	incf	_uart2RxHead^0,f,c	;volatile
 28736                           
 28737                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 28738  0194EE  281B               	incf	_uart2RxHead^0,w,c
 28739  0194F0  B4D8               	btfsc	status,2,c
 28740                           
 28741                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 28742  0194F2  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 28743                           
 28744                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 28745  0194F4  2A19               	incf	_uart2RxCount^0,f,c	;volatile
 28746                           
 28747                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28748  0194F6  0012               	return		;funcret
 28749  0194F8                     __end_of_UART2_Receive_ISR:
 28750                           	opt callstack 0
 28751                           
 28752 ;; *************** function _TMR6_ISR *****************
 28753 ;; Defined at:
 28754 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 28755 ;; Parameters:    Size  Location     Type
 28756 ;;		None
 28757 ;; Auto vars:     Size  Location     Type
 28758 ;;		None
 28759 ;; Return value:  Size  Location     Type
 28760 ;;                  1    wreg      void 
 28761 ;; Registers used:
 28762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28763 ;; Tracked objects:
 28764 ;;		On entry : 0/0
 28765 ;;		On exit  : 0/0
 28766 ;;		Unchanged: 0/0
 28767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28772 ;;Total ram usage:        1 bytes
 28773 ;; Hardware stack levels used:    1
 28774 ;; Hardware stack levels required when called:    2
 28775 ;; This function calls:
 28776 ;;		_TMR6_CallBack
 28777 ;; This function is called by:
 28778 ;;		Interrupt level 2
 28779 ;; This function uses a non-reentrant model
 28780 ;;
 28781                           
 28782                           	psect	text155
 28783  019530                     __ptext155:
 28784                           	opt callstack 0
 28785  019530                     _TMR6_ISR:
 28786                           	opt callstack 11
 28787                           
 28788                           ;incstack = 0
 28789  019530  0060  F094  F04A   	movff	btemp,??_TMR6_ISR
 28790  019536  EE14  F016         	lfsr	1,___inthi_sp
 28791                           
 28792                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 28793  01953A  0139               	movlb	57	; () banked
 28794  01953C  91A9               	bcf	169,0,b	;volatile
 28795                           
 28796                           ; BSR set to: 57
 28797                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 28798  01953E  ECCD  F0C9         	call	_TMR6_CallBack	;wreg free
 28799  019542  0060  F128  F025   	movff	??_TMR6_ISR,btemp
 28800  019548  0011               	retfie		f
 28801  01954A                     __end_of_TMR6_ISR:
 28802                           	opt callstack 0
 28803                           
 28804 ;; *************** function _TMR6_CallBack *****************
 28805 ;; Defined at:
 28806 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 28807 ;; Parameters:    Size  Location     Type
 28808 ;;		None
 28809 ;; Auto vars:     Size  Location     Type
 28810 ;;		None
 28811 ;; Return value:  Size  Location     Type
 28812 ;;                  1  [STACK] void 
 28813 ;; Registers used:
 28814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28815 ;; Tracked objects:
 28816 ;;		On entry : 3F/39
 28817 ;;		On exit  : 0/0
 28818 ;;		Unchanged: 0/0
 28819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28824 ;;Total ram usage:        0 bytes
 28825 ;; Hardware stack levels used:    1
 28826 ;; Hardware stack levels required when called:    1
 28827 ;; This function calls:
 28828 ;;		Absolute function
 28829 ;;		_TMR6_DefaultInterruptHandler
 28830 ;; This function is called by:
 28831 ;;		_TMR6_ISR
 28832 ;; This function uses a reentrant model
 28833 ;;
 28834                           
 28835                           	psect	text156
 28836  01939A                     __ptext156:
 28837                           	opt callstack 0
 28838  01939A                     _TMR6_CallBack:
 28839                           	opt callstack 11
 28840                           
 28841                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 28842                           
 28843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28844                           ;incstack = 0
 28845  01939A  0100               	movlb	0	; () banked
 28846  01939C  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28847  01939E  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28848  0193A0  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28849  0193A2  B4D8               	btfsc	status,2,c
 28850  0193A4  0012               	return	
 28851                           
 28852                           ; BSR set to: 0
 28853                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 28854  0193A6  D801               	call	u877_48
 28855  0193A8  0012               	return	
 28856  0193AA                     u877_48:
 28857  0193AA  0005               	push	
 28858  0193AC  6EFA               	movwf	pclath,c
 28859  0193AE  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28860  0193B0  6EFD               	movwf	tosl,c
 28861  0193B2  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28862  0193B4  6EFE               	movwf	tosh,c
 28863  0193B6  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28864  0193B8  6EFF               	movwf	tosu,c
 28865  0193BA  50FA               	movf	pclath,w,c
 28866  0193BC  0012               	return		;indir
 28867  0193BE                     __end_of_TMR6_CallBack:
 28868                           	opt callstack 0
 28869                           
 28870 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 28871 ;; Defined at:
 28872 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 28873 ;; Parameters:    Size  Location     Type
 28874 ;;		None
 28875 ;; Auto vars:     Size  Location     Type
 28876 ;;  i               1  [STACK] unsigned char 
 28877 ;; Return value:  Size  Location     Type
 28878 ;;                  1  [STACK] void 
 28879 ;; Registers used:
 28880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28881 ;; Tracked objects:
 28882 ;;		On entry : 3F/0
 28883 ;;		On exit  : 0/0
 28884 ;;		Unchanged: 0/0
 28885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28890 ;;Total ram usage:        0 bytes
 28891 ;; Hardware stack levels used:    1
 28892 ;; This function calls:
 28893 ;;		Nothing
 28894 ;; This function is called by:
 28895 ;;		_TMR6_Initialize
 28896 ;;		_TMR6_CallBack
 28897 ;; This function uses a reentrant model
 28898 ;;
 28899                           
 28900                           	psect	text157
 28901  018946                     __ptext157:
 28902                           	opt callstack 0
 28903  018946                     _TMR6_DefaultInterruptHandler:
 28904                           	opt callstack 0
 28905                           
 28906                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28907  018946  52E6               	movf	postinc1,f,c
 28908                           
 28909                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 28910                           ;stkvar	_i @ sp[(-1)+0]
 28911                           
 28912                           ;incstack = 0
 28913  018948  0EFF               	movlw	-1
 28914  01894A  6AE3               	clrf	plusw1,c
 28915  01894C                     l8948:
 28916                           
 28917                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 28918                           ;stkvar	_i @ sp[(-1)+0]
 28919  01894C  0EFF               	movlw	-1
 28920  01894E  50E3               	movf	plusw1,w,c
 28921  018950  0D02               	mullw	2
 28922  018952  0EB5               	movlw	low _tickCount
 28923  018954  24F3               	addwf	243,w,c
 28924  018956  6ED9               	movwf	fsr2l,c
 28925  018958  0E01               	movlw	high _tickCount
 28926  01895A  20F4               	addwfc	prodh,w,c
 28927  01895C  6EDA               	movwf	fsr2h,c
 28928  01895E  50DE               	movf	postinc2,w,c
 28929  018960  10DE               	iorwf	postinc2,w,c
 28930  018962  B4D8               	btfsc	status,2,c
 28931  018964  D00C               	goto	l8952
 28932                           
 28933                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 28934                           ;stkvar	_i @ sp[(-1)+0]
 28935  018966  0EFF               	movlw	-1
 28936  018968  50E3               	movf	plusw1,w,c
 28937  01896A  0D02               	mullw	2
 28938  01896C  0EB5               	movlw	low _tickCount
 28939  01896E  24F3               	addwf	243,w,c
 28940  018970  6ED9               	movwf	fsr2l,c
 28941  018972  0E01               	movlw	high _tickCount
 28942  018974  20F4               	addwfc	prodh,w,c
 28943  018976  6EDA               	movwf	fsr2h,c
 28944  018978  06DE               	decf	postinc2,f,c
 28945  01897A  0E00               	movlw	0
 28946  01897C  5ADD               	subwfb	postdec2,f,c
 28947  01897E                     l8952:
 28948                           
 28949                           ;mcc_generated_files/tmr6.c: 207:  }
 28950                           ;stkvar	_i @ sp[(-1)+0]
 28951  01897E  0EFF               	movlw	-1
 28952  018980  2AE3               	incf	plusw1,f,c
 28953                           
 28954                           ;stkvar	_i @ sp[(-1)+0]
 28955  018982  0EFF               	movlw	-1
 28956  018984  006F FF8C  F025    	movff	plusw1,btemp
 28957  01898A  0E0B               	movlw	11
 28958  01898C  6425               	cpfsgt	btemp^0,c
 28959  01898E  D7DE               	goto	l8948
 28960                           
 28961                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28962  018990  52E5               	movf	postdec1,f,c
 28963  018992  0012               	return		;funcret
 28964  018994                     __end_of_TMR6_DefaultInterruptHandler:
 28965                           	opt callstack 0
 28966                           
 28967 ;; *************** function _DMA1_DMASCNT_ISR *****************
 28968 ;; Defined at:
 28969 ;;		line 126 in file "mcc_generated_files/dma1.c"
 28970 ;; Parameters:    Size  Location     Type
 28971 ;;		None
 28972 ;; Auto vars:     Size  Location     Type
 28973 ;;		None
 28974 ;; Return value:  Size  Location     Type
 28975 ;;                  1    wreg      void 
 28976 ;; Registers used:
 28977 ;;		None
 28978 ;; Tracked objects:
 28979 ;;		On entry : 0/0
 28980 ;;		On exit  : 3F/0
 28981 ;;		Unchanged: 0/0
 28982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28987 ;;Total ram usage:        0 bytes
 28988 ;; Hardware stack levels used:    1
 28989 ;; This function calls:
 28990 ;;		Nothing
 28991 ;; This function is called by:
 28992 ;;		Interrupt level 2
 28993 ;; This function uses a non-reentrant model
 28994 ;;
 28995                           
 28996                           	psect	text158
 28997  019630                     __ptext158:
 28998                           	opt callstack 0
 28999  019630                     _DMA1_DMASCNT_ISR:
 29000                           	opt callstack 13
 29001                           
 29002                           ;incstack = 0
 29003  019630  EE14  F016         	lfsr	1,___inthi_sp
 29004                           
 29005                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 29006  019634  0139               	movlb	57	; () banked
 29007  019636  91A2               	bcf	162,0,b	;volatile
 29008                           
 29009                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 29010  019638  0100               	movlb	0	; () banked
 29011  01963A  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 29012                           
 29013                           ; BSR set to: 0
 29014  01963C  0011               	retfie		f
 29015  01963E                     __end_of_DMA1_DMASCNT_ISR:
 29016                           	opt callstack 0
 29017                           
 29018 ;; *************** function _DMA1_DMADCNT_ISR *****************
 29019 ;; Defined at:
 29020 ;;		line 134 in file "mcc_generated_files/dma1.c"
 29021 ;; Parameters:    Size  Location     Type
 29022 ;;		None
 29023 ;; Auto vars:     Size  Location     Type
 29024 ;;		None
 29025 ;; Return value:  Size  Location     Type
 29026 ;;                  1    wreg      void 
 29027 ;; Registers used:
 29028 ;;		None
 29029 ;; Tracked objects:
 29030 ;;		On entry : 0/0
 29031 ;;		On exit  : 3F/39
 29032 ;;		Unchanged: 0/0
 29033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29038 ;;Total ram usage:        0 bytes
 29039 ;; Hardware stack levels used:    1
 29040 ;; This function calls:
 29041 ;;		Nothing
 29042 ;; This function is called by:
 29043 ;;		Interrupt level 2
 29044 ;; This function uses a non-reentrant model
 29045 ;;
 29046                           
 29047                           	psect	text159
 29048  019648                     __ptext159:
 29049                           	opt callstack 0
 29050  019648                     _DMA1_DMADCNT_ISR:
 29051                           	opt callstack 13
 29052                           
 29053                           ; BSR set to: 0
 29054                           ;incstack = 0
 29055  019648  EE14  F016         	lfsr	1,___inthi_sp
 29056                           
 29057                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 29058  01964C  0139               	movlb	57	; () banked
 29059  01964E  93A2               	bcf	162,1,b	;volatile
 29060                           
 29061                           ; BSR set to: 57
 29062  019650  0011               	retfie		f
 29063  019652                     __end_of_DMA1_DMADCNT_ISR:
 29064                           	opt callstack 0
 29065                           
 29066 ;; *************** function _DMA1_DMAA_ISR *****************
 29067 ;; Defined at:
 29068 ;;		line 144 in file "mcc_generated_files/dma1.c"
 29069 ;; Parameters:    Size  Location     Type
 29070 ;;		None
 29071 ;; Auto vars:     Size  Location     Type
 29072 ;;		None
 29073 ;; Return value:  Size  Location     Type
 29074 ;;                  1    wreg      void 
 29075 ;; Registers used:
 29076 ;;		None
 29077 ;; Tracked objects:
 29078 ;;		On entry : 0/0
 29079 ;;		On exit  : 3F/39
 29080 ;;		Unchanged: 0/0
 29081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29086 ;;Total ram usage:        0 bytes
 29087 ;; Hardware stack levels used:    1
 29088 ;; This function calls:
 29089 ;;		Nothing
 29090 ;; This function is called by:
 29091 ;;		Interrupt level 2
 29092 ;; This function uses a non-reentrant model
 29093 ;;
 29094                           
 29095                           	psect	text160
 29096  019654                     __ptext160:
 29097                           	opt callstack 0
 29098  019654                     _DMA1_DMAA_ISR:
 29099                           	opt callstack 13
 29100                           
 29101                           ; BSR set to: 57
 29102                           ;incstack = 0
 29103  019654  EE14  F016         	lfsr	1,___inthi_sp
 29104                           
 29105                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 29106  019658  0139               	movlb	57	; () banked
 29107  01965A  97A2               	bcf	162,3,b	;volatile
 29108                           
 29109                           ; BSR set to: 57
 29110  01965C  0011               	retfie		f
 29111  01965E                     __end_of_DMA1_DMAA_ISR:
 29112                           	opt callstack 0
 29113                           
 29114 ;; *************** function _DMA1_DMAOR_ISR *****************
 29115 ;; Defined at:
 29116 ;;		line 155 in file "mcc_generated_files/dma1.c"
 29117 ;; Parameters:    Size  Location     Type
 29118 ;;		None
 29119 ;; Auto vars:     Size  Location     Type
 29120 ;;		None
 29121 ;; Return value:  Size  Location     Type
 29122 ;;                  1    wreg      void 
 29123 ;; Registers used:
 29124 ;;		None
 29125 ;; Tracked objects:
 29126 ;;		On entry : 0/0
 29127 ;;		On exit  : 3F/39
 29128 ;;		Unchanged: 0/0
 29129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29134 ;;Total ram usage:        0 bytes
 29135 ;; Hardware stack levels used:    1
 29136 ;; This function calls:
 29137 ;;		Nothing
 29138 ;; This function is called by:
 29139 ;;		Interrupt level 2
 29140 ;; This function uses a non-reentrant model
 29141 ;;
 29142                           
 29143                           	psect	text161
 29144  019660                     __ptext161:
 29145                           	opt callstack 0
 29146  019660                     _DMA1_DMAOR_ISR:
 29147                           	opt callstack 13
 29148                           
 29149                           ; BSR set to: 57
 29150                           ;incstack = 0
 29151  019660  EE14  F016         	lfsr	1,___inthi_sp
 29152                           
 29153                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 29154  019664  0139               	movlb	57	; () banked
 29155  019666  95A2               	bcf	162,2,b	;volatile
 29156                           
 29157                           ; BSR set to: 57
 29158  019668  0011               	retfie		f
 29159  01966A                     __end_of_DMA1_DMAOR_ISR:
 29160                           	opt callstack 0
 29161                           
 29162                           ;
 29163                           ; Interrupt Vector Table @ 0x8
 29164                           ;
 29165                           
 29166                           	psect	ivt0x8
 29167  000008                     __pivt0x8:
 29168                           	opt callstack 0
 29169  000008                     ivt0x8_base:
 29170                           	opt callstack 0
 29171                           
 29172                           ; Vector 0 : SWINT
 29173  000008  65AB               	dw	_Default_ISR shr (0+2)
 29174                           
 29175                           ; Vector 1 : HLVD
 29176  00000A  65AB               	dw	_Default_ISR shr (0+2)
 29177                           
 29178                           ; Vector 2 : OSF
 29179  00000C  65AB               	dw	_Default_ISR shr (0+2)
 29180                           
 29181                           ; Vector 3 : CSW
 29182  00000E  65AB               	dw	_Default_ISR shr (0+2)
 29183                           
 29184                           ; Vector 4 : NVM
 29185  000010  65AB               	dw	_Default_ISR shr (0+2)
 29186                           
 29187                           ; Vector 5 : SCAN
 29188  000012  65AB               	dw	_Default_ISR shr (0+2)
 29189                           
 29190                           ; Vector 6 : CRC
 29191  000014  65AB               	dw	_Default_ISR shr (0+2)
 29192                           
 29193                           ; Vector 7 : IOC
 29194  000016  65AB               	dw	_Default_ISR shr (0+2)
 29195                           
 29196                           ; Vector 8 : INT0
 29197  000018  6588               	dw	_INT0_ISR shr (0+2)
 29198                           
 29199                           ; Vector 9 : ZCD
 29200  00001A  65AB               	dw	_Default_ISR shr (0+2)
 29201                           
 29202                           ; Vector 10 : AD
 29203  00001C  63CE               	dw	_ADCC_ISR shr (0+2)
 29204                           
 29205                           ; Vector 11 : ADT
 29206  00001E  6136               	dw	_ADCC_ThresholdISR shr (0+2)
 29207                           
 29208                           ; Vector 12 : CMP1
 29209  000020  65AB               	dw	_Default_ISR shr (0+2)
 29210                           
 29211                           ; Vector 13 : SMT1
 29212  000022  65AB               	dw	_Default_ISR shr (0+2)
 29213                           
 29214                           ; Vector 14 : SMT1PRA
 29215  000024  65AB               	dw	_Default_ISR shr (0+2)
 29216                           
 29217                           ; Vector 15 : SMT1PRW
 29218  000026  65AB               	dw	_Default_ISR shr (0+2)
 29219                           
 29220                           ; Vector 16 : DMA1SCNT
 29221  000028  658C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 29222                           
 29223                           ; Vector 17 : DMA1DCNT
 29224  00002A  6592               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 29225                           
 29226                           ; Vector 18 : DMA1OR
 29227  00002C  6598               	dw	_DMA1_DMAOR_ISR shr (0+2)
 29228                           
 29229                           ; Vector 19 : DMA1A
 29230  00002E  6595               	dw	_DMA1_DMAA_ISR shr (0+2)
 29231                           
 29232                           ; Vector 20 : SPI1RX
 29233  000030  65AB               	dw	_Default_ISR shr (0+2)
 29234                           
 29235                           ; Vector 21 : SPI1TX
 29236  000032  65AB               	dw	_Default_ISR shr (0+2)
 29237                           
 29238                           ; Vector 22 : SPI1
 29239  000034  65AB               	dw	_Default_ISR shr (0+2)
 29240                           
 29241                           ; Vector 23 : I2C1RX
 29242  000036  65AB               	dw	_Default_ISR shr (0+2)
 29243                           
 29244                           ; Vector 24 : I2C1TX
 29245  000038  65AB               	dw	_Default_ISR shr (0+2)
 29246                           
 29247                           ; Vector 25 : I2C1
 29248  00003A  65AB               	dw	_Default_ISR shr (0+2)
 29249                           
 29250                           ; Vector 26 : I2C1E
 29251  00003C  65AB               	dw	_Default_ISR shr (0+2)
 29252                           
 29253                           ; Vector 27 : U1RX
 29254  00003E  64AE               	dw	_UART1_rx_vect_isr shr (0+2)
 29255                           
 29256                           ; Vector 28 : U1TX
 29257  000040  64A4               	dw	_UART1_tx_vect_isr shr (0+2)
 29258                           
 29259                           ; Vector 29 : U1E
 29260  000042  65AB               	dw	_Default_ISR shr (0+2)
 29261                           
 29262                           ; Vector 30 : U1
 29263  000044  65AB               	dw	_Default_ISR shr (0+2)
 29264                           
 29265                           ; Vector 31 : TMR0
 29266  000046  65AB               	dw	_Default_ISR shr (0+2)
 29267                           
 29268                           ; Vector 32 : TMR1
 29269  000048  65AB               	dw	_Default_ISR shr (0+2)
 29270                           
 29271                           ; Vector 33 : TMR1G
 29272  00004A  65AB               	dw	_Default_ISR shr (0+2)
 29273                           
 29274                           ; Vector 34 : TMR2
 29275  00004C  65AB               	dw	_Default_ISR shr (0+2)
 29276                           
 29277                           ; Vector 35 : CCP1
 29278  00004E  65AB               	dw	_Default_ISR shr (0+2)
 29279                           
 29280                           ; Vector 36 : Undefined
 29281  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 29282                           
 29283                           ; Vector 37 : NCO1
 29284  000052  65AB               	dw	_Default_ISR shr (0+2)
 29285                           
 29286                           ; Vector 38 : CWG1
 29287  000054  65AB               	dw	_Default_ISR shr (0+2)
 29288                           
 29289                           ; Vector 39 : CLC1
 29290  000056  65AB               	dw	_Default_ISR shr (0+2)
 29291                           
 29292                           ; Vector 40 : INT1
 29293  000058  6331               	dw	_INT1_ISR shr (0+2)
 29294                           
 29295                           ; Vector 41 : CMP2
 29296  00005A  65AB               	dw	_Default_ISR shr (0+2)
 29297                           
 29298                           ; Vector 42 : DMA2SCNT
 29299  00005C  65AB               	dw	_Default_ISR shr (0+2)
 29300                           
 29301                           ; Vector 43 : DMA2DCNT
 29302  00005E  65AB               	dw	_Default_ISR shr (0+2)
 29303                           
 29304                           ; Vector 44 : DMA2OR
 29305  000060  65AB               	dw	_Default_ISR shr (0+2)
 29306                           
 29307                           ; Vector 45 : DMA2A
 29308  000062  65AB               	dw	_Default_ISR shr (0+2)
 29309                           
 29310                           ; Vector 46 : I2C2RX
 29311  000064  65AB               	dw	_Default_ISR shr (0+2)
 29312                           
 29313                           ; Vector 47 : I2C2TX
 29314  000066  65AB               	dw	_Default_ISR shr (0+2)
 29315                           
 29316                           ; Vector 48 : I2C2
 29317  000068  65AB               	dw	_Default_ISR shr (0+2)
 29318                           
 29319                           ; Vector 49 : I2C2E
 29320  00006A  65AB               	dw	_Default_ISR shr (0+2)
 29321                           
 29322                           ; Vector 50 : U2RX
 29323  00006C  64C2               	dw	_UART2_rx_vect_isr shr (0+2)
 29324                           
 29325                           ; Vector 51 : U2TX
 29326  00006E  64B8               	dw	_UART2_tx_vect_isr shr (0+2)
 29327                           
 29328                           ; Vector 52 : U2E
 29329  000070  65AB               	dw	_Default_ISR shr (0+2)
 29330                           
 29331                           ; Vector 53 : U2
 29332  000072  65AB               	dw	_Default_ISR shr (0+2)
 29333                           
 29334                           ; Vector 54 : TMR3
 29335  000074  5E54               	dw	_TMR3_ISR shr (0+2)
 29336                           
 29337                           ; Vector 55 : TMR3G
 29338  000076  65AB               	dw	_Default_ISR shr (0+2)
 29339                           
 29340                           ; Vector 56 : TMR4
 29341  000078  65AB               	dw	_Default_ISR shr (0+2)
 29342                           
 29343                           ; Vector 57 : CCP2
 29344  00007A  65AB               	dw	_Default_ISR shr (0+2)
 29345                           
 29346                           ; Vector 58 : Undefined
 29347  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29348                           
 29349                           ; Vector 59 : CWG2
 29350  00007E  65AB               	dw	_Default_ISR shr (0+2)
 29351                           
 29352                           ; Vector 60 : CLC2
 29353  000080  65AB               	dw	_Default_ISR shr (0+2)
 29354                           
 29355                           ; Vector 61 : INT2
 29356  000082  65AB               	dw	_Default_ISR shr (0+2)
 29357                           
 29358                           ; Vector 62 : Undefined
 29359  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29360                           
 29361                           ; Vector 63 : Undefined
 29362  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29363                           
 29364                           ; Vector 64 : Undefined
 29365  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29366                           
 29367                           ; Vector 65 : Undefined
 29368  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29369                           
 29370                           ; Vector 66 : Undefined
 29371  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29372                           
 29373                           ; Vector 67 : Undefined
 29374  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29375                           
 29376                           ; Vector 68 : Undefined
 29377  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29378                           
 29379                           ; Vector 69 : Undefined
 29380  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29381                           
 29382                           ; Vector 70 : TMR5
 29383  000094  6212               	dw	_TMR5_ISR shr (0+2)
 29384                           
 29385                           ; Vector 71 : TMR5G
 29386  000096  65AB               	dw	_Default_ISR shr (0+2)
 29387                           
 29388                           ; Vector 72 : TMR6
 29389  000098  654C               	dw	_TMR6_ISR shr (0+2)
 29390                           
 29391                           ; Vector 73 : CCP3
 29392  00009A  65AB               	dw	_Default_ISR shr (0+2)
 29393                           
 29394                           ; Vector 74 : CWG3
 29395  00009C  65AB               	dw	_Default_ISR shr (0+2)
 29396                           
 29397                           ; Vector 75 : CLC3
 29398  00009E  65AB               	dw	_Default_ISR shr (0+2)
 29399                           
 29400                           ; Vector 76 : Undefined
 29401  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29402                           
 29403                           ; Vector 77 : Undefined
 29404  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29405                           
 29406                           ; Vector 78 : Undefined
 29407  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29408                           
 29409                           ; Vector 79 : Undefined
 29410  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29411                           
 29412                           ; Vector 80 : CCP4
 29413  0000A8  65AB               	dw	_Default_ISR shr (0+2)
 29414                           
 29415                           ; Vector 81 : CLC4
 29416  0000AA  65AB               	dw	_Default_ISR shr (0+2)
 29417  0000AC                     ivt0x8_undefint:
 29418                           	opt callstack 0
 29419  0000AC  00FF               	reset	
 29420                           
 29421                           	psect	text162
 29422  000000                     __ptext162:
 29423                           	opt callstack 0
 29424                           
 29425                           	psect	rparam
 29426  0000                     
 29427                           	psect	temp
 29428  000025                     btemp:
 29429                           	opt callstack 0
 29430  000025                     	ds	32
 29431  0000                     wtemp0	set	btemp
 29432  0000                     wtemp1	set	btemp+2
 29433  0000                     wtemp2	set	btemp+4
 29434  0000                     wtemp3	set	btemp+6
 29435  0000                     wtemp4	set	btemp+8
 29436  0000                     wtemp5	set	btemp+10
 29437  0000                     wtemp8	set	btemp+1
 29438  0000                     ttemp0	set	btemp
 29439  0000                     ttemp1	set	btemp+3
 29440  0000                     ttemp2	set	btemp+6
 29441  0000                     ttemp3	set	btemp+9
 29442  0000                     ttemp5	set	btemp+1
 29443  0000                     ttemp6	set	btemp+4
 29444  0000                     ttemp7	set	btemp+8
 29445  0000                     ltemp0	set	btemp
 29446  0000                     ltemp1	set	btemp+4
 29447  0000                     ltemp2	set	btemp+8
 29448  0000                     lltemp0	set	btemp
 29449  0000                     lltemp1	set	btemp+8
 29450  0000                     lltemp2	set	btemp+16
 29451  0000                     lltemp3	set	btemp+24
 29452                           tosu	equ	0x3FFF
 29453                           tosh	equ	0x3FFE
 29454                           tosl	equ	0x3FFD
 29455                           stkptr	equ	0x3FFC
 29456                           pclatu	equ	0x3FFB
 29457                           pclath	equ	0x3FFA
 29458                           pcl	equ	0x3FF9
 29459                           tblptru	equ	0x3FF8
 29460                           tblptrh	equ	0x3FF7
 29461                           tblptrl	equ	0x3FF6
 29462                           tablat	equ	0x3FF5
 29463                           prodh	equ	0x3FF4
 29464                           prodl	equ	0x3FF3
 29465                           indf0	equ	0x3FEF
 29466                           postinc0	equ	0x3FEE
 29467                           postdec0	equ	0x3FED
 29468                           preinc0	equ	0x3FEC
 29469                           plusw0	equ	0x3FEB
 29470                           fsr0h	equ	0x3FEA
 29471                           fsr0l	equ	0x3FE9
 29472                           wreg	equ	0x3FE8
 29473                           indf1	equ	0x3FE7
 29474                           postinc1	equ	0x3FE6
 29475                           postdec1	equ	0x3FE5
 29476                           preinc1	equ	0x3FE4
 29477                           plusw1	equ	0x3FE3
 29478                           fsr1h	equ	0x3FE2
 29479                           fsr1l	equ	0x3FE1
 29480                           bsr	equ	0x3FE0
 29481                           indf2	equ	0x3FDF
 29482                           postinc2	equ	0x3FDE
 29483                           postdec2	equ	0x3FDD
 29484                           preinc2	equ	0x3FDC
 29485                           plusw2	equ	0x3FDB
 29486                           fsr2h	equ	0x3FDA
 29487                           fsr2l	equ	0x3FD9
 29488                           status	equ	0x3FD8


Data Sizes:
    Strings     446
    Constant    144
    Data        423
    BSS         1393
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      50
    BANK0           160      0     153
    BANK1           256     13     226
    BANK2           256      0     252
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5585_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4308tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  309323
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           13    13      0    5067
                                              0 BANK1     13    13      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    5007
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           0     0      0    5007
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       ___fladd
       ___fldiv
       ___fleq
       ___flge
       ___flmul
       ___fltol
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      E2       7       88.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      32       1       79.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     611      58        0.0%
DATA                 0      0     733       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec  6 01:54:54 2019

                     _SPI1_Exchange8bit 9444                __end_of_set_display_info 94BC  
                                     _C 0100                                       _D 06FF  
                                     _H 00F2                                       _P 00A5  
                                     _R 00C3                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 919E            __end_of_start_switch_handler 9444  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 9692                             __CFG_LVP$ON 000000  
                                   l173 95B6                                     l703 8FB6  
                                   l583 8F8A                                     l837 9452  
                                   _GIE 01FE97                                     _abs 8A26  
                                   _pad 7264                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 9562                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 9402                      _UART1_Transmit_ISR 8F64  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 93E0  
                          __CFG_ZCD$OFF 000000                                    l1030 8C7E  
                                  l2011 45FC                                    l2200 1D78  
                                  l1218 8CBE                                    l2150 49E2  
                                  l2047 123A                                    l3009 7142  
                                  l2129 5774                                    l1346 1F98  
                                  l1338 1DE0                                    l2091 0B1A  
                                  l1363 25EC                         _timer3ReloadVal 0012  
                                  l2076 066A                                    l1444 879E  
                                  l1356 2036                                    l1348 1F9E  
                                  l3070 837C                                    l1358 20FC  
                                  l3055 6650                                    l1359 220A  
                                  l2522 6B18                                    l3083 82F8  
                                  l1660 8D1E                                    l1580 7E5A  
                                  l1717 94B8                                    l1670 628A  
                                  l1808 6810                                    l1584 80CC  
                                  l2484 7AD8                                    l1677 7484  
                                  l1669 612E                                    l1765 4518  
                  _ADCC_StartConversion 95D0                                    l2807 3B7E  
                                  l2495 6C7A                                    l1599 8D88  
                                  l2488 6BA6                                    l2762 3604  
                                  l2914 8A66                                    l2906 69A6  
                                  l2843 2E48                                    l1885 81F2  
                                  l2774 3494                                    l1894 7690  
                                  l1991 72C0                                    l2945 5E32  
                                  l8002 322C                                    l2883 6488  
                                  l8110 35A4                                    l8030 3314  
                                  l8006 325C                                    l8112 35B4  
                                  l8024 32F8                                    l6600 7F2E  
                                  l8200 3920                                    l8106 358C  
                                  l8026 330A                                    l8034 3346  
                                  l6602 7F50                                    l8202 3932  
                                  l8210 398A                                    l8130 3664  
                                  l9012 66BE                                    l9004 6692  
                                  l8140 36BA                                    l8310 278C  
                                  l8118 35E4                                    l8070 34D4  
                                  l8046 341E                                    l8222 39D4  
                                  l8150 3742                                    l8142 36EA  
                                  l7510 6586                                    l9102 41C2  
                                  l8312 2792                                    l8304 274C  
                                  l8080 34FC                                    l8064 34B6  
                                  l8056 3478                                    l8048 3444  
                                  l9016 66D6                                    l8240 3A4A  
                                  l8216 39B8                                    l8208 3986  
                                  l8160 3798                                    l8136 36A4  
                                  l6720 4F94                                    l8322 27E4  
                                  l8314 27C2                                    l8066 34C8  
                                  l9050 8D34                                    l6650 8A56  
                                  l8250 3ABE                                    l8226 39FA  
                                  l8162 37C8                                    l6730 509A  
                                  l6722 4FE4                                    l6706 4E76  
                                  l9114 42CE                                    l9106 429C  
                                  l9220 3C4A                                    l8412 2D88  
                                  l8084 3502                                    l6900 717E  
                                  l8236 3A44                                    l8156 3782  
                                  l8500 6AA0                                    l7508 651A  
                                  l9132 44E6                                    l9140 44F8  
                                  l8270 3B62                                    l8262 3B2A  
                                  l8182 385A                                    l8174 3840  
                                  l6726 502C                                    l9126 444A  
                                  l9118 436A                                    l9206 81AC  
                                  l9304 8F86                                    l9224 3C8C  
                                  l8408 2D42                                    l8096 3560  
                                  l7472 5CA4                                    l7456 5BE2  
                                  l6824 5FCE                                    l6816 5F22  
                                  l6808 5E9A                                    l6904 7196  
                                  l8256 3AFA                                    l8192 38EA  
                                  l8168 3806                                    l6664 6944  
                                  l9234 3E9C                                    l9170 6F28  
                                  l8426 2DF6                                    l8418 2DB2  
                                  l7482 5D86                                    l7474 5CBC  
                                  l7466 5C78                                    l7458 5C04  
                                  l6770 59FE                                    l6850 6CA8  
                                  l6922 724A                                    l6914 7216  
                                  l8442 7AA2                                    l6930 89FC  
                                  l8506 6AB0                                    l6674 699E  
                                  l9244 3FC4                                    l9172 6F2E  
                                  l9180 6F70                                    l8428 2E10  
                                  l8380 2C58                                    l8292 26BE  
                                  l7492 5E22                                    l7476 5CE0  
                                  l6764 59AA                                    l8268 3B52  
                                  l8460 6BF4                                    l8508 6AC6  
                                  l6668 6948                                    l6692 836C  
                                  l6748 82E8                                    l8532 6344  
                                  l8524 62D8                                    l9092 40A4  
                                  l9326 8FB2                                    l9238 3F1A  
                                  l9174 6F3C                                    l9166 6F12  
                                  l8374 2C3C                                    l8294 26C4  
                                  l8286 267E                                    l7910 2EA8  
                                  l6942 8936                                    l7478 5D1E  
                                  l6862 6CDE                                    l8446 7AD6  
                                  l8438 7A60                                    l8454 6B64  
                                  l8534 6352                                    l9086 4074  
                                  l9600 83CA                                    l9248 405C  
                                  l9352 8C66                                    l9168 6F22  
                                  l8384 2C7E                                    l8296 26F4  
                                  l7920 2EFE                                    l6776 5A44  
                                  l6856 6CBE                                    l8472 6C78  
                                  l8464 6C42                                    l8544 63B4  
                                  l8536 6368                                    l5898 8CA6  
                                  l9194 700E                                    l9186 6FA0  
                                  l9178 6F44                                    l8394 2CC8  
                                  l7922 2F2E                                    l8482 6A02  
                                  l8546 63D2                                    l8538 6386  
                                  l9506 75FA                                    l7940 2FD8  
                                  l7916 2EE8                                    l6788 5B16  
                                  l6884 6DB8                                    l6876 6D84  
                                  l7860 8D92                                    l8556 6406  
                                  l8548 63E8                                    l9516 766A  
                                  l8398 2CCE                                    l7934 2F98  
                                  l8566 6468                                    l9470 7BE2  
                                  l7952 3040                                    l7944 2FEE  
                                  l7928 2F66                                    l6896 716C  
                                  l7946 301E                                    l7778 90A6  
                                  l8498 6A84                                    l9466 7BA4  
                                  l7890 9070                                    l7982 317E  
                                  l9494 759E                                    l8952 897E  
                                  l7992 31F0                                    l9488 567E  
                                  l9594 83BA                                    l8948 894C  
                                  l7996 3210                                    l9588 8C3C  
                                  l7998 3222                                    STR_1 FF60  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  STR_4 FF4F                                    STR_5 FF71  
                                  STR_6 FFB2                                    STR_7 FFE0  
                                  STR_8 FF3E                                    STR_9 FF93  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5000 4F3A                                    _T2PR 003FAB  
                                  u5100 8EFC                                    u5020 5012  
                                  u5005 4F30                                    u5110 8EFE  
                                  u5200 5B4E                                    u5025 5008  
                                  u5130 59A4                                    u5050 8B76  
                                  u5220 5BA0                                    u5060 8B78  
                                  u5150 59FA                                    u5310 6006  
                                  u5070 82A6                                    u5400 6DA4  
                                  u5080 82A8                                    u5161 5A04  
                                  u5170 5A3E                                    u5330 6058  
                                  u5250 5E94                                    _T6PR 003F93  
                                  u5500 8912                                    u5180 5A70  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u7110 31A4                                    u5510 8932  
                                  u4710 7F7E                                    u5270 5EEA  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u7120 31C4                                    u5280 5F1C  
                                  u8000 6A30                                    _PMD4 0039C4  
                                  u7121 31BE                                    _PMD5 0039C5  
                                  u5290 5F4E                                    u5450 71C2  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u4820 8A3A                                    u5380 6D0A  
                                  u4740 8ECC                                    u4717 7F70  
                                  u8005 6A26                                    u7310 34DA  
                                  u7230 333C                                    u6510 5C74  
                                  u5470 7236                                    u4830 68C8  
                                  u4750 8ECE                                    u7400 3570  
                                  u7160 3254                                    u4920 832A  
                                  u4760 8E9C                                    u7330 34F4  
                                  u7170 3274                                    u7138 31C6  
                                  u6530 5DCC                                    u5490 89F8  
                                  u8050 6ACE                                    u4930 832C  
                                  u6610 6612                                    u4770 8E9E  
                                  u7235 332C                                    u4835 68BE  
                                  u6540 5DCE                                    u8140 63FC  
                                  u8205 8584                                    u7165 3244  
                                  u8206 8586                                    u7270 3466  
                                  u8070 6AF8                                    u4950 4E0E  
                                  u7600 3A3C                                    u4880 6996  
                                  u4960 4E5A                                    u7370 3550  
                                  u4890 6998                                    u4875 6978  
                                  u4955 4E04                                    u8180 8550  
                                  u9300 704C                                    u8404 42B6  
                                  u8405 42B0                                    u7375 3540  
                                  u8280 6670                                    u9320 70C8  
                                  u7640 3A98                                    u7560 39B2  
                                  u8424 4384                                    u8344 408E  
                                  u8600 81DE                                    u4985 4E94  
                                  u8425 437E                                    u8345 4088  
                                  u7650 3AD2                                    u4986 4E9A  
                                  u8450 43AE                                    u4987 4EA8  
                                  u7820 2CC0                                    u8460 93CA  
                                  u9500 487A                                    u9420 454E  
                                  u7660 3B0E                                    u8444 43A6  
                                  u8364 40BE                                    u7645 3A88  
                                  u8445 43A0                                    u8365 40B8  
                                  u8198 8552                                    u7750 27D2  
                                  u9430 4550                                    u9511 48AA  
                                  u9520 48C0                                    u7920 7AD2  
                                  u9600 00DA                                    u8384 40E0  
                                  u9521 48BE                                    u8385 40DA  
                                  u8466 93CC                                    u9530 48D4  
                                  u9450 45C0                                    u8618 81E0  
                                  u8570 8198                                    u7860 2D1C  
                                  u9540 48D8                                    u9380 793C  
                                  u7765 2966                                    u7870 2D56  
                                  u9470 45D2                                    u9630 0194  
                                  u7775 2A2E                                    u7880 2D9C  
                                  u9560 48EE                                    u9720 050E  
                                  u9640 0196                                    u7865 2D0C  
                                  u7785 2BF6                                    u9490 4622  
                                  _PLLR 01CEE0                                    u6995 8BB2  
                                  u9387 792E                                    u7980 69E2  
                                  u9820 0648                                    u8588 819A  
                                  u7990 69F6                                    u9750 0562  
                                  u9670 02A6                                    u9680 02A8  
                                  u7985 69D8                                    u9780 05C6  
                                  u9890 0A18                                    u9990 0EE4  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8F64                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _atoi 5BC8  
                                  _ctoa 81F6                                    _main 1D82  
                                  _dtoa 451E                                    _nanf 8672  
                                  _seed 01CD                                    _prec 000C  
                                  _nout 00C1                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 568A                                    btemp 0025  
                                  _xtoa 499E                  __end_of_check_adc_scan 968A  
                         ___fpclassifyf 681A                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0016               __end_of_SPI1_Exchange8bit 9462  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize 8AF8  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 92B8  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0045  
                      __end_of_INT0_ISR 962E                        __end_of_INT1_ISR 8D02  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 7E62  
         __end_of_OSCILLATOR_Initialize 95BC                                   l10110 8240  
                                 l10102 78C2                                   l10060 7058  
                                 l10108 8214                                   l10300 05F6  
                                 l10142 4636                                   l10134 45EC  
                                 l10302 0602                                   l10206 00F0  
                                 l10214 0146                                   l10072 7FBA  
                                 l10224 01EA                                   l10232 0258  
                                 l11040 6226                                   l10082 7290  
                                 l10146 4654                                   l10322 06F0  
                                 l10242 02FC                                   l10250 032A  
                                 l10226 0216                                   l11026 60FE  
                                 l10076 7FF8                                   l10092 7306  
                                 l10180 4954                                   l10156 4866  
                                 l10404 0D90                                   l10412 0EA2  
                                 l10228 022C                                   l10086 72B8  
                                 l10318 06B8                                   l10262 0406  
                                 l11222 259C                                   l11214 2566  
                                 l11142 1FA2                                   l10096 7350  
                                 l10088 72CA                                   l10176 4918  
                                 l10440 0FF0                                   l10424 0F3A  
                                 l10360 0B12                                   l10352 0A48  
                                 l10328 077A                                   l10280 0554  
                                 l10264 0470                                   l10520 5816  
                                 l10512 57AA                                   l11216 257E  
                                 l11208 2554                                   l11144 1FD0  
                                 l10450 1092                                   l10362 0B34  
                                 l10338 0926                                   l10258 0396  
                                 l10194 00AC                                   l10530 58CC  
                                 l11226 25C2                                   l11090 1DCA  
                                 l10460 10E2                                   l10292 0594  
                                 l10284 057C                                   l10268 04D2  
                                 l10516 57E6                                   l11236 2616  
                                 l11180 234A                                   l11164 2028  
                                 l11156 2004                                   l10438 0FD6  
                                 l10286 058E                                   l10534 5908  
                                 l10526 58A0                                   l10702 18E8  
                                 l10630 1326                                   l11190 24C6  
                                 l11094 1DE8                                   l10376 0C32  
                                 l10608 4D0E                                   l10560 4A48  
                                 l10632 1360                                   l10800 5284  
                                 l11176 22E8                                   l11192 24F0  
                                 l11096 1DFA                                   l11088 1DC2  
                                 l10554 4A0C                                   l10706 191C  
                                 l10634 1376                                   l10476 119A  
                                 l10388 0CBA                                   l10396 0D24  
                                 l10548 49D2                                   l10652 14A8  
                                 l10820 7D38                                   l10750 1CA6  
                                 l10726 1A7C                                   l10654 14E2  
                                 l10822 7D7A                                   l11198 2510  
                                 l10496 56F6                                   l10584 4B9E  
                                 l10568 4AA8                                   l10592 4C24  
                                 l10760 1D04                                   l10736 1B2A  
                                 l10672 165C                                   l10656 14F8  
                                 l10808 5332                                   l10682 16F2  
                                 l10906 739C                                   l10756 1D00  
                                 PRLOCK 0039EF                                   l10694 1830  
                                 l10766 1D24                                   l10872 7EBA  
                                 l10794 521A                                   l10788 515C  
                       __end_of___aodiv 5BC8                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 360E  
                                 _ADCLK 003EFF                         __end_of___aomod 607C  
                                 _ADPCH 003EF1                         __end_of___fldiv 3B88  
                                 _ADREF 003EFD                         __end_of___awdiv 6DD2  
                       __end_of___flneg 8A26                                   STR_11 FF82  
                                 STR_12 FEB9                                   STR_20 FEA6  
                                 STR_21 FF93                                   STR_13 FEDF  
                                 STR_30 FE80                                   STR_22 FF93  
                                 STR_14 FECC                                   STR_23 FF82  
                                 STR_31 FFCD                                   STR_15 FF2B  
                                 STR_32 FFCD                                   STR_24 FFFC  
                                 STR_16 FF05                                   STR_25 FFF9  
                                 STR_33 FFA3                                   STR_17 FF18  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA3  
                                 STR_50 FFEA                                   STR_18 FEF2  
                                 STR_35 FFA3                                   STR_51 FFF2  
                                 STR_27 FFC1                                   STR_19 FE59  
                                 STR_28 FFD7                                   STR_36 FE41  
                       __end_of___awmod 7264                                   STR_45 FE7F  
                                 STR_29 FE80                                   STR_54 FFF6  
                                 STR_46 FFE6                                   STR_38 FE93  
                                 STR_47 FFEE                                   STR_39 FE6D  
                                 STR_56 FFF6                                   _ADRPT 003EEC  
                       __end_of___flmul 2E52                         __end_of___flsub 8AB2  
                       __end_of___fltol 6B22                                   u10050 10B8  
                                 u10210 49B8                                   u10070 116E  
                                 u10150 580C                                   u10310 4C20  
                                 u10080 1170                                   u10160 5852  
                                 u10320 4C40                                   u10240 4AA0  
                                 u10250 4AF4                                   u10410 13BE  
                                 u10331 4C70                                   u10315 4C02  
                                 u10340 4C86                                   u10260 4AF6  
                                 u10420 13C0                                   u10341 4C84  
                                 u10190 592E                                   u10350 4C9A  
                                 u10430 13E6                                   u10167 5844  
                                 u10360 4C9E                                   u10280 4B54  
                                 u10290 4B56                                   u10610 1B7E  
                                 u10530 1746                                   u10460 1540  
                                 u10700 7E9A                                   u10470 1542  
                                 u10560 19D6                                   u10480 1568  
                                 u10800 6278                                   u10570 19D8  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 u10670 53A6                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   u10790 6276  
                                 _U2P1L 003DD4                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00B2                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 004A  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 96AC                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 9290                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 7A1E                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 88A2  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 954A  
                          _DMA1CON1bits 003BFD                                   _flags 000E  
              __size_of_calc_model_data 02DA                                   _fputc 7028  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 8B82  
                                 _fputs 7FAA                         __end_of_isdigit 8F08  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0045  
                                 _srand 8E10                                   _width 000A  
                                 _putch 9514                         __end_of_islower 8EA8  
                       __end_of_isspace 8946                _INT1_SetInterruptHandler 91C6  
                       __end_of_isupper 8ED8                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0025  
                                 ltemp1 0029                                   ltemp2 002D  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0025  
                                 ttemp1 0028                                   ttemp2 002B  
                                 ttemp3 002E                                   ttemp5 0026  
                                 ttemp6 0029                                   ttemp7 002D  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 914E  
           _UART1_SetRxInterruptHandler 9126                                   wtemp0 0025  
                                 wtemp1 0027                                   wtemp2 0029  
                                 wtemp3 002B                                   wtemp4 002D  
                                 wtemp5 002F                                   wtemp8 0026  
                       __end_of_sprintf 7592                         __end_of_tolower 8386  
                       __end_of_strncmp 665A                         __end_of_toupper 8302  
                   ??_UART1_tx_vect_isr 004A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 92E0                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8AB2                   __end_of_ringBufS_init 905E  
                       __initialization 7694                       _UART2_rx_vect_isr 9308  
                          __end_of_atoi 5E3C                            __end_of_ctoa 827E  
                          __end_of_main 2628                            __end_of_dtoa 499E  
                          __end_of_nanf 86D4                            __end_of_stoa 5948  
                          __end_of_xtoa 4D58                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0045                 __end_of_TMR2_Initialize 957A  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 8C44  
              _TMR5_SetInterruptHandler 9176                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 004A  
             __end_of_UART1_tx_vect_isr 92B8                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8FBC                         _PWM8_Initialize 9590  
                      _UART1_Initialize 860E                       _UART2_tx_vect_isr 92E0  
                    _UART2_Transmit_ISR 8F90                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 85AA                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 8B82                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0045  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1047 8894                    _start_switch_handler 9424  
                                i1l1235 79CE                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize 8B3E  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 9612                                  u404_48 9410  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u901_44 83EA                                  u901_45 83E4  
                                u824_20 926E                                  u824_26 9270  
                                u850_20 6F38                                  u850_21 6F32  
                                u854_24 7004                                  u854_25 7000  
                                u847_28 6F18                                  u880_28 9362  
                                u866_20 3FBC                                  u882_28 9386  
                  __size_of_hid_display 0102                                  u869_28 93EE  
                                u877_48 93AA                        __end_of___xxtofl 6492  
 __end_of_ADCC_DischargeSampleCapacitor 9672  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 966A                __end_of_send_lcd_cmd_dma 88F4  
                       _TMR3_WriteTimer 8C84                     ??_UART2_tx_vect_isr 004A  
             __end_of_UART2_rx_vect_isr 932E              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 963E                        _UART2_Initialize 8736  
                                _WaitMs 8D70                         _conv_raw_result 4072  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 6B22                                  ___fleq 7A1E  
                     _ADCC_ThresholdISR 84D8                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 8042                                  _efgtoa 0000  
                                _floorf 4D58                      ?_ADCC_ThresholdISR 0045  
                                _memset 50C4                    __size_of_help_button 0038  
                                clear_0 7702                                  clear_1 7716  
                                clear_2 772A                                  clear_3 773C  
                                clear_4 7748                                  clear_5 7754  
                                clear_6 7760                                  clear_7 776C  
                                clear_8 7778                                  _printf 86D4  
                    _eaDogM_WriteString 7E62                                  _strcpy 787A  
                             ?_ADCC_ISR 0045                                  _strlen 7F08  
                    __size_of_TimerDone 0028                         _ADCC_Initialize 846E  
                        _PMD_Initialize 95BC               __end_of_UART2_tx_vect_isr 9308  
                                lltemp0 0025                                  lltemp1 002D  
                                lltemp2 0035                                  lltemp3 003D  
                   ??_ADCC_ThresholdISR 0045                  __end_of_start_adc_scan 860E  
                          __mediumconst FDB0                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 87EE  
                      __end_of_vfprintf 7DB8                              _StartTimer 8BC4  
         __size_of_INTERRUPT_Initialize 0068                 __end_of_TMR5_Initialize 8AF8  
                     _SYSTEM_Initialize 8994                              __accesstop 0060  
               __end_of__initialization 778A                               ?_INT0_ISR 0045  
                             ?_INT1_ISR 0045                    __end_of_display_help 9682  
                  __end_of_display_info 967A               __end_of_CLKREF_Initialize 9648  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer 8C44                   _set_temp_display_help 95F4  
                      _clear_hid_pflags 932E                   __end_of_TMR3_CallBack 939A  
             __end_of_ADCC_ThresholdISR 8542                      __size_of_calc_bsoc 04EA  
                __end_of_ringBufS_flush 80D4                          __pcstackCOMRAM 0045  
                            ___inthi_sp 1016                              ___intlo_sp 180B  
                          __pidataBANK0 8D3A                            __pidataBANK1 7C56  
                          __pidataBANK2 7AE2                               ?_TMR3_ISR 0045  
                             ?_TMR5_ISR 0045                               ?_TMR6_ISR 0045  
                        ivt0x8_undefint 00AC                           __end_of_fputc 714C  
                         __end_of_fputs 8042                           __end_of_srand 8E44  
                 __end_of_TMR5_CallBack 9376                           __end_of_putch 952E  
               __end_of_PWM8_Initialize 95A6                 __end_of_TMR6_Initialize 8FE6  
                     _adc_int_t_handler 8386                  __end_of_PMD_Initialize 95D0  
                            ??_ADCC_ISR 0045                   __end_of_TMR6_CallBack 93BE  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0028  
                         _DMA1_DMAA_ISR 9654                   TMR3_ISR@CountCallBack 0010  
                        _clear_adc_scan 9692                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0001  
             __end_of_SYSTEM_Initialize 89DE                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 8CC4  
                            __pbssBANK0 0060                              __pbssBANK1 01B5  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 607C  
               __end_of_conv_raw_result 451E                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0045                              ??_INT1_ISR 004B  
                     __end_of_TimerDone 90AE                        _DMA1_DMADCNT_ISR 9648  
                    __size_of_init_bsoc 0012              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 9514        __end_of_TMR3_SetInterruptHandler 91C6  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 9176  
                            ??_TMR3_ISR 01D5                 __end_of_ADCC_Initialize 84D8  
                            ??_TMR5_ISR 004F               __end_of_adc_int_t_handler 8404  
                            ??_TMR6_ISR 004A                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 923E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 9216  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 94BC                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 9698  
                        ?_DMA1_DMAA_ISR 0045                        _DMA1_DMASCNT_ISR 9630  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0045              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4072                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 905E                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 8C84                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 954A                                 __Lparam 0000  
              __end_of_UART1_Initialize 8672                       __end_of_hid_input 81F6  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5948  
                               ___fladd 2E52                                 ___aomod 5E3C  
                               ___fldiv 360E                                 ___awdiv 6C84  
                               ___flneg 89DE                                 ___awmod 714C  
                               ___flmul 2628                                 ___flsub 8A6C  
                               ___fltol 69B0               __end_of_UART1_Receive_ISR 94DA  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 787A                                 __pcinit 7694  
              __end_of_mode_lamp_bright 9620                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 9604  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 8DDC  
                               __ptext2 9424                                 __ptext3 85AA  
                               __ptext4 95D0                                 __ptext5 966A  
                               __ptext6 8E10                                 __ptext7 7790  
                               __ptext8 8FE6                                 __ptext9 900E  
                     _UART2_Receive_ISR 94DA                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                                 us523999 5BB2  
                 _OSCILLATOR_Initialize 95A6                                 us534999 606A  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 95F4                                 _isalpha 8B3E  
                               _isdigit 8ED8                                 us941999 4538  
                             _T3CONbits 003FA6                                 _mode_sw 0018  
                     __end_of_lp_filter 681A                                 _islower 8E78  
                               _isspace 88F4                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8794  
                               _isupper 8EA8              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 7488                                 _tolower 8302  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 6492  
                               _toupper 827E                    end_of_initialization 778A  
             __size_of_convert_adc_data 00B8                      _check_enter_button 8C04  
                             i1u1081_20 79C6     __end_of_UART1_SetTxInterruptHandler 9126  
           _UART1_SetTxInterruptHandler 90FE     __end_of_UART2_SetRxInterruptHandler 90FE  
           _UART2_SetRxInterruptHandler 90D6                       __end_of_set_vterm 949E  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 96A4               __end_of_UART2_Receive_ISR 94F8  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 004B                   _INT1_InterruptHandler 0004  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 96AA  
              _TMR3_SetInterruptHandler 919E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 914E                            _display_help 967A  
                 _TMR5_InterruptHandler 00AC                            _display_info 9672  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 9352  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 9266  
           _ADCC_SetADIInterruptHandler 923E                              _update_lcd 7378  
                       _calc_model_data 53B0                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 8DDC  
                       _DMA1_Initialize 8404                              _start_bsoc 93BE  
                       _SPI1_Initialize 957A                   __end_of_get_vterm_ptr 8F36  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 8DA6            __end_of_INTERRUPT_Initialize 85AA  
                            _vterm_dump 6DD2                          __end_of___flge 6C84  
                        __end_of___fleq 7AE2    __end_of_INT0_DefaultInterruptHandler 96B8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 96B6  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 87EE  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 00CE  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 50C4  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 53B0                          __end_of_printf 8736  
              __end_of_DMA1_DMADCNT_ISR 9652             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 9424                          __end_of_strcpy 794E  
                        __end_of_strlen 7FAA                     start_initialization 7694  
  __end_of_TMR5_DefaultInterruptHandler 928E   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 9266         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 8A6C                   __end_of_INT1_CallBack 9402  
             __size_of_set_display_info 001E                             __end_of_pad 7378  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 9036  
                        _switch_handler 6F00           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 69B0                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 02BC                __end_of_DMA1_DMASCNT_ISR 963E  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 9660  
                   __end_of_hid_display 7694                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 9086                           _ringBufS_init 9036  
                           __pdataBANK0 00C3                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 8E78  
               __end_of_calc_model_data 568A                     __end_of_help_button 8D3A  
       __end_of_eaDogM_WriteStringAtPos 8DDC                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 846E                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 9216                           __pcstackBANK1 01D5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 7028                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9590                _UART1_RxInterruptHandler 00BB  
              _UART2_TxInterruptHandler 00BE                               __end_of_T FE41  
                      _convert_adc_data 7B9E                               _calc_bsoc 3B88  
             __size_of_ringBufS_put_dma 00AA                            _init_display 7790  
                __end_of_DMA1_DMAOR_ISR 966A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8848                  _PIN_MANAGER_Initialize 80D4  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 969E  
                         __pmediumconst FDB0                               __ptext100 90FE  
                             __ptext101 9126                               __ptext110 9590  
                             __ptext102 8FBC                               __ptext111 95BC  
                             __ptext103 914E                               __ptext120 8404  
                             __ptext112 80D4                               __ptext104 8AB2  
                             __ptext121 963E                               __ptext113 95A6  
                             __ptext105 9176                               __ptext130 8C44  
                             __ptext122 846E                               __ptext114 8542  
                             __ptext106 8AF8                               __ptext131 9352  
                             __ptext123 9216                               __ptext115 968A  
                             __ptext107 919E                               __ptext140 96B6  
                             __ptext132 9266                               __ptext124 923E  
                             __ptext116 8E44                               __ptext108 9562  
                             __ptext141 96AC                               __ptext133 7950  
                             __ptext125 8CC4                               __ptext117 91C6  
                             __ptext109 957A                               __ptext150 94BC  
                             __ptext142 8F38                               __ptext134 8C84  
                             __ptext126 93E0                               __ptext118 91EE  
                             __ptext151 92E0                               __ptext143 8386  
                             __ptext135 9376                               __ptext127 96B2  
                             __ptext119 87EE                               __ptext160 9654  
                             __ptext152 8F90                               __ptext144 96B8  
                             __ptext136 96B4                               __ptext128 6F00  
                             __ptext161 9660                               __ptext153 9308  
                             __ptext145 96BA                               __ptext137 3B88  
                             __ptext129 8848                               __ptext162 0000  
                             __ptext154 94DA                               __ptext146 84D8  
                             __ptext138 9620                               __ptext155 9530  
                             __ptext147 9290                               __ptext139 9402  
                             __ptext156 939A                               __ptext148 8F64  
                             __ptext157 8946                               __ptext149 92B8  
                             __ptext158 9630                               __ptext159 9648  
                             _hid_input 8166                      __end_of_StartTimer 8C04  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00AC  
                              _ADCC_ISR 8F38                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                               _init_bsoc 95E2  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 665A                             _hid_display 7592  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 8542                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0045  
                              _INT0_ISR 9620                                _INT1_ISR 8CC4  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 01B5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack 9376  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              i2u910_48 92CC                                _PIR8bits 0039A8  
                              i2u912_48 92F4                                i2u904_48 8F50  
                              _PIR9bits 0039A9                                i2u914_48 931A  
                              i2u906_48 850E                                i2u906_49 8522  
                              i2u908_48 92A4                __size_of_TMR5_Initialize 0046  
                             _set_vterm 9480                     __size_of_update_lcd 0110  
                           _help_button 8D02                                _TMR3_ISR 7950  
            __end_of_UART1_Transmit_ISR 8F90                                _TMR5_ISR 8848  
                              _TMR6_ISR 9530                               _port_data 01A5  
                   __size_of_static_soc 0034                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack 9352                              _ADCON0bits 003EF8  
                    __end_of_check_help 628E                               _start_lcd 969E  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 939A                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 96A4  
                      _set_display_info 949E                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 76A8                               copy_data1 76CA  
                             copy_data2 76EC                _INT0_SetInterruptHandler 91EE  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0022  
   __end_of_UART2_SetTxInterruptHandler 90D6             _UART2_SetTxInterruptHandler 90AE  
                          _uart1RxCount 001F                            _uart2RxCount 0019  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 94F8                            _send_lcd_cmd 900E  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 96BA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 9086  
                 __end_of_DMA1_DMAA_ISR 965E                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 628E                       ?_DMA1_DMADCNT_ISR 0045  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9612                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004B                                __ptext10 9444  
                              __ptext11 9036                                __ptext20 9462  
                              __ptext12 95E2                                __ptext21 628E  
                              __ptext13 7592                                __ptext30 8DA6  
                              __ptext22 932E                                __ptext14 8166  
                              __ptext31 88A2                                __ptext23 9692  
                              __ptext15 905E                                __ptext40 7D0C  
                              __ptext32 94F8                                __ptext24 607C  
                              __ptext16 9604                                __ptext41 1244  
                              __ptext33 8794                                __ptext25 6DD2  
                              __ptext17 7B9E                                __ptext50 8EA8  
                              __ptext42 499E                                __ptext34 7E62  
                              __ptext26 7488                                __ptext18 4072  
                              __ptext51 787A                                __ptext43 827E  
                              __ptext35 9698                                __ptext27 8F08  
                              __ptext19 8672                                __ptext60 6C84  
                              __ptext52 4D58                                __ptext44 8E78  
                              __ptext36 969E                                __ptext28 8D70  
                              __ptext61 451E                                __ptext53 681A  
                              __ptext45 8B3E                                __ptext37 8042  
                              __ptext29 7378                                __ptext70 9514  
                              __ptext62 8A26                                __ptext54 69B0  
                              __ptext46 6492                                __ptext38 50C4  
                              __ptext71 7DB8                                __ptext63 5E3C  
                              __ptext55 89DE                                __ptext47 568A  
                              __ptext39 86D4                                __ptext80 8B82  
                              __ptext72 5BC8                                __ptext64 5948  
                              __ptext56 6B22                                __ptext48 0000  
                              __ptext81 8D02                                __ptext73 88F4  
                              __ptext65 81F6                                __ptext57 7A1E  
                              __ptext49 8302                                __ptext90 93BE  
                              __ptext82 9086                                __ptext74 8ED8  
                              __ptext66 7264                                __ptext58 360E  
                              __ptext91 665A                                __ptext83 8BC4  
                              __ptext75 9480                                __ptext67 7F08  
                              __ptext59 714C                                __ptext92 8A6C  
                              __ptext84 9672                                __ptext76 95F4  
                              __ptext68 7FAA                                __ptext93 2E52  
                              __ptext85 967A                                __ptext77 949E  
                              __ptext69 7028                                __ptext94 2628  
                              __ptext86 8C04                                __ptext78 954A  
                              __ptext95 8994                                __ptext87 9682  
                              __ptext79 9612                                __ptext96 8736  
                              __ptext88 53B0                                __ptext97 90AE  
                              __ptext89 96A4                                __ptext98 90D6  
                              __ptext99 860E                        __size_of_isupper 0030  
                              us1010999 569C                                us1023999 4A1E  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7DB8                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 08A6  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0045                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00B5  
                             stoa@F1166 00EB                      ??_DMA1_DMASCNT_ISR 004B  
          __end_of_ADCC_StartConversion 95E2                                _spi_link 0089  
                              _wdtdelay 8794              __end_of_UART2_Transmit_ISR 8FBC  
                              _vfprintf 7D0C                __end_of_convert_adc_data 7C56  
            __end_of_PWM8_LoadDutyValue 8BC4    __end_of_TMR3_DefaultInterruptHandler 96B6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler 96B4  
  __end_of_INT1_DefaultInterruptHandler 96B4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 96B2                           ??_Default_ISR 0045  
                           _uart1RxHead 0021                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0024                             _uart2RxHead 001B  
                           _uart1RxTail 0020                          _get_raw_result 9462  
                           _uart2TxHead 001E                             _uart1TxTail 0023  
                           _uart2RxTail 001A                             _uart2TxTail 001D  
                          _wait_lcd_set 9698                      _EXT_INT_Initialize 8E44  
  __end_of_TMR6_DefaultInterruptHandler 8994   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 8946    __end_of_ADCC_DefaultInterruptHandler 96BA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 96B8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8FE6          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9604                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7F08                   __end_of_mode_lamp_dim 9562  
               __end_of_adc_int_handler 96BC                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 7488  
                _uart2TxBufferRemaining 001C                      __end_of_static_soc 8E10  
                    __end_of_start_bsoc 93E0                          _FVR_Initialize 968A  
                __end_of_get_raw_result 9480                        _send_lcd_cmd_dma 88A2  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0014  
      __end_of_INT1_SetInterruptHandler 91EE               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 004B                _UART1_TxInterruptHandler 00B8  
             __end_of_send_lcd_cmd_long 900E                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 96B2          __end_of_PIN_MANAGER_Initialize 8166  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6F00  
               _eaDogM_WriteStringAtPos 8DA6                           _get_vterm_ptr 8F08  
                        _check_adc_scan 9682               __size_of_UART2_Initialize 005E  
