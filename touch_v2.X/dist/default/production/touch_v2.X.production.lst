

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 12 01:07:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=4,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=4,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=4,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=4,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=4,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=4,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=4,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=4,class=CODE,delta=1
   119                           	psect	text98,global,reloc=4,class=CODE,delta=1
   120                           	psect	text99,global,reloc=4,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=4,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           ; Version 2.05
   133                           ; Generated 20/12/2018 GMT
   134                           ; 
   135                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC18F57K42 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     
   167 ;;_mode	offset	0
   168 ;;_block	offset	0
   169 ;;_rxData	offset	7
   170 ;;_t_link	offset=-1 (param)
   171 ;;_k	offset	0
   172 ;;_checksum	offset	2
   173 ;;_i	offset	4
   174 ;;_byte_block	offset=-2 (param)
   175 ;;_length	offset=-3 (param)
   176 ;;_fake	offset=-4 (param)
   177 ;;_i	offset	0
   178 ;;_sum	offset	2
   179 ;;_byte_block	offset=-2 (param)
   180 ;;_byte_count	offset=-4 (param)
   181 ;;_bufData	offset=-1 (param)
   182 ;;_stream	offset=-6 (param)
   183 ;;_function	offset=-7 (param)
   184 ;;_f	offset	0
   185 ;;_ap	offset	5
   186 ;;_s	offset=-2 (param)
   187 ;;_fmt	offset=-3 (param)
   188 ;;_rxData	offset	0
   189 ;;_r_link	offset=-1 (param)
   190 ;;_byte_block	offset=-1 (param)
   191 ;;_clear	offset=-2 (param)
   192 ;;_numMilliseconds	offset=-2 (param)
   193 ;;_timer	offset=-1 (param)
   194 ;;_timer	offset=-1 (param)
   195 ;;_count	offset=-3 (param)
   196 ;;_txData	offset=-1 (param)
   197 ;;_readValue	offset	0
   198 ;;_cmd	offset=-1 (param)
   199 ;;_cmd	offset=-1 (param)
   200 ;;_data	offset=-1 (param)
   201 ;;__this	offset=-2 (param)
   202 ;;_r	offset=-1 (param)
   203 ;;_c	offset=-2 (param)
   204 ;;_strPtr	offset=-3 (param)
   205 ;;_strPtr	offset=-1 (param)
   206 ;;_cmd	offset=-1 (param)
   207 ;;_strPtr	offset=-1 (param)
   208 ;;_delay	offset=-4 (param)
   209 ;;__this	offset=-2 (param)
   210 ;;_clearBuffer	offset=-3 (param)
   211 ;;_s	offset	0
   212 ;;_k	offset	2
   213 ;;_dest	offset=-2 (param)
   214 ;;_c	offset=-4 (param)
   215 ;;_n	offset=-6 (param)
   216 ;;_ap	offset	0
   217 ;;_fmt	offset=-2 (param)
   218 ;;_cfmt	offset	0
   219 ;;_fp	offset=-2 (param)
   220 ;;_fmt	offset=-3 (param)
   221 ;;_ap	offset=-5 (param)
   222 ;;_ll	offset	0
   223 ;;_cp	offset	8
   224 ;;_c	offset	10
   225 ;;_fp	offset=-2 (param)
   226 ;;_fmt	offset=-4 (param)
   227 ;;_ap	offset=-6 (param)
   228 ;;_r	offset	0
   229 ;;_l	offset	1
   230 ;;__l	offset=-1 (param)
   231 ;;__r	offset=-2 (param)
   232 ;;_n	offset=-4 (param)
   233 ;;_nuls	offset	0
   234 ;;_l	offset	7
   235 ;;_p	offset	9
   236 ;;_cp	offset	11
   237 ;;_w	offset	13
   238 ;;_i	offset	15
   239 ;;_fp	offset=-2 (param)
   240 ;;_s	offset=-4 (param)
   241 ;;_dtoa$3835	offset	0
   242 ;;_n	offset	2
   243 ;;_i	offset	10
   244 ;;_s	offset	12
   245 ;;_w	offset	14
   246 ;;_p	offset	16
   247 ;;_fp	offset=-2 (param)
   248 ;;_d	offset=-10 (param)
   249 ;;_a	offset=-2 (param)
   250 ;;_sign	offset	0
   251 ;;_counter	offset	1
   252 ;;_dividend	offset=-8 (param)
   253 ;;_divisor	offset=-16 (param)
   254 ;;_quotient	offset	0
   255 ;;_sign	offset	8
   256 ;;_counter	offset	9
   257 ;;_dividend	offset=-8 (param)
   258 ;;_divisor	offset=-16 (param)
   259 ;;_w	offset	0
   260 ;;_fp	offset=-2 (param)
   261 ;;_c	offset=-3 (param)
   262 ;;_w	offset	0
   263 ;;_i	offset	2
   264 ;;_fp	offset=-2 (param)
   265 ;;_buf	offset=-4 (param)
   266 ;;_p	offset=-6 (param)
   267 ;;_a	offset	0
   268 ;;_s	offset=-2 (param)
   269 ;;_i	offset	0
   270 ;;_c	offset	2
   271 ;;_s	offset=-2 (param)
   272 ;;_fp	offset=-4 (param)
   273 ;;_c	offset=-2 (param)
   274 ;;_fp	offset=-4 (param)
   275 ;;_c	offset=-1 (param)
   276 ;;__this	offset=-2 (param)
   277 ;;_c	offset=-3 (param)
   278 ;;_InterruptHandler	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_InterruptHandler	offset=-3 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_state	offset	0
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_i	offset	0
   290 ;;_timerVal	offset=-2 (param)
   291                           
   292                           	psect	idataCOMRAM
   293  005A7E                     __pidataCOMRAM:
   294                           	opt callstack 0
   295                           
   296                           ;initializer for r_protocol@retry
   297  005A7E  03                 	db	3
   298                           
   299                           	psect	idataBANK0
   300  005980                     __pidataBANK0:
   301                           	opt callstack 0
   302                           
   303                           ;initializer for stoa@F1142
   304  005980  28                 	db	40
   305  005981  6E                 	db	110
   306  005982  75                 	db	117
   307  005983  6C                 	db	108
   308  005984  6C                 	db	108
   309  005985  29                 	db	41
   310  005986  00                 	db	0
   311                           
   312                           ;initializer for _H13
   313  005987  0000               	dw	0
   314  005989  00                 	db	0
   315  00598A  01                 	db	1
   316  00598B  21                 	db	33
   317  00598C  0001               	dw	1
   318  00598E  0000               	dw	0
   319  005990  01                 	db	1
   320  005991  80                 	db	128
   321  005992  0C                 	db	12
   322  005993  06                 	db	6
   323  005994  00                 	db	0
   324  005995  00                 	db	0
   325  005996  0D                 	db	13
   326                           
   327                           	psect	idataBANK1
   328  004590                     __pidataBANK1:
   329                           	opt callstack 0
   330                           
   331                           ;initializer for _H10
   332  004590  0000               	dw	0
   333  004592  0001               	dw	1
   334  004594  0000               	dw	0
   335  004596  01                 	db	1
   336  004597  80                 	db	128
   337  004598  01                 	db	1
   338  004599  81                 	db	129
   339  00459A  00                 	db	0
   340  00459B  00                 	db	0
   341  00459C  0A                 	db	10
   342  00459D  0000               	dw	0
   343  00459F  00                 	db	0
   344  0045A0  00                 	db	0
   345  0045A1  00                 	db	0
   346  0045A2  00                 	db	0
   347  0045A3  00                 	db	0
   348  0045A4  00                 	db	0
   349  0045A5  00                 	db	0
   350  0045A6  00                 	db	0
   351  0045A7  00                 	db	0
   352  0045A8  00                 	db	0
   353  0045A9  0A                 	db	10
   354  0045AA  0000               	dw	0
   355  0045AC  0001               	dw	1
   356  0045AE  0000               	dw	0
   357  0045B0  01                 	db	1
   358  0045B1  80                 	db	128
   359  0045B2  00                 	db	0
   360  0045B3  01                 	db	1
   361  0045B4  00                 	db	0
   362  0045B5  00                 	db	0
   363  0045B6  0A                 	db	10
   364  0045B7  0000               	dw	0
   365  0045B9  0001               	dw	1
   366  0045BB  0000               	dw	0
   367  0045BD  01                 	db	1
   368  0045BE  80                 	db	128
   369  0045BF  01                 	db	1
   370  0045C0  81                 	db	129
   371  0045C1  00                 	db	0
   372  0045C2  80                 	db	128
   373  0045C3  0A                 	db	10
   374  0045C4  0000               	dw	0
   375  0045C6  0D89               	dw	3465
   376  0045C8  0000               	dw	0
   377  0045CA  01                 	db	1
   378  0045CB  80                 	db	128
   379  0045CC  11                 	db	17
   380  0045CD  82                 	db	130
   381  0045CE  00                 	db	0
   382  0045CF  00                 	db	0
   383  0045D0  0A                 	db	10
   384                           
   385                           ;initializer for _H27
   386  0045D1  0000               	dw	0
   387  0045D3  00                 	db	0
   388  0045D4  00                 	db	0
   389  0045D5  00                 	db	0
   390  0045D6  00                 	db	0
   391  0045D7  00                 	db	0
   392  0045D8  00                 	db	0
   393  0045D9  00                 	db	0
   394  0045DA  00                 	db	0
   395  0045DB  00                 	db	0
   396  0045DC  00                 	db	0
   397  0045DD  00                 	db	0
   398  0045DE  00                 	db	0
   399  0045DF  00                 	db	0
   400  0045E0  00                 	db	0
   401  0045E1  00                 	db	0
   402  0045E2  00                 	db	0
   403  0045E3  00                 	db	0
   404  0045E4  0001               	dw	1
   405  0045E6  0000               	dw	0
   406  0045E8  01                 	db	1
   407  0045E9  80                 	db	128
   408  0045EA  0D                 	db	13
   409  0045EB  81                 	db	129
   410  0045EC  00                 	db	0
   411  0045ED  00                 	db	0
   412  0045EE  1B                 	db	27
   413                           
   414                           ;initializer for _H12
   415  0045EF  0000               	dw	0
   416  0045F1  00                 	db	0
   417  0045F2  01                 	db	1
   418  0045F3  0001               	dw	1
   419  0045F5  0000               	dw	0
   420  0045F7  01                 	db	1
   421  0045F8  80                 	db	128
   422  0045F9  02                 	db	2
   423  0045FA  01                 	db	1
   424  0045FB  00                 	db	0
   425  0045FC  00                 	db	0
   426  0045FD  0C                 	db	12
   427  0045FE  0000               	dw	0
   428  004600  00                 	db	0
   429  004601  01                 	db	1
   430  004602  0001               	dw	1
   431  004604  0000               	dw	0
   432  004606  01                 	db	1
   433  004607  80                 	db	128
   434  004608  0D                 	db	13
   435  004609  81                 	db	129
   436  00460A  00                 	db	0
   437  00460B  00                 	db	0
   438  00460C  0C                 	db	12
   439                           
   440                           ;initializer for _H24
   441  00460D  0000               	dw	0
   442  00460F  30                 	db	48
   443  004610  31                 	db	49
   444  004611  30                 	db	48
   445  004612  39                 	db	57
   446  004613  31                 	db	49
   447  004614  31                 	db	49
   448  004615  30                 	db	48
   449  004616  38                 	db	56
   450  004617  34                 	db	52
   451  004618  36                 	db	54
   452  004619  30                 	db	48
   453  00461A  30                 	db	48
   454  00461B  00                 	db	0
   455  00461C  00                 	db	0
   456  00461D  0001               	dw	1
   457  00461F  0000               	dw	0
   458  004621  01                 	db	1
   459  004622  80                 	db	128
   460  004623  12                 	db	18
   461  004624  02                 	db	2
   462  004625  00                 	db	0
   463  004626  00                 	db	0
   464  004627  18                 	db	24
   465                           
   466                           ;initializer for _H18
   467  004628  0000               	dw	0
   468  00462A  00                 	db	0
   469  00462B  00                 	db	0
   470  00462C  00                 	db	0
   471  00462D  00                 	db	0
   472  00462E  00                 	db	0
   473  00462F  00                 	db	0
   474  004630  00                 	db	0
   475  004631  00                 	db	0
   476  004632  0001               	dw	1
   477  004634  0000               	dw	0
   478  004636  01                 	db	1
   479  004637  80                 	db	128
   480  004638  03                 	db	3
   481  004639  01                 	db	1
   482  00463A  00                 	db	0
   483  00463B  00                 	db	0
   484  00463C  12                 	db	18
   485                           
   486                           ;initializer for _H17
   487  00463D  0000               	dw	0
   488  00463F  00                 	db	0
   489  004640  01                 	db	1
   490  004641  00                 	db	0
   491  004642  01                 	db	1
   492  004643  21                 	db	33
   493  004644  02                 	db	2
   494  004645  01                 	db	1
   495  004646  0001               	dw	1
   496  004648  0000               	dw	0
   497  00464A  01                 	db	1
   498  00464B  80                 	db	128
   499  00464C  0E                 	db	14
   500  00464D  01                 	db	1
   501  00464E  00                 	db	0
   502  00464F  00                 	db	0
   503  004650  11                 	db	17
   504                           
   505                           ;initializer for _H14
   506  004651  0000               	dw	0
   507  004653  00                 	db	0
   508  004654  41                 	db	65
   509  004655  11                 	db	17
   510  004656  01                 	db	1
   511  004657  0001               	dw	1
   512  004659  0000               	dw	0
   513  00465B  01                 	db	1
   514  00465C  80                 	db	128
   515  00465D  04                 	db	4
   516  00465E  01                 	db	1
   517  00465F  00                 	db	0
   518  004660  00                 	db	0
   519  004661  0E                 	db	14
   520                           
   521                           	psect	idataBANK3
   522  004D9E                     __pidataBANK3:
   523                           	opt callstack 0
   524                           
   525                           ;initializer for _H53
   526  004D9E  0000               	dw	0
   527  004DA0  00                 	db	0
   528  004DA1  00                 	db	0
   529  004DA2  00                 	db	0
   530  004DA3  00                 	db	0
   531  004DA4  00                 	db	0
   532  004DA5  00                 	db	0
   533  004DA6  00                 	db	0
   534  004DA7  00                 	db	0
   535  004DA8  00                 	db	0
   536  004DA9  00                 	db	0
   537  004DAA  00                 	db	0
   538  004DAB  00                 	db	0
   539  004DAC  00                 	db	0
   540  004DAD  00                 	db	0
   541  004DAE  00                 	db	0
   542  004DAF  00                 	db	0
   543  004DB0  00                 	db	0
   544  004DB1  00                 	db	0
   545  004DB2  00                 	db	0
   546  004DB3  00                 	db	0
   547  004DB4  00                 	db	0
   548  004DB5  00                 	db	0
   549  004DB6  00                 	db	0
   550  004DB7  00                 	db	0
   551  004DB8  00                 	db	0
   552  004DB9  00                 	db	0
   553  004DBA  00                 	db	0
   554  004DBB  00                 	db	0
   555  004DBC  00                 	db	0
   556  004DBD  00                 	db	0
   557  004DBE  00                 	db	0
   558  004DBF  00                 	db	0
   559  004DC0  00                 	db	0
   560  004DC1  00                 	db	0
   561  004DC2  00                 	db	0
   562  004DC3  00                 	db	0
   563  004DC4  00                 	db	0
   564  004DC5  00                 	db	0
   565  004DC6  00                 	db	0
   566  004DC7  00                 	db	0
   567  004DC8  00                 	db	0
   568  004DC9  00                 	db	0
   569  004DCA  00                 	db	0
   570  004DCB  0001               	dw	1
   571  004DCD  0000               	dw	0
   572  004DCF  01                 	db	1
   573  004DD0  80                 	db	128
   574  004DD1  0B                 	db	11
   575  004DD2  81                 	db	129
   576  004DD3  00                 	db	0
   577  004DD4  00                 	db	0
   578  004DD5  35                 	db	53
   579  004DD6  0000               	dw	0
   580  004DD8  00                 	db	0
   581  004DD9  16                 	db	22
   582  004DDA  20                 	db	32
   583  004DDB  4E                 	db	78
   584  004DDC  6F                 	db	111
   585  004DDD  77                 	db	119
   586  004DDE  20                 	db	32
   587  004DDF  57                 	db	87
   588  004DE0  65                 	db	101
   589  004DE1  20                 	db	32
   590  004DE2  41                 	db	65
   591  004DE3  72                 	db	114
   592  004DE4  65                 	db	101
   593  004DE5  20                 	db	32
   594  004DE6  54                 	db	84
   595  004DE7  61                 	db	97
   596  004DE8  6C                 	db	108
   597  004DE9  6B                 	db	107
   598  004DEA  69                 	db	105
   599  004DEB  6E                 	db	110
   600  004DEC  67                 	db	103
   601  004DED  2E                 	db	46
   602  004DEE  2E                 	db	46
   603  004DEF  2E                 	db	46
   604  004DF0  00                 	db	0
   605  004DF1  00                 	db	0
   606  004DF2  00                 	db	0
   607  004DF3  00                 	db	0
   608  004DF4  00                 	db	0
   609  004DF5  00                 	db	0
   610  004DF6  00                 	db	0
   611  004DF7  00                 	db	0
   612  004DF8  00                 	db	0
   613  004DF9  00                 	db	0
   614  004DFA  00                 	db	0
   615  004DFB  00                 	db	0
   616  004DFC  00                 	db	0
   617  004DFD  00                 	db	0
   618  004DFE  00                 	db	0
   619  004DFF  00                 	db	0
   620  004E00  00                 	db	0
   621  004E01  00                 	db	0
   622  004E02  00                 	db	0
   623  004E03  0001               	dw	1
   624  004E05  0000               	dw	0
   625  004E07  01                 	db	1
   626  004E08  80                 	db	128
   627  004E09  03                 	db	3
   628  004E0A  8A                 	db	138
   629  004E0B  00                 	db	0
   630  004E0C  00                 	db	0
   631  004E0D  35                 	db	53
   632  0000                     _IVTADL	set	14493
   633  0000                     _IVTADH	set	14494
   634  0000                     _IVTADU	set	14495
   635  0000                     _PIE8bits	set	14744
   636  0000                     _PIR8bits	set	14760
   637  0000                     _SCANPR	set	14839
   638  0000                     _DMA2PR	set	14836
   639  0000                     _DMA1PR	set	14835
   640  0000                     _MAINPR	set	14834
   641  0000                     _ISRPR	set	14833
   642  0000                     _PIE2bits	set	14738
   643  0000                     _PIR2bits	set	14754
   644  0000                     _PIE9bits	set	14745
   645  0000                     _PIR9bits	set	14761
   646  0000                     _PIE6bits	set	14742
   647  0000                     _PIE3bits	set	14739
   648  0000                     _PMD7	set	14791
   649  0000                     _PMD6	set	14790
   650  0000                     _PMD5	set	14789
   651  0000                     _PMD4	set	14788
   652  0000                     _PMD3	set	14787
   653  0000                     _PMD2	set	14786
   654  0000                     _PMD1	set	14785
   655  0000                     _PMD0	set	14784
   656  0000                     _OSCTUNE	set	14814
   657  0000                     _OSCFRQ	set	14815
   658  0000                     _OSCEN	set	14813
   659  0000                     _OSCCON3	set	14811
   660  0000                     _OSCCON1	set	14809
   661  0000                     _IPR8bits	set	14728
   662  0000                     _IPR9bits	set	14729
   663  0000                     _IPR7bits	set	14727
   664  0000                     _IPR5bits	set	14725
   665  0000                     _IPR1bits	set	14721
   666  0000                     _IPR3bits	set	14723
   667  0000                     _IPR6bits	set	14726
   668  0000                     _IPR2bits	set	14722
   669  0000                     _PIE7bits	set	14743
   670  0000                     _PIE5bits	set	14741
   671  0000                     _PIE1bits	set	14737
   672  0000                     _PIR7bits	set	14759
   673  0000                     _PIR5bits	set	14757
   674  0000                     _PIR1bits	set	14753
   675  0000                     _PLLR	set	118496
   676  0000                     _SPI1SDIPPS	set	15071
   677  0000                     _RC6PPS	set	14870
   678  0000                     _RC5PPS	set	14869
   679  0000                     _RA6PPS	set	14854
   680  0000                     _RA5PPS	set	14853
   681  0000                     _RA4PPS	set	14852
   682  0000                     _SPI1SCKPPS	set	15070
   683  0000                     _U1RXPPS	set	15077
   684  0000                     _INT1PPS	set	15041
   685  0000                     _INT2PPS	set	15042
   686  0000                     _INT0PPS	set	15040
   687  0000                     _RC3PPS	set	14867
   688  0000                     _RB6PPS	set	14862
   689  0000                     _U2RXPPS	set	15080
   690  0000                     _SLRCONF	set	14995
   691  0000                     _SLRCONE	set	14979
   692  0000                     _SLRCOND	set	14963
   693  0000                     _SLRCONC	set	14947
   694  0000                     _SLRCONB	set	14931
   695  0000                     _SLRCONA	set	14915
   696  0000                     _ODCOND	set	14962
   697  0000                     _ODCONC	set	14946
   698  0000                     _ODCONB	set	14930
   699  0000                     _ODCONA	set	14914
   700  0000                     _ODCONF	set	14994
   701  0000                     _ODCONE	set	14978
   702  0000                     _WPUC	set	14945
   703  0000                     _WPUA	set	14913
   704  0000                     _WPUB	set	14929
   705  0000                     _WPUE	set	14977
   706  0000                     _WPUF	set	14993
   707  0000                     _WPUD	set	14961
   708  0000                     _ANSELA	set	14912
   709  0000                     _ANSELF	set	14992
   710  0000                     _ANSELE	set	14976
   711  0000                     _ANSELB	set	14928
   712  0000                     _ANSELC	set	14944
   713  0000                     _ANSELD	set	14960
   714  0000                     _DMA1SSA	set	15353
   715  0000                     _DMA1DSZ	set	15342
   716  0000                     _DMA1SSZ	set	15351
   717  0000                     _DMA1DSA	set	15344
   718  0000                     _DMA1CON0bits	set	15356
   719  0000                     _DMA1CON1bits	set	15357
   720  0000                     _DMA1CON0	set	15356
   721  0000                     _DMA1AIRQ	set	15358
   722  0000                     _DMA1SIRQ	set	15359
   723  0000                     _DMA1CON1	set	15357
   724  0000                     _CLC1CON	set	15476
   725  0000                     _CLC1GLS3	set	15485
   726  0000                     _CLC1GLS2	set	15484
   727  0000                     _CLC1GLS1	set	15483
   728  0000                     _CLC1GLS0	set	15482
   729  0000                     _CLC1SEL3	set	15481
   730  0000                     _CLC1SEL2	set	15480
   731  0000                     _CLC1SEL1	set	15479
   732  0000                     _CLC1SEL0	set	15478
   733  0000                     _CLC1POL	set	15477
   734  0000                     _CLKRCON	set	15589
   735  0000                     _CLKRCLK	set	15590
   736  0000                     _MD1CARL	set	15613
   737  0000                     _MD1CARH	set	15614
   738  0000                     _MD1SRC	set	15612
   739  0000                     _MD1CON1bits	set	15611
   740  0000                     _MD1CON0bits	set	15610
   741  0000                     _SPI1INTFbits	set	15642
   742  0000                     _SPI1RXB	set	15632
   743  0000                     _SPI1TXB	set	15633
   744  0000                     _SPI1TCNTL	set	15634
   745  0000                     _SPI1CON0	set	15636
   746  0000                     _SPI1CLK	set	15644
   747  0000                     _SPI1BAUD	set	15641
   748  0000                     _SPI1CON2	set	15638
   749  0000                     _SPI1CON1	set	15637
   750  0000                     _U2RXB	set	15824
   751  0000                     _U2TXB	set	15826
   752  0000                     _U2ERRIE	set	15842
   753  0000                     _U2ERRIR	set	15841
   754  0000                     _U2UIR	set	15840
   755  0000                     _U2FIFO	set	15839
   756  0000                     _U2BRGH	set	15838
   757  0000                     _U2BRGL	set	15837
   758  0000                     _U2CON2	set	15836
   759  0000                     _U2CON1	set	15835
   760  0000                     _U2CON0	set	15834
   761  0000                     _U2P3L	set	15832
   762  0000                     _U2P2L	set	15830
   763  0000                     _U2P1L	set	15828
   764  0000                     _U1RXB	set	15848
   765  0000                     _U1TXB	set	15850
   766  0000                     _U1ERRIE	set	15866
   767  0000                     _U1ERRIR	set	15865
   768  0000                     _U1UIR	set	15864
   769  0000                     _U1FIFO	set	15863
   770  0000                     _U1BRGH	set	15862
   771  0000                     _U1BRGL	set	15861
   772  0000                     _U1CON2	set	15860
   773  0000                     _U1CON1	set	15859
   774  0000                     _U1CON0	set	15858
   775  0000                     _U1P3H	set	15857
   776  0000                     _U1P3L	set	15856
   777  0000                     _U1P2H	set	15855
   778  0000                     _U1P2L	set	15854
   779  0000                     _U1P1H	set	15853
   780  0000                     _U1P1L	set	15852
   781  0000                     _ADCON0	set	16120
   782  0000                     _ADCLK	set	16127
   783  0000                     _ADACT	set	16126
   784  0000                     _ADREF	set	16125
   785  0000                     _ADSTAT	set	16124
   786  0000                     _ADCON3	set	16123
   787  0000                     _ADCON2	set	16122
   788  0000                     _ADCON1	set	16121
   789  0000                     _ADPREH	set	16119
   790  0000                     _ADPREL	set	16118
   791  0000                     _ADCAP	set	16117
   792  0000                     _ADACQH	set	16116
   793  0000                     _ADACQL	set	16115
   794  0000                     _ADPCH	set	16113
   795  0000                     _ADRPT	set	16108
   796  0000                     _ADACCU	set	16106
   797  0000                     _ADSTPTH	set	16101
   798  0000                     _ADSTPTL	set	16100
   799  0000                     _ADUTHH	set	16097
   800  0000                     _ADUTHL	set	16096
   801  0000                     _ADLTHH	set	16095
   802  0000                     _ADLTHL	set	16094
   803  0000                     _NCO1CONbits	set	16190
   804  0000                     _NCO1INCL	set	16187
   805  0000                     _NCO1INCH	set	16188
   806  0000                     _NCO1INCU	set	16189
   807  0000                     _NCO1ACCL	set	16184
   808  0000                     _NCO1ACCH	set	16185
   809  0000                     _NCO1ACCU	set	16186
   810  0000                     _NCO1CLK	set	16191
   811  0000                     _NCO1CON	set	16190
   812  0000                     _LATCbits	set	16316
   813  0000                     _PORTDbits	set	16333
   814  0000                     _LATDbits	set	16317
   815  0000                     _LATEbits	set	16318
   816  0000                     _T5CONbits	set	16282
   817  0000                     _T5CON	set	16282
   818  0000                     _TMR5L	set	16280
   819  0000                     _TMR5H	set	16281
   820  0000                     _T5CLK	set	16285
   821  0000                     _T5GATE	set	16284
   822  0000                     _T5GCON	set	16283
   823  0000                     _T6CON	set	16276
   824  0000                     _T6TMR	set	16274
   825  0000                     _T6PR	set	16275
   826  0000                     _T6RST	set	16279
   827  0000                     _T6HLT	set	16277
   828  0000                     _T6CLKCON	set	16278
   829  0000                     _TRISD	set	16325
   830  0000                     _TRISC	set	16324
   831  0000                     _TRISB	set	16323
   832  0000                     _TRISA	set	16322
   833  0000                     _TRISF	set	16327
   834  0000                     _TRISE	set	16326
   835  0000                     _LATC	set	16316
   836  0000                     _LATB	set	16315
   837  0000                     _LATF	set	16319
   838  0000                     _LATA	set	16314
   839  0000                     _LATD	set	16317
   840  0000                     _LATE	set	16318
   841  0000                     _IVTLOCKbits	set	16340
   842  0000                     _IVTLOCK	set	16340
   843  0000                     _INTCON0bits	set	16338
   844  0000                     _GIE	set	130711
   845                           
   846                           	psect	smallconst
   847  002000                     __psmallconst:
   848                           	opt callstack 0
   849  002000  00                 	db	0
   850  002001                     STR_11:
   851  002001  20                 	db	32
   852  002002  52                 	db	82	;'R'
   853  002003  25                 	db	37
   854  002004  64                 	db	100	;'d'
   855  002005  20                 	db	32
   856  002006  54                 	db	84	;'T'
   857  002007  25                 	db	37
   858  002008  64                 	db	100	;'d'
   859  002009  20                 	db	32
   860  00200A  46                 	db	70	;'F'
   861  00200B  52                 	db	82	;'R'
   862  00200C  25                 	db	37
   863  00200D  64                 	db	100	;'d'
   864  00200E  20                 	db	32
   865  00200F  46                 	db	70	;'F'
   866  002010  53                 	db	83	;'S'
   867  002011  25                 	db	37
   868  002012  64                 	db	100	;'d'
   869  002013  20                 	db	32
   870  002014  23                 	db	35
   871  002015  00                 	db	0
   872  002016                     STR_7:
   873  002016  45                 	db	69	;'E'
   874  002017  20                 	db	32
   875  002018  52                 	db	82	;'R'
   876  002019  25                 	db	37
   877  00201A  64                 	db	100	;'d'
   878  00201B  20                 	db	32
   879  00201C  54                 	db	84	;'T'
   880  00201D  25                 	db	37
   881  00201E  64                 	db	100	;'d'
   882  00201F  20                 	db	32
   883  002020  45                 	db	69	;'E'
   884  002021  25                 	db	37
   885  002022  64                 	db	100	;'d'
   886  002023  20                 	db	32
   887  002024  41                 	db	65	;'A'
   888  002025  25                 	db	37
   889  002026  64                 	db	100	;'d'
   890  002027  20                 	db	32
   891  002028  23                 	db	35
   892  002029  00                 	db	0
   893  00202A                     STR_8:
   894  00202A  20                 	db	32
   895  00202B  48                 	db	72	;'H'
   896  00202C  4F                 	db	79	;'O'
   897  00202D  53                 	db	83	;'S'
   898  00202E  54                 	db	84	;'T'
   899  00202F  20                 	db	32
   900  002030  4D                 	db	77	;'M'
   901  002031  4F                 	db	79	;'O'
   902  002032  44                 	db	68	;'D'
   903  002033  45                 	db	69	;'E'
   904  002034  20                 	db	32
   905  002035  25                 	db	37
   906  002036  6C                 	db	108	;'l'
   907  002037  64                 	db	100	;'d'
   908  002038  20                 	db	32
   909  002039  20                 	db	32
   910  00203A  20                 	db	32
   911  00203B  23                 	db	35
   912  00203C  00                 	db	0
   913  00203D                     STR_10:
   914  00203D  20                 	db	32
   915  00203E  4C                 	db	76	;'L'
   916  00203F  4F                 	db	79	;'O'
   917  002040  47                 	db	71	;'G'
   918  002041  20                 	db	32
   919  002042  4D                 	db	77	;'M'
   920  002043  4F                 	db	79	;'O'
   921  002044  44                 	db	68	;'D'
   922  002045  45                 	db	69	;'E'
   923  002046  20                 	db	32
   924  002047  20                 	db	32
   925  002048  20                 	db	32
   926  002049  20                 	db	32
   927  00204A  20                 	db	32
   928  00204B  20                 	db	32
   929  00204C  23                 	db	35
   930  00204D  00                 	db	0
   931  00204E                     STR_9:
   932  00204E  20                 	db	32
   933  00204F  45                 	db	69	;'E'
   934  002050  51                 	db	81	;'Q'
   935  002051  55                 	db	85	;'U'
   936  002052  49                 	db	73	;'I'
   937  002053  50                 	db	80	;'P'
   938  002054  20                 	db	32
   939  002055  4D                 	db	77	;'M'
   940  002056  4F                 	db	79	;'O'
   941  002057  44                 	db	68	;'D'
   942  002058  45                 	db	69	;'E'
   943  002059  20                 	db	32
   944  00205A  20                 	db	32
   945  00205B  20                 	db	32
   946  00205C  20                 	db	32
   947  00205D  23                 	db	35
   948  00205E  00                 	db	0
   949  00205F                     STR_1:
   950  00205F  20                 	db	32
   951  002060  52                 	db	82	;'R'
   952  002061  56                 	db	86	;'V'
   953  002062  49                 	db	73	;'I'
   954  002063  20                 	db	32
   955  002064  48                 	db	72	;'H'
   956  002065  4F                 	db	79	;'O'
   957  002066  53                 	db	83	;'S'
   958  002067  54                 	db	84	;'T'
   959  002068  20                 	db	32
   960  002069  54                 	db	84	;'T'
   961  00206A  45                 	db	69	;'E'
   962  00206B  53                 	db	83	;'S'
   963  00206C  54                 	db	84	;'T'
   964  00206D  45                 	db	69	;'E'
   965  00206E  52                 	db	82	;'R'
   966  00206F  00                 	db	0
   967  002070                     STR_4:
   968  002070  20                 	db	32
   969  002071  46                 	db	70	;'F'
   970  002072  47                 	db	71	;'G'
   971  002073  42                 	db	66	;'B'
   972  002074  40                 	db	64	;'@'
   973  002075  4D                 	db	77	;'M'
   974  002076  43                 	db	67	;'C'
   975  002077  48                 	db	72	;'H'
   976  002078  50                 	db	80	;'P'
   977  002079  20                 	db	32
   978  00207A  46                 	db	70	;'F'
   979  00207B  41                 	db	65	;'A'
   980  00207C  42                 	db	66	;'B'
   981  00207D  34                 	db	52	;'4'
   982  00207E  00                 	db	0
   983  00207F                     STR_5:
   984  00207F  20                 	db	32
   985  002080  53                 	db	83	;'S'
   986  002081  25                 	db	37
   987  002082  64                 	db	100	;'d'
   988  002083  46                 	db	70	;'F'
   989  002084  25                 	db	37
   990  002085  64                 	db	100	;'d'
   991  002086  20                 	db	32
   992  002087  23                 	db	35
   993  002088  20                 	db	32
   994  002089  20                 	db	32
   995  00208A  20                 	db	32
   996  00208B  20                 	db	32
   997  00208C  00                 	db	0
   998  00208D                     STR_2:
   999  00208D  20                 	db	32
  1000  00208E  56                 	db	86	;'V'
  1001  00208F  65                 	db	101	;'e'
  1002  002090  72                 	db	114	;'r'
  1003  002091  73                 	db	115	;'s'
  1004  002092  69                 	db	105	;'i'
  1005  002093  6F                 	db	111	;'o'
  1006  002094  6E                 	db	110	;'n'
  1007  002095  20                 	db	32
  1008  002096  25                 	db	37
  1009  002097  73                 	db	115	;'s'
  1010  002098  00                 	db	0
  1011  002099                     STR_6:
  1012  002099  20                 	db	32
  1013  00209A  4F                 	db	79	;'O'
  1014  00209B  4B                 	db	75	;'K'
  1015  00209C  20                 	db	32
  1016  00209D  23                 	db	35
  1017  00209E  00                 	db	0
  1018  00209F                     STR_3:
  1019  00209F  30                 	db	48	;'0'
  1020  0020A0  2E                 	db	46
  1021  0020A1  36                 	db	54	;'6'
  1022  0020A2  32                 	db	50	;'2'
  1023  0020A3  41                 	db	65	;'A'
  1024  0020A4  00                 	db	0
  1025  0020A5                     STR_15:
  1026  0020A5  6C                 	db	108	;'l'
  1027  0020A6  64                 	db	100	;'d'
  1028  0020A7  00                 	db	0
  1029  0020A8                     STR_19:
  1030  0020A8  6C                 	db	108	;'l'
  1031  0020A9  69                 	db	105	;'i'
  1032  0020AA  00                 	db	0
  1033  0020AB                     STR_13:
  1034  0020AB  25                 	db	37
  1035  0020AC  63                 	db	99	;'c'
  1036  0020AD  00                 	db	0
  1037  0000                     
  1038                           ; #config settings
  1039  0020AE  00                 	db	0	; dummy byte at the end
  1040  0000                     
  1041                           	psect	cinit
  1042  004734                     __pcinit:
  1043                           	opt callstack 0
  1044  004734                     start_initialization:
  1045                           	opt callstack 0
  1046  004734                     __initialization:
  1047                           	opt callstack 0
  1048                           
  1049                           ; Initialize objects allocated to BANK3 (112 bytes)
  1050                           ; load TBLPTR registers with __pidataBANK3
  1051  004734  0E9E               	movlw	low __pidataBANK3
  1052  004736  6EF6               	movwf	tblptrl,c
  1053  004738  0E4D               	movlw	high __pidataBANK3
  1054  00473A  6EF7               	movwf	tblptrh,c
  1055  00473C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1056  00473E  6EF8               	movwf	tblptru,c
  1057  004740  EE00  F386         	lfsr	0,__pdataBANK3
  1058  004744  EE20 F070          	lfsr	2,112
  1059  004748                     copy_data0:
  1060  004748  0009               	tblrd		*+
  1061  00474A  006F FFD7 FFEE     	movff	tablat,postinc0
  1062  004750  50DD               	movf	postdec2,w,c
  1063  004752  50D9               	movf	fsr2l,w,c
  1064  004754  E1F9               	bnz	copy_data0
  1065                           
  1066                           ; Initialize objects allocated to BANK1 (210 bytes)
  1067                           ; load TBLPTR registers with __pidataBANK1
  1068  004756  0E90               	movlw	low __pidataBANK1
  1069  004758  6EF6               	movwf	tblptrl,c
  1070  00475A  0E45               	movlw	high __pidataBANK1
  1071  00475C  6EF7               	movwf	tblptrh,c
  1072  00475E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1073  004760  6EF8               	movwf	tblptru,c
  1074  004762  EE00  F100         	lfsr	0,__pdataBANK1
  1075  004766  EE20 F0D2          	lfsr	2,210
  1076  00476A                     copy_data1:
  1077  00476A  0009               	tblrd		*+
  1078  00476C  006F FFD7 FFEE     	movff	tablat,postinc0
  1079  004772  50DD               	movf	postdec2,w,c
  1080  004774  50D9               	movf	fsr2l,w,c
  1081  004776  E1F9               	bnz	copy_data1
  1082                           
  1083                           ; Initialize objects allocated to BANK0 (23 bytes)
  1084                           ; load TBLPTR registers with __pidataBANK0
  1085  004778  0E80               	movlw	low __pidataBANK0
  1086  00477A  6EF6               	movwf	tblptrl,c
  1087  00477C  0E59               	movlw	high __pidataBANK0
  1088  00477E  6EF7               	movwf	tblptrh,c
  1089  004780  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1090  004782  6EF8               	movwf	tblptru,c
  1091  004784  EE00  F0E6         	lfsr	0,__pdataBANK0
  1092  004788  EE20 F017          	lfsr	2,23
  1093  00478C                     copy_data2:
  1094  00478C  0009               	tblrd		*+
  1095  00478E  006F FFD7 FFEE     	movff	tablat,postinc0
  1096  004794  50DD               	movf	postdec2,w,c
  1097  004796  50D9               	movf	fsr2l,w,c
  1098  004798  E1F9               	bnz	copy_data2
  1099                           
  1100                           ; Initialize objects allocated to COMRAM (1 bytes)
  1101                           ; load TBLPTR registers with __pidataCOMRAM
  1102  00479A  0E7E               	movlw	low __pidataCOMRAM
  1103  00479C  6EF6               	movwf	tblptrl,c
  1104  00479E  0E5A               	movlw	high __pidataCOMRAM
  1105  0047A0  6EF7               	movwf	tblptrh,c
  1106  0047A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1107  0047A4  6EF8               	movwf	tblptru,c
  1108  0047A6  0009               	tblrd		*+	;fetch initializer
  1109  0047A8  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1110                           
  1111                           ; Clear objects allocated to BANK3 (134 bytes)
  1112  0047AE  EE00  F300         	lfsr	0,__pbssBANK3
  1113  0047B2  0E86               	movlw	134
  1114  0047B4                     clear_0:
  1115  0047B4  6AEE               	clrf	postinc0,c
  1116  0047B6  06E8               	decf	wreg,f,c
  1117  0047B8  E1FD               	bnz	clear_0
  1118                           
  1119                           ; Clear objects allocated to BANK2 (256 bytes)
  1120  0047BA  EE00  F200         	lfsr	0,__pbssBANK2
  1121  0047BE  EE20 F100          	lfsr	2,256
  1122  0047C2                     clear_1:
  1123  0047C2  6AEE               	clrf	postinc0,c
  1124  0047C4  50DD               	movf	postdec2,w,c
  1125  0047C6  50D9               	movf	fsr2l,w,c
  1126  0047C8  E1FC               	bnz	clear_1
  1127  0047CA  50DA               	movf	fsr2h,w,c
  1128  0047CC  E1FA               	bnz	clear_1
  1129                           
  1130                           ; Clear objects allocated to BANK1 (32 bytes)
  1131  0047CE  EE00  F1D2         	lfsr	0,__pbssBANK1
  1132  0047D2  0E20               	movlw	32
  1133  0047D4                     clear_2:
  1134  0047D4  6AEE               	clrf	postinc0,c
  1135  0047D6  06E8               	decf	wreg,f,c
  1136  0047D8  E1FD               	bnz	clear_2
  1137                           
  1138                           ; Clear objects allocated to BANK0 (134 bytes)
  1139  0047DA  EE00  F060         	lfsr	0,__pbssBANK0
  1140  0047DE  0E86               	movlw	134
  1141  0047E0                     clear_3:
  1142  0047E0  6AEE               	clrf	postinc0,c
  1143  0047E2  06E8               	decf	wreg,f,c
  1144  0047E4  E1FD               	bnz	clear_3
  1145                           
  1146                           ; Clear objects allocated to COMRAM (58 bytes)
  1147  0047E6  EE00  F001         	lfsr	0,__pbssCOMRAM
  1148  0047EA  0E3A               	movlw	58
  1149  0047EC                     clear_4:
  1150  0047EC  6AEE               	clrf	postinc0,c
  1151  0047EE  06E8               	decf	wreg,f,c
  1152  0047F0  E1FD               	bnz	clear_4
  1153                           
  1154                           ;
  1155                           ; Setup IVTBASE
  1156                           ;
  1157  0047F2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1158  0047F4  6ED5               	movwf	213,c
  1159  0047F6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1160  0047F8  6ED6               	movwf	214,c
  1161  0047FA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1162  0047FC  6ED7               	movwf	215,c
  1163  0047FE                     end_of_initialization:
  1164                           	opt callstack 0
  1165  0047FE                     __end_of__initialization:
  1166                           	opt callstack 0
  1167  0047FE  0100               	movlb	0
  1168  004800  EFEF  F014         	goto	_main	;jump to C main() function
  1169                           
  1170                           	psect	bssCOMRAM
  1171  000001                     __pbssCOMRAM:
  1172                           	opt callstack 0
  1173  000001                     secs_II_message@block:
  1174                           	opt callstack 0
  1175  000001                     	ds	7
  1176  000008                     _TMR6_InterruptHandler:
  1177                           	opt callstack 0
  1178  000008                     	ds	3
  1179  00000B                     _ADCC_ADI_InterruptHandler:
  1180                           	opt callstack 0
  1181  00000B                     	ds	3
  1182  00000E                     _UART1_TxInterruptHandler:
  1183                           	opt callstack 0
  1184  00000E                     	ds	3
  1185  000011                     _UART1_RxInterruptHandler:
  1186                           	opt callstack 0
  1187  000011                     	ds	3
  1188  000014                     _UART2_TxInterruptHandler:
  1189                           	opt callstack 0
  1190  000014                     	ds	3
  1191  000017                     _UART2_RxInterruptHandler:
  1192                           	opt callstack 0
  1193  000017                     	ds	3
  1194  00001A                     _INT2_InterruptHandler:
  1195                           	opt callstack 0
  1196  00001A                     	ds	3
  1197  00001D                     _INT1_InterruptHandler:
  1198                           	opt callstack 0
  1199  00001D                     	ds	3
  1200  000020                     _INT0_InterruptHandler:
  1201                           	opt callstack 0
  1202  000020                     	ds	3
  1203  000023                     _width:
  1204                           	opt callstack 0
  1205  000023                     	ds	2
  1206  000025                     _prec:
  1207                           	opt callstack 0
  1208  000025                     	ds	2
  1209  000027                     _flags:
  1210                           	opt callstack 0
  1211  000027                     	ds	2
  1212  000029                     TMR5_ISR@CountCallBack:
  1213                           	opt callstack 0
  1214  000029                     	ds	2
  1215  00002B                     _timer5ReloadVal:
  1216                           	opt callstack 0
  1217  00002B                     	ds	2
  1218  00002D                     t_protocol@retry:
  1219                           	opt callstack 0
  1220  00002D                     	ds	1
  1221  00002E                     r_protocol@rxData_l:
  1222                           	opt callstack 0
  1223  00002E                     	ds	1
  1224  00002F                     _uart2RxCount:
  1225                           	opt callstack 0
  1226  00002F                     	ds	1
  1227  000030                     _uart2RxTail:
  1228                           	opt callstack 0
  1229  000030                     	ds	1
  1230  000031                     _uart2RxHead:
  1231                           	opt callstack 0
  1232  000031                     	ds	1
  1233  000032                     _uart2TxBufferRemaining:
  1234                           	opt callstack 0
  1235  000032                     	ds	1
  1236  000033                     _uart2TxTail:
  1237                           	opt callstack 0
  1238  000033                     	ds	1
  1239  000034                     _uart2TxHead:
  1240                           	opt callstack 0
  1241  000034                     	ds	1
  1242  000035                     _uart1RxCount:
  1243                           	opt callstack 0
  1244  000035                     	ds	1
  1245  000036                     _uart1RxTail:
  1246                           	opt callstack 0
  1247  000036                     	ds	1
  1248  000037                     _uart1RxHead:
  1249                           	opt callstack 0
  1250  000037                     	ds	1
  1251  000038                     _uart1TxBufferRemaining:
  1252                           	opt callstack 0
  1253  000038                     	ds	1
  1254  000039                     _uart1TxTail:
  1255                           	opt callstack 0
  1256  000039                     	ds	1
  1257  00003A                     _uart1TxHead:
  1258                           	opt callstack 0
  1259  00003A                     	ds	1
  1260                           
  1261                           	psect	dataCOMRAM
  1262  00005D                     __pdataCOMRAM:
  1263                           	opt callstack 0
  1264  00005D                     r_protocol@retry:
  1265                           	opt callstack 0
  1266  00005D                     	ds	1
  1267                           
  1268                           	psect	bssBANK0
  1269  000060                     __pbssBANK0:
  1270                           	opt callstack 0
  1271  000060                     _r_block:
  1272                           	opt callstack 0
  1273  000060                     	ds	13
  1274  00006D                     _spi_link:
  1275                           	opt callstack 0
  1276  00006D                     	ds	12
  1277  000079                     _tickCount:
  1278                           	opt callstack 0
  1279  000079                     	ds	12
  1280  000085                     wdtdelay@dcount:
  1281                           	opt callstack 0
  1282  000085                     	ds	4
  1283  000089                     _TMR5_InterruptHandler:
  1284                           	opt callstack 0
  1285  000089                     	ds	3
  1286  00008C                     _nout:
  1287                           	opt callstack 0
  1288  00008C                     	ds	2
  1289  00008E                     run_checksum@sum:
  1290                           	opt callstack 0
  1291  00008E                     	ds	2
  1292  000090                     _V:
  1293                           	opt callstack 0
  1294  000090                     	ds	86
  1295                           
  1296                           	psect	dataBANK0
  1297  0000E6                     __pdataBANK0:
  1298                           	opt callstack 0
  1299  0000E6                     stoa@F1142:
  1300                           	opt callstack 0
  1301  0000E6                     	ds	7
  1302  0000ED                     _H13:
  1303                           	opt callstack 0
  1304  0000ED                     	ds	16
  1305                           
  1306                           	psect	bssBANK1
  1307  0001D2                     __pbssBANK1:
  1308                           	opt callstack 0
  1309  0001D2                     _dbuf:
  1310                           	opt callstack 0
  1311  0001D2                     	ds	32
  1312                           
  1313                           	psect	dataBANK1
  1314  000100                     __pdataBANK1:
  1315                           	opt callstack 0
  1316  000100                     _H10:
  1317                           	opt callstack 0
  1318  000100                     	ds	65
  1319  000141                     _H27:
  1320                           	opt callstack 0
  1321  000141                     	ds	30
  1322  00015F                     _H12:
  1323                           	opt callstack 0
  1324  00015F                     	ds	30
  1325  00017D                     _H24:
  1326                           	opt callstack 0
  1327  00017D                     	ds	27
  1328  000198                     _H18:
  1329                           	opt callstack 0
  1330  000198                     	ds	21
  1331  0001AD                     _H17:
  1332                           	opt callstack 0
  1333  0001AD                     	ds	20
  1334  0001C1                     _H14:
  1335                           	opt callstack 0
  1336  0001C1                     	ds	17
  1337                           
  1338                           	psect	bssBANK2
  1339  000200                     __pbssBANK2:
  1340                           	opt callstack 0
  1341  000200                     _uart2RxBuffer:
  1342                           	opt callstack 0
  1343  000200                     	ds	64
  1344  000240                     _uart2TxBuffer:
  1345                           	opt callstack 0
  1346  000240                     	ds	64
  1347  000280                     _uart1RxBuffer:
  1348                           	opt callstack 0
  1349  000280                     	ds	64
  1350  0002C0                     _uart1TxBuffer:
  1351                           	opt callstack 0
  1352  0002C0                     	ds	64
  1353                           
  1354                           	psect	bssBANK3
  1355  000300                     __pbssBANK3:
  1356                           	opt callstack 0
  1357  000300                     _ring_buf2:
  1358                           	opt callstack 0
  1359  000300                     	ds	67
  1360  000343                     _ring_buf1:
  1361                           	opt callstack 0
  1362  000343                     	ds	67
  1363                           
  1364                           	psect	dataBANK3
  1365  000386                     __pdataBANK3:
  1366                           	opt callstack 0
  1367  000386                     _H53:
  1368                           	opt callstack 0
  1369  000386                     	ds	112
  1370                           
  1371                           	psect	cstackCOMRAM
  1372  00005B                     __pcstackCOMRAM:
  1373                           	opt callstack 0
  1374  00005B                     ??_TMR6_ISR:
  1375  00005B                     
  1376                           ; 1 bytes @ 0x0
  1377  00005B                     	ds	1
  1378  00005C                     ??_TMR5_ISR:
  1379                           
  1380                           ; 1 bytes @ 0x1
  1381  00005C                     	ds	1
  1382                           
  1383 ;;
  1384 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1385 ;;
  1386 ;; *************** function _main *****************
  1387 ;; Defined at:
  1388 ;;		line 302 in file "main.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  mode            1  [STACK] enum E16894
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1  [STACK] void 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 3F/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels required when called:   14
  1408 ;; This function calls:
  1409 ;;		_SYSTEM_Initialize
  1410 ;;		_WaitMs
  1411 ;;		_eaDogM_WriteCommand
  1412 ;;		_eaDogM_WriteStringAtPos
  1413 ;;		_init_display
  1414 ;;		_r_protocol
  1415 ;;		_sprintf
  1416 ;;		_t_protocol
  1417 ;;		_wait_lcd_done
  1418 ;; This function is called by:
  1419 ;;		Startup code after reset
  1420 ;; This function uses a reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text0
  1424  0029DE                     __ptext0:
  1425                           	opt callstack 0
  1426  0029DE                     _main:
  1427                           	opt callstack 0
  1428                           
  1429                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1430  0029DE  52E6               	movf	postinc1,f,c
  1431                           
  1432                           ;main.c: 304:  UI_STATES mode;;main.c: 307:  SYSTEM_Initialize();
  1433                           
  1434                           ;incstack = 0
  1435  0029E0  EC0A  F029         	call	_SYSTEM_Initialize	;wreg free
  1436                           
  1437                           ; BSR set to: 60
  1438                           ;main.c: 310:  (INTCON0bits.GIEH = 1);
  1439  0029E4  8ED2               	bsf	16338,7,c	;volatile
  1440                           
  1441                           ; BSR set to: 60
  1442                           ;main.c: 313:  (INTCON0bits.GIEL = 1);
  1443  0029E6  8CD2               	bsf	16338,6,c	;volatile
  1444                           
  1445                           ; BSR set to: 60
  1446                           ;main.c: 315:  V.ui_state = UI_STATE_INIT;
  1447  0029E8  0100               	movlb	0	; () banked
  1448  0029EA  6B91               	clrf	(_V+1)& (0+255),b	;volatile
  1449  0029EC  D158               	goto	l7156
  1450  0029EE                     l7032:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;main.c: 320:    init_display();
  1454  0029EE  EC53  F022         	call	_init_display	;wreg free
  1455                           
  1456                           ; BSR set to: 61
  1457                           ;main.c: 321:    eaDogM_WriteCommand(0b00001100);
  1458  0029F2  0E0C               	movlw	12
  1459  0029F4  6EE6               	movwf	postinc1,c
  1460  0029F6  ECEC  F02C         	call	_eaDogM_WriteCommand	;wreg free
  1461                           
  1462                           ; BSR set to: 0
  1463  0029FA  90BD               	bcf	16317,0,c	;volatile
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;main.c: 323:    mode = PORTDbits.RD2 + UI_STATE_EQUIP;
  1467  0029FC  A4CD               	btfss	16333,2,c	;volatile
  1468  0029FE  D003               	goto	u4160
  1469  002A00  6A46               	clrf	btemp+11,c
  1470  002A02  2A46               	incf	btemp+11,f,c
  1471  002A04  D001               	goto	u4168
  1472  002A06                     u4160:
  1473  002A06  6A46               	clrf	btemp+11,c
  1474  002A08                     u4168:
  1475  002A08  0E01               	movlw	1
  1476  002A0A  2646               	addwf	btemp+11,f,c
  1477                           
  1478                           ;stkvar	_mode @ sp[(-1)+0]
  1479  002A0C  0EFF               	movlw	-1
  1480  002A0E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  1481                           
  1482                           ;main.c: 324:    if (!PORTDbits.RD3) {
  1483  002A14  B6CD               	btfsc	16333,3,c	;volatile
  1484  002A16  D004               	goto	l7044
  1485                           
  1486                           ;main.c: 325:     do { LATDbits.LATD0 = 1; } while(0);
  1487  002A18  80BD               	bsf	16317,0,c	;volatile
  1488                           
  1489                           ;main.c: 326:     mode = UI_STATE_LOG;
  1490                           ;stkvar	_mode @ sp[(-1)+0]
  1491  002A1A  0EFF               	movlw	-1
  1492  002A1C  6AE3               	clrf	plusw1,c
  1493  002A1E  84E3               	bsf	plusw1,2,c
  1494  002A20                     l7044:
  1495                           
  1496                           ;main.c: 328:    V.ui_state = mode;
  1497                           ;stkvar	_mode @ sp[(-1)+0]
  1498  002A20  0EFF               	movlw	-1
  1499  002A22  006F FF8C  F091    	movff	plusw1,_V+1	;volatile
  1500                           
  1501                           ;main.c: 329:    V.s_state = SEQ_STATE_INIT;
  1502  002A28  0100               	movlb	0	; () banked
  1503  002A2A  6B90               	clrf	_V& (0+255),b	;volatile
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;main.c: 359:    sprintf(V.buf, " RVI HOST TESTER");
  1507  002A2C  0E5F               	movlw	STR_1& (0+255)
  1508  002A2E  6EE6               	movwf	postinc1,c
  1509  002A30  0E90               	movlw	_V& (0+255)
  1510  002A32  0F04               	addlw	4
  1511  002A34  6EE6               	movwf	postinc1,c
  1512  002A36  0E02               	movlw	2
  1513  002A38  6EE6               	movwf	postinc1,c
  1514  002A3A  EC02  F024         	call	_sprintf	;wreg free
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;main.c: 360:    wait_lcd_done();
  1518  002A3E  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;main.c: 361:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1522  002A42  0E90               	movlw	_V& (0+255)
  1523  002A44  0F04               	addlw	4
  1524  002A46  6EE6               	movwf	postinc1,c
  1525  002A48  0E00               	movlw	0
  1526  002A4A  6EE6               	movwf	postinc1,c
  1527  002A4C  0E00               	movlw	0
  1528  002A4E  6EE6               	movwf	postinc1,c
  1529  002A50  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1530                           
  1531                           ; BSR set to: 59
  1532                           ;main.c: 362:    sprintf(V.buf, " Version %s", "0.62A");
  1533  002A54  0E9F               	movlw	STR_3& (0+255)
  1534  002A56  6E46               	movwf	btemp+11,c
  1535  002A58  0060  F11B  FFE6   	movff	btemp+11,postinc1
  1536  002A5E  0E20               	movlw	high __smallconst
  1537  002A60  6EE6               	movwf	postinc1,c
  1538  002A62  0E8D               	movlw	STR_2& (0+255)
  1539  002A64  6EE6               	movwf	postinc1,c
  1540  002A66  0E90               	movlw	_V& (0+255)
  1541  002A68  0F04               	addlw	4
  1542  002A6A  6EE6               	movwf	postinc1,c
  1543  002A6C  0E04               	movlw	4
  1544  002A6E  6EE6               	movwf	postinc1,c
  1545  002A70  EC02  F024         	call	_sprintf	;wreg free
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;main.c: 363:    wait_lcd_done();
  1549  002A74  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;main.c: 364:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1553  002A78  0E90               	movlw	_V& (0+255)
  1554  002A7A  0F04               	addlw	4
  1555  002A7C  6EE6               	movwf	postinc1,c
  1556  002A7E  0E00               	movlw	0
  1557  002A80  6EE6               	movwf	postinc1,c
  1558  002A82  0E01               	movlw	1
  1559  002A84  6EE6               	movwf	postinc1,c
  1560  002A86  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1561                           
  1562                           ; BSR set to: 59
  1563                           ;main.c: 365:    sprintf(V.buf, " FGB@MCHP FAB4");
  1564  002A8A  0E70               	movlw	STR_4& (0+255)
  1565  002A8C  6EE6               	movwf	postinc1,c
  1566  002A8E  0E90               	movlw	_V& (0+255)
  1567  002A90  0F04               	addlw	4
  1568  002A92  6EE6               	movwf	postinc1,c
  1569  002A94  0E02               	movlw	2
  1570  002A96  6EE6               	movwf	postinc1,c
  1571  002A98  EC02  F024         	call	_sprintf	;wreg free
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 366:    wait_lcd_done();
  1575  002A9C  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;main.c: 367:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1579  002AA0  0E90               	movlw	_V& (0+255)
  1580  002AA2  0F04               	addlw	4
  1581  002AA4  6EE6               	movwf	postinc1,c
  1582  002AA6  0E00               	movlw	0
  1583  002AA8  6EE6               	movwf	postinc1,c
  1584  002AAA  0E02               	movlw	2
  1585  002AAC  6EE6               	movwf	postinc1,c
  1586  002AAE  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1587                           
  1588                           ; BSR set to: 59
  1589                           ;main.c: 369:    WaitMs(3000);
  1590  002AB2  0EB8               	movlw	184
  1591  002AB4  6EE6               	movwf	postinc1,c
  1592  002AB6  0E0B               	movlw	11
  1593  002AB8  6EE6               	movwf	postinc1,c
  1594  002ABA  EC34  F02A         	call	_WaitMs	;wreg free
  1595                           
  1596                           ;main.c: 370:    break;
  1597  002ABE  D105               	goto	l1250
  1598  002AC0                     l1219:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;main.c: 374:     V.r_l_state = LINK_STATE_IDLE;
  1602  002AC0  6B92               	clrf	(_V+2)& (0+255),b	;volatile
  1603                           
  1604                           ;main.c: 375:     V.t_l_state = LINK_STATE_IDLE;
  1605  002AC2  6B93               	clrf	(_V+3)& (0+255),b	;volatile
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 376:     V.s_state = SEQ_STATE_RX;
  1609  002AC4  0E01               	movlw	1
  1610  002AC6  6F90               	movwf	_V& (0+255),b	;volatile
  1611  002AC8  D069               	goto	l1241
  1612  002ACA                     l7072:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;main.c: 387:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1616  002ACA  0E90               	movlw	_V& (0+255)
  1617  002ACC  0F02               	addlw	2
  1618  002ACE  6EE6               	movwf	postinc1,c
  1619  002AD0  EC10  F018         	call	_r_protocol	;wreg free
  1620  002AD4  0E04               	movlw	4
  1621  002AD6  183B               	xorwf	btemp,w,c
  1622  002AD8  A4D8               	btfss	status,2,c
  1623  002ADA  D02A               	goto	l7090
  1624                           
  1625                           ;main.c: 388:      do { LATEbits.LATE2 = 0; } while(0);
  1626  002ADC  94BE               	bcf	16318,2,c	;volatile
  1627                           
  1628                           ;main.c: 389:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1629  002ADE  0100               	movlb	0	; () banked
  1630  002AE0  51DD               	movf	(_V+77)& (0+255),w,b	;volatile
  1631  002AE2  6EE6               	movwf	postinc1,c
  1632  002AE4  0E00               	movlw	0
  1633  002AE6  6EE6               	movwf	postinc1,c
  1634  002AE8  51DC               	movf	(_V+76)& (0+255),w,b	;volatile
  1635  002AEA  6EE6               	movwf	postinc1,c
  1636  002AEC  0E00               	movlw	0
  1637  002AEE  6EE6               	movwf	postinc1,c
  1638  002AF0  0E7F               	movlw	STR_5& (0+255)
  1639  002AF2  6EE6               	movwf	postinc1,c
  1640  002AF4  0E90               	movlw	_V& (0+255)
  1641  002AF6  0F04               	addlw	4
  1642  002AF8  6EE6               	movwf	postinc1,c
  1643  002AFA  0E06               	movlw	6
  1644  002AFC  6EE6               	movwf	postinc1,c
  1645  002AFE  EC02  F024         	call	_sprintf	;wreg free
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 390:      V.buf[11] = 0;
  1649  002B02  6B9F               	clrf	(_V+15)& (0+255),b	;volatile
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;main.c: 391:      wait_lcd_done();
  1653  002B04  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;main.c: 392:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1657  002B08  0E90               	movlw	_V& (0+255)
  1658  002B0A  0F04               	addlw	4
  1659  002B0C  6EE6               	movwf	postinc1,c
  1660  002B0E  0E00               	movlw	0
  1661  002B10  6EE6               	movwf	postinc1,c
  1662  002B12  0E00               	movlw	0
  1663  002B14  6EE6               	movwf	postinc1,c
  1664  002B16  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1665                           
  1666                           ; BSR set to: 59
  1667                           ;main.c: 396:      if (V.wbit) {
  1668  002B1A  0100               	movlb	0	; () banked
  1669  002B1C  A3E4               	btfss	(_V+84)& (0+255),1,b	;volatile
  1670  002B1E  D006               	goto	l7088
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 397:       V.s_state = SEQ_STATE_TX;
  1674  002B20  0E02               	movlw	2
  1675  002B22  6F90               	movwf	_V& (0+255),b	;volatile
  1676                           
  1677                           ;main.c: 398:       V.failed_send = 0;
  1678  002B24  0E87               	movlw	-121
  1679  002B26  17E4               	andwf	(_V+84)& (0+255),f,b	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main.c: 399:       V.t_l_state = LINK_STATE_IDLE;
  1683  002B28  6B93               	clrf	(_V+3)& (0+255),b	;volatile
  1684                           
  1685                           ;main.c: 400:      } else {
  1686  002B2A  D002               	goto	l7090
  1687  002B2C                     l7088:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 401:       V.s_state = SEQ_STATE_TRIGGER;
  1691  002B2C  0E03               	movlw	3
  1692  002B2E  6F90               	movwf	_V& (0+255),b	;volatile
  1693  002B30                     l7090:
  1694                           
  1695                           ;main.c: 404:     if (V.r_l_state == LINK_STATE_ERROR)
  1696  002B30  0E06               	movlw	6
  1697  002B32  0100               	movlb	0	; () banked
  1698  002B34  1992               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1699  002B36  D010               	goto	L22
  1700  002B38                     l7094:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;main.c: 411:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1704  002B38  0E90               	movlw	_V& (0+255)
  1705  002B3A  0F03               	addlw	3
  1706  002B3C  6EE6               	movwf	postinc1,c
  1707  002B3E  ECD7  F01A         	call	_t_protocol	;wreg free
  1708  002B42  0E04               	movlw	4
  1709  002B44  183B               	xorwf	btemp,w,c
  1710  002B46  A4D8               	btfss	status,2,c
  1711  002B48  D004               	goto	l7098
  1712                           
  1713                           ;main.c: 412:      do { LATEbits.LATE2 = 0; } while(0);
  1714  002B4A  94BE               	bcf	16318,2,c	;volatile
  1715                           
  1716                           ;main.c: 413:      V.s_state = SEQ_STATE_TRIGGER;
  1717  002B4C  0E03               	movlw	3
  1718  002B4E  0100               	movlb	0	; () banked
  1719  002B50  6F90               	movwf	_V& (0+255),b	;volatile
  1720  002B52                     l7098:
  1721                           
  1722                           ;main.c: 415:     if (V.t_l_state == LINK_STATE_ERROR)
  1723  002B52  0E06               	movlw	6
  1724  002B54  0100               	movlb	0	; () banked
  1725  002B56  1993               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1726  002B58                     L22:
  1727  002B58  A4D8               	btfss	status,2,c
  1728  002B5A  D062               	goto	l7126
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 416:      V.s_state = SEQ_STATE_ERROR;
  1732  002B5C  0E06               	movlw	6
  1733  002B5E  6F90               	movwf	_V& (0+255),b	;volatile
  1734  002B60  D05F               	goto	l7126
  1735  002B62                     l1235:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;main.c: 419:     if (V.queue) {
  1739  002B62  A9E5               	btfss	(_V+85)& (0+255),4,b	;volatile
  1740  002B64  D002               	goto	l7104
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 420:      V.s_state = SEQ_STATE_TX;
  1744  002B66  0E02               	movlw	2
  1745  002B68  D001               	goto	L1
  1746  002B6A                     l7104:
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;main.c: 422:      V.s_state = SEQ_STATE_DONE;
  1750  002B6A  0E05               	movlw	5
  1751  002B6C                     L1:
  1752  002B6C  6F90               	movwf	_V& (0+255),b	;volatile
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;main.c: 424:     sprintf(V.buf, " OK #");
  1756  002B6E  0E99               	movlw	STR_6& (0+255)
  1757  002B70  6EE6               	movwf	postinc1,c
  1758  002B72  0E90               	movlw	_V& (0+255)
  1759  002B74  0F04               	addlw	4
  1760  002B76  6EE6               	movwf	postinc1,c
  1761  002B78  0E02               	movlw	2
  1762  002B7A  6EE6               	movwf	postinc1,c
  1763  002B7C  EC02  F024         	call	_sprintf	;wreg free
  1764                           
  1765                           ; BSR set to: 0
  1766  002B80  94BE               	bcf	16318,2,c	;volatile
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;main.c: 426:     wait_lcd_done();
  1770  002B82  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main.c: 427:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1774  002B86  0E90               	movlw	_V& (0+255)
  1775  002B88  0F04               	addlw	4
  1776  002B8A  6EE6               	movwf	postinc1,c
  1777  002B8C  0E0B               	movlw	11
  1778  002B8E  6EE6               	movwf	postinc1,c
  1779  002B90  0E00               	movlw	0
  1780  002B92  6EE6               	movwf	postinc1,c
  1781  002B94  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1782                           
  1783                           ;main.c: 429:     break;
  1784  002B98  D043               	goto	l7126
  1785  002B9A                     l1240:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 431:     V.s_state = SEQ_STATE_INIT;
  1789  002B9A  6B90               	clrf	_V& (0+255),b	;volatile
  1790  002B9C                     l1241:
  1791                           
  1792                           ; BSR set to: 0
  1793  002B9C  94BE               	bcf	16318,2,c	;volatile
  1794  002B9E  D040               	goto	l7126
  1795  002BA0                     l1244:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;main.c: 436:     V.s_state = SEQ_STATE_INIT;
  1799  002BA0  6B90               	clrf	_V& (0+255),b	;volatile
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;main.c: 437:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1803  002BA2  51DF               	movf	(_V+79)& (0+255),w,b	;volatile
  1804  002BA4  6EE6               	movwf	postinc1,c
  1805  002BA6  0E00               	movlw	0
  1806  002BA8  6EE6               	movwf	postinc1,c
  1807  002BAA  51DE               	movf	(_V+78)& (0+255),w,b	;volatile
  1808  002BAC  6EE6               	movwf	postinc1,c
  1809  002BAE  0E00               	movlw	0
  1810  002BB0  6EE6               	movwf	postinc1,c
  1811  002BB2  5193               	movf	(_V+3)& (0+255),w,b	;volatile
  1812  002BB4  6EE6               	movwf	postinc1,c
  1813  002BB6  0E00               	movlw	0
  1814  002BB8  6EE6               	movwf	postinc1,c
  1815  002BBA  5192               	movf	(_V+2)& (0+255),w,b	;volatile
  1816  002BBC  6EE6               	movwf	postinc1,c
  1817  002BBE  0E00               	movlw	0
  1818  002BC0  6EE6               	movwf	postinc1,c
  1819  002BC2  0E16               	movlw	STR_7& (0+255)
  1820  002BC4  6EE6               	movwf	postinc1,c
  1821  002BC6  0E90               	movlw	_V& (0+255)
  1822  002BC8  0F04               	addlw	4
  1823  002BCA  6EE6               	movwf	postinc1,c
  1824  002BCC  0E0A               	movlw	10
  1825  002BCE  6EE6               	movwf	postinc1,c
  1826  002BD0  EC02  F024         	call	_sprintf	;wreg free
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main.c: 438:     V.buf[16] = 0;
  1830  002BD4  6BA4               	clrf	(_V+20)& (0+255),b	;volatile
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;main.c: 439:     wait_lcd_done();
  1834  002BD6  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;main.c: 440:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1838  002BDA  0E90               	movlw	_V& (0+255)
  1839  002BDC  0F04               	addlw	4
  1840  002BDE  6EE6               	movwf	postinc1,c
  1841  002BE0  0E00               	movlw	0
  1842  002BE2  6EE6               	movwf	postinc1,c
  1843  002BE4  0E02               	movlw	2
  1844  002BE6  6EE6               	movwf	postinc1,c
  1845  002BE8  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1846                           
  1847                           ;main.c: 441:     break;
  1848  002BEC  D019               	goto	l7126
  1849  002BEE                     l7124:
  1850                           
  1851                           ; BSR set to: 0
  1852  002BEE  5190               	movf	_V& (0+255),w,b	;volatile
  1853  002BF0  6E45               	movwf	btemp+10,c
  1854  002BF2  6A46               	clrf	btemp+11,c
  1855                           
  1856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1857                           ; Switch size 1, requested type "simple"
  1858                           ; Number of cases is 1, Range of values is 0 to 0
  1859                           ; switch strategies available:
  1860                           ; Name         Instructions Cycles
  1861                           ; simple_byte            4     3 (average)
  1862                           ;	Chosen strategy is simple_byte
  1863  002BF4  5046               	movf	btemp+11,w,c
  1864  002BF6  0A00               	xorlw	0	; case 0
  1865  002BF8  A4D8               	btfss	status,2,c
  1866  002BFA  D7D2               	goto	l1244
  1867                           
  1868                           ; BSR set to: 0
  1869                           ; Switch size 1, requested type "simple"
  1870                           ; Number of cases is 6, Range of values is 0 to 6
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte           19    10 (average)
  1874                           ;	Chosen strategy is simple_byte
  1875  002BFC  5045               	movf	btemp+10,w,c
  1876  002BFE  0A00               	xorlw	0	; case 0
  1877  002C00  B4D8               	btfsc	status,2,c
  1878  002C02  D75E               	goto	l1219
  1879  002C04  0A01               	xorlw	1	; case 1
  1880  002C06  B4D8               	btfsc	status,2,c
  1881  002C08  D760               	goto	l7072
  1882  002C0A  0A03               	xorlw	3	; case 2
  1883  002C0C  B4D8               	btfsc	status,2,c
  1884  002C0E  D794               	goto	l7094
  1885  002C10  0A01               	xorlw	1	; case 3
  1886  002C12  B4D8               	btfsc	status,2,c
  1887  002C14  D7A6               	goto	l1235
  1888  002C16  0A06               	xorlw	6	; case 5
  1889  002C18  B4D8               	btfsc	status,2,c
  1890  002C1A  D7BF               	goto	l1240
  1891  002C1C  0A03               	xorlw	3	; case 6
  1892  002C1E  D7C0               	goto	l1244
  1893  002C20                     l7126:
  1894                           
  1895                           ;main.c: 443:    if (!V.error && !V.abort) {
  1896  002C20  0100               	movlb	0	; () banked
  1897  002C22  51DE               	movf	(_V+78)& (0+255),w,b	;volatile
  1898  002C24  A4D8               	btfss	status,2,c
  1899  002C26  D051               	goto	l1250
  1900                           
  1901                           ; BSR set to: 0
  1902  002C28  51DF               	movf	(_V+79)& (0+255),w,b	;volatile
  1903  002C2A  A4D8               	btfss	status,2,c
  1904  002C2C  D04E               	goto	l1250
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 444:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1908  002C2E  0060  F353  FFE6   	movff	_V+68,postinc1
  1909  002C34  0060  F357  FFE6   	movff	_V+69,postinc1
  1910  002C3A  0060  F35B  FFE6   	movff	_V+70,postinc1
  1911  002C40  0060  F35F  FFE6   	movff	_V+71,postinc1
  1912  002C46  0E2A               	movlw	STR_8& (0+255)
  1913  002C48  6EE6               	movwf	postinc1,c
  1914  002C4A  0E90               	movlw	_V& (0+255)
  1915  002C4C  0F04               	addlw	4
  1916  002C4E  6EE6               	movwf	postinc1,c
  1917  002C50  0E06               	movlw	6
  1918  002C52  6EE6               	movwf	postinc1,c
  1919  002C54  EC02  F024         	call	_sprintf	;wreg free
  1920  002C58                     l7132:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 445:     V.buf[16] = 0;
  1924  002C58  6BA4               	clrf	(_V+20)& (0+255),b	;volatile
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;main.c: 446:     wait_lcd_done();
  1928  002C5A  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;main.c: 447:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1932  002C5E  0E90               	movlw	_V& (0+255)
  1933  002C60  0F04               	addlw	4
  1934  002C62  6EE6               	movwf	postinc1,c
  1935  002C64  0E00               	movlw	0
  1936  002C66  6EE6               	movwf	postinc1,c
  1937  002C68  0E02               	movlw	2
  1938  002C6A  6EE6               	movwf	postinc1,c
  1939  002C6C  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1940  002C70  D02C               	goto	l1250
  1941  002C72                     l7138:
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;main.c: 451:    sprintf(V.buf, " EQUIP MODE    #");
  1945  002C72  0E4E               	movlw	STR_9& (0+255)
  1946  002C74  6EE6               	movwf	postinc1,c
  1947  002C76  0E90               	movlw	_V& (0+255)
  1948  002C78  0F04               	addlw	4
  1949  002C7A  6EE6               	movwf	postinc1,c
  1950  002C7C  0E02               	movlw	2
  1951  002C7E  6EE6               	movwf	postinc1,c
  1952  002C80  EC02  F024         	call	_sprintf	;wreg free
  1953  002C84  D7E9               	goto	l7132
  1954  002C86                     l7146:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;main.c: 457:    sprintf(V.buf, " LOG MODE      #");
  1958  002C86  0E3D               	movlw	STR_10& (0+255)
  1959  002C88  6EE6               	movwf	postinc1,c
  1960  002C8A  0E90               	movlw	_V& (0+255)
  1961  002C8C  0F04               	addlw	4
  1962  002C8E  6EE6               	movwf	postinc1,c
  1963  002C90  0E02               	movlw	2
  1964  002C92  6EE6               	movwf	postinc1,c
  1965  002C94  EC02  F024         	call	_sprintf	;wreg free
  1966  002C98  D7DF               	goto	l7132
  1967  002C9A                     l1249:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;main.c: 464:    V.ui_state = UI_STATE_INIT;
  1971  002C9A  6B91               	clrf	(_V+1)& (0+255),b	;volatile
  1972                           
  1973                           ;main.c: 465:    break;
  1974  002C9C  D016               	goto	l1250
  1975  002C9E                     l7156:
  1976                           
  1977                           ; BSR set to: 0
  1978  002C9E  5191               	movf	(_V+1)& (0+255),w,b	;volatile
  1979  002CA0  6E45               	movwf	btemp+10,c
  1980  002CA2  6A46               	clrf	btemp+11,c
  1981                           
  1982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1983                           ; Switch size 1, requested type "simple"
  1984                           ; Number of cases is 1, Range of values is 0 to 0
  1985                           ; switch strategies available:
  1986                           ; Name         Instructions Cycles
  1987                           ; simple_byte            4     3 (average)
  1988                           ;	Chosen strategy is simple_byte
  1989  002CA4  5046               	movf	btemp+11,w,c
  1990  002CA6  0A00               	xorlw	0	; case 0
  1991  002CA8  A4D8               	btfss	status,2,c
  1992  002CAA  D7F7               	goto	l1249
  1993                           
  1994                           ; BSR set to: 0
  1995                           ; Switch size 1, requested type "simple"
  1996                           ; Number of cases is 5, Range of values is 0 to 5
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte           16     9 (average)
  2000                           ;	Chosen strategy is simple_byte
  2001  002CAC  5045               	movf	btemp+10,w,c
  2002  002CAE  0A00               	xorlw	0	; case 0
  2003  002CB0  B4D8               	btfsc	status,2,c
  2004  002CB2  D69D               	goto	l7032
  2005  002CB4  0A01               	xorlw	1	; case 1
  2006  002CB6  B4D8               	btfsc	status,2,c
  2007  002CB8  D7DC               	goto	l7138
  2008  002CBA  0A03               	xorlw	3	; case 2
  2009  002CBC  B4D8               	btfsc	status,2,c
  2010  002CBE  D797               	goto	l7124
  2011  002CC0  0A06               	xorlw	6	; case 4
  2012  002CC2  B4D8               	btfsc	status,2,c
  2013  002CC4  D7E0               	goto	l7146
  2014  002CC6  0A01               	xorlw	1	; case 5
  2015  002CC8  D7E8               	goto	l1249
  2016  002CCA                     l1250:
  2017  002CCA  82BE               	bsf	16318,1,c	;volatile
  2018                           
  2019                           ;main.c: 468:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2020  002CCC  0100               	movlb	0	; () banked
  2021  002CCE  31E4               	rrcf	(_V+84)& (0+255),w,b	;volatile
  2022  002CD0  32E8               	rrcf	wreg,f,c
  2023  002CD2  32E8               	rrcf	wreg,f,c
  2024  002CD4  0B0F               	andlw	15
  2025  002CD6  6EE6               	movwf	postinc1,c
  2026  002CD8  0E00               	movlw	0
  2027  002CDA  6EE6               	movwf	postinc1,c
  2028  002CDC  51E5               	movf	(_V+85)& (0+255),w,b	;volatile
  2029  002CDE  0B0F               	andlw	15
  2030  002CE0  6EE6               	movwf	postinc1,c
  2031  002CE2  0E00               	movlw	0
  2032  002CE4  6EE6               	movwf	postinc1,c
  2033  002CE6  5193               	movf	(_V+3)& (0+255),w,b	;volatile
  2034  002CE8  6EE6               	movwf	postinc1,c
  2035  002CEA  0E00               	movlw	0
  2036  002CEC  6EE6               	movwf	postinc1,c
  2037  002CEE  5192               	movf	(_V+2)& (0+255),w,b	;volatile
  2038  002CF0  6EE6               	movwf	postinc1,c
  2039  002CF2  0E00               	movlw	0
  2040  002CF4  6EE6               	movwf	postinc1,c
  2041  002CF6  0E01               	movlw	STR_11& (0+255)
  2042  002CF8  6EE6               	movwf	postinc1,c
  2043  002CFA  0E90               	movlw	_V& (0+255)
  2044  002CFC  0F04               	addlw	4
  2045  002CFE  6EE6               	movwf	postinc1,c
  2046  002D00  0E0A               	movlw	10
  2047  002D02  6EE6               	movwf	postinc1,c
  2048  002D04  EC02  F024         	call	_sprintf	;wreg free
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;main.c: 469:   V.buf[16] = 0;
  2052  002D08  6BA4               	clrf	(_V+20)& (0+255),b	;volatile
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;main.c: 470:   wait_lcd_done();
  2056  002D0A  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 471:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  2060  002D0E  0E90               	movlw	_V& (0+255)
  2061  002D10  0F04               	addlw	4
  2062  002D12  6EE6               	movwf	postinc1,c
  2063  002D14  0E00               	movlw	0
  2064  002D16  6EE6               	movwf	postinc1,c
  2065  002D18  0E01               	movlw	1
  2066  002D1A  6EE6               	movwf	postinc1,c
  2067  002D1C  ECDD  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  2068                           
  2069                           ; BSR set to: 59
  2070  002D20  92BE               	bcf	16318,1,c	;volatile
  2071                           
  2072                           ; BSR set to: 59
  2073  002D22  84BE               	bsf	16318,2,c	;volatile
  2074                           
  2075                           ; BSR set to: 59
  2076                           ;main.c: 474:   ++V.ticks;
  2077  002D24  0E01               	movlw	1
  2078  002D26  0100               	movlb	0	; () banked
  2079  002D28  27D4               	addwf	(_V+68)& (0+255),f,b	;volatile
  2080  002D2A  0E00               	movlw	0
  2081  002D2C  23D5               	addwfc	(_V+69)& (0+255),f,b	;volatile
  2082  002D2E  23D6               	addwfc	(_V+70)& (0+255),f,b	;volatile
  2083  002D30  23D7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  2084  002D32  D7B5               	goto	l7156
  2085  002D34                     __end_of_main:
  2086                           	opt callstack 0
  2087                           
  2088 ;; *************** function _t_protocol *****************
  2089 ;; Defined at:
  2090 ;;		line 146 in file "gemsecs.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  t_link          1  [STACK] PTR enum E16164
  2093 ;;		 -> V(86), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  block           7  [STACK] struct response_type
  2096 ;;  rxData          1  [STACK] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1  [STACK] enum E16902
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    5
  2113 ;; This function calls:
  2114 ;;		_StartTimer
  2115 ;;		_TimerDone
  2116 ;;		_UART1_Read
  2117 ;;		_UART1_Write
  2118 ;;		_UART1_is_rx_ready
  2119 ;;		_UART1_put_buffer
  2120 ;;		_secs_II_message
  2121 ;;		_secs_send
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text1
  2128  0035AE                     __ptext1:
  2129                           	opt callstack 0
  2130  0035AE                     _t_protocol:
  2131                           	opt callstack 0
  2132                           
  2133                           ; BSR set to: 0
  2134                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2135  0035AE  0E08               	movlw	8
  2136  0035B0  26E1               	addwf	fsr1l,f,c
  2137  0035B2  0E00               	movlw	0
  2138  0035B4  22E2               	addwfc	fsr1h,f,c
  2139                           
  2140                           ;gemsecs.c: 146: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 147: {;gemsecs.
      +                          c: 148:  uint8_t rxData;;gemsecs.c: 149:  static uint8_t retry;;gemsecs.c: 150:  respons
      +                          e_type block;;gemsecs.c: 152:  switch (*t_link) {
  2141                           
  2142                           ;incstack = 0
  2143  0035B6  D121               	goto	l7002
  2144  0035B8                     l1557:
  2145                           
  2146                           ;gemsecs.c: 154:   V.error = LINK_ERROR_NONE;
  2147  0035B8  0100               	movlb	0	; () banked
  2148  0035BA  6BDE               	clrf	(_V+78)& (0+255),b	;volatile
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;gemsecs.c: 155:   retry = 3;
  2152  0035BC  0E03               	movlw	3
  2153  0035BE  6E2D               	movwf	t_protocol@retry,c
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;gemsecs.c: 156:   UART1_Write(0x05);
  2157  0035C0  0E05               	movlw	5
  2158  0035C2  6EE6               	movwf	postinc1,c
  2159  0035C4  EC4B  F029         	call	_UART1_Write	;wreg free
  2160                           
  2161                           ; BSR set to: 57
  2162                           ;gemsecs.c: 157:   StartTimer(TMR_T2, 2000);
  2163  0035C8  0ED0               	movlw	208
  2164  0035CA  6EE6               	movwf	postinc1,c
  2165  0035CC  0E07               	movlw	7
  2166  0035CE  6EE6               	movwf	postinc1,c
  2167  0035D0  0E02               	movlw	2
  2168  0035D2  6EE6               	movwf	postinc1,c
  2169  0035D4  ECA9  F029         	call	_StartTimer	;wreg free
  2170                           
  2171                           ;gemsecs.c: 158:   *t_link = LINK_STATE_ENQ;
  2172                           ;stkvar	_t_link @ sp[(-8)+-1]
  2173  0035D8  0EF7               	movlw	-9
  2174  0035DA  50E3               	movf	plusw1,w,c
  2175  0035DC  6ED9               	movwf	fsr2l,c
  2176  0035DE  6ADA               	clrf	fsr2h,c
  2177  0035E0  0E01               	movlw	1
  2178  0035E2  D109               	goto	L6
  2179  0035E4                     l6926:
  2180                           
  2181                           ;gemsecs.c: 165:   if (TimerDone(TMR_T2)) {
  2182  0035E4  0E02               	movlw	2
  2183  0035E6  6EE6               	movwf	postinc1,c
  2184  0035E8  ECD9  F02B         	call	_TimerDone	;wreg free
  2185  0035EC  503B               	movf	btemp,w,c
  2186  0035EE  B4D8               	btfsc	status,2,c
  2187  0035F0  D01A               	goto	l6936
  2188                           
  2189                           ;gemsecs.c: 166:    if (!retry--) {
  2190  0035F2  062D               	decf	t_protocol@retry,f,c
  2191  0035F4  282D               	incf	t_protocol@retry,w,c
  2192  0035F6  A4D8               	btfss	status,2,c
  2193  0035F8  D00D               	goto	l6934
  2194                           
  2195                           ;gemsecs.c: 167:     V.error = LINK_ERROR_T2;
  2196  0035FA  0E02               	movlw	2
  2197  0035FC  0100               	movlb	0	; () banked
  2198  0035FE  6FDE               	movwf	(_V+78)& (0+255),b	;volatile
  2199                           
  2200                           ;gemsecs.c: 168:     V.failed_send = 1;
  2201  003600  51E4               	movf	(_V+84)& (0+255),w,b	;volatile
  2202  003602  0B87               	andlw	-121
  2203  003604  0908               	iorlw	8
  2204  003606  6FE4               	movwf	(_V+84)& (0+255),b	;volatile
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;gemsecs.c: 169:     *t_link = LINK_STATE_NAK;
  2208                           ;stkvar	_t_link @ sp[(-8)+-1]
  2209  003608  0EF7               	movlw	-9
  2210  00360A  50E3               	movf	plusw1,w,c
  2211  00360C  6ED9               	movwf	fsr2l,c
  2212  00360E  6ADA               	clrf	fsr2h,c
  2213  003610  0E05               	movlw	5
  2214  003612  D0F1               	goto	L6
  2215  003614                     l6934:
  2216                           
  2217                           ;gemsecs.c: 171:     StartTimer(TMR_T2, 2000);
  2218  003614  0ED0               	movlw	208
  2219  003616  6EE6               	movwf	postinc1,c
  2220  003618  0E07               	movlw	7
  2221  00361A  6EE6               	movwf	postinc1,c
  2222  00361C  0E02               	movlw	2
  2223  00361E  6EE6               	movwf	postinc1,c
  2224  003620  ECA9  F029         	call	_StartTimer	;wreg free
  2225  003624  D10B               	goto	l7004
  2226  003626                     l6936:
  2227                           
  2228                           ;gemsecs.c: 174:    if (UART1_is_rx_ready()) {
  2229  003626  EC2D  F02D         	call	_UART1_is_rx_ready	;wreg free
  2230  00362A  503B               	movf	btemp,w,c
  2231  00362C  B4D8               	btfsc	status,2,c
  2232  00362E  D106               	goto	l7004
  2233                           
  2234                           ;gemsecs.c: 175:     rxData = UART1_Read();
  2235  003630  EC6A  F029         	call	_UART1_Read	;wreg free
  2236                           
  2237                           ;stkvar	_rxData @ sp[(-8)+7]
  2238  003634  0EFF               	movlw	-1
  2239  003636  0060  F0EF  FFE3   	movff	btemp,plusw1
  2240                           
  2241                           ; BSR set to: 57
  2242                           ;gemsecs.c: 176:     if (rxData == 0x04) {
  2243                           ;stkvar	_rxData @ sp[(-8)+7]
  2244  00363C  0EFF               	movlw	-1
  2245  00363E  006F FF8C  F03B    	movff	plusw1,btemp
  2246  003644  0E04               	movlw	4
  2247  003646  183B               	xorwf	btemp,w,c
  2248  003648  A4D8               	btfss	status,2,c
  2249  00364A  D00E               	goto	l6946
  2250                           
  2251                           ; BSR set to: 57
  2252                           ;gemsecs.c: 177:      StartTimer(TMR_T3, 5000);
  2253  00364C  0E88               	movlw	136
  2254  00364E  6EE6               	movwf	postinc1,c
  2255  003650  0E13               	movlw	19
  2256  003652  6EE6               	movwf	postinc1,c
  2257  003654  0E03               	movlw	3
  2258  003656  6EE6               	movwf	postinc1,c
  2259  003658  ECA9  F029         	call	_StartTimer	;wreg free
  2260                           
  2261                           ;gemsecs.c: 178:      *t_link = LINK_STATE_EOT;
  2262                           ;stkvar	_t_link @ sp[(-8)+-1]
  2263  00365C  0EF7               	movlw	-9
  2264  00365E  50E3               	movf	plusw1,w,c
  2265  003660  6ED9               	movwf	fsr2l,c
  2266  003662  6ADA               	clrf	fsr2h,c
  2267  003664  0E02               	movlw	2
  2268  003666  6EDF               	movwf	indf2,c
  2269  003668                     l6946:
  2270                           
  2271                           ;gemsecs.c: 180:     if (rxData == 0x05) {
  2272                           ;stkvar	_rxData @ sp[(-8)+7]
  2273  003668  0EFF               	movlw	-1
  2274  00366A  006F FF8C  F03B    	movff	plusw1,btemp
  2275  003670  0E05               	movlw	5
  2276  003672  183B               	xorwf	btemp,w,c
  2277  003674  A4D8               	btfss	status,2,c
  2278  003676  D0E2               	goto	l7004
  2279                           
  2280                           ;gemsecs.c: 181:      UART1_put_buffer(0x04);
  2281  003678  0E04               	movlw	4
  2282  00367A  6EE6               	movwf	postinc1,c
  2283  00367C  EC1F  F02A         	call	_UART1_put_buffer	;wreg free
  2284  003680                     l6950:
  2285                           
  2286                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2287                           ;stkvar	_t_link @ sp[(-8)+-1]
  2288  003680  0EF7               	movlw	-9
  2289  003682  50E3               	movf	plusw1,w,c
  2290  003684  6ED9               	movwf	fsr2l,c
  2291  003686  6ADA               	clrf	fsr2h,c
  2292  003688  0E04               	movlw	4
  2293  00368A  D0B5               	goto	L6
  2294  00368C                     l6952:
  2295                           
  2296                           ;gemsecs.c: 188:   block = secs_II_message(V.stream, V.function);
  2297  00368C  0100               	movlb	0	; () banked
  2298  00368E  51DD               	movf	(_V+77)& (0+255),w,b	;volatile
  2299  003690  6EE6               	movwf	postinc1,c
  2300  003692  51DC               	movf	(_V+76)& (0+255),w,b	;volatile
  2301  003694  6EE6               	movwf	postinc1,c
  2302  003696  EC89  F01E         	call	_secs_II_message	;wreg free
  2303                           
  2304                           ;stkvar	_block @ sp[(-15)+0]
  2305  00369A  0EF8               	movlw	248
  2306  00369C  24E1               	addwf	fsr1l,w,c
  2307  00369E  6ED9               	movwf	fsr2l,c
  2308  0036A0  0EFF               	movlw	255
  2309  0036A2  20E2               	addwfc	fsr1h,w,c
  2310  0036A4  6EDA               	movwf	fsr2h,c
  2311  0036A6  0E07               	movlw	7
  2312  0036A8  6F3B               	movwf	btemp,b
  2313  0036AA                     uf407999:
  2314  0036AA  50DD               	movf	postdec2,w,c
  2315  0036AC  52E5               	movf	postdec1,f,c
  2316  0036AE  50E7               	movf	indf1,w,c
  2317  0036B0  6EDF               	movwf	indf2,c
  2318  0036B2  2F3B               	decfsz	btemp,f,b
  2319  0036B4  D7FA               	bra	uf407999
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;gemsecs.c: 189:   if (V.abort == LINK_ERROR_ABORT) {
  2323  0036B6  0E07               	movlw	7
  2324  0036B8  19DF               	xorwf	(_V+79)& (0+255),w,b	;volatile
  2325  0036BA  A4D8               	btfss	status,2,c
  2326  0036BC  D01E               	goto	l1568
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;gemsecs.c: 190:    secs_send((uint8_t*) block.header, block.length, 0);
  2330  0036BE  0E00               	movlw	0
  2331  0036C0  6EE6               	movwf	postinc1,c
  2332                           
  2333                           ;stkvar	_block @ sp[(-9)+0]
  2334  0036C2  0EF9               	movlw	249
  2335  0036C4  24E1               	addwf	fsr1l,w,c
  2336  0036C6  6ED9               	movwf	fsr2l,c
  2337  0036C8  0EFF               	movlw	255
  2338  0036CA  20E2               	addwfc	fsr1h,w,c
  2339  0036CC  6EDA               	movwf	fsr2h,c
  2340  0036CE  50DF               	movf	indf2,w,c
  2341  0036D0  6EE6               	movwf	postinc1,c
  2342                           
  2343                           ;stkvar	_block @ sp[(-10)+0]
  2344  0036D2  0EF6               	movlw	-10
  2345  0036D4  006F FF8F FFE6     	movff	plusw1,postinc1
  2346  0036DA  006F FF8F FFE6     	movff	plusw1,postinc1
  2347  0036E0  EC9F  F01F         	call	_secs_send	;wreg free
  2348                           
  2349                           ;gemsecs.c: 191:    V.failed_send = 2;
  2350  0036E4  0100               	movlb	0	; () banked
  2351  0036E6  51E4               	movf	(_V+84)& (0+255),w,b	;volatile
  2352  0036E8  0B87               	andlw	-121
  2353  0036EA  0910               	iorlw	16
  2354  0036EC  6FE4               	movwf	(_V+84)& (0+255),b	;volatile
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;gemsecs.c: 192:    *t_link = LINK_STATE_ERROR;
  2358                           ;stkvar	_t_link @ sp[(-8)+-1]
  2359  0036EE  0EF7               	movlw	-9
  2360  0036F0  50E3               	movf	plusw1,w,c
  2361  0036F2  6ED9               	movwf	fsr2l,c
  2362  0036F4  6ADA               	clrf	fsr2h,c
  2363  0036F6  0E06               	movlw	6
  2364  0036F8  D07E               	goto	L6
  2365  0036FA                     l1568:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;gemsecs.c: 194:    if (!V.queue) {
  2369  0036FA  B9E5               	btfsc	(_V+85)& (0+255),4,b	;volatile
  2370  0036FC  D014               	goto	l1570
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;gemsecs.c: 195:     secs_send((uint8_t*) block.header, block.length, 0);
  2374  0036FE  0E00               	movlw	0
  2375  003700  6EE6               	movwf	postinc1,c
  2376                           
  2377                           ;stkvar	_block @ sp[(-9)+0]
  2378  003702  0EF9               	movlw	249
  2379  003704  24E1               	addwf	fsr1l,w,c
  2380  003706  6ED9               	movwf	fsr2l,c
  2381  003708  0EFF               	movlw	255
  2382  00370A  20E2               	addwfc	fsr1h,w,c
  2383  00370C  6EDA               	movwf	fsr2h,c
  2384  00370E  50DF               	movf	indf2,w,c
  2385  003710  6EE6               	movwf	postinc1,c
  2386                           
  2387                           ;stkvar	_block @ sp[(-10)+0]
  2388  003712  0EF6               	movlw	-10
  2389  003714  006F FF8F FFE6     	movff	plusw1,postinc1
  2390  00371A  006F FF8F FFE6     	movff	plusw1,postinc1
  2391  003720  EC9F  F01F         	call	_secs_send	;wreg free
  2392                           
  2393                           ;gemsecs.c: 196:    } else {
  2394  003724  D01F               	goto	l6966
  2395  003726                     l1570:
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;gemsecs.c: 197:     V.queue = 0;
  2399  003726  99E5               	bcf	(_V+85)& (0+255),4,b	;volatile
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;gemsecs.c: 198:     secs_send((uint8_t*) block.reply, block.reply_length, 0);
  2403  003728  0E00               	movlw	0
  2404  00372A  6EE6               	movwf	postinc1,c
  2405                           
  2406                           ;stkvar	_block @ sp[(-9)+0]
  2407  00372C  0EFC               	movlw	252
  2408  00372E  24E1               	addwf	fsr1l,w,c
  2409  003730  6ED9               	movwf	fsr2l,c
  2410  003732  0EFF               	movlw	255
  2411  003734  20E2               	addwfc	fsr1h,w,c
  2412  003736  6EDA               	movwf	fsr2h,c
  2413  003738  50DF               	movf	indf2,w,c
  2414  00373A  6EE6               	movwf	postinc1,c
  2415                           
  2416                           ;stkvar	_block @ sp[(-10)+0]
  2417  00373C  0EF9               	movlw	249
  2418  00373E  24E1               	addwf	fsr1l,w,c
  2419  003740  6ED9               	movwf	fsr2l,c
  2420  003742  0EFF               	movlw	255
  2421  003744  20E2               	addwfc	fsr1h,w,c
  2422  003746  6EDA               	movwf	fsr2h,c
  2423  003748  006F FF78  F045    	movff	postinc2,btemp+10
  2424  00374E  006F FF74  F046    	movff	postdec2,btemp+11
  2425  003754  0060  F117  FFE6   	movff	btemp+10,postinc1
  2426  00375A  0060  F11B  FFE6   	movff	btemp+11,postinc1
  2427  003760  EC9F  F01F         	call	_secs_send	;wreg free
  2428  003764                     l6966:
  2429                           
  2430                           ;gemsecs.c: 200:    if (V.error == LINK_ERROR_NONE) {
  2431  003764  0100               	movlb	0	; () banked
  2432  003766  51DE               	movf	(_V+78)& (0+255),w,b	;volatile
  2433  003768  A4D8               	btfss	status,2,c
  2434  00376A  D006               	goto	l6970
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;gemsecs.c: 201:     *t_link = LINK_STATE_ACK;
  2438                           ;stkvar	_t_link @ sp[(-8)+-1]
  2439  00376C  0EF7               	movlw	-9
  2440  00376E  50E3               	movf	plusw1,w,c
  2441  003770  6ED9               	movwf	fsr2l,c
  2442  003772  6ADA               	clrf	fsr2h,c
  2443  003774  0E03               	movlw	3
  2444  003776  D03F               	goto	L6
  2445  003778                     l6970:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;gemsecs.c: 203:     V.failed_send = 3;
  2449  003778  51E4               	movf	(_V+84)& (0+255),w,b	;volatile
  2450  00377A  0B87               	andlw	-121
  2451  00377C  0918               	iorlw	24
  2452  00377E  D7B6               	goto	L7
  2453  003780                     l6974:
  2454                           
  2455                           ;gemsecs.c: 213:   if (TimerDone(TMR_T3)) {
  2456  003780  0E03               	movlw	3
  2457  003782  6EE6               	movwf	postinc1,c
  2458  003784  ECD9  F02B         	call	_TimerDone	;wreg free
  2459  003788  503B               	movf	btemp,w,c
  2460  00378A  B4D8               	btfsc	status,2,c
  2461  00378C  D007               	goto	l6980
  2462                           
  2463                           ;gemsecs.c: 214:    V.error = LINK_ERROR_T3;
  2464  00378E  0E03               	movlw	3
  2465  003790  0100               	movlb	0	; () banked
  2466  003792  6FDE               	movwf	(_V+78)& (0+255),b	;volatile
  2467                           
  2468                           ;gemsecs.c: 215:    V.failed_send = 4;
  2469  003794  51E4               	movf	(_V+84)& (0+255),w,b	;volatile
  2470  003796  0B87               	andlw	-121
  2471  003798  0920               	iorlw	32
  2472  00379A  D735               	goto	L8
  2473  00379C                     l6980:
  2474                           
  2475                           ;gemsecs.c: 218:    if (UART1_is_rx_ready()) {
  2476  00379C  EC2D  F02D         	call	_UART1_is_rx_ready	;wreg free
  2477  0037A0  503B               	movf	btemp,w,c
  2478  0037A2  B4D8               	btfsc	status,2,c
  2479  0037A4  D04B               	goto	l7004
  2480                           
  2481                           ;gemsecs.c: 219:     rxData = UART1_Read();
  2482  0037A6  EC6A  F029         	call	_UART1_Read	;wreg free
  2483                           
  2484                           ;stkvar	_rxData @ sp[(-8)+7]
  2485  0037AA  0EFF               	movlw	-1
  2486  0037AC  0060  F0EF  FFE3   	movff	btemp,plusw1
  2487                           
  2488                           ; BSR set to: 57
  2489                           ;gemsecs.c: 220:     if (rxData == 0x06) {
  2490                           ;stkvar	_rxData @ sp[(-8)+7]
  2491  0037B2  0EFF               	movlw	-1
  2492  0037B4  006F FF8C  F03B    	movff	plusw1,btemp
  2493  0037BA  0E06               	movlw	6
  2494  0037BC  183B               	xorwf	btemp,w,c
  2495  0037BE  A4D8               	btfss	status,2,c
  2496  0037C0  D03D               	goto	l7004
  2497                           
  2498                           ; BSR set to: 57
  2499                           ;gemsecs.c: 221:      V.failed_send = 0;
  2500  0037C2  0E87               	movlw	-121
  2501  0037C4  0100               	movlb	0	; () banked
  2502  0037C6  17E4               	andwf	(_V+84)& (0+255),f,b	;volatile
  2503  0037C8  D75B               	goto	l6950
  2504  0037CA                     l6990:
  2505                           
  2506                           ;gemsecs.c: 228:   *t_link = LINK_STATE_ERROR;
  2507                           ;stkvar	_t_link @ sp[(-8)+-1]
  2508  0037CA  0EF7               	movlw	-9
  2509  0037CC  50E3               	movf	plusw1,w,c
  2510  0037CE  6ED9               	movwf	fsr2l,c
  2511  0037D0  6ADA               	clrf	fsr2h,c
  2512  0037D2  0E06               	movlw	6
  2513  0037D4  6EDF               	movwf	indf2,c
  2514                           
  2515                           ;gemsecs.c: 229:   while ((uart1RxCount)) {
  2516  0037D6  D002               	goto	l6994
  2517  0037D8                     l6992:
  2518                           
  2519                           ;gemsecs.c: 230:    UART1_Read();
  2520  0037D8  EC6A  F029         	call	_UART1_Read	;wreg free
  2521  0037DC                     l6994:
  2522                           
  2523                           ;gemsecs.c: 229:   while ((uart1RxCount)) {
  2524  0037DC  5035               	movf	_uart1RxCount,w,c	;volatile
  2525  0037DE  B4D8               	btfsc	status,2,c
  2526  0037E0  D02D               	goto	l7004
  2527  0037E2  D7FA               	goto	l6992
  2528  0037E4                     l6996:
  2529                           
  2530                           ;gemsecs.c: 236:   V.failed_send = 0;
  2531  0037E4  0E87               	movlw	-121
  2532  0037E6  0100               	movlb	0	; () banked
  2533  0037E8  17E4               	andwf	(_V+84)& (0+255),f,b	;volatile
  2534                           
  2535                           ;gemsecs.c: 237:   break;
  2536  0037EA  D028               	goto	l7004
  2537  0037EC                     l6998:
  2538                           
  2539                           ;gemsecs.c: 239:   *t_link = LINK_STATE_IDLE;
  2540                           ;stkvar	_t_link @ sp[(-8)+-1]
  2541  0037EC  0EF7               	movlw	-9
  2542  0037EE  50E3               	movf	plusw1,w,c
  2543  0037F0  6ED9               	movwf	fsr2l,c
  2544  0037F2  6ADA               	clrf	fsr2h,c
  2545  0037F4  0E00               	movlw	0
  2546  0037F6                     L6:
  2547  0037F6  6EDF               	movwf	indf2,c
  2548                           
  2549                           ;gemsecs.c: 240:   break;
  2550  0037F8  D021               	goto	l7004
  2551  0037FA                     l7002:
  2552                           
  2553                           ;stkvar	_t_link @ sp[(-8)+-1]
  2554  0037FA  0EF7               	movlw	-9
  2555  0037FC  50E3               	movf	plusw1,w,c
  2556  0037FE  6ED9               	movwf	fsr2l,c
  2557  003800  6ADA               	clrf	fsr2h,c
  2558  003802  50DF               	movf	indf2,w,c
  2559  003804  6E45               	movwf	btemp+10,c
  2560  003806  6A46               	clrf	btemp+11,c
  2561                           
  2562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2563                           ; Switch size 1, requested type "simple"
  2564                           ; Number of cases is 1, Range of values is 0 to 0
  2565                           ; switch strategies available:
  2566                           ; Name         Instructions Cycles
  2567                           ; simple_byte            4     3 (average)
  2568                           ;	Chosen strategy is simple_byte
  2569  003808  5046               	movf	btemp+11,w,c
  2570  00380A  0A00               	xorlw	0	; case 0
  2571  00380C  A4D8               	btfss	status,2,c
  2572  00380E  D7EE               	goto	l6998
  2573                           
  2574                           ; Switch size 1, requested type "simple"
  2575                           ; Number of cases is 7, Range of values is 0 to 6
  2576                           ; switch strategies available:
  2577                           ; Name         Instructions Cycles
  2578                           ; simple_byte           22    12 (average)
  2579                           ;	Chosen strategy is simple_byte
  2580  003810  5045               	movf	btemp+10,w,c
  2581  003812  0A00               	xorlw	0	; case 0
  2582  003814  B4D8               	btfsc	status,2,c
  2583  003816  D6D0               	goto	l1557
  2584  003818  0A01               	xorlw	1	; case 1
  2585  00381A  B4D8               	btfsc	status,2,c
  2586  00381C  D6E3               	goto	l6926
  2587  00381E  0A03               	xorlw	3	; case 2
  2588  003820  B4D8               	btfsc	status,2,c
  2589  003822  D734               	goto	l6952
  2590  003824  0A01               	xorlw	1	; case 3
  2591  003826  B4D8               	btfsc	status,2,c
  2592  003828  D7AB               	goto	l6974
  2593  00382A  0A07               	xorlw	7	; case 4
  2594  00382C  B4D8               	btfsc	status,2,c
  2595  00382E  D7DA               	goto	l6996
  2596  003830  0A01               	xorlw	1	; case 5
  2597  003832  B4D8               	btfsc	status,2,c
  2598  003834  D7CA               	goto	l6990
  2599  003836  0A03               	xorlw	3	; case 6
  2600  003838  A4D8               	btfss	status,2,c
  2601  00383A  D7D8               	goto	l6998
  2602  00383C                     l7004:
  2603                           
  2604                           ;gemsecs.c: 243:  return *t_link;
  2605                           ;stkvar	_t_link @ sp[(-8)+-1]
  2606  00383C  0EF7               	movlw	-9
  2607  00383E  50E3               	movf	plusw1,w,c
  2608  003840  6ED9               	movwf	fsr2l,c
  2609  003842  6ADA               	clrf	fsr2h,c
  2610  003844  50DF               	movf	indf2,w,c
  2611  003846  6E3B               	movwf	btemp,c
  2612                           
  2613                           ; _t_protocol: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2614  003848  0EF7               	movlw	247
  2615  00384A  26E1               	addwf	fsr1l,f,c
  2616  00384C  0EFF               	movlw	255
  2617  00384E  22E2               	addwfc	fsr1h,f,c
  2618  003850  0012               	return		;funcret
  2619  003852                     __end_of_t_protocol:
  2620                           	opt callstack 0
  2621                           
  2622 ;; *************** function _secs_send *****************
  2623 ;; Defined at:
  2624 ;;		line 247 in file "gemsecs.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  byte_block      2  [STACK] PTR unsigned char 
  2627 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2628 ;;		 -> H17(20), H14(17), H13(16), H12(30), 
  2629 ;;		 -> H10(65), 
  2630 ;;  length          1  [STACK] unsigned char 
  2631 ;;  fake            1  [STACK] _Bool 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  k               2  [STACK] PTR unsigned char 
  2634 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2635 ;;		 -> H17(20), H14(17), H13(16), H12(30), 
  2636 ;;		 -> H10(65), 
  2637 ;;  checksum        2  [STACK] unsigned short 
  2638 ;;  i               1  [STACK] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1  [STACK] _Bool 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2643 ;; Tracked objects:
  2644 ;;		On entry : 3F/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    4
  2655 ;; This function calls:
  2656 ;;		_UART1_Write
  2657 ;;		_UART1_is_tx_ready
  2658 ;;		_UART1_put_buffer
  2659 ;;		_block_checksum
  2660 ;; This function is called by:
  2661 ;;		_t_protocol
  2662 ;; This function uses a reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text2
  2666  003F3E                     __ptext2:
  2667                           	opt callstack 0
  2668  003F3E                     _secs_send:
  2669                           	opt callstack 0
  2670                           
  2671                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2672  003F3E  0E05               	movlw	5
  2673  003F40  26E1               	addwf	fsr1l,f,c
  2674  003F42  0E00               	movlw	0
  2675  003F44  22E2               	addwfc	fsr1h,f,c
  2676                           
  2677                           ;gemsecs.c: 247: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 248: {;gemsecs.c: 249:  uint8_t i, *k;;gemsecs.c: 250:  uint16_t checksum;;gemsecs.
      +                          c: 252:  k = (uint8_t *) byte_block;
  2678                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2679                           
  2680                           ;incstack = 0
  2681  003F46  0EF9               	movlw	-7
  2682  003F48  006F FF8C  F045    	movff	plusw1,btemp+10
  2683  003F4E  0EFA               	movlw	-6
  2684  003F50  006F FF8C  F046    	movff	plusw1,btemp+11
  2685                           
  2686                           ;stkvar	_k @ sp[(-5)+0]
  2687  003F56  0EFC               	movlw	-4
  2688  003F58  0060  F11B  FFE3   	movff	btemp+11,plusw1
  2689  003F5E  0EFB               	movlw	-5
  2690  003F60  0060  F117  FFE3   	movff	btemp+10,plusw1
  2691                           
  2692                           ;gemsecs.c: 254:  V.error = LINK_ERROR_NONE;
  2693  003F66  0100               	movlb	0	; () banked
  2694  003F68  6BDE               	clrf	(_V+78)& (0+255),b	;volatile
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;gemsecs.c: 255:  if ((length - 3) != k[length - 1]) {
  2698                           ;stkvar	_length @ sp[(-5)+-3]
  2699  003F6A  0EF8               	movlw	-8
  2700  003F6C  50E3               	movf	plusw1,w,c
  2701  003F6E  6E45               	movwf	btemp+10,c
  2702  003F70  6A46               	clrf	btemp+11,c
  2703                           
  2704                           ;stkvar	_k @ sp[(-5)+0]
  2705  003F72  0EFB               	movlw	-5
  2706  003F74  50E3               	movf	plusw1,w,c
  2707  003F76  2645               	addwf	btemp+10,f,c
  2708  003F78  0EFC               	movlw	-4
  2709  003F7A  50E3               	movf	plusw1,w,c
  2710  003F7C  2246               	addwfc	btemp+11,f,c
  2711  003F7E  0EFF               	movlw	255
  2712  003F80  2445               	addwf	btemp+10,w,c
  2713  003F82  6ED9               	movwf	fsr2l,c
  2714  003F84  0EFF               	movlw	255
  2715  003F86  2046               	addwfc	btemp+11,w,c
  2716  003F88  6EDA               	movwf	fsr2h,c
  2717  003F8A  50DF               	movf	indf2,w,c
  2718  003F8C  6E45               	movwf	btemp+10,c
  2719  003F8E  6A46               	clrf	btemp+11,c
  2720  003F90  0EFD               	movlw	253
  2721  003F92  6E43               	movwf	btemp+8,c
  2722  003F94  0EFF               	movlw	255
  2723  003F96  6E44               	movwf	btemp+9,c
  2724                           
  2725                           ;stkvar	_length @ sp[(-5)+-3]
  2726  003F98  0EF8               	movlw	-8
  2727  003F9A  50E3               	movf	plusw1,w,c
  2728  003F9C  6E41               	movwf	btemp+6,c
  2729  003F9E  6A42               	clrf	btemp+7,c
  2730  003FA0  5043               	movf	btemp+8,w,c
  2731  003FA2  2641               	addwf	btemp+6,f,c
  2732  003FA4  5044               	movf	btemp+9,w,c
  2733  003FA6  2242               	addwfc	btemp+7,f,c
  2734  003FA8  5045               	movf	btemp+10,w,c
  2735  003FAA  1841               	xorwf	btemp+6,w,c
  2736  003FAC  E104               	bnz	u3960
  2737  003FAE  5046               	movf	btemp+11,w,c
  2738  003FB0  1842               	xorwf	btemp+7,w,c
  2739  003FB2  B4D8               	btfsc	status,2,c
  2740  003FB4  D003               	goto	l6774
  2741  003FB6                     u3960:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;gemsecs.c: 256:   V.error = LINK_ERROR_SEND;
  2745  003FB6  0E08               	movlw	8
  2746  003FB8  6FDE               	movwf	(_V+78)& (0+255),b	;volatile
  2747  003FBA  D098               	goto	l1590
  2748  003FBC                     l6774:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;gemsecs.c: 265:  checksum = block_checksum(&k[2], length - 3);
  2752  003FBC  0EFD               	movlw	253
  2753  003FBE  6E45               	movwf	btemp+10,c
  2754  003FC0  0EFF               	movlw	255
  2755  003FC2  6E46               	movwf	btemp+11,c
  2756                           
  2757                           ;stkvar	_length @ sp[(-5)+-3]
  2758  003FC4  0EF8               	movlw	-8
  2759  003FC6  50E3               	movf	plusw1,w,c
  2760  003FC8  6E43               	movwf	btemp+8,c
  2761  003FCA  6A44               	clrf	btemp+9,c
  2762  003FCC  5045               	movf	btemp+10,w,c
  2763  003FCE  2643               	addwf	btemp+8,f,c
  2764  003FD0  5046               	movf	btemp+11,w,c
  2765  003FD2  2244               	addwfc	btemp+9,f,c
  2766  003FD4  0060  F10F  FFE6   	movff	btemp+8,postinc1
  2767  003FDA  0060  F113  FFE6   	movff	btemp+9,postinc1
  2768                           
  2769                           ;stkvar	_k @ sp[(-7)+0]
  2770  003FE0  0EF9               	movlw	-7
  2771  003FE2  50E3               	movf	plusw1,w,c
  2772  003FE4  0F02               	addlw	2
  2773  003FE6  6E45               	movwf	btemp+10,c
  2774  003FE8  0EFA               	movlw	-6
  2775  003FEA  006F FF8C  F046    	movff	plusw1,btemp+11
  2776  003FF0  0E00               	movlw	0
  2777  003FF2  2246               	addwfc	btemp+11,f,c
  2778  003FF4  0060  F117  FFE6   	movff	btemp+10,postinc1
  2779  003FFA  0060  F11B  FFE6   	movff	btemp+11,postinc1
  2780  004000  EC31  F023         	call	_block_checksum	;wreg free
  2781                           
  2782                           ;stkvar	_checksum @ sp[(-5)+2]
  2783  004004  0EFD               	movlw	-3
  2784  004006  0060  F0EF  FFE3   	movff	btemp,plusw1
  2785  00400C  0EFE               	movlw	-2
  2786  00400E  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  2787                           
  2788                           ;gemsecs.c: 266:  k[0] = checksum & 0xff;
  2789                           ;stkvar	_checksum @ sp[(-5)+2]
  2790                           ;stkvar	_k @ sp[(-5)+0]
  2791  004014  0EFB               	movlw	-5
  2792  004016  006F FF8F FFD9     	movff	plusw1,fsr2l
  2793  00401C  0EFC               	movlw	-4
  2794  00401E  006F FF8F FFDA     	movff	plusw1,fsr2h
  2795  004024  0EFD               	movlw	-3
  2796  004026  006F FF8F FFDF     	movff	plusw1,indf2
  2797                           
  2798                           ;gemsecs.c: 267:  k[1] = (checksum >> 8)&0xff;
  2799                           ;stkvar	_checksum @ sp[(-5)+2]
  2800  00402C  0EFE               	movlw	254
  2801  00402E  24E1               	addwf	fsr1l,w,c
  2802  004030  6ED9               	movwf	fsr2l,c
  2803  004032  0EFF               	movlw	255
  2804  004034  20E2               	addwfc	fsr1h,w,c
  2805  004036  6EDA               	movwf	fsr2h,c
  2806                           
  2807                           ;stkvar	_k @ sp[(-5)+0]
  2808  004038  0EFB               	movlw	-5
  2809  00403A  006F FF8C  F045    	movff	plusw1,btemp+10
  2810  004040  0EFC               	movlw	-4
  2811  004042  006F FF8C  F046    	movff	plusw1,btemp+11
  2812  004048  0E01               	movlw	1
  2813  00404A  2445               	addwf	btemp+10,w,c
  2814  00404C  6EE9               	movwf	fsr0l,c
  2815  00404E  0E00               	movlw	0
  2816  004050  2046               	addwfc	btemp+11,w,c
  2817  004052  6EEA               	movwf	fsr0h,c
  2818  004054  006F FF7F FFEF     	movff	indf2,indf0
  2819                           
  2820                           ;gemsecs.c: 268:  V.t_checksum = checksum;
  2821                           ;stkvar	_checksum @ sp[(-5)+2]
  2822  00405A  0EFD               	movlw	-3
  2823  00405C  006F FF8C  F0E2    	movff	plusw1,_V+82	;volatile
  2824  004062  0EFE               	movlw	-2
  2825  004064  006F FF8C  F0E3    	movff	plusw1,_V+83	;volatile
  2826  00406A                     l6782:
  2827  00406A  EC29  F02D         	call	_UART1_is_tx_ready	;wreg free
  2828  00406E  0E3F               	movlw	63
  2829  004070  643B               	cpfsgt	btemp,c
  2830  004072  D7FB               	goto	l6782
  2831                           
  2832                           ;gemsecs.c: 271:  for (i = length; i > 0; i--) {
  2833                           ;stkvar	_length @ sp[(-5)+-3]
  2834                           ;stkvar	_i @ sp[(-5)+4]
  2835  004074  0EF8               	movlw	-8
  2836  004076  006F FF8C  F03B    	movff	plusw1,btemp
  2837  00407C  0EFF               	movlw	-1
  2838  00407E  0060  F0EF  FFE3   	movff	btemp,plusw1
  2839  004084                     l6786:
  2840                           
  2841                           ;stkvar	_i @ sp[(-5)+4]
  2842  004084  0EFF               	movlw	-1
  2843  004086  50E3               	movf	plusw1,w,c
  2844  004088  B4D8               	btfsc	status,2,c
  2845  00408A  D030               	goto	l1590
  2846                           
  2847                           ;gemsecs.c: 272:   if (fake) {
  2848                           ;stkvar	_fake @ sp[(-5)+-4]
  2849  00408C  0EF7               	movlw	-9
  2850  00408E  50E3               	movf	plusw1,w,c
  2851  004090  B4D8               	btfsc	status,2,c
  2852  004092  D015               	goto	l6794
  2853                           
  2854                           ;gemsecs.c: 273:    UART1_put_buffer(k[i - 1]);
  2855                           ;stkvar	_i @ sp[(-5)+4]
  2856  004094  0EFF               	movlw	-1
  2857  004096  50E3               	movf	plusw1,w,c
  2858  004098  6E45               	movwf	btemp+10,c
  2859  00409A  6A46               	clrf	btemp+11,c
  2860                           
  2861                           ;stkvar	_k @ sp[(-5)+0]
  2862  00409C  0EFB               	movlw	-5
  2863  00409E  50E3               	movf	plusw1,w,c
  2864  0040A0  2645               	addwf	btemp+10,f,c
  2865  0040A2  0EFC               	movlw	-4
  2866  0040A4  50E3               	movf	plusw1,w,c
  2867  0040A6  2246               	addwfc	btemp+11,f,c
  2868  0040A8  0EFF               	movlw	255
  2869  0040AA  2445               	addwf	btemp+10,w,c
  2870  0040AC  6ED9               	movwf	fsr2l,c
  2871  0040AE  0EFF               	movlw	255
  2872  0040B0  2046               	addwfc	btemp+11,w,c
  2873  0040B2  6EDA               	movwf	fsr2h,c
  2874  0040B4  50DF               	movf	indf2,w,c
  2875  0040B6  6EE6               	movwf	postinc1,c
  2876  0040B8  EC1F  F02A         	call	_UART1_put_buffer	;wreg free
  2877                           
  2878                           ;gemsecs.c: 274:   } else {
  2879  0040BC  D014               	goto	l6796
  2880  0040BE                     l6794:
  2881                           
  2882                           ;gemsecs.c: 275:    UART1_Write(k[i - 1]);
  2883                           ;stkvar	_i @ sp[(-5)+4]
  2884  0040BE  0EFF               	movlw	-1
  2885  0040C0  50E3               	movf	plusw1,w,c
  2886  0040C2  6E45               	movwf	btemp+10,c
  2887  0040C4  6A46               	clrf	btemp+11,c
  2888                           
  2889                           ;stkvar	_k @ sp[(-5)+0]
  2890  0040C6  0EFB               	movlw	-5
  2891  0040C8  50E3               	movf	plusw1,w,c
  2892  0040CA  2645               	addwf	btemp+10,f,c
  2893  0040CC  0EFC               	movlw	-4
  2894  0040CE  50E3               	movf	plusw1,w,c
  2895  0040D0  2246               	addwfc	btemp+11,f,c
  2896  0040D2  0EFF               	movlw	255
  2897  0040D4  2445               	addwf	btemp+10,w,c
  2898  0040D6  6ED9               	movwf	fsr2l,c
  2899  0040D8  0EFF               	movlw	255
  2900  0040DA  2046               	addwfc	btemp+11,w,c
  2901  0040DC  6EDA               	movwf	fsr2h,c
  2902  0040DE  50DF               	movf	indf2,w,c
  2903  0040E0  6EE6               	movwf	postinc1,c
  2904  0040E2  EC4B  F029         	call	_UART1_Write	;wreg free
  2905  0040E6                     l6796:
  2906                           
  2907                           ; BSR set to: 57
  2908                           ;gemsecs.c: 277:  }
  2909                           ;stkvar	_i @ sp[(-5)+4]
  2910  0040E6  0EFF               	movlw	-1
  2911  0040E8  06E3               	decf	plusw1,f,c
  2912  0040EA  D7CC               	goto	l6786
  2913  0040EC                     l1590:
  2914                           
  2915                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  2916  0040EC  0EF7               	movlw	247
  2917  0040EE  26E1               	addwf	fsr1l,f,c
  2918  0040F0  0EFF               	movlw	255
  2919  0040F2  22E2               	addwfc	fsr1h,f,c
  2920  0040F4  0012               	return		;funcret
  2921  0040F6                     __end_of_secs_send:
  2922                           	opt callstack 0
  2923                           
  2924 ;; *************** function _block_checksum *****************
  2925 ;; Defined at:
  2926 ;;		line 18 in file "gemsecs.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  byte_block      2  [STACK] PTR unsigned char 
  2929 ;;		 -> H53(112), H27(30), H24(27), H18(21), 
  2930 ;;		 -> H17(20), H14(17), H13(16), H12(30), 
  2931 ;;		 -> H10(65), 
  2932 ;;  byte_count      2  [STACK] unsigned short 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  i               2  [STACK] unsigned short 
  2935 ;;  sum             2  [STACK] unsigned short 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2  [STACK] unsigned short 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  2940 ;; Tracked objects:
  2941 ;;		On entry : 3F/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2949 ;;Total ram usage:        0 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    3
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_secs_send
  2956 ;; This function uses a reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text3
  2960  004662                     __ptext3:
  2961                           	opt callstack 0
  2962  004662                     _block_checksum:
  2963                           	opt callstack 0
  2964                           
  2965                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2966  004662  52E6               	movf	postinc1,f,c
  2967  004664  52E6               	movf	postinc1,f,c
  2968  004666  52E6               	movf	postinc1,f,c
  2969  004668  52E6               	movf	postinc1,f,c
  2970                           
  2971                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  2972                           ;stkvar	_sum @ sp[(-4)+2]
  2973                           
  2974                           ;incstack = 0
  2975  00466A  0EFE               	movlw	-2
  2976  00466C  6AE3               	clrf	plusw1,c
  2977  00466E  0EFF               	movlw	-1
  2978  004670  6AE3               	clrf	plusw1,c
  2979                           
  2980                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  2981                           ;stkvar	_i @ sp[(-4)+0]
  2982  004672  0EFC               	movlw	-4
  2983  004674  6AE3               	clrf	plusw1,c
  2984  004676  0EFD               	movlw	-3
  2985  004678  6AE3               	clrf	plusw1,c
  2986  00467A  D039               	goto	l6698
  2987  00467C                     l6694:
  2988                           
  2989                           ;gemsecs.c: 23:   sum += byte_block[i];
  2990                           ;stkvar	_i @ sp[(-4)+0]
  2991  00467C  0EFC               	movlw	-4
  2992  00467E  006F FF8C  F045    	movff	plusw1,btemp+10
  2993  004684  0EFD               	movlw	-3
  2994  004686  006F FF8C  F046    	movff	plusw1,btemp+11
  2995                           
  2996                           ;stkvar	_byte_block @ sp[(-4)+-2]
  2997  00468C  0EFA               	movlw	-6
  2998  00468E  006F FF8C  F043    	movff	plusw1,btemp+8
  2999  004694  0EFB               	movlw	-5
  3000  004696  006F FF8C  F044    	movff	plusw1,btemp+9
  3001  00469C  5045               	movf	btemp+10,w,c
  3002  00469E  2443               	addwf	btemp+8,w,c
  3003  0046A0  6ED9               	movwf	fsr2l,c
  3004  0046A2  5046               	movf	btemp+11,w,c
  3005  0046A4  2044               	addwfc	btemp+9,w,c
  3006  0046A6  6EDA               	movwf	fsr2h,c
  3007  0046A8  50DF               	movf	indf2,w,c
  3008  0046AA  6E46               	movwf	btemp+11,c
  3009                           
  3010                           ;stkvar	_sum @ sp[(-4)+2]
  3011  0046AC  0EFE               	movlw	-2
  3012  0046AE  50E3               	movf	plusw1,w,c
  3013  0046B0  2446               	addwf	btemp+11,w,c
  3014  0046B2  6E3B               	movwf	btemp,c
  3015  0046B4  0EFE               	movlw	-2
  3016  0046B6  0060  F0EF  FFE3   	movff	btemp,plusw1
  3017  0046BC  6A3B               	clrf	btemp,c
  3018  0046BE  0EFF               	movlw	-1
  3019  0046C0  50E3               	movf	plusw1,w,c
  3020  0046C2  223B               	addwfc	btemp,f,c
  3021  0046C4  0EFF               	movlw	-1
  3022  0046C6  0060  F0EF  FFE3   	movff	btemp,plusw1
  3023                           
  3024                           ;gemsecs.c: 24:  }
  3025                           ;stkvar	_i @ sp[(-4)+0]
  3026  0046CC  0EFC               	movlw	-4
  3027  0046CE  50E3               	movf	plusw1,w,c
  3028  0046D0  0F01               	addlw	1
  3029  0046D2  6E3B               	movwf	btemp,c
  3030  0046D4  0EFC               	movlw	-4
  3031  0046D6  0060  F0EF  FFE3   	movff	btemp,plusw1
  3032  0046DC  6A3B               	clrf	btemp,c
  3033  0046DE  0EFD               	movlw	-3
  3034  0046E0  50E3               	movf	plusw1,w,c
  3035  0046E2  203B               	addwfc	btemp,w,c
  3036  0046E4  6E3B               	movwf	btemp,c
  3037  0046E6  0EFD               	movlw	-3
  3038  0046E8  0060  F0EF  FFE3   	movff	btemp,plusw1
  3039  0046EE                     l6698:
  3040                           
  3041                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3042  0046EE  0EF8               	movlw	-8
  3043  0046F0  006F FF8C  F045    	movff	plusw1,btemp+10
  3044  0046F6  0EF9               	movlw	-7
  3045  0046F8  006F FF8C  F046    	movff	plusw1,btemp+11
  3046                           
  3047                           ;stkvar	_i @ sp[(-4)+0]
  3048  0046FE  0EFC               	movlw	-4
  3049  004700  006F FF8C  F043    	movff	plusw1,btemp+8
  3050  004706  0EFD               	movlw	-3
  3051  004708  006F FF8C  F044    	movff	plusw1,btemp+9
  3052  00470E  5045               	movf	btemp+10,w,c
  3053  004710  5C43               	subwf	btemp+8,w,c
  3054  004712  5046               	movf	btemp+11,w,c
  3055  004714  5844               	subwfb	btemp+9,w,c
  3056  004716  A0D8               	btfss	status,0,c
  3057  004718  D7B1               	goto	l6694
  3058                           
  3059                           ;gemsecs.c: 25:  return sum;
  3060                           ;stkvar	_sum @ sp[(-4)+2]
  3061  00471A  0EFE               	movlw	-2
  3062  00471C  006F FF8C  F03B    	movff	plusw1,btemp
  3063  004722  0EFF               	movlw	-1
  3064  004724  006F FF8C  F03C    	movff	plusw1,btemp+1
  3065                           
  3066                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3067  00472A  0EF8               	movlw	248
  3068  00472C  26E1               	addwf	fsr1l,f,c
  3069  00472E  0EFF               	movlw	255
  3070  004730  22E2               	addwfc	fsr1h,f,c
  3071  004732  0012               	return		;funcret
  3072  004734                     __end_of_block_checksum:
  3073                           	opt callstack 0
  3074                           
  3075 ;; *************** function _UART1_put_buffer *****************
  3076 ;; Defined at:
  3077 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  bufData         1  [STACK] unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1  [STACK] void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/39
  3088 ;;		On exit  : 3F/39
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    3
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_t_protocol
  3102 ;;		_secs_send
  3103 ;; This function uses a reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text4
  3107  00543E                     __ptext4:
  3108                           	opt callstack 0
  3109  00543E                     _UART1_put_buffer:
  3110                           	opt callstack 25
  3111                           
  3112                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3113                           
  3114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3115                           ;incstack = 0
  3116  00543E  0139               	movlb	57	; () banked
  3117  005440  9793               	bcf	147,3,b	;volatile
  3118                           
  3119                           ; BSR set to: 57
  3120                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3121                           ;stkvar	_bufData @ sp[(0)+-1]
  3122  005442  0E80               	movlw	low _uart1RxBuffer
  3123  005444  2437               	addwf	_uart1RxHead,w,c	;volatile
  3124  005446  6ED9               	movwf	fsr2l,c
  3125  005448  6ADA               	clrf	fsr2h,c
  3126  00544A  0E02               	movlw	high _uart1RxBuffer
  3127  00544C  22DA               	addwfc	fsr2h,f,c
  3128  00544E  0EFF               	movlw	-1
  3129  005450  006F FF8F FFDF     	movff	plusw1,indf2
  3130                           
  3131                           ; BSR set to: 57
  3132  005456  2A37               	incf	_uart1RxHead,f,c	;volatile
  3133                           
  3134                           ; BSR set to: 57
  3135                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3136  005458  0E3F               	movlw	63
  3137  00545A  6437               	cpfsgt	_uart1RxHead,c
  3138  00545C  D001               	goto	l5080
  3139                           
  3140                           ; BSR set to: 57
  3141                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3142  00545E  6A37               	clrf	_uart1RxHead,c	;volatile
  3143  005460                     l5080:
  3144                           
  3145                           ; BSR set to: 57
  3146                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3147  005460  2A35               	incf	_uart1RxCount,f,c	;volatile
  3148                           
  3149                           ; BSR set to: 57
  3150                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3151  005462  8793               	bsf	147,3,b	;volatile
  3152                           
  3153                           ; BSR set to: 57
  3154                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3155  005464  52E5               	movf	postdec1,f,c
  3156  005466  0012               	return		;funcret
  3157  005468                     __end_of_UART1_put_buffer:
  3158                           	opt callstack 0
  3159                           
  3160 ;; *************** function _UART1_is_tx_ready *****************
  3161 ;; Defined at:
  3162 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1  [STACK] unsigned char 
  3169 ;; Registers used:
  3170 ;;		btemp
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    3
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_secs_send
  3187 ;; This function uses a reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text5
  3191  005A52                     __ptext5:
  3192                           	opt callstack 0
  3193  005A52                     _UART1_is_tx_ready:
  3194                           	opt callstack 25
  3195                           
  3196                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3197                           
  3198                           ; BSR set to: 57
  3199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3200                           ;incstack = 0
  3201  005A52  0060  F0E0  F03B   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3202                           
  3203                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3204  005A58  0012               	return		;funcret
  3205  005A5A                     __end_of_UART1_is_tx_ready:
  3206                           	opt callstack 0
  3207                           
  3208 ;; *************** function _secs_II_message *****************
  3209 ;; Defined at:
  3210 ;;		line 285 in file "gemsecs.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  stream          1  [STACK] unsigned char 
  3213 ;;  function        1  [STACK] unsigned char 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  7  [STACK] struct response_type
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3220 ;; Tracked objects:
  3221 ;;		On entry : 3F/0
  3222 ;;		On exit  : 3F/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    3
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_t_protocol
  3236 ;; This function uses a reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text6
  3240  003D12                     __ptext6:
  3241                           	opt callstack 0
  3242  003D12                     _secs_II_message:
  3243                           	opt callstack 0
  3244                           
  3245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3246  003D12  0E05               	movlw	5
  3247  003D14  26E1               	addwf	fsr1l,f,c
  3248  003D16  0E00               	movlw	0
  3249  003D18  22E2               	addwfc	fsr1h,f,c
  3250                           
  3251                           ;gemsecs.c: 285: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 286: {;gemsecs.c: 287:  static response_type block;;gemsecs.c: 289:  V.abort = LINK_
      +                          ERROR_NONE;
  3252                           
  3253                           ;incstack = 0
  3254  003D1A  0100               	movlb	0	; () banked
  3255  003D1C  6BDF               	clrf	(_V+79)& (0+255),b	;volatile
  3256                           
  3257                           ;gemsecs.c: 290:  V.queue = 0;
  3258  003D1E  99E5               	bcf	(_V+85)& (0+255),4,b	;volatile
  3259                           
  3260                           ;gemsecs.c: 291:  block.respond = 0;
  3261  003D20  9007               	bcf	secs_II_message@block+6,0,c
  3262                           
  3263                           ;gemsecs.c: 293:  switch (stream) {
  3264  003D22  D0EE               	goto	l5472
  3265  003D24                     l5356:
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;gemsecs.c: 297:    block.header = (uint8_t*) & H12[0];
  3269  003D24  0E5F               	movlw	low _H12
  3270  003D26  6E01               	movwf	secs_II_message@block,c
  3271  003D28  0E01               	movlw	high _H12
  3272  003D2A  6E02               	movwf	secs_II_message@block+1,c
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;gemsecs.c: 298:    block.length = sizeof(header12);
  3276  003D2C  0E0F               	movlw	15
  3277  003D2E  6E03               	movwf	secs_II_message@block+2,c
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;gemsecs.c: 299:    H12[0].block.block.systemb = V.systemb;
  3281  003D30  C0D8  F163         	movff	_V+72,_H12+4	;volatile
  3282  003D34  C0D9  F164         	movff	_V+73,_H12+5	;volatile
  3283  003D38  C0DA  F165         	movff	_V+74,_H12+6	;volatile
  3284  003D3C  C0DB  F166         	movff	_V+75,_H12+7	;volatile
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;gemsecs.c: 300:    H10[0].block.block.systemb = V.systemb;
  3288  003D40  C0D8  F102         	movff	_V+72,_H10+2	;volatile
  3289  003D44  C0D9  F103         	movff	_V+73,_H10+3	;volatile
  3290  003D48  C0DA  F104         	movff	_V+74,_H10+4	;volatile
  3291  003D4C  C0DB  F105         	movff	_V+75,_H10+5	;volatile
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;gemsecs.c: 301:    block.respond = 1;
  3295  003D50  8007               	bsf	secs_II_message@block+6,0,c
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;gemsecs.c: 302:    block.reply = (uint8_t*) & H10[0];
  3299  003D52  0E00               	movlw	low _H10
  3300  003D54  6E04               	movwf	secs_II_message@block+3,c
  3301  003D56  0E01               	movlw	high _H10
  3302  003D58  6E05               	movwf	secs_II_message@block+4,c
  3303                           
  3304                           ;gemsecs.c: 303:    block.reply_length = sizeof(header10);
  3305  003D5A  0E0D               	movlw	13
  3306  003D5C  6E06               	movwf	secs_II_message@block+5,c
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;gemsecs.c: 304:    V.queue = 1;
  3310  003D5E  89E5               	bsf	(_V+85)& (0+255),4,b	;volatile
  3311                           
  3312                           ;gemsecs.c: 305:    break;
  3313  003D60  D0E2               	goto	l5474
  3314  003D62                     l5370:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;gemsecs.c: 307:    block.header = (uint8_t*) & H10[0];
  3318  003D62  0E00               	movlw	low _H10
  3319  003D64  6E01               	movwf	secs_II_message@block,c
  3320  003D66  0E01               	movlw	high _H10
  3321  003D68  6E02               	movwf	secs_II_message@block+1,c
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;gemsecs.c: 308:    block.length = sizeof(header10);
  3325  003D6A  0E0D               	movlw	13
  3326  003D6C  6E03               	movwf	secs_II_message@block+2,c
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;gemsecs.c: 309:    H10[0].block.block.systemb = V.systemb;
  3330  003D6E  C0D8  F102         	movff	_V+72,_H10+2	;volatile
  3331  003D72  C0D9  F103         	movff	_V+73,_H10+3	;volatile
  3332  003D76  C0DA  F104         	movff	_V+74,_H10+4	;volatile
  3333  003D7A  C0DB  F105         	movff	_V+75,_H10+5	;volatile
  3334                           
  3335                           ;gemsecs.c: 310:    break;
  3336  003D7E  D0D3               	goto	l5474
  3337  003D80                     l5376:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;gemsecs.c: 312:    block.header = (uint8_t*) & H14[0];
  3341  003D80  0EC1               	movlw	low _H14
  3342  003D82  6E01               	movwf	secs_II_message@block,c
  3343  003D84  0E01               	movlw	high _H14
  3344  003D86  6E02               	movwf	secs_II_message@block+1,c
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;gemsecs.c: 313:    block.length = sizeof(header14);
  3348  003D88  0E11               	movlw	17
  3349  003D8A  6E03               	movwf	secs_II_message@block+2,c
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;gemsecs.c: 314:    H14[0].block.block.systemb = V.systemb;
  3353  003D8C  C0D8  F1C7         	movff	_V+72,_H14+6	;volatile
  3354  003D90  C0D9  F1C8         	movff	_V+73,_H14+7	;volatile
  3355  003D94  C0DA  F1C9         	movff	_V+74,_H14+8	;volatile
  3356  003D98  C0DB  F1CA         	movff	_V+75,_H14+9	;volatile
  3357                           
  3358                           ;gemsecs.c: 315:    break;
  3359  003D9C  D0C4               	goto	l5474
  3360  003D9E                     l5382:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;gemsecs.c: 317:    block.header = (uint8_t*) & H18[0];
  3364  003D9E  0E98               	movlw	low _H18
  3365  003DA0  6E01               	movwf	secs_II_message@block,c
  3366  003DA2  0E01               	movlw	high _H18
  3367  003DA4  6E02               	movwf	secs_II_message@block+1,c
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;gemsecs.c: 318:    block.length = sizeof(header18);
  3371  003DA6  0E15               	movlw	21
  3372  003DA8  6E03               	movwf	secs_II_message@block+2,c
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;gemsecs.c: 319:    H18[0].block.block.systemb = V.systemb;
  3376  003DAA  C0D8  F1A2         	movff	_V+72,_H18+10	;volatile
  3377  003DAE  C0D9  F1A3         	movff	_V+73,_H18+11	;volatile
  3378  003DB2  C0DA  F1A4         	movff	_V+74,_H18+12	;volatile
  3379  003DB6  C0DB  F1A5         	movff	_V+75,_H18+13	;volatile
  3380                           
  3381                           ;gemsecs.c: 320:    break;
  3382  003DBA  D0B5               	goto	l5474
  3383  003DBC                     l5388:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;gemsecs.c: 322:    block.header = (uint8_t*) & H17[0];
  3387  003DBC  0EAD               	movlw	low _H17
  3388  003DBE  6E01               	movwf	secs_II_message@block,c
  3389  003DC0  0E01               	movlw	high _H17
  3390  003DC2  6E02               	movwf	secs_II_message@block+1,c
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;gemsecs.c: 323:    block.length = sizeof(header17);
  3394  003DC4  0E14               	movlw	20
  3395  003DC6  6E03               	movwf	secs_II_message@block+2,c
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;gemsecs.c: 324:    H17[0].block.block.systemb = V.systemb;
  3399  003DC8  C0D8  F1B6         	movff	_V+72,_H17+9	;volatile
  3400  003DCC  C0D9  F1B7         	movff	_V+73,_H17+10	;volatile
  3401  003DD0  C0DA  F1B8         	movff	_V+74,_H17+11	;volatile
  3402  003DD4  C0DB  F1B9         	movff	_V+75,_H17+12	;volatile
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;gemsecs.c: 325:    H12[1].block.block.systemb = V.systemb;
  3406  003DD8  C0D8  F172         	movff	_V+72,_H12+19	;volatile
  3407  003DDC  C0D9  F173         	movff	_V+73,_H12+20	;volatile
  3408  003DE0  C0DA  F174         	movff	_V+74,_H12+21	;volatile
  3409  003DE4  C0DB  F175         	movff	_V+75,_H12+22	;volatile
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;gemsecs.c: 326:    block.respond = 1;
  3413  003DE8  8007               	bsf	secs_II_message@block+6,0,c
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;gemsecs.c: 327:    block.reply = (uint8_t*) & H12[1];
  3417  003DEA  0E6E               	movlw	low (_H12+15)
  3418  003DEC  6E04               	movwf	secs_II_message@block+3,c
  3419  003DEE  0E01               	movlw	high (_H12+15)
  3420  003DF0  6E05               	movwf	secs_II_message@block+4,c
  3421                           
  3422                           ;gemsecs.c: 328:    block.reply_length = sizeof(header12);
  3423  003DF2  0E0F               	movlw	15
  3424  003DF4  D7B3               	goto	L9
  3425  003DF6                     l5402:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;gemsecs.c: 332:    block.header = (uint8_t*) & H27[0];
  3429  003DF6  0E41               	movlw	low _H27
  3430  003DF8  6E01               	movwf	secs_II_message@block,c
  3431  003DFA  0E01               	movlw	high _H27
  3432  003DFC  6E02               	movwf	secs_II_message@block+1,c
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;gemsecs.c: 333:    block.length = sizeof(header27);
  3436  003DFE  0E1E               	movlw	30
  3437  003E00  6E03               	movwf	secs_II_message@block+2,c
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;gemsecs.c: 334:    H27[0].block.block.systemb = V.systemb;
  3441  003E02  C0D8  F154         	movff	_V+72,_H27+19	;volatile
  3442  003E06  C0D9  F155         	movff	_V+73,_H27+20	;volatile
  3443  003E0A  C0DA  F156         	movff	_V+74,_H27+21	;volatile
  3444  003E0E  C0DB  F157         	movff	_V+75,_H27+22	;volatile
  3445                           
  3446                           ;gemsecs.c: 335:    break;
  3447  003E12  D089               	goto	l5474
  3448  003E14                     l5408:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;gemsecs.c: 337:    block.header = (uint8_t*) & H10[2];
  3452  003E14  0E1A               	movlw	low (_H10+26)
  3453  003E16  6E01               	movwf	secs_II_message@block,c
  3454  003E18  0E01               	movlw	high (_H10+26)
  3455  003E1A  6E02               	movwf	secs_II_message@block+1,c
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;gemsecs.c: 338:    block.length = sizeof(header10);
  3459  003E1C  0E0D               	movlw	13
  3460  003E1E  6E03               	movwf	secs_II_message@block+2,c
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;gemsecs.c: 339:    H10[2].block.block.systemb = V.systemb;
  3464  003E20  C0D8  F11C         	movff	_V+72,_H10+28	;volatile
  3465  003E24  C0D9  F11D         	movff	_V+73,_H10+29	;volatile
  3466  003E28  C0DA  F11E         	movff	_V+74,_H10+30	;volatile
  3467  003E2C  C0DB  F11F         	movff	_V+75,_H10+31	;volatile
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;gemsecs.c: 340:    V.abort = LINK_ERROR_ABORT;
  3471  003E30  0E07               	movlw	7
  3472  003E32  6FDF               	movwf	(_V+79)& (0+255),b	;volatile
  3473                           
  3474                           ;gemsecs.c: 341:    break;
  3475  003E34  D078               	goto	l5474
  3476  003E36                     l5418:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;stkvar	_function @ sp[(0)+-7]
  3480  003E36  0EF9               	movlw	-7
  3481  003E38  50E3               	movf	plusw1,w,c
  3482  003E3A  6E45               	movwf	btemp+10,c
  3483  003E3C  6A46               	clrf	btemp+11,c
  3484                           
  3485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3486                           ; Switch size 1, requested type "simple"
  3487                           ; Number of cases is 1, Range of values is 0 to 0
  3488                           ; switch strategies available:
  3489                           ; Name         Instructions Cycles
  3490                           ; simple_byte            4     3 (average)
  3491                           ;	Chosen strategy is simple_byte
  3492  003E3E  5046               	movf	btemp+11,w,c
  3493  003E40  0A00               	xorlw	0	; case 0
  3494  003E42  A4D8               	btfss	status,2,c
  3495  003E44  D7E7               	goto	l5408
  3496                           
  3497                           ; BSR set to: 0
  3498                           ; Switch size 1, requested type "simple"
  3499                           ; Number of cases is 6, Range of values is 1 to 14
  3500                           ; switch strategies available:
  3501                           ; Name         Instructions Cycles
  3502                           ; simple_byte           19    10 (average)
  3503                           ;	Chosen strategy is simple_byte
  3504  003E46  5045               	movf	btemp+10,w,c
  3505  003E48  0A01               	xorlw	1	; case 1
  3506  003E4A  B4D8               	btfsc	status,2,c
  3507  003E4C  D76B               	goto	l5356
  3508  003E4E  0A03               	xorlw	3	; case 2
  3509  003E50  B4D8               	btfsc	status,2,c
  3510  003E52  D787               	goto	l5370
  3511  003E54  0A01               	xorlw	1	; case 3
  3512  003E56  B4D8               	btfsc	status,2,c
  3513  003E58  D793               	goto	l5376
  3514  003E5A  0A07               	xorlw	7	; case 4
  3515  003E5C  B4D8               	btfsc	status,2,c
  3516  003E5E  D79F               	goto	l5382
  3517  003E60  0A09               	xorlw	9	; case 13
  3518  003E62  B4D8               	btfsc	status,2,c
  3519  003E64  D7AB               	goto	l5388
  3520  003E66  0A03               	xorlw	3	; case 14
  3521  003E68  B4D8               	btfsc	status,2,c
  3522  003E6A  D7C5               	goto	l5402
  3523  003E6C  D7D3               	goto	l5408
  3524  003E6E                     l5420:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;gemsecs.c: 347:    block.header = (uint8_t*) & H24[0];
  3528  003E6E  0E7D               	movlw	low _H24
  3529  003E70  6E01               	movwf	secs_II_message@block,c
  3530  003E72  0E01               	movlw	high _H24
  3531  003E74  6E02               	movwf	secs_II_message@block+1,c
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;gemsecs.c: 348:    block.length = sizeof(header24);
  3535  003E76  0E1B               	movlw	27
  3536  003E78  6E03               	movwf	secs_II_message@block+2,c
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;gemsecs.c: 349:    H24[0].block.block.systemb = V.systemb;
  3540  003E7A  C0D8  F18D         	movff	_V+72,_H24+16	;volatile
  3541  003E7E  C0D9  F18E         	movff	_V+73,_H24+17	;volatile
  3542  003E82  C0DA  F18F         	movff	_V+74,_H24+18	;volatile
  3543  003E86  C0DB  F190         	movff	_V+75,_H24+19	;volatile
  3544                           
  3545                           ;gemsecs.c: 350:    break;
  3546  003E8A  D04D               	goto	l5474
  3547  003E8C                     l5436:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;stkvar	_function @ sp[(0)+-7]
  3551  003E8C  0EF9               	movlw	-7
  3552  003E8E  50E3               	movf	plusw1,w,c
  3553  003E90  6E45               	movwf	btemp+10,c
  3554  003E92  6A46               	clrf	btemp+11,c
  3555                           
  3556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3557                           ; Switch size 1, requested type "simple"
  3558                           ; Number of cases is 1, Range of values is 0 to 0
  3559                           ; switch strategies available:
  3560                           ; Name         Instructions Cycles
  3561                           ; simple_byte            4     3 (average)
  3562                           ;	Chosen strategy is simple_byte
  3563  003E94  5046               	movf	btemp+11,w,c
  3564  003E96  0A00               	xorlw	0	; case 0
  3565  003E98  A4D8               	btfss	status,2,c
  3566  003E9A  D7BC               	goto	l5408
  3567                           
  3568                           ; BSR set to: 0
  3569                           ; Switch size 1, requested type "simple"
  3570                           ; Number of cases is 1, Range of values is 17 to 17
  3571                           ; switch strategies available:
  3572                           ; Name         Instructions Cycles
  3573                           ; simple_byte            4     3 (average)
  3574                           ;	Chosen strategy is simple_byte
  3575  003E9C  5045               	movf	btemp+10,w,c
  3576  003E9E  0A11               	xorlw	17	; case 17
  3577  003EA0  B4D8               	btfsc	status,2,c
  3578  003EA2  D7E5               	goto	l5420
  3579  003EA4  D7B7               	goto	l5408
  3580  003EA6                     l5438:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;gemsecs.c: 362:    block.header = (uint8_t*) & H13[0];
  3584  003EA6  0EED               	movlw	low _H13
  3585  003EA8  6E01               	movwf	secs_II_message@block,c
  3586  003EAA  6A02               	clrf	secs_II_message@block+1,c
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;gemsecs.c: 363:    block.length = sizeof(header13);
  3590  003EAC  0E10               	movlw	16
  3591  003EAE  6E03               	movwf	secs_II_message@block+2,c
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;gemsecs.c: 364:    H13[0].block.block.systemb = V.systemb;
  3595  003EB0  C0D8  F0F2         	movff	_V+72,_H13+5	;volatile
  3596  003EB4  C0D9  F0F3         	movff	_V+73,_H13+6	;volatile
  3597  003EB8  C0DA  F0F4         	movff	_V+74,_H13+7	;volatile
  3598  003EBC  C0DB  F0F5         	movff	_V+75,_H13+8	;volatile
  3599                           
  3600                           ;gemsecs.c: 365:    break;
  3601  003EC0  D032               	goto	l5474
  3602  003EC2                     l5444:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;gemsecs.c: 367:    block.header = (uint8_t*) & H53[0];
  3606  003EC2  0E86               	movlw	low _H53
  3607  003EC4  6E01               	movwf	secs_II_message@block,c
  3608  003EC6  0E03               	movlw	high _H53
  3609  003EC8  6E02               	movwf	secs_II_message@block+1,c
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;gemsecs.c: 368:    block.length = sizeof(header53);
  3613  003ECA  0E38               	movlw	56
  3614  003ECC  6E03               	movwf	secs_II_message@block+2,c
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;gemsecs.c: 369:    H53[0].block.block.systemb = V.systemb;
  3618  003ECE  C0D8  F3B3         	movff	_V+72,_H53+45	;volatile
  3619  003ED2  C0D9  F3B4         	movff	_V+73,_H53+46	;volatile
  3620  003ED6  C0DA  F3B5         	movff	_V+74,_H53+47	;volatile
  3621  003EDA  C0DB  F3B6         	movff	_V+75,_H53+48	;volatile
  3622                           
  3623                           ;gemsecs.c: 370:    break;
  3624  003EDE  D023               	goto	l5474
  3625  003EE0                     l5460:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;stkvar	_function @ sp[(0)+-7]
  3629  003EE0  0EF9               	movlw	-7
  3630  003EE2  50E3               	movf	plusw1,w,c
  3631  003EE4  6E45               	movwf	btemp+10,c
  3632  003EE6  6A46               	clrf	btemp+11,c
  3633                           
  3634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3635                           ; Switch size 1, requested type "simple"
  3636                           ; Number of cases is 1, Range of values is 0 to 0
  3637                           ; switch strategies available:
  3638                           ; Name         Instructions Cycles
  3639                           ; simple_byte            4     3 (average)
  3640                           ;	Chosen strategy is simple_byte
  3641  003EE8  5046               	movf	btemp+11,w,c
  3642  003EEA  0A00               	xorlw	0	; case 0
  3643  003EEC  A4D8               	btfss	status,2,c
  3644  003EEE  D792               	goto	l5408
  3645                           
  3646                           ; BSR set to: 0
  3647                           ; Switch size 1, requested type "simple"
  3648                           ; Number of cases is 2, Range of values is 11 to 12
  3649                           ; switch strategies available:
  3650                           ; Name         Instructions Cycles
  3651                           ; simple_byte            7     4 (average)
  3652                           ;	Chosen strategy is simple_byte
  3653  003EF0  5045               	movf	btemp+10,w,c
  3654  003EF2  0A0B               	xorlw	11	; case 11
  3655  003EF4  B4D8               	btfsc	status,2,c
  3656  003EF6  D7D7               	goto	l5438
  3657  003EF8  0A07               	xorlw	7	; case 12
  3658  003EFA  B4D8               	btfsc	status,2,c
  3659  003EFC  D7E2               	goto	l5444
  3660  003EFE  D78A               	goto	l5408
  3661  003F00                     l5472:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;stkvar	_stream @ sp[(0)+-6]
  3665  003F00  0EFA               	movlw	-6
  3666  003F02  50E3               	movf	plusw1,w,c
  3667  003F04  6E45               	movwf	btemp+10,c
  3668  003F06  6A46               	clrf	btemp+11,c
  3669                           
  3670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3671                           ; Switch size 1, requested type "simple"
  3672                           ; Number of cases is 1, Range of values is 0 to 0
  3673                           ; switch strategies available:
  3674                           ; Name         Instructions Cycles
  3675                           ; simple_byte            4     3 (average)
  3676                           ;	Chosen strategy is simple_byte
  3677  003F08  5046               	movf	btemp+11,w,c
  3678  003F0A  0A00               	xorlw	0	; case 0
  3679  003F0C  A4D8               	btfss	status,2,c
  3680  003F0E  D782               	goto	l5408
  3681                           
  3682                           ; BSR set to: 0
  3683                           ; Switch size 1, requested type "simple"
  3684                           ; Number of cases is 3, Range of values is 1 to 6
  3685                           ; switch strategies available:
  3686                           ; Name         Instructions Cycles
  3687                           ; simple_byte           10     6 (average)
  3688                           ;	Chosen strategy is simple_byte
  3689  003F10  5045               	movf	btemp+10,w,c
  3690  003F12  0A01               	xorlw	1	; case 1
  3691  003F14  B4D8               	btfsc	status,2,c
  3692  003F16  D78F               	goto	l5418
  3693  003F18  0A03               	xorlw	3	; case 2
  3694  003F1A  B4D8               	btfsc	status,2,c
  3695  003F1C  D7B7               	goto	l5436
  3696  003F1E  0A04               	xorlw	4	; case 6
  3697  003F20  B4D8               	btfsc	status,2,c
  3698  003F22  D7DE               	goto	l5460
  3699  003F24  D777               	goto	l5408
  3700  003F26                     l5474:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;gemsecs.c: 387:  return(block);
  3704  003F26  EE20  F001         	lfsr	2,secs_II_message@block
  3705                           
  3706                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3707  003F2A  0E07               	movlw	7
  3708  003F2C  6E3B               	movwf	btemp,c
  3709  003F2E  0EF9               	movlw	-7
  3710  003F30                     us279999:
  3711  003F30  006F FF7B FFE3     	movff	postinc2,plusw1
  3712  003F36  28E8               	incf	wreg,w,c
  3713  003F38  2E3B               	decfsz	btemp,f,c
  3714  003F3A  D7FA               	bra	us279999
  3715                           
  3716                           ; BSR set to: 0
  3717                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3718  003F3C  0012               	return		;funcret
  3719  003F3E                     __end_of_secs_II_message:
  3720                           	opt callstack 0
  3721                           
  3722 ;; *************** function _sprintf *****************
  3723 ;; Defined at:
  3724 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  s               1  [STACK] PTR unsigned char 
  3727 ;;		 -> V(86), 
  3728 ;;  fmt             1  [STACK] PTR const unsigned char 
  3729 ;;		 -> STR_11(21), STR_10(17), STR_9(17), STR_8(19), 
  3730 ;;		 -> STR_7(20), STR_6(6), STR_5(14), STR_4(15), 
  3731 ;;		 -> STR_2(12), STR_1(17), 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  f               5  [STACK] struct _IO_FILE
  3734 ;;  ap              2  [STACK] PTR void [1]
  3735 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3736 ;;  ret             2    0        int 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  2  [STACK] int 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 3F/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3750 ;;Total ram usage:        0 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:   11
  3753 ;; This function calls:
  3754 ;;		_vfprintf
  3755 ;; This function is called by:
  3756 ;;		_main
  3757 ;; This function uses a reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text7
  3761  004804                     __ptext7:
  3762                           	opt callstack 0
  3763  004804                     _sprintf:
  3764                           	opt callstack 0
  3765                           
  3766                           ; BSR set to: 0
  3767                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3768  004804  0E07               	movlw	7
  3769  004806  26E1               	addwf	fsr1l,f,c
  3770  004808  0E00               	movlw	0
  3771  00480A  22E2               	addwfc	fsr1h,f,c
  3772                           
  3773                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3774                           
  3775                           ;incstack = 0
  3776  00480C  0EF6               	movlw	246
  3777  00480E  24E1               	addwf	fsr1l,w,c
  3778  004810  6E45               	movwf	btemp+10,c
  3779  004812  0EFF               	movlw	255
  3780  004814  20E2               	addwfc	fsr1h,w,c
  3781  004816  6E46               	movwf	btemp+11,c
  3782                           
  3783                           ;stkvar	_ap @ sp[(-7)+5]
  3784  004818  0EFF               	movlw	-1
  3785  00481A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3786  004820  0EFE               	movlw	-2
  3787  004822  0060  F117  FFE3   	movff	btemp+10,plusw1
  3788                           
  3789                           ;stkvar	_s @ sp[(-7)+-2]
  3790  004828  0EF7               	movlw	-9
  3791  00482A  006F FF8C  F046    	movff	plusw1,btemp+11
  3792                           
  3793                           ;stkvar	_f @ sp[(-7)+0]
  3794  004830  0EF9               	movlw	-7
  3795  004832  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3796                           
  3797                           ;stkvar	_f @ sp[(-7)+0]
  3798  004838  0EFA               	movlw	250
  3799  00483A  24E1               	addwf	fsr1l,w,c
  3800  00483C  6ED9               	movwf	fsr2l,c
  3801  00483E  0EFF               	movlw	255
  3802  004840  20E2               	addwfc	fsr1h,w,c
  3803  004842  6EDA               	movwf	fsr2h,c
  3804  004844  0E00               	movlw	0
  3805  004846  6EDE               	movwf	postinc2,c
  3806  004848  0E00               	movlw	0
  3807  00484A  6EDD               	movwf	postdec2,c
  3808                           
  3809                           ;stkvar	_f @ sp[(-7)+0]
  3810  00484C  0EFC               	movlw	252
  3811  00484E  24E1               	addwf	fsr1l,w,c
  3812  004850  6ED9               	movwf	fsr2l,c
  3813  004852  0EFF               	movlw	255
  3814  004854  20E2               	addwfc	fsr1h,w,c
  3815  004856  6EDA               	movwf	fsr2h,c
  3816  004858  0E00               	movlw	0
  3817  00485A  6EDE               	movwf	postinc2,c
  3818  00485C  0E00               	movlw	0
  3819  00485E  6EDD               	movwf	postdec2,c
  3820                           
  3821                           ;stkvar	_ap @ sp[(-7)+5]
  3822  004860  0EFE               	movlw	254
  3823  004862  24E1               	addwf	fsr1l,w,c
  3824  004864  6E3B               	movwf	btemp,c
  3825  004866  0EFF               	movlw	255
  3826  004868  20E2               	addwfc	fsr1h,w,c
  3827  00486A  6E3C               	movwf	btemp+1,c
  3828  00486C  0060  F0EF  FFE6   	movff	btemp,postinc1
  3829  004872  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  3830                           
  3831                           ;stkvar	_fmt @ sp[(-9)+-3]
  3832  004878  0EF4               	movlw	-12
  3833  00487A  50E3               	movf	plusw1,w,c
  3834  00487C  6EE6               	movwf	postinc1,c
  3835                           
  3836                           ;stkvar	_f @ sp[(-10)+0]
  3837  00487E  0EF6               	movlw	246
  3838  004880  24E1               	addwf	fsr1l,w,c
  3839  004882  6E3B               	movwf	btemp,c
  3840  004884  0EFF               	movlw	255
  3841  004886  20E2               	addwfc	fsr1h,w,c
  3842  004888  6E3C               	movwf	btemp+1,c
  3843  00488A  0060  F0EF  FFE6   	movff	btemp,postinc1
  3844  004890  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  3845  004896  ECAA  F025         	call	_vfprintf	;wreg free
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;stkvar	_f @ sp[(-7)+0]
  3849  00489A  0EFA               	movlw	250
  3850  00489C  24E1               	addwf	fsr1l,w,c
  3851  00489E  6ED9               	movwf	fsr2l,c
  3852  0048A0  0EFF               	movlw	255
  3853  0048A2  20E2               	addwfc	fsr1h,w,c
  3854  0048A4  6EDA               	movwf	fsr2h,c
  3855  0048A6  50DF               	movf	indf2,w,c
  3856  0048A8  6E46               	movwf	btemp+11,c
  3857                           
  3858                           ;stkvar	_s @ sp[(-7)+-2]
  3859  0048AA  0EF7               	movlw	-9
  3860  0048AC  50E3               	movf	plusw1,w,c
  3861  0048AE  2446               	addwf	btemp+11,w,c
  3862  0048B0  6ED9               	movwf	fsr2l,c
  3863  0048B2  6ADA               	clrf	fsr2h,c
  3864  0048B4  0E00               	movlw	0
  3865  0048B6  6EDF               	movwf	indf2,c
  3866                           
  3867                           ; BSR set to: 0
  3868                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3869  0048B8  0EF9               	movlw	249
  3870  0048BA  26E1               	addwf	fsr1l,f,c
  3871  0048BC  0EFF               	movlw	255
  3872  0048BE  22E2               	addwfc	fsr1h,f,c
  3873  0048C0  52E5               	movf	postdec1,f,c
  3874  0048C2  50E7               	movf	indf1,w,c
  3875  0048C4  5EE1               	subwf	fsr1l,f,c
  3876  0048C6  0E00               	movlw	0
  3877  0048C8  5AE2               	subwfb	fsr1h,f,c
  3878  0048CA  0012               	return		;funcret
  3879  0048CC                     __end_of_sprintf:
  3880                           	opt callstack 0
  3881                           
  3882 ;; *************** function _r_protocol *****************
  3883 ;; Defined at:
  3884 ;;		line 42 in file "gemsecs.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  r_link          1  [STACK] PTR enum E16164
  3887 ;;		 -> V(86), 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  rxData          1  [STACK] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1  [STACK] enum E16902
  3892 ;; Registers used:
  3893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    5
  3906 ;; This function calls:
  3907 ;;		_StartTimer
  3908 ;;		_TimerDone
  3909 ;;		_UART1_Read
  3910 ;;		_UART1_Write
  3911 ;;		_UART1_is_rx_ready
  3912 ;;		_WaitMs
  3913 ;;		_run_checksum
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;; This function uses a reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text8
  3920  003020                     __ptext8:
  3921                           	opt callstack 0
  3922  003020                     _r_protocol:
  3923                           	opt callstack 0
  3924                           
  3925                           ; BSR set to: 0
  3926                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3927  003020  52E6               	movf	postinc1,f,c
  3928                           
  3929                           ;gemsecs.c: 42: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0, retry = 3;;gemsecs.c: 
      +                          47:  switch (*r_link) {
  3930                           
  3931                           ;incstack = 0
  3932  003022  D13C               	goto	l5814
  3933  003024                     l5708:
  3934                           
  3935                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  3936  003024  EC2D  F02D         	call	_UART1_is_rx_ready	;wreg free
  3937  003028  503B               	movf	btemp,w,c
  3938  00302A  B4D8               	btfsc	status,2,c
  3939  00302C  D158               	goto	l5816
  3940                           
  3941                           ;gemsecs.c: 50:    rxData = UART1_Read();
  3942  00302E  EC6A  F029         	call	_UART1_Read	;wreg free
  3943                           
  3944                           ;stkvar	_rxData @ sp[(-1)+0]
  3945  003032  0EFF               	movlw	-1
  3946  003034  0060  F0EF  FFE3   	movff	btemp,plusw1
  3947                           
  3948                           ; BSR set to: 57
  3949                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  3950                           ;stkvar	_rxData @ sp[(-1)+0]
  3951  00303A  0EFF               	movlw	-1
  3952  00303C  006F FF8C  F03B    	movff	plusw1,btemp
  3953  003042  0E05               	movlw	5
  3954  003044  183B               	xorwf	btemp,w,c
  3955  003046  A4D8               	btfss	status,2,c
  3956  003048  D14A               	goto	l5816
  3957                           
  3958                           ; BSR set to: 57
  3959                           ;gemsecs.c: 52:     V.error = LINK_ERROR_NONE;
  3960  00304A  0100               	movlb	0	; () banked
  3961  00304C  6BDE               	clrf	(_V+78)& (0+255),b	;volatile
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;gemsecs.c: 53:     *r_link = LINK_STATE_ENQ;
  3965                           ;stkvar	_r_link @ sp[(-1)+-1]
  3966  00304E  0EFE               	movlw	-2
  3967  003050  50E3               	movf	plusw1,w,c
  3968  003052  6ED9               	movwf	fsr2l,c
  3969  003054  6ADA               	clrf	fsr2h,c
  3970  003056  0E01               	movlw	1
  3971  003058  D108               	goto	L14
  3972  00305A                     l1524:
  3973                           
  3974                           ;gemsecs.c: 58:   rxData_l = 0;
  3975  00305A  6A2E               	clrf	r_protocol@rxData_l,c
  3976                           
  3977                           ;gemsecs.c: 59:   UART1_Write(0x04);
  3978  00305C  0E04               	movlw	4
  3979  00305E  6EE6               	movwf	postinc1,c
  3980  003060  EC4B  F029         	call	_UART1_Write	;wreg free
  3981                           
  3982                           ; BSR set to: 57
  3983                           ;gemsecs.c: 60:   StartTimer(TMR_T2, 2000);
  3984  003064  0ED0               	movlw	208
  3985  003066  6EE6               	movwf	postinc1,c
  3986  003068  0E07               	movlw	7
  3987  00306A  6EE6               	movwf	postinc1,c
  3988  00306C  0E02               	movlw	2
  3989  00306E  6EE6               	movwf	postinc1,c
  3990  003070  ECA9  F029         	call	_StartTimer	;wreg free
  3991                           
  3992                           ;gemsecs.c: 61:   *r_link = LINK_STATE_EOT;
  3993                           ;stkvar	_r_link @ sp[(-1)+-1]
  3994  003074  0EFE               	movlw	-2
  3995  003076  50E3               	movf	plusw1,w,c
  3996  003078  6ED9               	movwf	fsr2l,c
  3997  00307A  6ADA               	clrf	fsr2h,c
  3998  00307C  0E02               	movlw	2
  3999  00307E  D0F5               	goto	L14
  4000  003080                     l5724:
  4001                           
  4002                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  4003  003080  0E02               	movlw	2
  4004  003082  6EE6               	movwf	postinc1,c
  4005  003084  ECD9  F02B         	call	_TimerDone	;wreg free
  4006  003088  503B               	movf	btemp,w,c
  4007  00308A  B4D8               	btfsc	status,2,c
  4008  00308C  D017               	goto	l5734
  4009                           
  4010                           ;gemsecs.c: 70:    if (!retry--) {
  4011  00308E  065D               	decf	r_protocol@retry,f,c
  4012  003090  285D               	incf	r_protocol@retry,w,c
  4013  003092  A4D8               	btfss	status,2,c
  4014  003094  D00D               	goto	l5732
  4015                           
  4016                           ;gemsecs.c: 71:     V.error = LINK_ERROR_T2;
  4017  003096  0E02               	movlw	2
  4018  003098  0100               	movlb	0	; () banked
  4019  00309A  6FDE               	movwf	(_V+78)& (0+255),b	;volatile
  4020                           
  4021                           ;gemsecs.c: 72:     V.failed_receive = 1;
  4022  00309C  51E5               	movf	(_V+85)& (0+255),w,b	;volatile
  4023  00309E  0BF0               	andlw	-16
  4024  0030A0  0901               	iorlw	1
  4025  0030A2  6FE5               	movwf	(_V+85)& (0+255),b	;volatile
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;gemsecs.c: 73:     *r_link = LINK_STATE_NAK;
  4029                           ;stkvar	_r_link @ sp[(-1)+-1]
  4030  0030A4  0EFE               	movlw	-2
  4031  0030A6  50E3               	movf	plusw1,w,c
  4032  0030A8  6ED9               	movwf	fsr2l,c
  4033  0030AA  6ADA               	clrf	fsr2h,c
  4034  0030AC  0E05               	movlw	5
  4035  0030AE  D0DD               	goto	L14
  4036  0030B0                     l5732:
  4037                           
  4038                           ;gemsecs.c: 75:     *r_link = LINK_STATE_IDLE;
  4039                           ;stkvar	_r_link @ sp[(-1)+-1]
  4040  0030B0  0EFE               	movlw	-2
  4041  0030B2  50E3               	movf	plusw1,w,c
  4042  0030B4  6ED9               	movwf	fsr2l,c
  4043  0030B6  6ADA               	clrf	fsr2h,c
  4044  0030B8  0E00               	movlw	0
  4045  0030BA  D0D7               	goto	L14
  4046  0030BC                     l5734:
  4047                           
  4048                           ;gemsecs.c: 78:    if (UART1_is_rx_ready()) {
  4049  0030BC  EC2D  F02D         	call	_UART1_is_rx_ready	;wreg free
  4050  0030C0  503B               	movf	btemp,w,c
  4051  0030C2  B4D8               	btfsc	status,2,c
  4052  0030C4  D10C               	goto	l5816
  4053                           
  4054                           ;gemsecs.c: 79:     rxData = UART1_Read();
  4055  0030C6  EC6A  F029         	call	_UART1_Read	;wreg free
  4056                           
  4057                           ;stkvar	_rxData @ sp[(-1)+0]
  4058  0030CA  0EFF               	movlw	-1
  4059  0030CC  0060  F0EF  FFE3   	movff	btemp,plusw1
  4060                           
  4061                           ; BSR set to: 57
  4062                           ;gemsecs.c: 80:     if (rxData_l == 0) {
  4063  0030D2  502E               	movf	r_protocol@rxData_l,w,c
  4064  0030D4  A4D8               	btfss	status,2,c
  4065  0030D6  D00C               	goto	l5746
  4066                           
  4067                           ; BSR set to: 57
  4068                           ;gemsecs.c: 81:      r_block.length = rxData;
  4069                           ;stkvar	_rxData @ sp[(-1)+0]
  4070  0030D8  0EFF               	movlw	-1
  4071  0030DA  006F FF8C  F06C    	movff	plusw1,_r_block+12
  4072                           
  4073                           ; BSR set to: 57
  4074                           ;gemsecs.c: 82:      run_checksum(0, 1);
  4075  0030E0  0E01               	movlw	1
  4076  0030E2  6EE6               	movwf	postinc1,c
  4077  0030E4  0E00               	movlw	0
  4078  0030E6  6EE6               	movwf	postinc1,c
  4079  0030E8  ECC7  F029         	call	_run_checksum	;wreg free
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;gemsecs.c: 83:      rxData_l++;
  4083  0030EC  2A2E               	incf	r_protocol@rxData_l,f,c
  4084                           
  4085                           ;gemsecs.c: 84:     } else {
  4086  0030EE  D0F7               	goto	l5816
  4087  0030F0                     l5746:
  4088                           
  4089                           ; BSR set to: 57
  4090                           ;gemsecs.c: 88:      if (rxData_l <= sizeof(block10))
  4091  0030F0  0E0B               	movlw	11
  4092  0030F2  602E               	cpfslt	r_protocol@rxData_l,c
  4093  0030F4  D00C               	goto	l5750
  4094                           
  4095                           ; BSR set to: 57
  4096                           ;gemsecs.c: 89:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4097                           ;stkvar	_rxData @ sp[(-1)+0]
  4098  0030F6  502E               	movf	r_protocol@rxData_l,w,c
  4099  0030F8  0819               	sublw	low (_H10+25)
  4100  0030FA  6ED9               	movwf	fsr2l,c
  4101  0030FC  0E00               	movlw	0
  4102  0030FE  A0D8               	btfss	status,0,c
  4103  003100  2AE8               	incf	wreg,f,c
  4104  003102  0801               	sublw	high (_H10+25)
  4105  003104  6EDA               	movwf	fsr2h,c
  4106  003106  0EFF               	movlw	-1
  4107  003108  006F FF8F FFDF     	movff	plusw1,indf2
  4108  00310E                     l5750:
  4109                           
  4110                           ; BSR set to: 57
  4111                           ;gemsecs.c: 90:      if (rxData_l <= r_block.length)
  4112  00310E  502E               	movf	r_protocol@rxData_l,w,c
  4113  003110  0100               	movlb	0	; () banked
  4114  003112  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  4115  003114  A0D8               	btfss	status,0,c
  4116  003116  D00D               	goto	l5754
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;gemsecs.c: 91:       V.r_checksum = run_checksum(rxData, 0);
  4120  003118  0E00               	movlw	0
  4121  00311A  6EE6               	movwf	postinc1,c
  4122                           
  4123                           ;stkvar	_rxData @ sp[(-2)+0]
  4124  00311C  0EFE               	movlw	-2
  4125  00311E  50E3               	movf	plusw1,w,c
  4126  003120  6EE6               	movwf	postinc1,c
  4127  003122  ECC7  F029         	call	_run_checksum	;wreg free
  4128  003126  0060  F0EC  F0E0   	movff	btemp,_V+80	;volatile
  4129  00312C  0060  F0F0  F0E1   	movff	btemp+1,_V+81	;volatile
  4130  003132                     l5754:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;gemsecs.c: 93:      if (rxData_l == r_block.length + 1)
  4134  003132  502E               	movf	r_protocol@rxData_l,w,c
  4135  003134  6E45               	movwf	btemp+10,c
  4136  003136  6A46               	clrf	btemp+11,c
  4137  003138  516C               	movf	(_r_block+12)& (0+255),w,b
  4138  00313A  6E43               	movwf	btemp+8,c
  4139  00313C  6A44               	clrf	btemp+9,c
  4140  00313E  0E01               	movlw	1
  4141  003140  2643               	addwf	btemp+8,f,c
  4142  003142  0E00               	movlw	0
  4143  003144  2244               	addwfc	btemp+9,f,c
  4144  003146  5045               	movf	btemp+10,w,c
  4145  003148  1843               	xorwf	btemp+8,w,c
  4146  00314A  E109               	bnz	l5758
  4147  00314C  5046               	movf	btemp+11,w,c
  4148  00314E  1844               	xorwf	btemp+9,w,c
  4149  003150  A4D8               	btfss	status,2,c
  4150  003152  D005               	goto	l5758
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;gemsecs.c: 94:       H10[1].checksum = (uint16_t) rxData << 8;
  4154                           ;stkvar	_rxData @ sp[(-1)+0]
  4155  003154  0EFF               	movlw	-1
  4156  003156  50E3               	movf	plusw1,w,c
  4157  003158  0101               	movlb	1	; () banked
  4158  00315A  6F0E               	movwf	(_H10+14)& (0+255),b
  4159  00315C  6B0D               	clrf	(_H10+13)& (0+255),b
  4160  00315E                     l5758:
  4161                           
  4162                           ;gemsecs.c: 95:      if (rxData_l == r_block.length + 2)
  4163  00315E  502E               	movf	r_protocol@rxData_l,w,c
  4164  003160  6E45               	movwf	btemp+10,c
  4165  003162  6A46               	clrf	btemp+11,c
  4166  003164  0100               	movlb	0	; () banked
  4167  003166  516C               	movf	(_r_block+12)& (0+255),w,b
  4168  003168  6E43               	movwf	btemp+8,c
  4169  00316A  6A44               	clrf	btemp+9,c
  4170  00316C  0E02               	movlw	2
  4171  00316E  2643               	addwf	btemp+8,f,c
  4172  003170  0E00               	movlw	0
  4173  003172  2244               	addwfc	btemp+9,f,c
  4174  003174  5045               	movf	btemp+10,w,c
  4175  003176  1843               	xorwf	btemp+8,w,c
  4176  003178  E10A               	bnz	l5762
  4177  00317A  5046               	movf	btemp+11,w,c
  4178  00317C  1844               	xorwf	btemp+9,w,c
  4179  00317E  A4D8               	btfss	status,2,c
  4180  003180  D006               	goto	l5762
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;gemsecs.c: 96:       H10[1].checksum += rxData;
  4184                           ;stkvar	_rxData @ sp[(-1)+0]
  4185  003182  0EFF               	movlw	-1
  4186  003184  50E3               	movf	plusw1,w,c
  4187  003186  0101               	movlb	1	; () banked
  4188  003188  270D               	addwf	(_H10+13)& (0+255),f,b
  4189  00318A  0E00               	movlw	0
  4190  00318C  230E               	addwfc	(_H10+14)& (0+255),f,b
  4191  00318E                     l5762:
  4192                           
  4193                           ;gemsecs.c: 98:      rxData_l++;
  4194  00318E  2A2E               	incf	r_protocol@rxData_l,f,c
  4195                           
  4196                           ;gemsecs.c: 99:      if (rxData_l > (r_block.length + 2)) {
  4197  003190  502E               	movf	r_protocol@rxData_l,w,c
  4198  003192  6E45               	movwf	btemp+10,c
  4199  003194  6A46               	clrf	btemp+11,c
  4200  003196  0100               	movlb	0	; () banked
  4201  003198  516C               	movf	(_r_block+12)& (0+255),w,b
  4202  00319A  6E43               	movwf	btemp+8,c
  4203  00319C  6A44               	clrf	btemp+9,c
  4204  00319E  0E02               	movlw	2
  4205  0031A0  2643               	addwf	btemp+8,f,c
  4206  0031A2  0E00               	movlw	0
  4207  0031A4  2244               	addwfc	btemp+9,f,c
  4208  0031A6  5045               	movf	btemp+10,w,c
  4209  0031A8  5C43               	subwf	btemp+8,w,c
  4210  0031AA  5044               	movf	btemp+9,w,c
  4211  0031AC  0A80               	xorlw	128
  4212  0031AE  6E3B               	movwf	btemp,c
  4213  0031B0  5046               	movf	btemp+11,w,c
  4214  0031B2  0A80               	xorlw	128
  4215  0031B4  583B               	subwfb	btemp,w,c
  4216  0031B6  B0D8               	btfsc	status,0,c
  4217  0031B8  D092               	goto	l5816
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;gemsecs.c: 100:       if (V.r_checksum == H10[1].checksum) {
  4221  0031BA  0101               	movlb	1	; () banked
  4222  0031BC  510D               	movf	(_H10+13)& (0+255),w,b
  4223  0031BE  0100               	movlb	0	; () banked
  4224  0031C0  19E0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  4225  0031C2  E10E               	bnz	l5772
  4226  0031C4  0101               	movlb	1	; () banked
  4227  0031C6  510E               	movf	(_H10+14)& (0+255),w,b
  4228  0031C8  0100               	movlb	0	; () banked
  4229  0031CA  19E1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  4230  0031CC  A4D8               	btfss	status,2,c
  4231  0031CE  D008               	goto	l5772
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;gemsecs.c: 101:        *r_link = LINK_STATE_ACK;
  4235                           ;stkvar	_r_link @ sp[(-1)+-1]
  4236  0031D0  0EFE               	movlw	-2
  4237  0031D2  50E3               	movf	plusw1,w,c
  4238  0031D4  6ED9               	movwf	fsr2l,c
  4239  0031D6  6ADA               	clrf	fsr2h,c
  4240  0031D8  0E03               	movlw	3
  4241  0031DA  D047               	goto	L14
  4242  0031DC                     l5770:
  4243  0031DC  EC6A  F029         	call	_UART1_Read	;wreg free
  4244  0031E0                     l5772:
  4245                           
  4246                           ;gemsecs.c: 103:        while (UART1_is_rx_ready())
  4247  0031E0  EC2D  F02D         	call	_UART1_is_rx_ready	;wreg free
  4248  0031E4  503B               	movf	btemp,w,c
  4249  0031E6  A4D8               	btfss	status,2,c
  4250  0031E8  D7F9               	goto	l5770
  4251                           
  4252                           ;gemsecs.c: 105:        WaitMs(500);
  4253  0031EA  0EF4               	movlw	244
  4254  0031EC  6EE6               	movwf	postinc1,c
  4255  0031EE  0E01               	movlw	1
  4256  0031F0  6EE6               	movwf	postinc1,c
  4257  0031F2  EC34  F02A         	call	_WaitMs	;wreg free
  4258                           
  4259                           ;gemsecs.c: 106:        V.error = LINK_ERROR_CHECKSUM;
  4260  0031F6  0E05               	movlw	5
  4261  0031F8  0100               	movlb	0	; () banked
  4262  0031FA  6FDE               	movwf	(_V+78)& (0+255),b	;volatile
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;gemsecs.c: 107:        V.failed_receive = 2;
  4266  0031FC  51E5               	movf	(_V+85)& (0+255),w,b	;volatile
  4267  0031FE  0BF0               	andlw	-16
  4268  003200  0902               	iorlw	2
  4269  003202  D74F               	goto	L15
  4270  003204                     l5782:
  4271                           
  4272                           ;gemsecs.c: 116:   V.stream = H10[1].block.block.stream;
  4273  003204  0101               	movlb	1	; () banked
  4274  003206  5116               	movf	(_H10+22)& (0+255),w,b
  4275  003208  0B7F               	andlw	127
  4276  00320A  0100               	movlb	0	; () banked
  4277  00320C  6FDC               	movwf	(_V+76)& (0+255),b	;volatile
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;gemsecs.c: 117:   V.function = H10[1].block.block.function;
  4281  00320E  C115  F0DD         	movff	_H10+21,_V+77	;volatile
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;gemsecs.c: 118:   V.systemb = H10[1].block.block.systemb;
  4285  003212  C10F  F0D8         	movff	_H10+15,_V+72	;volatile
  4286  003216  C110  F0D9         	movff	_H10+16,_V+73	;volatile
  4287  00321A  C111  F0DA         	movff	_H10+17,_V+74	;volatile
  4288  00321E  C112  F0DB         	movff	_H10+18,_V+75	;volatile
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;gemsecs.c: 119:   V.rbit = H10[1].block.block.rbit;
  4292  003222  0101               	movlb	1	; () banked
  4293  003224  AF18               	btfss	(_H10+24)& (0+255),7,b
  4294  003226  D003               	bra	u3055
  4295  003228  0100               	movlb	0	; () banked
  4296  00322A  81E4               	bsf	(_V+84)& (0+255),0,b	;volatile
  4297  00322C  D002               	bra	u3057
  4298  00322E                     u3055:
  4299  00322E  0100               	movlb	0	; () banked
  4300  003230  91E4               	bcf	(_V+84)& (0+255),0,b	;volatile
  4301  003232                     u3057:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;gemsecs.c: 120:   V.wbit = H10[1].block.block.wbit;
  4305  003232  0101               	movlb	1	; () banked
  4306  003234  AF16               	btfss	(_H10+22)& (0+255),7,b
  4307  003236  D003               	bra	u3065
  4308  003238  0100               	movlb	0	; () banked
  4309  00323A  83E4               	bsf	(_V+84)& (0+255),1,b	;volatile
  4310  00323C  D002               	bra	u3067
  4311  00323E                     u3065:
  4312  00323E  0100               	movlb	0	; () banked
  4313  003240  93E4               	bcf	(_V+84)& (0+255),1,b	;volatile
  4314  003242                     u3067:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;gemsecs.c: 121:   V.ebit = H10[1].block.block.ebit;
  4318  003242  0101               	movlb	1	; () banked
  4319  003244  AF14               	btfss	(_H10+20)& (0+255),7,b
  4320  003246  D003               	bra	u3075
  4321  003248  0100               	movlb	0	; () banked
  4322  00324A  85E4               	bsf	(_V+84)& (0+255),2,b	;volatile
  4323  00324C  D002               	bra	u3077
  4324  00324E                     u3075:
  4325  00324E  0100               	movlb	0	; () banked
  4326  003250  95E4               	bcf	(_V+84)& (0+255),2,b	;volatile
  4327  003252                     u3077:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;gemsecs.c: 122:   UART1_Write(0x06);
  4331  003252  0E06               	movlw	6
  4332  003254  6EE6               	movwf	postinc1,c
  4333  003256  EC4B  F029         	call	_UART1_Write	;wreg free
  4334                           
  4335                           ; BSR set to: 57
  4336                           ;gemsecs.c: 123:   V.failed_receive = 0;
  4337  00325A  0EF0               	movlw	-16
  4338  00325C  0100               	movlb	0	; () banked
  4339  00325E  17E5               	andwf	(_V+85)& (0+255),f,b	;volatile
  4340                           
  4341                           ;gemsecs.c: 124:   *r_link = LINK_STATE_DONE;
  4342                           ;stkvar	_r_link @ sp[(-1)+-1]
  4343  003260  0EFE               	movlw	-2
  4344  003262  50E3               	movf	plusw1,w,c
  4345  003264  6ED9               	movwf	fsr2l,c
  4346  003266  6ADA               	clrf	fsr2h,c
  4347  003268  0E04               	movlw	4
  4348  00326A                     L14:
  4349  00326A  6EDF               	movwf	indf2,c
  4350                           
  4351                           ;gemsecs.c: 125:   break;
  4352  00326C  D038               	goto	l5816
  4353  00326E                     l5798:
  4354                           
  4355                           ;gemsecs.c: 127:   UART1_Write(0x15);
  4356  00326E  0E15               	movlw	21
  4357  003270  6EE6               	movwf	postinc1,c
  4358  003272  EC4B  F029         	call	_UART1_Write	;wreg free
  4359                           
  4360                           ; BSR set to: 57
  4361                           ;gemsecs.c: 128:   *r_link = LINK_STATE_ERROR;
  4362                           ;stkvar	_r_link @ sp[(-1)+-1]
  4363  003276  0EFE               	movlw	-2
  4364  003278  50E3               	movf	plusw1,w,c
  4365  00327A  6ED9               	movwf	fsr2l,c
  4366  00327C  6ADA               	clrf	fsr2h,c
  4367  00327E  0E06               	movlw	6
  4368  003280  6EDF               	movwf	indf2,c
  4369                           
  4370                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  4371  003282  D002               	goto	l5804
  4372  003284                     l5802:
  4373                           
  4374                           ; BSR set to: 57
  4375                           ;gemsecs.c: 130:    UART1_Read();
  4376  003284  EC6A  F029         	call	_UART1_Read	;wreg free
  4377  003288                     l5804:
  4378                           
  4379                           ; BSR set to: 57
  4380                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  4381  003288  5035               	movf	_uart1RxCount,w,c	;volatile
  4382  00328A  A4D8               	btfss	status,2,c
  4383  00328C  D7FB               	goto	l5802
  4384                           
  4385                           ; BSR set to: 57
  4386                           ;gemsecs.c: 132:   retry = 3;
  4387  00328E  0E03               	movlw	3
  4388  003290  6E5D               	movwf	r_protocol@retry,c
  4389                           
  4390                           ;gemsecs.c: 133:   break;
  4391  003292  D025               	goto	l5816
  4392  003294                     l5808:
  4393                           
  4394                           ;gemsecs.c: 137:   V.failed_receive = 0;
  4395  003294  0EF0               	movlw	-16
  4396  003296  0100               	movlb	0	; () banked
  4397  003298  17E5               	andwf	(_V+85)& (0+255),f,b	;volatile
  4398  00329A  D70A               	goto	l5732
  4399  00329C                     l5814:
  4400                           
  4401                           ;stkvar	_r_link @ sp[(-1)+-1]
  4402  00329C  0EFE               	movlw	-2
  4403  00329E  50E3               	movf	plusw1,w,c
  4404  0032A0  6ED9               	movwf	fsr2l,c
  4405  0032A2  6ADA               	clrf	fsr2h,c
  4406  0032A4  50DF               	movf	indf2,w,c
  4407  0032A6  6E45               	movwf	btemp+10,c
  4408  0032A8  6A46               	clrf	btemp+11,c
  4409                           
  4410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4411                           ; Switch size 1, requested type "simple"
  4412                           ; Number of cases is 1, Range of values is 0 to 0
  4413                           ; switch strategies available:
  4414                           ; Name         Instructions Cycles
  4415                           ; simple_byte            4     3 (average)
  4416                           ;	Chosen strategy is simple_byte
  4417  0032AA  5046               	movf	btemp+11,w,c
  4418  0032AC  0A00               	xorlw	0	; case 0
  4419  0032AE  A4D8               	btfss	status,2,c
  4420  0032B0  D6FF               	goto	l5732
  4421                           
  4422                           ; Switch size 1, requested type "simple"
  4423                           ; Number of cases is 7, Range of values is 0 to 6
  4424                           ; switch strategies available:
  4425                           ; Name         Instructions Cycles
  4426                           ; simple_byte           22    12 (average)
  4427                           ;	Chosen strategy is simple_byte
  4428  0032B2  5045               	movf	btemp+10,w,c
  4429  0032B4  0A00               	xorlw	0	; case 0
  4430  0032B6  B4D8               	btfsc	status,2,c
  4431  0032B8  D6B5               	goto	l5708
  4432  0032BA  0A01               	xorlw	1	; case 1
  4433  0032BC  B4D8               	btfsc	status,2,c
  4434  0032BE  D6CD               	goto	l1524
  4435  0032C0  0A03               	xorlw	3	; case 2
  4436  0032C2  B4D8               	btfsc	status,2,c
  4437  0032C4  D6DD               	goto	l5724
  4438  0032C6  0A01               	xorlw	1	; case 3
  4439  0032C8  B4D8               	btfsc	status,2,c
  4440  0032CA  D79C               	goto	l5782
  4441  0032CC  0A07               	xorlw	7	; case 4
  4442  0032CE  B4D8               	btfsc	status,2,c
  4443  0032D0  D7E1               	goto	l5808
  4444  0032D2  0A01               	xorlw	1	; case 5
  4445  0032D4  B4D8               	btfsc	status,2,c
  4446  0032D6  D7CB               	goto	l5798
  4447  0032D8  0A03               	xorlw	3	; case 6
  4448  0032DA  A4D8               	btfss	status,2,c
  4449  0032DC  D6E9               	goto	l5732
  4450  0032DE                     l5816:
  4451                           
  4452                           ;gemsecs.c: 143:  return *r_link;
  4453                           ;stkvar	_r_link @ sp[(-1)+-1]
  4454  0032DE  0EFE               	movlw	-2
  4455  0032E0  50E3               	movf	plusw1,w,c
  4456  0032E2  6ED9               	movwf	fsr2l,c
  4457  0032E4  6ADA               	clrf	fsr2h,c
  4458  0032E6  50DF               	movf	indf2,w,c
  4459  0032E8  6E3B               	movwf	btemp,c
  4460                           
  4461                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4462  0032EA  52E5               	movf	postdec1,f,c
  4463  0032EC  52E5               	movf	postdec1,f,c
  4464  0032EE  0012               	return		;funcret
  4465  0032F0                     __end_of_r_protocol:
  4466                           	opt callstack 0
  4467                           
  4468 ;; *************** function _run_checksum *****************
  4469 ;; Defined at:
  4470 ;;		line 31 in file "gemsecs.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  byte_block      1  [STACK] unsigned char 
  4473 ;;  clear           1  [STACK] _Bool 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  2  [STACK] unsigned short 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4480 ;; Tracked objects:
  4481 ;;		On entry : 6/39
  4482 ;;		On exit  : 3F/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    3
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_r_protocol
  4496 ;; This function uses a reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text9
  4500  00538E                     __ptext9:
  4501                           	opt callstack 0
  4502  00538E                     _run_checksum:
  4503                           	opt callstack 26
  4504                           
  4505                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  4506                           ;stkvar	_clear @ sp[(0)+-2]
  4507                           
  4508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4509                           ;incstack = 0
  4510  00538E  0EFE               	movlw	-2
  4511  005390  50E3               	movf	plusw1,w,c
  4512  005392  B4D8               	btfsc	status,2,c
  4513  005394  D003               	goto	l5348
  4514                           
  4515                           ;gemsecs.c: 36:   sum = 0;
  4516  005396  0100               	movlb	0	; () banked
  4517  005398  6B8E               	clrf	run_checksum@sum& (0+255),b
  4518  00539A  6B8F               	clrf	(run_checksum@sum+1)& (0+255),b
  4519  00539C                     l5348:
  4520                           
  4521                           ;gemsecs.c: 38:  sum += byte_block;
  4522                           ;stkvar	_byte_block @ sp[(0)+-1]
  4523  00539C  0EFF               	movlw	-1
  4524  00539E  50E3               	movf	plusw1,w,c
  4525  0053A0  0100               	movlb	0	; () banked
  4526  0053A2  278E               	addwf	run_checksum@sum& (0+255),f,b
  4527  0053A4  0E00               	movlw	0
  4528  0053A6  238F               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;gemsecs.c: 39:  return sum;
  4532  0053A8  0060  F238  F03B   	movff	run_checksum@sum,btemp
  4533  0053AE  0060  F23C  F03C   	movff	run_checksum@sum+1,btemp+1
  4534                           
  4535                           ; BSR set to: 0
  4536                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4537  0053B4  52E5               	movf	postdec1,f,c
  4538  0053B6  52E5               	movf	postdec1,f,c
  4539  0053B8  0012               	return		;funcret
  4540  0053BA                     __end_of_run_checksum:
  4541                           	opt callstack 0
  4542                           
  4543 ;; *************** function _WaitMs *****************
  4544 ;; Defined at:
  4545 ;;		line 31 in file "timers.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  numMilliseco    2  [STACK] unsigned short 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1  [STACK] void 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/3B
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    4
  4566 ;; This function calls:
  4567 ;;		_StartTimer
  4568 ;;		_TimerDone
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;;		_r_protocol
  4572 ;; This function uses a reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text10
  4576  005468                     __ptext10:
  4577                           	opt callstack 0
  4578  005468                     _WaitMs:
  4579                           	opt callstack 25
  4580                           
  4581                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4582                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4583                           
  4584                           ; BSR set to: 0
  4585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4586                           ;incstack = 0
  4587  005468  0EFE               	movlw	-2
  4588  00546A  006F FF8F FFE6     	movff	plusw1,postinc1
  4589  005470  006F FF8F FFE6     	movff	plusw1,postinc1
  4590  005476  0E00               	movlw	0
  4591  005478  6EE6               	movwf	postinc1,c
  4592  00547A  ECA9  F029         	call	_StartTimer	;wreg free
  4593  00547E                     l5286:
  4594                           
  4595                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4596  00547E  0E00               	movlw	0
  4597  005480  6EE6               	movwf	postinc1,c
  4598  005482  ECD9  F02B         	call	_TimerDone	;wreg free
  4599  005486  503B               	movf	btemp,w,c
  4600  005488  B4D8               	btfsc	status,2,c
  4601  00548A  D7F9               	goto	l5286
  4602                           
  4603                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4604  00548C  52E5               	movf	postdec1,f,c
  4605  00548E  52E5               	movf	postdec1,f,c
  4606  005490  0012               	return		;funcret
  4607  005492                     __end_of_WaitMs:
  4608                           	opt callstack 0
  4609                           
  4610 ;; *************** function _TimerDone *****************
  4611 ;; Defined at:
  4612 ;;		line 20 in file "timers.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  timer           1  [STACK] unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1  [STACK] _Bool 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    3
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_r_protocol
  4637 ;;		_t_protocol
  4638 ;;		_WaitMs
  4639 ;; This function uses a reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text11
  4643  0057B2                     __ptext11:
  4644                           	opt callstack 0
  4645  0057B2                     _TimerDone:
  4646                           	opt callstack 26
  4647                           
  4648                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4649                           ;stkvar	_timer @ sp[(0)+-1]
  4650                           
  4651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4652                           ;incstack = 0
  4653  0057B2  0EFF               	movlw	-1
  4654  0057B4  50E3               	movf	plusw1,w,c
  4655  0057B6  0D02               	mullw	2
  4656  0057B8  50F3               	movf	prodl,w,c
  4657  0057BA  0F79               	addlw	low _tickCount
  4658  0057BC  6ED9               	movwf	fsr2l,c
  4659  0057BE  6ADA               	clrf	fsr2h,c
  4660  0057C0  50DE               	movf	postinc2,w,c
  4661  0057C2  10DE               	iorwf	postinc2,w,c
  4662  0057C4  A4D8               	btfss	status,2,c
  4663  0057C6  D002               	goto	l5132
  4664                           
  4665                           ;timers.c: 23:   return 1;
  4666  0057C8  0E01               	movlw	1
  4667  0057CA  D001               	goto	L16
  4668  0057CC                     l5132:
  4669                           
  4670                           ;timers.c: 25:  return 0;
  4671  0057CC  0E00               	movlw	0
  4672  0057CE                     L16:
  4673  0057CE  6E3B               	movwf	btemp,c
  4674                           
  4675                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4676  0057D0  52E5               	movf	postdec1,f,c
  4677  0057D2  0012               	return		;funcret
  4678  0057D4                     __end_of_TimerDone:
  4679                           	opt callstack 0
  4680                           
  4681 ;; *************** function _StartTimer *****************
  4682 ;; Defined at:
  4683 ;;		line 12 in file "timers.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  timer           1  [STACK] unsigned char 
  4686 ;;  count           2  [STACK] unsigned short 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1  [STACK] void 
  4691 ;; Registers used:
  4692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/39
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    3
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_r_protocol
  4709 ;;		_t_protocol
  4710 ;;		_WaitMs
  4711 ;; This function uses a reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text12
  4715  005352                     __ptext12:
  4716                           	opt callstack 0
  4717  005352                     _StartTimer:
  4718                           	opt callstack 26
  4719                           
  4720                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4721                           ;stkvar	_count @ sp[(0)+-3]
  4722                           
  4723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4724                           ;incstack = 0
  4725  005352  0EFD               	movlw	-3
  4726  005354  006F FF8C  F045    	movff	plusw1,btemp+10
  4727  00535A  0EFE               	movlw	-2
  4728  00535C  006F FF8C  F046    	movff	plusw1,btemp+11
  4729  005362  90D8               	bcf	status,0,c
  4730  005364  3445               	rlcf	btemp+10,w,c
  4731  005366  6E43               	movwf	btemp+8,c
  4732  005368  3446               	rlcf	btemp+11,w,c
  4733  00536A  6E44               	movwf	btemp+9,c
  4734                           
  4735                           ;stkvar	_timer @ sp[(0)+-1]
  4736  00536C  0EFF               	movlw	-1
  4737  00536E  50E3               	movf	plusw1,w,c
  4738  005370  0D02               	mullw	2
  4739  005372  50F3               	movf	prodl,w,c
  4740  005374  0F79               	addlw	low _tickCount
  4741  005376  6ED9               	movwf	fsr2l,c
  4742  005378  6ADA               	clrf	fsr2h,c
  4743  00537A  0060  F10F  FFDE   	movff	btemp+8,postinc2
  4744  005380  0060  F113  FFDD   	movff	btemp+9,postdec2
  4745                           
  4746                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4747  005386  52E5               	movf	postdec1,f,c
  4748  005388  52E5               	movf	postdec1,f,c
  4749  00538A  52E5               	movf	postdec1,f,c
  4750  00538C  0012               	return		;funcret
  4751  00538E                     __end_of_StartTimer:
  4752                           	opt callstack 0
  4753                           
  4754 ;; *************** function _UART1_is_rx_ready *****************
  4755 ;; Defined at:
  4756 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1  [STACK] unsigned char 
  4763 ;; Registers used:
  4764 ;;		btemp
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4774 ;;Total ram usage:        0 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    3
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_r_protocol
  4781 ;;		_t_protocol
  4782 ;; This function uses a reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text13
  4786  005A5A                     __ptext13:
  4787                           	opt callstack 0
  4788  005A5A                     _UART1_is_rx_ready:
  4789                           	opt callstack 26
  4790                           
  4791                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4792                           
  4793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4794                           ;incstack = 0
  4795  005A5A  0060  F0D4  F03B   	movff	_uart1RxCount,btemp	;volatile
  4796                           
  4797                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4798  005A60  0012               	return		;funcret
  4799  005A62                     __end_of_UART1_is_rx_ready:
  4800                           	opt callstack 0
  4801                           
  4802 ;; *************** function _UART1_Write *****************
  4803 ;; Defined at:
  4804 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  txData          1  [STACK] unsigned char 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1  [STACK] void 
  4811 ;; Registers used:
  4812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 3F/39
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    3
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_r_protocol
  4829 ;;		_t_protocol
  4830 ;;		_secs_send
  4831 ;; This function uses a reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text14
  4835  005296                     __ptext14:
  4836                           	opt callstack 0
  4837  005296                     _UART1_Write:
  4838                           	opt callstack 25
  4839                           
  4840                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4841                           
  4842                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4843                           
  4844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4845                           ;incstack = 0
  4846  005296  5038               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4847  005298  B4D8               	btfsc	status,2,c
  4848  00529A  D7FD               	goto	_UART1_Write
  4849                           
  4850                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4851  00529C  0139               	movlb	57	; () banked
  4852  00529E  B993               	btfsc	147,4,b	;volatile
  4853  0052A0  D005               	goto	l579
  4854                           
  4855                           ; BSR set to: 57
  4856                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4857                           ;stkvar	_txData @ sp[(0)+-1]
  4858  0052A2  0EFF               	movlw	-1
  4859  0052A4  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4860                           
  4861                           ;mcc_generated_files/uart1.c: 186:  } else {
  4862  0052AA  D011               	goto	l5068
  4863  0052AC                     l579:
  4864                           
  4865                           ; BSR set to: 57
  4866                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4867  0052AC  9993               	bcf	147,4,b	;volatile
  4868                           
  4869                           ; BSR set to: 57
  4870                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4871                           ;stkvar	_txData @ sp[(0)+-1]
  4872  0052AE  0EC0               	movlw	low _uart1TxBuffer
  4873  0052B0  243A               	addwf	_uart1TxHead,w,c	;volatile
  4874  0052B2  6ED9               	movwf	fsr2l,c
  4875  0052B4  6ADA               	clrf	fsr2h,c
  4876  0052B6  0E02               	movlw	high _uart1TxBuffer
  4877  0052B8  22DA               	addwfc	fsr2h,f,c
  4878  0052BA  0EFF               	movlw	-1
  4879  0052BC  006F FF8F FFDF     	movff	plusw1,indf2
  4880                           
  4881                           ; BSR set to: 57
  4882  0052C2  2A3A               	incf	_uart1TxHead,f,c	;volatile
  4883                           
  4884                           ; BSR set to: 57
  4885                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4886  0052C4  0E3F               	movlw	63
  4887  0052C6  643A               	cpfsgt	_uart1TxHead,c
  4888  0052C8  D001               	goto	l5066
  4889                           
  4890                           ; BSR set to: 57
  4891                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4892  0052CA  6A3A               	clrf	_uart1TxHead,c	;volatile
  4893  0052CC                     l5066:
  4894                           
  4895                           ; BSR set to: 57
  4896                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4897  0052CC  0638               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4898  0052CE                     l5068:
  4899                           
  4900                           ; BSR set to: 57
  4901                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4902  0052CE  8993               	bsf	147,4,b	;volatile
  4903                           
  4904                           ; BSR set to: 57
  4905                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4906  0052D0  52E5               	movf	postdec1,f,c
  4907  0052D2  0012               	return		;funcret
  4908  0052D4                     __end_of_UART1_Write:
  4909                           	opt callstack 0
  4910                           
  4911 ;; *************** function _UART1_Read *****************
  4912 ;; Defined at:
  4913 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  readValue       1  [STACK] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1  [STACK] unsigned char 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 3F/39
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    3
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_r_protocol
  4938 ;;		_t_protocol
  4939 ;; This function uses a reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text15
  4943  0052D4                     __ptext15:
  4944                           	opt callstack 0
  4945  0052D4                     _UART1_Read:
  4946                           	opt callstack 0
  4947                           
  4948                           ; BSR set to: 57
  4949                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4950  0052D4  52E6               	movf	postinc1,f,c
  4951  0052D6                     
  4952                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4953                           
  4954                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4955  0052D6  5035               	movf	_uart1RxCount,w,c	;volatile
  4956  0052D8  B4D8               	btfsc	status,2,c
  4957  0052DA  D7FD               	goto	l5250
  4958                           
  4959                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4960  0052DC  0E80               	movlw	low _uart1RxBuffer
  4961  0052DE  2436               	addwf	_uart1RxTail,w,c	;volatile
  4962  0052E0  6ED9               	movwf	fsr2l,c
  4963  0052E2  6ADA               	clrf	fsr2h,c
  4964  0052E4  0E02               	movlw	high _uart1RxBuffer
  4965  0052E6  22DA               	addwfc	fsr2h,f,c
  4966  0052E8  50DF               	movf	indf2,w,c
  4967  0052EA  6E46               	movwf	btemp+11,c
  4968                           
  4969                           ;stkvar	_readValue @ sp[(-1)+0]
  4970  0052EC  0EFF               	movlw	-1
  4971  0052EE  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4972  0052F4  2A36               	incf	_uart1RxTail,f,c	;volatile
  4973                           
  4974                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4975  0052F6  0E3F               	movlw	63
  4976  0052F8  6436               	cpfsgt	_uart1RxTail,c
  4977  0052FA  D001               	goto	l572
  4978                           
  4979                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4980  0052FC  6A36               	clrf	_uart1RxTail,c	;volatile
  4981  0052FE                     l572:
  4982                           
  4983                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4984  0052FE  0139               	movlb	57	; () banked
  4985  005300  9793               	bcf	147,3,b	;volatile
  4986                           
  4987                           ; BSR set to: 57
  4988                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4989  005302  0635               	decf	_uart1RxCount,f,c	;volatile
  4990                           
  4991                           ; BSR set to: 57
  4992                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4993  005304  8793               	bsf	147,3,b	;volatile
  4994                           
  4995                           ; BSR set to: 57
  4996                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4997                           ;stkvar	_readValue @ sp[(-1)+0]
  4998  005306  0EFF               	movlw	-1
  4999  005308  006F FF8C  F03B    	movff	plusw1,btemp
  5000                           
  5001                           ; BSR set to: 57
  5002                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5003  00530E  52E5               	movf	postdec1,f,c
  5004  005310  0012               	return		;funcret
  5005  005312                     __end_of_UART1_Read:
  5006                           	opt callstack 0
  5007                           
  5008 ;; *************** function _init_display *****************
  5009 ;; Defined at:
  5010 ;;		line 35 in file "eadog.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1  [STACK] void 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 3F/3D
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    5
  5031 ;; This function calls:
  5032 ;;		_ringBufS_init
  5033 ;;		_send_lcd_cmd
  5034 ;;		_send_lcd_cmd_long
  5035 ;;		_wdtdelay
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;; This function uses a reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text16
  5042  0044A6                     __ptext16:
  5043                           	opt callstack 0
  5044  0044A6                     _init_display:
  5045                           	opt callstack 25
  5046                           
  5047                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  5048                           
  5049                           ; BSR set to: 57
  5050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5051                           ;incstack = 0
  5052  0044A6  0E43               	movlw	low _ring_buf1
  5053  0044A8  0100               	movlb	0	; () banked
  5054  0044AA  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5055  0044AC  0E03               	movlw	high _ring_buf1
  5056  0044AE  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5057                           
  5058                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  5059  0044B0  0E00               	movlw	low _ring_buf2
  5060  0044B2  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5061  0044B4  0E03               	movlw	high _ring_buf2
  5062  0044B6  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  5066  0044B8  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5067  0044BE  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5068  0044C4  EC87  F02A         	call	_ringBufS_init	;wreg free
  5069                           
  5070                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  5071  0044C8  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  5072  0044CE  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  5073  0044D4  EC87  F02A         	call	_ringBufS_init	;wreg free
  5074                           
  5075                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  5076  0044D8  80BE               	bsf	16318,0,c	;volatile
  5077  0044DA  84BC               	bsf	16316,2,c	;volatile
  5078                           
  5079                           ;eadog.c: 44:  wdtdelay(350000);
  5080  0044DC  0E30               	movlw	48
  5081  0044DE  6EE6               	movwf	postinc1,c
  5082  0044E0  0E57               	movlw	87
  5083  0044E2  6EE6               	movwf	postinc1,c
  5084  0044E4  0E05               	movlw	5
  5085  0044E6  6EE6               	movwf	postinc1,c
  5086  0044E8  0E00               	movlw	0
  5087  0044EA  6EE6               	movwf	postinc1,c
  5088  0044EC  EC01  F028         	call	_wdtdelay	;wreg free
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  5092  0044F0  0E39               	movlw	57
  5093  0044F2  6EE6               	movwf	postinc1,c
  5094  0044F4  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  5098  0044F8  0E1D               	movlw	29
  5099  0044FA  6EE6               	movwf	postinc1,c
  5100  0044FC  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  5104  004500  0E50               	movlw	80
  5105  004502  6EE6               	movwf	postinc1,c
  5106  004504  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  5110  004508  0E6C               	movlw	108
  5111  00450A  6EE6               	movwf	postinc1,c
  5112  00450C  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  5116  004510  0E76               	movlw	118
  5117  004512  6EE6               	movwf	postinc1,c
  5118  004514  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  5122  004518  0E38               	movlw	56
  5123  00451A  6EE6               	movwf	postinc1,c
  5124  00451C  EC5F  F02A         	call	_send_lcd_cmd_long	;wreg free
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  5128  004520  0E0F               	movlw	15
  5129  004522  6EE6               	movwf	postinc1,c
  5130  004524  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  5134  004528  0E01               	movlw	1
  5135  00452A  6EE6               	movwf	postinc1,c
  5136  00452C  EC5F  F02A         	call	_send_lcd_cmd_long	;wreg free
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  5140  004530  0E02               	movlw	2
  5141  004532  6EE6               	movwf	postinc1,c
  5142  004534  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  5146  004538  0E06               	movlw	6
  5147  00453A  6EE6               	movwf	postinc1,c
  5148  00453C  EC73  F02A         	call	_send_lcd_cmd	;wreg free
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;eadog.c: 55:  wdtdelay(30);
  5152  004540  0E1E               	movlw	30
  5153  004542  6EE6               	movwf	postinc1,c
  5154  004544  0E00               	movlw	0
  5155  004546  6EE6               	movwf	postinc1,c
  5156  004548  0E00               	movlw	0
  5157  00454A  6EE6               	movwf	postinc1,c
  5158  00454C  0E00               	movlw	0
  5159  00454E  6EE6               	movwf	postinc1,c
  5160  004550  EC01  F028         	call	_wdtdelay	;wreg free
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  5164  004554  0E02               	movlw	2
  5165  004556  013D               	movlb	61	; () banked
  5166  004558  6F16               	movwf	22,b	;volatile
  5167                           
  5168                           ; BSR set to: 61
  5169                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  5170  00455A  0E40               	movlw	64
  5171  00455C  6F15               	movwf	21,b	;volatile
  5172                           
  5173                           ; BSR set to: 61
  5174                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  5175  00455E  0E83               	movlw	131
  5176  004560  6F14               	movwf	20,b	;volatile
  5177                           
  5178                           ; BSR set to: 61
  5179                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  5180  004562  931A               	bcf	26,1,b	;volatile
  5181                           
  5182                           ; BSR set to: 61
  5183                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  5184  004564  0E3F               	movlw	-193
  5185  004566  013B               	movlb	59	; () banked
  5186  004568  17FD               	andwf	253,f,b	;volatile
  5187                           
  5188                           ; BSR set to: 59
  5189                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  5190  00456A  9BFD               	bcf	253,5,b	;volatile
  5191                           
  5192                           ; BSR set to: 59
  5193                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  5194  00456C  51FD               	movf	253,w,b	;volatile
  5195  00456E  0BF9               	andlw	-7
  5196  004570  0902               	iorlw	2
  5197  004572  6FFD               	movwf	253,b	;volatile
  5198                           
  5199                           ; BSR set to: 59
  5200                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  5201  004574  0EE7               	movlw	-25
  5202  004576  17FD               	andwf	253,f,b	;volatile
  5203                           
  5204                           ; BSR set to: 59
  5205                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  5206  004578  81FD               	bsf	253,0,b	;volatile
  5207                           
  5208                           ; BSR set to: 59
  5209                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  5210  00457A  0E43               	movlw	low _ring_buf1
  5211  00457C  6FF9               	movwf	249,b	;volatile
  5212  00457E  0E03               	movlw	high _ring_buf1
  5213  004580  6FFA               	movwf	250,b	;volatile
  5214  004582  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5215  004584  6FFB               	movwf	251,b	;volatile
  5216                           
  5217                           ; BSR set to: 59
  5218                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  5219  004586  9BFC               	bcf	252,5,b	;volatile
  5220                           
  5221                           ; BSR set to: 59
  5222                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  5223  004588  013D               	movlb	61	; () banked
  5224  00458A  831A               	bsf	26,1,b	;volatile
  5225                           
  5226                           ; BSR set to: 61
  5227                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  5228  00458C  90BE               	bcf	16318,0,c	;volatile
  5229                           
  5230                           ; BSR set to: 61
  5231                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5232  00458E  0012               	return		;funcret
  5233  004590                     __end_of_init_display:
  5234                           	opt callstack 0
  5235                           
  5236 ;; *************** function _send_lcd_cmd_long *****************
  5237 ;; Defined at:
  5238 ;;		line 97 in file "eadog.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  cmd             1  [STACK] unsigned char 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1  [STACK] void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5247 ;; Tracked objects:
  5248 ;;		On entry : 3F/0
  5249 ;;		On exit  : 3F/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    4
  5259 ;; This function calls:
  5260 ;;		_SPI1_Exchange8bit
  5261 ;;		_wdtdelay
  5262 ;; This function is called by:
  5263 ;;		_init_display
  5264 ;; This function uses a reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text17
  5268  0054BE                     __ptext17:
  5269                           	opt callstack 0
  5270  0054BE                     _send_lcd_cmd_long:
  5271                           	opt callstack 25
  5272                           
  5273                           ; BSR set to: 61
  5274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5275                           ;incstack = 0
  5276                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  5277  0054BE  92BC               	bcf	16316,1,c	;volatile
  5278                           
  5279                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  5280  0054C0  94BC               	bcf	16316,2,c	;volatile
  5281                           
  5282                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  5283                           ;stkvar	_cmd @ sp[(0)+-1]
  5284  0054C2  0EFF               	movlw	-1
  5285  0054C4  50E3               	movf	plusw1,w,c
  5286  0054C6  6EE6               	movwf	postinc1,c
  5287  0054C8  EC5F  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5288                           
  5289                           ; BSR set to: 57
  5290                           ;eadog.c: 102:  wdtdelay(800);
  5291  0054CC  0E20               	movlw	32
  5292  0054CE  6EE6               	movwf	postinc1,c
  5293  0054D0  0E03               	movlw	3
  5294  0054D2  6EE6               	movwf	postinc1,c
  5295  0054D4  0E00               	movlw	0
  5296  0054D6  6EE6               	movwf	postinc1,c
  5297  0054D8  0E00               	movlw	0
  5298  0054DA  6EE6               	movwf	postinc1,c
  5299  0054DC  EC01  F028         	call	_wdtdelay	;wreg free
  5300                           
  5301                           ; BSR set to: 0
  5302  0054E0  82BC               	bsf	16316,1,c	;volatile
  5303                           
  5304                           ; BSR set to: 0
  5305                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5306  0054E2  52E5               	movf	postdec1,f,c
  5307  0054E4  0012               	return		;funcret
  5308  0054E6                     __end_of_send_lcd_cmd_long:
  5309                           	opt callstack 0
  5310                           
  5311 ;; *************** function _send_lcd_cmd *****************
  5312 ;; Defined at:
  5313 ;;		line 85 in file "eadog.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  cmd             1  [STACK] unsigned char 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1  [STACK] void 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5322 ;; Tracked objects:
  5323 ;;		On entry : 3F/0
  5324 ;;		On exit  : 3F/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    4
  5334 ;; This function calls:
  5335 ;;		_SPI1_Exchange8bit
  5336 ;;		_wdtdelay
  5337 ;; This function is called by:
  5338 ;;		_init_display
  5339 ;; This function uses a reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text18
  5343  0054E6                     __ptext18:
  5344                           	opt callstack 0
  5345  0054E6                     _send_lcd_cmd:
  5346                           	opt callstack 25
  5347                           
  5348                           ; BSR set to: 0
  5349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5350                           ;incstack = 0
  5351                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  5352  0054E6  92BC               	bcf	16316,1,c	;volatile
  5353                           
  5354                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  5355  0054E8  94BC               	bcf	16316,2,c	;volatile
  5356                           
  5357                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  5358                           ;stkvar	_cmd @ sp[(0)+-1]
  5359  0054EA  0EFF               	movlw	-1
  5360  0054EC  50E3               	movf	plusw1,w,c
  5361  0054EE  6EE6               	movwf	postinc1,c
  5362  0054F0  EC5F  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5363                           
  5364                           ; BSR set to: 57
  5365                           ;eadog.c: 90:  wdtdelay(30);
  5366  0054F4  0E1E               	movlw	30
  5367  0054F6  6EE6               	movwf	postinc1,c
  5368  0054F8  0E00               	movlw	0
  5369  0054FA  6EE6               	movwf	postinc1,c
  5370  0054FC  0E00               	movlw	0
  5371  0054FE  6EE6               	movwf	postinc1,c
  5372  005500  0E00               	movlw	0
  5373  005502  6EE6               	movwf	postinc1,c
  5374  005504  EC01  F028         	call	_wdtdelay	;wreg free
  5375                           
  5376                           ; BSR set to: 0
  5377  005508  82BC               	bsf	16316,1,c	;volatile
  5378                           
  5379                           ; BSR set to: 0
  5380                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5381  00550A  52E5               	movf	postdec1,f,c
  5382  00550C  0012               	return		;funcret
  5383  00550E                     __end_of_send_lcd_cmd:
  5384                           	opt callstack 0
  5385                           
  5386 ;; *************** function _SPI1_Exchange8bit *****************
  5387 ;; Defined at:
  5388 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  data            1  [STACK] unsigned char 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1  [STACK] unsigned char 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 3F/39
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    3
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_send_lcd_cmd
  5413 ;;		_send_lcd_cmd_long
  5414 ;; This function uses a reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text19
  5418  0058BE                     __ptext19:
  5419                           	opt callstack 0
  5420  0058BE                     _SPI1_Exchange8bit:
  5421                           	opt callstack 25
  5422                           
  5423                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5424                           
  5425                           ; BSR set to: 0
  5426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5427                           ;incstack = 0
  5428  0058BE  0E01               	movlw	1
  5429  0058C0  013D               	movlb	61	; () banked
  5430  0058C2  6F12               	movwf	18,b	;volatile
  5431                           
  5432                           ; BSR set to: 61
  5433                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5434                           ;stkvar	_data @ sp[(0)+-1]
  5435  0058C4  0EFF               	movlw	-1
  5436  0058C6  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5437  0058CC                     l847:
  5438                           
  5439                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5440  0058CC  0139               	movlb	57	; () banked
  5441  0058CE  A9A2               	btfss	162,4,b	;volatile
  5442  0058D0  D7FD               	goto	l847
  5443                           
  5444                           ; BSR set to: 57
  5445                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5446  0058D2  006F F440  F03B    	movff	15632,btemp	;volatile
  5447                           
  5448                           ; BSR set to: 57
  5449                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5450  0058D8  52E5               	movf	postdec1,f,c
  5451  0058DA  0012               	return		;funcret
  5452  0058DC                     __end_of_SPI1_Exchange8bit:
  5453                           	opt callstack 0
  5454                           
  5455 ;; *************** function _ringBufS_init *****************
  5456 ;; Defined at:
  5457 ;;		line 22 in file "ringbufs.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  _this           2  [STACK] PTR volatile struct ring
  5460 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1  [STACK] void 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5476 ;;Total ram usage:        0 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    4
  5479 ;; This function calls:
  5480 ;;		_memset
  5481 ;; This function is called by:
  5482 ;;		_init_display
  5483 ;; This function uses a reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text20
  5487  00550E                     __ptext20:
  5488                           	opt callstack 0
  5489  00550E                     _ringBufS_init:
  5490                           	opt callstack 25
  5491                           
  5492                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5493                           
  5494                           ; BSR set to: 57
  5495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5496                           ;incstack = 0
  5497  00550E  0E43               	movlw	67
  5498  005510  6EE6               	movwf	postinc1,c
  5499  005512  0E00               	movlw	0
  5500  005514  6EE6               	movwf	postinc1,c
  5501  005516  0E00               	movlw	0
  5502  005518  6EE6               	movwf	postinc1,c
  5503  00551A  0E00               	movlw	0
  5504  00551C  6EE6               	movwf	postinc1,c
  5505                           
  5506                           ;stkvar	__this @ sp[(-4)+-2]
  5507  00551E  0EFA               	movlw	-6
  5508  005520  006F FF8F FFE6     	movff	plusw1,postinc1
  5509  005526  006F FF8F FFE6     	movff	plusw1,postinc1
  5510  00552C  EC9A  F016         	call	_memset	;wreg free
  5511                           
  5512                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5513  005530  52E5               	movf	postdec1,f,c
  5514  005532  52E5               	movf	postdec1,f,c
  5515  005534  0012               	return		;funcret
  5516  005536                     __end_of_ringBufS_init:
  5517                           	opt callstack 0
  5518                           
  5519 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5520 ;; Defined at:
  5521 ;;		line 218 in file "eadog.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  r               1  [STACK] unsigned char 
  5524 ;;  c               1  [STACK] unsigned char 
  5525 ;;  strPtr          1  [STACK] PTR unsigned char 
  5526 ;;		 -> V(86), 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1  [STACK] void 
  5531 ;; Registers used:
  5532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5533 ;; Tracked objects:
  5534 ;;		On entry : 3F/0
  5535 ;;		On exit  : 3F/3B
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:   13
  5545 ;; This function calls:
  5546 ;;		_eaDogM_WriteString
  5547 ;;		_send_lcd_cmd_dma
  5548 ;; This function is called by:
  5549 ;;		_main
  5550 ;; This function uses a reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text21
  5554  0053BA                     __ptext21:
  5555                           	opt callstack 0
  5556  0053BA                     _eaDogM_WriteStringAtPos:
  5557                           	opt callstack 17
  5558                           
  5559                           ;eadog.c: 218: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           219: {;eadog.c: 220:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5560                           ;stkvar	_c @ sp[(0)+-2]
  5561                           
  5562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5563                           ;incstack = 0
  5564  0053BA  0EFE               	movlw	-2
  5565  0053BC  006F FF8C  F046    	movff	plusw1,btemp+11
  5566                           
  5567                           ;stkvar	_r @ sp[(0)+-1]
  5568  0053C2  0EFF               	movlw	-1
  5569  0053C4  50E3               	movf	plusw1,w,c
  5570  0053C6  0D10               	mullw	16
  5571  0053C8  50F3               	movf	prodl,w,c
  5572  0053CA  2446               	addwf	btemp+11,w,c
  5573  0053CC  0F80               	addlw	128
  5574  0053CE  6EE6               	movwf	postinc1,c
  5575  0053D0  EC2F  F028         	call	_send_lcd_cmd_dma	;wreg free
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;eadog.c: 221:  eaDogM_WriteString(strPtr);
  5579                           ;stkvar	_strPtr @ sp[(0)+-3]
  5580  0053D4  0EFD               	movlw	-3
  5581  0053D6  50E3               	movf	plusw1,w,c
  5582  0053D8  6EE6               	movwf	postinc1,c
  5583  0053DA  EC5C  F025         	call	_eaDogM_WriteString	;wreg free
  5584                           
  5585                           ; BSR set to: 59
  5586                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5587  0053DE  52E5               	movf	postdec1,f,c
  5588  0053E0  52E5               	movf	postdec1,f,c
  5589  0053E2  52E5               	movf	postdec1,f,c
  5590  0053E4  0012               	return		;funcret
  5591  0053E6                     __end_of_eaDogM_WriteStringAtPos:
  5592                           	opt callstack 0
  5593                           
  5594 ;; *************** function _eaDogM_WriteString *****************
  5595 ;; Defined at:
  5596 ;;		line 167 in file "eadog.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  strPtr          1  [STACK] PTR unsigned char 
  5599 ;;		 -> V(86), 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1  [STACK] void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5606 ;; Tracked objects:
  5607 ;;		On entry : 3F/0
  5608 ;;		On exit  : 3F/3B
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5615 ;;Total ram usage:        0 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:   12
  5618 ;; This function calls:
  5619 ;;		_printf
  5620 ;;		_ringBufS_flush
  5621 ;;		_start_lcd
  5622 ;;		_strlen
  5623 ;;		_wait_lcd_set
  5624 ;; This function is called by:
  5625 ;;		_eaDogM_WriteStringAtPos
  5626 ;; This function uses a reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text22
  5630  004AB8                     __ptext22:
  5631                           	opt callstack 0
  5632  004AB8                     _eaDogM_WriteString:
  5633                           	opt callstack 17
  5634                           
  5635                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5636                           
  5637                           ; BSR set to: 59
  5638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5639                           ;incstack = 0
  5640  004AB8  EC31  F02D         	call	_wait_lcd_set	;wreg free
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5644  004ABC  0E00               	movlw	0
  5645  004ABE  6EE6               	movwf	postinc1,c
  5646  004AC0  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5647  004AC6  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5648  004ACC  EC42  F026         	call	_ringBufS_flush	;wreg free
  5649  004AD0  94BC               	bcf	16316,2,c	;volatile
  5650                           
  5651                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5652                           ;stkvar	_strPtr @ sp[(0)+-1]
  5653  004AD2  0EFF               	movlw	-1
  5654  004AD4  006F FF8C  F046    	movff	plusw1,btemp+11
  5655  004ADA  0060  F11B  FFE6   	movff	btemp+11,postinc1
  5656  004AE0  0E00               	movlw	0
  5657  004AE2  6EE6               	movwf	postinc1,c
  5658  004AE4  ECBB  F024         	call	_strlen	;wreg free
  5659  004AE8  503C               	movf	btemp+1,w,c
  5660  004AEA  E104               	bnz	u3950
  5661  004AEC  0E41               	movlw	65
  5662  004AEE  5C3B               	subwf	btemp,w,c
  5663  004AF0  A0D8               	btfss	status,0,c
  5664  004AF2  D008               	goto	l6754
  5665  004AF4                     u3950:
  5666                           
  5667                           ;stkvar	_strPtr @ sp[(0)+-1]
  5668  004AF4  0EFF               	movlw	-1
  5669  004AF6  50E3               	movf	plusw1,w,c
  5670  004AF8  6ED9               	movwf	fsr2l,c
  5671  004AFA  6ADA               	clrf	fsr2h,c
  5672  004AFC  0E40               	movlw	64
  5673  004AFE  26D9               	addwf	fsr2l,f,c
  5674  004B00  0E00               	movlw	0
  5675  004B02  6EDF               	movwf	indf2,c
  5676  004B04                     l6754:
  5677                           
  5678                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5679  004B04  013B               	movlb	59	; () banked
  5680  004B06  9FFC               	bcf	252,7,b	;volatile
  5681                           
  5682                           ; BSR set to: 59
  5683                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5684                           ;stkvar	_strPtr @ sp[(0)+-1]
  5685  004B08  0EFF               	movlw	-1
  5686  004B0A  006F FF8C  F046    	movff	plusw1,btemp+11
  5687  004B10  0060  F11B  FFE6   	movff	btemp+11,postinc1
  5688  004B16  0E00               	movlw	0
  5689  004B18  6EE6               	movwf	postinc1,c
  5690  004B1A  ECBB  F024         	call	_strlen	;wreg free
  5691  004B1E  0060  F0EF  FBF7   	movff	btemp,15351	;volatile
  5692  004B24  0060  F0F3  FBF8   	movff	btemp+1,15352	;volatile
  5693                           
  5694                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5695  004B2A  013B               	movlb	59	; () banked
  5696  004B2C  8FFC               	bsf	252,7,b	;volatile
  5697                           
  5698                           ; BSR set to: 59
  5699                           ;eadog.c: 177:  printf("%s", strPtr);
  5700                           ;stkvar	_strPtr @ sp[(0)+-1]
  5701  004B2E  0EFF               	movlw	-1
  5702  004B30  006F FF8C  F046    	movff	plusw1,btemp+11
  5703  004B36  0060  F11B  FFE6   	movff	btemp+11,postinc1
  5704  004B3C  0E00               	movlw	0
  5705  004B3E  6EE6               	movwf	postinc1,c
  5706  004B40  0E96               	movlw	(STR_2+9)& (0+255)
  5707  004B42  6EE6               	movwf	postinc1,c
  5708  004B44  0E03               	movlw	3
  5709  004B46  6EE6               	movwf	postinc1,c
  5710  004B48  ECA1  F027         	call	_printf	;wreg free
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;eadog.c: 178:  start_lcd();
  5714  004B4C  EC34  F02D         	call	_start_lcd	;wreg free
  5715                           
  5716                           ; BSR set to: 59
  5717                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5718  004B50  52E5               	movf	postdec1,f,c
  5719  004B52  0012               	return		;funcret
  5720  004B54                     __end_of_eaDogM_WriteString:
  5721                           	opt callstack 0
  5722                           
  5723 ;; *************** function _eaDogM_WriteCommand *****************
  5724 ;; Defined at:
  5725 ;;		line 143 in file "eadog.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  cmd             1  [STACK] unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1  [STACK] void 
  5732 ;; Registers used:
  5733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5734 ;; Tracked objects:
  5735 ;;		On entry : 3F/3D
  5736 ;;		On exit  : 3F/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5743 ;;Total ram usage:        0 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:   13
  5746 ;; This function calls:
  5747 ;;		_send_lcd_cmd_dma
  5748 ;; This function is called by:
  5749 ;;		_main
  5750 ;; This function uses a reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text23
  5754  0059D8                     __ptext23:
  5755                           	opt callstack 0
  5756  0059D8                     _eaDogM_WriteCommand:
  5757                           	opt callstack 17
  5758                           
  5759                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5760                           ;stkvar	_cmd @ sp[(0)+-1]
  5761                           
  5762                           ; BSR set to: 59
  5763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5764                           ;incstack = 0
  5765  0059D8  0EFF               	movlw	-1
  5766  0059DA  50E3               	movf	plusw1,w,c
  5767  0059DC  6EE6               	movwf	postinc1,c
  5768  0059DE  EC2F  F028         	call	_send_lcd_cmd_dma	;wreg free
  5769                           
  5770                           ; BSR set to: 0
  5771                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5772  0059E2  52E5               	movf	postdec1,f,c
  5773  0059E4  0012               	return		;funcret
  5774  0059E6                     __end_of_eaDogM_WriteCommand:
  5775                           	opt callstack 0
  5776                           
  5777 ;; *************** function _send_lcd_cmd_dma *****************
  5778 ;; Defined at:
  5779 ;;		line 184 in file "eadog.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  strPtr          1  [STACK] unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1  [STACK] void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 3F/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:   12
  5800 ;; This function calls:
  5801 ;;		_printf
  5802 ;;		_ringBufS_flush
  5803 ;;		_start_lcd
  5804 ;;		_wait_lcd_done
  5805 ;;		_wait_lcd_set
  5806 ;; This function is called by:
  5807 ;;		_eaDogM_WriteCommand
  5808 ;;		_eaDogM_WriteStringAtPos
  5809 ;; This function uses a reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text24
  5813  00505E                     __ptext24:
  5814                           	opt callstack 0
  5815  00505E                     _send_lcd_cmd_dma:
  5816                           	opt callstack 17
  5817                           
  5818                           ;eadog.c: 184: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 185: {;eadog.c: 186:  wait
      +                          _lcd_set();
  5819                           
  5820                           ; BSR set to: 0
  5821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5822                           ;incstack = 0
  5823  00505E  EC31  F02D         	call	_wait_lcd_set	;wreg free
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;eadog.c: 188:  ringBufS_flush(spi_link.tx1a, 0);
  5827  005062  0E00               	movlw	0
  5828  005064  6EE6               	movwf	postinc1,c
  5829  005066  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5830  00506C  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5831  005072  EC42  F026         	call	_ringBufS_flush	;wreg free
  5832  005076  92BC               	bcf	16316,1,c	;volatile
  5833  005078  94BC               	bcf	16316,2,c	;volatile
  5834                           
  5835                           ;eadog.c: 191:  DMA1CON0bits.EN = 0;
  5836  00507A  013B               	movlb	59	; () banked
  5837  00507C  9FFC               	bcf	252,7,b	;volatile
  5838                           
  5839                           ; BSR set to: 59
  5840                           ;eadog.c: 192:  DMA1SSZ = 1;
  5841  00507E  0E00               	movlw	0
  5842  005080  6FF8               	movwf	248,b	;volatile
  5843  005082  0E01               	movlw	1
  5844  005084  6FF7               	movwf	247,b	;volatile
  5845                           
  5846                           ; BSR set to: 59
  5847                           ;eadog.c: 193:  DMA1CON0bits.EN = 1;
  5848  005086  8FFC               	bsf	252,7,b	;volatile
  5849                           
  5850                           ; BSR set to: 59
  5851                           ;eadog.c: 194:  printf("%c", strPtr);
  5852                           ;stkvar	_strPtr @ sp[(0)+-1]
  5853  005088  0EFF               	movlw	-1
  5854  00508A  50E3               	movf	plusw1,w,c
  5855  00508C  6EE6               	movwf	postinc1,c
  5856  00508E  0E00               	movlw	0
  5857  005090  6EE6               	movwf	postinc1,c
  5858  005092  0EAB               	movlw	STR_13& (0+255)
  5859  005094  6EE6               	movwf	postinc1,c
  5860  005096  0E03               	movlw	3
  5861  005098  6EE6               	movwf	postinc1,c
  5862  00509A  ECA1  F027         	call	_printf	;wreg free
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;eadog.c: 195:  start_lcd();
  5866  00509E  EC34  F02D         	call	_start_lcd	;wreg free
  5867                           
  5868                           ; BSR set to: 59
  5869                           ;eadog.c: 196:  wait_lcd_done();
  5870  0050A2  EC6E  F02C         	call	_wait_lcd_done	;wreg free
  5871                           
  5872                           ; BSR set to: 0
  5873  0050A6  82BC               	bsf	16316,1,c	;volatile
  5874                           
  5875                           ; BSR set to: 0
  5876                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5877  0050A8  52E5               	movf	postdec1,f,c
  5878  0050AA  0012               	return		;funcret
  5879  0050AC                     __end_of_send_lcd_cmd_dma:
  5880                           	opt callstack 0
  5881                           
  5882 ;; *************** function _wait_lcd_set *****************
  5883 ;; Defined at:
  5884 ;;		line 114 in file "eadog.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;		None
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1  [STACK] void 
  5891 ;; Registers used:
  5892 ;;		None
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 3F/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5902 ;;Total ram usage:        0 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    3
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_eaDogM_WriteString
  5909 ;;		_send_lcd_cmd_dma
  5910 ;; This function uses a reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text25
  5914  005A62                     __ptext25:
  5915                           	opt callstack 0
  5916  005A62                     _wait_lcd_set:
  5917                           	opt callstack 25
  5918                           
  5919                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5920                           
  5921                           ; BSR set to: 0
  5922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5923                           ;incstack = 0
  5924  005A62  0100               	movlb	0	; () banked
  5925  005A64  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5926                           
  5927                           ; BSR set to: 0
  5928                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5929  005A66  0012               	return		;funcret
  5930  005A68                     __end_of_wait_lcd_set:
  5931                           	opt callstack 0
  5932                           
  5933 ;; *************** function _wait_lcd_done *****************
  5934 ;; Defined at:
  5935 ;;		line 124 in file "eadog.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1  [STACK] void 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5944 ;; Tracked objects:
  5945 ;;		On entry : 4/0
  5946 ;;		On exit  : 3F/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    4
  5956 ;; This function calls:
  5957 ;;		_wdtdelay
  5958 ;; This function is called by:
  5959 ;;		_main
  5960 ;;		_send_lcd_cmd_dma
  5961 ;; This function uses a reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text26
  5965  0058DC                     __ptext26:
  5966                           	opt callstack 0
  5967  0058DC                     _wait_lcd_done:
  5968                           	opt callstack 26
  5969                           
  5970                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5971                           
  5972                           ; BSR set to: 0
  5973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5974                           ;incstack = 0
  5975  0058DC  0100               	movlb	0	; () banked
  5976  0058DE  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5977  0058E0  D7FD               	goto	_wait_lcd_done
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;eadog.c: 127:  wdtdelay(50);
  5981  0058E2  0E32               	movlw	50
  5982  0058E4  6EE6               	movwf	postinc1,c
  5983  0058E6  0E00               	movlw	0
  5984  0058E8  6EE6               	movwf	postinc1,c
  5985  0058EA  0E00               	movlw	0
  5986  0058EC  6EE6               	movwf	postinc1,c
  5987  0058EE  0E00               	movlw	0
  5988  0058F0  6EE6               	movwf	postinc1,c
  5989  0058F2  EC01  F028         	call	_wdtdelay	;wreg free
  5990                           
  5991                           ; BSR set to: 0
  5992                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5993  0058F6  0012               	return		;funcret
  5994  0058F8                     __end_of_wait_lcd_done:
  5995                           	opt callstack 0
  5996                           
  5997 ;; *************** function _wdtdelay *****************
  5998 ;; Defined at:
  5999 ;;		line 21 in file "eadog.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  delay           4  [STACK] unsigned long 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1  [STACK] void 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 3F/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6017 ;;Total ram usage:        0 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    3
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_init_display
  6024 ;;		_send_lcd_cmd
  6025 ;;		_send_lcd_cmd_long
  6026 ;;		_wait_lcd_done
  6027 ;; This function uses a reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text27
  6031  005002                     __ptext27:
  6032                           	opt callstack 0
  6033  005002                     _wdtdelay:
  6034                           	opt callstack 26
  6035                           
  6036                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  6037                           
  6038                           ; BSR set to: 0
  6039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6040                           ;incstack = 0
  6041  005002  0100               	movlb	0	; () banked
  6042  005004  6B85               	clrf	wdtdelay@dcount& (0+255),b
  6043  005006  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6044  005008  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6045  00500A  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6046  00500C  D009               	goto	l4992
  6047  00500E                     l1312:
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;eadog.c: 26:   __nop();
  6051  00500E  F000               	nop	
  6052  005010  0004               	clrwdt		;# 
  6053                           
  6054                           ;eadog.c: 28:  };
  6055  005012  0E01               	movlw	1
  6056  005014  0100               	movlb	0	; () banked
  6057  005016  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  6058  005018  0E00               	movlw	0
  6059  00501A  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6060  00501C  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6061  00501E  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6062  005020                     l4992:
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;stkvar	_delay @ sp[(0)+-4]
  6066  005020  0EFC               	movlw	-4
  6067  005022  006F FF8C  F03B    	movff	plusw1,btemp
  6068  005028  5185               	movf	wdtdelay@dcount& (0+255),w,b
  6069  00502A  5C3B               	subwf	btemp,w,c
  6070  00502C  0EFD               	movlw	-3
  6071  00502E  006F FF8C  F03B    	movff	plusw1,btemp
  6072  005034  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6073  005036  583B               	subwfb	btemp,w,c
  6074  005038  0EFE               	movlw	-2
  6075  00503A  006F FF8C  F03B    	movff	plusw1,btemp
  6076  005040  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6077  005042  583B               	subwfb	btemp,w,c
  6078  005044  0EFF               	movlw	-1
  6079  005046  006F FF8C  F03B    	movff	plusw1,btemp
  6080  00504C  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6081  00504E  583B               	subwfb	btemp,w,c
  6082  005050  B0D8               	btfsc	status,0,c
  6083  005052  D7DD               	goto	l1312
  6084                           
  6085                           ; BSR set to: 0
  6086                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6087  005054  52E5               	movf	postdec1,f,c
  6088  005056  52E5               	movf	postdec1,f,c
  6089  005058  52E5               	movf	postdec1,f,c
  6090  00505A  52E5               	movf	postdec1,f,c
  6091  00505C  0012               	return		;funcret
  6092  00505E                     __end_of_wdtdelay:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _start_lcd *****************
  6096 ;; Defined at:
  6097 ;;		line 109 in file "eadog.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1  [STACK] void 
  6104 ;; Registers used:
  6105 ;;		None
  6106 ;; Tracked objects:
  6107 ;;		On entry : 3F/0
  6108 ;;		On exit  : 3F/3B
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    3
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_eaDogM_WriteString
  6122 ;;		_send_lcd_cmd_dma
  6123 ;; This function uses a reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text28
  6127  005A68                     __ptext28:
  6128                           	opt callstack 0
  6129  005A68                     _start_lcd:
  6130                           	opt callstack 25
  6131                           
  6132                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  6133                           
  6134                           ; BSR set to: 0
  6135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6136                           ;incstack = 0
  6137  005A68  013B               	movlb	59	; () banked
  6138  005A6A  8DFC               	bsf	252,6,b	;volatile
  6139                           
  6140                           ; BSR set to: 59
  6141                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6142  005A6C  0012               	return		;funcret
  6143  005A6E                     __end_of_start_lcd:
  6144                           	opt callstack 0
  6145                           
  6146 ;; *************** function _ringBufS_flush *****************
  6147 ;; Defined at:
  6148 ;;		line 76 in file "ringbufs.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6151 ;;		 -> ring_buf1(67), 
  6152 ;;  clearBuffer     1  [STACK] const char 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1  [STACK] void 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6159 ;; Tracked objects:
  6160 ;;		On entry : 3F/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    4
  6171 ;; This function calls:
  6172 ;;		_memset
  6173 ;; This function is called by:
  6174 ;;		_eaDogM_WriteString
  6175 ;;		_send_lcd_cmd_dma
  6176 ;; This function uses a reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text29
  6180  004C84                     __ptext29:
  6181                           	opt callstack 0
  6182  004C84                     _ringBufS_flush:
  6183                           	opt callstack 24
  6184                           
  6185                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6186                           ;stkvar	__this @ sp[(0)+-2]
  6187                           
  6188                           ; BSR set to: 59
  6189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6190                           ;incstack = 0
  6191  004C84  0EFE               	movlw	-2
  6192  004C86  006F FF8C  F045    	movff	plusw1,btemp+10
  6193  004C8C  0EFF               	movlw	-1
  6194  004C8E  006F FF8C  F046    	movff	plusw1,btemp+11
  6195  004C94  0E42               	movlw	66
  6196  004C96  2445               	addwf	btemp+10,w,c
  6197  004C98  6ED9               	movwf	fsr2l,c
  6198  004C9A  0E00               	movlw	0
  6199  004C9C  2046               	addwfc	btemp+11,w,c
  6200  004C9E  6EDA               	movwf	fsr2h,c
  6201  004CA0  0E00               	movlw	0
  6202  004CA2  6EDF               	movwf	indf2,c
  6203                           
  6204                           ;ringbufs.c: 79:  _this->head = 0;
  6205                           ;stkvar	__this @ sp[(0)+-2]
  6206  004CA4  0EFE               	movlw	-2
  6207  004CA6  006F FF8C  F045    	movff	plusw1,btemp+10
  6208  004CAC  0EFF               	movlw	-1
  6209  004CAE  006F FF8C  F046    	movff	plusw1,btemp+11
  6210  004CB4  0E40               	movlw	64
  6211  004CB6  2445               	addwf	btemp+10,w,c
  6212  004CB8  6ED9               	movwf	fsr2l,c
  6213  004CBA  0E00               	movlw	0
  6214  004CBC  2046               	addwfc	btemp+11,w,c
  6215  004CBE  6EDA               	movwf	fsr2h,c
  6216  004CC0  0E00               	movlw	0
  6217  004CC2  6EDF               	movwf	indf2,c
  6218                           
  6219                           ;ringbufs.c: 80:  _this->tail = 0;
  6220                           ;stkvar	__this @ sp[(0)+-2]
  6221  004CC4  0EFE               	movlw	-2
  6222  004CC6  006F FF8C  F045    	movff	plusw1,btemp+10
  6223  004CCC  0EFF               	movlw	-1
  6224  004CCE  006F FF8C  F046    	movff	plusw1,btemp+11
  6225  004CD4  0E41               	movlw	65
  6226  004CD6  2445               	addwf	btemp+10,w,c
  6227  004CD8  6ED9               	movwf	fsr2l,c
  6228  004CDA  0E00               	movlw	0
  6229  004CDC  2046               	addwfc	btemp+11,w,c
  6230  004CDE  6EDA               	movwf	fsr2h,c
  6231  004CE0  0E00               	movlw	0
  6232  004CE2  6EDF               	movwf	indf2,c
  6233                           
  6234                           ;ringbufs.c: 81:  if (clearBuffer) {
  6235                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6236  004CE4  0EFD               	movlw	-3
  6237  004CE6  50E3               	movf	plusw1,w,c
  6238  004CE8  B4D8               	btfsc	status,2,c
  6239  004CEA  D011               	goto	l1448
  6240                           
  6241                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6242  004CEC  0E40               	movlw	64
  6243  004CEE  6EE6               	movwf	postinc1,c
  6244  004CF0  0E00               	movlw	0
  6245  004CF2  6EE6               	movwf	postinc1,c
  6246  004CF4  0E00               	movlw	0
  6247  004CF6  6EE6               	movwf	postinc1,c
  6248  004CF8  0E00               	movlw	0
  6249  004CFA  6EE6               	movwf	postinc1,c
  6250                           
  6251                           ;stkvar	__this @ sp[(-4)+-2]
  6252  004CFC  0EFA               	movlw	-6
  6253  004CFE  006F FF8F FFE6     	movff	plusw1,postinc1
  6254  004D04  006F FF8F FFE6     	movff	plusw1,postinc1
  6255  004D0A  EC9A  F016         	call	_memset	;wreg free
  6256  004D0E                     l1448:
  6257                           
  6258                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6259  004D0E  52E5               	movf	postdec1,f,c
  6260  004D10  52E5               	movf	postdec1,f,c
  6261  004D12  52E5               	movf	postdec1,f,c
  6262  004D14  0012               	return		;funcret
  6263  004D16                     __end_of_ringBufS_flush:
  6264                           	opt callstack 0
  6265                           
  6266 ;; *************** function _memset *****************
  6267 ;; Defined at:
  6268 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  dest            2  [STACK] PTR void 
  6271 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6272 ;;  c               2  [STACK] int 
  6273 ;;  n               2  [STACK] unsigned int 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  s               2  [STACK] PTR unsigned char 
  6276 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6277 ;;  k               2  [STACK] unsigned int 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  2  [STACK] PTR void 
  6280 ;; Registers used:
  6281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6291 ;;Total ram usage:        0 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    3
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_ringBufS_init
  6298 ;;		_ringBufS_flush
  6299 ;; This function uses a reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text30
  6303  002D34                     __ptext30:
  6304                           	opt callstack 0
  6305  002D34                     _memset:
  6306                           	opt callstack 0
  6307                           
  6308                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6309  002D34  52E6               	movf	postinc1,f,c
  6310  002D36  52E6               	movf	postinc1,f,c
  6311  002D38  52E6               	movf	postinc1,f,c
  6312  002D3A  52E6               	movf	postinc1,f,c
  6313                           
  6314                           ;stkvar	_dest @ sp[(-4)+-2]
  6315                           
  6316                           ;incstack = 0
  6317  002D3C  0EFA               	movlw	-6
  6318  002D3E  006F FF8C  F045    	movff	plusw1,btemp+10
  6319  002D44  0EFB               	movlw	-5
  6320  002D46  006F FF8C  F046    	movff	plusw1,btemp+11
  6321                           
  6322                           ;stkvar	_s @ sp[(-4)+0]
  6323  002D4C  0EFD               	movlw	-3
  6324  002D4E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6325  002D54  0EFC               	movlw	-4
  6326  002D56  0060  F117  FFE3   	movff	btemp+10,plusw1
  6327                           
  6328                           ;stkvar	_n @ sp[(-4)+-6]
  6329  002D5C  0EF6               	movlw	-10
  6330  002D5E  006F FF8C  F03B    	movff	plusw1,btemp
  6331  002D64  0EF7               	movlw	-9
  6332  002D66  50E3               	movf	plusw1,w,c
  6333  002D68  103B               	iorwf	btemp,w,c
  6334  002D6A  B4D8               	btfsc	status,2,c
  6335  002D6C  D154               	goto	u3900
  6336                           
  6337                           ;stkvar	_c @ sp[(-4)+-4]
  6338                           ;stkvar	_s @ sp[(-4)+0]
  6339  002D6E  0EFC               	movlw	-4
  6340  002D70  006F FF8F FFD9     	movff	plusw1,fsr2l
  6341  002D76  0EFD               	movlw	-3
  6342  002D78  006F FF8F FFDA     	movff	plusw1,fsr2h
  6343  002D7E  0EF8               	movlw	-8
  6344  002D80  006F FF8F FFDF     	movff	plusw1,indf2
  6345                           
  6346                           ;stkvar	_c @ sp[(-4)+-4]
  6347                           ;stkvar	_n @ sp[(-4)+-6]
  6348                           ;stkvar	_s @ sp[(-4)+0]
  6349  002D86  0EFC               	movlw	-4
  6350  002D88  006F FF8C  F045    	movff	plusw1,btemp+10
  6351  002D8E  0EFD               	movlw	-3
  6352  002D90  006F FF8C  F046    	movff	plusw1,btemp+11
  6353  002D96  0EF6               	movlw	-10
  6354  002D98  50E3               	movf	plusw1,w,c
  6355  002D9A  2645               	addwf	btemp+10,f,c
  6356  002D9C  0EF7               	movlw	-9
  6357  002D9E  50E3               	movf	plusw1,w,c
  6358  002DA0  2246               	addwfc	btemp+11,f,c
  6359  002DA2  0EFF               	movlw	255
  6360  002DA4  2445               	addwf	btemp+10,w,c
  6361  002DA6  6ED9               	movwf	fsr2l,c
  6362  002DA8  0EFF               	movlw	255
  6363  002DAA  2046               	addwfc	btemp+11,w,c
  6364  002DAC  6EDA               	movwf	fsr2h,c
  6365  002DAE  0EF8               	movlw	-8
  6366  002DB0  006F FF8F FFDF     	movff	plusw1,indf2
  6367                           
  6368                           ;stkvar	_n @ sp[(-4)+-6]
  6369  002DB6  0EF7               	movlw	-9
  6370  002DB8  50E3               	movf	plusw1,w,c
  6371  002DBA  E108               	bnz	l6638
  6372  002DBC  0EF6               	movlw	-10
  6373  002DBE  006F FF8C  F03B    	movff	plusw1,btemp
  6374  002DC4  0E03               	movlw	3
  6375  002DC6  5E3B               	subwf	btemp,f,c
  6376  002DC8  A0D8               	btfss	status,0,c
  6377  002DCA  D125               	goto	u3900
  6378  002DCC                     l6638:
  6379                           
  6380                           ;stkvar	_c @ sp[(-4)+-4]
  6381                           ;stkvar	_s @ sp[(-4)+0]
  6382  002DCC  0EFC               	movlw	-4
  6383  002DCE  006F FF8C  F045    	movff	plusw1,btemp+10
  6384  002DD4  0EFD               	movlw	-3
  6385  002DD6  006F FF8C  F046    	movff	plusw1,btemp+11
  6386  002DDC  0E01               	movlw	1
  6387  002DDE  2445               	addwf	btemp+10,w,c
  6388  002DE0  6ED9               	movwf	fsr2l,c
  6389  002DE2  0E00               	movlw	0
  6390  002DE4  2046               	addwfc	btemp+11,w,c
  6391  002DE6  6EDA               	movwf	fsr2h,c
  6392  002DE8  0EF8               	movlw	-8
  6393  002DEA  006F FF8F FFDF     	movff	plusw1,indf2
  6394                           
  6395                           ;stkvar	_c @ sp[(-4)+-4]
  6396                           ;stkvar	_s @ sp[(-4)+0]
  6397  002DF0  0EFC               	movlw	-4
  6398  002DF2  006F FF8C  F045    	movff	plusw1,btemp+10
  6399  002DF8  0EFD               	movlw	-3
  6400  002DFA  006F FF8C  F046    	movff	plusw1,btemp+11
  6401  002E00  0E02               	movlw	2
  6402  002E02  2445               	addwf	btemp+10,w,c
  6403  002E04  6ED9               	movwf	fsr2l,c
  6404  002E06  0E00               	movlw	0
  6405  002E08  2046               	addwfc	btemp+11,w,c
  6406  002E0A  6EDA               	movwf	fsr2h,c
  6407  002E0C  0EF8               	movlw	-8
  6408  002E0E  006F FF8F FFDF     	movff	plusw1,indf2
  6409                           
  6410                           ;stkvar	_c @ sp[(-4)+-4]
  6411                           ;stkvar	_n @ sp[(-4)+-6]
  6412                           ;stkvar	_s @ sp[(-4)+0]
  6413  002E14  0EFC               	movlw	-4
  6414  002E16  006F FF8C  F045    	movff	plusw1,btemp+10
  6415  002E1C  0EFD               	movlw	-3
  6416  002E1E  006F FF8C  F046    	movff	plusw1,btemp+11
  6417  002E24  0EF6               	movlw	-10
  6418  002E26  50E3               	movf	plusw1,w,c
  6419  002E28  2645               	addwf	btemp+10,f,c
  6420  002E2A  0EF7               	movlw	-9
  6421  002E2C  50E3               	movf	plusw1,w,c
  6422  002E2E  2246               	addwfc	btemp+11,f,c
  6423  002E30  0EFE               	movlw	254
  6424  002E32  2445               	addwf	btemp+10,w,c
  6425  002E34  6ED9               	movwf	fsr2l,c
  6426  002E36  0EFF               	movlw	255
  6427  002E38  2046               	addwfc	btemp+11,w,c
  6428  002E3A  6EDA               	movwf	fsr2h,c
  6429  002E3C  0EF8               	movlw	-8
  6430  002E3E  006F FF8F FFDF     	movff	plusw1,indf2
  6431                           
  6432                           ;stkvar	_c @ sp[(-4)+-4]
  6433                           ;stkvar	_n @ sp[(-4)+-6]
  6434                           ;stkvar	_s @ sp[(-4)+0]
  6435  002E44  0EFC               	movlw	-4
  6436  002E46  006F FF8C  F045    	movff	plusw1,btemp+10
  6437  002E4C  0EFD               	movlw	-3
  6438  002E4E  006F FF8C  F046    	movff	plusw1,btemp+11
  6439  002E54  0EF6               	movlw	-10
  6440  002E56  50E3               	movf	plusw1,w,c
  6441  002E58  2645               	addwf	btemp+10,f,c
  6442  002E5A  0EF7               	movlw	-9
  6443  002E5C  50E3               	movf	plusw1,w,c
  6444  002E5E  2246               	addwfc	btemp+11,f,c
  6445  002E60  0EFD               	movlw	253
  6446  002E62  2445               	addwf	btemp+10,w,c
  6447  002E64  6ED9               	movwf	fsr2l,c
  6448  002E66  0EFF               	movlw	255
  6449  002E68  2046               	addwfc	btemp+11,w,c
  6450  002E6A  6EDA               	movwf	fsr2h,c
  6451  002E6C  0EF8               	movlw	-8
  6452  002E6E  006F FF8F FFDF     	movff	plusw1,indf2
  6453                           
  6454                           ;stkvar	_n @ sp[(-4)+-6]
  6455  002E74  0EF7               	movlw	-9
  6456  002E76  50E3               	movf	plusw1,w,c
  6457  002E78  E108               	bnz	l6644
  6458  002E7A  0EF6               	movlw	-10
  6459  002E7C  006F FF8C  F03B    	movff	plusw1,btemp
  6460  002E82  0E07               	movlw	7
  6461  002E84  5E3B               	subwf	btemp,f,c
  6462  002E86  A0D8               	btfss	status,0,c
  6463  002E88  D0C6               	goto	u3900
  6464  002E8A                     l6644:
  6465                           
  6466                           ;stkvar	_c @ sp[(-4)+-4]
  6467                           ;stkvar	_s @ sp[(-4)+0]
  6468  002E8A  0EFC               	movlw	-4
  6469  002E8C  006F FF8C  F045    	movff	plusw1,btemp+10
  6470  002E92  0EFD               	movlw	-3
  6471  002E94  006F FF8C  F046    	movff	plusw1,btemp+11
  6472  002E9A  0E03               	movlw	3
  6473  002E9C  2445               	addwf	btemp+10,w,c
  6474  002E9E  6ED9               	movwf	fsr2l,c
  6475  002EA0  0E00               	movlw	0
  6476  002EA2  2046               	addwfc	btemp+11,w,c
  6477  002EA4  6EDA               	movwf	fsr2h,c
  6478  002EA6  0EF8               	movlw	-8
  6479  002EA8  006F FF8F FFDF     	movff	plusw1,indf2
  6480                           
  6481                           ;stkvar	_c @ sp[(-4)+-4]
  6482                           ;stkvar	_n @ sp[(-4)+-6]
  6483                           ;stkvar	_s @ sp[(-4)+0]
  6484  002EAE  0EFC               	movlw	-4
  6485  002EB0  006F FF8C  F045    	movff	plusw1,btemp+10
  6486  002EB6  0EFD               	movlw	-3
  6487  002EB8  006F FF8C  F046    	movff	plusw1,btemp+11
  6488  002EBE  0EF6               	movlw	-10
  6489  002EC0  50E3               	movf	plusw1,w,c
  6490  002EC2  2645               	addwf	btemp+10,f,c
  6491  002EC4  0EF7               	movlw	-9
  6492  002EC6  50E3               	movf	plusw1,w,c
  6493  002EC8  2246               	addwfc	btemp+11,f,c
  6494  002ECA  0EFC               	movlw	252
  6495  002ECC  2445               	addwf	btemp+10,w,c
  6496  002ECE  6ED9               	movwf	fsr2l,c
  6497  002ED0  0EFF               	movlw	255
  6498  002ED2  2046               	addwfc	btemp+11,w,c
  6499  002ED4  6EDA               	movwf	fsr2h,c
  6500  002ED6  0EF8               	movlw	-8
  6501  002ED8  006F FF8F FFDF     	movff	plusw1,indf2
  6502                           
  6503                           ;stkvar	_n @ sp[(-4)+-6]
  6504  002EDE  0EF7               	movlw	-9
  6505  002EE0  50E3               	movf	plusw1,w,c
  6506  002EE2  E108               	bnz	l6650
  6507  002EE4  0EF6               	movlw	-10
  6508  002EE6  006F FF8C  F03B    	movff	plusw1,btemp
  6509  002EEC  0E09               	movlw	9
  6510  002EEE  5E3B               	subwf	btemp,f,c
  6511  002EF0  A0D8               	btfss	status,0,c
  6512  002EF2  D091               	goto	u3900
  6513  002EF4                     l6650:
  6514                           
  6515                           ;stkvar	_s @ sp[(-4)+0]
  6516  002EF4  0EFC               	movlw	-4
  6517  002EF6  006F FF8C  F045    	movff	plusw1,btemp+10
  6518  002EFC  1E45               	comf	btemp+10,f,c
  6519  002EFE  0EFD               	movlw	-3
  6520  002F00  006F FF8C  F046    	movff	plusw1,btemp+11
  6521  002F06  1E46               	comf	btemp+11,f,c
  6522  002F08  2A45               	incf	btemp+10,f,c
  6523  002F0A  B4D8               	btfsc	status,2,c
  6524  002F0C  2A46               	incf	btemp+11,f,c
  6525  002F0E  0E03               	movlw	3
  6526  002F10  1645               	andwf	btemp+10,f,c
  6527  002F12  0E00               	movlw	0
  6528  002F14  1646               	andwf	btemp+11,f,c
  6529                           
  6530                           ;stkvar	_k @ sp[(-4)+2]
  6531  002F16  0EFE               	movlw	-2
  6532  002F18  0060  F117  FFE3   	movff	btemp+10,plusw1
  6533  002F1E  0EFF               	movlw	-1
  6534  002F20  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6535                           
  6536                           ;stkvar	_k @ sp[(-4)+2]
  6537                           ;stkvar	_s @ sp[(-4)+0]
  6538  002F26  0EFC               	movlw	-4
  6539  002F28  50E3               	movf	plusw1,w,c
  6540  002F2A  6E3B               	movwf	btemp,c
  6541  002F2C  0EFE               	movlw	-2
  6542  002F2E  50E3               	movf	plusw1,w,c
  6543  002F30  263B               	addwf	btemp,f,c
  6544  002F32  0EFC               	movlw	-4
  6545  002F34  0060  F0EF  FFE3   	movff	btemp,plusw1
  6546  002F3A  0EFD               	movlw	-3
  6547  002F3C  50E3               	movf	plusw1,w,c
  6548  002F3E  6E3B               	movwf	btemp,c
  6549  002F40  0EFF               	movlw	-1
  6550  002F42  50E3               	movf	plusw1,w,c
  6551  002F44  223B               	addwfc	btemp,f,c
  6552  002F46  0EFD               	movlw	-3
  6553  002F48  0060  F0EF  FFE3   	movff	btemp,plusw1
  6554                           
  6555                           ;stkvar	_k @ sp[(-4)+2]
  6556                           ;stkvar	_n @ sp[(-4)+-6]
  6557  002F4E  0EF6               	movlw	-10
  6558  002F50  50E3               	movf	plusw1,w,c
  6559  002F52  6E3B               	movwf	btemp,c
  6560  002F54  0EFE               	movlw	-2
  6561  002F56  50E3               	movf	plusw1,w,c
  6562  002F58  5E3B               	subwf	btemp,f,c
  6563  002F5A  0EF6               	movlw	-10
  6564  002F5C  0060  F0EF  FFE3   	movff	btemp,plusw1
  6565  002F62  0EF7               	movlw	-9
  6566  002F64  50E3               	movf	plusw1,w,c
  6567  002F66  6E3B               	movwf	btemp,c
  6568  002F68  0EFF               	movlw	-1
  6569  002F6A  50E3               	movf	plusw1,w,c
  6570  002F6C  5A3B               	subwfb	btemp,f,c
  6571  002F6E  0EF7               	movlw	-9
  6572  002F70  0060  F0EF  FFE3   	movff	btemp,plusw1
  6573  002F76  0EFC               	movlw	252
  6574  002F78  6E45               	movwf	btemp+10,c
  6575  002F7A  0EFF               	movlw	255
  6576  002F7C  6E46               	movwf	btemp+11,c
  6577                           
  6578                           ;stkvar	_n @ sp[(-4)+-6]
  6579  002F7E  0EF6               	movlw	-10
  6580  002F80  006F FF8C  F03B    	movff	plusw1,btemp
  6581  002F86  5045               	movf	btemp+10,w,c
  6582  002F88  163B               	andwf	btemp,f,c
  6583  002F8A  0EF6               	movlw	-10
  6584  002F8C  0060  F0EF  FFE3   	movff	btemp,plusw1
  6585  002F92  0EF7               	movlw	-9
  6586  002F94  006F FF8C  F03B    	movff	plusw1,btemp
  6587  002F9A  5046               	movf	btemp+11,w,c
  6588  002F9C  163B               	andwf	btemp,f,c
  6589  002F9E  0EF7               	movlw	-9
  6590  002FA0  D02E               	goto	L17
  6591  002FA2                     l6658:
  6592                           
  6593                           ;stkvar	_c @ sp[(-4)+-4]
  6594                           ;stkvar	_s @ sp[(-4)+0]
  6595  002FA2  0EFC               	movlw	-4
  6596  002FA4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6597  002FAA  0EFD               	movlw	-3
  6598  002FAC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6599  002FB2  0EF8               	movlw	-8
  6600  002FB4  006F FF8F FFDF     	movff	plusw1,indf2
  6601                           
  6602                           ;stkvar	_n @ sp[(-4)+-6]
  6603  002FBA  0EF6               	movlw	-10
  6604  002FBC  006F FF8C  F03B    	movff	plusw1,btemp
  6605  002FC2  0E01               	movlw	1
  6606  002FC4  5E3B               	subwf	btemp,f,c
  6607  002FC6  0EF6               	movlw	-10
  6608  002FC8  0060  F0EF  FFE3   	movff	btemp,plusw1
  6609  002FCE  0EF7               	movlw	-9
  6610  002FD0  006F FF8C  F03B    	movff	plusw1,btemp
  6611  002FD6  0E00               	movlw	0
  6612  002FD8  5A3B               	subwfb	btemp,f,c
  6613  002FDA  0EF7               	movlw	-9
  6614  002FDC  0060  F0EF  FFE3   	movff	btemp,plusw1
  6615                           
  6616                           ;stkvar	_s @ sp[(-4)+0]
  6617  002FE2  0EFC               	movlw	-4
  6618  002FE4  50E3               	movf	plusw1,w,c
  6619  002FE6  0F01               	addlw	1
  6620  002FE8  6E3B               	movwf	btemp,c
  6621  002FEA  0EFC               	movlw	-4
  6622  002FEC  0060  F0EF  FFE3   	movff	btemp,plusw1
  6623  002FF2  6A3B               	clrf	btemp,c
  6624  002FF4  0EFD               	movlw	-3
  6625  002FF6  50E3               	movf	plusw1,w,c
  6626  002FF8  203B               	addwfc	btemp,w,c
  6627  002FFA  6E3B               	movwf	btemp,c
  6628  002FFC  0EFD               	movlw	-3
  6629  002FFE                     L17:
  6630  002FFE  0060  F0EF  FFE3   	movff	btemp,plusw1
  6631                           
  6632                           ;stkvar	_n @ sp[(-4)+-6]
  6633  003004  0EF6               	movlw	-10
  6634  003006  006F FF8C  F03B    	movff	plusw1,btemp
  6635  00300C  0EF7               	movlw	-9
  6636  00300E  50E3               	movf	plusw1,w,c
  6637  003010  103B               	iorwf	btemp,w,c
  6638  003012  A4D8               	btfss	status,2,c
  6639  003014  D7C6               	goto	l6658
  6640  003016                     u3900:
  6641                           
  6642                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6643  003016  0EF6               	movlw	246
  6644  003018  26E1               	addwf	fsr1l,f,c
  6645  00301A  0EFF               	movlw	255
  6646  00301C  22E2               	addwfc	fsr1h,f,c
  6647  00301E  0012               	return		;funcret
  6648  003020                     __end_of_memset:
  6649                           	opt callstack 0
  6650                           
  6651 ;; *************** function _printf *****************
  6652 ;; Defined at:
  6653 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  fmt             1  [STACK] PTR const unsigned char 
  6656 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  ap              2  [STACK] PTR void [1]
  6659 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6660 ;;  ret             2    0        int 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  2  [STACK] int 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6665 ;; Tracked objects:
  6666 ;;		On entry : 3F/3B
  6667 ;;		On exit  : 3F/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6674 ;;Total ram usage:        0 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:   11
  6677 ;; This function calls:
  6678 ;;		_vfprintf
  6679 ;; This function is called by:
  6680 ;;		_eaDogM_WriteString
  6681 ;;		_send_lcd_cmd_dma
  6682 ;; This function uses a reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text31
  6686  004F42                     __ptext31:
  6687                           	opt callstack 0
  6688  004F42                     _printf:
  6689                           	opt callstack 0
  6690                           
  6691                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6692  004F42  52E6               	movf	postinc1,f,c
  6693  004F44  52E6               	movf	postinc1,f,c
  6694                           
  6695                           ;stkvar	?_printf @ sp[(-2)+-3]
  6696                           
  6697                           ;incstack = 0
  6698  004F46  0EFB               	movlw	251
  6699  004F48  24E1               	addwf	fsr1l,w,c
  6700  004F4A  6E45               	movwf	btemp+10,c
  6701  004F4C  0EFF               	movlw	255
  6702  004F4E  20E2               	addwfc	fsr1h,w,c
  6703  004F50  6E46               	movwf	btemp+11,c
  6704  004F52  0E01               	movlw	1
  6705  004F54  2645               	addwf	btemp+10,f,c
  6706  004F56  0E00               	movlw	0
  6707  004F58  2246               	addwfc	btemp+11,f,c
  6708                           
  6709                           ;stkvar	_ap @ sp[(-2)+0]
  6710  004F5A  0EFF               	movlw	-1
  6711  004F5C  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6712  004F62  0EFE               	movlw	-2
  6713  004F64  0060  F117  FFE3   	movff	btemp+10,plusw1
  6714                           
  6715                           ;stkvar	_ap @ sp[(-2)+0]
  6716  004F6A  0EFE               	movlw	254
  6717  004F6C  24E1               	addwf	fsr1l,w,c
  6718  004F6E  6E3B               	movwf	btemp,c
  6719  004F70  0EFF               	movlw	255
  6720  004F72  20E2               	addwfc	fsr1h,w,c
  6721  004F74  6E3C               	movwf	btemp+1,c
  6722  004F76  0060  F0EF  FFE6   	movff	btemp,postinc1
  6723  004F7C  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  6724                           
  6725                           ;stkvar	_fmt @ sp[(-4)+-2]
  6726  004F82  0EFA               	movlw	-6
  6727  004F84  50E3               	movf	plusw1,w,c
  6728  004F86  6EE6               	movwf	postinc1,c
  6729  004F88  0E00               	movlw	0
  6730  004F8A  6EE6               	movwf	postinc1,c
  6731  004F8C  0E00               	movlw	0
  6732  004F8E  6EE6               	movwf	postinc1,c
  6733  004F90  ECAA  F025         	call	_vfprintf	;wreg free
  6734                           
  6735                           ; BSR set to: 0
  6736                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6737  004F94  52E5               	movf	postdec1,f,c
  6738  004F96  52E5               	movf	postdec1,f,c
  6739  004F98  52E5               	movf	postdec1,f,c
  6740  004F9A  50E7               	movf	indf1,w,c
  6741  004F9C  5EE1               	subwf	fsr1l,f,c
  6742  004F9E  0E00               	movlw	0
  6743  004FA0  5AE2               	subwfb	fsr1h,f,c
  6744  004FA2  0012               	return		;funcret
  6745  004FA4                     __end_of_printf:
  6746                           	opt callstack 0
  6747                           
  6748 ;; *************** function _vfprintf *****************
  6749 ;; Defined at:
  6750 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6753 ;;		 -> f(5), NULL(0), 
  6754 ;;  fmt             1  [STACK] PTR const unsigned char 
  6755 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6756 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(20), 
  6757 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6758 ;;		 -> STR_1(17), 
  6759 ;;  ap              2  [STACK] PTR PTR void 
  6760 ;;		 -> ap(2), ap(2), 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  cfmt            1  [STACK] PTR unsigned char 
  6763 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6764 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(20), 
  6765 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6766 ;;		 -> STR_1(17), 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  2  [STACK] int 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 3F/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:   10
  6783 ;; This function calls:
  6784 ;;		_vfpfcnvrt
  6785 ;; This function is called by:
  6786 ;;		_sprintf
  6787 ;;		_printf
  6788 ;; This function uses a reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text32
  6792  004B54                     __ptext32:
  6793                           	opt callstack 0
  6794  004B54                     _vfprintf:
  6795                           	opt callstack 0
  6796                           
  6797                           ; BSR set to: 0
  6798                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6799  004B54  52E6               	movf	postinc1,f,c
  6800                           
  6801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6802                           ;stkvar	_fmt @ sp[(-1)+-3]
  6803                           
  6804                           ;incstack = 0
  6805  004B56  0EFC               	movlw	-4
  6806  004B58  006F FF8C  F046    	movff	plusw1,btemp+11
  6807                           
  6808                           ;stkvar	_cfmt @ sp[(-1)+0]
  6809  004B5E  0EFF               	movlw	-1
  6810  004B60  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6811                           
  6812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6813  004B66  0100               	movlb	0	; () banked
  6814  004B68  6B8C               	clrf	_nout& (0+255),b
  6815  004B6A  6B8D               	clrf	(_nout+1)& (0+255),b
  6816                           
  6817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6818  004B6C  D021               	goto	l6672
  6819  004B6E                     l6670:
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6823                           ;stkvar	_ap @ sp[(-1)+-5]
  6824  004B6E  0EFA               	movlw	-6
  6825  004B70  006F FF8F FFE6     	movff	plusw1,postinc1
  6826  004B76  006F FF8F FFE6     	movff	plusw1,postinc1
  6827                           
  6828                           ;stkvar	_cfmt @ sp[(-3)+0]
  6829  004B7C  0EFD               	movlw	253
  6830  004B7E  24E1               	addwf	fsr1l,w,c
  6831  004B80  6E3B               	movwf	btemp,c
  6832  004B82  0EFF               	movlw	255
  6833  004B84  20E2               	addwfc	fsr1h,w,c
  6834  004B86  6E3C               	movwf	btemp+1,c
  6835  004B88  0060  F0EF  FFE6   	movff	btemp,postinc1
  6836  004B8E  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  6837                           
  6838                           ;stkvar	_fp @ sp[(-5)+-2]
  6839  004B94  0EF9               	movlw	-7
  6840  004B96  006F FF8F FFE6     	movff	plusw1,postinc1
  6841  004B9C  006F FF8F FFE6     	movff	plusw1,postinc1
  6842  004BA2  EC58  F010         	call	_vfpfcnvrt	;wreg free
  6843  004BA6  503B               	movf	btemp,w,c
  6844  004BA8  0100               	movlb	0	; () banked
  6845  004BAA  278C               	addwf	_nout& (0+255),f,b
  6846  004BAC  503C               	movf	btemp+1,w,c
  6847  004BAE  238D               	addwfc	(_nout+1)& (0+255),f,b
  6848  004BB0                     l6672:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6852                           ;stkvar	_cfmt @ sp[(-1)+0]
  6853  004BB0  50E1               	movf	fsr1l,w,c
  6854  004BB2  0FFF               	addlw	-1
  6855  004BB4  6ED9               	movwf	fsr2l,c
  6856  004BB6  50E2               	movf	fsr1h,w,c
  6857  004BB8  6EDA               	movwf	fsr2h,c
  6858  004BBA  0EFF               	movlw	255
  6859  004BBC  22DA               	addwfc	fsr2h,f,c
  6860  004BBE  006F FF7F FFF6     	movff	indf2,tblptrl
  6861  004BC4                     	if	1	;There is more than 1 active tblptr byte
  6862  004BC4  0E20               	movlw	high __smallconst
  6863  004BC6  6EF7               	movwf	tblptrh,c
  6864  004BC8                     	endif
  6865  004BC8                     	if	0	;tblptru may be non-zero
  6866  004BC8                     	endif
  6867  004BC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6868  004BC8  0E00               	movlw	low (__smallconst shr (0+16))
  6869  004BCA  6EF8               	movwf	tblptru,c
  6870  004BCC                     	endif
  6871  004BCC  0008               	tblrd		*
  6872  004BCE  50F5               	movf	tablat,w,c
  6873  004BD0  0900               	iorlw	0
  6874  004BD2  A4D8               	btfss	status,2,c
  6875  004BD4  D7CC               	goto	l6670
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6879  004BD6  0060  F230  F03B   	movff	_nout,btemp
  6880  004BDC  0060  F234  F03C   	movff	_nout+1,btemp+1
  6881                           
  6882                           ; BSR set to: 0
  6883                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6884  004BE2  0EFA               	movlw	250
  6885  004BE4  26E1               	addwf	fsr1l,f,c
  6886  004BE6  0EFF               	movlw	255
  6887  004BE8  22E2               	addwfc	fsr1h,f,c
  6888  004BEA  0012               	return		;funcret
  6889  004BEC                     __end_of_vfprintf:
  6890                           	opt callstack 0
  6891                           
  6892 ;; *************** function _vfpfcnvrt *****************
  6893 ;; Defined at:
  6894 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6897 ;;		 -> f(5), NULL(0), 
  6898 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6899 ;;		 -> cfmt(1), 
  6900 ;;  ap              2  [STACK] PTR PTR void 
  6901 ;;		 -> ap(2), ap(2), 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  ll              8  [STACK] long long 
  6904 ;;  llu             8    0        unsigned long long 
  6905 ;;  f               4    0        unsigned long long 
  6906 ;;  vp              3    0        PTR void 
  6907 ;;  ct              3    0        unsigned char [3]
  6908 ;;  cp              2  [STACK] PTR unsigned char 
  6909 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(86), 
  6910 ;;  i               2    0        int 
  6911 ;;  done            2    0        int 
  6912 ;;  c               1  [STACK] unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  2  [STACK] int 
  6915 ;; Registers used:
  6916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    9
  6929 ;; This function calls:
  6930 ;;		_ctoa
  6931 ;;		_dtoa
  6932 ;;		_fputc
  6933 ;;		_stoa
  6934 ;;		_strncmp
  6935 ;; This function is called by:
  6936 ;;		_vfprintf
  6937 ;; This function uses a reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text33
  6941  0020B0                     __ptext33:
  6942                           	opt callstack 0
  6943  0020B0                     _vfpfcnvrt:
  6944                           	opt callstack 0
  6945                           
  6946                           ; BSR set to: 0
  6947                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6948  0020B0  0E0B               	movlw	11
  6949  0020B2  26E1               	addwf	fsr1l,f,c
  6950  0020B4  0E00               	movlw	0
  6951  0020B6  22E2               	addwfc	fsr1h,f,c
  6952                           
  6953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6954                           ;stkvar	_fmt @ sp[(-11)+-4]
  6955                           
  6956                           ;incstack = 0
  6957  0020B8  0EF1               	movlw	-15
  6958  0020BA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6959  0020C0  0EF2               	movlw	-14
  6960  0020C2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6961  0020C8  006F FF7F FFF6     	movff	indf2,tblptrl
  6962  0020CE                     	if	1	;There is more than 1 active tblptr byte
  6963  0020CE  0E20               	movlw	high __smallconst
  6964  0020D0  6EF7               	movwf	tblptrh,c
  6965  0020D2                     	endif
  6966  0020D2                     	if	0	;tblptru may be non-zero
  6967  0020D2                     	endif
  6968  0020D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6969  0020D2  0E00               	movlw	low (__smallconst shr (0+16))
  6970  0020D4  6EF8               	movwf	tblptru,c
  6971  0020D6                     	endif
  6972  0020D6  0008               	tblrd		*
  6973  0020D8  50F5               	movf	tablat,w,c
  6974  0020DA  0A25               	xorlw	37
  6975  0020DC  A4D8               	btfss	status,2,c
  6976  0020DE  D213               	goto	l6616
  6977                           
  6978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6979                           ;stkvar	_fmt @ sp[(-11)+-4]
  6980  0020E0  0EF1               	movlw	-15
  6981  0020E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6982  0020E8  0EF2               	movlw	-14
  6983  0020EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6984  0020F0  2ADF               	incf	indf2,f,c
  6985                           
  6986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6987  0020F2  6A23               	clrf	_width,c
  6988  0020F4  6A24               	clrf	_width+1,c
  6989  0020F6  6A27               	clrf	_flags,c
  6990  0020F8  6A28               	clrf	_flags+1,c
  6991                           
  6992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6993  0020FA  6825               	setf	_prec,c
  6994  0020FC  6826               	setf	_prec+1,c
  6995                           
  6996                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6997                           ;stkvar	_fmt @ sp[(-11)+-4]
  6998  0020FE  0EF1               	movlw	-15
  6999  002100  006F FF8F FFD9     	movff	plusw1,fsr2l
  7000  002106  0EF2               	movlw	-14
  7001  002108  006F FF8F FFDA     	movff	plusw1,fsr2h
  7002  00210E  006F FF7F FFF6     	movff	indf2,tblptrl
  7003  002114                     	if	1	;There is more than 1 active tblptr byte
  7004  002114  0E20               	movlw	high __smallconst
  7005  002116  6EF7               	movwf	tblptrh,c
  7006  002118                     	endif
  7007  002118                     	if	0	;tblptru may be non-zero
  7008  002118                     	endif
  7009  002118                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7010  002118  0E00               	movlw	low (__smallconst shr (0+16))
  7011  00211A  6EF8               	movwf	tblptru,c
  7012  00211C                     	endif
  7013  00211C  0008               	tblrd		*
  7014  00211E  50F5               	movf	tablat,w,c
  7015  002120  0A63               	xorlw	99
  7016  002122  A4D8               	btfss	status,2,c
  7017  002124  D034               	goto	l6566
  7018                           
  7019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7020                           ;stkvar	_fmt @ sp[(-11)+-4]
  7021  002126  0EF1               	movlw	-15
  7022  002128  006F FF8F FFD9     	movff	plusw1,fsr2l
  7023  00212E  0EF2               	movlw	-14
  7024  002130  006F FF8F FFDA     	movff	plusw1,fsr2h
  7025  002136  2ADF               	incf	indf2,f,c
  7026                           
  7027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7028                           ;stkvar	_ap @ sp[(-11)+-6]
  7029  002138  0EEF               	movlw	-17
  7030  00213A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7031  002140  0EF0               	movlw	-16
  7032  002142  006F FF8F FFDA     	movff	plusw1,fsr2h
  7033  002148  0E02               	movlw	2
  7034  00214A  5EDE               	subwf	postinc2,f,c
  7035  00214C  0E00               	movlw	0
  7036  00214E  5ADD               	subwfb	postdec2,f,c
  7037  002150  006F FF78  F045    	movff	postinc2,btemp+10
  7038  002156  006F FF74  F046    	movff	postdec2,btemp+11
  7039  00215C  0060  F117  FFD9   	movff	btemp+10,fsr2l
  7040  002162  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  7041  002168  50DF               	movf	indf2,w,c
  7042  00216A  6E46               	movwf	btemp+11,c
  7043                           
  7044                           ;stkvar	_c @ sp[(-11)+10]
  7045  00216C  0EFF               	movlw	-1
  7046  00216E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7047                           
  7048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7049                           ;stkvar	_c @ sp[(-11)+10]
  7050  002174  0EFF               	movlw	-1
  7051  002176  50E3               	movf	plusw1,w,c
  7052  002178  6EE6               	movwf	postinc1,c
  7053                           
  7054                           ;stkvar	_fp @ sp[(-12)+-2]
  7055  00217A  0EF2               	movlw	-14
  7056  00217C  006F FF8F FFE6     	movff	plusw1,postinc1
  7057  002182  006F FF8F FFE6     	movff	plusw1,postinc1
  7058  002188  EC8B  F026         	call	_ctoa	;wreg free
  7059  00218C  D1E3               	goto	l1736
  7060  00218E                     l6566:
  7061                           
  7062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7063                           ;stkvar	_fmt @ sp[(-11)+-4]
  7064  00218E  0EF1               	movlw	-15
  7065  002190  006F FF8F FFD9     	movff	plusw1,fsr2l
  7066  002196  0EF2               	movlw	-14
  7067  002198  006F FF8F FFDA     	movff	plusw1,fsr2h
  7068  00219E  006F FF7F FFF6     	movff	indf2,tblptrl
  7069  0021A4                     	if	1	;There is more than 1 active tblptr byte
  7070  0021A4  0E20               	movlw	high __smallconst
  7071  0021A6  6EF7               	movwf	tblptrh,c
  7072  0021A8                     	endif
  7073  0021A8                     	if	0	;tblptru may be non-zero
  7074  0021A8                     	endif
  7075  0021A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7076  0021A8  0E00               	movlw	low (__smallconst shr (0+16))
  7077  0021AA  6EF8               	movwf	tblptru,c
  7078  0021AC                     	endif
  7079  0021AC  0008               	tblrd		*
  7080  0021AE  50F5               	movf	tablat,w,c
  7081  0021B0  0A64               	xorlw	100
  7082  0021B2  B4D8               	btfsc	status,2,c
  7083  0021B4  D014               	goto	u3810
  7084                           
  7085                           ;stkvar	_fmt @ sp[(-11)+-4]
  7086  0021B6  0EF1               	movlw	-15
  7087  0021B8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7088  0021BE  0EF2               	movlw	-14
  7089  0021C0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7090  0021C6  006F FF7F FFF6     	movff	indf2,tblptrl
  7091  0021CC                     	if	1	;There is more than 1 active tblptr byte
  7092  0021CC  0E20               	movlw	high __smallconst
  7093  0021CE  6EF7               	movwf	tblptrh,c
  7094  0021D0                     	endif
  7095  0021D0                     	if	0	;tblptru may be non-zero
  7096  0021D0                     	endif
  7097  0021D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7098  0021D0  0E00               	movlw	low (__smallconst shr (0+16))
  7099  0021D2  6EF8               	movwf	tblptru,c
  7100  0021D4                     	endif
  7101  0021D4  0008               	tblrd		*
  7102  0021D6  50F5               	movf	tablat,w,c
  7103  0021D8  0A69               	xorlw	105
  7104  0021DA  A4D8               	btfss	status,2,c
  7105  0021DC  D073               	goto	l6578
  7106  0021DE                     u3810:
  7107                           
  7108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7109                           ;stkvar	_fmt @ sp[(-11)+-4]
  7110  0021DE  0EF1               	movlw	-15
  7111  0021E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7112  0021E6  0EF2               	movlw	-14
  7113  0021E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7114  0021EE  2ADF               	incf	indf2,f,c
  7115                           
  7116                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7117                           ;stkvar	_ap @ sp[(-11)+-6]
  7118  0021F0  0EEF               	movlw	-17
  7119  0021F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7120  0021F8  0EF0               	movlw	-16
  7121  0021FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7122  002200  0E02               	movlw	2
  7123  002202  5EDE               	subwf	postinc2,f,c
  7124  002204  0E00               	movlw	0
  7125  002206  5ADD               	subwfb	postdec2,f,c
  7126  002208  006F FF78  F045    	movff	postinc2,btemp+10
  7127  00220E  006F FF74  F046    	movff	postdec2,btemp+11
  7128  002214  0060  F117  FFD9   	movff	btemp+10,fsr2l
  7129  00221A  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  7130  002220  006F FF78  F045    	movff	postinc2,btemp+10
  7131  002226  006F FF74  F046    	movff	postdec2,btemp+11
  7132                           
  7133                           ;stkvar	_ll @ sp[(-11)+0]
  7134  00222C  0EF5               	movlw	-11
  7135  00222E  0060  F117  FFE3   	movff	btemp+10,plusw1
  7136  002234  0EF6               	movlw	-10
  7137  002236  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7138  00223C  6A3B               	clrf	btemp,c
  7139  00223E  BEE3               	btfsc	plusw1,7,c
  7140  002240  683B               	setf	btemp,c
  7141  002242  0EF7               	movlw	-9
  7142  002244  0060  F0EF  FFE3   	movff	btemp,plusw1
  7143  00224A  0EF8               	movlw	-8
  7144  00224C  0060  F0EF  FFE3   	movff	btemp,plusw1
  7145  002252  0EF9               	movlw	-7
  7146  002254  0060  F0EF  FFE3   	movff	btemp,plusw1
  7147  00225A  0EFA               	movlw	-6
  7148  00225C  0060  F0EF  FFE3   	movff	btemp,plusw1
  7149  002262  0EFB               	movlw	-5
  7150  002264  0060  F0EF  FFE3   	movff	btemp,plusw1
  7151  00226A  0EFC               	movlw	-4
  7152  00226C  0060  F0EF  FFE3   	movff	btemp,plusw1
  7153  002272                     l6574:
  7154                           
  7155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7156                           ;stkvar	_ll @ sp[(-11)+0]
  7157  002272  50E1               	movf	fsr1l,w,c
  7158  002274  0FF5               	addlw	-11
  7159  002276  6ED9               	movwf	fsr2l,c
  7160  002278  50E2               	movf	fsr1h,w,c
  7161  00227A  6EDA               	movwf	fsr2h,c
  7162  00227C  0EFF               	movlw	255
  7163  00227E  22DA               	addwfc	fsr2h,f,c
  7164  002280  006F FF7B FFE6     	movff	postinc2,postinc1
  7165  002286  006F FF7B FFE6     	movff	postinc2,postinc1
  7166  00228C  006F FF7B FFE6     	movff	postinc2,postinc1
  7167  002292  006F FF7B FFE6     	movff	postinc2,postinc1
  7168  002298  006F FF7B FFE6     	movff	postinc2,postinc1
  7169  00229E  006F FF7B FFE6     	movff	postinc2,postinc1
  7170  0022A4  006F FF7B FFE6     	movff	postinc2,postinc1
  7171  0022AA  006F FF7B FFE6     	movff	postinc2,postinc1
  7172                           
  7173                           ;stkvar	_fp @ sp[(-19)+-2]
  7174  0022B0  0EEB               	movlw	-21
  7175  0022B2  006F FF8F FFE6     	movff	plusw1,postinc1
  7176  0022B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7177  0022BE  ECAF  F012         	call	_dtoa	;wreg free
  7178  0022C2  D148               	goto	l1736
  7179  0022C4                     l6578:
  7180                           
  7181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7182  0022C4  0E02               	movlw	2
  7183  0022C6  6EE6               	movwf	postinc1,c
  7184  0022C8  0E00               	movlw	0
  7185  0022CA  6EE6               	movwf	postinc1,c
  7186  0022CC  0EA5               	movlw	STR_15& (0+255)
  7187  0022CE  6EE6               	movwf	postinc1,c
  7188                           
  7189                           ;stkvar	_fmt @ sp[(-14)+-4]
  7190  0022D0  0EEE               	movlw	-18
  7191  0022D2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7192  0022D8  0EEF               	movlw	-17
  7193  0022DA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7194  0022E0  50DF               	movf	indf2,w,c
  7195  0022E2  6EE6               	movwf	postinc1,c
  7196  0022E4  EC7B  F020         	call	_strncmp	;wreg free
  7197  0022E8  503B               	movf	btemp,w,c
  7198  0022EA  103C               	iorwf	btemp+1,w,c
  7199  0022EC  B4D8               	btfsc	status,2,c
  7200  0022EE  D016               	goto	u3830
  7201  0022F0  0E02               	movlw	2
  7202  0022F2  6EE6               	movwf	postinc1,c
  7203  0022F4  0E00               	movlw	0
  7204  0022F6  6EE6               	movwf	postinc1,c
  7205  0022F8  0EA8               	movlw	STR_19& (0+255)
  7206  0022FA  6EE6               	movwf	postinc1,c
  7207                           
  7208                           ;stkvar	_fmt @ sp[(-14)+-4]
  7209  0022FC  0EEE               	movlw	-18
  7210  0022FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7211  002304  0EEF               	movlw	-17
  7212  002306  006F FF8F FFDA     	movff	plusw1,fsr2h
  7213  00230C  50DF               	movf	indf2,w,c
  7214  00230E  6EE6               	movwf	postinc1,c
  7215  002310  EC7B  F020         	call	_strncmp	;wreg free
  7216  002314  503B               	movf	btemp,w,c
  7217  002316  103C               	iorwf	btemp+1,w,c
  7218  002318  A4D8               	btfss	status,2,c
  7219  00231A  D067               	goto	l6590
  7220  00231C                     u3830:
  7221                           
  7222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7223                           ;stkvar	_fmt @ sp[(-11)+-4]
  7224  00231C  0EF1               	movlw	-15
  7225  00231E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7226  002324  0EF2               	movlw	-14
  7227  002326  006F FF8F FFDA     	movff	plusw1,fsr2h
  7228  00232C  0E02               	movlw	2
  7229  00232E  26DF               	addwf	indf2,f,c
  7230                           
  7231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7232                           ;stkvar	_ap @ sp[(-11)+-6]
  7233  002330  0EEF               	movlw	-17
  7234  002332  006F FF8F FFD9     	movff	plusw1,fsr2l
  7235  002338  0EF0               	movlw	-16
  7236  00233A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7237  002340  0E04               	movlw	4
  7238  002342  5EDE               	subwf	postinc2,f,c
  7239  002344  0E00               	movlw	0
  7240  002346  5ADD               	subwfb	postdec2,f,c
  7241  002348  006F FF78  F045    	movff	postinc2,btemp+10
  7242  00234E  006F FF74  F046    	movff	postdec2,btemp+11
  7243  002354  0060  F117  FFD9   	movff	btemp+10,fsr2l
  7244  00235A  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  7245  002360  006F FF78  F043    	movff	postinc2,btemp+8
  7246  002366  006F FF78  F044    	movff	postinc2,btemp+9
  7247  00236C  006F FF78  F045    	movff	postinc2,btemp+10
  7248  002372  006F FF78  F046    	movff	postinc2,btemp+11
  7249  002378  0060  F10C  F04B   	movff	btemp+8,btemp+16
  7250  00237E  0060  F110  F04C   	movff	btemp+9,btemp+17
  7251  002384  0060  F114  F04D   	movff	btemp+10,btemp+18
  7252  00238A  0060  F118  F04E   	movff	btemp+11,btemp+19
  7253  002390  6A4F               	clrf	btemp+20,c
  7254  002392  BE4E               	btfsc	btemp+19,7,c
  7255  002394  684F               	setf	btemp+20,c
  7256  002396  0060  F13C  F050   	movff	btemp+20,btemp+21
  7257  00239C  0060  F13C  F051   	movff	btemp+20,btemp+22
  7258  0023A2  0060  F13C  F052   	movff	btemp+20,btemp+23
  7259                           
  7260                           ;stkvar	_ll @ sp[(-11)+0]
  7261  0023A8  0EF5               	movlw	-11
  7262  0023AA  0060  F12F  FFE3   	movff	btemp+16,plusw1
  7263  0023B0  0EF6               	movlw	-10
  7264  0023B2  0060  F133  FFE3   	movff	btemp+17,plusw1
  7265  0023B8  0EF7               	movlw	-9
  7266  0023BA  0060  F137  FFE3   	movff	btemp+18,plusw1
  7267  0023C0  0EF8               	movlw	-8
  7268  0023C2  0060  F13B  FFE3   	movff	btemp+19,plusw1
  7269  0023C8  0EF9               	movlw	-7
  7270  0023CA  0060  F13F  FFE3   	movff	btemp+20,plusw1
  7271  0023D0  0EFA               	movlw	-6
  7272  0023D2  0060  F143  FFE3   	movff	btemp+21,plusw1
  7273  0023D8  0EFB               	movlw	-5
  7274  0023DA  0060  F147  FFE3   	movff	btemp+22,plusw1
  7275  0023E0  0EFC               	movlw	-4
  7276  0023E2  0060  F14B  FFE3   	movff	btemp+23,plusw1
  7277  0023E8  D744               	goto	l6574
  7278  0023EA                     l6590:
  7279                           
  7280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7281                           ;stkvar	_fmt @ sp[(-11)+-4]
  7282  0023EA  0EF1               	movlw	-15
  7283  0023EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7284  0023F2  0EF2               	movlw	-14
  7285  0023F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7286  0023FA  006F FF7F FFF6     	movff	indf2,tblptrl
  7287  002400                     	if	1	;There is more than 1 active tblptr byte
  7288  002400  0E20               	movlw	high __smallconst
  7289  002402  6EF7               	movwf	tblptrh,c
  7290  002404                     	endif
  7291  002404                     	if	0	;tblptru may be non-zero
  7292  002404                     	endif
  7293  002404                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7294  002404  0E00               	movlw	low (__smallconst shr (0+16))
  7295  002406  6EF8               	movwf	tblptru,c
  7296  002408                     	endif
  7297  002408  0008               	tblrd		*
  7298  00240A  50F5               	movf	tablat,w,c
  7299  00240C  0A73               	xorlw	115
  7300  00240E  A4D8               	btfss	status,2,c
  7301  002410  D040               	goto	l6600
  7302                           
  7303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7304                           ;stkvar	_fmt @ sp[(-11)+-4]
  7305  002412  0EF1               	movlw	-15
  7306  002414  006F FF8F FFD9     	movff	plusw1,fsr2l
  7307  00241A  0EF2               	movlw	-14
  7308  00241C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7309  002422  2ADF               	incf	indf2,f,c
  7310                           
  7311                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7312                           ;stkvar	_ap @ sp[(-11)+-6]
  7313  002424  0EEF               	movlw	-17
  7314  002426  006F FF8F FFD9     	movff	plusw1,fsr2l
  7315  00242C  0EF0               	movlw	-16
  7316  00242E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7317  002434  0E02               	movlw	2
  7318  002436  5EDE               	subwf	postinc2,f,c
  7319  002438  0E00               	movlw	0
  7320  00243A  5ADD               	subwfb	postdec2,f,c
  7321  00243C  006F FF78  F045    	movff	postinc2,btemp+10
  7322  002442  006F FF74  F046    	movff	postdec2,btemp+11
  7323  002448  0060  F117  FFD9   	movff	btemp+10,fsr2l
  7324  00244E  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  7325  002454  006F FF78  F045    	movff	postinc2,btemp+10
  7326  00245A  006F FF74  F046    	movff	postdec2,btemp+11
  7327                           
  7328                           ;stkvar	_cp @ sp[(-11)+8]
  7329  002460  0EFE               	movlw	-2
  7330  002462  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7331  002468  0EFD               	movlw	-3
  7332  00246A  0060  F117  FFE3   	movff	btemp+10,plusw1
  7333                           
  7334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7335                           ;stkvar	_cp @ sp[(-11)+8]
  7336  002470  0EFD               	movlw	-3
  7337  002472  006F FF8F FFE6     	movff	plusw1,postinc1
  7338  002478  006F FF8F FFE6     	movff	plusw1,postinc1
  7339                           
  7340                           ;stkvar	_fp @ sp[(-13)+-2]
  7341  00247E  0EF1               	movlw	-15
  7342  002480  006F FF8F FFE6     	movff	plusw1,postinc1
  7343  002486  006F FF8F FFE6     	movff	plusw1,postinc1
  7344  00248C  EC78  F019         	call	_stoa	;wreg free
  7345  002490  D061               	goto	l1736
  7346  002492                     l6600:
  7347                           
  7348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7349                           ;stkvar	_fmt @ sp[(-11)+-4]
  7350  002492  0EF1               	movlw	-15
  7351  002494  006F FF8F FFD9     	movff	plusw1,fsr2l
  7352  00249A  0EF2               	movlw	-14
  7353  00249C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7354  0024A2  006F FF7F FFF6     	movff	indf2,tblptrl
  7355  0024A8                     	if	1	;There is more than 1 active tblptr byte
  7356  0024A8  0E20               	movlw	high __smallconst
  7357  0024AA  6EF7               	movwf	tblptrh,c
  7358  0024AC                     	endif
  7359  0024AC                     	if	0	;tblptru may be non-zero
  7360  0024AC                     	endif
  7361  0024AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7362  0024AC  0E00               	movlw	low (__smallconst shr (0+16))
  7363  0024AE  6EF8               	movwf	tblptru,c
  7364  0024B0                     	endif
  7365  0024B0  0008               	tblrd		*
  7366  0024B2  50F5               	movf	tablat,w,c
  7367  0024B4  0A25               	xorlw	37
  7368  0024B6  A4D8               	btfss	status,2,c
  7369  0024B8  D018               	goto	l6610
  7370                           
  7371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7372                           ;stkvar	_fmt @ sp[(-11)+-4]
  7373  0024BA  0EF1               	movlw	-15
  7374  0024BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7375  0024C2  0EF2               	movlw	-14
  7376  0024C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7377  0024CA  2ADF               	incf	indf2,f,c
  7378                           
  7379                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7380                           ;stkvar	_fp @ sp[(-11)+-2]
  7381  0024CC  0EF3               	movlw	-13
  7382  0024CE  006F FF8F FFE6     	movff	plusw1,postinc1
  7383  0024D4  006F FF8F FFE6     	movff	plusw1,postinc1
  7384  0024DA  0E25               	movlw	37
  7385  0024DC  6EE6               	movwf	postinc1,c
  7386  0024DE  0E00               	movlw	0
  7387  0024E0  6EE6               	movwf	postinc1,c
  7388  0024E2  ECCD  F021         	call	_fputc	;wreg free
  7389  0024E6                     l6606:
  7390                           
  7391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7392  0024E6  0E01               	movlw	1
  7393  0024E8  D00A               	goto	L18
  7394  0024EA                     l6610:
  7395                           
  7396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7397                           ;stkvar	_fmt @ sp[(-11)+-4]
  7398  0024EA  0EF1               	movlw	-15
  7399  0024EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7400  0024F2  0EF2               	movlw	-14
  7401  0024F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7402  0024FA  2ADF               	incf	indf2,f,c
  7403                           
  7404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7405  0024FC  0E00               	movlw	0
  7406  0024FE                     L18:
  7407  0024FE  6E3B               	movwf	btemp,c
  7408  002500  0E00               	movlw	0
  7409  002502  6E3C               	movwf	btemp+1,c
  7410  002504  D027               	goto	l1736
  7411  002506                     l6616:
  7412                           
  7413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7414                           ;stkvar	_fp @ sp[(-11)+-2]
  7415  002506  0EF3               	movlw	-13
  7416  002508  006F FF8F FFE6     	movff	plusw1,postinc1
  7417  00250E  006F FF8F FFE6     	movff	plusw1,postinc1
  7418                           
  7419                           ;stkvar	_fmt @ sp[(-13)+-4]
  7420  002514  0EEF               	movlw	-17
  7421  002516  006F FF8F FFD9     	movff	plusw1,fsr2l
  7422  00251C  0EF0               	movlw	-16
  7423  00251E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7424  002524  006F FF7F FFF6     	movff	indf2,tblptrl
  7425  00252A                     	if	1	;There is more than 1 active tblptr byte
  7426  00252A  0E20               	movlw	high __smallconst
  7427  00252C  6EF7               	movwf	tblptrh,c
  7428  00252E                     	endif
  7429  00252E                     	if	0	;tblptru may be non-zero
  7430  00252E                     	endif
  7431  00252E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7432  00252E  0E00               	movlw	low (__smallconst shr (0+16))
  7433  002530  6EF8               	movwf	tblptru,c
  7434  002532                     	endif
  7435  002532  0008               	tblrd		*
  7436  002534  50F5               	movf	tablat,w,c
  7437  002536  6EE6               	movwf	postinc1,c
  7438  002538  0E00               	movlw	0
  7439  00253A  6EE6               	movwf	postinc1,c
  7440  00253C  ECCD  F021         	call	_fputc	;wreg free
  7441                           
  7442                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7443                           ;stkvar	_fmt @ sp[(-11)+-4]
  7444  002540  0EF1               	movlw	-15
  7445  002542  006F FF8F FFD9     	movff	plusw1,fsr2l
  7446  002548  0EF2               	movlw	-14
  7447  00254A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7448  002550  2ADF               	incf	indf2,f,c
  7449  002552  D7C9               	goto	l6606
  7450  002554                     l1736:
  7451                           
  7452                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7453  002554  0EEF               	movlw	239
  7454  002556  26E1               	addwf	fsr1l,f,c
  7455  002558  0EFF               	movlw	255
  7456  00255A  22E2               	addwfc	fsr1h,f,c
  7457  00255C  0012               	return		;funcret
  7458  00255E                     __end_of_vfpfcnvrt:
  7459                           	opt callstack 0
  7460                           
  7461 ;; *************** function _strncmp *****************
  7462 ;; Defined at:
  7463 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  _l              1  [STACK] PTR const unsigned char 
  7466 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7467 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(20), 
  7468 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7469 ;;		 -> STR_1(17), 
  7470 ;;  _r              1  [STACK] PTR const unsigned char 
  7471 ;;		 -> STR_21(3), STR_17(3), 
  7472 ;;  n               2  [STACK] unsigned int 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  r               1  [STACK] PTR const unsigned char 
  7475 ;;		 -> STR_21(3), STR_17(3), 
  7476 ;;  l               1  [STACK] PTR const unsigned char 
  7477 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7478 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(20), 
  7479 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7480 ;;		 -> STR_1(17), 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  2  [STACK] int 
  7483 ;; Registers used:
  7484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    3
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_vfpfcnvrt
  7501 ;; This function uses a reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text34
  7505  0040F6                     __ptext34:
  7506                           	opt callstack 0
  7507  0040F6                     _strncmp:
  7508                           	opt callstack 0
  7509                           
  7510                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7511  0040F6  52E6               	movf	postinc1,f,c
  7512  0040F8  52E6               	movf	postinc1,f,c
  7513                           
  7514                           ;stkvar	__l @ sp[(-2)+-1]
  7515                           
  7516                           ;incstack = 0
  7517  0040FA  0EFD               	movlw	-3
  7518  0040FC  006F FF8C  F046    	movff	plusw1,btemp+11
  7519                           
  7520                           ;stkvar	_l @ sp[(-2)+1]
  7521  004102  0EFF               	movlw	-1
  7522  004104  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7523                           
  7524                           ;stkvar	__r @ sp[(-2)+-2]
  7525  00410A  0EFC               	movlw	-4
  7526  00410C  006F FF8C  F046    	movff	plusw1,btemp+11
  7527                           
  7528                           ;stkvar	_r @ sp[(-2)+0]
  7529  004112  0EFE               	movlw	-2
  7530  004114  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7531                           
  7532                           ;stkvar	_n @ sp[(-2)+-4]
  7533  00411A  0EFA               	movlw	-6
  7534  00411C  006F FF8C  F03B    	movff	plusw1,btemp
  7535  004122  0E01               	movlw	1
  7536  004124  5E3B               	subwf	btemp,f,c
  7537  004126  0EFA               	movlw	-6
  7538  004128  0060  F0EF  FFE3   	movff	btemp,plusw1
  7539  00412E  0EFB               	movlw	-5
  7540  004130  006F FF8C  F03B    	movff	plusw1,btemp
  7541  004136  0E00               	movlw	0
  7542  004138  5A3B               	subwfb	btemp,f,c
  7543  00413A  0EFB               	movlw	-5
  7544  00413C  0060  F0EF  FFE3   	movff	btemp,plusw1
  7545  004142  0EFA               	movlw	-6
  7546  004144  28E3               	incf	plusw1,w,c
  7547  004146  E121               	bnz	l4900
  7548  004148  0EFB               	movlw	-5
  7549  00414A  28E3               	incf	plusw1,w,c
  7550  00414C  A4D8               	btfss	status,2,c
  7551  00414E  D01D               	goto	l4900
  7552  004150  0E00               	movlw	0
  7553  004152  6E3B               	movwf	btemp,c
  7554  004154  0E00               	movlw	0
  7555  004156  6E3C               	movwf	btemp+1,c
  7556  004158  D091               	goto	l2485
  7557  00415A                     l4896:
  7558                           
  7559                           ;stkvar	_l @ sp[(-2)+1]
  7560  00415A  0EFF               	movlw	-1
  7561  00415C  2AE3               	incf	plusw1,f,c
  7562                           
  7563                           ;stkvar	_r @ sp[(-2)+0]
  7564  00415E  0EFE               	movlw	-2
  7565  004160  2AE3               	incf	plusw1,f,c
  7566                           
  7567                           ;stkvar	_n @ sp[(-2)+-4]
  7568  004162  0EFA               	movlw	-6
  7569  004164  006F FF8C  F03B    	movff	plusw1,btemp
  7570  00416A  0E01               	movlw	1
  7571  00416C  5E3B               	subwf	btemp,f,c
  7572  00416E  0EFA               	movlw	-6
  7573  004170  0060  F0EF  FFE3   	movff	btemp,plusw1
  7574  004176  0EFB               	movlw	-5
  7575  004178  006F FF8C  F03B    	movff	plusw1,btemp
  7576  00417E  0E00               	movlw	0
  7577  004180  5A3B               	subwfb	btemp,f,c
  7578  004182  0EFB               	movlw	-5
  7579  004184  0060  F0EF  FFE3   	movff	btemp,plusw1
  7580  00418A                     l4900:
  7581                           
  7582                           ;stkvar	_l @ sp[(-2)+1]
  7583  00418A  50E1               	movf	fsr1l,w,c
  7584  00418C  0FFF               	addlw	-1
  7585  00418E  6ED9               	movwf	fsr2l,c
  7586  004190  50E2               	movf	fsr1h,w,c
  7587  004192  6EDA               	movwf	fsr2h,c
  7588  004194  0EFF               	movlw	255
  7589  004196  22DA               	addwfc	fsr2h,f,c
  7590  004198  006F FF7F FFF6     	movff	indf2,tblptrl
  7591  00419E                     	if	1	;There is more than 1 active tblptr byte
  7592  00419E  0E20               	movlw	high __smallconst
  7593  0041A0  6EF7               	movwf	tblptrh,c
  7594  0041A2                     	endif
  7595  0041A2                     	if	0	;tblptru may be non-zero
  7596  0041A2                     	endif
  7597  0041A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7598  0041A2  0E00               	movlw	low (__smallconst shr (0+16))
  7599  0041A4  6EF8               	movwf	tblptru,c
  7600  0041A6                     	endif
  7601  0041A6  0008               	tblrd		*
  7602  0041A8  50F5               	movf	tablat,w,c
  7603  0041AA  0900               	iorlw	0
  7604  0041AC  B4D8               	btfsc	status,2,c
  7605  0041AE  D041               	goto	u2470
  7606                           
  7607                           ;stkvar	_r @ sp[(-2)+0]
  7608  0041B0  50E1               	movf	fsr1l,w,c
  7609  0041B2  0FFE               	addlw	-2
  7610  0041B4  6ED9               	movwf	fsr2l,c
  7611  0041B6  50E2               	movf	fsr1h,w,c
  7612  0041B8  6EDA               	movwf	fsr2h,c
  7613  0041BA  0EFF               	movlw	255
  7614  0041BC  22DA               	addwfc	fsr2h,f,c
  7615  0041BE  006F FF7F FFF6     	movff	indf2,tblptrl
  7616  0041C4                     	if	1	;There is more than 1 active tblptr byte
  7617  0041C4  0E20               	movlw	high __smallconst
  7618  0041C6  6EF7               	movwf	tblptrh,c
  7619  0041C8                     	endif
  7620  0041C8                     	if	0	;tblptru may be non-zero
  7621  0041C8                     	endif
  7622  0041C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7623  0041C8  0E00               	movlw	low (__smallconst shr (0+16))
  7624  0041CA  6EF8               	movwf	tblptru,c
  7625  0041CC                     	endif
  7626  0041CC  0008               	tblrd		*
  7627  0041CE  50F5               	movf	tablat,w,c
  7628  0041D0  0900               	iorlw	0
  7629  0041D2  B4D8               	btfsc	status,2,c
  7630  0041D4  D02E               	goto	u2470
  7631                           
  7632                           ;stkvar	_n @ sp[(-2)+-4]
  7633  0041D6  0EFA               	movlw	-6
  7634  0041D8  006F FF8C  F03B    	movff	plusw1,btemp
  7635  0041DE  0EFB               	movlw	-5
  7636  0041E0  50E3               	movf	plusw1,w,c
  7637  0041E2  103B               	iorwf	btemp,w,c
  7638  0041E4  B4D8               	btfsc	status,2,c
  7639  0041E6  D025               	goto	u2470
  7640                           
  7641                           ;stkvar	_l @ sp[(-2)+1]
  7642  0041E8  50E1               	movf	fsr1l,w,c
  7643  0041EA  0FFF               	addlw	-1
  7644  0041EC  6ED9               	movwf	fsr2l,c
  7645  0041EE  50E2               	movf	fsr1h,w,c
  7646  0041F0  6EDA               	movwf	fsr2h,c
  7647  0041F2  0EFF               	movlw	255
  7648  0041F4  22DA               	addwfc	fsr2h,f,c
  7649  0041F6  006F FF7F FFF6     	movff	indf2,tblptrl
  7650  0041FC                     	if	1	;There is more than 1 active tblptr byte
  7651  0041FC  0E20               	movlw	high __smallconst
  7652  0041FE  6EF7               	movwf	tblptrh,c
  7653  004200                     	endif
  7654  004200                     	if	0	;tblptru may be non-zero
  7655  004200                     	endif
  7656  004200                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7657  004200  0E00               	movlw	low (__smallconst shr (0+16))
  7658  004202  6EF8               	movwf	tblptru,c
  7659  004204                     	endif
  7660  004204  0008               	tblrd		*
  7661  004206  006F FFD4  F046    	movff	tablat,btemp+11
  7662                           
  7663                           ;stkvar	_r @ sp[(-2)+0]
  7664  00420C  50E1               	movf	fsr1l,w,c
  7665  00420E  0FFE               	addlw	-2
  7666  004210  6ED9               	movwf	fsr2l,c
  7667  004212  50E2               	movf	fsr1h,w,c
  7668  004214  6EDA               	movwf	fsr2h,c
  7669  004216  0EFF               	movlw	255
  7670  004218  22DA               	addwfc	fsr2h,f,c
  7671  00421A  006F FF7F FFF6     	movff	indf2,tblptrl
  7672  004220                     	if	1	;There is more than 1 active tblptr byte
  7673  004220  0E20               	movlw	high __smallconst
  7674  004222  6EF7               	movwf	tblptrh,c
  7675  004224                     	endif
  7676  004224                     	if	0	;tblptru may be non-zero
  7677  004224                     	endif
  7678  004224                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7679  004224  0E00               	movlw	low (__smallconst shr (0+16))
  7680  004226  6EF8               	movwf	tblptru,c
  7681  004228                     	endif
  7682  004228  0008               	tblrd		*
  7683  00422A  50F5               	movf	tablat,w,c
  7684  00422C  1846               	xorwf	btemp+11,w,c
  7685  00422E  B4D8               	btfsc	status,2,c
  7686  004230  D794               	goto	l4896
  7687  004232                     u2470:
  7688                           
  7689                           ;stkvar	_l @ sp[(-2)+1]
  7690  004232  50E1               	movf	fsr1l,w,c
  7691  004234  0FFF               	addlw	-1
  7692  004236  6ED9               	movwf	fsr2l,c
  7693  004238  50E2               	movf	fsr1h,w,c
  7694  00423A  6EDA               	movwf	fsr2h,c
  7695  00423C  0EFF               	movlw	255
  7696  00423E  22DA               	addwfc	fsr2h,f,c
  7697  004240  006F FF7F FFF6     	movff	indf2,tblptrl
  7698  004246                     	if	1	;There is more than 1 active tblptr byte
  7699  004246  0E20               	movlw	high __smallconst
  7700  004248  6EF7               	movwf	tblptrh,c
  7701  00424A                     	endif
  7702  00424A                     	if	0	;tblptru may be non-zero
  7703  00424A                     	endif
  7704  00424A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7705  00424A  0E00               	movlw	low (__smallconst shr (0+16))
  7706  00424C  6EF8               	movwf	tblptru,c
  7707  00424E                     	endif
  7708  00424E  0008               	tblrd		*
  7709  004250  50F5               	movf	tablat,w,c
  7710  004252  6E3B               	movwf	btemp,c
  7711  004254  6A3C               	clrf	btemp+1,c
  7712                           
  7713                           ;stkvar	_r @ sp[(-2)+0]
  7714  004256  50E1               	movf	fsr1l,w,c
  7715  004258  0FFE               	addlw	-2
  7716  00425A  6ED9               	movwf	fsr2l,c
  7717  00425C  50E2               	movf	fsr1h,w,c
  7718  00425E  6EDA               	movwf	fsr2h,c
  7719  004260  0EFF               	movlw	255
  7720  004262  22DA               	addwfc	fsr2h,f,c
  7721  004264  006F FF7F FFF6     	movff	indf2,tblptrl
  7722  00426A                     	if	1	;There is more than 1 active tblptr byte
  7723  00426A  0E20               	movlw	high __smallconst
  7724  00426C  6EF7               	movwf	tblptrh,c
  7725  00426E                     	endif
  7726  00426E                     	if	0	;tblptru may be non-zero
  7727  00426E                     	endif
  7728  00426E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7729  00426E  0E00               	movlw	low (__smallconst shr (0+16))
  7730  004270  6EF8               	movwf	tblptru,c
  7731  004272                     	endif
  7732  004272  0008               	tblrd		*
  7733  004274  50F5               	movf	tablat,w,c
  7734  004276  5E3B               	subwf	btemp,f,c
  7735  004278  0E00               	movlw	0
  7736  00427A  5A3C               	subwfb	btemp+1,f,c
  7737  00427C                     l2485:
  7738                           
  7739                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  7740  00427C  0EFA               	movlw	250
  7741  00427E  26E1               	addwf	fsr1l,f,c
  7742  004280  0EFF               	movlw	255
  7743  004282  22E2               	addwfc	fsr1h,f,c
  7744  004284  0012               	return		;funcret
  7745  004286                     __end_of_strncmp:
  7746                           	opt callstack 0
  7747                           
  7748 ;; *************** function _stoa *****************
  7749 ;; Defined at:
  7750 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7753 ;;		 -> f(5), NULL(0), 
  7754 ;;  s               2  [STACK] PTR unsigned char 
  7755 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(86), 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  nuls            7  [STACK] unsigned char [7]
  7758 ;;  l               2  [STACK] int 
  7759 ;;  p               2  [STACK] int 
  7760 ;;  cp              2  [STACK] PTR unsigned char 
  7761 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  7762 ;;		 -> V(86), 
  7763 ;;  w               2  [STACK] int 
  7764 ;;  i               2  [STACK] int 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  2  [STACK] int 
  7767 ;; Registers used:
  7768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7778 ;;Total ram usage:        0 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    6
  7781 ;; This function calls:
  7782 ;;		_fputc
  7783 ;;		_strlen
  7784 ;; This function is called by:
  7785 ;;		_vfpfcnvrt
  7786 ;; This function uses a reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text35
  7790  0032F0                     __ptext35:
  7791                           	opt callstack 0
  7792  0032F0                     _stoa:
  7793                           	opt callstack 0
  7794                           
  7795                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7796  0032F0  0E11               	movlw	17
  7797  0032F2  26E1               	addwf	fsr1l,f,c
  7798  0032F4  0E00               	movlw	0
  7799  0032F6  22E2               	addwfc	fsr1h,f,c
  7800                           
  7801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7802                           
  7803                           ;incstack = 0
  7804  0032F8  EE20  F0E6         	lfsr	2,stoa@F1142
  7805                           
  7806                           ;stkvar	_nuls @ sp[(-17)+0]
  7807  0032FC  0E07               	movlw	7
  7808  0032FE  6E3B               	movwf	btemp,c
  7809  003300  0EEF               	movlw	-17
  7810  003302                     us368999:
  7811  003302  006F FF7B FFE3     	movff	postinc2,plusw1
  7812  003308  28E8               	incf	wreg,w,c
  7813  00330A  2E3B               	decfsz	btemp,f,c
  7814  00330C  D7FA               	bra	us368999
  7815                           
  7816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7817                           ;stkvar	_s @ sp[(-17)+-4]
  7818  00330E  0EEB               	movlw	-21
  7819  003310  006F FF8C  F045    	movff	plusw1,btemp+10
  7820  003316  0EEC               	movlw	-20
  7821  003318  006F FF8C  F046    	movff	plusw1,btemp+11
  7822                           
  7823                           ;stkvar	_cp @ sp[(-17)+11]
  7824  00331E  0EFB               	movlw	-5
  7825  003320  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7826  003326  0EFA               	movlw	-6
  7827  003328  0060  F117  FFE3   	movff	btemp+10,plusw1
  7828                           
  7829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7830                           ;stkvar	_cp @ sp[(-17)+11]
  7831  00332E  0EFA               	movlw	-6
  7832  003330  006F FF8C  F03B    	movff	plusw1,btemp
  7833  003336  0EFB               	movlw	-5
  7834  003338  50E3               	movf	plusw1,w,c
  7835  00333A  103B               	iorwf	btemp,w,c
  7836  00333C  A4D8               	btfss	status,2,c
  7837  00333E  D00E               	goto	l6504
  7838                           
  7839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7840                           ;stkvar	_nuls @ sp[(-17)+0]
  7841  003340  0EEF               	movlw	239
  7842  003342  24E1               	addwf	fsr1l,w,c
  7843  003344  6E45               	movwf	btemp+10,c
  7844  003346  0EFF               	movlw	255
  7845  003348  20E2               	addwfc	fsr1h,w,c
  7846  00334A  6E46               	movwf	btemp+11,c
  7847                           
  7848                           ;stkvar	_cp @ sp[(-17)+11]
  7849  00334C  0EFB               	movlw	-5
  7850  00334E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7851  003354  0EFA               	movlw	-6
  7852  003356  0060  F117  FFE3   	movff	btemp+10,plusw1
  7853  00335C                     l6504:
  7854                           
  7855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7856                           ;stkvar	_cp @ sp[(-17)+11]
  7857  00335C  0EFA               	movlw	-6
  7858  00335E  006F FF8F FFE6     	movff	plusw1,postinc1
  7859  003364  006F FF8F FFE6     	movff	plusw1,postinc1
  7860  00336A  ECBB  F024         	call	_strlen	;wreg free
  7861                           
  7862                           ;stkvar	_l @ sp[(-17)+7]
  7863  00336E  0EF6               	movlw	-10
  7864  003370  0060  F0EF  FFE3   	movff	btemp,plusw1
  7865  003376  0EF7               	movlw	-9
  7866  003378  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  7867                           
  7868                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7869                           ;stkvar	_p @ sp[(-17)+9]
  7870  00337E  0EF8               	movlw	-8
  7871  003380  0060  F097  FFE3   	movff	_prec,plusw1
  7872  003386  0EF9               	movlw	-7
  7873  003388  0060  F09B  FFE3   	movff	_prec+1,plusw1
  7874                           
  7875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7876                           ;stkvar	_p @ sp[(-17)+9]
  7877  00338E  0EF9               	movlw	-7
  7878  003390  BEE3               	btfsc	plusw1,7,c
  7879  003392  D023               	goto	l1717
  7880                           
  7881                           ;stkvar	_l @ sp[(-17)+7]
  7882                           ;stkvar	_p @ sp[(-17)+9]
  7883  003394  50E1               	movf	fsr1l,w,c
  7884  003396  0FF8               	addlw	-8
  7885  003398  6ED9               	movwf	fsr2l,c
  7886  00339A  50E2               	movf	fsr1h,w,c
  7887  00339C  6EDA               	movwf	fsr2h,c
  7888  00339E  0EFF               	movlw	255
  7889  0033A0  22DA               	addwfc	fsr2h,f,c
  7890  0033A2  0EF6               	movlw	-10
  7891  0033A4  50E3               	movf	plusw1,w,c
  7892  0033A6  5CDE               	subwf	postinc2,w,c
  7893  0033A8  50DE               	movf	postinc2,w,c
  7894  0033AA  0A80               	xorlw	128
  7895  0033AC  6E3B               	movwf	btemp,c
  7896  0033AE  0EF7               	movlw	-9
  7897  0033B0  50E3               	movf	plusw1,w,c
  7898  0033B2  0A80               	xorlw	128
  7899  0033B4  583B               	subwfb	btemp,w,c
  7900  0033B6  B0D8               	btfsc	status,0,c
  7901  0033B8  D010               	goto	l1717
  7902                           
  7903                           ;stkvar	_p @ sp[(-17)+9]
  7904                           ;stkvar	_l @ sp[(-17)+7]
  7905  0033BA  0EF8               	movlw	-8
  7906  0033BC  006F FF8C  F03B    	movff	plusw1,btemp
  7907  0033C2  0EF6               	movlw	-10
  7908  0033C4  0060  F0EF  FFE3   	movff	btemp,plusw1
  7909  0033CA  0EF9               	movlw	-7
  7910  0033CC  006F FF8C  F03B    	movff	plusw1,btemp
  7911  0033D2  0EF7               	movlw	-9
  7912  0033D4  0060  F0EF  FFE3   	movff	btemp,plusw1
  7913  0033DA                     l1717:
  7914                           
  7915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7916                           ;stkvar	_l @ sp[(-17)+7]
  7917                           ;stkvar	_p @ sp[(-17)+9]
  7918  0033DA  0EF6               	movlw	-10
  7919  0033DC  006F FF8C  F03B    	movff	plusw1,btemp
  7920  0033E2  0EF8               	movlw	-8
  7921  0033E4  0060  F0EF  FFE3   	movff	btemp,plusw1
  7922  0033EA  0EF7               	movlw	-9
  7923  0033EC  006F FF8C  F03B    	movff	plusw1,btemp
  7924  0033F2  0EF9               	movlw	-7
  7925  0033F4  0060  F0EF  FFE3   	movff	btemp,plusw1
  7926                           
  7927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7928                           ;stkvar	_w @ sp[(-17)+13]
  7929  0033FA  0EFC               	movlw	-4
  7930  0033FC  0060  F08F  FFE3   	movff	_width,plusw1
  7931  003402  0EFD               	movlw	-3
  7932  003404  0060  F093  FFE3   	movff	_width+1,plusw1
  7933                           
  7934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7935  00340A  A027               	btfss	_flags,0,c
  7936  00340C  D01F               	goto	l6524
  7937  00340E  D031               	goto	u3730
  7938  003410                     l6520:
  7939                           
  7940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7941                           ;stkvar	_fp @ sp[(-17)+-2]
  7942  003410  0EED               	movlw	-19
  7943  003412  006F FF8F FFE6     	movff	plusw1,postinc1
  7944  003418  006F FF8F FFE6     	movff	plusw1,postinc1
  7945  00341E  0E20               	movlw	32
  7946  003420  6EE6               	movwf	postinc1,c
  7947  003422  0E00               	movlw	0
  7948  003424  6EE6               	movwf	postinc1,c
  7949  003426  ECCD  F021         	call	_fputc	;wreg free
  7950                           
  7951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7952                           ;stkvar	_l @ sp[(-17)+7]
  7953  00342A  0EF6               	movlw	-10
  7954  00342C  50E3               	movf	plusw1,w,c
  7955  00342E  0F01               	addlw	1
  7956  003430  6E3B               	movwf	btemp,c
  7957  003432  0EF6               	movlw	-10
  7958  003434  0060  F0EF  FFE3   	movff	btemp,plusw1
  7959  00343A  6A3B               	clrf	btemp,c
  7960  00343C  0EF7               	movlw	-9
  7961  00343E  50E3               	movf	plusw1,w,c
  7962  003440  203B               	addwfc	btemp,w,c
  7963  003442  6E3B               	movwf	btemp,c
  7964  003444  0EF7               	movlw	-9
  7965  003446  0060  F0EF  FFE3   	movff	btemp,plusw1
  7966  00344C                     l6524:
  7967                           
  7968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7969                           ;stkvar	_w @ sp[(-17)+13]
  7970                           ;stkvar	_l @ sp[(-17)+7]
  7971  00344C  50E1               	movf	fsr1l,w,c
  7972  00344E  0FF6               	addlw	-10
  7973  003450  6ED9               	movwf	fsr2l,c
  7974  003452  50E2               	movf	fsr1h,w,c
  7975  003454  6EDA               	movwf	fsr2h,c
  7976  003456  0EFF               	movlw	255
  7977  003458  22DA               	addwfc	fsr2h,f,c
  7978  00345A  0EFC               	movlw	-4
  7979  00345C  50E3               	movf	plusw1,w,c
  7980  00345E  5CDE               	subwf	postinc2,w,c
  7981  003460  50DE               	movf	postinc2,w,c
  7982  003462  0A80               	xorlw	128
  7983  003464  6E3B               	movwf	btemp,c
  7984  003466  0EFD               	movlw	-3
  7985  003468  50E3               	movf	plusw1,w,c
  7986  00346A  0A80               	xorlw	128
  7987  00346C  583B               	subwfb	btemp,w,c
  7988  00346E  A0D8               	btfss	status,0,c
  7989  003470  D7CF               	goto	l6520
  7990  003472                     u3730:
  7991                           
  7992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7993                           ;stkvar	_i @ sp[(-17)+15]
  7994  003472  0EFE               	movlw	-2
  7995  003474  6AE3               	clrf	plusw1,c
  7996  003476  0EFF               	movlw	-1
  7997  003478  6AE3               	clrf	plusw1,c
  7998                           
  7999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8000  00347A  D045               	goto	l6534
  8001  00347C                     l6528:
  8002                           
  8003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8004                           ;stkvar	_fp @ sp[(-17)+-2]
  8005  00347C  0EED               	movlw	-19
  8006  00347E  006F FF8F FFE6     	movff	plusw1,postinc1
  8007  003484  006F FF8F FFE6     	movff	plusw1,postinc1
  8008                           
  8009                           ;stkvar	_cp @ sp[(-19)+11]
  8010  00348A  0EF8               	movlw	-8
  8011  00348C  006F FF8F FFF6     	movff	plusw1,tblptrl
  8012  003492  0EF9               	movlw	-7
  8013  003494  006F FF8F FFF7     	movff	plusw1,tblptrh
  8014  00349A  0E00               	movlw	low (__smallconst shr (0+16))
  8015  00349C  6EF8               	movwf	tblptru,c
  8016  00349E  0E1F               	movlw	(high __ramtop+-1)
  8017  0034A0  64F7               	cpfsgt	tblptrh,c
  8018  0034A2  D003               	bra	u3747
  8019  0034A4  0008               	tblrd		*
  8020  0034A6  50F5               	movf	tablat,w,c
  8021  0034A8  D007               	bra	u3740
  8022  0034AA                     u3747:
  8023  0034AA  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8024  0034B0  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8025  0034B6  50EF               	movf	indf0,w,c
  8026  0034B8                     u3740:
  8027  0034B8  6EE6               	movwf	postinc1,c
  8028  0034BA  0E00               	movlw	0
  8029  0034BC  6EE6               	movwf	postinc1,c
  8030  0034BE  ECCD  F021         	call	_fputc	;wreg free
  8031                           
  8032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8033                           ;stkvar	_cp @ sp[(-17)+11]
  8034  0034C2  0EFA               	movlw	-6
  8035  0034C4  50E3               	movf	plusw1,w,c
  8036  0034C6  0F01               	addlw	1
  8037  0034C8  6E3B               	movwf	btemp,c
  8038  0034CA  0EFA               	movlw	-6
  8039  0034CC  0060  F0EF  FFE3   	movff	btemp,plusw1
  8040  0034D2  6A3B               	clrf	btemp,c
  8041  0034D4  0EFB               	movlw	-5
  8042  0034D6  50E3               	movf	plusw1,w,c
  8043  0034D8  203B               	addwfc	btemp,w,c
  8044  0034DA  6E3B               	movwf	btemp,c
  8045  0034DC  0EFB               	movlw	-5
  8046  0034DE  0060  F0EF  FFE3   	movff	btemp,plusw1
  8047                           
  8048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8049                           ;stkvar	_i @ sp[(-17)+15]
  8050  0034E4  0EFE               	movlw	-2
  8051  0034E6  50E3               	movf	plusw1,w,c
  8052  0034E8  0F01               	addlw	1
  8053  0034EA  6E3B               	movwf	btemp,c
  8054  0034EC  0EFE               	movlw	-2
  8055  0034EE  0060  F0EF  FFE3   	movff	btemp,plusw1
  8056  0034F4  6A3B               	clrf	btemp,c
  8057  0034F6  0EFF               	movlw	-1
  8058  0034F8  50E3               	movf	plusw1,w,c
  8059  0034FA  203B               	addwfc	btemp,w,c
  8060  0034FC  6E3B               	movwf	btemp,c
  8061  0034FE  0EFF               	movlw	-1
  8062  003500  0060  F0EF  FFE3   	movff	btemp,plusw1
  8063  003506                     l6534:
  8064                           
  8065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8066                           ;stkvar	_p @ sp[(-17)+9]
  8067                           ;stkvar	_i @ sp[(-17)+15]
  8068  003506  50E1               	movf	fsr1l,w,c
  8069  003508  0FFE               	addlw	-2
  8070  00350A  6ED9               	movwf	fsr2l,c
  8071  00350C  50E2               	movf	fsr1h,w,c
  8072  00350E  6EDA               	movwf	fsr2h,c
  8073  003510  0EFF               	movlw	255
  8074  003512  22DA               	addwfc	fsr2h,f,c
  8075  003514  0EF8               	movlw	-8
  8076  003516  50E3               	movf	plusw1,w,c
  8077  003518  5CDE               	subwf	postinc2,w,c
  8078  00351A  50DE               	movf	postinc2,w,c
  8079  00351C  0A80               	xorlw	128
  8080  00351E  6E3B               	movwf	btemp,c
  8081  003520  0EF9               	movlw	-7
  8082  003522  50E3               	movf	plusw1,w,c
  8083  003524  0A80               	xorlw	128
  8084  003526  583B               	subwfb	btemp,w,c
  8085  003528  A0D8               	btfss	status,0,c
  8086  00352A  D7A8               	goto	l6528
  8087                           
  8088                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8089  00352C  B027               	btfsc	_flags,0,c
  8090  00352E  D01F               	goto	l6542
  8091  003530  D031               	goto	u3770
  8092  003532                     l6538:
  8093                           
  8094                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8095                           ;stkvar	_fp @ sp[(-17)+-2]
  8096  003532  0EED               	movlw	-19
  8097  003534  006F FF8F FFE6     	movff	plusw1,postinc1
  8098  00353A  006F FF8F FFE6     	movff	plusw1,postinc1
  8099  003540  0E20               	movlw	32
  8100  003542  6EE6               	movwf	postinc1,c
  8101  003544  0E00               	movlw	0
  8102  003546  6EE6               	movwf	postinc1,c
  8103  003548  ECCD  F021         	call	_fputc	;wreg free
  8104                           
  8105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8106                           ;stkvar	_l @ sp[(-17)+7]
  8107  00354C  0EF6               	movlw	-10
  8108  00354E  50E3               	movf	plusw1,w,c
  8109  003550  0F01               	addlw	1
  8110  003552  6E3B               	movwf	btemp,c
  8111  003554  0EF6               	movlw	-10
  8112  003556  0060  F0EF  FFE3   	movff	btemp,plusw1
  8113  00355C  6A3B               	clrf	btemp,c
  8114  00355E  0EF7               	movlw	-9
  8115  003560  50E3               	movf	plusw1,w,c
  8116  003562  203B               	addwfc	btemp,w,c
  8117  003564  6E3B               	movwf	btemp,c
  8118  003566  0EF7               	movlw	-9
  8119  003568  0060  F0EF  FFE3   	movff	btemp,plusw1
  8120  00356E                     l6542:
  8121                           
  8122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8123                           ;stkvar	_w @ sp[(-17)+13]
  8124                           ;stkvar	_l @ sp[(-17)+7]
  8125  00356E  50E1               	movf	fsr1l,w,c
  8126  003570  0FF6               	addlw	-10
  8127  003572  6ED9               	movwf	fsr2l,c
  8128  003574  50E2               	movf	fsr1h,w,c
  8129  003576  6EDA               	movwf	fsr2h,c
  8130  003578  0EFF               	movlw	255
  8131  00357A  22DA               	addwfc	fsr2h,f,c
  8132  00357C  0EFC               	movlw	-4
  8133  00357E  50E3               	movf	plusw1,w,c
  8134  003580  5CDE               	subwf	postinc2,w,c
  8135  003582  50DE               	movf	postinc2,w,c
  8136  003584  0A80               	xorlw	128
  8137  003586  6E3B               	movwf	btemp,c
  8138  003588  0EFD               	movlw	-3
  8139  00358A  50E3               	movf	plusw1,w,c
  8140  00358C  0A80               	xorlw	128
  8141  00358E  583B               	subwfb	btemp,w,c
  8142  003590  A0D8               	btfss	status,0,c
  8143  003592  D7CF               	goto	l6538
  8144  003594                     u3770:
  8145                           
  8146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8147                           ;stkvar	_l @ sp[(-17)+7]
  8148  003594  0EF6               	movlw	-10
  8149  003596  006F FF8C  F03B    	movff	plusw1,btemp
  8150  00359C  0EF7               	movlw	-9
  8151  00359E  006F FF8C  F03C    	movff	plusw1,btemp+1
  8152                           
  8153                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8154  0035A4  0EEB               	movlw	235
  8155  0035A6  26E1               	addwf	fsr1l,f,c
  8156  0035A8  0EFF               	movlw	255
  8157  0035AA  22E2               	addwfc	fsr1h,f,c
  8158  0035AC  0012               	return		;funcret
  8159  0035AE                     __end_of_stoa:
  8160                           	opt callstack 0
  8161                           
  8162 ;; *************** function _dtoa *****************
  8163 ;; Defined at:
  8164 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8167 ;;		 -> f(5), NULL(0), 
  8168 ;;  d               8  [STACK] long long 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  n               8  [STACK] long long 
  8171 ;;  i               2  [STACK] int 
  8172 ;;  s               2  [STACK] int 
  8173 ;;  w               2  [STACK] int 
  8174 ;;  p               2  [STACK] int 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  2  [STACK] int 
  8177 ;; Registers used:
  8178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8188 ;;Total ram usage:        0 bytes
  8189 ;; Hardware stack levels used:    1
  8190 ;; Hardware stack levels required when called:    8
  8191 ;; This function calls:
  8192 ;;		___aodiv
  8193 ;;		___aomod
  8194 ;;		_abs
  8195 ;;		_pad
  8196 ;; This function is called by:
  8197 ;;		_vfpfcnvrt
  8198 ;; This function uses a reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text36
  8202  00255E                     __ptext36:
  8203                           	opt callstack 0
  8204  00255E                     _dtoa:
  8205                           	opt callstack 0
  8206                           
  8207                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8208  00255E  0E12               	movlw	18
  8209  002560  26E1               	addwf	fsr1l,f,c
  8210  002562  0E00               	movlw	0
  8211  002564  22E2               	addwfc	fsr1h,f,c
  8212                           
  8213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8214                           ;stkvar	_d @ sp[(-18)+-10]
  8215                           
  8216                           ;incstack = 0
  8217  002566  0EE4               	movlw	228
  8218  002568  24E1               	addwf	fsr1l,w,c
  8219  00256A  6ED9               	movwf	fsr2l,c
  8220  00256C  0EFF               	movlw	255
  8221  00256E  20E2               	addwfc	fsr1h,w,c
  8222  002570  6EDA               	movwf	fsr2h,c
  8223                           
  8224                           ;stkvar	_n @ sp[(-18)+2]
  8225  002572  0E08               	movlw	8
  8226  002574  6E3B               	movwf	btemp,c
  8227  002576  0EF0               	movlw	-16
  8228  002578                     us351999:
  8229  002578  006F FF7B FFE3     	movff	postinc2,plusw1
  8230  00257E  28E8               	incf	wreg,w,c
  8231  002580  2E3B               	decfsz	btemp,f,c
  8232  002582  D7FA               	bra	us351999
  8233                           
  8234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8235                           ;stkvar	_n @ sp[(-18)+2]
  8236  002584  0EF7               	movlw	-9
  8237  002586  AEE3               	btfss	plusw1,7,c
  8238  002588  D002               	goto	u3520
  8239  00258A  0E01               	movlw	1
  8240  00258C  D001               	goto	u3530
  8241  00258E                     u3520:
  8242  00258E  0E00               	movlw	0
  8243  002590                     u3530:
  8244  002590  6E45               	movwf	btemp+10,c
  8245  002592  6A46               	clrf	btemp+11,c
  8246                           
  8247                           ;stkvar	_s @ sp[(-18)+12]
  8248  002594  0EFA               	movlw	-6
  8249  002596  0060  F117  FFE3   	movff	btemp+10,plusw1
  8250  00259C  0EFB               	movlw	-5
  8251  00259E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8252                           
  8253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8254                           ;stkvar	_s @ sp[(-18)+12]
  8255  0025A4  0EFA               	movlw	-6
  8256  0025A6  006F FF8C  F03B    	movff	plusw1,btemp
  8257  0025AC  0EFB               	movlw	-5
  8258  0025AE  50E3               	movf	plusw1,w,c
  8259  0025B0  103B               	iorwf	btemp,w,c
  8260  0025B2  B4D8               	btfsc	status,2,c
  8261  0025B4  D025               	goto	u3550
  8262                           
  8263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8264                           ;stkvar	_n @ sp[(-18)+2]
  8265                           ;stkvar	_n @ sp[(-18)+2]
  8266  0025B6  0EF0               	movlw	-16
  8267  0025B8  6CE3               	negf	plusw1,c
  8268  0025BA  0EF1               	movlw	-15
  8269  0025BC  1EE3               	comf	plusw1,f,c
  8270  0025BE  0EF2               	movlw	-14
  8271  0025C0  1EE3               	comf	plusw1,f,c
  8272  0025C2  0EF3               	movlw	-13
  8273  0025C4  1EE3               	comf	plusw1,f,c
  8274  0025C6  0EF4               	movlw	-12
  8275  0025C8  1EE3               	comf	plusw1,f,c
  8276  0025CA  0EF5               	movlw	-11
  8277  0025CC  1EE3               	comf	plusw1,f,c
  8278  0025CE  0EF6               	movlw	-10
  8279  0025D0  1EE3               	comf	plusw1,f,c
  8280  0025D2  0EF7               	movlw	-9
  8281  0025D4  1EE3               	comf	plusw1,f,c
  8282  0025D6  E314               	bnc	u3550
  8283  0025D8  0EF1               	movlw	-15
  8284  0025DA  2AE3               	incf	plusw1,f,c
  8285  0025DC  E311               	bnc	u3550
  8286  0025DE  0EF2               	movlw	-14
  8287  0025E0  2AE3               	incf	plusw1,f,c
  8288  0025E2  E30E               	bnc	u3550
  8289  0025E4  0EF3               	movlw	-13
  8290  0025E6  2AE3               	incf	plusw1,f,c
  8291  0025E8  E30B               	bnc	u3550
  8292  0025EA  0EF4               	movlw	-12
  8293  0025EC  2AE3               	incf	plusw1,f,c
  8294  0025EE  E308               	bnc	u3550
  8295  0025F0  0EF5               	movlw	-11
  8296  0025F2  2AE3               	incf	plusw1,f,c
  8297  0025F4  E305               	bnc	u3550
  8298  0025F6  0EF6               	movlw	-10
  8299  0025F8  2AE3               	incf	plusw1,f,c
  8300  0025FA  E302               	bnc	u3550
  8301  0025FC  0EF7               	movlw	-9
  8302  0025FE  2AE3               	incf	plusw1,f,c
  8303  002600                     u3550:
  8304                           
  8305                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8306  002600  AE26               	btfss	_prec+1,7,c
  8307                           
  8308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8309  002602  9227               	bcf	_flags,1,c
  8310                           
  8311                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8312  002604  BE26               	btfsc	_prec+1,7,c
  8313  002606  D005               	goto	u3570
  8314  002608  5026               	movf	_prec+1,w,c
  8315  00260A  E110               	bnz	l6446
  8316  00260C  0425               	decf	_prec,w,c
  8317  00260E  B0D8               	btfsc	status,0,c
  8318  002610  D00D               	goto	l6446
  8319  002612                     u3570:
  8320  002612  0E01               	movlw	1
  8321  002614  6E45               	movwf	btemp+10,c
  8322  002616  0E00               	movlw	0
  8323  002618  6E46               	movwf	btemp+11,c
  8324                           
  8325                           ;stkvar	_p @ sp[(-18)+16]
  8326  00261A  0EFE               	movlw	-2
  8327  00261C  0060  F117  FFE3   	movff	btemp+10,plusw1
  8328  002622  0EFF               	movlw	-1
  8329  002624  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8330  00262A  D008               	goto	l1690
  8331  00262C                     l6446:
  8332                           
  8333                           ;stkvar	_p @ sp[(-18)+16]
  8334  00262C  0EFE               	movlw	-2
  8335  00262E  0060  F097  FFE3   	movff	_prec,plusw1
  8336  002634  0EFF               	movlw	-1
  8337  002636  0060  F09B  FFE3   	movff	_prec+1,plusw1
  8338  00263C                     l1690:
  8339                           
  8340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8341                           ;stkvar	_w @ sp[(-18)+14]
  8342  00263C  0EFC               	movlw	-4
  8343  00263E  0060  F08F  FFE3   	movff	_width,plusw1
  8344  002644  0EFD               	movlw	-3
  8345  002646  0060  F093  FFE3   	movff	_width+1,plusw1
  8346                           
  8347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8348                           ;stkvar	_s @ sp[(-18)+12]
  8349  00264C  0EFA               	movlw	-6
  8350  00264E  006F FF8C  F03B    	movff	plusw1,btemp
  8351  002654  0EFB               	movlw	-5
  8352  002656  50E3               	movf	plusw1,w,c
  8353  002658  103B               	iorwf	btemp,w,c
  8354  00265A  A4D8               	btfss	status,2,c
  8355  00265C  D002               	goto	u3590
  8356  00265E  A427               	btfss	_flags,2,c
  8357  002660  D00A               	goto	l6454
  8358  002662                     u3590:
  8359                           
  8360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8361                           ;stkvar	_w @ sp[(-18)+14]
  8362  002662  50E1               	movf	fsr1l,w,c
  8363  002664  0FFC               	addlw	-4
  8364  002666  6ED9               	movwf	fsr2l,c
  8365  002668  50E2               	movf	fsr1h,w,c
  8366  00266A  6EDA               	movwf	fsr2h,c
  8367  00266C  0EFF               	movlw	255
  8368  00266E  22DA               	addwfc	fsr2h,f,c
  8369  002670  06DE               	decf	postinc2,f,c
  8370  002672  0E00               	movlw	0
  8371  002674  5ADD               	subwfb	postdec2,f,c
  8372  002676                     l6454:
  8373                           
  8374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8375  002676  0E1F               	movlw	31
  8376  002678  6E45               	movwf	btemp+10,c
  8377  00267A  0E00               	movlw	0
  8378  00267C  6E46               	movwf	btemp+11,c
  8379                           
  8380                           ;stkvar	_i @ sp[(-18)+10]
  8381  00267E  0EF8               	movlw	-8
  8382  002680  0060  F117  FFE3   	movff	btemp+10,plusw1
  8383  002686  0EF9               	movlw	-7
  8384  002688  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8385                           
  8386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8387  00268E  0101               	movlb	1	; () banked
  8388  002690  6BF1               	clrf	(_dbuf+31)& (0+255),b
  8389                           
  8390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8391  002692  D109               	goto	l6468
  8392  002694                     l6458:
  8393                           
  8394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8395                           ;stkvar	_i @ sp[(-18)+10]
  8396  002694  50E1               	movf	fsr1l,w,c
  8397  002696  0FF8               	addlw	-8
  8398  002698  6ED9               	movwf	fsr2l,c
  8399  00269A  50E2               	movf	fsr1h,w,c
  8400  00269C  6EDA               	movwf	fsr2h,c
  8401  00269E  0EFF               	movlw	255
  8402  0026A0  22DA               	addwfc	fsr2h,f,c
  8403  0026A2  06DE               	decf	postinc2,f,c
  8404  0026A4  0E00               	movlw	0
  8405  0026A6  5ADD               	subwfb	postdec2,f,c
  8406                           
  8407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8408  0026A8  0E0A               	movlw	10
  8409  0026AA  6EE6               	movwf	postinc1,c
  8410  0026AC  0E00               	movlw	0
  8411  0026AE  6EE6               	movwf	postinc1,c
  8412  0026B0  0E00               	movlw	0
  8413  0026B2  6EE6               	movwf	postinc1,c
  8414  0026B4  0E00               	movlw	0
  8415  0026B6  6EE6               	movwf	postinc1,c
  8416  0026B8  0E00               	movlw	0
  8417  0026BA  6EE6               	movwf	postinc1,c
  8418  0026BC  0E00               	movlw	0
  8419  0026BE  6EE6               	movwf	postinc1,c
  8420  0026C0  0E00               	movlw	0
  8421  0026C2  6EE6               	movwf	postinc1,c
  8422  0026C4  0E00               	movlw	0
  8423  0026C6  6EE6               	movwf	postinc1,c
  8424                           
  8425                           ;stkvar	_n @ sp[(-26)+2]
  8426  0026C8  50E1               	movf	fsr1l,w,c
  8427  0026CA  0FE8               	addlw	-24
  8428  0026CC  6ED9               	movwf	fsr2l,c
  8429  0026CE  50E2               	movf	fsr1h,w,c
  8430  0026D0  6EDA               	movwf	fsr2h,c
  8431  0026D2  0EFF               	movlw	255
  8432  0026D4  22DA               	addwfc	fsr2h,f,c
  8433  0026D6  006F FF7B FFE6     	movff	postinc2,postinc1
  8434  0026DC  006F FF7B FFE6     	movff	postinc2,postinc1
  8435  0026E2  006F FF7B FFE6     	movff	postinc2,postinc1
  8436  0026E8  006F FF7B FFE6     	movff	postinc2,postinc1
  8437  0026EE  006F FF7B FFE6     	movff	postinc2,postinc1
  8438  0026F4  006F FF7B FFE6     	movff	postinc2,postinc1
  8439  0026FA  006F FF7B FFE6     	movff	postinc2,postinc1
  8440  002700  006F FF7B FFE6     	movff	postinc2,postinc1
  8441  002706  EC69  F01D         	call	___aomod	;wreg free
  8442  00270A  52E5               	movf	postdec1,f,c
  8443  00270C  006F FF9C  F052    	movff	indf1,btemp+23
  8444  002712  52E5               	movf	postdec1,f,c
  8445  002714  006F FF9C  F051    	movff	indf1,btemp+22
  8446  00271A  52E5               	movf	postdec1,f,c
  8447  00271C  006F FF9C  F050    	movff	indf1,btemp+21
  8448  002722  52E5               	movf	postdec1,f,c
  8449  002724  006F FF9C  F04F    	movff	indf1,btemp+20
  8450  00272A  52E5               	movf	postdec1,f,c
  8451  00272C  006F FF9C  F04E    	movff	indf1,btemp+19
  8452  002732  52E5               	movf	postdec1,f,c
  8453  002734  006F FF9C  F04D    	movff	indf1,btemp+18
  8454  00273A  52E5               	movf	postdec1,f,c
  8455  00273C  006F FF9C  F04C    	movff	indf1,btemp+17
  8456  002742  52E5               	movf	postdec1,f,c
  8457  002744  006F FF9C  F04B    	movff	indf1,btemp+16
  8458  00274A  0EF8               	movlw	248
  8459  00274C  26E1               	addwf	fsr1l,f,c
  8460  00274E  0EFF               	movlw	255
  8461  002750  22E2               	addwfc	fsr1h,f,c
  8462  002752  0060  F12C  F045   	movff	btemp+16,btemp+10
  8463  002758  0060  F130  F046   	movff	btemp+17,btemp+11
  8464  00275E  0060  F117  FFE6   	movff	btemp+10,postinc1
  8465  002764  0060  F11B  FFE6   	movff	btemp+11,postinc1
  8466  00276A  ECA1  F028         	call	_abs	;wreg free
  8467  00276E  0E30               	movlw	48
  8468  002770  263B               	addwf	btemp,f,c
  8469                           
  8470                           ;stkvar	_i @ sp[(-18)+10]
  8471  002772  0EF8               	movlw	-8
  8472  002774  006F FF8C  F045    	movff	plusw1,btemp+10
  8473  00277A  0EF9               	movlw	-7
  8474  00277C  006F FF8C  F046    	movff	plusw1,btemp+11
  8475  002782  0ED2               	movlw	low _dbuf
  8476  002784  2445               	addwf	btemp+10,w,c
  8477  002786  6ED9               	movwf	fsr2l,c
  8478  002788  0E01               	movlw	high _dbuf
  8479  00278A  2046               	addwfc	btemp+11,w,c
  8480  00278C  6EDA               	movwf	fsr2h,c
  8481  00278E  0060  F0EF  FFDF   	movff	btemp,indf2
  8482                           
  8483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8484                           ;stkvar	_p @ sp[(-18)+16]
  8485  002794  50E1               	movf	fsr1l,w,c
  8486  002796  0FFE               	addlw	-2
  8487  002798  6ED9               	movwf	fsr2l,c
  8488  00279A  50E2               	movf	fsr1h,w,c
  8489  00279C  6EDA               	movwf	fsr2h,c
  8490  00279E  0EFF               	movlw	255
  8491  0027A0  22DA               	addwfc	fsr2h,f,c
  8492  0027A2  06DE               	decf	postinc2,f,c
  8493  0027A4  0E00               	movlw	0
  8494  0027A6  5ADD               	subwfb	postdec2,f,c
  8495                           
  8496                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8497                           ;stkvar	_w @ sp[(-18)+14]
  8498  0027A8  50E1               	movf	fsr1l,w,c
  8499  0027AA  0FFC               	addlw	-4
  8500  0027AC  6ED9               	movwf	fsr2l,c
  8501  0027AE  50E2               	movf	fsr1h,w,c
  8502  0027B0  6EDA               	movwf	fsr2h,c
  8503  0027B2  0EFF               	movlw	255
  8504  0027B4  22DA               	addwfc	fsr2h,f,c
  8505  0027B6  06DE               	decf	postinc2,f,c
  8506  0027B8  0E00               	movlw	0
  8507  0027BA  5ADD               	subwfb	postdec2,f,c
  8508                           
  8509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8510  0027BC  0E0A               	movlw	10
  8511  0027BE  6EE6               	movwf	postinc1,c
  8512  0027C0  0E00               	movlw	0
  8513  0027C2  6EE6               	movwf	postinc1,c
  8514  0027C4  0E00               	movlw	0
  8515  0027C6  6EE6               	movwf	postinc1,c
  8516  0027C8  0E00               	movlw	0
  8517  0027CA  6EE6               	movwf	postinc1,c
  8518  0027CC  0E00               	movlw	0
  8519  0027CE  6EE6               	movwf	postinc1,c
  8520  0027D0  0E00               	movlw	0
  8521  0027D2  6EE6               	movwf	postinc1,c
  8522  0027D4  0E00               	movlw	0
  8523  0027D6  6EE6               	movwf	postinc1,c
  8524  0027D8  0E00               	movlw	0
  8525  0027DA  6EE6               	movwf	postinc1,c
  8526                           
  8527                           ;stkvar	_n @ sp[(-26)+2]
  8528  0027DC  50E1               	movf	fsr1l,w,c
  8529  0027DE  0FE8               	addlw	-24
  8530  0027E0  6ED9               	movwf	fsr2l,c
  8531  0027E2  50E2               	movf	fsr1h,w,c
  8532  0027E4  6EDA               	movwf	fsr2h,c
  8533  0027E6  0EFF               	movlw	255
  8534  0027E8  22DA               	addwfc	fsr2h,f,c
  8535  0027EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8536  0027F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8537  0027F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8538  0027FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8539  002802  006F FF7B FFE6     	movff	postinc2,postinc1
  8540  002808  006F FF7B FFE6     	movff	postinc2,postinc1
  8541  00280E  006F FF7B FFE6     	movff	postinc2,postinc1
  8542  002814  006F FF7B FFE6     	movff	postinc2,postinc1
  8543  00281A  EC29  F01C         	call	___aodiv	;wreg free
  8544  00281E  52E5               	movf	postdec1,f,c
  8545  002820  006F FF9C  F052    	movff	indf1,btemp+23
  8546  002826  52E5               	movf	postdec1,f,c
  8547  002828  006F FF9C  F051    	movff	indf1,btemp+22
  8548  00282E  52E5               	movf	postdec1,f,c
  8549  002830  006F FF9C  F050    	movff	indf1,btemp+21
  8550  002836  52E5               	movf	postdec1,f,c
  8551  002838  006F FF9C  F04F    	movff	indf1,btemp+20
  8552  00283E  52E5               	movf	postdec1,f,c
  8553  002840  006F FF9C  F04E    	movff	indf1,btemp+19
  8554  002846  52E5               	movf	postdec1,f,c
  8555  002848  006F FF9C  F04D    	movff	indf1,btemp+18
  8556  00284E  52E5               	movf	postdec1,f,c
  8557  002850  006F FF9C  F04C    	movff	indf1,btemp+17
  8558  002856  52E5               	movf	postdec1,f,c
  8559  002858  006F FF9C  F04B    	movff	indf1,btemp+16
  8560  00285E  0EF8               	movlw	248
  8561  002860  26E1               	addwf	fsr1l,f,c
  8562  002862  0EFF               	movlw	255
  8563  002864  22E2               	addwfc	fsr1h,f,c
  8564                           
  8565                           ;stkvar	_n @ sp[(-18)+2]
  8566  002866  0EF0               	movlw	-16
  8567  002868  0060  F12F  FFE3   	movff	btemp+16,plusw1
  8568  00286E  0EF1               	movlw	-15
  8569  002870  0060  F133  FFE3   	movff	btemp+17,plusw1
  8570  002876  0EF2               	movlw	-14
  8571  002878  0060  F137  FFE3   	movff	btemp+18,plusw1
  8572  00287E  0EF3               	movlw	-13
  8573  002880  0060  F13B  FFE3   	movff	btemp+19,plusw1
  8574  002886  0EF4               	movlw	-12
  8575  002888  0060  F13F  FFE3   	movff	btemp+20,plusw1
  8576  00288E  0EF5               	movlw	-11
  8577  002890  0060  F143  FFE3   	movff	btemp+21,plusw1
  8578  002896  0EF6               	movlw	-10
  8579  002898  0060  F147  FFE3   	movff	btemp+22,plusw1
  8580  00289E  0EF7               	movlw	-9
  8581  0028A0  0060  F14B  FFE3   	movff	btemp+23,plusw1
  8582  0028A6                     l6468:
  8583                           
  8584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8585                           ;stkvar	_i @ sp[(-18)+10]
  8586  0028A6  0EF9               	movlw	-7
  8587  0028A8  BEE3               	btfsc	plusw1,7,c
  8588  0028AA  D036               	goto	u3640
  8589  0028AC  0EF9               	movlw	-7
  8590  0028AE  50E3               	movf	plusw1,w,c
  8591  0028B0  E104               	bnz	u3600
  8592  0028B2  0EF8               	movlw	-8
  8593  0028B4  04E3               	decf	plusw1,w,c
  8594  0028B6  A0D8               	btfss	status,0,c
  8595  0028B8  D02F               	goto	u3640
  8596  0028BA                     u3600:
  8597                           
  8598                           ;stkvar	_n @ sp[(-18)+2]
  8599  0028BA  0EF0               	movlw	-16
  8600  0028BC  50E3               	movf	plusw1,w,c
  8601  0028BE  E115               	bnz	u3611
  8602  0028C0  0EF1               	movlw	-15
  8603  0028C2  50E3               	movf	plusw1,w,c
  8604  0028C4  E112               	bnz	u3611
  8605  0028C6  0EF2               	movlw	-14
  8606  0028C8  50E3               	movf	plusw1,w,c
  8607  0028CA  E10F               	bnz	u3611
  8608  0028CC  0EF3               	movlw	-13
  8609  0028CE  50E3               	movf	plusw1,w,c
  8610  0028D0  E10C               	bnz	u3611
  8611  0028D2  0EF4               	movlw	-12
  8612  0028D4  50E3               	movf	plusw1,w,c
  8613  0028D6  E109               	bnz	u3611
  8614  0028D8  0EF5               	movlw	-11
  8615  0028DA  50E3               	movf	plusw1,w,c
  8616  0028DC  E106               	bnz	u3611
  8617  0028DE  0EF6               	movlw	-10
  8618  0028E0  50E3               	movf	plusw1,w,c
  8619  0028E2  E103               	bnz	u3611
  8620  0028E4  0EF7               	movlw	-9
  8621  0028E6  50E3               	movf	plusw1,w,c
  8622  0028E8  A4D8               	btfss	status,2,c
  8623  0028EA                     u3611:
  8624  0028EA  D6D4               	goto	l6458
  8625                           
  8626                           ;stkvar	_p @ sp[(-18)+16]
  8627  0028EC  0EFF               	movlw	-1
  8628  0028EE  BEE3               	btfsc	plusw1,7,c
  8629  0028F0  D007               	goto	u3620
  8630  0028F2  0EFF               	movlw	-1
  8631  0028F4  50E3               	movf	plusw1,w,c
  8632  0028F6  E103               	bnz	u3621
  8633  0028F8  0EFE               	movlw	-2
  8634  0028FA  04E3               	decf	plusw1,w,c
  8635  0028FC  B0D8               	btfsc	status,0,c
  8636  0028FE                     u3621:
  8637  0028FE  D6CA               	goto	l6458
  8638  002900                     u3620:
  8639                           
  8640                           ;stkvar	_w @ sp[(-18)+14]
  8641  002900  0EFD               	movlw	-3
  8642  002902  BEE3               	btfsc	plusw1,7,c
  8643  002904  D009               	goto	u3640
  8644  002906  0EFD               	movlw	-3
  8645  002908  50E3               	movf	plusw1,w,c
  8646  00290A  E104               	bnz	u3630
  8647  00290C  0EFC               	movlw	-4
  8648  00290E  04E3               	decf	plusw1,w,c
  8649  002910  A0D8               	btfss	status,0,c
  8650  002912  D002               	goto	u3640
  8651  002914                     u3630:
  8652  002914  B227               	btfsc	_flags,1,c
  8653  002916  D6BE               	goto	l6458
  8654  002918                     u3640:
  8655                           
  8656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8657                           ;stkvar	_s @ sp[(-18)+12]
  8658  002918  0EFA               	movlw	-6
  8659  00291A  006F FF8C  F03B    	movff	plusw1,btemp
  8660  002920  0EFB               	movlw	-5
  8661  002922  50E3               	movf	plusw1,w,c
  8662  002924  103B               	iorwf	btemp,w,c
  8663  002926  A4D8               	btfss	status,2,c
  8664  002928  D002               	goto	u3660
  8665  00292A  A427               	btfss	_flags,2,c
  8666  00292C  D033               	goto	l6492
  8667  00292E                     u3660:
  8668                           
  8669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8670                           ;stkvar	_i @ sp[(-18)+10]
  8671  00292E  50E1               	movf	fsr1l,w,c
  8672  002930  0FF8               	addlw	-8
  8673  002932  6ED9               	movwf	fsr2l,c
  8674  002934  50E2               	movf	fsr1h,w,c
  8675  002936  6EDA               	movwf	fsr2h,c
  8676  002938  0EFF               	movlw	255
  8677  00293A  22DA               	addwfc	fsr2h,f,c
  8678  00293C  06DE               	decf	postinc2,f,c
  8679  00293E  0E00               	movlw	0
  8680  002940  5ADD               	subwfb	postdec2,f,c
  8681                           
  8682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8683                           ;stkvar	_s @ sp[(-18)+12]
  8684  002942  0EFA               	movlw	-6
  8685  002944  006F FF8C  F03B    	movff	plusw1,btemp
  8686  00294A  0EFB               	movlw	-5
  8687  00294C  50E3               	movf	plusw1,w,c
  8688  00294E  103B               	iorwf	btemp,w,c
  8689  002950  A4D8               	btfss	status,2,c
  8690  002952  D002               	goto	l6488
  8691  002954  0E2B               	movlw	43
  8692  002956  D001               	goto	L19
  8693  002958                     l6488:
  8694  002958  0E2D               	movlw	45
  8695  00295A                     L19:
  8696  00295A  6E45               	movwf	btemp+10,c
  8697  00295C  0E00               	movlw	0
  8698  00295E  6E46               	movwf	btemp+11,c
  8699                           
  8700                           ;stkvar	_dtoa$3835 @ sp[(-18)+0]
  8701  002960  0EEE               	movlw	-18
  8702  002962  0060  F117  FFE3   	movff	btemp+10,plusw1
  8703  002968  0EEF               	movlw	-17
  8704  00296A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8705                           
  8706                           ;stkvar	_dtoa$3835 @ sp[(-18)+0]
  8707                           ;stkvar	_i @ sp[(-18)+10]
  8708  002970  0EF8               	movlw	-8
  8709  002972  006F FF8C  F045    	movff	plusw1,btemp+10
  8710  002978  0EF9               	movlw	-7
  8711  00297A  006F FF8C  F046    	movff	plusw1,btemp+11
  8712  002980  0ED2               	movlw	low _dbuf
  8713  002982  2445               	addwf	btemp+10,w,c
  8714  002984  6ED9               	movwf	fsr2l,c
  8715  002986  0E01               	movlw	high _dbuf
  8716  002988  2046               	addwfc	btemp+11,w,c
  8717  00298A  6EDA               	movwf	fsr2h,c
  8718  00298C  0EEE               	movlw	-18
  8719  00298E  006F FF8F FFDF     	movff	plusw1,indf2
  8720  002994                     l6492:
  8721                           
  8722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8723                           ;stkvar	_w @ sp[(-18)+14]
  8724  002994  0EFC               	movlw	-4
  8725  002996  006F FF8F FFE6     	movff	plusw1,postinc1
  8726  00299C  006F FF8F FFE6     	movff	plusw1,postinc1
  8727                           
  8728                           ;stkvar	_i @ sp[(-20)+10]
  8729  0029A2  0ED2               	movlw	low _dbuf
  8730  0029A4  6E45               	movwf	btemp+10,c
  8731  0029A6  0E01               	movlw	high _dbuf
  8732  0029A8  6E46               	movwf	btemp+11,c
  8733  0029AA  0EF6               	movlw	-10
  8734  0029AC  50E3               	movf	plusw1,w,c
  8735  0029AE  2645               	addwf	btemp+10,f,c
  8736  0029B0  0EF7               	movlw	-9
  8737  0029B2  50E3               	movf	plusw1,w,c
  8738  0029B4  2246               	addwfc	btemp+11,f,c
  8739  0029B6  0060  F117  FFE6   	movff	btemp+10,postinc1
  8740  0029BC  0060  F11B  FFE6   	movff	btemp+11,postinc1
  8741                           
  8742                           ;stkvar	_fp @ sp[(-22)+-2]
  8743  0029C2  0EE8               	movlw	-24
  8744  0029C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8745  0029CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8746  0029D0  EC43  F021         	call	_pad	;wreg free
  8747                           
  8748                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8749  0029D4  0EE4               	movlw	228
  8750  0029D6  26E1               	addwf	fsr1l,f,c
  8751  0029D8  0EFF               	movlw	255
  8752  0029DA  22E2               	addwfc	fsr1h,f,c
  8753  0029DC  0012               	return		;funcret
  8754  0029DE                     __end_of_dtoa:
  8755                           	opt callstack 0
  8756                           
  8757 ;; *************** function _abs *****************
  8758 ;; Defined at:
  8759 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  a               2  [STACK] int 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  2  [STACK] int 
  8766 ;; Registers used:
  8767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/1
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8777 ;;Total ram usage:        0 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    3
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_dtoa
  8784 ;; This function uses a reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text37
  8788  005142                     __ptext37:
  8789                           	opt callstack 0
  8790  005142                     _abs:
  8791                           	opt callstack 23
  8792                           
  8793                           ;stkvar	_a @ sp[(0)+-2]
  8794                           
  8795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8796                           ;incstack = 0
  8797  005142  0EFF               	movlw	-1
  8798  005144  BEE3               	btfsc	plusw1,7,c
  8799  005146  D007               	goto	u1910
  8800  005148  0EFF               	movlw	-1
  8801  00514A  50E3               	movf	plusw1,w,c
  8802  00514C  E112               	bnz	l4672
  8803  00514E  0EFE               	movlw	-2
  8804  005150  04E3               	decf	plusw1,w,c
  8805  005152  B0D8               	btfsc	status,0,c
  8806  005154  D00E               	goto	l4672
  8807  005156                     u1910:
  8808                           
  8809                           ;stkvar	_a @ sp[(0)+-2]
  8810  005156  0EFE               	movlw	-2
  8811  005158  006F FF8C  F03B    	movff	plusw1,btemp
  8812  00515E  1E3B               	comf	btemp,f,c
  8813  005160  0EFF               	movlw	-1
  8814  005162  006F FF8C  F03C    	movff	plusw1,btemp+1
  8815  005168  1E3C               	comf	btemp+1,f,c
  8816  00516A  2A3B               	incf	btemp,f,c
  8817  00516C  B4D8               	btfsc	status,2,c
  8818  00516E  2A3C               	incf	btemp+1,f,c
  8819  005170  D008               	goto	l2431
  8820  005172                     l4672:
  8821                           
  8822                           ;stkvar	_a @ sp[(0)+-2]
  8823  005172  0EFE               	movlw	-2
  8824  005174  006F FF8C  F03B    	movff	plusw1,btemp
  8825  00517A  0EFF               	movlw	-1
  8826  00517C  006F FF8C  F03C    	movff	plusw1,btemp+1
  8827  005182                     l2431:
  8828                           
  8829                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  8830  005182  52E5               	movf	postdec1,f,c
  8831  005184  52E5               	movf	postdec1,f,c
  8832  005186  0012               	return		;funcret
  8833  005188                     __end_of_abs:
  8834                           	opt callstack 0
  8835                           
  8836 ;; *************** function ___aomod *****************
  8837 ;; Defined at:
  8838 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  dividend        8  [STACK] long long 
  8841 ;;  divisor         8  [STACK] long long 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  sign            1  [STACK] unsigned char 
  8844 ;;  counter         1  [STACK] unsigned char 
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  8  [STACK] long long 
  8847 ;; Registers used:
  8848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/1
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8858 ;;Total ram usage:        0 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    3
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_dtoa
  8865 ;; This function uses a reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text38
  8869  003AD2                     __ptext38:
  8870                           	opt callstack 0
  8871  003AD2                     ___aomod:
  8872                           	opt callstack 0
  8873                           
  8874                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  8875  003AD2  52E6               	movf	postinc1,f,c
  8876  003AD4  52E6               	movf	postinc1,f,c
  8877                           
  8878                           ;stkvar	_sign @ sp[(-2)+0]
  8879                           
  8880                           ;incstack = 0
  8881  003AD6  0EFE               	movlw	-2
  8882  003AD8  6AE3               	clrf	plusw1,c
  8883                           
  8884                           ;stkvar	_dividend @ sp[(-2)+-8]
  8885  003ADA  0EFD               	movlw	-3
  8886  003ADC  AEE3               	btfss	plusw1,7,c
  8887  003ADE  D028               	goto	l4728
  8888                           
  8889                           ;stkvar	_dividend @ sp[(-2)+-8]
  8890                           ;stkvar	_dividend @ sp[(-2)+-8]
  8891  003AE0  0EF6               	movlw	-10
  8892  003AE2  6CE3               	negf	plusw1,c
  8893  003AE4  0EF7               	movlw	-9
  8894  003AE6  1EE3               	comf	plusw1,f,c
  8895  003AE8  0EF8               	movlw	-8
  8896  003AEA  1EE3               	comf	plusw1,f,c
  8897  003AEC  0EF9               	movlw	-7
  8898  003AEE  1EE3               	comf	plusw1,f,c
  8899  003AF0  0EFA               	movlw	-6
  8900  003AF2  1EE3               	comf	plusw1,f,c
  8901  003AF4  0EFB               	movlw	-5
  8902  003AF6  1EE3               	comf	plusw1,f,c
  8903  003AF8  0EFC               	movlw	-4
  8904  003AFA  1EE3               	comf	plusw1,f,c
  8905  003AFC  0EFD               	movlw	-3
  8906  003AFE  1EE3               	comf	plusw1,f,c
  8907  003B00  E314               	bnc	u2050
  8908  003B02  0EF7               	movlw	-9
  8909  003B04  2AE3               	incf	plusw1,f,c
  8910  003B06  E311               	bnc	u2050
  8911  003B08  0EF8               	movlw	-8
  8912  003B0A  2AE3               	incf	plusw1,f,c
  8913  003B0C  E30E               	bnc	u2050
  8914  003B0E  0EF9               	movlw	-7
  8915  003B10  2AE3               	incf	plusw1,f,c
  8916  003B12  E30B               	bnc	u2050
  8917  003B14  0EFA               	movlw	-6
  8918  003B16  2AE3               	incf	plusw1,f,c
  8919  003B18  E308               	bnc	u2050
  8920  003B1A  0EFB               	movlw	-5
  8921  003B1C  2AE3               	incf	plusw1,f,c
  8922  003B1E  E305               	bnc	u2050
  8923  003B20  0EFC               	movlw	-4
  8924  003B22  2AE3               	incf	plusw1,f,c
  8925  003B24  E302               	bnc	u2050
  8926  003B26  0EFD               	movlw	-3
  8927  003B28  2AE3               	incf	plusw1,f,c
  8928  003B2A                     u2050:
  8929                           
  8930                           ;stkvar	_sign @ sp[(-2)+0]
  8931  003B2A  0EFE               	movlw	-2
  8932  003B2C  6AE3               	clrf	plusw1,c
  8933  003B2E  2AE3               	incf	plusw1,f,c
  8934  003B30                     l4728:
  8935                           
  8936                           ;stkvar	_divisor @ sp[(-2)+-16]
  8937  003B30  0EF5               	movlw	-11
  8938  003B32  AEE3               	btfss	plusw1,7,c
  8939  003B34  D025               	goto	u2070
  8940                           
  8941                           ;stkvar	_divisor @ sp[(-2)+-16]
  8942                           ;stkvar	_divisor @ sp[(-2)+-16]
  8943  003B36  0EEE               	movlw	-18
  8944  003B38  6CE3               	negf	plusw1,c
  8945  003B3A  0EEF               	movlw	-17
  8946  003B3C  1EE3               	comf	plusw1,f,c
  8947  003B3E  0EF0               	movlw	-16
  8948  003B40  1EE3               	comf	plusw1,f,c
  8949  003B42  0EF1               	movlw	-15
  8950  003B44  1EE3               	comf	plusw1,f,c
  8951  003B46  0EF2               	movlw	-14
  8952  003B48  1EE3               	comf	plusw1,f,c
  8953  003B4A  0EF3               	movlw	-13
  8954  003B4C  1EE3               	comf	plusw1,f,c
  8955  003B4E  0EF4               	movlw	-12
  8956  003B50  1EE3               	comf	plusw1,f,c
  8957  003B52  0EF5               	movlw	-11
  8958  003B54  1EE3               	comf	plusw1,f,c
  8959  003B56  E314               	bnc	u2070
  8960  003B58  0EEF               	movlw	-17
  8961  003B5A  2AE3               	incf	plusw1,f,c
  8962  003B5C  E311               	bnc	u2070
  8963  003B5E  0EF0               	movlw	-16
  8964  003B60  2AE3               	incf	plusw1,f,c
  8965  003B62  E30E               	bnc	u2070
  8966  003B64  0EF1               	movlw	-15
  8967  003B66  2AE3               	incf	plusw1,f,c
  8968  003B68  E30B               	bnc	u2070
  8969  003B6A  0EF2               	movlw	-14
  8970  003B6C  2AE3               	incf	plusw1,f,c
  8971  003B6E  E308               	bnc	u2070
  8972  003B70  0EF3               	movlw	-13
  8973  003B72  2AE3               	incf	plusw1,f,c
  8974  003B74  E305               	bnc	u2070
  8975  003B76  0EF4               	movlw	-12
  8976  003B78  2AE3               	incf	plusw1,f,c
  8977  003B7A  E302               	bnc	u2070
  8978  003B7C  0EF5               	movlw	-11
  8979  003B7E  2AE3               	incf	plusw1,f,c
  8980  003B80                     u2070:
  8981                           
  8982                           ;stkvar	_divisor @ sp[(-2)+-16]
  8983  003B80  0EEE               	movlw	-18
  8984  003B82  50E3               	movf	plusw1,w,c
  8985  003B84  E116               	bnz	u2080
  8986  003B86  0EEF               	movlw	-17
  8987  003B88  50E3               	movf	plusw1,w,c
  8988  003B8A  E113               	bnz	u2080
  8989  003B8C  0EF0               	movlw	-16
  8990  003B8E  50E3               	movf	plusw1,w,c
  8991  003B90  E110               	bnz	u2080
  8992  003B92  0EF1               	movlw	-15
  8993  003B94  50E3               	movf	plusw1,w,c
  8994  003B96  E10D               	bnz	u2080
  8995  003B98  0EF2               	movlw	-14
  8996  003B9A  50E3               	movf	plusw1,w,c
  8997  003B9C  E10A               	bnz	u2080
  8998  003B9E  0EF3               	movlw	-13
  8999  003BA0  50E3               	movf	plusw1,w,c
  9000  003BA2  E107               	bnz	u2080
  9001  003BA4  0EF4               	movlw	-12
  9002  003BA6  50E3               	movf	plusw1,w,c
  9003  003BA8  E104               	bnz	u2080
  9004  003BAA  0EF5               	movlw	-11
  9005  003BAC  50E3               	movf	plusw1,w,c
  9006  003BAE  B4D8               	btfsc	status,2,c
  9007  003BB0  D075               	goto	u2110
  9008  003BB2                     u2080:
  9009                           
  9010                           ;stkvar	_counter @ sp[(-2)+1]
  9011  003BB2  0EFF               	movlw	-1
  9012  003BB4  6AE3               	clrf	plusw1,c
  9013  003BB6  D012               	goto	L20
  9014  003BB8                     l4736:
  9015                           
  9016                           ;stkvar	_divisor @ sp[(-2)+-16]
  9017  003BB8  90D8               	bcf	status,0,c
  9018  003BBA  0EEE               	movlw	-18
  9019  003BBC  36E3               	rlcf	plusw1,f,c
  9020  003BBE  0EEF               	movlw	-17
  9021  003BC0  36E3               	rlcf	plusw1,f,c
  9022  003BC2  0EF0               	movlw	-16
  9023  003BC4  36E3               	rlcf	plusw1,f,c
  9024  003BC6  0EF1               	movlw	-15
  9025  003BC8  36E3               	rlcf	plusw1,f,c
  9026  003BCA  0EF2               	movlw	-14
  9027  003BCC  36E3               	rlcf	plusw1,f,c
  9028  003BCE  0EF3               	movlw	-13
  9029  003BD0  36E3               	rlcf	plusw1,f,c
  9030  003BD2  0EF4               	movlw	-12
  9031  003BD4  36E3               	rlcf	plusw1,f,c
  9032  003BD6  0EF5               	movlw	-11
  9033  003BD8  36E3               	rlcf	plusw1,f,c
  9034                           
  9035                           ;stkvar	_counter @ sp[(-2)+1]
  9036  003BDA  0EFF               	movlw	-1
  9037  003BDC                     L20:
  9038  003BDC  2AE3               	incf	plusw1,f,c
  9039                           
  9040                           ;stkvar	_divisor @ sp[(-2)+-16]
  9041  003BDE  0EF5               	movlw	-11
  9042  003BE0  AEE3               	btfss	plusw1,7,c
  9043  003BE2  D7EA               	goto	l4736
  9044  003BE4                     u2090:
  9045                           
  9046                           ;stkvar	_divisor @ sp[(-2)+-16]
  9047                           ;stkvar	_dividend @ sp[(-2)+-8]
  9048  003BE4  50E1               	movf	fsr1l,w,c
  9049  003BE6  0FF6               	addlw	-10
  9050  003BE8  6ED9               	movwf	fsr2l,c
  9051  003BEA  50E2               	movf	fsr1h,w,c
  9052  003BEC  6EDA               	movwf	fsr2h,c
  9053  003BEE  0EFF               	movlw	255
  9054  003BF0  22DA               	addwfc	fsr2h,f,c
  9055  003BF2  0EEE               	movlw	-18
  9056  003BF4  50E3               	movf	plusw1,w,c
  9057  003BF6  5CDE               	subwf	postinc2,w,c
  9058  003BF8  0EEF               	movlw	-17
  9059  003BFA  50E3               	movf	plusw1,w,c
  9060  003BFC  58DE               	subwfb	postinc2,w,c
  9061  003BFE  0EF0               	movlw	-16
  9062  003C00  50E3               	movf	plusw1,w,c
  9063  003C02  58DE               	subwfb	postinc2,w,c
  9064  003C04  0EF1               	movlw	-15
  9065  003C06  50E3               	movf	plusw1,w,c
  9066  003C08  58DE               	subwfb	postinc2,w,c
  9067  003C0A  0EF2               	movlw	-14
  9068  003C0C  50E3               	movf	plusw1,w,c
  9069  003C0E  58DE               	subwfb	postinc2,w,c
  9070  003C10  0EF3               	movlw	-13
  9071  003C12  50E3               	movf	plusw1,w,c
  9072  003C14  58DE               	subwfb	postinc2,w,c
  9073  003C16  0EF4               	movlw	-12
  9074  003C18  50E3               	movf	plusw1,w,c
  9075  003C1A  58DE               	subwfb	postinc2,w,c
  9076  003C1C  0EF5               	movlw	-11
  9077  003C1E  50E3               	movf	plusw1,w,c
  9078  003C20  58DE               	subwfb	postinc2,w,c
  9079  003C22  A0D8               	btfss	status,0,c
  9080  003C24  D01F               	goto	l4744
  9081                           
  9082                           ;stkvar	_divisor @ sp[(-2)+-16]
  9083                           ;stkvar	_dividend @ sp[(-2)+-8]
  9084  003C26  50E1               	movf	fsr1l,w,c
  9085  003C28  0FF6               	addlw	-10
  9086  003C2A  6ED9               	movwf	fsr2l,c
  9087  003C2C  50E2               	movf	fsr1h,w,c
  9088  003C2E  6EDA               	movwf	fsr2h,c
  9089  003C30  0EFF               	movlw	255
  9090  003C32  22DA               	addwfc	fsr2h,f,c
  9091  003C34  0EEE               	movlw	-18
  9092  003C36  50E3               	movf	plusw1,w,c
  9093  003C38  5EDE               	subwf	postinc2,f,c
  9094  003C3A  0EEF               	movlw	-17
  9095  003C3C  50E3               	movf	plusw1,w,c
  9096  003C3E  5ADE               	subwfb	postinc2,f,c
  9097  003C40  0EF0               	movlw	-16
  9098  003C42  50E3               	movf	plusw1,w,c
  9099  003C44  5ADE               	subwfb	postinc2,f,c
  9100  003C46  0EF1               	movlw	-15
  9101  003C48  50E3               	movf	plusw1,w,c
  9102  003C4A  5ADE               	subwfb	postinc2,f,c
  9103  003C4C  0EF2               	movlw	-14
  9104  003C4E  50E3               	movf	plusw1,w,c
  9105  003C50  5ADE               	subwfb	postinc2,f,c
  9106  003C52  0EF3               	movlw	-13
  9107  003C54  50E3               	movf	plusw1,w,c
  9108  003C56  5ADE               	subwfb	postinc2,f,c
  9109  003C58  0EF4               	movlw	-12
  9110  003C5A  50E3               	movf	plusw1,w,c
  9111  003C5C  5ADE               	subwfb	postinc2,f,c
  9112  003C5E  0EF5               	movlw	-11
  9113  003C60  50E3               	movf	plusw1,w,c
  9114  003C62  5ADE               	subwfb	postinc2,f,c
  9115  003C64                     l4744:
  9116                           
  9117                           ;stkvar	_divisor @ sp[(-2)+-16]
  9118  003C64  90D8               	bcf	status,0,c
  9119  003C66  0EF5               	movlw	-11
  9120  003C68  32E3               	rrcf	plusw1,f,c
  9121  003C6A  0EF4               	movlw	-12
  9122  003C6C  32E3               	rrcf	plusw1,f,c
  9123  003C6E  0EF3               	movlw	-13
  9124  003C70  32E3               	rrcf	plusw1,f,c
  9125  003C72  0EF2               	movlw	-14
  9126  003C74  32E3               	rrcf	plusw1,f,c
  9127  003C76  0EF1               	movlw	-15
  9128  003C78  32E3               	rrcf	plusw1,f,c
  9129  003C7A  0EF0               	movlw	-16
  9130  003C7C  32E3               	rrcf	plusw1,f,c
  9131  003C7E  0EEF               	movlw	-17
  9132  003C80  32E3               	rrcf	plusw1,f,c
  9133  003C82  0EEE               	movlw	-18
  9134  003C84  32E3               	rrcf	plusw1,f,c
  9135                           
  9136                           ;stkvar	_counter @ sp[(-2)+1]
  9137  003C86  0EFF               	movlw	-1
  9138  003C88  50E3               	movf	plusw1,w,c
  9139  003C8A  6E3B               	movwf	btemp,c
  9140  003C8C  0E01               	movlw	1
  9141  003C8E  5E3B               	subwf	btemp,f,c
  9142  003C90  0EFF               	movlw	-1
  9143  003C92  0060  F0EF  FFE3   	movff	btemp,plusw1
  9144  003C98  A4D8               	btfss	status,2,c
  9145  003C9A  D7A4               	goto	u2090
  9146  003C9C                     u2110:
  9147                           
  9148                           ;stkvar	_sign @ sp[(-2)+0]
  9149  003C9C  0EFE               	movlw	-2
  9150  003C9E  50E3               	movf	plusw1,w,c
  9151  003CA0  B4D8               	btfsc	status,2,c
  9152  003CA2  D025               	goto	u2130
  9153                           
  9154                           ;stkvar	_dividend @ sp[(-2)+-8]
  9155                           ;stkvar	_dividend @ sp[(-2)+-8]
  9156  003CA4  0EF6               	movlw	-10
  9157  003CA6  6CE3               	negf	plusw1,c
  9158  003CA8  0EF7               	movlw	-9
  9159  003CAA  1EE3               	comf	plusw1,f,c
  9160  003CAC  0EF8               	movlw	-8
  9161  003CAE  1EE3               	comf	plusw1,f,c
  9162  003CB0  0EF9               	movlw	-7
  9163  003CB2  1EE3               	comf	plusw1,f,c
  9164  003CB4  0EFA               	movlw	-6
  9165  003CB6  1EE3               	comf	plusw1,f,c
  9166  003CB8  0EFB               	movlw	-5
  9167  003CBA  1EE3               	comf	plusw1,f,c
  9168  003CBC  0EFC               	movlw	-4
  9169  003CBE  1EE3               	comf	plusw1,f,c
  9170  003CC0  0EFD               	movlw	-3
  9171  003CC2  1EE3               	comf	plusw1,f,c
  9172  003CC4  E314               	bnc	u2130
  9173  003CC6  0EF7               	movlw	-9
  9174  003CC8  2AE3               	incf	plusw1,f,c
  9175  003CCA  E311               	bnc	u2130
  9176  003CCC  0EF8               	movlw	-8
  9177  003CCE  2AE3               	incf	plusw1,f,c
  9178  003CD0  E30E               	bnc	u2130
  9179  003CD2  0EF9               	movlw	-7
  9180  003CD4  2AE3               	incf	plusw1,f,c
  9181  003CD6  E30B               	bnc	u2130
  9182  003CD8  0EFA               	movlw	-6
  9183  003CDA  2AE3               	incf	plusw1,f,c
  9184  003CDC  E308               	bnc	u2130
  9185  003CDE  0EFB               	movlw	-5
  9186  003CE0  2AE3               	incf	plusw1,f,c
  9187  003CE2  E305               	bnc	u2130
  9188  003CE4  0EFC               	movlw	-4
  9189  003CE6  2AE3               	incf	plusw1,f,c
  9190  003CE8  E302               	bnc	u2130
  9191  003CEA  0EFD               	movlw	-3
  9192  003CEC  2AE3               	incf	plusw1,f,c
  9193  003CEE                     u2130:
  9194                           
  9195                           ;stkvar	_dividend @ sp[(-2)+-8]
  9196  003CEE  0EF6               	movlw	246
  9197  003CF0  24E1               	addwf	fsr1l,w,c
  9198  003CF2  6ED9               	movwf	fsr2l,c
  9199  003CF4  0EFF               	movlw	255
  9200  003CF6  20E2               	addwfc	fsr1h,w,c
  9201  003CF8  6EDA               	movwf	fsr2h,c
  9202                           
  9203                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9204  003CFA  0E08               	movlw	8
  9205  003CFC  6E3B               	movwf	btemp,c
  9206  003CFE  0EF6               	movlw	-10
  9207  003D00                     us214999:
  9208  003D00  006F FF7B FFE3     	movff	postinc2,plusw1
  9209  003D06  28E8               	incf	wreg,w,c
  9210  003D08  2E3B               	decfsz	btemp,f,c
  9211  003D0A  D7FA               	bra	us214999
  9212                           
  9213                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9214  003D0C  52E5               	movf	postdec1,f,c
  9215  003D0E  52E5               	movf	postdec1,f,c
  9216  003D10  0012               	return		;funcret
  9217  003D12                     __end_of___aomod:
  9218                           	opt callstack 0
  9219                           
  9220 ;; *************** function ___aodiv *****************
  9221 ;; Defined at:
  9222 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  dividend        8  [STACK] long long 
  9225 ;;  divisor         8  [STACK] long long 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  quotient        8  [STACK] long long 
  9228 ;;  sign            1  [STACK] unsigned char 
  9229 ;;  counter         1  [STACK] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  8  [STACK] long long 
  9232 ;; Registers used:
  9233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/1
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    3
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_dtoa
  9250 ;; This function uses a reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text39
  9254  003852                     __ptext39:
  9255                           	opt callstack 0
  9256  003852                     ___aodiv:
  9257                           	opt callstack 0
  9258                           
  9259                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9260  003852  0E0A               	movlw	10
  9261  003854  26E1               	addwf	fsr1l,f,c
  9262  003856  0E00               	movlw	0
  9263  003858  22E2               	addwfc	fsr1h,f,c
  9264                           
  9265                           ;stkvar	_sign @ sp[(-10)+8]
  9266                           
  9267                           ;incstack = 0
  9268  00385A  0EFE               	movlw	-2
  9269  00385C  6AE3               	clrf	plusw1,c
  9270                           
  9271                           ;stkvar	_divisor @ sp[(-10)+-16]
  9272  00385E  0EED               	movlw	-19
  9273  003860  AEE3               	btfss	plusw1,7,c
  9274  003862  D028               	goto	l4684
  9275                           
  9276                           ;stkvar	_divisor @ sp[(-10)+-16]
  9277                           ;stkvar	_divisor @ sp[(-10)+-16]
  9278  003864  0EE6               	movlw	-26
  9279  003866  6CE3               	negf	plusw1,c
  9280  003868  0EE7               	movlw	-25
  9281  00386A  1EE3               	comf	plusw1,f,c
  9282  00386C  0EE8               	movlw	-24
  9283  00386E  1EE3               	comf	plusw1,f,c
  9284  003870  0EE9               	movlw	-23
  9285  003872  1EE3               	comf	plusw1,f,c
  9286  003874  0EEA               	movlw	-22
  9287  003876  1EE3               	comf	plusw1,f,c
  9288  003878  0EEB               	movlw	-21
  9289  00387A  1EE3               	comf	plusw1,f,c
  9290  00387C  0EEC               	movlw	-20
  9291  00387E  1EE3               	comf	plusw1,f,c
  9292  003880  0EED               	movlw	-19
  9293  003882  1EE3               	comf	plusw1,f,c
  9294  003884  E314               	bnc	u1930
  9295  003886  0EE7               	movlw	-25
  9296  003888  2AE3               	incf	plusw1,f,c
  9297  00388A  E311               	bnc	u1930
  9298  00388C  0EE8               	movlw	-24
  9299  00388E  2AE3               	incf	plusw1,f,c
  9300  003890  E30E               	bnc	u1930
  9301  003892  0EE9               	movlw	-23
  9302  003894  2AE3               	incf	plusw1,f,c
  9303  003896  E30B               	bnc	u1930
  9304  003898  0EEA               	movlw	-22
  9305  00389A  2AE3               	incf	plusw1,f,c
  9306  00389C  E308               	bnc	u1930
  9307  00389E  0EEB               	movlw	-21
  9308  0038A0  2AE3               	incf	plusw1,f,c
  9309  0038A2  E305               	bnc	u1930
  9310  0038A4  0EEC               	movlw	-20
  9311  0038A6  2AE3               	incf	plusw1,f,c
  9312  0038A8  E302               	bnc	u1930
  9313  0038AA  0EED               	movlw	-19
  9314  0038AC  2AE3               	incf	plusw1,f,c
  9315  0038AE                     u1930:
  9316                           
  9317                           ;stkvar	_sign @ sp[(-10)+8]
  9318  0038AE  0EFE               	movlw	-2
  9319  0038B0  6AE3               	clrf	plusw1,c
  9320  0038B2  2AE3               	incf	plusw1,f,c
  9321  0038B4                     l4684:
  9322                           
  9323                           ;stkvar	_dividend @ sp[(-10)+-8]
  9324  0038B4  0EF5               	movlw	-11
  9325  0038B6  AEE3               	btfss	plusw1,7,c
  9326  0038B8  D027               	goto	l4690
  9327                           
  9328                           ;stkvar	_dividend @ sp[(-10)+-8]
  9329                           ;stkvar	_dividend @ sp[(-10)+-8]
  9330  0038BA  0EEE               	movlw	-18
  9331  0038BC  6CE3               	negf	plusw1,c
  9332  0038BE  0EEF               	movlw	-17
  9333  0038C0  1EE3               	comf	plusw1,f,c
  9334  0038C2  0EF0               	movlw	-16
  9335  0038C4  1EE3               	comf	plusw1,f,c
  9336  0038C6  0EF1               	movlw	-15
  9337  0038C8  1EE3               	comf	plusw1,f,c
  9338  0038CA  0EF2               	movlw	-14
  9339  0038CC  1EE3               	comf	plusw1,f,c
  9340  0038CE  0EF3               	movlw	-13
  9341  0038D0  1EE3               	comf	plusw1,f,c
  9342  0038D2  0EF4               	movlw	-12
  9343  0038D4  1EE3               	comf	plusw1,f,c
  9344  0038D6  0EF5               	movlw	-11
  9345  0038D8  1EE3               	comf	plusw1,f,c
  9346  0038DA  E314               	bnc	u1950
  9347  0038DC  0EEF               	movlw	-17
  9348  0038DE  2AE3               	incf	plusw1,f,c
  9349  0038E0  E311               	bnc	u1950
  9350  0038E2  0EF0               	movlw	-16
  9351  0038E4  2AE3               	incf	plusw1,f,c
  9352  0038E6  E30E               	bnc	u1950
  9353  0038E8  0EF1               	movlw	-15
  9354  0038EA  2AE3               	incf	plusw1,f,c
  9355  0038EC  E30B               	bnc	u1950
  9356  0038EE  0EF2               	movlw	-14
  9357  0038F0  2AE3               	incf	plusw1,f,c
  9358  0038F2  E308               	bnc	u1950
  9359  0038F4  0EF3               	movlw	-13
  9360  0038F6  2AE3               	incf	plusw1,f,c
  9361  0038F8  E305               	bnc	u1950
  9362  0038FA  0EF4               	movlw	-12
  9363  0038FC  2AE3               	incf	plusw1,f,c
  9364  0038FE  E302               	bnc	u1950
  9365  003900  0EF5               	movlw	-11
  9366  003902  2AE3               	incf	plusw1,f,c
  9367  003904                     u1950:
  9368                           
  9369                           ;stkvar	_sign @ sp[(-10)+8]
  9370  003904  0EFE               	movlw	-2
  9371  003906  70E3               	btg	plusw1,0,c
  9372  003908                     l4690:
  9373                           
  9374                           ;stkvar	_quotient @ sp[(-10)+0]
  9375  003908  0E07               	movlw	7
  9376  00390A  6E3B               	movwf	btemp,c
  9377  00390C  0EF6               	movlw	-10
  9378  00390E                     u1961:
  9379  00390E  6AE3               	clrf	plusw1,c
  9380  003910  2AE8               	incf	wreg,f,c
  9381  003912  063B               	decf	btemp,f,c
  9382  003914  E2FC               	bc	u1961
  9383                           
  9384                           ;stkvar	_divisor @ sp[(-10)+-16]
  9385  003916  0EE6               	movlw	-26
  9386  003918  50E3               	movf	plusw1,w,c
  9387  00391A  E116               	bnz	u1970
  9388  00391C  0EE7               	movlw	-25
  9389  00391E  50E3               	movf	plusw1,w,c
  9390  003920  E113               	bnz	u1970
  9391  003922  0EE8               	movlw	-24
  9392  003924  50E3               	movf	plusw1,w,c
  9393  003926  E110               	bnz	u1970
  9394  003928  0EE9               	movlw	-23
  9395  00392A  50E3               	movf	plusw1,w,c
  9396  00392C  E10D               	bnz	u1970
  9397  00392E  0EEA               	movlw	-22
  9398  003930  50E3               	movf	plusw1,w,c
  9399  003932  E10A               	bnz	u1970
  9400  003934  0EEB               	movlw	-21
  9401  003936  50E3               	movf	plusw1,w,c
  9402  003938  E107               	bnz	u1970
  9403  00393A  0EEC               	movlw	-20
  9404  00393C  50E3               	movf	plusw1,w,c
  9405  00393E  E104               	bnz	u1970
  9406  003940  0EED               	movlw	-19
  9407  003942  50E3               	movf	plusw1,w,c
  9408  003944  B4D8               	btfsc	status,2,c
  9409  003946  D088               	goto	u2000
  9410  003948                     u1970:
  9411                           
  9412                           ;stkvar	_counter @ sp[(-10)+9]
  9413  003948  0EFF               	movlw	-1
  9414  00394A  6AE3               	clrf	plusw1,c
  9415  00394C  D012               	goto	L21
  9416  00394E                     l4696:
  9417                           
  9418                           ;stkvar	_divisor @ sp[(-10)+-16]
  9419  00394E  90D8               	bcf	status,0,c
  9420  003950  0EE6               	movlw	-26
  9421  003952  36E3               	rlcf	plusw1,f,c
  9422  003954  0EE7               	movlw	-25
  9423  003956  36E3               	rlcf	plusw1,f,c
  9424  003958  0EE8               	movlw	-24
  9425  00395A  36E3               	rlcf	plusw1,f,c
  9426  00395C  0EE9               	movlw	-23
  9427  00395E  36E3               	rlcf	plusw1,f,c
  9428  003960  0EEA               	movlw	-22
  9429  003962  36E3               	rlcf	plusw1,f,c
  9430  003964  0EEB               	movlw	-21
  9431  003966  36E3               	rlcf	plusw1,f,c
  9432  003968  0EEC               	movlw	-20
  9433  00396A  36E3               	rlcf	plusw1,f,c
  9434  00396C  0EED               	movlw	-19
  9435  00396E  36E3               	rlcf	plusw1,f,c
  9436                           
  9437                           ;stkvar	_counter @ sp[(-10)+9]
  9438  003970  0EFF               	movlw	-1
  9439  003972                     L21:
  9440  003972  2AE3               	incf	plusw1,f,c
  9441                           
  9442                           ;stkvar	_divisor @ sp[(-10)+-16]
  9443  003974  0EED               	movlw	-19
  9444  003976  AEE3               	btfss	plusw1,7,c
  9445  003978  D7EA               	goto	l4696
  9446  00397A                     u1980:
  9447                           
  9448                           ;stkvar	_quotient @ sp[(-10)+0]
  9449  00397A  90D8               	bcf	status,0,c
  9450  00397C  0EF6               	movlw	-10
  9451  00397E  36E3               	rlcf	plusw1,f,c
  9452  003980  0EF7               	movlw	-9
  9453  003982  36E3               	rlcf	plusw1,f,c
  9454  003984  0EF8               	movlw	-8
  9455  003986  36E3               	rlcf	plusw1,f,c
  9456  003988  0EF9               	movlw	-7
  9457  00398A  36E3               	rlcf	plusw1,f,c
  9458  00398C  0EFA               	movlw	-6
  9459  00398E  36E3               	rlcf	plusw1,f,c
  9460  003990  0EFB               	movlw	-5
  9461  003992  36E3               	rlcf	plusw1,f,c
  9462  003994  0EFC               	movlw	-4
  9463  003996  36E3               	rlcf	plusw1,f,c
  9464  003998  0EFD               	movlw	-3
  9465  00399A  36E3               	rlcf	plusw1,f,c
  9466                           
  9467                           ;stkvar	_divisor @ sp[(-10)+-16]
  9468                           ;stkvar	_dividend @ sp[(-10)+-8]
  9469  00399C  50E1               	movf	fsr1l,w,c
  9470  00399E  0FEE               	addlw	-18
  9471  0039A0  6ED9               	movwf	fsr2l,c
  9472  0039A2  50E2               	movf	fsr1h,w,c
  9473  0039A4  6EDA               	movwf	fsr2h,c
  9474  0039A6  0EFF               	movlw	255
  9475  0039A8  22DA               	addwfc	fsr2h,f,c
  9476  0039AA  0EE6               	movlw	-26
  9477  0039AC  50E3               	movf	plusw1,w,c
  9478  0039AE  5CDE               	subwf	postinc2,w,c
  9479  0039B0  0EE7               	movlw	-25
  9480  0039B2  50E3               	movf	plusw1,w,c
  9481  0039B4  58DE               	subwfb	postinc2,w,c
  9482  0039B6  0EE8               	movlw	-24
  9483  0039B8  50E3               	movf	plusw1,w,c
  9484  0039BA  58DE               	subwfb	postinc2,w,c
  9485  0039BC  0EE9               	movlw	-23
  9486  0039BE  50E3               	movf	plusw1,w,c
  9487  0039C0  58DE               	subwfb	postinc2,w,c
  9488  0039C2  0EEA               	movlw	-22
  9489  0039C4  50E3               	movf	plusw1,w,c
  9490  0039C6  58DE               	subwfb	postinc2,w,c
  9491  0039C8  0EEB               	movlw	-21
  9492  0039CA  50E3               	movf	plusw1,w,c
  9493  0039CC  58DE               	subwfb	postinc2,w,c
  9494  0039CE  0EEC               	movlw	-20
  9495  0039D0  50E3               	movf	plusw1,w,c
  9496  0039D2  58DE               	subwfb	postinc2,w,c
  9497  0039D4  0EED               	movlw	-19
  9498  0039D6  50E3               	movf	plusw1,w,c
  9499  0039D8  58DE               	subwfb	postinc2,w,c
  9500  0039DA  A0D8               	btfss	status,0,c
  9501  0039DC  D021               	goto	l4708
  9502                           
  9503                           ;stkvar	_divisor @ sp[(-10)+-16]
  9504                           ;stkvar	_dividend @ sp[(-10)+-8]
  9505  0039DE  50E1               	movf	fsr1l,w,c
  9506  0039E0  0FEE               	addlw	-18
  9507  0039E2  6ED9               	movwf	fsr2l,c
  9508  0039E4  50E2               	movf	fsr1h,w,c
  9509  0039E6  6EDA               	movwf	fsr2h,c
  9510  0039E8  0EFF               	movlw	255
  9511  0039EA  22DA               	addwfc	fsr2h,f,c
  9512  0039EC  0EE6               	movlw	-26
  9513  0039EE  50E3               	movf	plusw1,w,c
  9514  0039F0  5EDE               	subwf	postinc2,f,c
  9515  0039F2  0EE7               	movlw	-25
  9516  0039F4  50E3               	movf	plusw1,w,c
  9517  0039F6  5ADE               	subwfb	postinc2,f,c
  9518  0039F8  0EE8               	movlw	-24
  9519  0039FA  50E3               	movf	plusw1,w,c
  9520  0039FC  5ADE               	subwfb	postinc2,f,c
  9521  0039FE  0EE9               	movlw	-23
  9522  003A00  50E3               	movf	plusw1,w,c
  9523  003A02  5ADE               	subwfb	postinc2,f,c
  9524  003A04  0EEA               	movlw	-22
  9525  003A06  50E3               	movf	plusw1,w,c
  9526  003A08  5ADE               	subwfb	postinc2,f,c
  9527  003A0A  0EEB               	movlw	-21
  9528  003A0C  50E3               	movf	plusw1,w,c
  9529  003A0E  5ADE               	subwfb	postinc2,f,c
  9530  003A10  0EEC               	movlw	-20
  9531  003A12  50E3               	movf	plusw1,w,c
  9532  003A14  5ADE               	subwfb	postinc2,f,c
  9533  003A16  0EED               	movlw	-19
  9534  003A18  50E3               	movf	plusw1,w,c
  9535  003A1A  5ADE               	subwfb	postinc2,f,c
  9536                           
  9537                           ;stkvar	_quotient @ sp[(-10)+0]
  9538  003A1C  0EF6               	movlw	-10
  9539  003A1E  80E3               	bsf	plusw1,0,c
  9540  003A20                     l4708:
  9541                           
  9542                           ;stkvar	_divisor @ sp[(-10)+-16]
  9543  003A20  90D8               	bcf	status,0,c
  9544  003A22  0EED               	movlw	-19
  9545  003A24  32E3               	rrcf	plusw1,f,c
  9546  003A26  0EEC               	movlw	-20
  9547  003A28  32E3               	rrcf	plusw1,f,c
  9548  003A2A  0EEB               	movlw	-21
  9549  003A2C  32E3               	rrcf	plusw1,f,c
  9550  003A2E  0EEA               	movlw	-22
  9551  003A30  32E3               	rrcf	plusw1,f,c
  9552  003A32  0EE9               	movlw	-23
  9553  003A34  32E3               	rrcf	plusw1,f,c
  9554  003A36  0EE8               	movlw	-24
  9555  003A38  32E3               	rrcf	plusw1,f,c
  9556  003A3A  0EE7               	movlw	-25
  9557  003A3C  32E3               	rrcf	plusw1,f,c
  9558  003A3E  0EE6               	movlw	-26
  9559  003A40  32E3               	rrcf	plusw1,f,c
  9560                           
  9561                           ;stkvar	_counter @ sp[(-10)+9]
  9562  003A42  0EFF               	movlw	-1
  9563  003A44  50E3               	movf	plusw1,w,c
  9564  003A46  6E3B               	movwf	btemp,c
  9565  003A48  0E01               	movlw	1
  9566  003A4A  5E3B               	subwf	btemp,f,c
  9567  003A4C  0EFF               	movlw	-1
  9568  003A4E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9569  003A54  A4D8               	btfss	status,2,c
  9570  003A56  D791               	goto	u1980
  9571  003A58                     u2000:
  9572                           
  9573                           ;stkvar	_sign @ sp[(-10)+8]
  9574  003A58  0EFE               	movlw	-2
  9575  003A5A  50E3               	movf	plusw1,w,c
  9576  003A5C  B4D8               	btfsc	status,2,c
  9577  003A5E  D025               	goto	u2020
  9578                           
  9579                           ;stkvar	_quotient @ sp[(-10)+0]
  9580                           ;stkvar	_quotient @ sp[(-10)+0]
  9581  003A60  0EF6               	movlw	-10
  9582  003A62  6CE3               	negf	plusw1,c
  9583  003A64  0EF7               	movlw	-9
  9584  003A66  1EE3               	comf	plusw1,f,c
  9585  003A68  0EF8               	movlw	-8
  9586  003A6A  1EE3               	comf	plusw1,f,c
  9587  003A6C  0EF9               	movlw	-7
  9588  003A6E  1EE3               	comf	plusw1,f,c
  9589  003A70  0EFA               	movlw	-6
  9590  003A72  1EE3               	comf	plusw1,f,c
  9591  003A74  0EFB               	movlw	-5
  9592  003A76  1EE3               	comf	plusw1,f,c
  9593  003A78  0EFC               	movlw	-4
  9594  003A7A  1EE3               	comf	plusw1,f,c
  9595  003A7C  0EFD               	movlw	-3
  9596  003A7E  1EE3               	comf	plusw1,f,c
  9597  003A80  E314               	bnc	u2020
  9598  003A82  0EF7               	movlw	-9
  9599  003A84  2AE3               	incf	plusw1,f,c
  9600  003A86  E311               	bnc	u2020
  9601  003A88  0EF8               	movlw	-8
  9602  003A8A  2AE3               	incf	plusw1,f,c
  9603  003A8C  E30E               	bnc	u2020
  9604  003A8E  0EF9               	movlw	-7
  9605  003A90  2AE3               	incf	plusw1,f,c
  9606  003A92  E30B               	bnc	u2020
  9607  003A94  0EFA               	movlw	-6
  9608  003A96  2AE3               	incf	plusw1,f,c
  9609  003A98  E308               	bnc	u2020
  9610  003A9A  0EFB               	movlw	-5
  9611  003A9C  2AE3               	incf	plusw1,f,c
  9612  003A9E  E305               	bnc	u2020
  9613  003AA0  0EFC               	movlw	-4
  9614  003AA2  2AE3               	incf	plusw1,f,c
  9615  003AA4  E302               	bnc	u2020
  9616  003AA6  0EFD               	movlw	-3
  9617  003AA8  2AE3               	incf	plusw1,f,c
  9618  003AAA                     u2020:
  9619                           
  9620                           ;stkvar	_quotient @ sp[(-10)+0]
  9621  003AAA  0EF6               	movlw	246
  9622  003AAC  24E1               	addwf	fsr1l,w,c
  9623  003AAE  6ED9               	movwf	fsr2l,c
  9624  003AB0  0EFF               	movlw	255
  9625  003AB2  20E2               	addwfc	fsr1h,w,c
  9626  003AB4  6EDA               	movwf	fsr2h,c
  9627                           
  9628                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9629  003AB6  0E08               	movlw	8
  9630  003AB8  6E3B               	movwf	btemp,c
  9631  003ABA  0EEE               	movlw	-18
  9632  003ABC                     us203999:
  9633  003ABC  006F FF7B FFE3     	movff	postinc2,plusw1
  9634  003AC2  28E8               	incf	wreg,w,c
  9635  003AC4  2E3B               	decfsz	btemp,f,c
  9636  003AC6  D7FA               	bra	us203999
  9637                           
  9638                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9639  003AC8  0EF6               	movlw	246
  9640  003ACA  26E1               	addwf	fsr1l,f,c
  9641  003ACC  0EFF               	movlw	255
  9642  003ACE  22E2               	addwfc	fsr1h,f,c
  9643  003AD0  0012               	return		;funcret
  9644  003AD2                     __end_of___aodiv:
  9645                           	opt callstack 0
  9646                           
  9647 ;; *************** function _ctoa *****************
  9648 ;; Defined at:
  9649 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9652 ;;		 -> f(5), NULL(0), 
  9653 ;;  c               1  [STACK] unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  w               2  [STACK] int 
  9656 ;;  l               2    0        int 
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  2  [STACK] int 
  9659 ;; Registers used:
  9660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9670 ;;Total ram usage:        0 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:    8
  9673 ;; This function calls:
  9674 ;;		_pad
  9675 ;; This function is called by:
  9676 ;;		_vfpfcnvrt
  9677 ;; This function uses a reentrant model
  9678 ;;
  9679                           
  9680                           	psect	text40
  9681  004D16                     __ptext40:
  9682                           	opt callstack 0
  9683  004D16                     _ctoa:
  9684                           	opt callstack 0
  9685                           
  9686                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9687  004D16  52E6               	movf	postinc1,f,c
  9688  004D18  52E6               	movf	postinc1,f,c
  9689                           
  9690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9691                           
  9692                           ;incstack = 0
  9693  004D1A  5023               	movf	_width,w,c
  9694  004D1C  1024               	iorwf	_width+1,w,c
  9695  004D1E  A4D8               	btfss	status,2,c
  9696  004D20  D009               	goto	l6420
  9697                           
  9698                           ;stkvar	_w @ sp[(-2)+0]
  9699  004D22  0EFE               	movlw	-2
  9700  004D24  0060  F08F  FFE3   	movff	_width,plusw1
  9701  004D2A  0EFF               	movlw	-1
  9702  004D2C  0060  F093  FFE3   	movff	_width+1,plusw1
  9703  004D32  D016               	goto	l6422
  9704  004D34                     l6420:
  9705  004D34  0EFF               	movlw	255
  9706  004D36  6E45               	movwf	btemp+10,c
  9707  004D38  0EFF               	movlw	255
  9708  004D3A  6E46               	movwf	btemp+11,c
  9709  004D3C  0060  F08C  F043   	movff	_width,btemp+8
  9710  004D42  0060  F090  F044   	movff	_width+1,btemp+9
  9711  004D48  5045               	movf	btemp+10,w,c
  9712  004D4A  2643               	addwf	btemp+8,f,c
  9713  004D4C  5046               	movf	btemp+11,w,c
  9714  004D4E  2244               	addwfc	btemp+9,f,c
  9715                           
  9716                           ;stkvar	_w @ sp[(-2)+0]
  9717  004D50  0EFE               	movlw	-2
  9718  004D52  0060  F10F  FFE3   	movff	btemp+8,plusw1
  9719  004D58  0EFF               	movlw	-1
  9720  004D5A  0060  F113  FFE3   	movff	btemp+9,plusw1
  9721  004D60                     l6422:
  9722                           
  9723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9724                           ;stkvar	_c @ sp[(-2)+-3]
  9725  004D60  0EFB               	movlw	-5
  9726  004D62  006F FF8C  F1D2    	movff	plusw1,_dbuf
  9727                           
  9728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9729  004D68  0101               	movlb	1	; () banked
  9730  004D6A  6BD3               	clrf	(_dbuf+1)& (0+255),b
  9731                           
  9732                           ; BSR set to: 1
  9733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9734                           ;stkvar	_w @ sp[(-2)+0]
  9735  004D6C  0EFE               	movlw	-2
  9736  004D6E  006F FF8F FFE6     	movff	plusw1,postinc1
  9737  004D74  006F FF8F FFE6     	movff	plusw1,postinc1
  9738  004D7A  0ED2               	movlw	low _dbuf
  9739  004D7C  6EE6               	movwf	postinc1,c
  9740  004D7E  0E01               	movlw	high _dbuf
  9741  004D80  6EE6               	movwf	postinc1,c
  9742                           
  9743                           ;stkvar	_fp @ sp[(-6)+-2]
  9744  004D82  0EF8               	movlw	-8
  9745  004D84  006F FF8F FFE6     	movff	plusw1,postinc1
  9746  004D8A  006F FF8F FFE6     	movff	plusw1,postinc1
  9747  004D90  EC43  F021         	call	_pad	;wreg free
  9748                           
  9749                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9750  004D94  0EFB               	movlw	251
  9751  004D96  26E1               	addwf	fsr1l,f,c
  9752  004D98  0EFF               	movlw	255
  9753  004D9A  22E2               	addwfc	fsr1h,f,c
  9754  004D9C  0012               	return		;funcret
  9755  004D9E                     __end_of_ctoa:
  9756                           	opt callstack 0
  9757                           
  9758 ;; *************** function _pad *****************
  9759 ;; Defined at:
  9760 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9763 ;;		 -> f(5), NULL(0), 
  9764 ;;  buf             2  [STACK] PTR unsigned char 
  9765 ;;		 -> dbuf(32), 
  9766 ;;  p               2  [STACK] int 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  w               2  [STACK] int 
  9769 ;;  i               2  [STACK] int 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  2  [STACK] int 
  9772 ;; Registers used:
  9773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/1
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    7
  9786 ;; This function calls:
  9787 ;;		_fputc
  9788 ;;		_fputs
  9789 ;;		_strlen
  9790 ;; This function is called by:
  9791 ;;		_ctoa
  9792 ;;		_dtoa
  9793 ;; This function uses a reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text41
  9797  004286                     __ptext41:
  9798                           	opt callstack 0
  9799  004286                     _pad:
  9800                           	opt callstack 0
  9801                           
  9802                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9803  004286  52E6               	movf	postinc1,f,c
  9804  004288  52E6               	movf	postinc1,f,c
  9805  00428A  52E6               	movf	postinc1,f,c
  9806  00428C  52E6               	movf	postinc1,f,c
  9807                           
  9808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9809                           
  9810                           ;incstack = 0
  9811  00428E  A027               	btfss	_flags,0,c
  9812  004290  D010               	goto	l6398
  9813                           
  9814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9815                           ;stkvar	_fp @ sp[(-4)+-2]
  9816  004292  0EFA               	movlw	-6
  9817  004294  006F FF8F FFE6     	movff	plusw1,postinc1
  9818  00429A  006F FF8F FFE6     	movff	plusw1,postinc1
  9819                           
  9820                           ;stkvar	_buf @ sp[(-6)+-4]
  9821  0042A0  0EF6               	movlw	-10
  9822  0042A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9823  0042A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9824  0042AE  ECF6  F025         	call	_fputs	;wreg free
  9825  0042B2                     l6398:
  9826                           
  9827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9828                           ;stkvar	_p @ sp[(-4)+-6]
  9829  0042B2  0EF7               	movlw	-9
  9830  0042B4  BEE3               	btfsc	plusw1,7,c
  9831  0042B6  D011               	goto	l6402
  9832                           
  9833                           ;stkvar	_p @ sp[(-4)+-6]
  9834                           ;stkvar	_w @ sp[(-4)+0]
  9835  0042B8  0EF6               	movlw	-10
  9836  0042BA  006F FF8C  F03B    	movff	plusw1,btemp
  9837  0042C0  0EFC               	movlw	-4
  9838  0042C2  0060  F0EF  FFE3   	movff	btemp,plusw1
  9839  0042C8  0EF7               	movlw	-9
  9840  0042CA  006F FF8C  F03B    	movff	plusw1,btemp
  9841  0042D0  0EFD               	movlw	-3
  9842  0042D2  0060  F0EF  FFE3   	movff	btemp,plusw1
  9843  0042D8  D004               	goto	l1670
  9844  0042DA                     l6402:
  9845                           
  9846                           ;stkvar	_w @ sp[(-4)+0]
  9847  0042DA  0EFC               	movlw	-4
  9848  0042DC  6AE3               	clrf	plusw1,c
  9849  0042DE  0EFD               	movlw	-3
  9850  0042E0  6AE3               	clrf	plusw1,c
  9851  0042E2                     l1670:
  9852                           
  9853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9854                           ;stkvar	_i @ sp[(-4)+2]
  9855  0042E2  0EFE               	movlw	-2
  9856  0042E4  6AE3               	clrf	plusw1,c
  9857  0042E6  0EFF               	movlw	-1
  9858  0042E8  6AE3               	clrf	plusw1,c
  9859                           
  9860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9861  0042EA  D01E               	goto	l6408
  9862  0042EC                     l6404:
  9863                           
  9864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9865                           ;stkvar	_fp @ sp[(-4)+-2]
  9866  0042EC  0EFA               	movlw	-6
  9867  0042EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9868  0042F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9869  0042FA  0E20               	movlw	32
  9870  0042FC  6EE6               	movwf	postinc1,c
  9871  0042FE  0E00               	movlw	0
  9872  004300  6EE6               	movwf	postinc1,c
  9873  004302  ECCD  F021         	call	_fputc	;wreg free
  9874                           
  9875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9876                           ;stkvar	_i @ sp[(-4)+2]
  9877  004306  0EFE               	movlw	-2
  9878  004308  50E3               	movf	plusw1,w,c
  9879  00430A  0F01               	addlw	1
  9880  00430C  6E3B               	movwf	btemp,c
  9881  00430E  0EFE               	movlw	-2
  9882  004310  0060  F0EF  FFE3   	movff	btemp,plusw1
  9883  004316  6A3B               	clrf	btemp,c
  9884  004318  0EFF               	movlw	-1
  9885  00431A  50E3               	movf	plusw1,w,c
  9886  00431C  203B               	addwfc	btemp,w,c
  9887  00431E  6E3B               	movwf	btemp,c
  9888  004320  0EFF               	movlw	-1
  9889  004322  0060  F0EF  FFE3   	movff	btemp,plusw1
  9890  004328                     l6408:
  9891                           
  9892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9893                           ;stkvar	_w @ sp[(-4)+0]
  9894                           ;stkvar	_i @ sp[(-4)+2]
  9895  004328  50E1               	movf	fsr1l,w,c
  9896  00432A  0FFE               	addlw	-2
  9897  00432C  6ED9               	movwf	fsr2l,c
  9898  00432E  50E2               	movf	fsr1h,w,c
  9899  004330  6EDA               	movwf	fsr2h,c
  9900  004332  0EFF               	movlw	255
  9901  004334  22DA               	addwfc	fsr2h,f,c
  9902  004336  0EFC               	movlw	-4
  9903  004338  50E3               	movf	plusw1,w,c
  9904  00433A  5CDE               	subwf	postinc2,w,c
  9905  00433C  50DE               	movf	postinc2,w,c
  9906  00433E  0A80               	xorlw	128
  9907  004340  6E3B               	movwf	btemp,c
  9908  004342  0EFD               	movlw	-3
  9909  004344  50E3               	movf	plusw1,w,c
  9910  004346  0A80               	xorlw	128
  9911  004348  583B               	subwfb	btemp,w,c
  9912  00434A  A0D8               	btfss	status,0,c
  9913  00434C  D7CF               	goto	l6404
  9914                           
  9915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9916  00434E  B027               	btfsc	_flags,0,c
  9917  004350  D010               	goto	l6412
  9918                           
  9919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9920                           ;stkvar	_fp @ sp[(-4)+-2]
  9921  004352  0EFA               	movlw	-6
  9922  004354  006F FF8F FFE6     	movff	plusw1,postinc1
  9923  00435A  006F FF8F FFE6     	movff	plusw1,postinc1
  9924                           
  9925                           ;stkvar	_buf @ sp[(-6)+-4]
  9926  004360  0EF6               	movlw	-10
  9927  004362  006F FF8F FFE6     	movff	plusw1,postinc1
  9928  004368  006F FF8F FFE6     	movff	plusw1,postinc1
  9929  00436E  ECF6  F025         	call	_fputs	;wreg free
  9930  004372                     l6412:
  9931                           
  9932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9933                           ;stkvar	_w @ sp[(-4)+0]
  9934                           ;stkvar	_buf @ sp[(-4)+-4]
  9935  004372  0EF8               	movlw	-8
  9936  004374  006F FF8F FFE6     	movff	plusw1,postinc1
  9937  00437A  006F FF8F FFE6     	movff	plusw1,postinc1
  9938  004380  ECBB  F024         	call	_strlen	;wreg free
  9939  004384  0EFC               	movlw	-4
  9940  004386  50E3               	movf	plusw1,w,c
  9941  004388  263B               	addwf	btemp,f,c
  9942  00438A  0EFD               	movlw	-3
  9943  00438C  50E3               	movf	plusw1,w,c
  9944  00438E  223C               	addwfc	btemp+1,f,c
  9945                           
  9946                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  9947  004390  0EF6               	movlw	246
  9948  004392  26E1               	addwf	fsr1l,f,c
  9949  004394  0EFF               	movlw	255
  9950  004396  22E2               	addwfc	fsr1h,f,c
  9951  004398  0012               	return		;funcret
  9952  00439A                     __end_of_pad:
  9953                           	opt callstack 0
  9954                           
  9955 ;; *************** function _strlen *****************
  9956 ;; Defined at:
  9957 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  s               2  [STACK] PTR const unsigned char 
  9960 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9961 ;;		 -> STR_3(6), V(86), 
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;  a               2  [STACK] PTR const unsigned char 
  9964 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9965 ;;		 -> STR_3(6), V(86), 
  9966 ;; Return value:  Size  Location     Type
  9967 ;;                  2  [STACK] unsigned int 
  9968 ;; Registers used:
  9969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  9970 ;; Tracked objects:
  9971 ;;		On entry : 0/0
  9972 ;;		On exit  : 0/0
  9973 ;;		Unchanged: 0/0
  9974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9979 ;;Total ram usage:        0 bytes
  9980 ;; Hardware stack levels used:    1
  9981 ;; Hardware stack levels required when called:    3
  9982 ;; This function calls:
  9983 ;;		Nothing
  9984 ;; This function is called by:
  9985 ;;		_eaDogM_WriteString
  9986 ;;		_pad
  9987 ;;		_stoa
  9988 ;; This function uses a reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text42
  9992  004976                     __ptext42:
  9993                           	opt callstack 0
  9994  004976                     _strlen:
  9995                           	opt callstack 0
  9996                           
  9997                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9998  004976  52E6               	movf	postinc1,f,c
  9999  004978  52E6               	movf	postinc1,f,c
 10000                           
 10001                           ;stkvar	_s @ sp[(-2)+-2]
 10002                           
 10003                           ;incstack = 0
 10004  00497A  0EFC               	movlw	-4
 10005  00497C  006F FF8C  F045    	movff	plusw1,btemp+10
 10006  004982  0EFD               	movlw	-3
 10007  004984  006F FF8C  F046    	movff	plusw1,btemp+11
 10008                           
 10009                           ;stkvar	_a @ sp[(-2)+0]
 10010  00498A  0EFF               	movlw	-1
 10011  00498C  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10012  004992  0EFE               	movlw	-2
 10013  004994  0060  F117  FFE3   	movff	btemp+10,plusw1
 10014  00499A  D011               	goto	l4632
 10015  00499C                     l4630:
 10016                           
 10017                           ;stkvar	_s @ sp[(-2)+-2]
 10018  00499C  0EFC               	movlw	-4
 10019  00499E  50E3               	movf	plusw1,w,c
 10020  0049A0  0F01               	addlw	1
 10021  0049A2  6E3B               	movwf	btemp,c
 10022  0049A4  0EFC               	movlw	-4
 10023  0049A6  0060  F0EF  FFE3   	movff	btemp,plusw1
 10024  0049AC  6A3B               	clrf	btemp,c
 10025  0049AE  0EFD               	movlw	-3
 10026  0049B0  50E3               	movf	plusw1,w,c
 10027  0049B2  203B               	addwfc	btemp,w,c
 10028  0049B4  6E3B               	movwf	btemp,c
 10029  0049B6  0EFD               	movlw	-3
 10030  0049B8  0060  F0EF  FFE3   	movff	btemp,plusw1
 10031  0049BE                     l4632:
 10032                           
 10033                           ;stkvar	_s @ sp[(-2)+-2]
 10034  0049BE  0EFC               	movlw	-4
 10035  0049C0  006F FF8F FFF6     	movff	plusw1,tblptrl
 10036  0049C6  0EFD               	movlw	-3
 10037  0049C8  006F FF8F FFF7     	movff	plusw1,tblptrh
 10038  0049CE  0E00               	movlw	low (__smallconst shr (0+16))
 10039  0049D0  6EF8               	movwf	tblptru,c
 10040  0049D2  0E1F               	movlw	(high __ramtop+-1)
 10041  0049D4  64F7               	cpfsgt	tblptrh,c
 10042  0049D6  D003               	bra	u1847
 10043  0049D8  0008               	tblrd		*
 10044  0049DA  50F5               	movf	tablat,w,c
 10045  0049DC  D007               	bra	u1840
 10046  0049DE                     u1847:
 10047  0049DE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10048  0049E4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10049  0049EA  50EF               	movf	indf0,w,c
 10050  0049EC                     u1840:
 10051  0049EC  0900               	iorlw	0
 10052  0049EE  A4D8               	btfss	status,2,c
 10053  0049F0  D7D5               	goto	l4630
 10054                           
 10055                           ;stkvar	_a @ sp[(-2)+0]
 10056                           ;stkvar	_s @ sp[(-2)+-2]
 10057  0049F2  0EFC               	movlw	-4
 10058  0049F4  006F FF8C  F03B    	movff	plusw1,btemp
 10059  0049FA  0EFD               	movlw	-3
 10060  0049FC  006F FF8C  F03C    	movff	plusw1,btemp+1
 10061  004A02  0EFE               	movlw	-2
 10062  004A04  50E3               	movf	plusw1,w,c
 10063  004A06  5E3B               	subwf	btemp,f,c
 10064  004A08  0EFF               	movlw	-1
 10065  004A0A  50E3               	movf	plusw1,w,c
 10066  004A0C  5A3C               	subwfb	btemp+1,f,c
 10067                           
 10068                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10069  004A0E  52E5               	movf	postdec1,f,c
 10070  004A10  52E5               	movf	postdec1,f,c
 10071  004A12  52E5               	movf	postdec1,f,c
 10072  004A14  52E5               	movf	postdec1,f,c
 10073  004A16  0012               	return		;funcret
 10074  004A18                     __end_of_strlen:
 10075                           	opt callstack 0
 10076                           
 10077 ;; *************** function _fputs *****************
 10078 ;; Defined at:
 10079 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  s               2  [STACK] PTR const unsigned char 
 10082 ;;		 -> dbuf(32), 
 10083 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10084 ;;		 -> f(5), NULL(0), 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;  i               2  [STACK] int 
 10087 ;;  c               1  [STACK] unsigned char 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  2  [STACK] int 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/1
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;Total ram usage:        0 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    6
 10104 ;; This function calls:
 10105 ;;		_fputc
 10106 ;; This function is called by:
 10107 ;;		_pad
 10108 ;; This function uses a reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text43
 10112  004BEC                     __ptext43:
 10113                           	opt callstack 0
 10114  004BEC                     _fputs:
 10115                           	opt callstack 0
 10116                           
 10117                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10118  004BEC  52E6               	movf	postinc1,f,c
 10119  004BEE  52E6               	movf	postinc1,f,c
 10120  004BF0  52E6               	movf	postinc1,f,c
 10121                           
 10122                           ;stkvar	_i @ sp[(-3)+0]
 10123                           
 10124                           ;incstack = 0
 10125  004BF2  0EFD               	movlw	-3
 10126  004BF4  6AE3               	clrf	plusw1,c
 10127  004BF6  0EFE               	movlw	-2
 10128  004BF8  6AE3               	clrf	plusw1,c
 10129  004BFA  D01F               	goto	l6392
 10130  004BFC                     l6388:
 10131                           
 10132                           ;stkvar	_fp @ sp[(-3)+-4]
 10133  004BFC  0EF9               	movlw	-7
 10134  004BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 10135  004C04  006F FF8F FFE6     	movff	plusw1,postinc1
 10136                           
 10137                           ;stkvar	_c @ sp[(-5)+2]
 10138  004C0A  0EFD               	movlw	-3
 10139  004C0C  50E3               	movf	plusw1,w,c
 10140  004C0E  6EE6               	movwf	postinc1,c
 10141  004C10  0E00               	movlw	0
 10142  004C12  6EE6               	movwf	postinc1,c
 10143  004C14  ECCD  F021         	call	_fputc	;wreg free
 10144                           
 10145                           ;stkvar	_i @ sp[(-3)+0]
 10146  004C18  0EFD               	movlw	-3
 10147  004C1A  50E3               	movf	plusw1,w,c
 10148  004C1C  0F01               	addlw	1
 10149  004C1E  6E3B               	movwf	btemp,c
 10150  004C20  0EFD               	movlw	-3
 10151  004C22  0060  F0EF  FFE3   	movff	btemp,plusw1
 10152  004C28  6A3B               	clrf	btemp,c
 10153  004C2A  0EFE               	movlw	-2
 10154  004C2C  50E3               	movf	plusw1,w,c
 10155  004C2E  203B               	addwfc	btemp,w,c
 10156  004C30  6E3B               	movwf	btemp,c
 10157  004C32  0EFE               	movlw	-2
 10158  004C34  0060  F0EF  FFE3   	movff	btemp,plusw1
 10159  004C3A                     l6392:
 10160                           
 10161                           ;stkvar	_i @ sp[(-3)+0]
 10162  004C3A  0EFD               	movlw	-3
 10163  004C3C  006F FF8C  F045    	movff	plusw1,btemp+10
 10164  004C42  0EFE               	movlw	-2
 10165  004C44  006F FF8C  F046    	movff	plusw1,btemp+11
 10166                           
 10167                           ;stkvar	_s @ sp[(-3)+-2]
 10168  004C4A  0EFB               	movlw	-5
 10169  004C4C  006F FF8C  F043    	movff	plusw1,btemp+8
 10170  004C52  0EFC               	movlw	-4
 10171  004C54  006F FF8C  F044    	movff	plusw1,btemp+9
 10172  004C5A  5045               	movf	btemp+10,w,c
 10173  004C5C  2443               	addwf	btemp+8,w,c
 10174  004C5E  6ED9               	movwf	fsr2l,c
 10175  004C60  5046               	movf	btemp+11,w,c
 10176  004C62  2044               	addwfc	btemp+9,w,c
 10177  004C64  6EDA               	movwf	fsr2h,c
 10178  004C66  50DF               	movf	indf2,w,c
 10179  004C68  6E46               	movwf	btemp+11,c
 10180                           
 10181                           ;stkvar	_c @ sp[(-3)+2]
 10182  004C6A  0EFF               	movlw	-1
 10183  004C6C  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10184  004C72  0EFF               	movlw	-1
 10185  004C74  50E3               	movf	plusw1,w,c
 10186  004C76  A4D8               	btfss	status,2,c
 10187  004C78  D7C1               	goto	l6388
 10188                           
 10189                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10190  004C7A  0EF9               	movlw	249
 10191  004C7C  26E1               	addwf	fsr1l,f,c
 10192  004C7E  0EFF               	movlw	255
 10193  004C80  22E2               	addwfc	fsr1h,f,c
 10194  004C82  0012               	return		;funcret
 10195  004C84                     __end_of_fputs:
 10196                           	opt callstack 0
 10197                           
 10198 ;; *************** function _fputc *****************
 10199 ;; Defined at:
 10200 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;  c               2  [STACK] int 
 10203 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10204 ;;		 -> f(5), NULL(0), 
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  2  [STACK] int 
 10209 ;; Registers used:
 10210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10220 ;;Total ram usage:        0 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:    5
 10223 ;; This function calls:
 10224 ;;		_putch
 10225 ;; This function is called by:
 10226 ;;		_pad
 10227 ;;		_stoa
 10228 ;;		_vfpfcnvrt
 10229 ;;		_fputs
 10230 ;; This function uses a reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text44
 10234  00439A                     __ptext44:
 10235                           	opt callstack 0
 10236  00439A                     _fputc:
 10237                           	opt callstack 21
 10238                           
 10239                           ;stkvar	_fp @ sp[(0)+-4]
 10240                           
 10241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10242                           ;incstack = 0
 10243  00439A  0EFC               	movlw	-4
 10244  00439C  006F FF8C  F03B    	movff	plusw1,btemp
 10245  0043A2  0EFD               	movlw	-3
 10246  0043A4  50E3               	movf	plusw1,w,c
 10247  0043A6  103B               	iorwf	btemp,w,c
 10248  0043A8  B4D8               	btfsc	status,2,c
 10249  0043AA  D009               	goto	u3420
 10250                           
 10251                           ;stkvar	_fp @ sp[(0)+-4]
 10252  0043AC  0EFC               	movlw	-4
 10253  0043AE  006F FF8C  F03B    	movff	plusw1,btemp
 10254  0043B4  0EFD               	movlw	-3
 10255  0043B6  50E3               	movf	plusw1,w,c
 10256  0043B8  103B               	iorwf	btemp,w,c
 10257  0043BA  A4D8               	btfss	status,2,c
 10258  0043BC  D006               	goto	l6378
 10259  0043BE                     u3420:
 10260                           
 10261                           ;stkvar	_c @ sp[(0)+-2]
 10262  0043BE  0EFE               	movlw	-2
 10263  0043C0  50E3               	movf	plusw1,w,c
 10264  0043C2  6EE6               	movwf	postinc1,c
 10265  0043C4  EC98  F02C         	call	_putch	;wreg free
 10266  0043C8  D069               	goto	l2453
 10267  0043CA                     l6378:
 10268                           
 10269                           ;stkvar	_fp @ sp[(0)+-4]
 10270  0043CA  0EFC               	movlw	-4
 10271  0043CC  006F FF8C  F045    	movff	plusw1,btemp+10
 10272  0043D2  0EFD               	movlw	-3
 10273  0043D4  006F FF8C  F046    	movff	plusw1,btemp+11
 10274  0043DA  0E03               	movlw	3
 10275  0043DC  2445               	addwf	btemp+10,w,c
 10276  0043DE  6ED9               	movwf	fsr2l,c
 10277  0043E0  0E00               	movlw	0
 10278  0043E2  2046               	addwfc	btemp+11,w,c
 10279  0043E4  6EDA               	movwf	fsr2h,c
 10280  0043E6  50DE               	movf	postinc2,w,c
 10281  0043E8  10DE               	iorwf	postinc2,w,c
 10282  0043EA  B4D8               	btfsc	status,2,c
 10283  0043EC  D026               	goto	u3440
 10284                           
 10285                           ;stkvar	_fp @ sp[(0)+-4]
 10286  0043EE  0EFC               	movlw	-4
 10287  0043F0  006F FF8C  F045    	movff	plusw1,btemp+10
 10288  0043F6  0EFD               	movlw	-3
 10289  0043F8  006F FF8C  F046    	movff	plusw1,btemp+11
 10290  0043FE  0E03               	movlw	3
 10291  004400  2445               	addwf	btemp+10,w,c
 10292  004402  6ED9               	movwf	fsr2l,c
 10293  004404  0E00               	movlw	0
 10294  004406  2046               	addwfc	btemp+11,w,c
 10295  004408  6EDA               	movwf	fsr2h,c
 10296                           
 10297                           ;stkvar	_fp @ sp[(0)+-4]
 10298  00440A  0EFC               	movlw	-4
 10299  00440C  006F FF8C  F045    	movff	plusw1,btemp+10
 10300  004412  0EFD               	movlw	-3
 10301  004414  006F FF8C  F046    	movff	plusw1,btemp+11
 10302  00441A  0E01               	movlw	1
 10303  00441C  2445               	addwf	btemp+10,w,c
 10304  00441E  6EE9               	movwf	fsr0l,c
 10305  004420  0E00               	movlw	0
 10306  004422  2046               	addwfc	btemp+11,w,c
 10307  004424  6EEA               	movwf	fsr0h,c
 10308  004426  50DE               	movf	postinc2,w,c
 10309  004428  5CEE               	subwf	postinc0,w,c
 10310  00442A  50EE               	movf	postinc0,w,c
 10311  00442C  0A80               	xorlw	128
 10312  00442E  6E3B               	movwf	btemp,c
 10313  004430  50DE               	movf	postinc2,w,c
 10314  004432  0A80               	xorlw	128
 10315  004434  583B               	subwfb	btemp,w,c
 10316  004436  B0D8               	btfsc	status,0,c
 10317  004438  D031               	goto	l2453
 10318  00443A                     u3440:
 10319                           
 10320                           ;stkvar	_c @ sp[(0)+-2]
 10321                           ;stkvar	_fp @ sp[(0)+-4]
 10322  00443A  0EFC               	movlw	-4
 10323  00443C  006F FF8C  F045    	movff	plusw1,btemp+10
 10324  004442  0EFD               	movlw	-3
 10325  004444  006F FF8C  F046    	movff	plusw1,btemp+11
 10326  00444A  0E01               	movlw	1
 10327  00444C  2445               	addwf	btemp+10,w,c
 10328  00444E  6ED9               	movwf	fsr2l,c
 10329  004450  0E00               	movlw	0
 10330  004452  2046               	addwfc	btemp+11,w,c
 10331  004454  6EDA               	movwf	fsr2h,c
 10332  004456  50DF               	movf	indf2,w,c
 10333  004458  6E46               	movwf	btemp+11,c
 10334                           
 10335                           ;stkvar	_fp @ sp[(0)+-4]
 10336  00445A  0EFC               	movlw	-4
 10337  00445C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10338  004462  0EFD               	movlw	-3
 10339  004464  006F FF8F FFDA     	movff	plusw1,fsr2h
 10340  00446A  50DF               	movf	indf2,w,c
 10341  00446C  2446               	addwf	btemp+11,w,c
 10342  00446E  6ED9               	movwf	fsr2l,c
 10343  004470  6ADA               	clrf	fsr2h,c
 10344  004472  0EFE               	movlw	-2
 10345  004474  006F FF8F FFDF     	movff	plusw1,indf2
 10346                           
 10347                           ;stkvar	_fp @ sp[(0)+-4]
 10348  00447A  0EFC               	movlw	-4
 10349  00447C  006F FF8C  F045    	movff	plusw1,btemp+10
 10350  004482  0EFD               	movlw	-3
 10351  004484  006F FF8C  F046    	movff	plusw1,btemp+11
 10352  00448A  0E01               	movlw	1
 10353  00448C  2445               	addwf	btemp+10,w,c
 10354  00448E  6ED9               	movwf	fsr2l,c
 10355  004490  0E00               	movlw	0
 10356  004492  2046               	addwfc	btemp+11,w,c
 10357  004494  6EDA               	movwf	fsr2h,c
 10358  004496  2ADE               	incf	postinc2,f,c
 10359  004498  0E00               	movlw	0
 10360  00449A  22DD               	addwfc	postdec2,f,c
 10361  00449C                     l2453:
 10362                           
 10363                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10364  00449C  52E5               	movf	postdec1,f,c
 10365  00449E  52E5               	movf	postdec1,f,c
 10366  0044A0  52E5               	movf	postdec1,f,c
 10367  0044A2  52E5               	movf	postdec1,f,c
 10368  0044A4  0012               	return		;funcret
 10369  0044A6                     __end_of_fputc:
 10370                           	opt callstack 0
 10371                           
 10372 ;; *************** function _putch *****************
 10373 ;; Defined at:
 10374 ;;		line 138 in file "eadog.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;  c               1  [STACK] unsigned char 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;		None
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  1  [STACK] void 
 10381 ;; Registers used:
 10382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10392 ;;Total ram usage:        0 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:    4
 10395 ;; This function calls:
 10396 ;;		_ringBufS_put_dma
 10397 ;; This function is called by:
 10398 ;;		_fputc
 10399 ;; This function uses a reentrant model
 10400 ;;
 10401                           
 10402                           	psect	text45
 10403  005930                     __ptext45:
 10404                           	opt callstack 0
 10405  005930                     _putch:
 10406                           	opt callstack 21
 10407                           
 10408                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10409                           ;stkvar	_c @ sp[(0)+-1]
 10410                           
 10411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10412                           ;incstack = 0
 10413  005930  0EFF               	movlw	-1
 10414  005932  50E3               	movf	plusw1,w,c
 10415  005934  6EE6               	movwf	postinc1,c
 10416  005936  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10417  00593C  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10418  005942  EC66  F024         	call	_ringBufS_put_dma	;wreg free
 10419                           
 10420                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10421  005946  52E5               	movf	postdec1,f,c
 10422  005948  0012               	return		;funcret
 10423  00594A                     __end_of_putch:
 10424                           	opt callstack 0
 10425                           
 10426 ;; *************** function _ringBufS_put_dma *****************
 10427 ;; Defined at:
 10428 ;;		line 67 in file "ringbufs.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10431 ;;		 -> ring_buf1(67), 
 10432 ;;  c               1  [STACK] const unsigned char 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1  [STACK] void 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10448 ;;Total ram usage:        0 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:    3
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_putch
 10455 ;; This function uses a reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text46
 10459  0048CC                     __ptext46:
 10460                           	opt callstack 0
 10461  0048CC                     _ringBufS_put_dma:
 10462                           	opt callstack 21
 10463                           
 10464                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10465                           ;stkvar	__this @ sp[(0)+-2]
 10466                           
 10467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10468                           ;incstack = 0
 10469  0048CC  0EFE               	movlw	-2
 10470  0048CE  006F FF8C  F045    	movff	plusw1,btemp+10
 10471  0048D4  0EFF               	movlw	-1
 10472  0048D6  006F FF8C  F046    	movff	plusw1,btemp+11
 10473  0048DC  0E42               	movlw	66
 10474  0048DE  2445               	addwf	btemp+10,w,c
 10475  0048E0  6ED9               	movwf	fsr2l,c
 10476  0048E2  0E00               	movlw	0
 10477  0048E4  2046               	addwfc	btemp+11,w,c
 10478  0048E6  6EDA               	movwf	fsr2h,c
 10479  0048E8  0E40               	movlw	64
 10480  0048EA  60DF               	cpfslt	indf2,c
 10481  0048EC  D040               	goto	l1444
 10482                           
 10483                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10484                           ;stkvar	_c @ sp[(0)+-3]
 10485                           ;stkvar	__this @ sp[(0)+-2]
 10486  0048EE  0EFE               	movlw	-2
 10487  0048F0  006F FF8C  F045    	movff	plusw1,btemp+10
 10488  0048F6  0EFF               	movlw	-1
 10489  0048F8  006F FF8C  F046    	movff	plusw1,btemp+11
 10490  0048FE  0E40               	movlw	64
 10491  004900  2445               	addwf	btemp+10,w,c
 10492  004902  6ED9               	movwf	fsr2l,c
 10493  004904  0E00               	movlw	0
 10494  004906  2046               	addwfc	btemp+11,w,c
 10495  004908  6EDA               	movwf	fsr2h,c
 10496  00490A  50DF               	movf	indf2,w,c
 10497  00490C  6E46               	movwf	btemp+11,c
 10498                           
 10499                           ;stkvar	__this @ sp[(0)+-2]
 10500  00490E  0EFE               	movlw	-2
 10501  004910  006F FF8C  F043    	movff	plusw1,btemp+8
 10502  004916  0EFF               	movlw	-1
 10503  004918  006F FF8C  F044    	movff	plusw1,btemp+9
 10504  00491E  5046               	movf	btemp+11,w,c
 10505  004920  2443               	addwf	btemp+8,w,c
 10506  004922  6ED9               	movwf	fsr2l,c
 10507  004924  0E00               	movlw	0
 10508  004926  2044               	addwfc	btemp+9,w,c
 10509  004928  6EDA               	movwf	fsr2h,c
 10510  00492A  0EFD               	movlw	-3
 10511  00492C  006F FF8F FFDF     	movff	plusw1,indf2
 10512                           
 10513                           ;ringbufs.c: 71:   ++_this->head;
 10514                           ;stkvar	__this @ sp[(0)+-2]
 10515  004932  0EFE               	movlw	-2
 10516  004934  006F FF8C  F045    	movff	plusw1,btemp+10
 10517  00493A  0EFF               	movlw	-1
 10518  00493C  006F FF8C  F046    	movff	plusw1,btemp+11
 10519  004942  0E40               	movlw	64
 10520  004944  2445               	addwf	btemp+10,w,c
 10521  004946  6ED9               	movwf	fsr2l,c
 10522  004948  0E00               	movlw	0
 10523  00494A  2046               	addwfc	btemp+11,w,c
 10524  00494C  6EDA               	movwf	fsr2h,c
 10525  00494E  2ADF               	incf	indf2,f,c
 10526                           
 10527                           ;ringbufs.c: 72:   ++_this->count;
 10528                           ;stkvar	__this @ sp[(0)+-2]
 10529  004950  0EFE               	movlw	-2
 10530  004952  006F FF8C  F045    	movff	plusw1,btemp+10
 10531  004958  0EFF               	movlw	-1
 10532  00495A  006F FF8C  F046    	movff	plusw1,btemp+11
 10533  004960  0E42               	movlw	66
 10534  004962  2445               	addwf	btemp+10,w,c
 10535  004964  6ED9               	movwf	fsr2l,c
 10536  004966  0E00               	movlw	0
 10537  004968  2046               	addwfc	btemp+11,w,c
 10538  00496A  6EDA               	movwf	fsr2h,c
 10539  00496C  2ADF               	incf	indf2,f,c
 10540  00496E                     l1444:
 10541                           
 10542                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10543  00496E  52E5               	movf	postdec1,f,c
 10544  004970  52E5               	movf	postdec1,f,c
 10545  004972  52E5               	movf	postdec1,f,c
 10546  004974  0012               	return		;funcret
 10547  004976                     __end_of_ringBufS_put_dma:
 10548                           	opt callstack 0
 10549                           
 10550 ;; *************** function _SYSTEM_Initialize *****************
 10551 ;; Defined at:
 10552 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;		None
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  1  [STACK] void 
 10559 ;; Registers used:
 10560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 3F/3C
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10570 ;;Total ram usage:        0 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    5
 10573 ;; This function calls:
 10574 ;;		_ADCC_Initialize
 10575 ;;		_CLC1_Initialize
 10576 ;;		_CLKREF_Initialize
 10577 ;;		_DMA1_Initialize
 10578 ;;		_DSM_Initialize
 10579 ;;		_EXT_INT_Initialize
 10580 ;;		_INTERRUPT_Initialize
 10581 ;;		_NCO1_Initialize
 10582 ;;		_OSCILLATOR_Initialize
 10583 ;;		_PIN_MANAGER_Initialize
 10584 ;;		_PMD_Initialize
 10585 ;;		_SPI1_Initialize
 10586 ;;		_TMR5_Initialize
 10587 ;;		_TMR6_Initialize
 10588 ;;		_UART1_Initialize
 10589 ;;		_UART2_Initialize
 10590 ;; This function is called by:
 10591 ;;		_main
 10592 ;; This function uses a reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text47
 10596  005214                     __ptext47:
 10597                           	opt callstack 0
 10598  005214                     _SYSTEM_Initialize:
 10599                           	opt callstack 25
 10600                           
 10601                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10602                           
 10603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10604                           ;incstack = 0
 10605  005214  EC3C  F027         	call	_INTERRUPT_Initialize	;wreg free
 10606                           
 10607                           ; BSR set to: 57
 10608                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10609  005218  ECE2  F02C         	call	_PMD_Initialize	;wreg free
 10610                           
 10611                           ; BSR set to: 57
 10612                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10613  00521C  EC0C  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 10614                           
 10615                           ; BSR set to: 58
 10616                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10617  005220  ECD7  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10618                           
 10619                           ; BSR set to: 57
 10620                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10621  005224  EC7C  F028         	call	_ADCC_Initialize	;wreg free
 10622                           
 10623                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10624  005228  EC7C  F02C         	call	_NCO1_Initialize	;wreg free
 10625                           
 10626                           ; BSR set to: 63
 10627                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10628  00522C  EC56  F028         	call	_EXT_INT_Initialize	;wreg free
 10629                           
 10630                           ; BSR set to: 57
 10631                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10632  005230  ECEB  F02A         	call	_TMR6_Initialize	;wreg free
 10633                           
 10634                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10635  005234  ECEA  F02B         	call	_CLC1_Initialize	;wreg free
 10636                           
 10637                           ; BSR set to: 60
 10638                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 10639  005238  ECC4  F028         	call	_TMR5_Initialize	;wreg free
 10640                           
 10641                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 10642  00523C  EC8A  F02C         	call	_DSM_Initialize	;wreg free
 10643                           
 10644                           ; BSR set to: 60
 10645                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10646  005240  EC6F  F027         	call	_UART1_Initialize	;wreg free
 10647                           
 10648                           ; BSR set to: 57
 10649                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10650  005244  ECD2  F027         	call	_UART2_Initialize	;wreg free
 10651                           
 10652                           ; BSR set to: 57
 10653                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10654  005248  ECCC  F02C         	call	_SPI1_Initialize	;wreg free
 10655                           
 10656                           ; BSR set to: 61
 10657                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 10658  00524C  EC07  F027         	call	_DMA1_Initialize	;wreg free
 10659                           
 10660                           ; BSR set to: 59
 10661                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 10662  005250  EC13  F02D         	call	_CLKREF_Initialize	;wreg free
 10663                           
 10664                           ; BSR set to: 60
 10665                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10666  005254  0012               	return		;funcret
 10667  005256                     __end_of_SYSTEM_Initialize:
 10668                           	opt callstack 0
 10669                           
 10670 ;; *************** function _UART2_Initialize *****************
 10671 ;; Defined at:
 10672 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1  [STACK] void 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10681 ;; Tracked objects:
 10682 ;;		On entry : 3F/39
 10683 ;;		On exit  : 3F/39
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10690 ;;Total ram usage:        0 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    4
 10693 ;; This function calls:
 10694 ;;		_UART2_SetRxInterruptHandler
 10695 ;;		_UART2_SetTxInterruptHandler
 10696 ;; This function is called by:
 10697 ;;		_SYSTEM_Initialize
 10698 ;; This function uses a reentrant model
 10699 ;;
 10700                           
 10701                           	psect	text48
 10702  004FA4                     __ptext48:
 10703                           	opt callstack 0
 10704  004FA4                     _UART2_Initialize:
 10705                           	opt callstack 25
 10706                           
 10707                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10708                           
 10709                           ; BSR set to: 60
 10710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10711                           ;incstack = 0
 10712  004FA4  0139               	movlb	57	; () banked
 10713  004FA6  9596               	bcf	150,2,b	;volatile
 10714                           
 10715                           ; BSR set to: 57
 10716                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10717  004FA8  0E9E               	movlw	low _UART2_Receive_ISR
 10718  004FAA  6EE6               	movwf	postinc1,c
 10719  004FAC  0E58               	movlw	high _UART2_Receive_ISR
 10720  004FAE  6EE6               	movwf	postinc1,c
 10721  004FB0  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10722  004FB2  6EE6               	movwf	postinc1,c
 10723  004FB4  ECAF  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10724                           
 10725                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10726  004FB8  0139               	movlb	57	; () banked
 10727  004FBA  9796               	bcf	150,3,b	;volatile
 10728                           
 10729                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10730  004FBC  0E12               	movlw	low _UART2_Transmit_ISR
 10731  004FBE  6EE6               	movwf	postinc1,c
 10732  004FC0  0E54               	movlw	high _UART2_Transmit_ISR
 10733  004FC2  6EE6               	movwf	postinc1,c
 10734  004FC4  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10735  004FC6  6EE6               	movwf	postinc1,c
 10736  004FC8  EC9B  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10737                           
 10738                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10739  004FCC  013D               	movlb	61	; () banked
 10740  004FCE  6BD4               	clrf	212,b	;volatile
 10741                           
 10742                           ; BSR set to: 61
 10743                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10744  004FD0  6BD6               	clrf	214,b	;volatile
 10745                           
 10746                           ; BSR set to: 61
 10747                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10748  004FD2  6BD8               	clrf	216,b	;volatile
 10749                           
 10750                           ; BSR set to: 61
 10751                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10752  004FD4  0EB0               	movlw	176
 10753  004FD6  6FDA               	movwf	218,b	;volatile
 10754                           
 10755                           ; BSR set to: 61
 10756                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10757  004FD8  0E80               	movlw	128
 10758  004FDA  6FDB               	movwf	219,b	;volatile
 10759                           
 10760                           ; BSR set to: 61
 10761                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10762  004FDC  6BDC               	clrf	220,b	;volatile
 10763                           
 10764                           ; BSR set to: 61
 10765                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10766  004FDE  0E82               	movlw	130
 10767  004FE0  6FDD               	movwf	221,b	;volatile
 10768                           
 10769                           ; BSR set to: 61
 10770                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10771  004FE2  0E06               	movlw	6
 10772  004FE4  6FDE               	movwf	222,b	;volatile
 10773                           
 10774                           ; BSR set to: 61
 10775                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10776  004FE6  6BDF               	clrf	223,b	;volatile
 10777                           
 10778                           ; BSR set to: 61
 10779                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10780  004FE8  6BE0               	clrf	224,b	;volatile
 10781                           
 10782                           ; BSR set to: 61
 10783                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10784  004FEA  6BE1               	clrf	225,b	;volatile
 10785                           
 10786                           ; BSR set to: 61
 10787                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10788  004FEC  6BE2               	clrf	226,b	;volatile
 10789                           
 10790                           ; BSR set to: 61
 10791                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10792  004FEE  6A34               	clrf	_uart2TxHead,c	;volatile
 10793                           
 10794                           ; BSR set to: 61
 10795                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10796  004FF0  6A33               	clrf	_uart2TxTail,c	;volatile
 10797                           
 10798                           ; BSR set to: 61
 10799                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10800  004FF2  0E40               	movlw	64
 10801  004FF4  6E32               	movwf	_uart2TxBufferRemaining,c	;volatile
 10802                           
 10803                           ; BSR set to: 61
 10804                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10805  004FF6  6A31               	clrf	_uart2RxHead,c	;volatile
 10806                           
 10807                           ; BSR set to: 61
 10808                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10809  004FF8  6A30               	clrf	_uart2RxTail,c	;volatile
 10810                           
 10811                           ; BSR set to: 61
 10812                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10813  004FFA  6A2F               	clrf	_uart2RxCount,c	;volatile
 10814                           
 10815                           ; BSR set to: 61
 10816                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10817  004FFC  0139               	movlb	57	; () banked
 10818  004FFE  8596               	bsf	150,2,b	;volatile
 10819                           
 10820                           ; BSR set to: 57
 10821                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10822  005000  0012               	return		;funcret
 10823  005002                     __end_of_UART2_Initialize:
 10824                           	opt callstack 0
 10825                           
 10826 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10827 ;; Defined at:
 10828 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10831 ;;		 -> UART2_Transmit_ISR(1), 
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;		None
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1  [STACK] void 
 10836 ;; Registers used:
 10837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10838 ;; Tracked objects:
 10839 ;;		On entry : 3F/39
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10847 ;;Total ram usage:        0 bytes
 10848 ;; Hardware stack levels used:    1
 10849 ;; Hardware stack levels required when called:    3
 10850 ;; This function calls:
 10851 ;;		Nothing
 10852 ;; This function is called by:
 10853 ;;		_UART2_Initialize
 10854 ;; This function uses a reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text49
 10858  005536                     __ptext49:
 10859                           	opt callstack 0
 10860  005536                     _UART2_SetTxInterruptHandler:
 10861                           	opt callstack 25
 10862                           
 10863                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10864                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10865                           
 10866                           ; BSR set to: 57
 10867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10868                           ;incstack = 0
 10869  005536  50E1               	movf	fsr1l,w,c
 10870  005538  0FFD               	addlw	-3
 10871  00553A  6ED9               	movwf	fsr2l,c
 10872  00553C  50E2               	movf	fsr1h,w,c
 10873  00553E  6EDA               	movwf	fsr2h,c
 10874  005540  0EFF               	movlw	255
 10875  005542  22DA               	addwfc	fsr2h,f,c
 10876  005544  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler
 10877  00554A  006F FF78  F015    	movff	postinc2,_UART2_TxInterruptHandler+1
 10878  005550  006F FF74  F016    	movff	postdec2,_UART2_TxInterruptHandler+2
 10879                           
 10880                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10881  005556  52E5               	movf	postdec1,f,c
 10882  005558  52E5               	movf	postdec1,f,c
 10883  00555A  52E5               	movf	postdec1,f,c
 10884  00555C  0012               	return		;funcret
 10885  00555E                     __end_of_UART2_SetTxInterruptHandler:
 10886                           	opt callstack 0
 10887                           
 10888 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10889 ;; Defined at:
 10890 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10893 ;;		 -> UART2_Receive_ISR(1), 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1  [STACK] void 
 10898 ;; Registers used:
 10899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10900 ;; Tracked objects:
 10901 ;;		On entry : 3F/39
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    3
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_UART2_Initialize
 10916 ;; This function uses a reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text50
 10920  00555E                     __ptext50:
 10921                           	opt callstack 0
 10922  00555E                     _UART2_SetRxInterruptHandler:
 10923                           	opt callstack 25
 10924                           
 10925                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10926                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10927                           
 10928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10929                           ;incstack = 0
 10930  00555E  50E1               	movf	fsr1l,w,c
 10931  005560  0FFD               	addlw	-3
 10932  005562  6ED9               	movwf	fsr2l,c
 10933  005564  50E2               	movf	fsr1h,w,c
 10934  005566  6EDA               	movwf	fsr2h,c
 10935  005568  0EFF               	movlw	255
 10936  00556A  22DA               	addwfc	fsr2h,f,c
 10937  00556C  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler
 10938  005572  006F FF78  F018    	movff	postinc2,_UART2_RxInterruptHandler+1
 10939  005578  006F FF74  F019    	movff	postdec2,_UART2_RxInterruptHandler+2
 10940                           
 10941                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10942  00557E  52E5               	movf	postdec1,f,c
 10943  005580  52E5               	movf	postdec1,f,c
 10944  005582  52E5               	movf	postdec1,f,c
 10945  005584  0012               	return		;funcret
 10946  005586                     __end_of_UART2_SetRxInterruptHandler:
 10947                           	opt callstack 0
 10948                           
 10949 ;; *************** function _UART1_Initialize *****************
 10950 ;; Defined at:
 10951 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;		None
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;		None
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1  [STACK] void 
 10958 ;; Registers used:
 10959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10960 ;; Tracked objects:
 10961 ;;		On entry : 3F/3C
 10962 ;;		On exit  : 3F/39
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10969 ;;Total ram usage:        0 bytes
 10970 ;; Hardware stack levels used:    1
 10971 ;; Hardware stack levels required when called:    4
 10972 ;; This function calls:
 10973 ;;		_UART1_SetRxInterruptHandler
 10974 ;;		_UART1_SetTxInterruptHandler
 10975 ;; This function is called by:
 10976 ;;		_SYSTEM_Initialize
 10977 ;; This function uses a reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text51
 10981  004EDE                     __ptext51:
 10982                           	opt callstack 0
 10983  004EDE                     _UART1_Initialize:
 10984                           	opt callstack 25
 10985                           
 10986                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10987                           
 10988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10989                           ;incstack = 0
 10990  004EDE  0139               	movlb	57	; () banked
 10991  004EE0  9793               	bcf	147,3,b	;volatile
 10992                           
 10993                           ; BSR set to: 57
 10994                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10995  004EE2  0E7E               	movlw	low _UART1_Receive_ISR
 10996  004EE4  6EE6               	movwf	postinc1,c
 10997  004EE6  0E58               	movlw	high _UART1_Receive_ISR
 10998  004EE8  6EE6               	movwf	postinc1,c
 10999  004EEA  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 11000  004EEC  6EE6               	movwf	postinc1,c
 11001  004EEE  ECD7  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 11002                           
 11003                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 11004  004EF2  0139               	movlb	57	; () banked
 11005  004EF4  9993               	bcf	147,4,b	;volatile
 11006                           
 11007                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 11008  004EF6  0EE6               	movlw	low _UART1_Transmit_ISR
 11009  004EF8  6EE6               	movwf	postinc1,c
 11010  004EFA  0E53               	movlw	high _UART1_Transmit_ISR
 11011  004EFC  6EE6               	movwf	postinc1,c
 11012  004EFE  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 11013  004F00  6EE6               	movwf	postinc1,c
 11014  004F02  ECC3  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 11015                           
 11016                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 11017  004F06  013D               	movlb	61	; () banked
 11018  004F08  6BEC               	clrf	236,b	;volatile
 11019                           
 11020                           ; BSR set to: 61
 11021                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 11022  004F0A  6BED               	clrf	237,b	;volatile
 11023                           
 11024                           ; BSR set to: 61
 11025                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 11026  004F0C  6BEE               	clrf	238,b	;volatile
 11027                           
 11028                           ; BSR set to: 61
 11029                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 11030  004F0E  6BEF               	clrf	239,b	;volatile
 11031                           
 11032                           ; BSR set to: 61
 11033                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 11034  004F10  6BF0               	clrf	240,b	;volatile
 11035                           
 11036                           ; BSR set to: 61
 11037                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 11038  004F12  6BF1               	clrf	241,b	;volatile
 11039                           
 11040                           ; BSR set to: 61
 11041                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 11042  004F14  0EB0               	movlw	176
 11043  004F16  6FF2               	movwf	242,b	;volatile
 11044                           
 11045                           ; BSR set to: 61
 11046                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 11047  004F18  0E80               	movlw	128
 11048  004F1A  6FF3               	movwf	243,b	;volatile
 11049                           
 11050                           ; BSR set to: 61
 11051                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 11052  004F1C  6BF4               	clrf	244,b	;volatile
 11053                           
 11054                           ; BSR set to: 61
 11055                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 11056  004F1E  0E82               	movlw	130
 11057  004F20  6FF5               	movwf	245,b	;volatile
 11058                           
 11059                           ; BSR set to: 61
 11060                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 11061  004F22  0E06               	movlw	6
 11062  004F24  6FF6               	movwf	246,b	;volatile
 11063                           
 11064                           ; BSR set to: 61
 11065                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 11066  004F26  6BF7               	clrf	247,b	;volatile
 11067                           
 11068                           ; BSR set to: 61
 11069                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 11070  004F28  6BF8               	clrf	248,b	;volatile
 11071                           
 11072                           ; BSR set to: 61
 11073                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 11074  004F2A  6BF9               	clrf	249,b	;volatile
 11075                           
 11076                           ; BSR set to: 61
 11077                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 11078  004F2C  6BFA               	clrf	250,b	;volatile
 11079                           
 11080                           ; BSR set to: 61
 11081                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 11082  004F2E  6A3A               	clrf	_uart1TxHead,c	;volatile
 11083                           
 11084                           ; BSR set to: 61
 11085                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 11086  004F30  6A39               	clrf	_uart1TxTail,c	;volatile
 11087                           
 11088                           ; BSR set to: 61
 11089                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 11090  004F32  0E40               	movlw	64
 11091  004F34  6E38               	movwf	_uart1TxBufferRemaining,c	;volatile
 11092                           
 11093                           ; BSR set to: 61
 11094                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 11095  004F36  6A37               	clrf	_uart1RxHead,c	;volatile
 11096                           
 11097                           ; BSR set to: 61
 11098                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 11099  004F38  6A36               	clrf	_uart1RxTail,c	;volatile
 11100                           
 11101                           ; BSR set to: 61
 11102                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 11103  004F3A  6A35               	clrf	_uart1RxCount,c	;volatile
 11104                           
 11105                           ; BSR set to: 61
 11106                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 11107  004F3C  0139               	movlb	57	; () banked
 11108  004F3E  8793               	bsf	147,3,b	;volatile
 11109                           
 11110                           ; BSR set to: 57
 11111                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11112  004F40  0012               	return		;funcret
 11113  004F42                     __end_of_UART1_Initialize:
 11114                           	opt callstack 0
 11115                           
 11116 ;; *************** function _UART1_SetTxInterruptHandler *****************
 11117 ;; Defined at:
 11118 ;;		line 244 in file "mcc_generated_files/uart1.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11121 ;;		 -> UART1_Transmit_ISR(1), 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;		None
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1  [STACK] void 
 11126 ;; Registers used:
 11127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11128 ;; Tracked objects:
 11129 ;;		On entry : 3F/39
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11137 ;;Total ram usage:        0 bytes
 11138 ;; Hardware stack levels used:    1
 11139 ;; Hardware stack levels required when called:    3
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_UART1_Initialize
 11144 ;; This function uses a reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text52
 11148  005586                     __ptext52:
 11149                           	opt callstack 0
 11150  005586                     _UART1_SetTxInterruptHandler:
 11151                           	opt callstack 25
 11152                           
 11153                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 11154                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11155                           
 11156                           ; BSR set to: 57
 11157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11158                           ;incstack = 0
 11159  005586  50E1               	movf	fsr1l,w,c
 11160  005588  0FFD               	addlw	-3
 11161  00558A  6ED9               	movwf	fsr2l,c
 11162  00558C  50E2               	movf	fsr1h,w,c
 11163  00558E  6EDA               	movwf	fsr2h,c
 11164  005590  0EFF               	movlw	255
 11165  005592  22DA               	addwfc	fsr2h,f,c
 11166  005594  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler
 11167  00559A  006F FF78  F00F    	movff	postinc2,_UART1_TxInterruptHandler+1
 11168  0055A0  006F FF74  F010    	movff	postdec2,_UART1_TxInterruptHandler+2
 11169                           
 11170                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11171  0055A6  52E5               	movf	postdec1,f,c
 11172  0055A8  52E5               	movf	postdec1,f,c
 11173  0055AA  52E5               	movf	postdec1,f,c
 11174  0055AC  0012               	return		;funcret
 11175  0055AE                     __end_of_UART1_SetTxInterruptHandler:
 11176                           	opt callstack 0
 11177                           
 11178 ;; *************** function _UART1_SetRxInterruptHandler *****************
 11179 ;; Defined at:
 11180 ;;		line 239 in file "mcc_generated_files/uart1.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11183 ;;		 -> UART1_Receive_ISR(1), 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;		None
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1  [STACK] void 
 11188 ;; Registers used:
 11189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11190 ;; Tracked objects:
 11191 ;;		On entry : 3F/39
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11199 ;;Total ram usage:        0 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:    3
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_UART1_Initialize
 11206 ;; This function uses a reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text53
 11210  0055AE                     __ptext53:
 11211                           	opt callstack 0
 11212  0055AE                     _UART1_SetRxInterruptHandler:
 11213                           	opt callstack 25
 11214                           
 11215                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 11216                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11217                           
 11218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11219                           ;incstack = 0
 11220  0055AE  50E1               	movf	fsr1l,w,c
 11221  0055B0  0FFD               	addlw	-3
 11222  0055B2  6ED9               	movwf	fsr2l,c
 11223  0055B4  50E2               	movf	fsr1h,w,c
 11224  0055B6  6EDA               	movwf	fsr2h,c
 11225  0055B8  0EFF               	movlw	255
 11226  0055BA  22DA               	addwfc	fsr2h,f,c
 11227  0055BC  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler
 11228  0055C2  006F FF78  F012    	movff	postinc2,_UART1_RxInterruptHandler+1
 11229  0055C8  006F FF74  F013    	movff	postdec2,_UART1_RxInterruptHandler+2
 11230                           
 11231                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11232  0055CE  52E5               	movf	postdec1,f,c
 11233  0055D0  52E5               	movf	postdec1,f,c
 11234  0055D2  52E5               	movf	postdec1,f,c
 11235  0055D4  0012               	return		;funcret
 11236  0055D6                     __end_of_UART1_SetRxInterruptHandler:
 11237                           	opt callstack 0
 11238                           
 11239 ;; *************** function _TMR6_Initialize *****************
 11240 ;; Defined at:
 11241 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;		None
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;		None
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1  [STACK] void 
 11248 ;; Registers used:
 11249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11250 ;; Tracked objects:
 11251 ;;		On entry : 3F/39
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11259 ;;Total ram usage:        0 bytes
 11260 ;; Hardware stack levels used:    1
 11261 ;; Hardware stack levels required when called:    4
 11262 ;; This function calls:
 11263 ;;		_TMR6_SetInterruptHandler
 11264 ;; This function is called by:
 11265 ;;		_SYSTEM_Initialize
 11266 ;; This function uses a reentrant model
 11267 ;;
 11268                           
 11269                           	psect	text54
 11270  0055D6                     __ptext54:
 11271                           	opt callstack 0
 11272  0055D6                     _TMR6_Initialize:
 11273                           	opt callstack 25
 11274                           
 11275                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 11276                           
 11277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11278                           ;incstack = 0
 11279  0055D6  0E01               	movlw	1
 11280  0055D8  6E96               	movwf	16278,c	;volatile
 11281                           
 11282                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 11283  0055DA  6A95               	clrf	16277,c	;volatile
 11284                           
 11285                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 11286  0055DC  6A97               	clrf	16279,c	;volatile
 11287                           
 11288                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 11289  0055DE  0E03               	movlw	3
 11290  0055E0  6E93               	movwf	16275,c	;volatile
 11291                           
 11292                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 11293  0055E2  6A92               	clrf	16274,c	;volatile
 11294                           
 11295                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 11296  0055E4  0139               	movlb	57	; () banked
 11297  0055E6  91A9               	bcf	169,0,b	;volatile
 11298                           
 11299                           ; BSR set to: 57
 11300                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 11301  0055E8  8199               	bsf	153,0,b	;volatile
 11302                           
 11303                           ; BSR set to: 57
 11304                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 11305  0055EA  0ECE               	movlw	low _TMR6_DefaultInterruptHandler
 11306  0055EC  6EE6               	movwf	postinc1,c
 11307  0055EE  0E51               	movlw	high _TMR6_DefaultInterruptHandler
 11308  0055F0  6EE6               	movwf	postinc1,c
 11309  0055F2  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11310  0055F4  6EE6               	movwf	postinc1,c
 11311  0055F6  ECFF  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
 11312                           
 11313                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 11314  0055FA  6894               	setf	16276,c	;volatile
 11315                           
 11316                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11317  0055FC  0012               	return		;funcret
 11318  0055FE                     __end_of_TMR6_Initialize:
 11319                           	opt callstack 0
 11320                           
 11321 ;; *************** function _TMR6_SetInterruptHandler *****************
 11322 ;; Defined at:
 11323 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11326 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;		None
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1  [STACK] void 
 11331 ;; Registers used:
 11332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11333 ;; Tracked objects:
 11334 ;;		On entry : 3F/39
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11342 ;;Total ram usage:        0 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:    3
 11345 ;; This function calls:
 11346 ;;		Nothing
 11347 ;; This function is called by:
 11348 ;;		_TMR6_Initialize
 11349 ;; This function uses a reentrant model
 11350 ;;
 11351                           
 11352                           	psect	text55
 11353  0055FE                     __ptext55:
 11354                           	opt callstack 0
 11355  0055FE                     _TMR6_SetInterruptHandler:
 11356                           	opt callstack 25
 11357                           
 11358                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 11359                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11360                           
 11361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11362                           ;incstack = 0
 11363  0055FE  50E1               	movf	fsr1l,w,c
 11364  005600  0FFD               	addlw	-3
 11365  005602  6ED9               	movwf	fsr2l,c
 11366  005604  50E2               	movf	fsr1h,w,c
 11367  005606  6EDA               	movwf	fsr2h,c
 11368  005608  0EFF               	movlw	255
 11369  00560A  22DA               	addwfc	fsr2h,f,c
 11370  00560C  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler
 11371  005612  006F FF78  F009    	movff	postinc2,_TMR6_InterruptHandler+1
 11372  005618  006F FF74  F00A    	movff	postdec2,_TMR6_InterruptHandler+2
 11373                           
 11374                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11375  00561E  52E5               	movf	postdec1,f,c
 11376  005620  52E5               	movf	postdec1,f,c
 11377  005622  52E5               	movf	postdec1,f,c
 11378  005624  0012               	return		;funcret
 11379  005626                     __end_of_TMR6_SetInterruptHandler:
 11380                           	opt callstack 0
 11381                           
 11382 ;; *************** function _TMR5_Initialize *****************
 11383 ;; Defined at:
 11384 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;		None
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;		None
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1  [STACK] void 
 11391 ;; Registers used:
 11392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11393 ;; Tracked objects:
 11394 ;;		On entry : 3F/3C
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11402 ;;Total ram usage:        0 bytes
 11403 ;; Hardware stack levels used:    1
 11404 ;; Hardware stack levels required when called:    4
 11405 ;; This function calls:
 11406 ;;		_TMR5_SetInterruptHandler
 11407 ;; This function is called by:
 11408 ;;		_SYSTEM_Initialize
 11409 ;; This function uses a reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text56
 11413  005188                     __ptext56:
 11414                           	opt callstack 0
 11415  005188                     _TMR5_Initialize:
 11416                           	opt callstack 25
 11417                           
 11418                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 11419                           
 11420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11421                           ;incstack = 0
 11422  005188  6A9B               	clrf	16283,c	;volatile
 11423                           
 11424                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 11425  00518A  6A9C               	clrf	16284,c	;volatile
 11426                           
 11427                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 11428  00518C  0E01               	movlw	1
 11429  00518E  6E9D               	movwf	16285,c	;volatile
 11430                           
 11431                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 11432  005190  0E63               	movlw	99
 11433  005192  6E99               	movwf	16281,c	;volatile
 11434                           
 11435                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 11436  005194  0EC0               	movlw	192
 11437  005196  6E98               	movwf	16280,c	;volatile
 11438                           
 11439                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11440  005198  5098               	movf	16280,w,c	;volatile
 11441  00519A  006F FE64  F03B    	movff	16281,btemp	;volatile
 11442  0051A0  6A3C               	clrf	btemp+1,c
 11443  0051A2  0060  F0EC  F03C   	movff	btemp,btemp+1
 11444  0051A8  6A3B               	clrf	btemp,c
 11445  0051AA  103B               	iorwf	btemp,w,c
 11446  0051AC  6E2B               	movwf	_timer5ReloadVal,c	;volatile
 11447  0051AE  503C               	movf	btemp+1,w,c
 11448  0051B0  6E2C               	movwf	_timer5ReloadVal+1,c	;volatile
 11449                           
 11450                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 11451  0051B2  0139               	movlb	57	; () banked
 11452  0051B4  9DA8               	bcf	168,6,b	;volatile
 11453                           
 11454                           ; BSR set to: 57
 11455                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 11456  0051B6  8D98               	bsf	152,6,b	;volatile
 11457                           
 11458                           ; BSR set to: 57
 11459                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11460  0051B8  0E66               	movlw	low _TMR5_DefaultInterruptHandler
 11461  0051BA  6EE6               	movwf	postinc1,c
 11462  0051BC  0E59               	movlw	high _TMR5_DefaultInterruptHandler
 11463  0051BE  6EE6               	movwf	postinc1,c
 11464  0051C0  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11465  0051C2  6EE6               	movwf	postinc1,c
 11466  0051C4  EC13  F02B         	call	_TMR5_SetInterruptHandler	;wreg free
 11467                           
 11468                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 11469  0051C8  0E31               	movlw	49
 11470  0051CA  6E9A               	movwf	16282,c	;volatile
 11471                           
 11472                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11473  0051CC  0012               	return		;funcret
 11474  0051CE                     __end_of_TMR5_Initialize:
 11475                           	opt callstack 0
 11476                           
 11477 ;; *************** function _TMR5_SetInterruptHandler *****************
 11478 ;; Defined at:
 11479 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11482 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;		None
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  1  [STACK] void 
 11487 ;; Registers used:
 11488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11489 ;; Tracked objects:
 11490 ;;		On entry : 3F/39
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11498 ;;Total ram usage:        0 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; Hardware stack levels required when called:    3
 11501 ;; This function calls:
 11502 ;;		Nothing
 11503 ;; This function is called by:
 11504 ;;		_TMR5_Initialize
 11505 ;; This function uses a reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text57
 11509  005626                     __ptext57:
 11510                           	opt callstack 0
 11511  005626                     _TMR5_SetInterruptHandler:
 11512                           	opt callstack 25
 11513                           
 11514                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11515                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11516                           
 11517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11518                           ;incstack = 0
 11519  005626  50E1               	movf	fsr1l,w,c
 11520  005628  0FFD               	addlw	-3
 11521  00562A  6ED9               	movwf	fsr2l,c
 11522  00562C  50E2               	movf	fsr1h,w,c
 11523  00562E  6EDA               	movwf	fsr2h,c
 11524  005630  0EFF               	movlw	255
 11525  005632  22DA               	addwfc	fsr2h,f,c
 11526  005634  006F FF78  F089    	movff	postinc2,_TMR5_InterruptHandler
 11527  00563A  006F FF78  F08A    	movff	postinc2,_TMR5_InterruptHandler+1
 11528  005640  006F FF74  F08B    	movff	postdec2,_TMR5_InterruptHandler+2
 11529                           
 11530                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11531  005646  52E5               	movf	postdec1,f,c
 11532  005648  52E5               	movf	postdec1,f,c
 11533  00564A  52E5               	movf	postdec1,f,c
 11534  00564C  0012               	return		;funcret
 11535  00564E                     __end_of_TMR5_SetInterruptHandler:
 11536                           	opt callstack 0
 11537                           
 11538 ;; *************** function _SPI1_Initialize *****************
 11539 ;; Defined at:
 11540 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;		None
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;		None
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  1  [STACK] void 
 11547 ;; Registers used:
 11548 ;;		wreg, status,2
 11549 ;; Tracked objects:
 11550 ;;		On entry : 3F/39
 11551 ;;		On exit  : 3F/3D
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11558 ;;Total ram usage:        0 bytes
 11559 ;; Hardware stack levels used:    1
 11560 ;; Hardware stack levels required when called:    3
 11561 ;; This function calls:
 11562 ;;		Nothing
 11563 ;; This function is called by:
 11564 ;;		_SYSTEM_Initialize
 11565 ;; This function uses a reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text58
 11569  005998                     __ptext58:
 11570                           	opt callstack 0
 11571  005998                     _SPI1_Initialize:
 11572                           	opt callstack 26
 11573                           
 11574                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11575                           
 11576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11577                           ;incstack = 0
 11578  005998  0E40               	movlw	64
 11579  00599A  013D               	movlb	61	; () banked
 11580  00599C  6F15               	movwf	21,b	;volatile
 11581                           
 11582                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11583  00599E  0E03               	movlw	3
 11584  0059A0  6F16               	movwf	22,b	;volatile
 11585                           
 11586                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11587  0059A2  0E4F               	movlw	79
 11588  0059A4  6F19               	movwf	25,b	;volatile
 11589                           
 11590                           ; BSR set to: 61
 11591                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11592  0059A6  6B1C               	clrf	28,b	;volatile
 11593                           
 11594                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11595  0059A8  0E83               	movlw	131
 11596  0059AA  6F14               	movwf	20,b	;volatile
 11597                           
 11598                           ; BSR set to: 61
 11599                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11600  0059AC  0012               	return		;funcret
 11601  0059AE                     __end_of_SPI1_Initialize:
 11602                           	opt callstack 0
 11603                           
 11604 ;; *************** function _PMD_Initialize *****************
 11605 ;; Defined at:
 11606 ;;		line 88 in file "mcc_generated_files/mcc.c"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;		None
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;		None
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  1  [STACK] void 
 11613 ;; Registers used:
 11614 ;;		None
 11615 ;; Tracked objects:
 11616 ;;		On entry : 3F/39
 11617 ;;		On exit  : 3F/39
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11624 ;;Total ram usage:        0 bytes
 11625 ;; Hardware stack levels used:    1
 11626 ;; Hardware stack levels required when called:    3
 11627 ;; This function calls:
 11628 ;;		Nothing
 11629 ;; This function is called by:
 11630 ;;		_SYSTEM_Initialize
 11631 ;; This function uses a reentrant model
 11632 ;;
 11633                           
 11634                           	psect	text59
 11635  0059C4                     __ptext59:
 11636                           	opt callstack 0
 11637  0059C4                     _PMD_Initialize:
 11638                           	opt callstack 26
 11639                           
 11640                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 11641                           
 11642                           ; BSR set to: 61
 11643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11644                           ;incstack = 0
 11645  0059C4  0139               	movlb	57	; () banked
 11646  0059C6  6BC0               	clrf	192,b	;volatile
 11647                           
 11648                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 11649  0059C8  6BC1               	clrf	193,b	;volatile
 11650                           
 11651                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 11652  0059CA  6BC2               	clrf	194,b	;volatile
 11653                           
 11654                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 11655  0059CC  6BC3               	clrf	195,b	;volatile
 11656                           
 11657                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 11658  0059CE  6BC4               	clrf	196,b	;volatile
 11659                           
 11660                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 11661  0059D0  6BC5               	clrf	197,b	;volatile
 11662                           
 11663                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 11664  0059D2  6BC6               	clrf	198,b	;volatile
 11665                           
 11666                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 11667  0059D4  6BC7               	clrf	199,b	;volatile
 11668                           
 11669                           ; BSR set to: 57
 11670                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11671  0059D6  0012               	return		;funcret
 11672  0059D8                     __end_of_PMD_Initialize:
 11673                           	opt callstack 0
 11674                           
 11675 ;; *************** function _PIN_MANAGER_Initialize *****************
 11676 ;; Defined at:
 11677 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;		None
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;		None
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1  [STACK] void 
 11684 ;; Registers used:
 11685 ;;		wreg, status,2
 11686 ;; Tracked objects:
 11687 ;;		On entry : 3F/39
 11688 ;;		On exit  : 3F/3A
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11695 ;;Total ram usage:        0 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:    3
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_SYSTEM_Initialize
 11702 ;; This function uses a reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text60
 11706  004A18                     __ptext60:
 11707                           	opt callstack 0
 11708  004A18                     _PIN_MANAGER_Initialize:
 11709                           	opt callstack 26
 11710                           
 11711                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11712                           
 11713                           ; BSR set to: 57
 11714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11715                           ;incstack = 0
 11716  004A18  0E07               	movlw	7
 11717  004A1A  6EBE               	movwf	16318,c	;volatile
 11718                           
 11719                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11720  004A1C  6ABD               	clrf	16317,c	;volatile
 11721                           
 11722                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11723  004A1E  6ABA               	clrf	16314,c	;volatile
 11724                           
 11725                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11726  004A20  6ABF               	clrf	16319,c	;volatile
 11727                           
 11728                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11729  004A22  6ABB               	clrf	16315,c	;volatile
 11730                           
 11731                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11732  004A24  0E06               	movlw	6
 11733  004A26  6EBC               	movwf	16316,c	;volatile
 11734                           
 11735                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11736  004A28  6AC6               	clrf	16326,c	;volatile
 11737                           
 11738                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11739  004A2A  68C7               	setf	16327,c	;volatile
 11740                           
 11741                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11742  004A2C  0E8F               	movlw	143
 11743  004A2E  6EC2               	movwf	16322,c	;volatile
 11744                           
 11745                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11746  004A30  0EBF               	movlw	191
 11747  004A32  6EC3               	movwf	16323,c	;volatile
 11748                           
 11749                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11750  004A34  0E91               	movlw	145
 11751  004A36  6EC4               	movwf	16324,c	;volatile
 11752                           
 11753                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 11754  004A38  0EFC               	movlw	252
 11755  004A3A  6EC5               	movwf	16325,c	;volatile
 11756                           
 11757                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 11758  004A3C  0EF0               	movlw	240
 11759  004A3E  013A               	movlb	58	; () banked
 11760  004A40  6F70               	movwf	112,b	;volatile
 11761                           
 11762                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11763  004A42  0E01               	movlw	1
 11764  004A44  6F60               	movwf	96,b	;volatile
 11765                           
 11766                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11767  004A46  0E38               	movlw	56
 11768  004A48  6F50               	movwf	80,b	;volatile
 11769                           
 11770                           ; BSR set to: 58
 11771                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11772  004A4A  6B80               	clrf	128,b	;volatile
 11773                           
 11774                           ; BSR set to: 58
 11775                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11776  004A4C  6990               	setf	144,b	;volatile
 11777                           
 11778                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11779  004A4E  0E8F               	movlw	143
 11780  004A50  6F40               	movwf	64,b	;volatile
 11781                           
 11782                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11783  004A52  0E0C               	movlw	12
 11784  004A54  6F71               	movwf	113,b	;volatile
 11785                           
 11786                           ; BSR set to: 58
 11787                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11788  004A56  6B91               	clrf	145,b	;volatile
 11789                           
 11790                           ; BSR set to: 58
 11791                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11792  004A58  6B81               	clrf	129,b	;volatile
 11793                           
 11794                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11795  004A5A  0E87               	movlw	135
 11796  004A5C  6F51               	movwf	81,b	;volatile
 11797                           
 11798                           ; BSR set to: 58
 11799                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11800  004A5E  6B41               	clrf	65,b	;volatile
 11801                           
 11802                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11803  004A60  0E90               	movlw	144
 11804  004A62  6F61               	movwf	97,b	;volatile
 11805                           
 11806                           ; BSR set to: 58
 11807                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11808  004A64  6B82               	clrf	130,b	;volatile
 11809                           
 11810                           ; BSR set to: 58
 11811                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11812  004A66  6B92               	clrf	146,b	;volatile
 11813                           
 11814                           ; BSR set to: 58
 11815                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11816  004A68  6B42               	clrf	66,b	;volatile
 11817                           
 11818                           ; BSR set to: 58
 11819                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11820  004A6A  6B52               	clrf	82,b	;volatile
 11821                           
 11822                           ; BSR set to: 58
 11823                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11824  004A6C  6B62               	clrf	98,b	;volatile
 11825                           
 11826                           ; BSR set to: 58
 11827                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11828  004A6E  6B72               	clrf	114,b	;volatile
 11829                           
 11830                           ; BSR set to: 58
 11831                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11832  004A70  6943               	setf	67,b	;volatile
 11833                           
 11834                           ; BSR set to: 58
 11835                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11836  004A72  6953               	setf	83,b	;volatile
 11837                           
 11838                           ; BSR set to: 58
 11839                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11840  004A74  6963               	setf	99,b	;volatile
 11841                           
 11842                           ; BSR set to: 58
 11843                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11844  004A76  6973               	setf	115,b	;volatile
 11845                           
 11846                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11847  004A78  0E07               	movlw	7
 11848  004A7A  6F83               	movwf	131,b	;volatile
 11849                           
 11850                           ; BSR set to: 58
 11851                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11852  004A7C  6993               	setf	147,b	;volatile
 11853                           
 11854                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11855  004A7E  0E0F               	movlw	15
 11856  004A80  6FE8               	movwf	232,b	;volatile
 11857                           
 11858                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11859  004A82  0E16               	movlw	22
 11860  004A84  6F0E               	movwf	14,b	;volatile
 11861                           
 11862                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11863  004A86  0E1E               	movlw	30
 11864  004A88  6F13               	movwf	19,b	;volatile
 11865                           
 11866                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11867  004A8A  0E08               	movlw	8
 11868  004A8C  6FC0               	movwf	192,b	;volatile
 11869                           
 11870                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11871  004A8E  0E0A               	movlw	10
 11872  004A90  6FC2               	movwf	194,b	;volatile
 11873                           
 11874                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11875  004A92  0E09               	movlw	9
 11876  004A94  6FC1               	movwf	193,b	;volatile
 11877                           
 11878                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11879  004A96  0E17               	movlw	23
 11880  004A98  6FE5               	movwf	229,b	;volatile
 11881                           
 11882                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11883  004A9A  0E13               	movlw	19
 11884  004A9C  6FDE               	movwf	222,b	;volatile
 11885                           
 11886                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11887  004A9E  0E01               	movlw	1
 11888  004AA0  6F04               	movwf	4,b	;volatile
 11889                           
 11890                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11891  004AA2  0E26               	movlw	38
 11892  004AA4  6F05               	movwf	5,b	;volatile
 11893                           
 11894                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11895  004AA6  0E28               	movlw	40
 11896  004AA8  6F06               	movwf	6,b	;volatile
 11897                           
 11898                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11899  004AAA  0E1F               	movlw	31
 11900  004AAC  6F15               	movwf	21,b	;volatile
 11901                           
 11902                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11903  004AAE  0E13               	movlw	19
 11904  004AB0  6F16               	movwf	22,b	;volatile
 11905                           
 11906                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11907  004AB2  0E14               	movlw	20
 11908  004AB4  6FDF               	movwf	223,b	;volatile
 11909                           
 11910                           ; BSR set to: 58
 11911                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11912  004AB6  0012               	return		;funcret
 11913  004AB8                     __end_of_PIN_MANAGER_Initialize:
 11914                           	opt callstack 0
 11915                           
 11916 ;; *************** function _OSCILLATOR_Initialize *****************
 11917 ;; Defined at:
 11918 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1  [STACK] void 
 11925 ;; Registers used:
 11926 ;;		wreg, status,2
 11927 ;; Tracked objects:
 11928 ;;		On entry : 3F/3A
 11929 ;;		On exit  : 3F/39
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11936 ;;Total ram usage:        0 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; Hardware stack levels required when called:    3
 11939 ;; This function calls:
 11940 ;;		Nothing
 11941 ;; This function is called by:
 11942 ;;		_SYSTEM_Initialize
 11943 ;; This function uses a reentrant model
 11944 ;;
 11945                           
 11946                           	psect	text61
 11947  0059AE                     __ptext61:
 11948                           	opt callstack 0
 11949  0059AE                     _OSCILLATOR_Initialize:
 11950                           	opt callstack 26
 11951                           
 11952                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 11953                           
 11954                           ; BSR set to: 58
 11955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11956                           ;incstack = 0
 11957  0059AE  0E20               	movlw	32
 11958  0059B0  0139               	movlb	57	; () banked
 11959  0059B2  6FD9               	movwf	217,b	;volatile
 11960                           
 11961                           ; BSR set to: 57
 11962                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 11963  0059B4  6BDB               	clrf	219,b	;volatile
 11964                           
 11965                           ; BSR set to: 57
 11966                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 11967  0059B6  6BDD               	clrf	221,b	;volatile
 11968                           
 11969                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 11970  0059B8  0E02               	movlw	2
 11971  0059BA  6FDF               	movwf	223,b	;volatile
 11972                           
 11973                           ; BSR set to: 57
 11974                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 11975  0059BC  6BDE               	clrf	222,b	;volatile
 11976  0059BE                     l194:
 11977                           
 11978                           ; BSR set to: 57
 11979                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 11980  0059BE  B1DC               	btfsc	220,0,b	;volatile
 11981  0059C0  0012               	return	
 11982  0059C2  D7FD               	goto	l194
 11983  0059C4                     __end_of_OSCILLATOR_Initialize:
 11984                           	opt callstack 0
 11985                           
 11986 ;; *************** function _NCO1_Initialize *****************
 11987 ;; Defined at:
 11988 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;		None
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;		None
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  1  [STACK] void 
 11995 ;; Registers used:
 11996 ;;		wreg, status,2
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/39
 11999 ;;		On exit  : 3F/3F
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12006 ;;Total ram usage:        0 bytes
 12007 ;; Hardware stack levels used:    1
 12008 ;; Hardware stack levels required when called:    3
 12009 ;; This function calls:
 12010 ;;		Nothing
 12011 ;; This function is called by:
 12012 ;;		_SYSTEM_Initialize
 12013 ;; This function uses a reentrant model
 12014 ;;
 12015                           
 12016                           	psect	text62
 12017  0058F8                     __ptext62:
 12018                           	opt callstack 0
 12019  0058F8                     _NCO1_Initialize:
 12020                           	opt callstack 26
 12021                           
 12022                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 12023                           
 12024                           ; BSR set to: 57
 12025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12026                           ;incstack = 0
 12027  0058F8  013F               	movlb	63	; () banked
 12028  0058FA  6B3E               	clrf	62,b	;volatile
 12029                           
 12030                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 12031  0058FC  6B3F               	clrf	63,b	;volatile
 12032                           
 12033                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 12034  0058FE  6B3A               	clrf	58,b	;volatile
 12035                           
 12036                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 12037  005900  6B39               	clrf	57,b	;volatile
 12038                           
 12039                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 12040  005902  6B38               	clrf	56,b	;volatile
 12041                           
 12042                           ; BSR set to: 63
 12043                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 12044  005904  0E06               	movlw	6
 12045  005906  6F3D               	movwf	61,b	;volatile
 12046                           
 12047                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 12048  005908  0EC7               	movlw	199
 12049  00590A  6F3C               	movwf	60,b	;volatile
 12050                           
 12051                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 12052  00590C  0EAE               	movlw	174
 12053  00590E  6F3B               	movwf	59,b	;volatile
 12054                           
 12055                           ; BSR set to: 63
 12056                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 12057  005910  8F3E               	bsf	62,7,b	;volatile
 12058                           
 12059                           ; BSR set to: 63
 12060                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12061  005912  0012               	return		;funcret
 12062  005914                     __end_of_NCO1_Initialize:
 12063                           	opt callstack 0
 12064                           
 12065 ;; *************** function _INTERRUPT_Initialize *****************
 12066 ;; Defined at:
 12067 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;		None
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;  state           1  [STACK] _Bool 
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  1  [STACK] void 
 12074 ;; Registers used:
 12075 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 3F/39
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12085 ;;Total ram usage:        0 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:    3
 12088 ;; This function calls:
 12089 ;;		Nothing
 12090 ;; This function is called by:
 12091 ;;		_SYSTEM_Initialize
 12092 ;; This function uses a reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text63
 12096  004E78                     __ptext63:
 12097                           	opt callstack 0
 12098  004E78                     _INTERRUPT_Initialize:
 12099                           	opt callstack 0
 12100                           
 12101                           ; BSR set to: 63
 12102                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12103  004E78  52E6               	movf	postinc1,f,c
 12104                           
 12105                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 12106                           
 12107                           ;incstack = 0
 12108  004E7A  8AD2               	bsf	16338,5,c	;volatile
 12109                           
 12110                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 12111  004E7C  AED2               	btfss	16338,7,c	;volatile
 12112  004E7E  D003               	goto	u940
 12113  004E80  6A46               	clrf	btemp+11,c
 12114  004E82  2A46               	incf	btemp+11,f,c
 12115  004E84  D001               	goto	u958
 12116  004E86                     u940:
 12117  004E86  6A46               	clrf	btemp+11,c
 12118  004E88                     u958:
 12119                           
 12120                           ;stkvar	_state @ sp[(-1)+0]
 12121  004E88  0EFF               	movlw	-1
 12122  004E8A  0060  F11B  FFE3   	movff	btemp+11,plusw1
 12123                           
 12124                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 12125  004E90  9ED2               	bcf	16338,7,c	;volatile
 12126                           
 12127                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 12128  004E92  0E55               	movlw	85
 12129  004E94  6ED4               	movwf	16340,c	;volatile
 12130                           
 12131                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 12132  004E96  0EAA               	movlw	170
 12133  004E98  6ED4               	movwf	16340,c	;volatile
 12134                           
 12135                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 12136  004E9A  90D4               	bcf	16340,0,c	;volatile
 12137                           
 12138                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 12139  004E9C  0138               	movlb	56	; () banked
 12140  004E9E  6B9F               	clrf	159,b	;volatile
 12141                           
 12142                           ; BSR set to: 56
 12143                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 12144  004EA0  6B9E               	clrf	158,b	;volatile
 12145                           
 12146                           ; BSR set to: 56
 12147                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 12148  004EA2  0E08               	movlw	8
 12149  004EA4  6F9D               	movwf	157,b	;volatile
 12150                           
 12151                           ; BSR set to: 56
 12152                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 12153  004EA6  0E55               	movlw	85
 12154  004EA8  6ED4               	movwf	16340,c	;volatile
 12155                           
 12156                           ; BSR set to: 56
 12157                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 12158  004EAA  0EAA               	movlw	170
 12159  004EAC  6ED4               	movwf	16340,c	;volatile
 12160                           
 12161                           ; BSR set to: 56
 12162                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 12163  004EAE  80D4               	bsf	16340,0,c	;volatile
 12164                           
 12165                           ; BSR set to: 56
 12166                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 12167                           ;stkvar	_state @ sp[(-1)+0]
 12168  004EB0  0EFF               	movlw	-1
 12169  004EB2  B0E3               	btfsc	plusw1,0,c
 12170  004EB4  D002               	bra	u965
 12171  004EB6  9ED2               	bcf	16338,7,c	;volatile
 12172  004EB8  D001               	bra	u966
 12173  004EBA                     u965:
 12174  004EBA  8ED2               	bsf	16338,7,c	;volatile
 12175  004EBC                     u966:
 12176                           
 12177                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 12178  004EBC  0139               	movlb	57	; () banked
 12179  004EBE  8782               	bsf	130,3,b	;volatile
 12180                           
 12181                           ; BSR set to: 57
 12182                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 12183  004EC0  8382               	bsf	130,1,b	;volatile
 12184                           
 12185                           ; BSR set to: 57
 12186                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12187  004EC2  8182               	bsf	130,0,b	;volatile
 12188                           
 12189                           ; BSR set to: 57
 12190                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12191  004EC4  8582               	bsf	130,2,b	;volatile
 12192                           
 12193                           ; BSR set to: 57
 12194                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12195  004EC6  8786               	bsf	134,3,b	;volatile
 12196                           
 12197                           ; BSR set to: 57
 12198                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12199  004EC8  8586               	bsf	134,2,b	;volatile
 12200                           
 12201                           ; BSR set to: 57
 12202                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12203  004ECA  8983               	bsf	131,4,b	;volatile
 12204                           
 12205                           ; BSR set to: 57
 12206                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12207  004ECC  8783               	bsf	131,3,b	;volatile
 12208                           
 12209                           ; BSR set to: 57
 12210                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12211  004ECE  8181               	bsf	129,0,b	;volatile
 12212                           
 12213                           ; BSR set to: 57
 12214                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12215  004ED0  8185               	bsf	133,0,b	;volatile
 12216                           
 12217                           ; BSR set to: 57
 12218                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 12219  004ED2  8B87               	bsf	135,5,b	;volatile
 12220                           
 12221                           ; BSR set to: 57
 12222                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 12223  004ED4  8189               	bsf	137,0,b	;volatile
 12224                           
 12225                           ; BSR set to: 57
 12226                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 12227  004ED6  8D88               	bsf	136,6,b	;volatile
 12228                           
 12229                           ; BSR set to: 57
 12230                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 12231  004ED8  8581               	bsf	129,2,b	;volatile
 12232                           
 12233                           ; BSR set to: 57
 12234                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12235  004EDA  52E5               	movf	postdec1,f,c
 12236  004EDC  0012               	return		;funcret
 12237  004EDE                     __end_of_INTERRUPT_Initialize:
 12238                           	opt callstack 0
 12239                           
 12240 ;; *************** function _EXT_INT_Initialize *****************
 12241 ;; Defined at:
 12242 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;		None
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;		None
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  1  [STACK] void 
 12249 ;; Registers used:
 12250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12251 ;; Tracked objects:
 12252 ;;		On entry : 3F/3F
 12253 ;;		On exit  : 3F/39
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12260 ;;Total ram usage:        0 bytes
 12261 ;; Hardware stack levels used:    1
 12262 ;; Hardware stack levels required when called:    4
 12263 ;; This function calls:
 12264 ;;		_INT0_SetInterruptHandler
 12265 ;;		_INT1_SetInterruptHandler
 12266 ;;		_INT2_SetInterruptHandler
 12267 ;; This function is called by:
 12268 ;;		_SYSTEM_Initialize
 12269 ;; This function uses a reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text64
 12273  0050AC                     __ptext64:
 12274                           	opt callstack 0
 12275  0050AC                     _EXT_INT_Initialize:
 12276                           	opt callstack 25
 12277                           
 12278                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 12279                           
 12280                           ; BSR set to: 57
 12281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12282                           ;incstack = 0
 12283  0050AC  0139               	movlb	57	; () banked
 12284  0050AE  91A1               	bcf	161,0,b	;volatile
 12285                           
 12286                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 12287  0050B0  90D2               	bcf	16338,0,c	;volatile
 12288                           
 12289                           ; BSR set to: 57
 12290                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 12291  0050B2  0E76               	movlw	low _INT0_DefaultInterruptHandler
 12292  0050B4  6EE6               	movwf	postinc1,c
 12293  0050B6  0E5A               	movlw	high _INT0_DefaultInterruptHandler
 12294  0050B8  6EE6               	movwf	postinc1,c
 12295  0050BA  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12296  0050BC  6EE6               	movwf	postinc1,c
 12297  0050BE  EC4F  F02B         	call	_INT0_SetInterruptHandler	;wreg free
 12298                           
 12299                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 12300  0050C2  0139               	movlb	57	; () banked
 12301  0050C4  8191               	bsf	145,0,b	;volatile
 12302                           
 12303                           ; BSR set to: 57
 12304                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 12305  0050C6  91A5               	bcf	165,0,b	;volatile
 12306                           
 12307                           ; BSR set to: 57
 12308                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 12309  0050C8  92D2               	bcf	16338,1,c	;volatile
 12310                           
 12311                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 12312  0050CA  0E78               	movlw	low _INT1_DefaultInterruptHandler
 12313  0050CC  6EE6               	movwf	postinc1,c
 12314  0050CE  0E5A               	movlw	high _INT1_DefaultInterruptHandler
 12315  0050D0  6EE6               	movwf	postinc1,c
 12316  0050D2  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12317  0050D4  6EE6               	movwf	postinc1,c
 12318  0050D6  EC3B  F02B         	call	_INT1_SetInterruptHandler	;wreg free
 12319                           
 12320                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 12321  0050DA  0139               	movlb	57	; () banked
 12322  0050DC  8195               	bsf	149,0,b	;volatile
 12323                           
 12324                           ; BSR set to: 57
 12325                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 12326  0050DE  9BA7               	bcf	167,5,b	;volatile
 12327                           
 12328                           ; BSR set to: 57
 12329                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 12330  0050E0  94D2               	bcf	16338,2,c	;volatile
 12331                           
 12332                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 12333  0050E2  0E7A               	movlw	low _INT2_DefaultInterruptHandler
 12334  0050E4  6EE6               	movwf	postinc1,c
 12335  0050E6  0E5A               	movlw	high _INT2_DefaultInterruptHandler
 12336  0050E8  6EE6               	movwf	postinc1,c
 12337  0050EA  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 12338  0050EC  6EE6               	movwf	postinc1,c
 12339  0050EE  EC27  F02B         	call	_INT2_SetInterruptHandler	;wreg free
 12340                           
 12341                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 12342  0050F2  0139               	movlb	57	; () banked
 12343  0050F4  8B97               	bsf	151,5,b	;volatile
 12344                           
 12345                           ; BSR set to: 57
 12346                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12347  0050F6  0012               	return		;funcret
 12348  0050F8                     __end_of_EXT_INT_Initialize:
 12349                           	opt callstack 0
 12350                           
 12351 ;; *************** function _INT2_SetInterruptHandler *****************
 12352 ;; Defined at:
 12353 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12356 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;		None
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  1  [STACK] void 
 12361 ;; Registers used:
 12362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12363 ;; Tracked objects:
 12364 ;;		On entry : 3F/39
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12372 ;;Total ram usage:        0 bytes
 12373 ;; Hardware stack levels used:    1
 12374 ;; Hardware stack levels required when called:    3
 12375 ;; This function calls:
 12376 ;;		Nothing
 12377 ;; This function is called by:
 12378 ;;		_EXT_INT_Initialize
 12379 ;; This function uses a reentrant model
 12380 ;;
 12381                           
 12382                           	psect	text65
 12383  00564E                     __ptext65:
 12384                           	opt callstack 0
 12385  00564E                     _INT2_SetInterruptHandler:
 12386                           	opt callstack 25
 12387                           
 12388                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 12389                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12390                           
 12391                           ; BSR set to: 57
 12392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12393                           ;incstack = 0
 12394  00564E  50E1               	movf	fsr1l,w,c
 12395  005650  0FFD               	addlw	-3
 12396  005652  6ED9               	movwf	fsr2l,c
 12397  005654  50E2               	movf	fsr1h,w,c
 12398  005656  6EDA               	movwf	fsr2h,c
 12399  005658  0EFF               	movlw	255
 12400  00565A  22DA               	addwfc	fsr2h,f,c
 12401  00565C  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler
 12402  005662  006F FF78  F01B    	movff	postinc2,_INT2_InterruptHandler+1
 12403  005668  006F FF74  F01C    	movff	postdec2,_INT2_InterruptHandler+2
 12404                           
 12405                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12406  00566E  52E5               	movf	postdec1,f,c
 12407  005670  52E5               	movf	postdec1,f,c
 12408  005672  52E5               	movf	postdec1,f,c
 12409  005674  0012               	return		;funcret
 12410  005676                     __end_of_INT2_SetInterruptHandler:
 12411                           	opt callstack 0
 12412                           
 12413 ;; *************** function _INT1_SetInterruptHandler *****************
 12414 ;; Defined at:
 12415 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12418 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;		None
 12421 ;; Return value:  Size  Location     Type
 12422 ;;                  1  [STACK] void 
 12423 ;; Registers used:
 12424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12425 ;; Tracked objects:
 12426 ;;		On entry : 3F/39
 12427 ;;		On exit  : 0/0
 12428 ;;		Unchanged: 0/0
 12429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12434 ;;Total ram usage:        0 bytes
 12435 ;; Hardware stack levels used:    1
 12436 ;; Hardware stack levels required when called:    3
 12437 ;; This function calls:
 12438 ;;		Nothing
 12439 ;; This function is called by:
 12440 ;;		_EXT_INT_Initialize
 12441 ;; This function uses a reentrant model
 12442 ;;
 12443                           
 12444                           	psect	text66
 12445  005676                     __ptext66:
 12446                           	opt callstack 0
 12447  005676                     _INT1_SetInterruptHandler:
 12448                           	opt callstack 25
 12449                           
 12450                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 12451                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12452                           
 12453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12454                           ;incstack = 0
 12455  005676  50E1               	movf	fsr1l,w,c
 12456  005678  0FFD               	addlw	-3
 12457  00567A  6ED9               	movwf	fsr2l,c
 12458  00567C  50E2               	movf	fsr1h,w,c
 12459  00567E  6EDA               	movwf	fsr2h,c
 12460  005680  0EFF               	movlw	255
 12461  005682  22DA               	addwfc	fsr2h,f,c
 12462  005684  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler
 12463  00568A  006F FF78  F01E    	movff	postinc2,_INT1_InterruptHandler+1
 12464  005690  006F FF74  F01F    	movff	postdec2,_INT1_InterruptHandler+2
 12465                           
 12466                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12467  005696  52E5               	movf	postdec1,f,c
 12468  005698  52E5               	movf	postdec1,f,c
 12469  00569A  52E5               	movf	postdec1,f,c
 12470  00569C  0012               	return		;funcret
 12471  00569E                     __end_of_INT1_SetInterruptHandler:
 12472                           	opt callstack 0
 12473                           
 12474 ;; *************** function _INT0_SetInterruptHandler *****************
 12475 ;; Defined at:
 12476 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12479 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;		None
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  1  [STACK] void 
 12484 ;; Registers used:
 12485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12486 ;; Tracked objects:
 12487 ;;		On entry : 3F/39
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;Total ram usage:        0 bytes
 12496 ;; Hardware stack levels used:    1
 12497 ;; Hardware stack levels required when called:    3
 12498 ;; This function calls:
 12499 ;;		Nothing
 12500 ;; This function is called by:
 12501 ;;		_EXT_INT_Initialize
 12502 ;; This function uses a reentrant model
 12503 ;;
 12504                           
 12505                           	psect	text67
 12506  00569E                     __ptext67:
 12507                           	opt callstack 0
 12508  00569E                     _INT0_SetInterruptHandler:
 12509                           	opt callstack 25
 12510                           
 12511                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 12512                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12513                           
 12514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12515                           ;incstack = 0
 12516  00569E  50E1               	movf	fsr1l,w,c
 12517  0056A0  0FFD               	addlw	-3
 12518  0056A2  6ED9               	movwf	fsr2l,c
 12519  0056A4  50E2               	movf	fsr1h,w,c
 12520  0056A6  6EDA               	movwf	fsr2h,c
 12521  0056A8  0EFF               	movlw	255
 12522  0056AA  22DA               	addwfc	fsr2h,f,c
 12523  0056AC  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler
 12524  0056B2  006F FF78  F021    	movff	postinc2,_INT0_InterruptHandler+1
 12525  0056B8  006F FF74  F022    	movff	postdec2,_INT0_InterruptHandler+2
 12526                           
 12527                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12528  0056BE  52E5               	movf	postdec1,f,c
 12529  0056C0  52E5               	movf	postdec1,f,c
 12530  0056C2  52E5               	movf	postdec1,f,c
 12531  0056C4  0012               	return		;funcret
 12532  0056C6                     __end_of_INT0_SetInterruptHandler:
 12533                           	opt callstack 0
 12534                           
 12535 ;; *************** function _DSM_Initialize *****************
 12536 ;; Defined at:
 12537 ;;		line 58 in file "mcc_generated_files/dsm.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;		None
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;		None
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  1  [STACK] void 
 12544 ;; Registers used:
 12545 ;;		wreg, status,2
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/3C
 12548 ;;		On exit  : 3F/3C
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;Total ram usage:        0 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:    3
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_SYSTEM_Initialize
 12562 ;; This function uses a reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text68
 12566  005914                     __ptext68:
 12567                           	opt callstack 0
 12568  005914                     _DSM_Initialize:
 12569                           	opt callstack 26
 12570                           
 12571                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 12572                           
 12573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12574                           ;incstack = 0
 12575  005914  013C               	movlb	60	; () banked
 12576  005916  99FA               	bcf	250,4,b	;volatile
 12577                           
 12578                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 12579  005918  81FB               	bsf	251,0,b	;volatile
 12580                           
 12581                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 12582  00591A  93FB               	bcf	251,1,b	;volatile
 12583                           
 12584                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 12585  00591C  89FB               	bsf	251,4,b	;volatile
 12586                           
 12587                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 12588  00591E  9BFB               	bcf	251,5,b	;volatile
 12589                           
 12590                           ; BSR set to: 60
 12591                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 12592  005920  0E13               	movlw	19
 12593  005922  6FFC               	movwf	252,b	;volatile
 12594                           
 12595                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 12596  005924  0E0E               	movlw	14
 12597  005926  6FFE               	movwf	254,b	;volatile
 12598                           
 12599                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 12600  005928  0E04               	movlw	4
 12601  00592A  6FFD               	movwf	253,b	;volatile
 12602                           
 12603                           ; BSR set to: 60
 12604                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 12605  00592C  8FFA               	bsf	250,7,b	;volatile
 12606                           
 12607                           ; BSR set to: 60
 12608                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12609  00592E  0012               	return		;funcret
 12610  005930                     __end_of_DSM_Initialize:
 12611                           	opt callstack 0
 12612                           
 12613 ;; *************** function _DMA1_Initialize *****************
 12614 ;; Defined at:
 12615 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12616 ;; Parameters:    Size  Location     Type
 12617 ;;		None
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;		None
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  1  [STACK] void 
 12622 ;; Registers used:
 12623 ;;		wreg, status,2
 12624 ;; Tracked objects:
 12625 ;;		On entry : 3F/3D
 12626 ;;		On exit  : 3F/3B
 12627 ;;		Unchanged: 0/0
 12628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12633 ;;Total ram usage:        0 bytes
 12634 ;; Hardware stack levels used:    1
 12635 ;; Hardware stack levels required when called:    3
 12636 ;; This function calls:
 12637 ;;		Nothing
 12638 ;; This function is called by:
 12639 ;;		_SYSTEM_Initialize
 12640 ;; This function uses a reentrant model
 12641 ;;
 12642                           
 12643                           	psect	text69
 12644  004E0E                     __ptext69:
 12645                           	opt callstack 0
 12646  004E0E                     _DMA1_Initialize:
 12647                           	opt callstack 26
 12648                           
 12649                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12650                           
 12651                           ; BSR set to: 60
 12652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12653                           ;incstack = 0
 12654  004E0E  0E00               	movlw	0
 12655  004E10  013B               	movlb	59	; () banked
 12656  004E12  6FF9               	movwf	249,b	;volatile
 12657  004E14  0E10               	movlw	16
 12658  004E16  6FFA               	movwf	250,b	;volatile
 12659  004E18  0E00               	movlw	0
 12660  004E1A  6FFB               	movwf	251,b	;volatile
 12661                           
 12662                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12663  004E1C  0E3D               	movlw	61
 12664  004E1E  6FF1               	movwf	241,b	;volatile
 12665  004E20  0E11               	movlw	17
 12666  004E22  6FF0               	movwf	240,b	;volatile
 12667                           
 12668                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12669  004E24  0E03               	movlw	3
 12670  004E26  6FFD               	movwf	253,b	;volatile
 12671                           
 12672                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12673  004E28  0E00               	movlw	0
 12674  004E2A  6FF8               	movwf	248,b	;volatile
 12675  004E2C  0E01               	movlw	1
 12676  004E2E  6FF7               	movwf	247,b	;volatile
 12677                           
 12678                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12679  004E30  0E00               	movlw	0
 12680  004E32  6FEF               	movwf	239,b	;volatile
 12681  004E34  0E01               	movlw	1
 12682  004E36  6FEE               	movwf	238,b	;volatile
 12683                           
 12684                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12685  004E38  0E15               	movlw	21
 12686  004E3A  6FFF               	movwf	255,b	;volatile
 12687                           
 12688                           ; BSR set to: 59
 12689                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12690  004E3C  6BFE               	clrf	254,b	;volatile
 12691                           
 12692                           ; BSR set to: 59
 12693                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12694  004E3E  0139               	movlb	57	; () banked
 12695  004E40  93A2               	bcf	162,1,b	;volatile
 12696                           
 12697                           ; BSR set to: 57
 12698                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12699  004E42  91A2               	bcf	162,0,b	;volatile
 12700                           
 12701                           ; BSR set to: 57
 12702                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12703  004E44  97A2               	bcf	162,3,b	;volatile
 12704                           
 12705                           ; BSR set to: 57
 12706                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12707  004E46  95A2               	bcf	162,2,b	;volatile
 12708                           
 12709                           ; BSR set to: 57
 12710                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12711  004E48  8392               	bsf	146,1,b	;volatile
 12712                           
 12713                           ; BSR set to: 57
 12714                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12715  004E4A  8192               	bsf	146,0,b	;volatile
 12716                           
 12717                           ; BSR set to: 57
 12718                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12719  004E4C  8792               	bsf	146,3,b	;volatile
 12720                           
 12721                           ; BSR set to: 57
 12722                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12723  004E4E  8592               	bsf	146,2,b	;volatile
 12724                           
 12725                           ; BSR set to: 57
 12726                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12727  004E50  6BF1               	clrf	241,b	;volatile
 12728                           
 12729                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12730  004E52  0E01               	movlw	1
 12731  004E54  6FF2               	movwf	242,b	;volatile
 12732                           
 12733                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12734  004E56  0E04               	movlw	4
 12735  004E58  6FF3               	movwf	243,b	;volatile
 12736                           
 12737                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12738  004E5A  0E02               	movlw	2
 12739  004E5C  6FF4               	movwf	244,b	;volatile
 12740                           
 12741                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12742  004E5E  0E03               	movlw	3
 12743  004E60  6FF7               	movwf	247,b	;volatile
 12744  004E62  9ED2               	bcf	16338,7,c	;# 
 12745  004E64  0139               	banksel	14831	;# 
 12746  004E66  0E55               	movlw	85	;# 
 12747  004E68  6FEF               	movwf	14831,b	;# 
 12748  004E6A  0EAA               	movlw	170	;# 
 12749  004E6C  6FEF               	movwf	14831,b	;# 
 12750  004E6E  81EF               	bsf	14831,0,b	;# 
 12751  004E70  8ED2               	bsf	16338,7,c	;# 
 12752                           
 12753                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12754  004E72  013B               	movlb	59	; () banked
 12755  004E74  6BFC               	clrf	252,b	;volatile
 12756                           
 12757                           ; BSR set to: 59
 12758                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12759  004E76  0012               	return		;funcret
 12760  004E78                     __end_of_DMA1_Initialize:
 12761                           	opt callstack 0
 12762                           
 12763 ;; *************** function _CLKREF_Initialize *****************
 12764 ;; Defined at:
 12765 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;		None
 12768 ;; Auto vars:     Size  Location     Type
 12769 ;;		None
 12770 ;; Return value:  Size  Location     Type
 12771 ;;                  1  [STACK] void 
 12772 ;; Registers used:
 12773 ;;		wreg, status,2
 12774 ;; Tracked objects:
 12775 ;;		On entry : 3F/3B
 12776 ;;		On exit  : 3F/3C
 12777 ;;		Unchanged: 0/0
 12778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12783 ;;Total ram usage:        0 bytes
 12784 ;; Hardware stack levels used:    1
 12785 ;; Hardware stack levels required when called:    3
 12786 ;; This function calls:
 12787 ;;		Nothing
 12788 ;; This function is called by:
 12789 ;;		_SYSTEM_Initialize
 12790 ;; This function uses a reentrant model
 12791 ;;
 12792                           
 12793                           	psect	text70
 12794  005A26                     __ptext70:
 12795                           	opt callstack 0
 12796  005A26                     _CLKREF_Initialize:
 12797                           	opt callstack 26
 12798                           
 12799                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12800                           
 12801                           ; BSR set to: 59
 12802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12803                           ;incstack = 0
 12804  005A26  013C               	movlb	60	; () banked
 12805  005A28  6BE6               	clrf	230,b	;volatile
 12806                           
 12807                           ; BSR set to: 60
 12808                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12809  005A2A  0E94               	movlw	148
 12810  005A2C  6FE5               	movwf	229,b	;volatile
 12811                           
 12812                           ; BSR set to: 60
 12813                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12814  005A2E  0012               	return		;funcret
 12815  005A30                     __end_of_CLKREF_Initialize:
 12816                           	opt callstack 0
 12817                           
 12818 ;; *************** function _CLC1_Initialize *****************
 12819 ;; Defined at:
 12820 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;		None
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;		None
 12825 ;; Return value:  Size  Location     Type
 12826 ;;                  1  [STACK] void 
 12827 ;; Registers used:
 12828 ;;		wreg, status,2
 12829 ;; Tracked objects:
 12830 ;;		On entry : 0/39
 12831 ;;		On exit  : 3F/3C
 12832 ;;		Unchanged: 0/0
 12833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12838 ;;Total ram usage:        0 bytes
 12839 ;; Hardware stack levels used:    1
 12840 ;; Hardware stack levels required when called:    3
 12841 ;; This function calls:
 12842 ;;		Nothing
 12843 ;; This function is called by:
 12844 ;;		_SYSTEM_Initialize
 12845 ;; This function uses a reentrant model
 12846 ;;
 12847                           
 12848                           	psect	text71
 12849  0057D4                     __ptext71:
 12850                           	opt callstack 0
 12851  0057D4                     _CLC1_Initialize:
 12852                           	opt callstack 26
 12853                           
 12854                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12855                           
 12856                           ; BSR set to: 60
 12857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12858                           ;incstack = 0
 12859  0057D4  013C               	movlb	60	; () banked
 12860  0057D6  6B75               	clrf	117,b	;volatile
 12861                           
 12862                           ; BSR set to: 60
 12863                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12864  0057D8  0E04               	movlw	4
 12865  0057DA  6F76               	movwf	118,b	;volatile
 12866                           
 12867                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12868  0057DC  0E04               	movlw	4
 12869  0057DE  6F77               	movwf	119,b	;volatile
 12870                           
 12871                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12872  0057E0  0E04               	movlw	4
 12873  0057E2  6F78               	movwf	120,b	;volatile
 12874                           
 12875                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12876  0057E4  0E04               	movlw	4
 12877  0057E6  6F79               	movwf	121,b	;volatile
 12878                           
 12879                           ; BSR set to: 60
 12880                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12881  0057E8  6B7A               	clrf	122,b	;volatile
 12882                           
 12883                           ; BSR set to: 60
 12884                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12885  0057EA  6B7B               	clrf	123,b	;volatile
 12886                           
 12887                           ; BSR set to: 60
 12888                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12889  0057EC  6B7C               	clrf	124,b	;volatile
 12890                           
 12891                           ; BSR set to: 60
 12892                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12893  0057EE  6B7D               	clrf	125,b	;volatile
 12894                           
 12895                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12896  0057F0  0E81               	movlw	129
 12897  0057F2  6F74               	movwf	116,b	;volatile
 12898                           
 12899                           ; BSR set to: 60
 12900                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12901  0057F4  0012               	return		;funcret
 12902  0057F6                     __end_of_CLC1_Initialize:
 12903                           	opt callstack 0
 12904                           
 12905 ;; *************** function _ADCC_Initialize *****************
 12906 ;; Defined at:
 12907 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;		None
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;		None
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  1  [STACK] void 
 12914 ;; Registers used:
 12915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12916 ;; Tracked objects:
 12917 ;;		On entry : 3F/39
 12918 ;;		On exit  : 0/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12925 ;;Total ram usage:        0 bytes
 12926 ;; Hardware stack levels used:    1
 12927 ;; Hardware stack levels required when called:    4
 12928 ;; This function calls:
 12929 ;;		_ADCC_SetADIInterruptHandler
 12930 ;; This function is called by:
 12931 ;;		_SYSTEM_Initialize
 12932 ;; This function uses a reentrant model
 12933 ;;
 12934                           
 12935                           	psect	text72
 12936  0050F8                     __ptext72:
 12937                           	opt callstack 0
 12938  0050F8                     _ADCC_Initialize:
 12939                           	opt callstack 25
 12940                           
 12941                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12942                           
 12943                           ; BSR set to: 60
 12944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12945                           ;incstack = 0
 12946  0050F8  013E               	movlb	62	; () banked
 12947  0050FA  6BDE               	clrf	222,b	;volatile
 12948                           
 12949                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12950  0050FC  6BDF               	clrf	223,b	;volatile
 12951                           
 12952                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12953  0050FE  6BE0               	clrf	224,b	;volatile
 12954                           
 12955                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12956  005100  6BE1               	clrf	225,b	;volatile
 12957                           
 12958                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12959  005102  6BE4               	clrf	228,b	;volatile
 12960                           
 12961                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12962  005104  6BE5               	clrf	229,b	;volatile
 12963                           
 12964                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12965  005106  6BEA               	clrf	234,b	;volatile
 12966                           
 12967                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12968  005108  6BEC               	clrf	236,b	;volatile
 12969                           
 12970                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12971  00510A  6BF1               	clrf	241,b	;volatile
 12972                           
 12973                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12974  00510C  6BF3               	clrf	243,b	;volatile
 12975                           
 12976                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12977  00510E  6BF4               	clrf	244,b	;volatile
 12978                           
 12979                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12980  005110  6BF5               	clrf	245,b	;volatile
 12981                           
 12982                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12983  005112  6BF6               	clrf	246,b	;volatile
 12984                           
 12985                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12986  005114  6BF7               	clrf	247,b	;volatile
 12987                           
 12988                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12989  005116  6BF9               	clrf	249,b	;volatile
 12990                           
 12991                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12992  005118  6BFA               	clrf	250,b	;volatile
 12993                           
 12994                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12995  00511A  6BFB               	clrf	251,b	;volatile
 12996                           
 12997                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12998  00511C  6BFC               	clrf	252,b	;volatile
 12999                           
 13000                           ; BSR set to: 62
 13001                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13002  00511E  0E02               	movlw	2
 13003  005120  6FFD               	movwf	253,b	;volatile
 13004                           
 13005                           ; BSR set to: 62
 13006                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13007  005122  6BFE               	clrf	254,b	;volatile
 13008                           
 13009                           ; BSR set to: 62
 13010                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13011  005124  6BFF               	clrf	255,b	;volatile
 13012                           
 13013                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13014  005126  0E94               	movlw	148
 13015  005128  6FF8               	movwf	248,b	;volatile
 13016                           
 13017                           ; BSR set to: 62
 13018                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13019  00512A  0139               	movlb	57	; () banked
 13020  00512C  95A1               	bcf	161,2,b	;volatile
 13021                           
 13022                           ; BSR set to: 57
 13023                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13024  00512E  8591               	bsf	145,2,b	;volatile
 13025                           
 13026                           ; BSR set to: 57
 13027                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13028  005130  0E7C               	movlw	low _ADCC_DefaultInterruptHandler
 13029  005132  6EE6               	movwf	postinc1,c
 13030  005134  0E5A               	movlw	high _ADCC_DefaultInterruptHandler
 13031  005136  6EE6               	movwf	postinc1,c
 13032  005138  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13033  00513A  6EE6               	movwf	postinc1,c
 13034  00513C  EC63  F02B         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13035                           
 13036                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13037  005140  0012               	return		;funcret
 13038  005142                     __end_of_ADCC_Initialize:
 13039                           	opt callstack 0
 13040                           
 13041 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13042 ;; Defined at:
 13043 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13046 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1  [STACK] void 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13053 ;; Tracked objects:
 13054 ;;		On entry : 3F/39
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:    3
 13065 ;; This function calls:
 13066 ;;		Nothing
 13067 ;; This function is called by:
 13068 ;;		_ADCC_Initialize
 13069 ;; This function uses a reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text73
 13073  0056C6                     __ptext73:
 13074                           	opt callstack 0
 13075  0056C6                     _ADCC_SetADIInterruptHandler:
 13076                           	opt callstack 25
 13077                           
 13078                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 13079                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13080                           
 13081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13082                           ;incstack = 0
 13083  0056C6  50E1               	movf	fsr1l,w,c
 13084  0056C8  0FFD               	addlw	-3
 13085  0056CA  6ED9               	movwf	fsr2l,c
 13086  0056CC  50E2               	movf	fsr1h,w,c
 13087  0056CE  6EDA               	movwf	fsr2h,c
 13088  0056D0  0EFF               	movlw	255
 13089  0056D2  22DA               	addwfc	fsr2h,f,c
 13090  0056D4  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler
 13091  0056DA  006F FF78  F00C    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 13092  0056E0  006F FF74  F00D    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 13093                           
 13094                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13095  0056E6  52E5               	movf	postdec1,f,c
 13096  0056E8  52E5               	movf	postdec1,f,c
 13097  0056EA  52E5               	movf	postdec1,f,c
 13098  0056EC  0012               	return		;funcret
 13099  0056EE                     __end_of_ADCC_SetADIInterruptHandler:
 13100                           	opt callstack 0
 13101                           
 13102 ;; *************** function _INT0_ISR *****************
 13103 ;; Defined at:
 13104 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;		None
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;		None
 13109 ;; Return value:  Size  Location     Type
 13110 ;;                  1    wreg      void 
 13111 ;; Registers used:
 13112 ;;		wreg, status,2, status,0, pclath, tosl
 13113 ;; Tracked objects:
 13114 ;;		On entry : 0/0
 13115 ;;		On exit  : 0/0
 13116 ;;		Unchanged: 0/0
 13117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13122 ;;Total ram usage:        0 bytes
 13123 ;; Hardware stack levels used:    1
 13124 ;; Hardware stack levels required when called:    2
 13125 ;; This function calls:
 13126 ;;		_INT0_CallBack
 13127 ;; This function is called by:
 13128 ;;		Interrupt level 2
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132                           	psect	text74
 13133  0059E8                     __ptext74:
 13134                           	opt callstack 0
 13135  0059E8                     _INT0_ISR:
 13136                           	opt callstack 17
 13137                           
 13138                           ;incstack = 0
 13139  0059E8  EE13  F150         	lfsr	1,___inthi_sp
 13140                           
 13141                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 13142  0059EC  0139               	movlb	57	; () banked
 13143  0059EE  91A1               	bcf	161,0,b	;volatile
 13144                           
 13145                           ; BSR set to: 57
 13146                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 13147  0059F0  ECFB  F02B         	call	_INT0_CallBack	;wreg free
 13148  0059F4  0011               	retfie		f
 13149  0059F6                     __end_of_INT0_ISR:
 13150                           	opt callstack 0
 13151                           
 13152 ;; *************** function _INT0_CallBack *****************
 13153 ;; Defined at:
 13154 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;		None
 13157 ;; Auto vars:     Size  Location     Type
 13158 ;;		None
 13159 ;; Return value:  Size  Location     Type
 13160 ;;                  1  [STACK] void 
 13161 ;; Registers used:
 13162 ;;		wreg, status,2, status,0, pclath, tosl
 13163 ;; Tracked objects:
 13164 ;;		On entry : 3F/39
 13165 ;;		On exit  : 0/0
 13166 ;;		Unchanged: 0/0
 13167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13172 ;;Total ram usage:        0 bytes
 13173 ;; Hardware stack levels used:    1
 13174 ;; Hardware stack levels required when called:    1
 13175 ;; This function calls:
 13176 ;;		Absolute function
 13177 ;;		_INT0_DefaultInterruptHandler
 13178 ;; This function is called by:
 13179 ;;		_INT0_ISR
 13180 ;; This function uses a reentrant model
 13181 ;;
 13182                           
 13183                           	psect	text75
 13184  0057F6                     __ptext75:
 13185                           	opt callstack 0
 13186  0057F6                     _INT0_CallBack:
 13187                           	opt callstack 17
 13188                           
 13189                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 13190                           
 13191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13192                           ;incstack = 0
 13193  0057F6  5020               	movf	_INT0_InterruptHandler,w,c
 13194  0057F8  1021               	iorwf	_INT0_InterruptHandler+1,w,c
 13195  0057FA  1022               	iorwf	_INT0_InterruptHandler+2,w,c
 13196  0057FC  B4D8               	btfsc	status,2,c
 13197  0057FE  0012               	return	
 13198                           
 13199                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 13200  005800  D801               	call	u112_48
 13201  005802  0012               	return	
 13202  005804                     u112_48:
 13203  005804  0005               	push	
 13204  005806  6EFA               	movwf	pclath,c
 13205  005808  5020               	movf	_INT0_InterruptHandler,w,c
 13206  00580A  6EFD               	movwf	tosl,c
 13207  00580C  5021               	movf	_INT0_InterruptHandler+1,w,c
 13208  00580E  6EFE               	movwf	tosh,c
 13209  005810  5022               	movf	_INT0_InterruptHandler+2,w,c
 13210  005812  6EFF               	movwf	tosu,c
 13211  005814  50FA               	movf	pclath,w,c
 13212  005816  0012               	return		;indir
 13213  005818                     __end_of_INT0_CallBack:
 13214                           	opt callstack 0
 13215                           
 13216 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13217 ;; Defined at:
 13218 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;		None
 13221 ;; Auto vars:     Size  Location     Type
 13222 ;;		None
 13223 ;; Return value:  Size  Location     Type
 13224 ;;                  1  [STACK] void 
 13225 ;; Registers used:
 13226 ;;		None
 13227 ;; Tracked objects:
 13228 ;;		On entry : 0/39
 13229 ;;		On exit  : 0/0
 13230 ;;		Unchanged: 0/0
 13231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13236 ;;Total ram usage:        0 bytes
 13237 ;; Hardware stack levels used:    1
 13238 ;; This function calls:
 13239 ;;		Nothing
 13240 ;; This function is called by:
 13241 ;;		_EXT_INT_Initialize
 13242 ;;		_INT0_CallBack
 13243 ;; This function uses a reentrant model
 13244 ;;
 13245                           
 13246                           	psect	text76
 13247  005A76                     __ptext76:
 13248                           	opt callstack 0
 13249  005A76                     _INT0_DefaultInterruptHandler:
 13250                           	opt callstack 17
 13251                           
 13252                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13253                           
 13254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13255                           ;incstack = 0
 13256  005A76  0012               	return		;funcret
 13257  005A78                     __end_of_INT0_DefaultInterruptHandler:
 13258                           	opt callstack 0
 13259                           
 13260 ;; *************** function _INT1_ISR *****************
 13261 ;; Defined at:
 13262 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 13263 ;; Parameters:    Size  Location     Type
 13264 ;;		None
 13265 ;; Auto vars:     Size  Location     Type
 13266 ;;		None
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  1    wreg      void 
 13269 ;; Registers used:
 13270 ;;		wreg, status,2, status,0, pclath, tosl
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/0
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13280 ;;Total ram usage:        0 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; Hardware stack levels required when called:    2
 13283 ;; This function calls:
 13284 ;;		_INT1_CallBack
 13285 ;; This function is called by:
 13286 ;;		Interrupt level 2
 13287 ;; This function uses a non-reentrant model
 13288 ;;
 13289                           
 13290                           	psect	text77
 13291  0059F8                     __ptext77:
 13292                           	opt callstack 0
 13293  0059F8                     _INT1_ISR:
 13294                           	opt callstack 17
 13295                           
 13296                           ;incstack = 0
 13297  0059F8  EE13  F150         	lfsr	1,___inthi_sp
 13298                           
 13299                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 13300  0059FC  0139               	movlb	57	; () banked
 13301  0059FE  91A5               	bcf	165,0,b	;volatile
 13302                           
 13303                           ; BSR set to: 57
 13304                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 13305  005A00  EC0C  F02C         	call	_INT1_CallBack	;wreg free
 13306  005A04  0011               	retfie		f
 13307  005A06                     __end_of_INT1_ISR:
 13308                           	opt callstack 0
 13309                           
 13310 ;; *************** function _INT1_CallBack *****************
 13311 ;; Defined at:
 13312 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;		None
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;		None
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1  [STACK] void 
 13319 ;; Registers used:
 13320 ;;		wreg, status,2, status,0, pclath, tosl
 13321 ;; Tracked objects:
 13322 ;;		On entry : 3F/39
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;Total ram usage:        0 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:    1
 13333 ;; This function calls:
 13334 ;;		Absolute function
 13335 ;;		_INT1_DefaultInterruptHandler
 13336 ;; This function is called by:
 13337 ;;		_INT1_ISR
 13338 ;; This function uses a reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text78
 13342  005818                     __ptext78:
 13343                           	opt callstack 0
 13344  005818                     _INT1_CallBack:
 13345                           	opt callstack 17
 13346                           
 13347                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 13348                           
 13349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13350                           ;incstack = 0
 13351  005818  501D               	movf	_INT1_InterruptHandler,w,c
 13352  00581A  101E               	iorwf	_INT1_InterruptHandler+1,w,c
 13353  00581C  101F               	iorwf	_INT1_InterruptHandler+2,w,c
 13354  00581E  B4D8               	btfsc	status,2,c
 13355  005820  0012               	return	
 13356                           
 13357                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 13358  005822  D801               	call	u114_48
 13359  005824  0012               	return	
 13360  005826                     u114_48:
 13361  005826  0005               	push	
 13362  005828  6EFA               	movwf	pclath,c
 13363  00582A  501D               	movf	_INT1_InterruptHandler,w,c
 13364  00582C  6EFD               	movwf	tosl,c
 13365  00582E  501E               	movf	_INT1_InterruptHandler+1,w,c
 13366  005830  6EFE               	movwf	tosh,c
 13367  005832  501F               	movf	_INT1_InterruptHandler+2,w,c
 13368  005834  6EFF               	movwf	tosu,c
 13369  005836  50FA               	movf	pclath,w,c
 13370  005838  0012               	return		;indir
 13371  00583A                     __end_of_INT1_CallBack:
 13372                           	opt callstack 0
 13373                           
 13374 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13375 ;; Defined at:
 13376 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 13377 ;; Parameters:    Size  Location     Type
 13378 ;;		None
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;		None
 13381 ;; Return value:  Size  Location     Type
 13382 ;;                  1  [STACK] void 
 13383 ;; Registers used:
 13384 ;;		None
 13385 ;; Tracked objects:
 13386 ;;		On entry : 0/39
 13387 ;;		On exit  : 0/0
 13388 ;;		Unchanged: 0/0
 13389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13394 ;;Total ram usage:        0 bytes
 13395 ;; Hardware stack levels used:    1
 13396 ;; This function calls:
 13397 ;;		Nothing
 13398 ;; This function is called by:
 13399 ;;		_EXT_INT_Initialize
 13400 ;;		_INT1_CallBack
 13401 ;; This function uses a reentrant model
 13402 ;;
 13403                           
 13404                           	psect	text79
 13405  005A78                     __ptext79:
 13406                           	opt callstack 0
 13407  005A78                     _INT1_DefaultInterruptHandler:
 13408                           	opt callstack 17
 13409                           
 13410                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13411                           
 13412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13413                           ;incstack = 0
 13414  005A78  0012               	return		;funcret
 13415  005A7A                     __end_of_INT1_DefaultInterruptHandler:
 13416                           	opt callstack 0
 13417                           
 13418 ;; *************** function _INT2_ISR *****************
 13419 ;; Defined at:
 13420 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;		None
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;		None
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  1    wreg      void 
 13427 ;; Registers used:
 13428 ;;		wreg, status,2, status,0, pclath, tosl
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13438 ;;Total ram usage:        0 bytes
 13439 ;; Hardware stack levels used:    1
 13440 ;; Hardware stack levels required when called:    2
 13441 ;; This function calls:
 13442 ;;		_INT2_CallBack
 13443 ;; This function is called by:
 13444 ;;		Interrupt level 2
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text80
 13449  005A08                     __ptext80:
 13450                           	opt callstack 0
 13451  005A08                     _INT2_ISR:
 13452                           	opt callstack 17
 13453                           
 13454                           ;incstack = 0
 13455  005A08  EE13  F150         	lfsr	1,___inthi_sp
 13456                           
 13457                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 13458  005A0C  0139               	movlb	57	; () banked
 13459  005A0E  9BA7               	bcf	167,5,b	;volatile
 13460                           
 13461                           ; BSR set to: 57
 13462                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 13463  005A10  EC1D  F02C         	call	_INT2_CallBack	;wreg free
 13464  005A14  0011               	retfie		f
 13465  005A16                     __end_of_INT2_ISR:
 13466                           	opt callstack 0
 13467                           
 13468 ;; *************** function _INT2_CallBack *****************
 13469 ;; Defined at:
 13470 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;		None
 13473 ;; Auto vars:     Size  Location     Type
 13474 ;;		None
 13475 ;; Return value:  Size  Location     Type
 13476 ;;                  1  [STACK] void 
 13477 ;; Registers used:
 13478 ;;		wreg, status,2, status,0, pclath, tosl
 13479 ;; Tracked objects:
 13480 ;;		On entry : 3F/39
 13481 ;;		On exit  : 0/0
 13482 ;;		Unchanged: 0/0
 13483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13488 ;;Total ram usage:        0 bytes
 13489 ;; Hardware stack levels used:    1
 13490 ;; Hardware stack levels required when called:    1
 13491 ;; This function calls:
 13492 ;;		Absolute function
 13493 ;;		_INT2_DefaultInterruptHandler
 13494 ;; This function is called by:
 13495 ;;		_INT2_ISR
 13496 ;; This function uses a reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text81
 13500  00583A                     __ptext81:
 13501                           	opt callstack 0
 13502  00583A                     _INT2_CallBack:
 13503                           	opt callstack 17
 13504                           
 13505                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 13506                           
 13507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13508                           ;incstack = 0
 13509  00583A  501A               	movf	_INT2_InterruptHandler,w,c
 13510  00583C  101B               	iorwf	_INT2_InterruptHandler+1,w,c
 13511  00583E  101C               	iorwf	_INT2_InterruptHandler+2,w,c
 13512  005840  B4D8               	btfsc	status,2,c
 13513  005842  0012               	return	
 13514                           
 13515                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 13516  005844  D801               	call	u116_48
 13517  005846  0012               	return	
 13518  005848                     u116_48:
 13519  005848  0005               	push	
 13520  00584A  6EFA               	movwf	pclath,c
 13521  00584C  501A               	movf	_INT2_InterruptHandler,w,c
 13522  00584E  6EFD               	movwf	tosl,c
 13523  005850  501B               	movf	_INT2_InterruptHandler+1,w,c
 13524  005852  6EFE               	movwf	tosh,c
 13525  005854  501C               	movf	_INT2_InterruptHandler+2,w,c
 13526  005856  6EFF               	movwf	tosu,c
 13527  005858  50FA               	movf	pclath,w,c
 13528  00585A  0012               	return		;indir
 13529  00585C                     __end_of_INT2_CallBack:
 13530                           	opt callstack 0
 13531                           
 13532 ;; *************** function _INT2_DefaultInterruptHandler *****************
 13533 ;; Defined at:
 13534 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;		None
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;		None
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1  [STACK] void 
 13541 ;; Registers used:
 13542 ;;		None
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/39
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13552 ;;Total ram usage:        0 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; This function calls:
 13555 ;;		Nothing
 13556 ;; This function is called by:
 13557 ;;		_EXT_INT_Initialize
 13558 ;;		_INT2_CallBack
 13559 ;; This function uses a reentrant model
 13560 ;;
 13561                           
 13562                           	psect	text82
 13563  005A7A                     __ptext82:
 13564                           	opt callstack 0
 13565  005A7A                     _INT2_DefaultInterruptHandler:
 13566                           	opt callstack 17
 13567                           
 13568                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13569                           
 13570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13571                           ;incstack = 0
 13572  005A7A  0012               	return		;funcret
 13573  005A7C                     __end_of_INT2_DefaultInterruptHandler:
 13574                           	opt callstack 0
 13575                           
 13576 ;; *************** function _Default_ISR *****************
 13577 ;; Defined at:
 13578 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;		None
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;		None
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1    wreg      void 
 13585 ;; Registers used:
 13586 ;;		None
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 0/0
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13596 ;;Total ram usage:        0 bytes
 13597 ;; Hardware stack levels used:    1
 13598 ;; This function calls:
 13599 ;;		Nothing
 13600 ;; This function is called by:
 13601 ;;		Interrupt level 2
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           	psect	text83
 13606  005A70                     __ptext83:
 13607                           	opt callstack 0
 13608  005A70                     _Default_ISR:
 13609                           	opt callstack 19
 13610                           
 13611                           ;incstack = 0
 13612  005A70  EE13  F150         	lfsr	1,___inthi_sp
 13613  005A74  0011               	retfie		f
 13614  005A76                     __end_of_Default_ISR:
 13615                           	opt callstack 0
 13616                           
 13617 ;; *************** function _ADCC_ISR *****************
 13618 ;; Defined at:
 13619 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;		None
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;		None
 13624 ;; Return value:  Size  Location     Type
 13625 ;;                  1    wreg      void 
 13626 ;; Registers used:
 13627 ;;		wreg, status,2, status,0, pclath, tosl
 13628 ;; Tracked objects:
 13629 ;;		On entry : 0/0
 13630 ;;		On exit  : 0/0
 13631 ;;		Unchanged: 0/0
 13632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13637 ;;Total ram usage:        0 bytes
 13638 ;; Hardware stack levels used:    1
 13639 ;; Hardware stack levels required when called:    1
 13640 ;; This function calls:
 13641 ;;		Absolute function
 13642 ;;		_ADCC_DefaultInterruptHandler
 13643 ;; This function is called by:
 13644 ;;		Interrupt level 2
 13645 ;; This function uses a non-reentrant model
 13646 ;;
 13647                           
 13648                           	psect	text84
 13649  005494                     __ptext84:
 13650                           	opt callstack 0
 13651  005494                     _ADCC_ISR:
 13652                           	opt callstack 18
 13653                           
 13654                           ;incstack = 0
 13655  005494  EE13  F150         	lfsr	1,___inthi_sp
 13656                           
 13657                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13658  005498  0139               	movlb	57	; () banked
 13659  00549A  95A1               	bcf	161,2,b	;volatile
 13660                           
 13661                           ; BSR set to: 57
 13662                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13663  00549C  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 13664  00549E  100C               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13665  0054A0  100D               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13666  0054A2  B4D8               	btfsc	status,2,c
 13667  0054A4  0011               	retfie		f
 13668                           
 13669                           ; BSR set to: 57
 13670                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13671  0054A6  D801               	call	i2u159_48
 13672  0054A8  0011               	retfie		f
 13673  0054AA                     i2u159_48:
 13674  0054AA  0005               	push	
 13675  0054AC  6EFA               	movwf	pclath,c
 13676  0054AE  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 13677  0054B0  6EFD               	movwf	tosl,c
 13678  0054B2  500C               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13679  0054B4  6EFE               	movwf	tosh,c
 13680  0054B6  500D               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13681  0054B8  6EFF               	movwf	tosu,c
 13682  0054BA  50FA               	movf	pclath,w,c
 13683  0054BC  0012               	return		;indir
 13684  0054BE                     __end_of_ADCC_ISR:
 13685                           	opt callstack 0
 13686                           
 13687 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13688 ;; Defined at:
 13689 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13690 ;; Parameters:    Size  Location     Type
 13691 ;;		None
 13692 ;; Auto vars:     Size  Location     Type
 13693 ;;		None
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  1  [STACK] void 
 13696 ;; Registers used:
 13697 ;;		None
 13698 ;; Tracked objects:
 13699 ;;		On entry : 3F/39
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13707 ;;Total ram usage:        0 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; This function calls:
 13710 ;;		Nothing
 13711 ;; This function is called by:
 13712 ;;		_ADCC_Initialize
 13713 ;;		_ADCC_ISR
 13714 ;; This function uses a reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text85
 13718  005A7C                     __ptext85:
 13719                           	opt callstack 0
 13720  005A7C                     _ADCC_DefaultInterruptHandler:
 13721                           	opt callstack 18
 13722                           
 13723                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13724                           
 13725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13726                           ;incstack = 0
 13727  005A7C  0012               	return		;funcret
 13728  005A7E                     __end_of_ADCC_DefaultInterruptHandler:
 13729                           	opt callstack 0
 13730                           
 13731 ;; *************** function _UART1_tx_vect_isr *****************
 13732 ;; Defined at:
 13733 ;;		line 197 in file "mcc_generated_files/uart1.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;		None
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;		None
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  1    wreg      void 
 13740 ;; Registers used:
 13741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13751 ;;Total ram usage:        0 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; Hardware stack levels required when called:    1
 13754 ;; This function calls:
 13755 ;;		Absolute function
 13756 ;;		_UART1_Transmit_ISR
 13757 ;; This function is called by:
 13758 ;;		Interrupt level 2
 13759 ;; This function uses a non-reentrant model
 13760 ;;
 13761                           
 13762                           	psect	text86
 13763  0056F0                     __ptext86:
 13764                           	opt callstack 0
 13765  0056F0                     _UART1_tx_vect_isr:
 13766                           	opt callstack 18
 13767                           
 13768                           ;incstack = 0
 13769  0056F0  EE13  F150         	lfsr	1,___inthi_sp
 13770                           
 13771                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 13772  0056F4  500E               	movf	_UART1_TxInterruptHandler,w,c
 13773  0056F6  100F               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13774  0056F8  1010               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13775  0056FA  B4D8               	btfsc	status,2,c
 13776  0056FC  0011               	retfie		f
 13777                           
 13778                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 13779  0056FE  D801               	call	i2u323_48
 13780  005700  0011               	retfie		f
 13781  005702                     i2u323_48:
 13782  005702  0005               	push	
 13783  005704  6EFA               	movwf	pclath,c
 13784  005706  500E               	movf	_UART1_TxInterruptHandler,w,c
 13785  005708  6EFD               	movwf	tosl,c
 13786  00570A  500F               	movf	_UART1_TxInterruptHandler+1,w,c
 13787  00570C  6EFE               	movwf	tosh,c
 13788  00570E  5010               	movf	_UART1_TxInterruptHandler+2,w,c
 13789  005710  6EFF               	movwf	tosu,c
 13790  005712  50FA               	movf	pclath,w,c
 13791  005714  0012               	return		;indir
 13792  005716                     __end_of_UART1_tx_vect_isr:
 13793                           	opt callstack 0
 13794                           
 13795 ;; *************** function _UART1_Transmit_ISR *****************
 13796 ;; Defined at:
 13797 ;;		line 211 in file "mcc_generated_files/uart1.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;		None
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;		None
 13802 ;; Return value:  Size  Location     Type
 13803 ;;                  1  [STACK] void 
 13804 ;; Registers used:
 13805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13806 ;; Tracked objects:
 13807 ;;		On entry : 0/0
 13808 ;;		On exit  : 3B/39
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13815 ;;Total ram usage:        0 bytes
 13816 ;; Hardware stack levels used:    1
 13817 ;; This function calls:
 13818 ;;		Nothing
 13819 ;; This function is called by:
 13820 ;;		_UART1_Initialize
 13821 ;;		_UART1_tx_vect_isr
 13822 ;; This function uses a reentrant model
 13823 ;;
 13824                           
 13825                           	psect	text87
 13826  0053E6                     __ptext87:
 13827                           	opt callstack 0
 13828  0053E6                     _UART1_Transmit_ISR:
 13829                           	opt callstack 18
 13830                           
 13831                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13832                           
 13833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13834                           ;incstack = 0
 13835  0053E6  0E40               	movlw	64
 13836  0053E8  6038               	cpfslt	_uart1TxBufferRemaining,c
 13837  0053EA  D010               	goto	l597
 13838                           
 13839                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13840  0053EC  0EC0               	movlw	low _uart1TxBuffer
 13841  0053EE  2439               	addwf	_uart1TxTail,w,c	;volatile
 13842  0053F0  6ED9               	movwf	fsr2l,c
 13843  0053F2  6ADA               	clrf	fsr2h,c
 13844  0053F4  0E02               	movlw	high _uart1TxBuffer
 13845  0053F6  22DA               	addwfc	fsr2h,f,c
 13846  0053F8  50DF               	movf	indf2,w,c
 13847  0053FA  013D               	movlb	61	; () banked
 13848  0053FC  6FEA               	movwf	234,b	;volatile
 13849                           
 13850                           ; BSR set to: 61
 13851  0053FE  2A39               	incf	_uart1TxTail,f,c	;volatile
 13852                           
 13853                           ; BSR set to: 61
 13854                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13855  005400  0E3F               	movlw	63
 13856  005402  6439               	cpfsgt	_uart1TxTail,c
 13857  005404  D001               	goto	l5588
 13858                           
 13859                           ; BSR set to: 61
 13860                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 13861  005406  6A39               	clrf	_uart1TxTail,c	;volatile
 13862  005408                     l5588:
 13863                           
 13864                           ; BSR set to: 61
 13865                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 13866  005408  2A38               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13867                           
 13868                           ;mcc_generated_files/uart1.c: 220:  } else {
 13869  00540A  0012               	return	
 13870  00540C                     l597:
 13871                           
 13872                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 13873  00540C  0139               	movlb	57	; () banked
 13874  00540E  9993               	bcf	147,4,b	;volatile
 13875                           
 13876                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13877  005410  0012               	return		;funcret
 13878  005412                     __end_of_UART1_Transmit_ISR:
 13879                           	opt callstack 0
 13880                           
 13881 ;; *************** function _UART1_rx_vect_isr *****************
 13882 ;; Defined at:
 13883 ;;		line 204 in file "mcc_generated_files/uart1.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;		None
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;		None
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  1    wreg      void 
 13890 ;; Registers used:
 13891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;Total ram usage:        0 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; Hardware stack levels required when called:    1
 13904 ;; This function calls:
 13905 ;;		Absolute function
 13906 ;;		_UART1_Receive_ISR
 13907 ;; This function is called by:
 13908 ;;		Interrupt level 2
 13909 ;; This function uses a non-reentrant model
 13910 ;;
 13911                           
 13912                           	psect	text88
 13913  005718                     __ptext88:
 13914                           	opt callstack 0
 13915  005718                     _UART1_rx_vect_isr:
 13916                           	opt callstack 18
 13917                           
 13918                           ;incstack = 0
 13919  005718  EE13  F150         	lfsr	1,___inthi_sp
 13920                           
 13921                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 13922  00571C  5011               	movf	_UART1_RxInterruptHandler,w,c
 13923  00571E  1012               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13924  005720  1013               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13925  005722  B4D8               	btfsc	status,2,c
 13926  005724  0011               	retfie		f
 13927                           
 13928                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 13929  005726  D801               	call	i2u325_48
 13930  005728  0011               	retfie		f
 13931  00572A                     i2u325_48:
 13932  00572A  0005               	push	
 13933  00572C  6EFA               	movwf	pclath,c
 13934  00572E  5011               	movf	_UART1_RxInterruptHandler,w,c
 13935  005730  6EFD               	movwf	tosl,c
 13936  005732  5012               	movf	_UART1_RxInterruptHandler+1,w,c
 13937  005734  6EFE               	movwf	tosh,c
 13938  005736  5013               	movf	_UART1_RxInterruptHandler+2,w,c
 13939  005738  6EFF               	movwf	tosu,c
 13940  00573A  50FA               	movf	pclath,w,c
 13941  00573C  0012               	return		;indir
 13942  00573E                     __end_of_UART1_rx_vect_isr:
 13943                           	opt callstack 0
 13944                           
 13945 ;; *************** function _UART1_Receive_ISR *****************
 13946 ;; Defined at:
 13947 ;;		line 227 in file "mcc_generated_files/uart1.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;		None
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;		None
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  1  [STACK] void 
 13954 ;; Registers used:
 13955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13965 ;;Total ram usage:        0 bytes
 13966 ;; Hardware stack levels used:    1
 13967 ;; This function calls:
 13968 ;;		Nothing
 13969 ;; This function is called by:
 13970 ;;		_UART1_Initialize
 13971 ;;		_UART1_rx_vect_isr
 13972 ;; This function uses a reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text89
 13976  00587E                     __ptext89:
 13977                           	opt callstack 0
 13978  00587E                     _UART1_Receive_ISR:
 13979                           	opt callstack 18
 13980                           
 13981                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13982                           
 13983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13984                           ;incstack = 0
 13985  00587E  0E80               	movlw	low _uart1RxBuffer
 13986  005880  2437               	addwf	_uart1RxHead,w,c	;volatile
 13987  005882  6ED9               	movwf	fsr2l,c
 13988  005884  6ADA               	clrf	fsr2h,c
 13989  005886  0E02               	movlw	high _uart1RxBuffer
 13990  005888  22DA               	addwfc	fsr2h,f,c
 13991  00588A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13992  005890  2A37               	incf	_uart1RxHead,f,c	;volatile
 13993                           
 13994                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13995  005892  0E3F               	movlw	63
 13996  005894  6437               	cpfsgt	_uart1RxHead,c
 13997  005896  D001               	goto	l5598
 13998                           
 13999                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 14000  005898  6A37               	clrf	_uart1RxHead,c	;volatile
 14001  00589A                     l5598:
 14002                           
 14003                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 14004  00589A  2A35               	incf	_uart1RxCount,f,c	;volatile
 14005                           
 14006                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14007  00589C  0012               	return		;funcret
 14008  00589E                     __end_of_UART1_Receive_ISR:
 14009                           	opt callstack 0
 14010                           
 14011 ;; *************** function _UART2_tx_vect_isr *****************
 14012 ;; Defined at:
 14013 ;;		line 195 in file "mcc_generated_files/uart2.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;		None
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;		None
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  1    wreg      void 
 14020 ;; Registers used:
 14021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;Total ram usage:        0 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    1
 14034 ;; This function calls:
 14035 ;;		Absolute function
 14036 ;;		_UART2_Transmit_ISR
 14037 ;; This function is called by:
 14038 ;;		Interrupt level 2
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text90
 14043  005740                     __ptext90:
 14044                           	opt callstack 0
 14045  005740                     _UART2_tx_vect_isr:
 14046                           	opt callstack 18
 14047                           
 14048                           ;incstack = 0
 14049  005740  EE13  F150         	lfsr	1,___inthi_sp
 14050                           
 14051                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 14052  005744  5014               	movf	_UART2_TxInterruptHandler,w,c
 14053  005746  1015               	iorwf	_UART2_TxInterruptHandler+1,w,c
 14054  005748  1016               	iorwf	_UART2_TxInterruptHandler+2,w,c
 14055  00574A  B4D8               	btfsc	status,2,c
 14056  00574C  0011               	retfie		f
 14057                           
 14058                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 14059  00574E  D801               	call	i2u327_48
 14060  005750  0011               	retfie		f
 14061  005752                     i2u327_48:
 14062  005752  0005               	push	
 14063  005754  6EFA               	movwf	pclath,c
 14064  005756  5014               	movf	_UART2_TxInterruptHandler,w,c
 14065  005758  6EFD               	movwf	tosl,c
 14066  00575A  5015               	movf	_UART2_TxInterruptHandler+1,w,c
 14067  00575C  6EFE               	movwf	tosh,c
 14068  00575E  5016               	movf	_UART2_TxInterruptHandler+2,w,c
 14069  005760  6EFF               	movwf	tosu,c
 14070  005762  50FA               	movf	pclath,w,c
 14071  005764  0012               	return		;indir
 14072  005766                     __end_of_UART2_tx_vect_isr:
 14073                           	opt callstack 0
 14074                           
 14075 ;; *************** function _UART2_Transmit_ISR *****************
 14076 ;; Defined at:
 14077 ;;		line 213 in file "mcc_generated_files/uart2.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;		None
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;		None
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  1  [STACK] void 
 14084 ;; Registers used:
 14085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 3B/39
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14095 ;;Total ram usage:        0 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; This function calls:
 14098 ;;		Nothing
 14099 ;; This function is called by:
 14100 ;;		_UART2_Initialize
 14101 ;;		_UART2_tx_vect_isr
 14102 ;; This function uses a reentrant model
 14103 ;;
 14104                           
 14105                           	psect	text91
 14106  005412                     __ptext91:
 14107                           	opt callstack 0
 14108  005412                     _UART2_Transmit_ISR:
 14109                           	opt callstack 18
 14110                           
 14111                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 14112                           
 14113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14114                           ;incstack = 0
 14115  005412  0E40               	movlw	64
 14116  005414  6032               	cpfslt	_uart2TxBufferRemaining,c
 14117  005416  D010               	goto	l717
 14118                           
 14119                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 14120  005418  0E40               	movlw	low _uart2TxBuffer
 14121  00541A  2433               	addwf	_uart2TxTail,w,c	;volatile
 14122  00541C  6ED9               	movwf	fsr2l,c
 14123  00541E  6ADA               	clrf	fsr2h,c
 14124  005420  0E02               	movlw	high _uart2TxBuffer
 14125  005422  22DA               	addwfc	fsr2h,f,c
 14126  005424  50DF               	movf	indf2,w,c
 14127  005426  013D               	movlb	61	; () banked
 14128  005428  6FD2               	movwf	210,b	;volatile
 14129                           
 14130                           ; BSR set to: 61
 14131  00542A  2A33               	incf	_uart2TxTail,f,c	;volatile
 14132                           
 14133                           ; BSR set to: 61
 14134                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 14135  00542C  0E3F               	movlw	63
 14136  00542E  6433               	cpfsgt	_uart2TxTail,c
 14137  005430  D001               	goto	l5610
 14138                           
 14139                           ; BSR set to: 61
 14140                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 14141  005432  6A33               	clrf	_uart2TxTail,c	;volatile
 14142  005434                     l5610:
 14143                           
 14144                           ; BSR set to: 61
 14145                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 14146  005434  2A32               	incf	_uart2TxBufferRemaining,f,c	;volatile
 14147                           
 14148                           ;mcc_generated_files/uart2.c: 224:     }
 14149  005436  0012               	return	
 14150  005438                     l717:
 14151                           
 14152                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 14153  005438  0139               	movlb	57	; () banked
 14154  00543A  9796               	bcf	150,3,b	;volatile
 14155                           
 14156                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14157  00543C  0012               	return		;funcret
 14158  00543E                     __end_of_UART2_Transmit_ISR:
 14159                           	opt callstack 0
 14160                           
 14161 ;; *************** function _UART2_rx_vect_isr *****************
 14162 ;; Defined at:
 14163 ;;		line 203 in file "mcc_generated_files/uart2.c"
 14164 ;; Parameters:    Size  Location     Type
 14165 ;;		None
 14166 ;; Auto vars:     Size  Location     Type
 14167 ;;		None
 14168 ;; Return value:  Size  Location     Type
 14169 ;;                  1    wreg      void 
 14170 ;; Registers used:
 14171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14172 ;; Tracked objects:
 14173 ;;		On entry : 0/0
 14174 ;;		On exit  : 0/0
 14175 ;;		Unchanged: 0/0
 14176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14181 ;;Total ram usage:        0 bytes
 14182 ;; Hardware stack levels used:    1
 14183 ;; Hardware stack levels required when called:    1
 14184 ;; This function calls:
 14185 ;;		Absolute function
 14186 ;;		_UART2_Receive_ISR
 14187 ;; This function is called by:
 14188 ;;		Interrupt level 2
 14189 ;; This function uses a non-reentrant model
 14190 ;;
 14191                           
 14192                           	psect	text92
 14193  005768                     __ptext92:
 14194                           	opt callstack 0
 14195  005768                     _UART2_rx_vect_isr:
 14196                           	opt callstack 18
 14197                           
 14198                           ;incstack = 0
 14199  005768  EE13  F150         	lfsr	1,___inthi_sp
 14200                           
 14201                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14202  00576C  5017               	movf	_UART2_RxInterruptHandler,w,c
 14203  00576E  1018               	iorwf	_UART2_RxInterruptHandler+1,w,c
 14204  005770  1019               	iorwf	_UART2_RxInterruptHandler+2,w,c
 14205  005772  B4D8               	btfsc	status,2,c
 14206  005774  0011               	retfie		f
 14207                           
 14208                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14209  005776  D801               	call	i2u329_48
 14210  005778  0011               	retfie		f
 14211  00577A                     i2u329_48:
 14212  00577A  0005               	push	
 14213  00577C  6EFA               	movwf	pclath,c
 14214  00577E  5017               	movf	_UART2_RxInterruptHandler,w,c
 14215  005780  6EFD               	movwf	tosl,c
 14216  005782  5018               	movf	_UART2_RxInterruptHandler+1,w,c
 14217  005784  6EFE               	movwf	tosh,c
 14218  005786  5019               	movf	_UART2_RxInterruptHandler+2,w,c
 14219  005788  6EFF               	movwf	tosu,c
 14220  00578A  50FA               	movf	pclath,w,c
 14221  00578C  0012               	return		;indir
 14222  00578E                     __end_of_UART2_rx_vect_isr:
 14223                           	opt callstack 0
 14224                           
 14225 ;; *************** function _UART2_Receive_ISR *****************
 14226 ;; Defined at:
 14227 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;		None
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;		None
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1  [STACK] void 
 14234 ;; Registers used:
 14235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14245 ;;Total ram usage:        0 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; This function calls:
 14248 ;;		Nothing
 14249 ;; This function is called by:
 14250 ;;		_UART2_Initialize
 14251 ;;		_UART2_rx_vect_isr
 14252 ;; This function uses a reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text93
 14256  00589E                     __ptext93:
 14257                           	opt callstack 0
 14258  00589E                     _UART2_Receive_ISR:
 14259                           	opt callstack 18
 14260                           
 14261                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14262                           
 14263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14264                           ;incstack = 0
 14265  00589E  0E00               	movlw	low _uart2RxBuffer
 14266  0058A0  2431               	addwf	_uart2RxHead,w,c	;volatile
 14267  0058A2  6ED9               	movwf	fsr2l,c
 14268  0058A4  6ADA               	clrf	fsr2h,c
 14269  0058A6  0E02               	movlw	high _uart2RxBuffer
 14270  0058A8  22DA               	addwfc	fsr2h,f,c
 14271  0058AA  006F F743 FFDF     	movff	15824,indf2	;volatile
 14272  0058B0  2A31               	incf	_uart2RxHead,f,c	;volatile
 14273                           
 14274                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14275  0058B2  0E3F               	movlw	63
 14276  0058B4  6431               	cpfsgt	_uart2RxHead,c
 14277  0058B6  D001               	goto	l5620
 14278                           
 14279                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14280  0058B8  6A31               	clrf	_uart2RxHead,c	;volatile
 14281  0058BA                     l5620:
 14282                           
 14283                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14284  0058BA  2A2F               	incf	_uart2RxCount,f,c	;volatile
 14285                           
 14286                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14287  0058BC  0012               	return		;funcret
 14288  0058BE                     __end_of_UART2_Receive_ISR:
 14289                           	opt callstack 0
 14290                           
 14291 ;; *************** function _TMR6_ISR *****************
 14292 ;; Defined at:
 14293 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;		None
 14296 ;; Auto vars:     Size  Location     Type
 14297 ;;		None
 14298 ;; Return value:  Size  Location     Type
 14299 ;;                  1    wreg      void 
 14300 ;; Registers used:
 14301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14302 ;; Tracked objects:
 14303 ;;		On entry : 0/0
 14304 ;;		On exit  : 0/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14311 ;;Total ram usage:        1 bytes
 14312 ;; Hardware stack levels used:    1
 14313 ;; Hardware stack levels required when called:    2
 14314 ;; This function calls:
 14315 ;;		_TMR6_CallBack
 14316 ;; This function is called by:
 14317 ;;		Interrupt level 2
 14318 ;; This function uses a non-reentrant model
 14319 ;;
 14320                           
 14321                           	psect	text94
 14322  00594C                     __ptext94:
 14323                           	opt callstack 0
 14324  00594C                     _TMR6_ISR:
 14325                           	opt callstack 17
 14326                           
 14327                           ;incstack = 0
 14328  00594C  0060  F0EC  F05B   	movff	btemp,??_TMR6_ISR
 14329  005952  EE13  F150         	lfsr	1,___inthi_sp
 14330                           
 14331                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 14332  005956  0139               	movlb	57	; () banked
 14333  005958  91A9               	bcf	169,0,b	;volatile
 14334                           
 14335                           ; BSR set to: 57
 14336                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 14337  00595A  EC2E  F02C         	call	_TMR6_CallBack	;wreg free
 14338  00595E  0060  F16C  F03B   	movff	??_TMR6_ISR,btemp
 14339  005964  0011               	retfie		f
 14340  005966                     __end_of_TMR6_ISR:
 14341                           	opt callstack 0
 14342                           
 14343 ;; *************** function _TMR6_CallBack *****************
 14344 ;; Defined at:
 14345 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;		None
 14348 ;; Auto vars:     Size  Location     Type
 14349 ;;		None
 14350 ;; Return value:  Size  Location     Type
 14351 ;;                  1  [STACK] void 
 14352 ;; Registers used:
 14353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14354 ;; Tracked objects:
 14355 ;;		On entry : 3F/39
 14356 ;;		On exit  : 0/0
 14357 ;;		Unchanged: 0/0
 14358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14363 ;;Total ram usage:        0 bytes
 14364 ;; Hardware stack levels used:    1
 14365 ;; Hardware stack levels required when called:    1
 14366 ;; This function calls:
 14367 ;;		Absolute function
 14368 ;;		_TMR6_DefaultInterruptHandler
 14369 ;; This function is called by:
 14370 ;;		_TMR6_ISR
 14371 ;; This function uses a reentrant model
 14372 ;;
 14373                           
 14374                           	psect	text95
 14375  00585C                     __ptext95:
 14376                           	opt callstack 0
 14377  00585C                     _TMR6_CallBack:
 14378                           	opt callstack 17
 14379                           
 14380                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 14381                           
 14382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14383                           ;incstack = 0
 14384  00585C  5008               	movf	_TMR6_InterruptHandler,w,c
 14385  00585E  1009               	iorwf	_TMR6_InterruptHandler+1,w,c
 14386  005860  100A               	iorwf	_TMR6_InterruptHandler+2,w,c
 14387  005862  B4D8               	btfsc	status,2,c
 14388  005864  0012               	return	
 14389                           
 14390                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 14391  005866  D801               	call	u291_48
 14392  005868  0012               	return	
 14393  00586A                     u291_48:
 14394  00586A  0005               	push	
 14395  00586C  6EFA               	movwf	pclath,c
 14396  00586E  5008               	movf	_TMR6_InterruptHandler,w,c
 14397  005870  6EFD               	movwf	tosl,c
 14398  005872  5009               	movf	_TMR6_InterruptHandler+1,w,c
 14399  005874  6EFE               	movwf	tosh,c
 14400  005876  500A               	movf	_TMR6_InterruptHandler+2,w,c
 14401  005878  6EFF               	movwf	tosu,c
 14402  00587A  50FA               	movf	pclath,w,c
 14403  00587C  0012               	return		;indir
 14404  00587E                     __end_of_TMR6_CallBack:
 14405                           	opt callstack 0
 14406                           
 14407 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14408 ;; Defined at:
 14409 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;  i               1  [STACK] unsigned char 
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1  [STACK] void 
 14416 ;; Registers used:
 14417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/39
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;Total ram usage:        0 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; This function calls:
 14430 ;;		Nothing
 14431 ;; This function is called by:
 14432 ;;		_TMR6_Initialize
 14433 ;;		_TMR6_CallBack
 14434 ;; This function uses a reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text96
 14438  0051CE                     __ptext96:
 14439                           	opt callstack 0
 14440  0051CE                     _TMR6_DefaultInterruptHandler:
 14441                           	opt callstack 0
 14442                           
 14443                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14444  0051CE  52E6               	movf	postinc1,f,c
 14445                           
 14446                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14447                           ;stkvar	_i @ sp[(-1)+0]
 14448                           
 14449                           ;incstack = 0
 14450  0051D0  0EFF               	movlw	-1
 14451  0051D2  6AE3               	clrf	plusw1,c
 14452  0051D4                     l5276:
 14453                           
 14454                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14455                           ;stkvar	_i @ sp[(-1)+0]
 14456  0051D4  0EFF               	movlw	-1
 14457  0051D6  50E3               	movf	plusw1,w,c
 14458  0051D8  0D02               	mullw	2
 14459  0051DA  50F3               	movf	prodl,w,c
 14460  0051DC  0F79               	addlw	low _tickCount
 14461  0051DE  6ED9               	movwf	fsr2l,c
 14462  0051E0  6ADA               	clrf	fsr2h,c
 14463  0051E2  50DE               	movf	postinc2,w,c
 14464  0051E4  10DE               	iorwf	postinc2,w,c
 14465  0051E6  B4D8               	btfsc	status,2,c
 14466  0051E8  D00A               	goto	l5280
 14467                           
 14468                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14469                           ;stkvar	_i @ sp[(-1)+0]
 14470  0051EA  0EFF               	movlw	-1
 14471  0051EC  50E3               	movf	plusw1,w,c
 14472  0051EE  0D02               	mullw	2
 14473  0051F0  50F3               	movf	prodl,w,c
 14474  0051F2  0F79               	addlw	low _tickCount
 14475  0051F4  6ED9               	movwf	fsr2l,c
 14476  0051F6  6ADA               	clrf	fsr2h,c
 14477  0051F8  06DE               	decf	postinc2,f,c
 14478  0051FA  0E00               	movlw	0
 14479  0051FC  5ADD               	subwfb	postdec2,f,c
 14480  0051FE                     l5280:
 14481                           
 14482                           ;mcc_generated_files/tmr6.c: 207:  }
 14483                           ;stkvar	_i @ sp[(-1)+0]
 14484  0051FE  0EFF               	movlw	-1
 14485  005200  2AE3               	incf	plusw1,f,c
 14486                           
 14487                           ;stkvar	_i @ sp[(-1)+0]
 14488  005202  0EFF               	movlw	-1
 14489  005204  006F FF8C  F03B    	movff	plusw1,btemp
 14490  00520A  0E05               	movlw	5
 14491  00520C  643B               	cpfsgt	btemp,c
 14492  00520E  D7E2               	goto	l5276
 14493                           
 14494                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14495  005210  52E5               	movf	postdec1,f,c
 14496  005212  0012               	return		;funcret
 14497  005214                     __end_of_TMR6_DefaultInterruptHandler:
 14498                           	opt callstack 0
 14499                           
 14500 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14501 ;; Defined at:
 14502 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14503 ;; Parameters:    Size  Location     Type
 14504 ;;		None
 14505 ;; Auto vars:     Size  Location     Type
 14506 ;;		None
 14507 ;; Return value:  Size  Location     Type
 14508 ;;                  1    wreg      void 
 14509 ;; Registers used:
 14510 ;;		None
 14511 ;; Tracked objects:
 14512 ;;		On entry : 0/0
 14513 ;;		On exit  : 3F/0
 14514 ;;		Unchanged: 0/0
 14515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14520 ;;Total ram usage:        0 bytes
 14521 ;; Hardware stack levels used:    1
 14522 ;; This function calls:
 14523 ;;		Nothing
 14524 ;; This function is called by:
 14525 ;;		Interrupt level 2
 14526 ;; This function uses a non-reentrant model
 14527 ;;
 14528                           
 14529                           	psect	text97
 14530  005A18                     __ptext97:
 14531                           	opt callstack 0
 14532  005A18                     _DMA1_DMASCNT_ISR:
 14533                           	opt callstack 19
 14534                           
 14535                           ;incstack = 0
 14536  005A18  EE13  F150         	lfsr	1,___inthi_sp
 14537                           
 14538                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14539  005A1C  0139               	movlb	57	; () banked
 14540  005A1E  91A2               	bcf	162,0,b	;volatile
 14541                           
 14542                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14543  005A20  0100               	movlb	0	; () banked
 14544  005A22  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 14545                           
 14546                           ; BSR set to: 0
 14547  005A24  0011               	retfie		f
 14548  005A26                     __end_of_DMA1_DMASCNT_ISR:
 14549                           	opt callstack 0
 14550                           
 14551 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14552 ;; Defined at:
 14553 ;;		line 133 in file "mcc_generated_files/dma1.c"
 14554 ;; Parameters:    Size  Location     Type
 14555 ;;		None
 14556 ;; Auto vars:     Size  Location     Type
 14557 ;;		None
 14558 ;; Return value:  Size  Location     Type
 14559 ;;                  1    wreg      void 
 14560 ;; Registers used:
 14561 ;;		None
 14562 ;; Tracked objects:
 14563 ;;		On entry : 0/0
 14564 ;;		On exit  : 3F/39
 14565 ;;		Unchanged: 0/0
 14566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14571 ;;Total ram usage:        0 bytes
 14572 ;; Hardware stack levels used:    1
 14573 ;; This function calls:
 14574 ;;		Nothing
 14575 ;; This function is called by:
 14576 ;;		Interrupt level 2
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           	psect	text98
 14581  005A30                     __ptext98:
 14582                           	opt callstack 0
 14583  005A30                     _DMA1_DMADCNT_ISR:
 14584                           	opt callstack 19
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;incstack = 0
 14588  005A30  EE13  F150         	lfsr	1,___inthi_sp
 14589                           
 14590                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 14591  005A34  0139               	movlb	57	; () banked
 14592  005A36  93A2               	bcf	162,1,b	;volatile
 14593                           
 14594                           ; BSR set to: 57
 14595  005A38  0011               	retfie		f
 14596  005A3A                     __end_of_DMA1_DMADCNT_ISR:
 14597                           	opt callstack 0
 14598                           
 14599 ;; *************** function _DMA1_DMAA_ISR *****************
 14600 ;; Defined at:
 14601 ;;		line 143 in file "mcc_generated_files/dma1.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;		None
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  1    wreg      void 
 14608 ;; Registers used:
 14609 ;;		None
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 3F/39
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14619 ;;Total ram usage:        0 bytes
 14620 ;; Hardware stack levels used:    1
 14621 ;; This function calls:
 14622 ;;		Nothing
 14623 ;; This function is called by:
 14624 ;;		Interrupt level 2
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           	psect	text99
 14629  005A3C                     __ptext99:
 14630                           	opt callstack 0
 14631  005A3C                     _DMA1_DMAA_ISR:
 14632                           	opt callstack 19
 14633                           
 14634                           ; BSR set to: 57
 14635                           ;incstack = 0
 14636  005A3C  EE13  F150         	lfsr	1,___inthi_sp
 14637                           
 14638                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14639  005A40  0139               	movlb	57	; () banked
 14640  005A42  97A2               	bcf	162,3,b	;volatile
 14641                           
 14642                           ; BSR set to: 57
 14643  005A44  0011               	retfie		f
 14644  005A46                     __end_of_DMA1_DMAA_ISR:
 14645                           	opt callstack 0
 14646                           
 14647 ;; *************** function _DMA1_DMAOR_ISR *****************
 14648 ;; Defined at:
 14649 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14650 ;; Parameters:    Size  Location     Type
 14651 ;;		None
 14652 ;; Auto vars:     Size  Location     Type
 14653 ;;		None
 14654 ;; Return value:  Size  Location     Type
 14655 ;;                  1    wreg      void 
 14656 ;; Registers used:
 14657 ;;		None
 14658 ;; Tracked objects:
 14659 ;;		On entry : 0/0
 14660 ;;		On exit  : 3F/39
 14661 ;;		Unchanged: 0/0
 14662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14667 ;;Total ram usage:        0 bytes
 14668 ;; Hardware stack levels used:    1
 14669 ;; This function calls:
 14670 ;;		Nothing
 14671 ;; This function is called by:
 14672 ;;		Interrupt level 2
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text100
 14677  005A48                     __ptext100:
 14678                           	opt callstack 0
 14679  005A48                     _DMA1_DMAOR_ISR:
 14680                           	opt callstack 19
 14681                           
 14682                           ; BSR set to: 57
 14683                           ;incstack = 0
 14684  005A48  EE13  F150         	lfsr	1,___inthi_sp
 14685                           
 14686                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14687  005A4C  0139               	movlb	57	; () banked
 14688  005A4E  95A2               	bcf	162,2,b	;volatile
 14689                           
 14690                           ; BSR set to: 57
 14691  005A50  0011               	retfie		f
 14692  005A52                     __end_of_DMA1_DMAOR_ISR:
 14693                           	opt callstack 0
 14694                           
 14695 ;; *************** function _TMR5_ISR *****************
 14696 ;; Defined at:
 14697 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;		None
 14700 ;; Auto vars:     Size  Location     Type
 14701 ;;		None
 14702 ;; Return value:  Size  Location     Type
 14703 ;;                  1    wreg      void 
 14704 ;; Registers used:
 14705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 14706 ;; Tracked objects:
 14707 ;;		On entry : 0/0
 14708 ;;		On exit  : 0/0
 14709 ;;		Unchanged: 0/0
 14710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14715 ;;Total ram usage:        1 bytes
 14716 ;; Hardware stack levels used:    1
 14717 ;; Hardware stack levels required when called:    2
 14718 ;; This function calls:
 14719 ;;		_TMR5_CallBack
 14720 ;;		_TMR5_WriteTimer
 14721 ;; This function is called by:
 14722 ;;		Interrupt level 2
 14723 ;; This function uses a non-reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text101
 14727  005314                     __ptext101:
 14728                           	opt callstack 0
 14729  005314                     _TMR5_ISR:
 14730                           	opt callstack 17
 14731                           
 14732                           ; BSR set to: 57
 14733                           ;incstack = 0
 14734  005314  0060  F118  F05C   	movff	btemp+11,??_TMR5_ISR
 14735  00531A  EE13  F150         	lfsr	1,___inthi_sp
 14736                           
 14737                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 14738  00531E  0139               	movlb	57	; () banked
 14739  005320  9DA8               	bcf	168,6,b	;volatile
 14740                           
 14741                           ; BSR set to: 57
 14742                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 14743  005322  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 14744  005328  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 14745  00532E  EC2B  F029         	call	_TMR5_WriteTimer	;wreg free
 14746                           
 14747                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 14748  005332  4A29               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 14749  005334  2A2A               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 14750  005336  502A               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 14751  005338  E104               	bnz	i2u415_40
 14752  00533A  0E32               	movlw	50
 14753  00533C  5C29               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 14754  00533E  A0D8               	btfss	status,0,c
 14755  005340  D004               	goto	i2l1135
 14756  005342                     i2u415_40:
 14757                           
 14758                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 14759  005342  ECC7  F02B         	call	_TMR5_CallBack	;wreg free
 14760                           
 14761                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 14762  005346  6A29               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 14763  005348  6A2A               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 14764  00534A                     i2l1135:
 14765  00534A  0060  F170  F046   	movff	??_TMR5_ISR,btemp+11
 14766  005350  0011               	retfie		f
 14767  005352                     __end_of_TMR5_ISR:
 14768                           	opt callstack 0
 14769                           
 14770 ;; *************** function _TMR5_WriteTimer *****************
 14771 ;; Defined at:
 14772 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;  timerVal        2  [STACK] unsigned short 
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;		None
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  1  [STACK] void 
 14779 ;; Registers used:
 14780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14781 ;; Tracked objects:
 14782 ;;		On entry : 3F/39
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;Total ram usage:        0 bytes
 14791 ;; Hardware stack levels used:    1
 14792 ;; This function calls:
 14793 ;;		Nothing
 14794 ;; This function is called by:
 14795 ;;		_TMR5_ISR
 14796 ;; This function uses a reentrant model
 14797 ;;
 14798                           
 14799                           	psect	text102
 14800  005256                     __ptext102:
 14801                           	opt callstack 0
 14802  005256                     _TMR5_WriteTimer:
 14803                           	opt callstack 18
 14804                           
 14805                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 14806                           
 14807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14808                           ;incstack = 0
 14809  005256  A49A               	btfss	16282,2,c	;volatile
 14810  005258  D00F               	goto	l3786
 14811                           
 14812                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 14813  00525A  909A               	bcf	16282,0,c	;volatile
 14814                           
 14815                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 14816                           ;stkvar	_timerVal @ sp[(0)+-2]
 14817  00525C  0EFF               	movlw	255
 14818  00525E  24E1               	addwf	fsr1l,w,c
 14819  005260  6ED9               	movwf	fsr2l,c
 14820  005262  0EFF               	movlw	255
 14821  005264  20E2               	addwfc	fsr1h,w,c
 14822  005266  6EDA               	movwf	fsr2h,c
 14823  005268  50DF               	movf	indf2,w,c
 14824  00526A  6E99               	movwf	16281,c	;volatile
 14825                           
 14826                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 14827                           ;stkvar	_timerVal @ sp[(0)+-2]
 14828  00526C  0EFE               	movlw	-2
 14829  00526E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14830                           
 14831                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 14832  005274  809A               	bsf	16282,0,c	;volatile
 14833                           
 14834                           ;mcc_generated_files/tmr5.c: 141:  } else {
 14835  005276  D00C               	goto	l1118
 14836  005278                     l3786:
 14837                           
 14838                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 14839                           ;stkvar	_timerVal @ sp[(0)+-2]
 14840  005278  0EFF               	movlw	255
 14841  00527A  24E1               	addwf	fsr1l,w,c
 14842  00527C  6ED9               	movwf	fsr2l,c
 14843  00527E  0EFF               	movlw	255
 14844  005280  20E2               	addwfc	fsr1h,w,c
 14845  005282  6EDA               	movwf	fsr2h,c
 14846  005284  50DF               	movf	indf2,w,c
 14847  005286  6E99               	movwf	16281,c	;volatile
 14848                           
 14849                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 14850                           ;stkvar	_timerVal @ sp[(0)+-2]
 14851  005288  0EFE               	movlw	-2
 14852  00528A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14853  005290                     l1118:
 14854                           
 14855                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 14856  005290  52E5               	movf	postdec1,f,c
 14857  005292  52E5               	movf	postdec1,f,c
 14858  005294  0012               	return		;funcret
 14859  005296                     __end_of_TMR5_WriteTimer:
 14860                           	opt callstack 0
 14861                           
 14862 ;; *************** function _TMR5_CallBack *****************
 14863 ;; Defined at:
 14864 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 14865 ;; Parameters:    Size  Location     Type
 14866 ;;		None
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;		None
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  1  [STACK] void 
 14871 ;; Registers used:
 14872 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 14873 ;; Tracked objects:
 14874 ;;		On entry : 0/39
 14875 ;;		On exit  : 0/0
 14876 ;;		Unchanged: 0/0
 14877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14882 ;;Total ram usage:        0 bytes
 14883 ;; Hardware stack levels used:    1
 14884 ;; Hardware stack levels required when called:    1
 14885 ;; This function calls:
 14886 ;;		Absolute function
 14887 ;;		_TMR5_DefaultInterruptHandler
 14888 ;; This function is called by:
 14889 ;;		_TMR5_ISR
 14890 ;; This function uses a reentrant model
 14891 ;;
 14892                           
 14893                           	psect	text103
 14894  00578E                     __ptext103:
 14895                           	opt callstack 0
 14896  00578E                     _TMR5_CallBack:
 14897                           	opt callstack 17
 14898                           
 14899                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 14900                           
 14901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14902                           ;incstack = 0
 14903  00578E  0100               	movlb	0	; () banked
 14904  005790  5189               	movf	_TMR5_InterruptHandler& (0+255),w,b
 14905  005792  118A               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 14906  005794  118B               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 14907  005796  B4D8               	btfsc	status,2,c
 14908  005798  0012               	return	
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 14912  00579A  D801               	call	u401_48
 14913  00579C  0012               	return	
 14914  00579E                     u401_48:
 14915  00579E  0005               	push	
 14916  0057A0  6EFA               	movwf	pclath,c
 14917  0057A2  5189               	movf	_TMR5_InterruptHandler& (0+255),w,b
 14918  0057A4  6EFD               	movwf	tosl,c
 14919  0057A6  518A               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 14920  0057A8  6EFE               	movwf	tosh,c
 14921  0057AA  518B               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 14922  0057AC  6EFF               	movwf	tosu,c
 14923  0057AE  50FA               	movf	pclath,w,c
 14924  0057B0  0012               	return		;indir
 14925  0057B2                     __end_of_TMR5_CallBack:
 14926                           	opt callstack 0
 14927                           
 14928 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 14929 ;; Defined at:
 14930 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 14931 ;; Parameters:    Size  Location     Type
 14932 ;;		None
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;		None
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  1  [STACK] void 
 14937 ;; Registers used:
 14938 ;;		wreg, status,2, status,0, btemp+11
 14939 ;; Tracked objects:
 14940 ;;		On entry : 3F/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;Total ram usage:        0 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; This function calls:
 14951 ;;		Nothing
 14952 ;; This function is called by:
 14953 ;;		_TMR5_Initialize
 14954 ;;		_TMR5_CallBack
 14955 ;; This function uses a reentrant model
 14956 ;;
 14957                           
 14958                           	psect	text104
 14959  005966                     __ptext104:
 14960                           	opt callstack 0
 14961  005966                     _TMR5_DefaultInterruptHandler:
 14962                           	opt callstack 17
 14963                           
 14964                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 14965                           
 14966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14967                           ;incstack = 0
 14968  005966  A0BE               	btfss	16318,0,c	;volatile
 14969  005968  D002               	goto	u394_40
 14970  00596A  0E01               	movlw	1
 14971  00596C  D001               	goto	u394_46
 14972  00596E                     u394_40:
 14973  00596E  0E00               	movlw	0
 14974  005970                     u394_46:
 14975  005970  0AFF               	xorlw	255
 14976  005972  6E46               	movwf	btemp+11,c
 14977  005974  50BE               	movf	16318,w,c	;volatile
 14978  005976  1846               	xorwf	btemp+11,w,c
 14979  005978  0BFE               	andlw	-2
 14980  00597A  1846               	xorwf	btemp+11,w,c
 14981  00597C  6EBE               	movwf	16318,c	;volatile
 14982                           
 14983                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14984  00597E  0012               	return		;funcret
 14985  005980                     __end_of_TMR5_DefaultInterruptHandler:
 14986                           	opt callstack 0
 14987                           
 14988                           ;
 14989                           ; Interrupt Vector Table @ 0x8
 14990                           ;
 14991                           
 14992                           	psect	ivt0x8
 14993  000008                     __pivt0x8:
 14994                           	opt callstack 0
 14995  000008                     ivt0x8_base:
 14996                           	opt callstack 0
 14997                           
 14998                           ; Vector 0 : SWINT
 14999  000008  169C               	dw	_Default_ISR shr (0+2)
 15000                           
 15001                           ; Vector 1 : HLVD
 15002  00000A  169C               	dw	_Default_ISR shr (0+2)
 15003                           
 15004                           ; Vector 2 : OSF
 15005  00000C  169C               	dw	_Default_ISR shr (0+2)
 15006                           
 15007                           ; Vector 3 : CSW
 15008  00000E  169C               	dw	_Default_ISR shr (0+2)
 15009                           
 15010                           ; Vector 4 : NVM
 15011  000010  169C               	dw	_Default_ISR shr (0+2)
 15012                           
 15013                           ; Vector 5 : SCAN
 15014  000012  169C               	dw	_Default_ISR shr (0+2)
 15015                           
 15016                           ; Vector 6 : CRC
 15017  000014  169C               	dw	_Default_ISR shr (0+2)
 15018                           
 15019                           ; Vector 7 : IOC
 15020  000016  169C               	dw	_Default_ISR shr (0+2)
 15021                           
 15022                           ; Vector 8 : INT0
 15023  000018  167A               	dw	_INT0_ISR shr (0+2)
 15024                           
 15025                           ; Vector 9 : ZCD
 15026  00001A  169C               	dw	_Default_ISR shr (0+2)
 15027                           
 15028                           ; Vector 10 : AD
 15029  00001C  1525               	dw	_ADCC_ISR shr (0+2)
 15030                           
 15031                           ; Vector 11 : ADT
 15032  00001E  169C               	dw	_Default_ISR shr (0+2)
 15033                           
 15034                           ; Vector 12 : CMP1
 15035  000020  169C               	dw	_Default_ISR shr (0+2)
 15036                           
 15037                           ; Vector 13 : SMT1
 15038  000022  169C               	dw	_Default_ISR shr (0+2)
 15039                           
 15040                           ; Vector 14 : SMT1PRA
 15041  000024  169C               	dw	_Default_ISR shr (0+2)
 15042                           
 15043                           ; Vector 15 : SMT1PRW
 15044  000026  169C               	dw	_Default_ISR shr (0+2)
 15045                           
 15046                           ; Vector 16 : DMA1SCNT
 15047  000028  1686               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 15048                           
 15049                           ; Vector 17 : DMA1DCNT
 15050  00002A  168C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 15051                           
 15052                           ; Vector 18 : DMA1OR
 15053  00002C  1692               	dw	_DMA1_DMAOR_ISR shr (0+2)
 15054                           
 15055                           ; Vector 19 : DMA1A
 15056  00002E  168F               	dw	_DMA1_DMAA_ISR shr (0+2)
 15057                           
 15058                           ; Vector 20 : SPI1RX
 15059  000030  169C               	dw	_Default_ISR shr (0+2)
 15060                           
 15061                           ; Vector 21 : SPI1TX
 15062  000032  169C               	dw	_Default_ISR shr (0+2)
 15063                           
 15064                           ; Vector 22 : SPI1
 15065  000034  169C               	dw	_Default_ISR shr (0+2)
 15066                           
 15067                           ; Vector 23 : I2C1RX
 15068  000036  169C               	dw	_Default_ISR shr (0+2)
 15069                           
 15070                           ; Vector 24 : I2C1TX
 15071  000038  169C               	dw	_Default_ISR shr (0+2)
 15072                           
 15073                           ; Vector 25 : I2C1
 15074  00003A  169C               	dw	_Default_ISR shr (0+2)
 15075                           
 15076                           ; Vector 26 : I2C1E
 15077  00003C  169C               	dw	_Default_ISR shr (0+2)
 15078                           
 15079                           ; Vector 27 : U1RX
 15080  00003E  15C6               	dw	_UART1_rx_vect_isr shr (0+2)
 15081                           
 15082                           ; Vector 28 : U1TX
 15083  000040  15BC               	dw	_UART1_tx_vect_isr shr (0+2)
 15084                           
 15085                           ; Vector 29 : U1E
 15086  000042  169C               	dw	_Default_ISR shr (0+2)
 15087                           
 15088                           ; Vector 30 : U1
 15089  000044  169C               	dw	_Default_ISR shr (0+2)
 15090                           
 15091                           ; Vector 31 : TMR0
 15092  000046  169C               	dw	_Default_ISR shr (0+2)
 15093                           
 15094                           ; Vector 32 : TMR1
 15095  000048  169C               	dw	_Default_ISR shr (0+2)
 15096                           
 15097                           ; Vector 33 : TMR1G
 15098  00004A  169C               	dw	_Default_ISR shr (0+2)
 15099                           
 15100                           ; Vector 34 : TMR2
 15101  00004C  169C               	dw	_Default_ISR shr (0+2)
 15102                           
 15103                           ; Vector 35 : CCP1
 15104  00004E  169C               	dw	_Default_ISR shr (0+2)
 15105                           
 15106                           ; Vector 36 : Undefined
 15107  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15108                           
 15109                           ; Vector 37 : NCO1
 15110  000052  169C               	dw	_Default_ISR shr (0+2)
 15111                           
 15112                           ; Vector 38 : CWG1
 15113  000054  169C               	dw	_Default_ISR shr (0+2)
 15114                           
 15115                           ; Vector 39 : CLC1
 15116  000056  169C               	dw	_Default_ISR shr (0+2)
 15117                           
 15118                           ; Vector 40 : INT1
 15119  000058  167E               	dw	_INT1_ISR shr (0+2)
 15120                           
 15121                           ; Vector 41 : CMP2
 15122  00005A  169C               	dw	_Default_ISR shr (0+2)
 15123                           
 15124                           ; Vector 42 : DMA2SCNT
 15125  00005C  169C               	dw	_Default_ISR shr (0+2)
 15126                           
 15127                           ; Vector 43 : DMA2DCNT
 15128  00005E  169C               	dw	_Default_ISR shr (0+2)
 15129                           
 15130                           ; Vector 44 : DMA2OR
 15131  000060  169C               	dw	_Default_ISR shr (0+2)
 15132                           
 15133                           ; Vector 45 : DMA2A
 15134  000062  169C               	dw	_Default_ISR shr (0+2)
 15135                           
 15136                           ; Vector 46 : I2C2RX
 15137  000064  169C               	dw	_Default_ISR shr (0+2)
 15138                           
 15139                           ; Vector 47 : I2C2TX
 15140  000066  169C               	dw	_Default_ISR shr (0+2)
 15141                           
 15142                           ; Vector 48 : I2C2
 15143  000068  169C               	dw	_Default_ISR shr (0+2)
 15144                           
 15145                           ; Vector 49 : I2C2E
 15146  00006A  169C               	dw	_Default_ISR shr (0+2)
 15147                           
 15148                           ; Vector 50 : U2RX
 15149  00006C  15DA               	dw	_UART2_rx_vect_isr shr (0+2)
 15150                           
 15151                           ; Vector 51 : U2TX
 15152  00006E  15D0               	dw	_UART2_tx_vect_isr shr (0+2)
 15153                           
 15154                           ; Vector 52 : U2E
 15155  000070  169C               	dw	_Default_ISR shr (0+2)
 15156                           
 15157                           ; Vector 53 : U2
 15158  000072  169C               	dw	_Default_ISR shr (0+2)
 15159                           
 15160                           ; Vector 54 : TMR3
 15161  000074  169C               	dw	_Default_ISR shr (0+2)
 15162                           
 15163                           ; Vector 55 : TMR3G
 15164  000076  169C               	dw	_Default_ISR shr (0+2)
 15165                           
 15166                           ; Vector 56 : TMR4
 15167  000078  169C               	dw	_Default_ISR shr (0+2)
 15168                           
 15169                           ; Vector 57 : CCP2
 15170  00007A  169C               	dw	_Default_ISR shr (0+2)
 15171                           
 15172                           ; Vector 58 : Undefined
 15173  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15174                           
 15175                           ; Vector 59 : CWG2
 15176  00007E  169C               	dw	_Default_ISR shr (0+2)
 15177                           
 15178                           ; Vector 60 : CLC2
 15179  000080  169C               	dw	_Default_ISR shr (0+2)
 15180                           
 15181                           ; Vector 61 : INT2
 15182  000082  1682               	dw	_INT2_ISR shr (0+2)
 15183                           
 15184                           ; Vector 62 : Undefined
 15185  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15186                           
 15187                           ; Vector 63 : Undefined
 15188  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15189                           
 15190                           ; Vector 64 : Undefined
 15191  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15192                           
 15193                           ; Vector 65 : Undefined
 15194  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15195                           
 15196                           ; Vector 66 : Undefined
 15197  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15198                           
 15199                           ; Vector 67 : Undefined
 15200  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15201                           
 15202                           ; Vector 68 : Undefined
 15203  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15204                           
 15205                           ; Vector 69 : Undefined
 15206  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15207                           
 15208                           ; Vector 70 : TMR5
 15209  000094  14C5               	dw	_TMR5_ISR shr (0+2)
 15210                           
 15211                           ; Vector 71 : TMR5G
 15212  000096  169C               	dw	_Default_ISR shr (0+2)
 15213                           
 15214                           ; Vector 72 : TMR6
 15215  000098  1653               	dw	_TMR6_ISR shr (0+2)
 15216                           
 15217                           ; Vector 73 : CCP3
 15218  00009A  169C               	dw	_Default_ISR shr (0+2)
 15219                           
 15220                           ; Vector 74 : CWG3
 15221  00009C  169C               	dw	_Default_ISR shr (0+2)
 15222                           
 15223                           ; Vector 75 : CLC3
 15224  00009E  169C               	dw	_Default_ISR shr (0+2)
 15225                           
 15226                           ; Vector 76 : Undefined
 15227  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15228                           
 15229                           ; Vector 77 : Undefined
 15230  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15231                           
 15232                           ; Vector 78 : Undefined
 15233  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15234                           
 15235                           ; Vector 79 : Undefined
 15236  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15237                           
 15238                           ; Vector 80 : CCP4
 15239  0000A8  169C               	dw	_Default_ISR shr (0+2)
 15240                           
 15241                           ; Vector 81 : CLC4
 15242  0000AA  169C               	dw	_Default_ISR shr (0+2)
 15243  0000AC                     ivt0x8_undefint:
 15244                           	opt callstack 0
 15245  0000AC  00FF               	reset	
 15246                           
 15247                           	psect	text105
 15248  000000                     __ptext105:
 15249                           	opt callstack 0
 15250                           
 15251                           	psect	rparam
 15252  0000                     
 15253                           	psect	temp
 15254  00003B                     btemp:
 15255                           	opt callstack 0
 15256  00003B                     	ds	32
 15257  0000                     wtemp0	set	btemp
 15258  0000                     wtemp1	set	btemp+2
 15259  0000                     wtemp2	set	btemp+4
 15260  0000                     wtemp3	set	btemp+6
 15261  0000                     wtemp4	set	btemp+8
 15262  0000                     wtemp5	set	btemp+10
 15263  0000                     wtemp8	set	btemp+1
 15264  0000                     ttemp0	set	btemp
 15265  0000                     ttemp1	set	btemp+3
 15266  0000                     ttemp2	set	btemp+6
 15267  0000                     ttemp3	set	btemp+9
 15268  0000                     ttemp5	set	btemp+1
 15269  0000                     ttemp6	set	btemp+4
 15270  0000                     ttemp7	set	btemp+8
 15271  0000                     ltemp0	set	btemp
 15272  0000                     ltemp1	set	btemp+4
 15273  0000                     ltemp2	set	btemp+8
 15274  0000                     lltemp0	set	btemp
 15275  0000                     lltemp1	set	btemp+8
 15276  0000                     lltemp2	set	btemp+16
 15277  0000                     lltemp3	set	btemp+24
 15278                           tosu	equ	0x3FFF
 15279                           tosh	equ	0x3FFE
 15280                           tosl	equ	0x3FFD
 15281                           stkptr	equ	0x3FFC
 15282                           pclatu	equ	0x3FFB
 15283                           pclath	equ	0x3FFA
 15284                           pcl	equ	0x3FF9
 15285                           tblptru	equ	0x3FF8
 15286                           tblptrh	equ	0x3FF7
 15287                           tblptrl	equ	0x3FF6
 15288                           tablat	equ	0x3FF5
 15289                           prodh	equ	0x3FF4
 15290                           prodl	equ	0x3FF3
 15291                           indf0	equ	0x3FEF
 15292                           postinc0	equ	0x3FEE
 15293                           postdec0	equ	0x3FED
 15294                           preinc0	equ	0x3FEC
 15295                           plusw0	equ	0x3FEB
 15296                           fsr0h	equ	0x3FEA
 15297                           fsr0l	equ	0x3FE9
 15298                           wreg	equ	0x3FE8
 15299                           indf1	equ	0x3FE7
 15300                           postinc1	equ	0x3FE6
 15301                           postdec1	equ	0x3FE5
 15302                           preinc1	equ	0x3FE4
 15303                           plusw1	equ	0x3FE3
 15304                           fsr1h	equ	0x3FE2
 15305                           fsr1l	equ	0x3FE1
 15306                           bsr	equ	0x3FE0
 15307                           indf2	equ	0x3FDF
 15308                           postinc2	equ	0x3FDE
 15309                           postdec2	equ	0x3FDD
 15310                           preinc2	equ	0x3FDC
 15311                           plusw2	equ	0x3FDB
 15312                           fsr2h	equ	0x3FDA
 15313                           fsr2l	equ	0x3FD9
 15314                           status	equ	0x3FD8


Data Sizes:
    Strings     173
    Constant    0
    Data        346
    BSS         614
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      61
    BANK0           160      0     157
    BANK1           256      0     242
    BANK2           256      0     256
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK0[16]), H12(BANK1[30]), 
		 -> H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[20]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[20]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[86]), 

    a	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[86]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_11(CODE[21]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), 
		 -> STR_7(CODE[20]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4323_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[20]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[20]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[86]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16608.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16608.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK0[16]), H12(BANK1[30]), 
		 -> H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK0[16]), H12(BANK1[30]), 
		 -> H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK0[16]), H12(BANK1[30]), 
		 -> H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    S3641response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    block.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    S3641response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK0[16]), H12(BANK1[30]), 
		 -> H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK0[16]), H12(BANK1[30]), 
		 -> H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H27(BANK1[30]), H24(BANK1[27]), H18(BANK1[21]), 
		 -> H17(BANK1[20]), H14(BANK1[17]), H13(BANK0[16]), H12(BANK1[30]), 
		 -> H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   40493
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           9     8      1    1796
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     643
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      15
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9D       5       98.1%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C2      58        0.0%
DATA                 0      0     3C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 12 01:07:47 2019

                    _SPI1_Exchange8bit 58BE                                      _V 0090  
     __end_of_TMR5_SetInterruptHandler 564E                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 015F  
                                  _H13 00ED                                    _H14 01C1  
                                  _H24 017D                                    _H17 01AD  
                                  _H18 0198                                    _H27 0141  
                                  _H53 0386                                    l194 59BE  
                                  l572 52FE                                    l717 5438  
                                  l579 52AC                                    l597 540C  
                                  l847 58CC                                    _GIE 01FE97  
                                  u940 4E86                                    u965 4EBA  
                                  u966 4EBC                                    u958 4E88  
                                  _abs 5142                                    _pad 4286  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 57F6  
                         _run_checksum 538E                     _UART1_Transmit_ISR 53E6  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5818  
                         __CFG_ZCD$OFF 000000                                   l1118 5290  
                                 l1312 500E                                   l1240 2B9A  
                                 l1241 2B9C                                   l1250 2CCA  
                                 l1235 2B62                                   l1219 2AC0  
                                 l1244 2BA0                                   l1249 2C9A  
                                 l1444 496E                                   l1524 305A  
                                 l2431 5182                                   l1448 4D0E  
                                 l1570 3726                                   l2453 449C  
                                 l1717 33DA                                   l1557 35B8  
                                 l1670 42E2                                   l1590 40EC  
                                 l1736 2554                                   l1568 36FA  
                                 l1690 263C                                   l5132 57CC  
                                 l2485 427C                                   l5080 5460  
                                 l5250 52D6                                   l5066 52CC  
                                 l5402 3DF6                                   l7002 37FA  
                                 l5068 52CE                                   l5420 3E6E  
                                 l7004 383C                                   l4630 499C  
                                 l5280 51FE                                   l4632 49BE  
                                 l5408 3E14                                   l7104 2B6A  
                                 l7032 29EE                                   l5610 5434  
                                 l6402 42DA                                   l5418 3E36  
                                 l5370 3D62                                   l5276 51D4  
                                 l5620 58BA                                   l6412 4372  
                                 l6404 42EC                                   l6420 4D34  
                                 l4708 3A20                                   l4900 418A  
                                 l5348 539C                                   l5460 3EE0  
                                 l5444 3EC2                                   l5436 3E8C  
                                 l5356 3D24                                   l7132 2C58  
                                 l7124 2BEE                                   l7044 2A20  
                                 l6422 4D60                                   l5286 547E  
                                 l5438 3EA6                                   l5382 3D9E  
                                 l7126 2C20                                   l6408 4328  
                                 l4744 3C64                                   l4736 3BB8  
                                 l4728 3B30                                   l4672 5172  
                                 l6520 3410                                   l6504 335C  
                                 l6600 2492                                   l5376 3D80  
                                 l5472 3F00                                   l7072 2ACA  
                                 l3786 5278                                   l4690 3908  
                                 l6610 24EA                                   l5802 3284  
                                 l5474 3F26                                   l7146 2C86  
                                 l7138 2C72                                   l7090 2B30  
                                 l4684 38B4                                   l6524 344C  
                                 l5804 3288                                   l5732 30B0  
                                 l5724 3080                                   l5708 3024  
                                 l5388 3DBC                                   l7156 2C9E  
                                 l6454 2676                                   l6446 262C  
                                 l6542 356E                                   l6534 3506  
                                 l6606 24E6                                   l5750 310E  
                                 l5734 30BC                                   l5814 329C  
                                 l7094 2B38                                   l6392 4C3A  
                                 l4696 394E                                   l6528 347C  
                                 l6616 2506                                   l5808 3294  
                                 l5816 32DE                                   l7088 2B2C  
                                 l6378 43CA                                   l6458 2694  
                                 l6538 3532                                   l6650 2EF4  
                                 l5770 31DC                                   l5762 318E  
                                 l5754 3132                                   l5746 30F0  
                                 l7098 2B52                                   l5588 5408  
                                 l6388 4BFC                                   l6492 2994  
                                 l6468 28A6                                   l6644 2E8A  
                                 l5772 31E0                                   l5598 589A  
                                 l6398 42B2                                   l6590 23EA  
                                 l6574 2272                                   l6566 218E  
                                 l6670 4B6E                                   l6638 2DCC  
                                 l5782 3204                                   l5758 315E  
                                 l6488 2958                                   l4896 415A  
                                 l6672 4BB0                                   l4992 5020  
                                 l6578 22C4                                   l6658 2FA2  
                                 l6754 4B04                                   l5798 326E  
                                 l6694 467C                                   l6782 406A  
                                 l6774 3FBC                                   l6950 3680  
                                 l6934 3614                                   l6926 35E4  
                                 l6952 368C                                   l6936 3626  
                                 l6698 46EE                                   l6794 40BE  
                                 l6786 4084                                   l6970 3778  
                                 l6946 3668                                   l6796 40E6  
                                 l6980 379C                                   l6990 37CA  
                                 l6974 3780                                   l6966 3764  
                                 l6992 37D8                                   l6994 37DC  
                                 l6996 37E4                                   l6998 37EC  
                                 STR_1 205F                                   STR_2 208D  
                                 STR_3 209F                                   STR_4 2070  
                                 STR_5 207F                                   STR_6 2099  
                                 STR_7 2016                                   STR_8 202A  
                                 STR_9 204E                                   u2000 3A58  
                                 u2020 3AAA                                   u2110 3C9C  
                                 u2130 3CEE                                   u2050 3B2A  
                                 _LATA 003FBA                                   u2070 3B80  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2080 3BB2                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2090 3BE4  
                                 _LATF 003FBF                                   u3055 322E  
                                 u3065 323E                                   u3057 3232  
                                 u3075 324E                                   u3067 3242  
                                 u3420 43BE                                   u3077 3252  
                                 u1910 5156                                   u2470 4232  
                                 u3440 443A                                   u1840 49EC  
                                 u3600 28BA                                   u3520 258E  
                                 u4160 2A06                                   u1930 38AE  
                                 u3530 2590                                   u3611 28EA  
                                 u3620 2900                                   u3621 28FE  
                                 u1950 3904                                   u3630 2914  
                                 u3550 2600                                   u1847 49DE  
                                 u3640 2918                                   u4168 2A08  
                                 u1961 390E                                   u1970 3948  
                                 u3570 2612                                   u3730 3472  
                                 u3810 21DE                                   _T6PR 003F93  
                                 u1980 397A                                   u3660 292E  
                                 u3740 34B8                                   u3900 3016  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u3590 2662                                   u3830 231C  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u3770 3594                                   _PMD6 0039C6  
                                 u3747 34AA                                   _PMD7 0039C7  
                                 u3950 4AF4                                   u3960 3FB6  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 583A  
                     __end_of_ADCC_ISR 54BE                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01D2                                   _ctoa 4D16  
                                 _main 29DE                                   _dtoa 255E  
                                 _prec 0025                                   _nout 008C  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 32F0  
                                 btemp 003B      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 002B              __end_of_SPI1_Exchange8bit 58DC  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5718  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005B             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 59F6                       __end_of_INT1_ISR 5A06  
                     __end_of_INT2_ISR 5A16         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 4976          __end_of_OSCILLATOR_Initialize 59C4  
                                PRLOCK 0039EF                        __end_of___aodiv 3AD2  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 3D12  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 203D                                  STR_11 2001  
                                STR_12 2096                                  STR_21 20A8  
                                STR_13 20AB                                  STR_15 20A5  
                                STR_17 20A5                          __CFG_WDTE$OFF 000000  
                                STR_19 20A8                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005B                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 5A70  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 56F0  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5352  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 5966  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002E  
                                _flags 0027                                  _fputc 439A  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 4BEC  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005B  
                                _width 0023                                  _putch 5930  
             _INT1_SetInterruptHandler 5676                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003B                                  ltemp1 003F  
                                ltemp2 0043               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 003B  
                                ttemp1 003E                                  ttemp2 0041  
                                ttemp3 0044                                  ttemp5 003C  
                                ttemp6 003F                                  ttemp7 0043  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 55D6  
          _UART1_SetRxInterruptHandler 55AE                                  wtemp0 003B  
                                wtemp1 003D                                  wtemp2 003F  
                                wtemp3 0041                                  wtemp4 0043  
                                wtemp5 0045                                  wtemp8 003C  
                      __end_of_sprintf 48CC                        __end_of_strncmp 4286  
                  ??_UART1_tx_vect_isr 005B              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 573E               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 5188                  __end_of_ringBufS_init 5536  
                      __initialization 4734                      _UART2_rx_vect_isr 5768  
                         __end_of_ctoa 4D9E                           __end_of_main 2D34  
                         __end_of_dtoa 29DE                           __end_of_stoa 35AE  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005B  
             _TMR5_SetInterruptHandler 5626                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005B              __end_of_UART1_tx_vect_isr 5716  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 55D6  
                     _UART1_Initialize 4EDE                      _UART2_tx_vect_isr 5740  
                   _UART2_Transmit_ISR 5412                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005B  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u112_48 5804                                 i2l1135 534A  
                               u114_48 5826                         __CFG_WDTCCS$SC 000000  
                               u116_48 5848                                 u401_48 579E  
                               _SCANPR 0039F7                                 u291_48 586A  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               u394_40 596E                                 u394_46 5970  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 50AC  
                  ??_UART2_tx_vect_isr 005B              __end_of_UART2_rx_vect_isr 578E  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5A26  
                     _UART2_Initialize 4FA4                                 _WaitMs 5468  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4C84                                 _memset 2D34  
                               clear_0 47B4                                 clear_1 47C2  
                               clear_2 47D4                                 clear_3 47E0  
                               clear_4 47EC                                 _printf 4F42  
                   _eaDogM_WriteString 4AB8                              ?_ADCC_ISR 005B  
                               _strlen 4976                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 50F8                         _PMD_Initialize 59C4  
 __end_of_INT2_DefaultInterruptHandler 5A7C  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 5A7A                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 5766                                 lltemp0 003B  
                               lltemp1 0043                                 lltemp2 004B  
                               lltemp3 0053                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 505E  
                     __end_of_vfprintf 4BEC                             _StartTimer 5352  
                      _CLC1_Initialize 57D4          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 51CE                      _SYSTEM_Initialize 5214  
                           __accesstop 0060                __end_of__initialization 47FE  
                            ?_INT0_ISR 005B                              ?_INT1_ISR 005B  
                            ?_INT2_ISR 005B              __end_of_CLKREF_Initialize 5A30  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 5256                 __end_of_ringBufS_flush 4D16  
                       __pcstackCOMRAM 005B                             ___inthi_sp 0D50  
                         __pidataBANK0 5980                           __pidataBANK1 4590  
                         __pidataBANK3 4D9E                              ?_TMR5_ISR 005B  
                            ?_TMR6_ISR 005B                         ivt0x8_undefint 00AC  
                        __end_of_fputc 44A6                          __end_of_fputs 4C84  
                __end_of_TMR5_CallBack 57B2                          __end_of_putch 594A  
              __end_of_TMR6_Initialize 55FE                 __end_of_PMD_Initialize 59D8  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005B  
                __end_of_TMR6_CallBack 587E            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 5A3C  
     __end_of_INT2_SetInterruptHandler 5676               _UART2_RxInterruptHandler 0017  
            __end_of_SYSTEM_Initialize 5256                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 5914  
                           __pbssBANK0 0060                             __pbssBANK1 01D2  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 0020                             ??_INT0_ISR 005B  
                           ??_INT1_ISR 005B                             ??_INT2_ISR 005B  
                    __end_of_TimerDone 57D4                       _DMA1_DMADCNT_ISR 5A30  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 58F8  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 5626  
              __end_of_ADCC_Initialize 5142                             ??_TMR5_ISR 005C  
                           ??_TMR6_ISR 005B                     __size_of_secs_send 01B8  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 587E                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005B                       _DMA1_DMASCNT_ISR 5A18  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 57F6  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005B                   __size_of_UART1_Write 003E  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 5930  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 5296  
                   __end_of_UART1_Read 5312      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 4F42                        __size_of_WaitMs 002A  
                              ___aodiv 3852                                ___aomod 3AD2  
            __end_of_UART1_Receive_ISR 589E                                uf407999 36AA  
                         __psmallconst 2000                   __end_of_init_display 4590  
                              __pcinit 4734                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 59D8                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 29DE                                __ptext1 35AE  
                              __ptext2 3F3E                                __ptext3 4662  
                              __ptext4 543E                                __ptext5 5A52  
                              __ptext6 3D12                                __ptext7 4804  
                              __ptext8 3020                                __ptext9 538E  
                    _UART2_Receive_ISR 589E                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                                us203999 3ABC  
                      __size_of_strlen 00A2                                us214999 3D00  
                              us351999 2578                  _OSCILLATOR_Initialize 59AE  
                              us279999 3F30                           __size_of_abs 0046  
                              _r_block 0060                                us368999 3302  
                         __size_of_pad 0114                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 5002  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 4804  
                              _strncmp 40F6                   end_of_initialization 47FE  
                    __end_of_secs_send 40F6               _INT2_SetInterruptHandler 564E  
             __size_of_secs_II_message 022C                             _r_protocol 3020  
  __end_of_UART1_SetTxInterruptHandler 55AE            _UART1_SetTxInterruptHandler 5586  
  __end_of_UART2_SetRxInterruptHandler 5586            _UART2_SetRxInterruptHandler 555E  
                           _t_protocol 35AE                      __end_of_vfpfcnvrt 255E  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 5A6E  
            __end_of_UART2_Receive_ISR 58BE                         wdtdelay@dcount 0085  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005C  
                       _block_checksum 4662                  _INT1_InterruptHandler 001D  
                            _PORTDbits 003FCD               _TMR6_SetInterruptHandler 55FE  
                _TMR5_InterruptHandler 0089   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 56EE  
          _ADCC_SetADIInterruptHandler 56C6                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 4E0E  
                      _SPI1_Initialize 5998                       _UART1_put_buffer 543E  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 5492  
         __end_of_INTERRUPT_Initialize 4EDE                 __end_of_block_checksum 4734  
 __end_of_INT0_DefaultInterruptHandler 5A78  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 5A76             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 5A7E                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3020                         __end_of_printf 4FA4  
             __end_of_DMA1_DMADCNT_ISR 5A3A                  __end_of_INT0_CallBack 5818  
                       __end_of_strlen 4A18                    start_initialization 4734  
 __end_of_TMR5_DefaultInterruptHandler 5980  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 5966        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 5188                  __end_of_INT1_CallBack 583A  
                          __end_of_pad 439A                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 550E                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 585C                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 5A26  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 5A48  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 57B2  
                        _ringBufS_init 550E                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00E6  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 50F8  
                      run_checksum@sum 008E        __end_of_eaDogM_WriteStringAtPos 53E6  
              __end_of_DMA1_Initialize 4E78                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 56C6                __end_of_SPI1_Initialize 59AE  
             _UART1_RxInterruptHandler 0011               _UART2_TxInterruptHandler 0014  
            __size_of_ringBufS_put_dma 00AA                           _init_display 44A6  
               __end_of_DMA1_DMAOR_ISR 5A52                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 001A                  _TMR6_InterruptHandler 0008  
               __size_of_TMR6_CallBack 0022                 _PIN_MANAGER_Initialize 4A18  
                 __end_of_wait_lcd_set 5A68                              __ptext100 5A48  
                            __ptext101 5314                              __ptext102 5256  
                            __ptext103 578E                              __ptext104 5966  
                            __ptext105 0000                     __end_of_StartTimer 538E  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5494                    __size_of_r_protocol 02D0  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 02A4  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 4E78  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005B                               _INT0_ISR 59E8  
                             _INT1_ISR 59F8                               _INT2_ISR 5A08  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 3F3E                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0343  
                            _ring_buf2 0300                               i2u323_48 5702  
                             i2u325_48 572A                               i2u415_40 5342  
                             i2u327_48 5752                               i2u159_48 54AA  
                             _PIR1bits 0039A1                               i2u329_48 577A  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5412                               _TMR5_ISR 5314  
                             _TMR6_ISR 594C                              _vfpfcnvrt 20B0  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 578E  
                            _start_lcd 5A68              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 585C               __end_of_UART1_put_buffer 5468  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 52D4               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4748  
                            copy_data1 476A                              copy_data2 478C  
             _INT0_SetInterruptHandler 569E                 _uart1TxBufferRemaining 0038  
  __end_of_UART2_SetTxInterruptHandler 555E            _UART2_SetTxInterruptHandler 5536  
                         _uart1RxCount 0035                           _uart2RxCount 002F  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 53BA  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 58DC                           _send_lcd_cmd 54E6  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 58F8                  __end_of_DMA1_DMAA_ISR 5A46  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005B  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 59E6  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005C  
                             __ptext10 5468                               __ptext11 57B2  
                             __ptext20 550E                               __ptext12 5352  
                             __ptext21 53BA                               __ptext13 5A5A  
                             __ptext30 2D34                               __ptext22 4AB8  
                             __ptext14 5296                               __ptext31 4F42  
                             __ptext23 59D8                               __ptext15 52D4  
                             __ptext40 4D16                               __ptext32 4B54  
                             __ptext24 505E                               __ptext16 44A6  
                             __ptext41 4286                               __ptext33 20B0  
                             __ptext25 5A62                               __ptext17 54BE  
                             __ptext50 555E                               __ptext42 4976  
                             __ptext34 40F6                               __ptext26 58DC  
                             __ptext18 54E6                               __ptext51 4EDE  
                             __ptext43 4BEC                               __ptext35 32F0  
                             __ptext27 5002                               __ptext19 58BE  
                             __ptext60 4A18                               __ptext52 5586  
                             __ptext44 439A                               __ptext36 255E  
                             __ptext28 5A68                               __ptext61 59AE  
                             __ptext53 55AE                               __ptext45 5930  
                             __ptext37 5142                               __ptext29 4C84  
                             __ptext70 5A26                               __ptext62 58F8  
                             __ptext54 55D6                               __ptext46 48CC  
                             __ptext38 3AD2                               __ptext71 57D4  
                             __ptext63 4E78                               __ptext55 55FE  
                             __ptext47 5214                               __ptext39 3852  
                             __ptext80 5A08                               __ptext72 50F8  
                             __ptext64 50AC                               __ptext56 5188  
                             __ptext48 4FA4                               __ptext81 583A  
                             __ptext73 56C6                               __ptext65 564E  
                             __ptext57 5626                               __ptext49 5536  
                             __ptext90 5740                               __ptext82 5A7A  
                             __ptext74 59E8                               __ptext66 5676  
                             __ptext58 5998                               __ptext91 5412  
                             __ptext83 5A70                               __ptext75 57F6  
                             __ptext67 569E                               __ptext59 59C4  
                             __ptext92 5768                               __ptext84 5494  
                             __ptext76 5A76                               __ptext68 5914  
                             __ptext93 589E                               __ptext85 5A7C  
                             __ptext77 59F8                               __ptext69 4E0E  
                             __ptext94 594C                               __ptext86 56F0  
                             __ptext78 5818                               __ptext95 585C  
                             __ptext87 53E6                               __ptext79 5A78  
                             __ptext96 51CE                               __ptext88 5718  
                             __ptext97 5A18                               __ptext89 587E  
                             __ptext98 5A30                               __ptext99 5A3C  
                      _secs_II_message 3D12               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 48CC                          __size_of_ctoa 0088  
                        __size_of_main 0356                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005B  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 000B                              stoa@F1142 00E6  
                   ??_DMA1_DMASCNT_ISR 005C                               _spi_link 006D  
                             _wdtdelay 5002             __end_of_UART2_Transmit_ISR 543E  
                             _vfprintf 4B54                      _UART1_is_rx_ready 5A5A  
                          _UART1_Write 5296   __end_of_INT1_DefaultInterruptHandler 5A7A  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 5A78  
                    _UART1_is_tx_ready 5A52                        r_protocol@retry 005D  
                        ??_Default_ISR 005B                     __end_of_r_protocol 32F0  
                          _uart1RxHead 0037                            _uart1TxHead 003A  
                          _uart2RxHead 0031                            _uart1RxTail 0036  
                          _uart2TxHead 0034                            _uart1TxTail 0039  
                          _uart2RxTail 0030                            _uart2TxTail 0033  
                         _wait_lcd_set 5A62                     _EXT_INT_Initialize 50AC  
 __end_of_TMR6_DefaultInterruptHandler 5214  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 51CE                     __end_of_t_protocol 3852  
 __end_of_ADCC_DefaultInterruptHandler 5A7E  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 5A7C                               intlevel2 0000  
                    _send_lcd_cmd_long 54BE                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 4B54                __end_of_NCO1_Initialize 5914  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 5A62  
                           _UART1_Read 52D4                 __size_of_INT1_CallBack 0022  
            __end_of_UART1_is_tx_ready 5A5A                 __size_of_INT2_CallBack 0022  
               _uart2TxBufferRemaining 0032                       _send_lcd_cmd_dma 505E  
                TMR5_ISR@CountCallBack 0029                __end_of_secs_II_message 3F3E  
     __end_of_INT1_SetInterruptHandler 569E              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 005C               _UART1_TxInterruptHandler 000E  
                      t_protocol@retry 002D              __end_of_send_lcd_cmd_long 54E6  
                  __end_of_Default_ISR 5A76         __end_of_PIN_MANAGER_Initialize 4AB8  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 53BA  
            __size_of_UART2_Initialize 005E  
